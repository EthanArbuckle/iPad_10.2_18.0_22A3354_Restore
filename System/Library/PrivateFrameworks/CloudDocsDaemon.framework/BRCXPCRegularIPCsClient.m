@implementation BRCXPCRegularIPCsClient

- (void)updateContainerMetadataForID:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  BRCXPCRegularIPCsClient *v12;
  int v13;
  void *v14;
  char v15;
  void *v16;
  void *v17;
  NSObject *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  NSObject *v24;
  _QWORD v25[4];
  NSObject *v26;
  NSObject *v27;
  BRCXPCRegularIPCsClient *v28;
  id v29;
  _QWORD v30[4];
  NSObject *v31;
  _QWORD v32[5];
  BRCXPCRegularIPCsClient *v33;
  uint64_t v34[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v36;
  __int16 v37;
  BRCXPCRegularIPCsClient *v38;
  __int16 v39;
  void *v40;
  __int16 v41;
  const char *v42;
  __int16 v43;
  id v44;
  __int16 v45;
  void *v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v34, 0, sizeof(v34));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient updateContainerMetadataForID:]", 1707, v34);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v34[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v36 = (BRCXPCRegularIPCsClient *)v7;
    v37 = 2112;
    v38 = self;
    v39 = 2112;
    v40 = v9;
    v41 = 2080;
    v42 = "-[BRCXPCRegularIPCsClient updateContainerMetadataForID:]";
    v43 = 2112;
    v44 = v4;
    v45 = 2112;
    v46 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  if (v4)
    v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v4);
  else
    v10 = 0;
  v11 = MEMORY[0x1E0C809B0];
  v32[0] = MEMORY[0x1E0C809B0];
  v32[1] = 3221225472;
  v32[2] = __56__BRCXPCRegularIPCsClient_updateContainerMetadataForID___block_invoke;
  v32[3] = &unk_1E875E948;
  v32[4] = self;
  v12 = (BRCXPCRegularIPCsClient *)v4;
  v33 = v12;
  v13 = _brc_ipc_check_applibrary_write_access(self, 1, v10, v32);

  if (v13)
  {
    if (v4
      && (-[BRCXPCClient entitledAppLibraryIDs](self, "entitledAppLibraryIDs"),
          v14 = (void *)objc_claimAutoreleasedReturnValue(),
          v15 = objc_msgSend(v14, "containsObject:", v12),
          v14,
          (v15 & 1) != 0))
    {
      -[BRCXPCClient bundleID](self, "bundleID");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[BRCXPCClient session](self, "session");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "appLibraryByID:", v12);
      v18 = objc_claimAutoreleasedReturnValue();

      if (v18)
      {
        BRCBundleServiceConnection();
        v30[0] = v11;
        v30[1] = 3221225472;
        v30[2] = __56__BRCXPCRegularIPCsClient_updateContainerMetadataForID___block_invoke_275;
        v30[3] = &unk_1E875D850;
        v19 = (id)objc_claimAutoreleasedReturnValue();
        v31 = v19;
        -[NSObject remoteObjectProxyWithErrorHandler:](v19, "remoteObjectProxyWithErrorHandler:", v30);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSObject containerMetadata](v18, "containerMetadata");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "versionNumberForBundleIdentifier:", v16);
        v22 = (void *)objc_claimAutoreleasedReturnValue();

        v25[0] = v11;
        v25[1] = 3221225472;
        v25[2] = __56__BRCXPCRegularIPCsClient_updateContainerMetadataForID___block_invoke_2;
        v25[3] = &unk_1E8766430;
        v23 = v19;
        v26 = v23;
        v27 = v18;
        v28 = self;
        v29 = v16;
        objc_msgSend(v20, "extractMetadataForContainerID:bundleID:minimumBundleVersion:reply:", v12, v29, v22, v25);

        v24 = v31;
      }
      else
      {
        brc_bread_crumbs();
        v23 = objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v24 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v24, (os_log_type_t)0x90u))
          -[BRCXPCRegularIPCsClient updateContainerMetadataForID:].cold.1();
      }

    }
    else
    {
      brc_bread_crumbs();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)buf = 138412802;
        v36 = self;
        v37 = 2112;
        v38 = v12;
        v39 = 2112;
        v40 = v16;
        _os_log_fault_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: %@ is not owning %@ and updating its metadata%@", buf, 0x20u);
      }
    }

  }
  __brc_leave_section(v34);

}

- (void)checkinAskClientIfUsingUbiquity:(BOOL)a3
{
  _BOOL8 v3;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21[3];
  uint8_t v22[128];
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  BRCXPCRegularIPCsClient *v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  const char *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v3 = a3;
  v33 = *MEMORY[0x1E0C80C00];
  memset(v21, 0, sizeof(v21));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient checkinAskClientIfUsingUbiquity:]", 1607, v21);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v21[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v24 = v7;
    v25 = 2112;
    v26 = self;
    v27 = 2112;
    v28 = v9;
    v29 = 2080;
    v30 = "-[BRCXPCRegularIPCsClient checkinAskClientIfUsingUbiquity:]";
    v31 = 2112;
    v32 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  if ((_brc_ipc_check_logged_status(self, 0, &__block_literal_global_270) & 1) != 0)
  {
    -[BRCXPCClient setIsUsingUbiquity:](self, "setIsUsingUbiquity:", v3);
    if (v3)
    {
      v19 = 0u;
      v20 = 0u;
      v17 = 0u;
      v18 = 0u;
      -[BRCXPCClient entitledAppLibraryIDs](self, "entitledAppLibraryIDs", 0);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
      if (v11)
      {
        v12 = *(_QWORD *)v18;
        do
        {
          v13 = 0;
          do
          {
            if (*(_QWORD *)v18 != v12)
              objc_enumerationMutation(v10);
            v14 = *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v13);
            -[BRCXPCClient session](self, "session");
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "appLibraryByID:", v14);
            v16 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v16, "addClientUsingUbiquity:", self);
            ++v13;
          }
          while (v11 != v13);
          v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
        }
        while (v11);
      }

    }
  }
  __brc_leave_section(v21);
}

- (void)getContainersByID:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  int v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  BRCXPCRegularIPCsClient *v17;
  char *v18;
  NSObject *v19;
  _QWORD v20[4];
  id v21;
  BRCXPCRegularIPCsClient *v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v25, 0, sizeof(v25));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getContainersByID:]", 2116, v25);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v25[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v27 = (BRCXPCRegularIPCsClient *)v7;
    v28 = 2112;
    v29 = self;
    v30 = 2112;
    v31 = v9;
    v32 = 2080;
    v33 = "-[BRCXPCRegularIPCsClient getContainersByID:]";
    v34 = 2112;
    v35 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = MEMORY[0x1E0C809B0];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __45__BRCXPCRegularIPCsClient_getContainersByID___block_invoke;
  v23[3] = &unk_1E875FCF8;
  v23[4] = self;
  v11 = v4;
  v24 = v11;
  v12 = _brc_ipc_check_applibrary_proxy(self, 1, v23);

  if (v12)
  {
    v13 = (void *)objc_opt_new();
    +[BRCDaemonContainerHelper sharedHelper](BRCDaemonContainerHelper, "sharedHelper");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[BRCXPCClient session](self, "session");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v20[0] = v10;
    v20[1] = 3221225472;
    v20[2] = __45__BRCXPCRegularIPCsClient_getContainersByID___block_invoke_308;
    v20[3] = &unk_1E875E0F8;
    v16 = v14;
    v21 = v16;
    v17 = v13;
    v22 = v17;
    objc_msgSend(v15, "enumerateAppLibraries:", v20);

    brc_bread_crumbs();
    v18 = (char *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138413058;
      v27 = self;
      v28 = 2112;
      v29 = v17;
      v30 = 2112;
      v31 = 0;
      v32 = 2112;
      v33 = v18;
      _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*((void (**)(id, BRCXPCRegularIPCsClient *, _QWORD))v11 + 2))(v11, v17, 0);
  }
  __brc_leave_section(v25);

}

- (void)startOperation:(id)a3 toCopyAvailableQuotaWithReply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  void *v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  void *v18;
  BRCFetchQuotaOperation *v19;
  void *v20;
  _QWORD v21[5];
  id v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v25, 0, sizeof(v25));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toCopyAvailableQuotaWithReply:]", 4334, v25);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v25[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v27 = v10;
    v28 = 2112;
    v29 = self;
    v30 = 2112;
    v31 = v12;
    v32 = 2080;
    v33 = "-[BRCXPCRegularIPCsClient startOperation:toCopyAvailableQuotaWithReply:]";
    v34 = 2112;
    v35 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "canFetchUserQuota");
  v15 = MEMORY[0x1E0C809B0];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __72__BRCXPCRegularIPCsClient_startOperation_toCopyAvailableQuotaWithReply___block_invoke;
  v23[3] = &unk_1E875FCF8;
  v23[4] = self;
  v16 = v7;
  v24 = v16;
  v17 = _brc_ipc_check_client_privilege(self, 1, v14, (uint64_t)"canFetchUserQuota", v23);

  if ((v17 & 1) != 0)
  {
    -[BRCXPCClient session](self, "session");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = -[BRCFetchQuotaOperation initWithSession:]([BRCFetchQuotaOperation alloc], "initWithSession:", v18);
    v21[0] = v15;
    v21[1] = 3221225472;
    v21[2] = __72__BRCXPCRegularIPCsClient_startOperation_toCopyAvailableQuotaWithReply___block_invoke_520;
    v21[3] = &unk_1E87669D0;
    v21[4] = self;
    v22 = v16;
    -[_BRCOperation setFinishBlock:](v19, "setFinishBlock:", v21);
    objc_msgSend(MEMORY[0x1E0C94F88], "br_quotaUpdateXPC");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    -[_BRCOperation setGroup:](v19, "setGroup:", v20);

    objc_msgSend(v18, "addMiscOperation:", v19);
    -[_BRCOperation schedule](v19, "schedule");

  }
  __brc_leave_section(v25);

}

- (void)getContainerURLForID:(id)a3 recreateDocumentsIfNeeded:(BOOL)a4 reply:(id)a5
{
  _BOOL8 v6;
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  qos_class_t v13;
  void *v14;
  void *v15;
  id v16;
  int v17;
  int active_platform;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  _QWORD v24[5];
  id v25;
  uint64_t v26[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v28;
  __int16 v29;
  BRCXPCRegularIPCsClient *v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  const char *v34;
  __int16 v35;
  id v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v6 = a4;
  v39 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  memset(v26, 0, sizeof(v26));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getContainerURLForID:recreateDocumentsIfNeeded:reply:]", 1630, v26);
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = v26[0];
    v13 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v13, (uint64_t)&brc_qos_entries, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v28 = (BRCXPCRegularIPCsClient *)v12;
    v29 = 2112;
    v30 = self;
    v31 = 2112;
    v32 = v14;
    v33 = 2080;
    v34 = "-[BRCXPCRegularIPCsClient getContainerURLForID:recreateDocumentsIfNeeded:reply:]";
    v35 = 2112;
    v36 = v8;
    v37 = 2112;
    v38 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  if (v8)
    v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v8);
  else
    v15 = 0;
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __80__BRCXPCRegularIPCsClient_getContainerURLForID_recreateDocumentsIfNeeded_reply___block_invoke;
  v24[3] = &unk_1E875FCF8;
  v24[4] = self;
  v16 = v9;
  v25 = v16;
  v17 = _brc_ipc_check_applibrary_read_access(self, 1, v15, v24);

  if (v17)
  {
    active_platform = dyld_get_active_platform();
    if ((active_platform & 0xFFFFFFFB) == 2 || active_platform == 1 || active_platform == 11)
    {
      if (!dyld_program_sdk_at_least())
      {
        if (!v15)
        {
          -[BRCXPCClient defaultMangledID](self, "defaultMangledID");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          if (!v15)
            goto LABEL_19;
        }
LABEL_17:
        -[BRCXPCClient _setupAppLibraryAndZoneWithID:recreateDocumentsIfNeeded:reply:](self, "_setupAppLibraryAndZoneWithID:recreateDocumentsIfNeeded:reply:", v15, v6, v16);
        goto LABEL_22;
      }
    }
    else
    {
      syslog(5, "Unknown platform linking against CloudDocs framework %d", active_platform);
    }
    if (v8)
    {
      if (v15)
        goto LABEL_17;
    }
    else
    {
      -[BRCXPCClient defaultMangledID](self, "defaultMangledID");
      v19 = objc_claimAutoreleasedReturnValue();

      v15 = (void *)v19;
      if (v19)
        goto LABEL_17;
    }
LABEL_19:
    brc_bread_crumbs();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("containerID"), 0);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413570;
      v28 = self;
      v29 = 2112;
      v30 = 0;
      v31 = 2112;
      v32 = 0;
      v33 = 2112;
      v34 = 0;
      v35 = 2112;
      v36 = v22;
      v37 = 2112;
      v38 = v20;
      _os_log_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@)%@", buf, 0x3Eu);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("containerID"), 0);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, _QWORD, _QWORD, void *))v16 + 2))(v16, 0, 0, 0, v23);

    v15 = 0;
  }
LABEL_22:

  __brc_leave_section(v26);
}

void __72__BRCXPCRegularIPCsClient_startOperation_toCopyAvailableQuotaWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __80__BRCXPCRegularIPCsClient_getContainerURLForID_recreateDocumentsIfNeeded_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413570;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = 0;
    v15 = 2112;
    v16 = v3;
    v17 = 2112;
    v18 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@)%@", (uint8_t *)&v7, 0x3Eu);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __45__BRCXPCRegularIPCsClient_getContainersByID___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)getLocalizedLastSyncWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  id v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  id v25;
  BRCXPCRegularIPCsClient *v26;
  char *v27;
  NSObject *v28;
  double v29;
  double v30;
  void *v31;
  double v32;
  _BOOL4 v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _QWORD v42[5];
  id v43;
  uint64_t v44[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v46;
  __int16 v47;
  BRCXPCRegularIPCsClient *v48;
  __int16 v49;
  void *v50;
  __int16 v51;
  const char *v52;
  __int16 v53;
  void *v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v44, 0, sizeof(v44));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getLocalizedLastSyncWithReply:]", 3513, v44);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v44[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v46 = (BRCXPCRegularIPCsClient *)v7;
    v47 = 2112;
    v48 = self;
    v49 = 2112;
    v50 = v9;
    v51 = 2080;
    v52 = "-[BRCXPCRegularIPCsClient getLocalizedLastSyncWithReply:]";
    v53 = 2112;
    v54 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v42[0] = MEMORY[0x1E0C809B0];
  v42[1] = 3221225472;
  v42[2] = __57__BRCXPCRegularIPCsClient_getLocalizedLastSyncWithReply___block_invoke;
  v42[3] = &unk_1E875FCF8;
  v42[4] = self;
  v10 = v4;
  v43 = v10;
  v11 = _brc_ipc_check_logged_status(self, 0, v42);

  if (v11)
  {
    -[BRCXPCClient session](self, "session");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "serverState");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "lastSyncDownDate");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v14)
    {
      brc_bread_crumbs();
      v23 = (char *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138413058;
        v46 = self;
        v47 = 2112;
        v48 = 0;
        v49 = 2112;
        v50 = 0;
        v51 = 2112;
        v52 = v23;
        _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
      }

      (*((void (**)(id, _QWORD, _QWORD))v10 + 2))(v10, 0, 0);
      goto LABEL_15;
    }
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "timeIntervalSinceDate:", v14);
    v17 = v16;
    objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "components:fromDate:toDate:options:", 16, v14, v15, 0);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "rangeOfUnit:inUnit:forDate:", 16, 512, v20);
    v22 = v21;

    if (v17 < 60.0 || v17 < 3600.0)
      goto LABEL_11;
    objc_msgSend(v14, "timeIntervalSinceReferenceDate");
    v30 = v29;
    objc_msgSend(v18, "startOfDayForDate:", v15);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "timeIntervalSinceReferenceDate");
    v33 = v30 > v32;

    if (v33)
    {
      v25 = objc_alloc_init(MEMORY[0x1E0CB3578]);
      objc_msgSend(v25, "setTimeStyle:", 1);
      objc_msgSend(v25, "setDateStyle:", 0);
      objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "stringFromDate:", v14);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      _BRLocalizedStringWithFormat();
      v36 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (objc_msgSend(v19, "day") <= 1)
      {
LABEL_11:
        objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
        v25 = (id)objc_claimAutoreleasedReturnValue();
        _BRLocalizedStringWithFormat();
        v26 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
LABEL_12:

        brc_bread_crumbs();
        v27 = (char *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v28 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138413058;
          v46 = self;
          v47 = 2112;
          v48 = v26;
          v49 = 2112;
          v50 = 0;
          v51 = 2112;
          v52 = v27;
          _os_log_impl(&dword_1CBD43000, v28, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
        }

        (*((void (**)(id, BRCXPCRegularIPCsClient *, _QWORD))v10 + 2))(v10, v26, 0);
LABEL_15:

        goto LABEL_16;
      }
      if (objc_msgSend(v19, "day") < v22)
      {
        v25 = objc_alloc_init(MEMORY[0x1E0CB3578]);
        v37 = (void *)MEMORY[0x1E0CB3578];
        objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v37, "dateFormatFromTemplate:options:locale:", CFSTR("EEEE"), 0, v38);
        v34 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v25, "setDateFormat:", v34);
        objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v25, "stringFromDate:", v14);
        v39 = objc_claimAutoreleasedReturnValue();
        _BRLocalizedStringWithFormat();
        v40 = objc_claimAutoreleasedReturnValue();
        v41 = (void *)v39;
        v26 = (BRCXPCRegularIPCsClient *)v40;

        goto LABEL_20;
      }
      v25 = objc_alloc_init(MEMORY[0x1E0CB3578]);
      objc_msgSend(v25, "setTimeStyle:", 0);
      objc_msgSend(v25, "setDateStyle:", 2);
      objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "stringFromDate:", v14);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      _BRLocalizedStringWithFormat();
      v36 = objc_claimAutoreleasedReturnValue();
    }
    v26 = (BRCXPCRegularIPCsClient *)v36;
LABEL_20:

    goto LABEL_12;
  }
LABEL_16:
  __brc_leave_section(v44);

}

- (void)startDownloadItemsAtURLs:(id)a3 options:(unint64_t)a4 reply:(id)a5
{
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  qos_class_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  int v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  qos_class_t v21;
  id v22;
  int v23;
  uint64_t v24;
  const char *v25;
  brc_task_tracker *tracker;
  void *v27;
  void *v28;
  unint64_t v29;
  _QWORD v30[5];
  id v31;
  _QWORD v32[5];
  id v33;
  id v34;
  unint64_t v35;
  uint64_t v36[3];
  _QWORD v37[5];
  id v38;
  uint64_t v39[3];
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  BRCXPCRegularIPCsClient *v43;
  __int16 v44;
  id v45;
  __int16 v46;
  const char *v47;
  __int16 v48;
  _BYTE v49[14];
  __int16 v50;
  void *v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  memset(v39, 0, sizeof(v39));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startDownloadItemsAtURLs:options:reply:]", 272, v39);
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = v39[0];
    v13 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v13, (uint64_t)&brc_qos_entries, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v41 = v12;
    v42 = 2112;
    v43 = self;
    v44 = 2112;
    v45 = v14;
    v46 = 2080;
    v47 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startDownloadItemsAtURLs:options:reply:]";
    v48 = 2112;
    *(_QWORD *)v49 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v15 = MEMORY[0x1E0C809B0];
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __83__BRCXPCRegularIPCsClient_LegacyAdditions__startDownloadItemsAtURLs_options_reply___block_invoke;
  v37[3] = &unk_1E875FCF8;
  v37[4] = self;
  v16 = v9;
  v38 = v16;
  v17 = _brc_ipc_check_logged_status(self, 1, v37);

  if (v17)
  {
    memset(v36, 0, sizeof(v36));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startDownloadItemsAtURLs:options:reply:]", 274, v36);
    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      v29 = a4;
      v20 = v36[0];
      v21 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v21, (uint64_t)&brc_qos_entries, 0);
      v22 = (id)objc_claimAutoreleasedReturnValue();
      v23 = objc_msgSend(v8, "count");
      v24 = objc_msgSend(v8, "count");
      v25 = "s";
      *(_DWORD *)buf = 134219522;
      v41 = v20;
      v42 = 2112;
      if (v24 == 1)
        v25 = "";
      v43 = self;
      v44 = 2112;
      v45 = v22;
      v46 = 2080;
      v47 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startDownloadItemsAtURLs:options:reply:]";
      v48 = 1024;
      *(_DWORD *)v49 = v23;
      *(_WORD *)&v49[4] = 2080;
      *(_QWORD *)&v49[6] = v25;
      v50 = 2112;
      v51 = v18;
      _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s downloading %u URL%s%@", buf, 0x44u);

      a4 = v29;
    }

    tracker = self->super._tracker;
    -[BRCXPCClient session](self, "session");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "clientTruthWorkloop");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v32[0] = v15;
    v32[1] = 3221225472;
    v32[2] = __83__BRCXPCRegularIPCsClient_LegacyAdditions__startDownloadItemsAtURLs_options_reply___block_invoke_21;
    v32[3] = &unk_1E8760188;
    v32[4] = self;
    v33 = v8;
    v35 = a4;
    v34 = v16;
    v30[0] = v15;
    v30[1] = 3221225472;
    v30[2] = __83__BRCXPCRegularIPCsClient_LegacyAdditions__startDownloadItemsAtURLs_options_reply___block_invoke_2;
    v30[3] = &unk_1E875EAA8;
    v30[4] = self;
    v31 = v34;
    brc_task_tracker_async_with_logs(tracker, v28, v32, v30);

    __brc_leave_section(v36);
  }
  __brc_leave_section(v39);

}

void __83__BRCXPCRegularIPCsClient_LegacyAdditions__startDownloadItemsAtURLs_options_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t __83__BRCXPCRegularIPCsClient_LegacyAdditions__startDownloadItemsAtURLs_options_reply___block_invoke_21(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_startDownloadItemsAtURLs:pos:options:error:reply:", *(_QWORD *)(a1 + 40), 0, *(_QWORD *)(a1 + 56), 0, *(_QWORD *)(a1 + 48));
}

void __83__BRCXPCRegularIPCsClient_LegacyAdditions__startDownloadItemsAtURLs_options_reply___block_invoke_2(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  void *v11;
  __int16 v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138412802;
    v9 = v4;
    v10 = 2112;
    v11 = v5;
    v12 = 2112;
    v13 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v8, 0x20u);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);

}

- (void)_startDownloadItemsAtURLs:(id)a3 pos:(unint64_t)a4 options:(unint64_t)a5 error:(id)a6 reply:(id)a7
{
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  BRCXPCRegularIPCsClient *v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  brc_task_tracker *tracker;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  void *v28;
  void *v29;
  unint64_t v30;
  id v31;
  void (**v32)(id, void *);
  uint64_t v33;
  _QWORD v34[5];
  void (**v35)(id, void *);
  _QWORD v36[5];
  id v37;
  void (**v38)(id, void *);
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD v42[4];
  id v43;
  BRCXPCRegularIPCsClient *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  void (*v51)(uint64_t);
  id v52;
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v54;
  __int16 v55;
  void *v56;
  __int16 v57;
  void *v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a6;
  v32 = (void (**)(id, void *))a7;
  v30 = a5;
  v33 = BRCConvertDownloadOptionsToInternal(a5);
  v47 = 0;
  v48 = &v47;
  v49 = 0x3032000000;
  v50 = __Block_byref_object_copy__42;
  v51 = __Block_byref_object_dispose__42;
  v14 = v13;
  v15 = 0;
  v31 = v14;
  v52 = v14;
  do
  {
    if (a4 + v15 >= objc_msgSend(v12, "count", v30))
      break;
    v16 = (void *)MEMORY[0x1D17A6BE8]();
    v17 = self;
    objc_sync_enter(v17);
    v18 = *((_BYTE *)&v17->super + 32);
    objc_sync_exit(v17);

    if ((v18 & 1) == 0)
    {
      objc_msgSend(v12, "objectAtIndexedSubscript:", a4 + v15);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v42[0] = MEMORY[0x1E0C809B0];
      v42[1] = 3221225472;
      v42[2] = __94__BRCXPCRegularIPCsClient_LegacyAdditions___startDownloadItemsAtURLs_pos_options_error_reply___block_invoke;
      v42[3] = &unk_1E8765118;
      v20 = v19;
      v43 = v20;
      v44 = v17;
      v45 = &v47;
      v46 = v33;
      -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](v17, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v20, 0, 0, 0, v42);

    }
    objc_autoreleasePoolPop(v16);
    if ((v18 & 1) != 0)
      goto LABEL_12;
    ++v15;
  }
  while (v15 != 10);
  v21 = a4 + v15;
  if (a4 + v15 >= objc_msgSend(v12, "count"))
  {
    brc_bread_crumbs();
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      objc_msgSend((id)v48[5], "brc_wrappedError");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v54 = self;
      v55 = 2112;
      v56 = v28;
      v57 = 2112;
      v58 = v26;
      _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    objc_msgSend((id)v48[5], "brc_wrappedError");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v32[2](v32, v29);

  }
  else
  {
    tracker = self->super._tracker;
    -[BRCXPCClient session](self, "session");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "clientTruthWorkloop");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = MEMORY[0x1E0C809B0];
    v36[0] = MEMORY[0x1E0C809B0];
    v36[1] = 3221225472;
    v36[2] = __94__BRCXPCRegularIPCsClient_LegacyAdditions___startDownloadItemsAtURLs_pos_options_error_reply___block_invoke_23;
    v36[3] = &unk_1E8765140;
    v36[4] = self;
    v40 = v21;
    v41 = v30;
    v37 = v12;
    v39 = &v47;
    v38 = v32;
    v34[0] = v25;
    v34[1] = 3221225472;
    v34[2] = __94__BRCXPCRegularIPCsClient_LegacyAdditions___startDownloadItemsAtURLs_pos_options_error_reply___block_invoke_2;
    v34[3] = &unk_1E875EAA8;
    v34[4] = self;
    v35 = v38;
    brc_task_tracker_async_with_logs(tracker, v24, v36, v34);

  }
LABEL_12:
  _Block_object_dispose(&v47, 8);

}

void __94__BRCXPCRegularIPCsClient_LegacyAdditions___startDownloadItemsAtURLs_pos_options_error_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  NSObject *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  char v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  id v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  memset(v25, 0, sizeof(v25));
  __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) _startDownloadItemsAtURLs:pos:options:error:reply:]_block_invoke", 310, v25);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
  {
    v21 = v25[0];
    objc_msgSend(*(id *)(a1 + 32), "path");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134218754;
    v27 = v21;
    v28 = 2112;
    v29 = v22;
    v30 = 2112;
    v31 = v5;
    v32 = 2112;
    v33 = v7;
    _os_log_debug_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx downloading '%@'\n     lookup: %@%@", buf, 0x2Au);

  }
  if (v5)
  {
    objc_msgSend(v5, "faultedLocalItem");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9 || (objc_msgSend(v5, "byIDLocalItem"), (v9 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
    {
      if (objc_msgSend(v9, "isShareAcceptationFault"))
      {
        v10 = (void *)MEMORY[0x1E0CB35C8];
        objc_msgSend(*(id *)(a1 + 32), "path");
        v11 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "brc_errorNoDocument:underlyingPOSIXError:", v11, 16);
        v12 = objc_claimAutoreleasedReturnValue();

        v6 = v12;
      }
      else
      {
        v13 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
        v14 = *(_QWORD *)(a1 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        v24 = *(id *)(v15 + 40);
        objc_msgSend(v9, "startDownloadInTask:options:etagIfLoser:stageFileName:error:", v13, v14, 0, 0, &v24);
        v16 = v24;
        v11 = *(NSObject **)(v15 + 40);
        *(_QWORD *)(v15 + 40) = v16;
      }
    }
    else
    {
      objc_msgSend(v5, "byPathRelpath");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v17, "exists") & 1) != 0)
      {
        objc_msgSend(v5, "byPathRelpath");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = objc_msgSend(v18, "isFault");

        if ((v19 & 1) == 0)
        {
          brc_bread_crumbs();
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v11 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
          {
            objc_msgSend(v5, "byPathRelpath");
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            __94__BRCXPCRegularIPCsClient_LegacyAdditions___startDownloadItemsAtURLs_pos_options_error_reply___block_invoke_cold_1(v20, (uint64_t)v9, buf, v11);
          }
          goto LABEL_9;
        }
      }
      else
      {

      }
      v23 = (void *)MEMORY[0x1E0CB35C8];
      objc_msgSend(*(id *)(a1 + 32), "path");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "brc_errorNoDocument:underlyingPOSIXError:", v9, 2);
      v11 = v6;
      v6 = objc_claimAutoreleasedReturnValue();
    }
LABEL_9:

  }
  if (v6)
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v6);
  __brc_leave_section(v25);

}

uint64_t __94__BRCXPCRegularIPCsClient_LegacyAdditions___startDownloadItemsAtURLs_pos_options_error_reply___block_invoke_23(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_startDownloadItemsAtURLs:pos:options:error:reply:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(_QWORD *)(a1 + 48));
}

void __94__BRCXPCRegularIPCsClient_LegacyAdditions___startDownloadItemsAtURLs_pos_options_error_reply___block_invoke_2(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  void *v11;
  __int16 v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138412802;
    v9 = v4;
    v10 = 2112;
    v11 = v5;
    v12 = 2112;
    v13 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v8, 0x20u);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);

}

- (id)_sharingOperationItemFromLookup:(id)a3 url:(id)a4 allowDirectory:(BOOL)a5 error:(id *)a6
{
  _BOOL4 v7;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;

  v7 = a5;
  v9 = a3;
  v10 = a4;
  objc_msgSend(v9, "byIDLocalItem");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11 || (objc_msgSend(v9, "faultedLocalItem"), (v11 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
  {
    if ((objc_msgSend(v11, "isDocument") & 1) != 0 || v7 && (objc_msgSend(v11, "isDirectory") & 1) != 0)
    {
      if ((objc_msgSend(v11, "isKnownByServer") & 1) != 0 || (objc_msgSend(v11, "isShareAcceptationFault") & 1) != 0)
      {
        if (!objc_msgSend(v11, "isDirectory"))
          goto LABEL_17;
        objc_msgSend(v11, "clientZone");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "itemID");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_msgSend(v12, "serverRankByItemID:", v13);

        if (v14)
          goto LABEL_17;
      }
      v15 = (void *)MEMORY[0x1E0CB35C8];
      objc_msgSend(v10, "path");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "brc_errorNotInCloud:", v16);
      v17 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v18 = (void *)MEMORY[0x1E0CB35C8];
      objc_msgSend(v10, "path");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "brc_errorNoDocument:underlyingPOSIXError:", v16, 2);
      v17 = objc_claimAutoreleasedReturnValue();
    }
    v19 = (void *)v17;
  }
  else
  {
    v20 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(v10, "path");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "brc_errorNoDocument:underlyingPOSIXError:", v16, 2);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = 0;
  }

  if (!v19)
  {
LABEL_17:
    objc_msgSend(v11, "asShareableItem");
    a6 = (id *)objc_claimAutoreleasedReturnValue();
    v19 = 0;
    goto LABEL_18;
  }
  if (a6)
  {
    objc_storeStrong(a6, v19);
    a6 = 0;
  }
LABEL_18:

  return a6;
}

- (void)startOperation:(id)a3 toCopyShareInfoAtURL:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  BRCXPCRegularIPCsClient *v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  qos_class_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  _QWORD v32[5];
  id v33;
  id v34;
  id v35;
  uint64_t v36[3];
  _QWORD v37[5];
  id v38;
  uint64_t v39[3];
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  BRCXPCRegularIPCsClient *v43;
  __int16 v44;
  id v45;
  __int16 v46;
  const char *v47;
  __int16 v48;
  void *v49;
  __int16 v50;
  void *v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v39, 0, sizeof(v39));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyShareInfoAtURL:reply:]", 378, v39);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v39[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v41 = v13;
    v42 = 2112;
    v43 = self;
    v44 = 2112;
    v45 = v15;
    v46 = 2080;
    v47 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyShareInfoAtURL:reply:]";
    v48 = 2112;
    v49 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingPrivateInterfaceEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __86__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShareInfoAtURL_reply___block_invoke;
  v37[3] = &unk_1E875FCF8;
  v37[4] = self;
  v19 = v10;
  v38 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingPrivateInterfaceEntitled", v37);

  if ((v20 & 1) != 0)
  {
    brc_bread_crumbs();
    v21 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(v9, "path");
      v29 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      v30 = objc_msgSend(v29, "UTF8String");
      *(_DWORD *)buf = 136315394;
      v41 = v30;
      v42 = 2112;
      v43 = v21;
      _os_log_debug_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_DEBUG, "[DEBUG] Copying share info at %s%@", buf, 0x16u);

    }
    memset(v36, 0, sizeof(v36));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyShareInfoAtURL:reply:]", 407, v36);
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      v31 = v8;
      v25 = v36[0];
      v26 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v26, (uint64_t)&brc_qos_entries, 0);
      v27 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "path");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v41 = v25;
      v42 = 2112;
      v43 = self;
      v44 = 2112;
      v45 = v27;
      v46 = 2080;
      v47 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyShareInfoAtURL:reply:]";
      v48 = 2112;
      v49 = v28;
      v50 = 2112;
      v51 = v23;
      _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v8 = v31;
      v18 = MEMORY[0x1E0C809B0];

    }
    v32[0] = v18;
    v32[1] = 3221225472;
    v32[2] = __86__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShareInfoAtURL_reply___block_invoke_25;
    v32[3] = &unk_1E8765190;
    v32[4] = self;
    v35 = v19;
    v33 = v9;
    v34 = v8;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v33, 1, 0, 0, v32);

    __brc_leave_section(v36);
  }
  __brc_leave_section(v39);

}

void __86__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShareInfoAtURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __86__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShareInfoAtURL_reply___block_invoke_25(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  BRCSharingCopyShortTokenOperation *v10;
  void *v11;
  void *v12;
  BRCSharingCopyShortTokenOperation *v13;
  BRCSharingCopyParticipantTokenOperation *v14;
  void *v15;
  void *v16;
  BRCSharingCopyParticipantTokenOperation *v17;
  void *v18;
  BRCAggregateOperation *v19;
  void *v20;
  void *v21;
  void *v22;
  BRCAggregateOperation *v23;
  void *v24;
  NSObject *v25;
  uint64_t v26;
  _QWORD v27[5];
  id v28;
  id v29;
  _QWORD v30[2];
  uint8_t buf[4];
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  __int16 v37;
  id v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138413314;
      v32 = v8;
      v33 = 2112;
      v34 = 0;
      v35 = 2112;
      v36 = 0;
      v37 = 2112;
      v38 = v5;
      v39 = 2112;
      v40 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v29 = 0;
    objc_msgSend(*(id *)(a1 + 32), "_sharingOperationItemFromLookup:url:allowDirectory:error:", a2, *(_QWORD *)(a1 + 40), 0, &v29);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      v10 = [BRCSharingCopyShortTokenOperation alloc];
      objc_msgSend(v9, "asDocument");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "session");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = -[BRCSharingCopyShortTokenOperation initWithItem:sessionContext:](v10, "initWithItem:sessionContext:", v11, v12);

      v14 = [BRCSharingCopyParticipantTokenOperation alloc];
      objc_msgSend(v9, "asDocument");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "session");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = -[BRCSharingCopyParticipantTokenOperation initWithItem:sessionContext:](v14, "initWithItem:sessionContext:", v15, v16);

      v30[0] = v13;
      v30[1] = v17;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v30, 2);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = [BRCAggregateOperation alloc];
      objc_msgSend(v9, "serverZone");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "metadataSyncContext");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "session");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = -[BRCAggregateOperation initWithSyncContext:sessionContext:subOperations:](v19, "initWithSyncContext:sessionContext:subOperations:", v21, v22, v18);

      v27[0] = MEMORY[0x1E0C809B0];
      v27[1] = 3221225472;
      v27[2] = __86__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShareInfoAtURL_reply___block_invoke_30;
      v27[3] = &unk_1E8765168;
      v27[4] = *(_QWORD *)(a1 + 32);
      v28 = *(id *)(a1 + 56);
      -[BRCAggregateOperation setWrapperOperationCompletionHandler:](v23, "setWrapperOperationCompletionHandler:", v27);
      objc_msgSend(*(id *)(a1 + 32), "_startSharingOperationAfterAcceptation:client:item:", v23, *(_QWORD *)(a1 + 48), v9);

    }
    else
    {
      brc_bread_crumbs();
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        v26 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138413314;
        v32 = v26;
        v33 = 2112;
        v34 = 0;
        v35 = 2112;
        v36 = 0;
        v37 = 2112;
        v38 = v29;
        v39 = 2112;
        v40 = v24;
        _os_log_impl(&dword_1CBD43000, v25, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);
      }

      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    }

  }
}

void __86__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShareInfoAtURL_reply___block_invoke_30(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  int v15;
  uint64_t v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  id v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  objc_msgSend(v5, "objectForKeyedSubscript:", &unk_1E87D7478);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("participantKey"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v5, "objectForKeyedSubscript:", &unk_1E87D7490);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = 138413314;
    v16 = v11;
    v17 = 2112;
    v18 = v12;
    v19 = 2112;
    v20 = v8;
    v21 = 2112;
    v22 = v6;
    v23 = 2112;
    v24 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v15, 0x34u);

  }
  v13 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v5, "objectForKeyedSubscript:", &unk_1E87D7490);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *, id))(v13 + 16))(v13, v14, v8, v6);

}

- (void)startOperation:(id)a3 toCopyShortTokenAtURL:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  BRCXPCRegularIPCsClient *v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  qos_class_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  _QWORD v32[5];
  id v33;
  id v34;
  id v35;
  uint64_t v36[3];
  _QWORD v37[5];
  id v38;
  uint64_t v39[3];
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  BRCXPCRegularIPCsClient *v43;
  __int16 v44;
  id v45;
  __int16 v46;
  const char *v47;
  __int16 v48;
  void *v49;
  __int16 v50;
  void *v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v39, 0, sizeof(v39));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyShortTokenAtURL:reply:]", 414, v39);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v39[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v41 = v13;
    v42 = 2112;
    v43 = self;
    v44 = 2112;
    v45 = v15;
    v46 = 2080;
    v47 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyShortTokenAtURL:reply:]";
    v48 = 2112;
    v49 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingPrivateInterfaceEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShortTokenAtURL_reply___block_invoke;
  v37[3] = &unk_1E875FCF8;
  v37[4] = self;
  v19 = v10;
  v38 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingPrivateInterfaceEntitled", v37);

  if ((v20 & 1) != 0)
  {
    brc_bread_crumbs();
    v21 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(v9, "path");
      v29 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      v30 = objc_msgSend(v29, "UTF8String");
      *(_DWORD *)buf = 136315394;
      v41 = v30;
      v42 = 2112;
      v43 = v21;
      _os_log_debug_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_DEBUG, "[DEBUG] Copying short token at %s%@", buf, 0x16u);

    }
    memset(v36, 0, sizeof(v36));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyShortTokenAtURL:reply:]", 433, v36);
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      v31 = v8;
      v25 = v36[0];
      v26 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v26, (uint64_t)&brc_qos_entries, 0);
      v27 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "path");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v41 = v25;
      v42 = 2112;
      v43 = self;
      v44 = 2112;
      v45 = v27;
      v46 = 2080;
      v47 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyShortTokenAtURL:reply:]";
      v48 = 2112;
      v49 = v28;
      v50 = 2112;
      v51 = v23;
      _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v8 = v31;
      v18 = MEMORY[0x1E0C809B0];

    }
    v32[0] = v18;
    v32[1] = 3221225472;
    v32[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShortTokenAtURL_reply___block_invoke_36;
    v32[3] = &unk_1E8765190;
    v32[4] = self;
    v35 = v19;
    v33 = v9;
    v34 = v8;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v33, 1, 0, 0, v32);

    __brc_leave_section(v36);
  }
  __brc_leave_section(v39);

}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShortTokenAtURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShortTokenAtURL_reply___block_invoke_36(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  BRCSharingCopyShortTokenOperation *v10;
  void *v11;
  void *v12;
  BRCSharingCopyShortTokenOperation *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  _QWORD v17[5];
  id v18;
  id v19;
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  id v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138413058;
      v21 = v8;
      v22 = 2112;
      v23 = 0;
      v24 = 2112;
      v25 = v5;
      v26 = 2112;
      v27 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v19 = 0;
    objc_msgSend(*(id *)(a1 + 32), "_sharingOperationItemFromLookup:url:allowDirectory:error:", a2, *(_QWORD *)(a1 + 40), 0, &v19);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      v10 = [BRCSharingCopyShortTokenOperation alloc];
      objc_msgSend(v9, "asDocument");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "session");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = -[BRCSharingCopyShortTokenOperation initWithItem:sessionContext:](v10, "initWithItem:sessionContext:", v11, v12);

      v17[0] = MEMORY[0x1E0C809B0];
      v17[1] = 3221225472;
      v17[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShortTokenAtURL_reply___block_invoke_37;
      v17[3] = &unk_1E8760EB8;
      v17[4] = *(_QWORD *)(a1 + 32);
      v18 = *(id *)(a1 + 56);
      -[_BRCOperation setFinishBlock:](v13, "setFinishBlock:", v17);
      objc_msgSend(*(id *)(a1 + 32), "_startSharingOperationAfterAcceptation:client:item:", v13, *(_QWORD *)(a1 + 48), v9);

    }
    else
    {
      brc_bread_crumbs();
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        v16 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138413058;
        v21 = v16;
        v22 = 2112;
        v23 = 0;
        v24 = 2112;
        v25 = v19;
        v26 = 2112;
        v27 = v14;
        _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
      }

      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    }

  }
}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyShortTokenAtURL_reply___block_invoke_37(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v6, "brc_wrappedError");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138413058;
    v14 = v9;
    v15 = 2112;
    v16 = v5;
    v17 = 2112;
    v18 = v10;
    v19 = 2112;
    v20 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v13, 0x2Au);

  }
  v11 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v6, "brc_wrappedError");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, void *))(v11 + 16))(v11, v5, v12);

}

- (void)startOperation:(id)a3 toCopyEtagAtURL:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  BRCXPCRegularIPCsClient *v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  qos_class_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  _QWORD v32[5];
  id v33;
  id v34;
  uint64_t v35[3];
  _QWORD v36[5];
  id v37;
  uint64_t v38[3];
  uint8_t buf[4];
  uint64_t v40;
  __int16 v41;
  BRCXPCRegularIPCsClient *v42;
  __int16 v43;
  id v44;
  __int16 v45;
  const char *v46;
  __int16 v47;
  void *v48;
  __int16 v49;
  void *v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v38, 0, sizeof(v38));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyEtagAtURL:reply:]", 440, v38);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v38[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v40 = v13;
    v41 = 2112;
    v42 = self;
    v43 = 2112;
    v44 = v15;
    v45 = 2080;
    v46 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyEtagAtURL:reply:]";
    v47 = 2112;
    v48 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingPrivateInterfaceEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v36[0] = MEMORY[0x1E0C809B0];
  v36[1] = 3221225472;
  v36[2] = __81__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyEtagAtURL_reply___block_invoke;
  v36[3] = &unk_1E875FCF8;
  v36[4] = self;
  v19 = v10;
  v37 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingPrivateInterfaceEntitled", v36);

  if ((v20 & 1) != 0)
  {
    brc_bread_crumbs();
    v21 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(v9, "path");
      v29 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      v30 = objc_msgSend(v29, "UTF8String");
      *(_DWORD *)buf = 136315394;
      v40 = v30;
      v41 = 2112;
      v42 = v21;
      _os_log_debug_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_DEBUG, "[DEBUG] Copying etag at %s%@", buf, 0x16u);

    }
    memset(v35, 0, sizeof(v35));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyEtagAtURL:reply:]", 473, v35);
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      v31 = v8;
      v25 = v35[0];
      v26 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v26, (uint64_t)&brc_qos_entries, 0);
      v27 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "path");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v40 = v25;
      v41 = 2112;
      v42 = self;
      v43 = 2112;
      v44 = v27;
      v45 = 2080;
      v46 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyEtagAtURL:reply:]";
      v47 = 2112;
      v48 = v28;
      v49 = 2112;
      v50 = v23;
      _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v8 = v31;
      v18 = MEMORY[0x1E0C809B0];

    }
    v32[0] = v18;
    v32[1] = 3221225472;
    v32[2] = __81__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyEtagAtURL_reply___block_invoke_39;
    v32[3] = &unk_1E8765208;
    v32[4] = self;
    v34 = v19;
    v33 = v9;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v33, 1, 0, 0, v32);

    __brc_leave_section(v35);
  }
  __brc_leave_section(v38);

}

void __81__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyEtagAtURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __81__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyEtagAtURL_reply___block_invoke_39(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void (**v17)(_QWORD);
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  id v25;
  uint64_t v26;
  void (**v27)(_QWORD);
  _QWORD v28[4];
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint8_t buf[4];
  id v37;
  __int16 v38;
  uint64_t v39;
  __int16 v40;
  id v41;
  __int16 v42;
  void *v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = a1[4];
      *(_DWORD *)buf = 138413058;
      v37 = v9;
      v38 = 2112;
      v39 = 0;
      v40 = 2112;
      v41 = v6;
      v42 = 2112;
      v43 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*((void (**)(void))a1[6] + 2))();
  }
  else
  {
    v35 = 0;
    objc_msgSend(a1[4], "_sharingOperationItemFromLookup:url:allowDirectory:error:", v5, a1[5], 0, &v35);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (v10)
    {
      objc_msgSend(v10, "clientZone");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = MEMORY[0x1E0C809B0];
      v28[0] = MEMORY[0x1E0C809B0];
      v28[1] = 3221225472;
      v28[2] = __81__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyEtagAtURL_reply___block_invoke_40;
      v28[3] = &unk_1E87651B8;
      v29 = v5;
      v14 = v12;
      v30 = v14;
      v15 = v11;
      v16 = a1[4];
      v31 = v15;
      v32 = v16;
      v34 = a1[6];
      v33 = a1[5];
      v17 = (void (**)(_QWORD))MEMORY[0x1D17A6DB0](v28);
      if (objc_msgSend(v15, "isShareAcceptationFault"))
      {
        v27 = v17;
        objc_msgSend(v15, "itemID", v13, 3221225472, __81__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyEtagAtURL_reply___block_invoke_41, &unk_1E87651E0);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "st");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = objc_msgSend(v19, "type");
        objc_msgSend(v15, "serverZone");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "structureRecordIDForItemType:zone:aliasTargetZoneIsShared:", v20, v21, 1);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "performBlock:whenLocatingCompletesForItemWithRecordID:", &v26, v22);

      }
      else
      {
        v17[2](v17);
      }

    }
    else
    {
      brc_bread_crumbs();
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        v25 = a1[4];
        *(_DWORD *)buf = 138413058;
        v37 = v25;
        v38 = 2112;
        v39 = 0;
        v40 = 2112;
        v41 = v35;
        v42 = 2112;
        v43 = v23;
        _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
      }

      (*((void (**)(void))a1[6] + 2))();
    }

  }
}

void __81__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyEtagAtURL_reply___block_invoke_40(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "clientDB");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "assertOnQueue");

  objc_msgSend(*(id *)(a1 + 40), "serverZone");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 48), "itemID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "itemByItemID:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 56);
      objc_msgSend(v6, "latestVersion");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "ckInfo");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "etag");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = 138413058;
      v26 = v9;
      v27 = 2112;
      v28 = v12;
      v29 = 2112;
      v30 = 0;
      v31 = 2112;
      v32 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v25, 0x2Au);

    }
    v13 = *(_QWORD *)(a1 + 72);
    objc_msgSend(v6, "latestVersion");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "ckInfo");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "etag");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *, _QWORD))(v13 + 16))(v13, v16, 0);

  }
  else
  {
    brc_bread_crumbs();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      v19 = (void *)MEMORY[0x1E0CB35C8];
      v20 = *(_QWORD *)(a1 + 56);
      objc_msgSend(*(id *)(a1 + 64), "path");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "brc_errorNoDocument:underlyingPOSIXError:", v21, 2);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = 138413058;
      v26 = v20;
      v27 = 2112;
      v28 = 0;
      v29 = 2112;
      v30 = v22;
      v31 = 2112;
      v32 = v17;
      _os_log_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v25, 0x2Au);

    }
    v23 = (void *)MEMORY[0x1E0CB35C8];
    v24 = *(_QWORD *)(a1 + 72);
    objc_msgSend(*(id *)(a1 + 64), "path");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "brc_errorNoDocument:underlyingPOSIXError:", v14, 2);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v24 + 16))(v24, 0, v15);
  }

}

uint64_t __81__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyEtagAtURL_reply___block_invoke_41(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)startOperation:(id)a3 toCopySharingAccessToken:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  _QWORD v20[5];
  id v21;
  id v22;
  id v23;
  uint64_t v24[3];
  uint8_t buf[4];
  uint64_t v26;
  __int16 v27;
  BRCXPCRegularIPCsClient *v28;
  __int16 v29;
  id v30;
  __int16 v31;
  const char *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v24, 0, sizeof(v24));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopySharingAccessToken:reply:]", 491, v24);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v24[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "path");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v26 = v13;
    v27 = 2112;
    v28 = self;
    v29 = 2112;
    v30 = v15;
    v31 = 2080;
    v32 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopySharingAccessToken:reply:]";
    v33 = 2112;
    v34 = v16;
    v35 = 2112;
    v36 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __90__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopySharingAccessToken_reply___block_invoke;
  v20[3] = &unk_1E8765190;
  v20[4] = self;
  v17 = v10;
  v23 = v17;
  v18 = v9;
  v21 = v18;
  v19 = v8;
  v22 = v19;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v18, 0, 0, 0, v20);

  __brc_leave_section(v24);
}

void __90__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopySharingAccessToken_reply___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  id v19;
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  __int16 v26;
  id v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v5, "brc_wrappedError");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413314;
      v21 = v8;
      v22 = 2112;
      v23 = 0;
      v24 = 2112;
      v25 = 0;
      v26 = 2112;
      v27 = v9;
      v28 = 2112;
      v29 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@,%@)%@", buf, 0x34u);

    }
    v10 = *(_QWORD *)(a1 + 56);
    objc_msgSend(v5, "brc_wrappedError");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, _QWORD, void *))(v10 + 16))(v10, 0, 0, v11);

  }
  else
  {
    v19 = 0;
    objc_msgSend(*(id *)(a1 + 32), "_sharingOperationItemFromLookup:url:allowDirectory:error:", a2, *(_QWORD *)(a1 + 40), 0, &v19);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12)
    {
      v13 = *(_QWORD *)(a1 + 48);
      v14 = *(void **)(a1 + 32);
      objc_msgSend(*(id *)(a1 + 40), "path");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "_startOperation:toCopySharingAccessTokenWithLocalItem:itemIdentifier:reply:", v13, v12, v15, *(_QWORD *)(a1 + 56));

    }
    else
    {
      brc_bread_crumbs();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        v18 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138413314;
        v21 = v18;
        v22 = 2112;
        v23 = 0;
        v24 = 2112;
        v25 = 0;
        v26 = 2112;
        v27 = v19;
        v28 = 2112;
        v29 = v16;
        _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);
      }

      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    }

  }
}

- (void)startOperation:(id)a3 toCopySharingInfoAtURL:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  qos_class_t v24;
  id v25;
  void *v26;
  id v27;
  _QWORD v28[5];
  id v29;
  id v30;
  id v31;
  uint64_t v32[3];
  _QWORD v33[5];
  id v34;
  uint64_t v35[3];
  uint8_t buf[4];
  uint64_t v37;
  __int16 v38;
  BRCXPCRegularIPCsClient *v39;
  __int16 v40;
  id v41;
  __int16 v42;
  const char *v43;
  __int16 v44;
  void *v45;
  __int16 v46;
  void *v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v35, 0, sizeof(v35));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopySharingInfoAtURL:reply:]", 500, v35);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v35[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v37 = v13;
    v38 = 2112;
    v39 = self;
    v40 = 2112;
    v41 = v15;
    v42 = 2080;
    v43 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopySharingInfoAtURL:reply:]";
    v44 = 2112;
    v45 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingProxyEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v33[0] = MEMORY[0x1E0C809B0];
  v33[1] = 3221225472;
  v33[2] = __88__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopySharingInfoAtURL_reply___block_invoke;
  v33[3] = &unk_1E875FCF8;
  v33[4] = self;
  v19 = v10;
  v34 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingProxyEntitled", v33);

  if ((v20 & 1) != 0)
  {
    memset(v32, 0, sizeof(v32));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopySharingInfoAtURL:reply:]", 515, v32);
    brc_bread_crumbs();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      v27 = v8;
      v23 = v32[0];
      v24 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v24, (uint64_t)&brc_qos_entries, 0);
      v25 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "path");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v37 = v23;
      v38 = 2112;
      v39 = self;
      v40 = 2112;
      v41 = v25;
      v42 = 2080;
      v43 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopySharingInfoAtURL:reply:]";
      v44 = 2112;
      v45 = v26;
      v46 = 2112;
      v47 = v21;
      _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v8 = v27;
      v18 = MEMORY[0x1E0C809B0];

    }
    v28[0] = v18;
    v28[1] = 3221225472;
    v28[2] = __88__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopySharingInfoAtURL_reply___block_invoke_44;
    v28[3] = &unk_1E8765190;
    v28[4] = self;
    v31 = v19;
    v29 = v9;
    v30 = v8;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v29, 0, 0, 0, v28);

    __brc_leave_section(v32);
  }
  __brc_leave_section(v35);

}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopySharingInfoAtURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopySharingInfoAtURL_reply___block_invoke_44(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  void *v18;
  id v19;
  id v20;
  uint8_t buf[4];
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  id v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v5, "brc_wrappedError");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413314;
      v22 = v8;
      v23 = 2112;
      v24 = 0;
      v25 = 2112;
      v26 = 0;
      v27 = 2112;
      v28 = v9;
      v29 = 2112;
      v30 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);

    }
    v10 = *(_QWORD *)(a1 + 56);
    objc_msgSend(v5, "brc_wrappedError");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, _QWORD, void *))(v10 + 16))(v10, 0, 0, v11);

  }
  else
  {
    v20 = 0;
    objc_msgSend(*(id *)(a1 + 32), "_sharingOperationItemFromLookup:url:allowDirectory:error:", a2, *(_QWORD *)(a1 + 40), 1, &v20);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12)
    {
      objc_msgSend(*(id *)(a1 + 32), "_startOperation:toCopySharingInfoWithLocalItem:reply:", *(_QWORD *)(a1 + 48), v12, *(_QWORD *)(a1 + 56));
    }
    else
    {
      if (!v20)
      {
        brc_bread_crumbs();
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v17 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_FAULT))
          __88__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopySharingInfoAtURL_reply___block_invoke_44_cold_1();

        objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithDomain:code:description:", *MEMORY[0x1E0D10C90], 15, CFSTR("unreachable: Item not found (with unspecified error)"));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = v20;
        v20 = v18;

      }
      brc_bread_crumbs();
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        v15 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138413314;
        v22 = v15;
        v23 = 2112;
        v24 = 0;
        v25 = 2112;
        v26 = 0;
        v27 = 2112;
        v28 = v20;
        v29 = 2112;
        v30 = v13;
        _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);
      }

      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    }

  }
}

- (void)createSharingInfoForURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  void *v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  void *v18;
  NSObject *v19;
  void *v20;
  NSObject *v21;
  uint64_t v22;
  qos_class_t v23;
  id v24;
  void *v25;
  _QWORD v26[5];
  id v27;
  id v28;
  uint64_t v29[3];
  _QWORD v30[5];
  id v31;
  uint64_t v32[3];
  uint8_t buf[4];
  uint64_t v34;
  __int16 v35;
  BRCXPCRegularIPCsClient *v36;
  __int16 v37;
  id v38;
  __int16 v39;
  const char *v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v32, 0, sizeof(v32));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) createSharingInfoForURL:reply:]", 522, v32);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v32[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v34 = v10;
    v35 = 2112;
    v36 = self;
    v37 = 2112;
    v38 = v12;
    v39 = 2080;
    v40 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) createSharingInfoForURL:reply:]";
    v41 = 2112;
    v42 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "isSharingProxyEntitled");
  v15 = MEMORY[0x1E0C809B0];
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 3221225472;
  v30[2] = __74__BRCXPCRegularIPCsClient_LegacyAdditions__createSharingInfoForURL_reply___block_invoke;
  v30[3] = &unk_1E875FCF8;
  v30[4] = self;
  v16 = v7;
  v31 = v16;
  v17 = _brc_ipc_check_client_privilege(self, 1, v14, (uint64_t)"isSharingProxyEntitled", v30);

  if ((v17 & 1) != 0)
  {
    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient(LegacyAdditions) createSharingInfoForURL:reply:].cold.1();

    memset(v29, 0, sizeof(v29));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) createSharingInfoForURL:reply:]", 536, v29);
    brc_bread_crumbs();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      v22 = v29[0];
      v23 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v23, (uint64_t)&brc_qos_entries, 0);
      v24 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "path");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v34 = v22;
      v35 = 2112;
      v36 = self;
      v37 = 2112;
      v38 = v24;
      v39 = 2080;
      v40 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) createSharingInfoForURL:reply:]";
      v41 = 2112;
      v42 = v25;
      v43 = 2112;
      v44 = v20;
      _os_log_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v15 = MEMORY[0x1E0C809B0];
    }

    v26[0] = v15;
    v26[1] = 3221225472;
    v26[2] = __74__BRCXPCRegularIPCsClient_LegacyAdditions__createSharingInfoForURL_reply___block_invoke_47;
    v26[3] = &unk_1E8765208;
    v26[4] = self;
    v28 = v16;
    v27 = v6;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v27, 0, 0, 0, v26);

    __brc_leave_section(v29);
  }
  __brc_leave_section(v32);

}

void __74__BRCXPCRegularIPCsClient_LegacyAdditions__createSharingInfoForURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __74__BRCXPCRegularIPCsClient_LegacyAdditions__createSharingInfoForURL_reply___block_invoke_47(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  int v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v6, "brc_wrappedError");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = 138413058;
      v23 = v9;
      v24 = 2112;
      v25 = 0;
      v26 = 2112;
      v27 = v10;
      v28 = 2112;
      v29 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v22, 0x2Au);

    }
    v11 = *(_QWORD *)(a1 + 48);
    objc_msgSend(v6, "brc_wrappedError");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v11 + 16))(v11, 0, v12);
  }
  else
  {
    objc_msgSend(v5, "byIDLocalItem");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12 || (objc_msgSend(v5, "faultedLocalItem"), (v12 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
    {
      objc_msgSend(*(id *)(a1 + 32), "_createSharingInfoForLocalItem:reply:", v12, *(_QWORD *)(a1 + 48));
    }
    else
    {
      brc_bread_crumbs();
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        v15 = (void *)MEMORY[0x1E0CB35C8];
        v16 = *(_QWORD *)(a1 + 32);
        objc_msgSend(*(id *)(a1 + 40), "path");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "brc_errorItemNotFound:", v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = 138413058;
        v23 = v16;
        v24 = 2112;
        v25 = 0;
        v26 = 2112;
        v27 = v18;
        v28 = 2112;
        v29 = v13;
        _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v22, 0x2Au);

      }
      v19 = (void *)MEMORY[0x1E0CB35C8];
      v20 = *(_QWORD *)(a1 + 48);
      objc_msgSend(*(id *)(a1 + 40), "path");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "brc_errorItemNotFound:", v12);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, _QWORD, void *))(v20 + 16))(v20, 0, v21);

    }
  }

}

- (void)startOperation:(id)a3 toModifyRecordAccessAtURL:(id)a4 allowAccess:(BOOL)a5 reply:(id)a6
{
  uint64_t v7;
  id v10;
  id v11;
  id v12;
  void *v13;
  NSObject *v14;
  int v15;
  qos_class_t v16;
  void *v17;
  void *v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  void *v23;
  NSObject *v24;
  void *v25;
  NSObject *v26;
  qos_class_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  char v33;
  id v34;
  _QWORD v35[5];
  id v36;
  id v37;
  id v38;
  char v39;
  uint64_t v40[3];
  _QWORD v41[5];
  id v42;
  uint64_t v43[3];
  uint8_t buf[4];
  uint64_t v45;
  __int16 v46;
  BRCXPCRegularIPCsClient *v47;
  __int16 v48;
  id v49;
  __int16 v50;
  const char *v51;
  __int16 v52;
  void *v53;
  __int16 v54;
  void *v55;
  uint64_t v56;

  LODWORD(v7) = a5;
  v56 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a6;
  memset(v43, 0, sizeof(v43));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toModifyRecordAccessAtURL:allowAccess:reply:]", 543, v43);
  brc_bread_crumbs();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    v15 = v7;
    v7 = v43[0];
    v16 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v16, (uint64_t)&brc_qos_entries, 0);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v45 = v7;
    v46 = 2112;
    v47 = self;
    v48 = 2112;
    v49 = v17;
    v50 = 2080;
    v51 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toModifyRecordAccessAtURL:allowAccess:reply:]";
    v52 = 2112;
    v53 = v13;
    _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

    LODWORD(v7) = v15;
  }

  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "isSharingProxyEntitled");
  v20 = MEMORY[0x1E0C809B0];
  v41[0] = MEMORY[0x1E0C809B0];
  v41[1] = 3221225472;
  v41[2] = __103__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toModifyRecordAccessAtURL_allowAccess_reply___block_invoke;
  v41[3] = &unk_1E875FCF8;
  v41[4] = self;
  v21 = v12;
  v42 = v21;
  v22 = _brc_ipc_check_client_privilege(self, 1, v19, (uint64_t)"isSharingProxyEntitled", v41);

  if ((v22 & 1) != 0)
  {
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(v11, "path");
      v30 = objc_claimAutoreleasedReturnValue();
      v31 = (void *)v30;
      v32 = "disallow";
      *(_DWORD *)buf = 136315650;
      if ((_DWORD)v7)
        v32 = "allow";
      v45 = (uint64_t)v32;
      v46 = 2112;
      v47 = (BRCXPCRegularIPCsClient *)v30;
      v48 = 2112;
      v49 = v23;
      _os_log_debug_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_DEBUG, "[DEBUG] Modifying record access to %s at %@%@", buf, 0x20u);

    }
    memset(v40, 0, sizeof(v40));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toModifyRecordAccessAtURL:allowAccess:reply:]", 561, v40);
    brc_bread_crumbs();
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      v33 = v7;
      v34 = v10;
      v7 = v40[0];
      v27 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v27, (uint64_t)&brc_qos_entries, 0);
      v28 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "path");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v45 = v7;
      v46 = 2112;
      v47 = self;
      v48 = 2112;
      v49 = v28;
      v50 = 2080;
      v51 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toModifyRecordAccessAtURL:allowAccess:reply:]";
      v52 = 2112;
      v53 = v29;
      v54 = 2112;
      v55 = v25;
      _os_log_impl(&dword_1CBD43000, v26, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v10 = v34;
      LOBYTE(v7) = v33;

    }
    v35[0] = v20;
    v35[1] = 3221225472;
    v35[2] = __103__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toModifyRecordAccessAtURL_allowAccess_reply___block_invoke_50;
    v35[3] = &unk_1E8765230;
    v35[4] = self;
    v38 = v21;
    v36 = v11;
    v37 = v10;
    v39 = v7;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v36, 0, 0, 0, v35);

    __brc_leave_section(v40);
  }
  __brc_leave_section(v43);

}

void __103__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toModifyRecordAccessAtURL_allowAccess_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __103__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toModifyRecordAccessAtURL_allowAccess_reply___block_invoke_50(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  void *v15;
  id v16;
  id v17;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  id v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138413314;
      v19 = v8;
      v20 = 2112;
      v21 = 0;
      v22 = 2112;
      v23 = 0;
      v24 = 2112;
      v25 = v5;
      v26 = 2112;
      v27 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v17 = 0;
    objc_msgSend(*(id *)(a1 + 32), "_sharingOperationItemFromLookup:url:allowDirectory:error:", a2, *(_QWORD *)(a1 + 40), 0, &v17);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      objc_msgSend(*(id *)(a1 + 32), "_startOperation:toModifyRecordAccessWithLocalItem:allowAccess:reply:", *(_QWORD *)(a1 + 48), v9, *(unsigned __int8 *)(a1 + 64), *(_QWORD *)(a1 + 56));
    }
    else
    {
      if (!v17)
      {
        brc_bread_crumbs();
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT))
          __88__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopySharingInfoAtURL_reply___block_invoke_44_cold_1();

        objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithDomain:code:description:", *MEMORY[0x1E0D10C90], 15, CFSTR("unreachable: Item not found (with unspecified error)"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = v17;
        v17 = v15;

      }
      brc_bread_crumbs();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        v12 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138413314;
        v19 = v12;
        v20 = 2112;
        v21 = 0;
        v22 = 2112;
        v23 = 0;
        v24 = 2112;
        v25 = v17;
        v26 = 2112;
        v27 = v10;
        _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);
      }

      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    }

  }
}

- (void)startOperation:(id)a3 toCopyParticipantTokenAtURL:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  BRCXPCRegularIPCsClient *v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  qos_class_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  _QWORD v32[5];
  id v33;
  id v34;
  id v35;
  uint64_t v36[3];
  _QWORD v37[5];
  id v38;
  uint64_t v39[3];
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  BRCXPCRegularIPCsClient *v43;
  __int16 v44;
  id v45;
  __int16 v46;
  const char *v47;
  __int16 v48;
  void *v49;
  __int16 v50;
  void *v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v39, 0, sizeof(v39));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyParticipantTokenAtURL:reply:]", 568, v39);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v39[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v41 = v13;
    v42 = 2112;
    v43 = self;
    v44 = 2112;
    v45 = v15;
    v46 = 2080;
    v47 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyParticipantTokenAtURL:reply:]";
    v48 = 2112;
    v49 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingPrivateInterfaceEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __93__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyParticipantTokenAtURL_reply___block_invoke;
  v37[3] = &unk_1E875FCF8;
  v37[4] = self;
  v19 = v10;
  v38 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingPrivateInterfaceEntitled", v37);

  if ((v20 & 1) != 0)
  {
    brc_bread_crumbs();
    v21 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(v9, "path");
      v29 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      v30 = objc_msgSend(v29, "UTF8String");
      *(_DWORD *)buf = 136315394;
      v41 = v30;
      v42 = 2112;
      v43 = v21;
      _os_log_debug_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_DEBUG, "[DEBUG] Copying participant token at %s%@", buf, 0x16u);

    }
    memset(v36, 0, sizeof(v36));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyParticipantTokenAtURL:reply:]", 585, v36);
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      v31 = v8;
      v25 = v36[0];
      v26 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v26, (uint64_t)&brc_qos_entries, 0);
      v27 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "path");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v41 = v25;
      v42 = 2112;
      v43 = self;
      v44 = 2112;
      v45 = v27;
      v46 = 2080;
      v47 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toCopyParticipantTokenAtURL:reply:]";
      v48 = 2112;
      v49 = v28;
      v50 = 2112;
      v51 = v23;
      _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v8 = v31;
      v18 = MEMORY[0x1E0C809B0];

    }
    v32[0] = v18;
    v32[1] = 3221225472;
    v32[2] = __93__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyParticipantTokenAtURL_reply___block_invoke_51;
    v32[3] = &unk_1E8765190;
    v32[4] = self;
    v35 = v19;
    v33 = v9;
    v34 = v8;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v33, 1, 0, 0, v32);

    __brc_leave_section(v36);
  }
  __brc_leave_section(v39);

}

void __93__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyParticipantTokenAtURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __93__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopyParticipantTokenAtURL_reply___block_invoke_51(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  id v13;
  uint8_t buf[4];
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138413314;
      v15 = v8;
      v16 = 2112;
      v17 = 0;
      v18 = 2112;
      v19 = 0;
      v20 = 2112;
      v21 = v5;
      v22 = 2112;
      v23 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v13 = 0;
    objc_msgSend(*(id *)(a1 + 32), "_sharingOperationItemFromLookup:url:allowDirectory:error:", a2, *(_QWORD *)(a1 + 40), 0, &v13);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      objc_msgSend(*(id *)(a1 + 32), "_startOperation:toCopyParticipantTokenWithLocalItem:reply:", *(_QWORD *)(a1 + 48), v9, *(_QWORD *)(a1 + 56));
    }
    else
    {
      brc_bread_crumbs();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        v12 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138413314;
        v15 = v12;
        v16 = 2112;
        v17 = 0;
        v18 = 2112;
        v19 = 0;
        v20 = 2112;
        v21 = v13;
        v22 = 2112;
        v23 = v10;
        _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);
      }

      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    }

  }
}

- (void)startOperation:(id)a3 toPrepFolderForSharingAt:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  BRCXPCRegularIPCsClient *v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  qos_class_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  _QWORD v32[5];
  id v33;
  id v34;
  uint64_t v35[3];
  _QWORD v36[5];
  id v37;
  uint64_t v38[3];
  uint8_t buf[4];
  uint64_t v40;
  __int16 v41;
  BRCXPCRegularIPCsClient *v42;
  __int16 v43;
  id v44;
  __int16 v45;
  const char *v46;
  __int16 v47;
  void *v48;
  __int16 v49;
  void *v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v38, 0, sizeof(v38));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toPrepFolderForSharingAt:reply:]", 593, v38);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v38[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v40 = v13;
    v41 = 2112;
    v42 = self;
    v43 = 2112;
    v44 = v15;
    v45 = 2080;
    v46 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toPrepFolderForSharingAt:reply:]";
    v47 = 2112;
    v48 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingPrivateInterfaceEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v36[0] = MEMORY[0x1E0C809B0];
  v36[1] = 3221225472;
  v36[2] = __90__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toPrepFolderForSharingAt_reply___block_invoke;
  v36[3] = &unk_1E875FCF8;
  v36[4] = self;
  v19 = v10;
  v37 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingPrivateInterfaceEntitled", v36);

  if ((v20 & 1) != 0)
  {
    brc_bread_crumbs();
    v21 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(v9, "path");
      v29 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      v30 = objc_msgSend(v29, "UTF8String");
      *(_DWORD *)buf = 136315394;
      v40 = v30;
      v41 = 2112;
      v42 = v21;
      _os_log_debug_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_DEBUG, "[DEBUG] Prep folder at %s%@", buf, 0x16u);

    }
    memset(v35, 0, sizeof(v35));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toPrepFolderForSharingAt:reply:]", 603, v35);
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      v31 = v8;
      v25 = v35[0];
      v26 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v26, (uint64_t)&brc_qos_entries, 0);
      v27 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "path");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v40 = v25;
      v41 = 2112;
      v42 = self;
      v43 = 2112;
      v44 = v27;
      v45 = 2080;
      v46 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toPrepFolderForSharingAt:reply:]";
      v47 = 2112;
      v48 = v28;
      v49 = 2112;
      v50 = v23;
      _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v8 = v31;
      v18 = MEMORY[0x1E0C809B0];

    }
    v32[0] = v18;
    v32[1] = 3221225472;
    v32[2] = __90__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toPrepFolderForSharingAt_reply___block_invoke_52;
    v32[3] = &unk_1E8765208;
    v32[4] = self;
    v34 = v19;
    v33 = v8;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v9, 0, 0, 0, v32);

    __brc_leave_section(v35);
  }
  __brc_leave_section(v38);

}

void __90__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toPrepFolderForSharingAt_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __90__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toPrepFolderForSharingAt_reply___block_invoke_52(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  id v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v10 = 138412802;
      v11 = v8;
      v12 = 2112;
      v13 = v5;
      v14 = 2112;
      v15 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v10, 0x20u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    objc_msgSend(a2, "byIDLocalItem");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "_startOperation:toPrepFolderForSharingWithLocalItem:reply:", *(_QWORD *)(a1 + 40), v9, *(_QWORD *)(a1 + 48));

  }
}

- (void)startOperation:(id)a3 toProcessSubitemsAtURL:(id)a4 maxSubsharesFailures:(unint64_t)a5 processType:(unint64_t)a6 reply:(id)a7
{
  id v10;
  id v11;
  id v12;
  void *v13;
  NSObject *v14;
  id v15;
  id v16;
  uint64_t v17;
  qos_class_t v18;
  void *v19;
  void *v20;
  char v21;
  id v22;
  char v23;
  BRCXPCRegularIPCsClient *v24;
  NSObject *v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  qos_class_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  _QWORD v37[5];
  id v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42[3];
  _QWORD v43[5];
  id v44;
  uint64_t v45[3];
  uint8_t buf[4];
  uint64_t v47;
  __int16 v48;
  BRCXPCRegularIPCsClient *v49;
  __int16 v50;
  id v51;
  __int16 v52;
  const char *v53;
  __int16 v54;
  void *v55;
  __int16 v56;
  void *v57;
  uint64_t v58;

  v58 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a7;
  memset(v45, 0, sizeof(v45));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toProcessSubitemsAtURL:maxSubsharesFailures:processType:reply:]", 612, v45);
  brc_bread_crumbs();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    v15 = v11;
    v16 = v10;
    v17 = v45[0];
    v18 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v18, (uint64_t)&brc_qos_entries, 0);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v47 = v17;
    v48 = 2112;
    v49 = self;
    v50 = 2112;
    v51 = v19;
    v52 = 2080;
    v53 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toProcessSubitemsAtURL:maxSubsharesFailures:processType:reply:]";
    v54 = 2112;
    v55 = v13;
    _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

    v10 = v16;
    v11 = v15;
  }

  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = objc_msgSend(v20, "isFolderSharingProxyEntitled");
  v43[0] = MEMORY[0x1E0C809B0];
  v43[1] = 3221225472;
  v43[2] = __121__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toProcessSubitemsAtURL_maxSubsharesFailures_processType_reply___block_invoke;
  v43[3] = &unk_1E875FCF8;
  v43[4] = self;
  v22 = v12;
  v44 = v22;
  v23 = _brc_ipc_check_client_privilege(self, 1, v21, (uint64_t)"isFolderSharingProxyEntitled", v43);

  if ((v23 & 1) != 0)
  {
    brc_bread_crumbs();
    v24 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(v11, "path");
      v32 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      v33 = objc_msgSend(v32, "UTF8String");
      *(_DWORD *)buf = 136315394;
      v47 = v33;
      v48 = 2112;
      v49 = v24;
      _os_log_debug_impl(&dword_1CBD43000, v25, OS_LOG_TYPE_DEBUG, "[DEBUG] Clean share subitems at %s%@", buf, 0x16u);

    }
    memset(v42, 0, sizeof(v42));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toProcessSubitemsAtURL:maxSubsharesFailures:processType:reply:]", 622, v42);
    brc_bread_crumbs();
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      v34 = v10;
      v28 = v42[0];
      v29 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v29, (uint64_t)&brc_qos_entries, 0);
      v30 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "path");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v47 = v28;
      v48 = 2112;
      v49 = self;
      v50 = 2112;
      v51 = v30;
      v52 = 2080;
      v53 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toProcessSubitemsAtURL:maxSubsharesFailures:processType:reply:]";
      v54 = 2112;
      v55 = v31;
      v56 = 2112;
      v57 = v26;
      _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v10 = v34;
    }

    v37[0] = MEMORY[0x1E0C809B0];
    v37[1] = 3221225472;
    v37[2] = __121__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toProcessSubitemsAtURL_maxSubsharesFailures_processType_reply___block_invoke_54;
    v37[3] = &unk_1E8765258;
    v37[4] = self;
    v39 = v22;
    v38 = v10;
    v40 = a5;
    v41 = a6;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v11, 0, 0, 0, v37);

    __brc_leave_section(v42);
  }
  __brc_leave_section(v45);

}

void __121__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toProcessSubitemsAtURL_maxSubsharesFailures_processType_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __121__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toProcessSubitemsAtURL_maxSubsharesFailures_processType_reply___block_invoke_54(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  id v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v10 = 138412802;
      v11 = v8;
      v12 = 2112;
      v13 = v5;
      v14 = 2112;
      v15 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v10, 0x20u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    objc_msgSend(a2, "byIDLocalItem");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "_startOperation:toProcessSubitemsWithLocalItem:maxSubsharesFailures:processType:reply:", *(_QWORD *)(a1 + 40), v9, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 48));

  }
}

- (id)_createBookmarkWithTarget:(id)a3 targetPath:(id)a4 parentPath:(id)a5 aliasName:(id)a6 error:(id *)a7
{
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  NSObject *v17;
  BRCBookmark *v18;
  void *v19;
  void *v20;
  BRCBookmark *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  _QWORD v30[4];
  id v31;
  BRCXPCRegularIPCsClient *v32;
  id v33;
  id v34;
  uint8_t buf[4];
  id v36;
  __int16 v37;
  id v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  brc_bread_crumbs();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 138412802;
    v36 = v13;
    v37 = 2112;
    v38 = v12;
    v39 = 2112;
    v40 = v16;
    _os_log_debug_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_DEBUG, "[DEBUG] creating bookmark with target %@ (%@)%@", buf, 0x20u);
  }

  v18 = [BRCBookmark alloc];
  objc_msgSend(v14, "appLibrary");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  -[BRCXPCClient session](self, "session");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = -[BRCBookmark initWithTarget:owningAppLibrary:path:session:](v18, "initWithTarget:owningAppLibrary:path:session:", v12, v19, v13, v20);

  if (-[BRCBookmark resolveWithError:](v21, "resolveWithError:", a7)
    && (-[BRCBookmark writeUnderParent:name:error:](v21, "writeUnderParent:name:error:", v14, v15, a7),
        (v22 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    v23 = (void *)v22;
    objc_msgSend(v14, "appLibrary");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "db");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v30[0] = MEMORY[0x1E0C809B0];
    v30[1] = 3221225472;
    v30[2] = __108__BRCXPCRegularIPCsClient_LegacyAdditions___createBookmarkWithTarget_targetPath_parentPath_aliasName_error___block_invoke;
    v30[3] = &unk_1E8764178;
    v31 = v12;
    v32 = self;
    v33 = v13;
    v26 = v23;
    v34 = v26;
    objc_msgSend(v25, "groupInBatch:", v30);

    v27 = v34;
    v28 = v26;

  }
  else
  {
    v28 = 0;
  }

  return v28;
}

void __108__BRCXPCRegularIPCsClient_LegacyAdditions___createBookmarkWithTarget_targetPath_parentPath_aliasName_error___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  if (!*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(*(id *)(a1 + 40), "session");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "fsReader");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "fseventAtPath:flags:", *(_QWORD *)(a1 + 48), 0);

  }
  objc_msgSend(*(id *)(a1 + 40), "session");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fsReader");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fseventAtPath:flags:", *(_QWORD *)(a1 + 56), 0);

}

- (void)scheduleDeepScanForContainer:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  NSObject *v17;
  id v18;
  _QWORD block[4];
  id v20;
  id v21;
  BRCXPCRegularIPCsClient *v22;
  id v23;
  _QWORD v24[5];
  id v25;
  uint64_t v26[3];
  uint8_t buf[4];
  uint64_t v28;
  __int16 v29;
  BRCXPCRegularIPCsClient *v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  const char *v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v26, 0, sizeof(v26));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) scheduleDeepScanForContainer:reply:]", 662, v26);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v26[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v28 = v10;
    v29 = 2112;
    v30 = self;
    v31 = 2112;
    v32 = v12;
    v33 = 2080;
    v34 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) scheduleDeepScanForContainer:reply:]";
    v35 = 2112;
    v36 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v14 = (void *)*MEMORY[0x1E0D10C28];
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __79__BRCXPCRegularIPCsClient_LegacyAdditions__scheduleDeepScanForContainer_reply___block_invoke;
  v24[3] = &unk_1E875FCF8;
  v24[4] = self;
  v15 = v7;
  v25 = v15;
  LODWORD(v14) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v14, v24);

  if ((_DWORD)v14)
  {
    -[BRCXPCClient session](self, "session");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "clientTruthWorkloop");
    v17 = objc_claimAutoreleasedReturnValue();
    block[0] = v13;
    block[1] = 3221225472;
    block[2] = __79__BRCXPCRegularIPCsClient_LegacyAdditions__scheduleDeepScanForContainer_reply___block_invoke_57;
    block[3] = &unk_1E875DDA0;
    v20 = v6;
    v21 = v16;
    v22 = self;
    v23 = v15;
    v18 = v16;
    dispatch_async_and_wait(v17, block);

  }
  __brc_leave_section(v26);

}

void __79__BRCXPCRegularIPCsClient_LegacyAdditions__scheduleDeepScanForContainer_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __79__BRCXPCRegularIPCsClient_LegacyAdditions__scheduleDeepScanForContainer_reply___block_invoke_57(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint8_t v21[128];
  uint8_t buf[4];
  uint64_t v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a1 + 32))
  {
    v19 = 0u;
    v20 = 0u;
    v17 = 0u;
    v18 = 0u;
    objc_msgSend(*(id *)(a1 + 40), "appLibraries", 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v18;
      do
      {
        v7 = 0;
        do
        {
          if (*(_QWORD *)v18 != v6)
            objc_enumerationMutation(v3);
          objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v7++), "scheduleDeepScanWithReason:", CFSTR("testing"));
        }
        while (v5 != v7);
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      }
      while (v5);
    }
    goto LABEL_11;
  }
  objc_msgSend(*(id *)(a1 + 40), "appLibraryByID:");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "scheduleDeepScanWithReason:", CFSTR("testing"));
LABEL_11:

    brc_bread_crumbs();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412802;
      v23 = v10;
      v24 = 2112;
      v25 = 0;
      v26 = 2112;
      v27 = v8;
      _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    return;
  }
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = *(_QWORD *)(a1 + 48);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", *(_QWORD *)(a1 + 32));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    v23 = v13;
    v24 = 2112;
    v25 = v14;
    v26 = 2112;
    v27 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

  }
  v15 = *(_QWORD *)(a1 + 56);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", *(_QWORD *)(a1 + 32));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v15 + 16))(v15, v16);

}

- (void)moveBRSecurityBookmarkAtURL:(id)a3 toURL:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  _QWORD v19[4];
  id v20;
  id v21;
  BRCXPCRegularIPCsClient *v22;
  id v23;
  _QWORD v24[5];
  id v25;
  uint64_t v26[3];
  uint8_t buf[4];
  uint64_t v28;
  __int16 v29;
  BRCXPCRegularIPCsClient *v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  const char *v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v26, 0, sizeof(v26));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) moveBRSecurityBookmarkAtURL:toURL:reply:]", 685, v26);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v26[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v28 = v13;
    v29 = 2112;
    v30 = self;
    v31 = 2112;
    v32 = v15;
    v33 = 2080;
    v34 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) moveBRSecurityBookmarkAtURL:toURL:reply:]";
    v35 = 2112;
    v36 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v16 = MEMORY[0x1E0C809B0];
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __84__BRCXPCRegularIPCsClient_LegacyAdditions__moveBRSecurityBookmarkAtURL_toURL_reply___block_invoke;
  v24[3] = &unk_1E875FCF8;
  v24[4] = self;
  v17 = v10;
  v25 = v17;
  v18 = _brc_ipc_check_applibrary_proxy(self, 1, v24);

  if (v18)
  {
    v19[0] = v16;
    v19[1] = 3221225472;
    v19[2] = __84__BRCXPCRegularIPCsClient_LegacyAdditions__moveBRSecurityBookmarkAtURL_toURL_reply___block_invoke_60;
    v19[3] = &unk_1E8765280;
    v20 = v9;
    v21 = v8;
    v22 = self;
    v23 = v17;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v21, 1, 0, 0, v19);

  }
  __brc_leave_section(v26);

}

void __84__BRCXPCRegularIPCsClient_LegacyAdditions__moveBRSecurityBookmarkAtURL_toURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __84__BRCXPCRegularIPCsClient_LegacyAdditions__moveBRSecurityBookmarkAtURL_toURL_reply___block_invoke_60(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  char v28;
  void *v29;
  NSObject *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  NSObject *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  _QWORD v42[4];
  id v43;
  id v44;
  id v45;
  id v46;
  unsigned int v47;
  uint8_t buf[4];
  void *v49;
  __int16 v50;
  _BYTE v51[18];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  v47 = 0;
  objc_msgSend(v5, "session");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "path");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "stringByDeletingLastPathComponent");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "resolvedOpenRelpathForPath:mustExist:errcode:", v9, 1, &v47);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v10)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:", v47);
    v18 = (id)objc_claimAutoreleasedReturnValue();
    v40 = 0;
    v11 = 0;
LABEL_8:
    v41 = 0;
    v38 = 0;
    v17 = 0;
    goto LABEL_9;
  }
  objc_msgSend(v5, "byIDLocalItem");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v11, "isBRAlias") & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("url"), *(_QWORD *)(a1 + 40));
    v18 = (id)objc_claimAutoreleasedReturnValue();
    v40 = 0;
    goto LABEL_8;
  }
  v12 = *(void **)(a1 + 40);
  v46 = v6;
  objc_msgSend(v12, "br_externalDocumentPropertiesWithError:", &v46);
  v13 = (id)objc_claimAutoreleasedReturnValue();
  v14 = v46;

  if (v13)
  {
    v41 = v13;
    objc_msgSend(*(id *)(a1 + 40), "br_URLByResolvingInProcessExternalDocumentReferenceWithProperties:", v13);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = v15;
    if (v15)
    {
      objc_msgSend(v15, "path");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "resolvedOpenRelpathForPath:mustExist:errcode:", v16, 0, &v47);
      v17 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v17 = 0;
    }
    objc_msgSend(v11, "asBRAlias");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "targetDocument");
    v23 = objc_claimAutoreleasedReturnValue();

    v24 = *(void **)(a1 + 48);
    objc_msgSend(*(id *)(a1 + 32), "lastPathComponent");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = v14;
    v38 = v23;
    objc_msgSend(v24, "_createBookmarkWithTarget:targetPath:parentPath:aliasName:error:", v23, v17, v10, v25, &v45);
    v13 = (id)objc_claimAutoreleasedReturnValue();
    v18 = v45;

    if (!v13)
      goto LABEL_11;
    objc_msgSend(v7, "fileUnlinker");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "path");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = objc_msgSend(v26, "renameAndUnlinkInBackgroundItemAtPath:", v27);

    if ((v28 & 1) == 0)
    {
      brc_bread_crumbs();
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v30 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(*(id *)(a1 + 40), "path");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v49 = v31;
        v50 = 2112;
        *(_QWORD *)v51 = v29;
        _os_log_impl(&dword_1CBD43000, v30, OS_LOG_TYPE_DEFAULT, "[WARNING] can't unlink original item at %@%@", buf, 0x16u);

      }
    }
    objc_msgSend(*(id *)(a1 + 40), "path");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "resolvedOpenRelpathForPath:mustExist:errcode:", v32, 0, &v47);
    v33 = (void *)objc_claimAutoreleasedReturnValue();

    if (v33)
    {
      objc_msgSend(v10, "appLibrary");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "db");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v42[0] = MEMORY[0x1E0C809B0];
      v42[1] = 3221225472;
      v42[2] = __84__BRCXPCRegularIPCsClient_LegacyAdditions__moveBRSecurityBookmarkAtURL_toURL_reply___block_invoke_63;
      v42[3] = &unk_1E8760018;
      v43 = v7;
      v13 = v33;
      v44 = v13;
      objc_msgSend(v35, "groupInBatch:", v42);

      v6 = v43;
      goto LABEL_10;
    }
    brc_bread_crumbs();
    v6 = (id)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v36 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(*(id *)(a1 + 40), "path");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v49 = v37;
      v50 = 1024;
      *(_DWORD *)v51 = v47;
      *(_WORD *)&v51[4] = 2112;
      *(_QWORD *)&v51[6] = v6;
      _os_log_impl(&dword_1CBD43000, v36, OS_LOG_TYPE_DEFAULT, "[WARNING] can't find relpath for %@ %{errno}d%@", buf, 0x1Cu);

    }
LABEL_9:
    v13 = 0;
LABEL_10:

LABEL_11:
    v14 = v18;
    objc_msgSend(v10, "close", v38);
    goto LABEL_12;
  }
  v40 = 0;
  v41 = 0;
  v17 = 0;
  objc_msgSend(v10, "close", 0);
LABEL_12:
  objc_msgSend(v17, "close");
  objc_msgSend(v13, "close");
  brc_bread_crumbs();
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v20 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
  {
    v21 = *(void **)(a1 + 48);
    *(_DWORD *)buf = 138412802;
    v49 = v21;
    v50 = 2112;
    *(_QWORD *)v51 = v14;
    *(_WORD *)&v51[8] = 2112;
    *(_QWORD *)&v51[10] = v19;
    _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
}

void __84__BRCXPCRegularIPCsClient_LegacyAdditions__moveBRSecurityBookmarkAtURL_toURL_reply___block_invoke_63(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "fsReader");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fseventAtPath:flags:", *(_QWORD *)(a1 + 40), 0);

}

- (void)_readerThrottleBackoffForDocumentAtPath:(id)a3 session:(id)a4 containerID:(id)a5 reply:(id)a6
{
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  id v13;
  id v14;
  id v15;
  _QWORD block[5];
  id v17;
  id v18;
  id v19;

  v9 = a3;
  v10 = a4;
  v11 = a6;
  objc_msgSend(v10, "clientTruthWorkloop");
  v12 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __110__BRCXPCRegularIPCsClient_LegacyAdditions___readerThrottleBackoffForDocumentAtPath_session_containerID_reply___block_invoke;
  block[3] = &unk_1E875DDA0;
  block[4] = self;
  v17 = v9;
  v18 = v10;
  v19 = v11;
  v13 = v11;
  v14 = v10;
  v15 = v9;
  dispatch_async_and_wait(v12, block);

}

void __110__BRCXPCRegularIPCsClient_LegacyAdditions___readerThrottleBackoffForDocumentAtPath_session_containerID_reply___block_invoke(uint64_t a1)
{
  void *v2;
  BRCURLToItemLookup *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  double v16;
  double v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  NSObject *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  unsigned int v37;
  uint8_t buf[4];
  uint64_t v39;
  __int16 v40;
  double v41;
  __int16 v42;
  void *v43;
  __int16 v44;
  void *v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "_auditedURLFromPath:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = -[BRCURLToItemLookup initWithURL:session:]([BRCURLToItemLookup alloc], "initWithURL:session:", v2, *(_QWORD *)(a1 + 48));
  v37 = 0;
  if (-[BRCURLToItemLookup resolveParentAndKeepOpenMustExist:errcode:](v3, "resolveParentAndKeepOpenMustExist:errcode:", 1, &v37))
  {
    -[BRCURLToItemLookup byIDLocalItem](v3, "byIDLocalItem");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[BRCURLToItemLookup closePaths](v3, "closePaths");
    if (v4 && (objc_msgSend(v4, "isDocument") & 1) != 0)
    {
      objc_msgSend(*(id *)(a1 + 48), "clientDB");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "serverZone");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "dbRowID");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = (void *)objc_msgSend(v5, "fetch:", CFSTR("SELECT throttle_state, next_retry_stamp FROM client_reader_throttle WHERE zone_rowid = %@ AND throttle_id = %lld"), v7, objc_msgSend(v4, "dbRowID"));

      objc_msgSend(v5, "lastError");
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      if (v9)
      {
        brc_bread_crumbs();
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          v12 = *(_QWORD *)(a1 + 32);
          objc_msgSend(v5, "lastError");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138413058;
          v39 = v12;
          v40 = 2048;
          v41 = 0.0;
          v42 = 2112;
          v43 = v13;
          v44 = 2112;
          v45 = v10;
          _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%f, %@)%@", buf, 0x2Au);

        }
        v14 = *(_QWORD *)(a1 + 56);
        objc_msgSend(v5, "lastError");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        (*(void (**)(uint64_t, void *, double))(v14 + 16))(v14, v15, 0.0);

      }
      if (objc_msgSend(v8, "next"))
      {
        brc_current_date_nsec();
        objc_msgSend(v8, "longLongAtIndex:", 1);
        brc_interval_from_nsec();
        v17 = v16;
        brc_bread_crumbs();
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
        {
          v20 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 138413058;
          v39 = v20;
          v40 = 2048;
          v41 = v17;
          v42 = 2112;
          v43 = 0;
          v44 = 2112;
          v45 = v18;
          _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%f, %@)%@", buf, 0x2Au);
        }

        (*(void (**)(double))(*(_QWORD *)(a1 + 56) + 16))(v17);
      }
      else
      {
        brc_bread_crumbs();
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v32 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
        {
          v33 = *(_QWORD *)(a1 + 32);
          objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:", 22);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138413058;
          v39 = v33;
          v40 = 2048;
          v41 = 0.0;
          v42 = 2112;
          v43 = v34;
          v44 = 2112;
          v45 = v31;
          _os_log_impl(&dword_1CBD43000, v32, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%f, %@)%@", buf, 0x2Au);

        }
        v35 = *(_QWORD *)(a1 + 56);
        objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:", 22);
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        (*(void (**)(uint64_t, void *, double))(v35 + 16))(v35, v36, 0.0);

      }
    }
    else
    {
      brc_bread_crumbs();
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        v28 = *(_QWORD *)(a1 + 32);
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        v39 = v28;
        v40 = 2048;
        v41 = 0.0;
        v42 = 2112;
        v43 = v29;
        v44 = 2112;
        v45 = v26;
        _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%f, %@)%@", buf, 0x2Au);

      }
      v30 = *(_QWORD *)(a1 + 56);
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, void *, double))(v30 + 16))(v30, v5, 0.0);
    }

  }
  else
  {
    brc_bread_crumbs();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      v23 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:", v37);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v39 = v23;
      v40 = 2048;
      v41 = 0.0;
      v42 = 2112;
      v43 = v24;
      v44 = 2112;
      v45 = v21;
      _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%f, %@)%@", buf, 0x2Au);

    }
    v25 = *(_QWORD *)(a1 + 56);
    objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:", v37);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *, double))(v25 + 16))(v25, v4, 0.0);
  }

}

- (void)readerThrottleBackoffForDocumentAtPath:(id)a3 containerID:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  _QWORD v22[5];
  id v23;
  id v24;
  id v25;
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) readerThrottleBackoffForDocumentAtPath:containerID:reply:]", 801, v28);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v28[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = v13;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v15;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) readerThrottleBackoffForDocumentAtPath:containerID:reply:]";
    v37 = 2112;
    v38 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isAutomationEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __101__BRCXPCRegularIPCsClient_LegacyAdditions__readerThrottleBackoffForDocumentAtPath_containerID_reply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v19 = v10;
  v27 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isAutomationEntitled", v26);

  if ((v20 & 1) != 0)
  {
    v22[0] = v18;
    v22[1] = 3221225472;
    v22[2] = __101__BRCXPCRegularIPCsClient_LegacyAdditions__readerThrottleBackoffForDocumentAtPath_containerID_reply___block_invoke_67;
    v22[3] = &unk_1E87652A8;
    v22[4] = self;
    v25 = v19;
    v23 = v8;
    v24 = v9;
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v23);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    -[BRCXPCClient performBlock:withSessionFromURL:](self, "performBlock:withSessionFromURL:", v22, v21);

  }
  __brc_leave_section(v28);

}

void __101__BRCXPCRegularIPCsClient_LegacyAdditions__readerThrottleBackoffForDocumentAtPath_containerID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2048;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%f, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(double))(*(_QWORD *)(a1 + 40) + 16))(0.0);
}

void __101__BRCXPCRegularIPCsClient_LegacyAdditions__readerThrottleBackoffForDocumentAtPath_containerID_reply___block_invoke_67(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = 138413058;
      v10 = v8;
      v11 = 2048;
      v12 = 0;
      v13 = 2112;
      v14 = v5;
      v15 = 2112;
      v16 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%f, %@)%@", (uint8_t *)&v9, 0x2Au);
    }

    (*(void (**)(double))(*(_QWORD *)(a1 + 56) + 16))(0.0);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "_readerThrottleBackoffForDocumentAtPath:session:containerID:reply:", *(_QWORD *)(a1 + 40), a2, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  }

}

- (void)getEvictableSpaceWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  id v18;
  _QWORD block[4];
  id v20;
  BRCXPCRegularIPCsClient *v21;
  id v22;
  uint64_t v23;
  _QWORD v24[5];
  id v25;
  uint64_t v26[3];
  uint8_t buf[4];
  uint64_t v28;
  __int16 v29;
  BRCXPCRegularIPCsClient *v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  const char *v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v26, 0, sizeof(v26));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getEvictableSpaceWithReply:]", 817, v26);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v26[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v28 = v7;
    v29 = 2112;
    v30 = self;
    v31 = 2112;
    v32 = v9;
    v33 = 2080;
    v34 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getEvictableSpaceWithReply:]";
    v35 = 2112;
    v36 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = MEMORY[0x1E0C809B0];
  v11 = (void *)*MEMORY[0x1E0D10C68];
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __71__BRCXPCRegularIPCsClient_LegacyAdditions__getEvictableSpaceWithReply___block_invoke;
  v24[3] = &unk_1E875FCF8;
  v24[4] = self;
  v12 = v4;
  v25 = v12;
  LODWORD(v11) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v11, v24);

  if ((_DWORD)v11)
  {
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "defaultTimeDeltaForEviction");
    v15 = v14;
    -[BRCXPCClient session](self, "session");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "readOnlyWorkloop");
    v17 = objc_claimAutoreleasedReturnValue();
    block[0] = v10;
    block[1] = 3221225472;
    block[2] = __71__BRCXPCRegularIPCsClient_LegacyAdditions__getEvictableSpaceWithReply___block_invoke_70;
    block[3] = &unk_1E8760188;
    v23 = v15;
    v20 = v16;
    v21 = self;
    v22 = v12;
    v18 = v16;
    dispatch_async(v17, block);

  }
  __brc_leave_section(v26);

}

void __71__BRCXPCRegularIPCsClient_LegacyAdditions__getEvictableSpaceWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2048;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%lu, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __71__BRCXPCRegularIPCsClient_LegacyAdditions__getEvictableSpaceWithReply___block_invoke_70(uint64_t a1)
{
  void *v2;
  double v3;
  void *v4;
  void *v5;
  _QWORD v6[5];
  id v7;

  v2 = *(void **)(a1 + 32);
  v3 = *(double *)(a1 + 56);
  objc_msgSend(v2, "expensiveReadOnlyDB");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __71__BRCXPCRegularIPCsClient_LegacyAdditions__getEvictableSpaceWithReply___block_invoke_2;
  v6[3] = &unk_1E87652D0;
  v5 = *(void **)(a1 + 48);
  v6[4] = *(_QWORD *)(a1 + 40);
  v7 = v5;
  objc_msgSend(v2, "computeTotalEvictableSizeWithAccessLowTimeDelta:medTimeDelta:highTimeDelta:db:reply:", v4, v6, v3 + 1.0, v3 + 1.0, v3);

}

void __71__BRCXPCRegularIPCsClient_LegacyAdditions__getEvictableSpaceWithReply___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v7 = a5;
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = 138413058;
    v12 = v10;
    v13 = 2048;
    v14 = a4;
    v15 = 2112;
    v16 = v7;
    v17 = 2112;
    v18 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%llu, %@)%@", (uint8_t *)&v11, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)startOperation:(id)a3 toEvictItemAtURL:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  _QWORD v20[5];
  id v21;
  id v22;
  id v23;
  uint64_t v24[3];
  uint8_t buf[4];
  uint64_t v26;
  __int16 v27;
  BRCXPCRegularIPCsClient *v28;
  __int16 v29;
  id v30;
  __int16 v31;
  const char *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v24, 0, sizeof(v24));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toEvictItemAtURL:reply:]", 862, v24);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v24[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "path");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v26 = v13;
    v27 = 2112;
    v28 = self;
    v29 = 2112;
    v30 = v15;
    v31 = 2080;
    v32 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toEvictItemAtURL:reply:]";
    v33 = 2112;
    v34 = v16;
    v35 = 2112;
    v36 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __82__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toEvictItemAtURL_reply___block_invoke;
  v20[3] = &unk_1E8765190;
  v20[4] = self;
  v17 = v10;
  v23 = v17;
  v18 = v9;
  v21 = v18;
  v19 = v8;
  v22 = v19;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v18, 0, 0, 0, v20);

  __brc_leave_section(v24);
}

void __82__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toEvictItemAtURL_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  BRCEvictItemOperation *v15;
  void *v16;
  BRCEvictItemOperation *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, void *);
  void *v30;
  uint64_t v31;
  id v32;
  uint8_t buf[4];
  uint64_t v34;
  __int16 v35;
  void *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v6, "brc_wrappedError");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v34 = v9;
      v35 = 2112;
      v36 = v10;
      v37 = 2112;
      v38 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    v11 = *(_QWORD *)(a1 + 56);
    v12 = v6;
LABEL_5:
    objc_msgSend(v12, "brc_wrappedError");
    v13 = objc_claimAutoreleasedReturnValue();
    goto LABEL_6;
  }
  if (!v5)
  {
    brc_bread_crumbs();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      v21 = *(_QWORD *)(a1 + 32);
      objc_msgSend(0, "brc_wrappedError");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v34 = v21;
      v35 = 2112;
      v36 = v22;
      v37 = 2112;
      v38 = v19;
      _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    v11 = *(_QWORD *)(a1 + 56);
    v12 = 0;
    goto LABEL_5;
  }
  objc_msgSend(v5, "byIDLocalItem");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14 || (objc_msgSend(v5, "faultedLocalItem"), (v14 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
  {
    v15 = [BRCEvictItemOperation alloc];
    objc_msgSend(v5, "session");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = -[BRCEvictItemOperation initWithSession:url:](v15, "initWithSession:url:", v16, *(_QWORD *)(a1 + 40));

    -[_BRCFrameworkOperation setRemoteClientProxy:](v17, "setRemoteClientProxy:", *(_QWORD *)(a1 + 48));
    v27 = MEMORY[0x1E0C809B0];
    v28 = 3221225472;
    v29 = __82__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toEvictItemAtURL_reply___block_invoke_73;
    v30 = &unk_1E8760EB8;
    v31 = *(_QWORD *)(a1 + 32);
    v32 = *(id *)(a1 + 56);
    -[_BRCOperation setFinishBlock:](v17, "setFinishBlock:", &v27);
    objc_msgSend(v5, "session", v27, v28, v29, v30, v31);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "addMiscOperation:", v17);

    -[_BRCOperation schedule](v17, "schedule");
    goto LABEL_11;
  }
  brc_bread_crumbs();
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v24 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
  {
    v25 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:", 2);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    v34 = v25;
    v35 = 2112;
    v36 = v26;
    v37 = 2112;
    v38 = v23;
    _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

  }
  v11 = *(_QWORD *)(a1 + 56);
  objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:", 2);
  v13 = objc_claimAutoreleasedReturnValue();
LABEL_6:
  v14 = (void *)v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v11, v13);
LABEL_11:

}

void __82__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toEvictItemAtURL_reply___block_invoke_73(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  id v11;
  __int16 v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = 138412802;
    v9 = v7;
    v10 = 2112;
    v11 = v4;
    v12 = 2112;
    v13 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v8, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)overwriteAccessTimeForItemAtURL:(id)a3 atime:(unint64_t)a4 reply:(id)a5
{
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  qos_class_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  qos_class_t v21;
  id v22;
  void *v23;
  unint64_t v24;
  _QWORD v25[5];
  id v26;
  id v27;
  unint64_t v28;
  uint64_t v29[3];
  _QWORD v30[5];
  id v31;
  uint64_t v32[3];
  uint8_t buf[4];
  uint64_t v34;
  __int16 v35;
  BRCXPCRegularIPCsClient *v36;
  __int16 v37;
  id v38;
  __int16 v39;
  const char *v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  memset(v32, 0, sizeof(v32));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) overwriteAccessTimeForItemAtURL:atime:reply:]", 1053, v32);
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = v32[0];
    v13 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v13, (uint64_t)&brc_qos_entries, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v34 = v12;
    v35 = 2112;
    v36 = self;
    v37 = 2112;
    v38 = v14;
    v39 = 2080;
    v40 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) overwriteAccessTimeForItemAtURL:atime:reply:]";
    v41 = 2112;
    v42 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v15 = MEMORY[0x1E0C809B0];
  v16 = (void *)*MEMORY[0x1E0D10C28];
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 3221225472;
  v30[2] = __88__BRCXPCRegularIPCsClient_LegacyAdditions__overwriteAccessTimeForItemAtURL_atime_reply___block_invoke;
  v30[3] = &unk_1E875FCF8;
  v30[4] = self;
  v17 = v9;
  v31 = v17;
  LODWORD(v16) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v16, v30);

  if ((_DWORD)v16)
  {
    memset(v29, 0, sizeof(v29));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) overwriteAccessTimeForItemAtURL:atime:reply:]", 1079, v29);
    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      v24 = a4;
      v20 = v29[0];
      v21 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v21, (uint64_t)&brc_qos_entries, 0);
      v22 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "path");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v34 = v20;
      v35 = 2112;
      v36 = self;
      v37 = 2112;
      v38 = v22;
      v39 = 2080;
      v40 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) overwriteAccessTimeForItemAtURL:atime:reply:]";
      v41 = 2112;
      v42 = v23;
      v43 = 2112;
      v44 = v18;
      _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      a4 = v24;
      v15 = MEMORY[0x1E0C809B0];

    }
    v25[0] = v15;
    v25[1] = 3221225472;
    v25[2] = __88__BRCXPCRegularIPCsClient_LegacyAdditions__overwriteAccessTimeForItemAtURL_atime_reply___block_invoke_74;
    v25[3] = &unk_1E87652F8;
    v25[4] = self;
    v27 = v17;
    v26 = v8;
    v28 = a4;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v26, 1, 0, 0, v25);

    __brc_leave_section(v29);
  }
  __brc_leave_section(v32);

}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__overwriteAccessTimeForItemAtURL_atime_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__overwriteAccessTimeForItemAtURL_atime_reply___block_invoke_74(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  char v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  _BOOL4 v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  NSObject *v33;
  _BOOL4 v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  NSObject *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint8_t buf[4];
  uint64_t v51;
  __int16 v52;
  void *v53;
  __int16 v54;
  void *v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v6, "brc_wrappedError");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v51 = v9;
      v52 = 2112;
      v53 = v10;
      v54 = 2112;
      v55 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    v11 = *(_QWORD *)(a1 + 48);
    objc_msgSend(v6, "brc_wrappedError");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *))(v11 + 16))(v11, v12);
    goto LABEL_22;
  }
  if (v5)
  {
    objc_msgSend(v5, "byIDLocalItem");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12 || (objc_msgSend(v5, "faultedLocalItem"), (v12 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
    {
      if ((objc_msgSend(v12, "isDocument") & 1) != 0)
      {
        objc_msgSend(*(id *)(a1 + 32), "session");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "diskReclaimer");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "asDocument");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_msgSend(v14, "overwriteDocumentAccessTime:atime:", v15, *(_QWORD *)(a1 + 56));

        if ((v16 & 1) != 0)
        {
          brc_bread_crumbs();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v18 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
          {
            v19 = *(_QWORD *)(a1 + 32);
            *(_DWORD *)buf = 138412802;
            v51 = v19;
            v52 = 2112;
            v53 = 0;
            v54 = 2112;
            v55 = v17;
            _os_log_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
          }

          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48), 0);
          goto LABEL_22;
        }
        brc_bread_crumbs();
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v33 = objc_claimAutoreleasedReturnValue();
        v34 = os_log_type_enabled(v33, OS_LOG_TYPE_INFO);
        v35 = *MEMORY[0x1E0D10B70];
        if (v34)
        {
          v36 = (void *)MEMORY[0x1E0CB35C8];
          v37 = *(_QWORD *)(a1 + 32);
          objc_msgSend(*(id *)(a1 + 40), "path");
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v36, "br_errorWithDomain:code:description:", v35, 10, CFSTR("Couldn't modify access time of %@"), v38);
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v51 = v37;
          v52 = 2112;
          v53 = v39;
          v54 = 2112;
          v55 = v32;
          _os_log_impl(&dword_1CBD43000, v33, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

        }
        v40 = (void *)MEMORY[0x1E0CB35C8];
        v30 = *(_QWORD *)(a1 + 48);
        objc_msgSend(*(id *)(a1 + 40), "path");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v40, "br_errorWithDomain:code:description:", v35, 10, CFSTR("Couldn't modify access time of %@"), v31);
      }
      else
      {
        brc_bread_crumbs();
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v21 = objc_claimAutoreleasedReturnValue();
        v22 = os_log_type_enabled(v21, OS_LOG_TYPE_INFO);
        v23 = *MEMORY[0x1E0D10B70];
        v24 = 0x1E0CB3000;
        if (v22)
        {
          v25 = (void *)MEMORY[0x1E0CB35C8];
          v26 = *(_QWORD *)(a1 + 32);
          objc_msgSend(*(id *)(a1 + 40), "path");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v25, "br_errorWithDomain:code:description:", v23, 10, CFSTR("%@ is not a document"), v27);
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v51 = v26;
          v52 = 2112;
          v53 = v28;
          v54 = 2112;
          v55 = v20;
          _os_log_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

          v24 = 0x1E0CB3000uLL;
        }

        v29 = *(void **)(v24 + 1480);
        v30 = *(_QWORD *)(a1 + 48);
        objc_msgSend(*(id *)(a1 + 40), "path");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v29, "br_errorWithDomain:code:description:", v23, 10, CFSTR("%@ is not a document"), v31);
      }
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, void *))(v30 + 16))(v30, v41);

    }
    else
    {
      brc_bread_crumbs();
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
      {
        v44 = (void *)MEMORY[0x1E0CB35C8];
        v45 = *(_QWORD *)(a1 + 32);
        objc_msgSend(*(id *)(a1 + 40), "path");
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v44, "brc_errorItemNotFound:", v46);
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v51 = v45;
        v52 = 2112;
        v53 = v47;
        v54 = 2112;
        v55 = v42;
        _os_log_impl(&dword_1CBD43000, v43, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

      }
      v48 = (void *)MEMORY[0x1E0CB35C8];
      v49 = *(_QWORD *)(a1 + 48);
      objc_msgSend(*(id *)(a1 + 40), "path");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v48, "brc_errorItemNotFound:", v12);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, void *))(v49 + 16))(v49, v31);
    }

LABEL_22:
  }

}

- (void)capabilityWhenTryingToReparentItemAtURL:(id)a3 toNewParent:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  _QWORD v20[4];
  id v21;
  id v22;
  BRCXPCRegularIPCsClient *v23;
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  id v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v25, 0, sizeof(v25));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) capabilityWhenTryingToReparentItemAtURL:toNewParent:reply:]", 1095, v25);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v25[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "path");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v27 = v13;
    v28 = 2112;
    v29 = self;
    v30 = 2112;
    v31 = v15;
    v32 = 2080;
    v33 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) capabilityWhenTryingToReparentItemAtURL:toNewParent:reply:]";
    v34 = 2112;
    v35 = v16;
    v36 = 2112;
    v37 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __102__BRCXPCRegularIPCsClient_LegacyAdditions__capabilityWhenTryingToReparentItemAtURL_toNewParent_reply___block_invoke;
  v20[3] = &unk_1E8765280;
  v17 = v8;
  v21 = v17;
  v18 = v9;
  v22 = v18;
  v23 = self;
  v19 = v10;
  v24 = v19;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v17, 1, 1, 0, v20);

  __brc_leave_section(v25);
}

void __102__BRCXPCRegularIPCsClient_LegacyAdditions__capabilityWhenTryingToReparentItemAtURL_toNewParent_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29[3];
  uint8_t buf[4];
  uint64_t v31;
  __int16 v32;
  _BYTE v33[28];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  memset(v29, 0, sizeof(v29));
  __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) capabilityWhenTryingToReparentItemAtURL:toNewParent:reply:]_block_invoke", 1085, v29);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
  {
    v25 = v29[0];
    objc_msgSend(*(id *)(a1 + 32), "path");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "path");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134218754;
    v31 = v25;
    v32 = 2112;
    *(_QWORD *)v33 = v26;
    *(_WORD *)&v33[8] = 2112;
    *(_QWORD *)&v33[10] = v27;
    *(_WORD *)&v33[18] = 2112;
    *(_QWORD *)&v33[20] = v7;
    _os_log_debug_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx getting move status to reparent %@ to %@%@", buf, 0x2Au);

  }
  if (v6)
  {
    brc_bread_crumbs();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      v11 = *(_QWORD *)(a1 + 48);
      objc_msgSend(v6, "brc_wrappedError");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v31 = v11;
      v32 = 1024;
      *(_DWORD *)v33 = 1;
      *(_WORD *)&v33[4] = 2112;
      *(_QWORD *)&v33[6] = v12;
      *(_WORD *)&v33[14] = 2112;
      *(_QWORD *)&v33[16] = v9;
      _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);

    }
    v13 = *(_QWORD *)(a1 + 56);
    objc_msgSend(v6, "brc_wrappedError");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, uint64_t, void *))(v13 + 16))(v13, 1, v14);
  }
  else
  {
    +[BRCDaemonContainerHelper sharedHelper](BRCDaemonContainerHelper, "sharedHelper");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = *(_QWORD *)(a1 + 40);
    objc_msgSend(v5, "session");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = 0;
    v17 = objc_msgSend(v14, "br_capabilityToMoveFromLookup:toNewParent:session:error:", v5, v15, v16, &v28);
    v18 = v28;

    brc_bread_crumbs();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      v21 = *(_QWORD *)(a1 + 48);
      objc_msgSend(v18, "brc_wrappedError");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v31 = v21;
      v32 = 1024;
      *(_DWORD *)v33 = v17;
      *(_WORD *)&v33[4] = 2112;
      *(_QWORD *)&v33[6] = v22;
      *(_WORD *)&v33[14] = 2112;
      *(_QWORD *)&v33[16] = v19;
      _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);

    }
    v23 = *(_QWORD *)(a1 + 56);
    objc_msgSend(v18, "brc_wrappedError");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, uint64_t, void *))(v23 + 16))(v23, v17, v24);

  }
  __brc_leave_section(v29);

}

- (void)boostFilePresenterAtURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v15[5];
  id v16;
  uint64_t v17[3];
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  BRCXPCRegularIPCsClient *v21;
  __int16 v22;
  id v23;
  __int16 v24;
  const char *v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v17, 0, sizeof(v17));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) boostFilePresenterAtURL:reply:]", 1112, v17);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v17[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "path");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v19 = v10;
    v20 = 2112;
    v21 = self;
    v22 = 2112;
    v23 = v12;
    v24 = 2080;
    v25 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) boostFilePresenterAtURL:reply:]";
    v26 = 2112;
    v27 = v13;
    v28 = 2112;
    v29 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __74__BRCXPCRegularIPCsClient_LegacyAdditions__boostFilePresenterAtURL_reply___block_invoke;
  v15[3] = &unk_1E8765320;
  v15[4] = self;
  v14 = v7;
  v16 = v14;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v6, 1, 0, 0, v15);

  __brc_leave_section(v17);
}

void __74__BRCXPCRegularIPCsClient_LegacyAdditions__boostFilePresenterAtURL_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v6, "brc_wrappedError");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = 138412802;
      v21 = v9;
      v22 = 2112;
      v23 = v10;
      v24 = 2112;
      v25 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v20, 0x20u);

    }
    v11 = *(_QWORD *)(a1 + 40);
    objc_msgSend(v6, "brc_wrappedError");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *))(v11 + 16))(v11, v12);
  }
  else
  {
    objc_msgSend(v5, "byIDLocalItem");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (v13)
    {
      v15 = v13;
    }
    else
    {
      objc_msgSend(v5, "faultedLocalItem");
      v15 = (id)objc_claimAutoreleasedReturnValue();
    }
    v12 = v15;

    objc_msgSend(v12, "appLibrary");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    if (v16)
      objc_msgSend(*(id *)(a1 + 32), "addAppLibrary:", v16);
    brc_bread_crumbs();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      v19 = *(_QWORD *)(a1 + 32);
      v20 = 138412802;
      v21 = v19;
      v22 = 2112;
      v23 = 0;
      v24 = 2112;
      v25 = v17;
      _os_log_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v20, 0x20u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

- (void)getPublishedURLForItemAtURL:(id)a3 forStreaming:(BOOL)a4 requestedTTL:(unint64_t)a5 reply:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  NSObject *v16;
  unint64_t v17;
  uint64_t v18;
  qos_class_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  BOOL v24;
  _QWORD v25[5];
  id v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29[3];
  _QWORD v30[4];
  id v31;
  BRCXPCRegularIPCsClient *v32;
  id v33;
  uint8_t buf[4];
  uint64_t v35;
  __int16 v36;
  BRCXPCRegularIPCsClient *v37;
  __int16 v38;
  id v39;
  __int16 v40;
  const char *v41;
  __int16 v42;
  void *v43;
  __int16 v44;
  void *v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a6;
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 3221225472;
  v30[2] = __104__BRCXPCRegularIPCsClient_LegacyAdditions__getPublishedURLForItemAtURL_forStreaming_requestedTTL_reply___block_invoke;
  v30[3] = &unk_1E8765348;
  v12 = v10;
  v31 = v12;
  v32 = self;
  v13 = v11;
  v33 = v13;
  v14 = (void *)MEMORY[0x1D17A6DB0](v30);
  memset(v29, 0, sizeof(v29));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getPublishedURLForItemAtURL:forStreaming:requestedTTL:reply:]", 1151, v29);
  brc_bread_crumbs();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    v23 = v14;
    v24 = a4;
    v17 = a5;
    v18 = v29[0];
    v19 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v19, (uint64_t)&brc_qos_entries, 0);
    v20 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "path");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v35 = v18;
    v36 = 2112;
    v37 = self;
    v38 = 2112;
    v39 = v20;
    v40 = 2080;
    v41 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getPublishedURLForItemAtURL:forStreaming:requestedTTL:reply:]";
    v42 = 2112;
    v43 = v21;
    v44 = 2112;
    v45 = v15;
    _os_log_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

    a5 = v17;
    a4 = v24;
    v14 = v23;

  }
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __104__BRCXPCRegularIPCsClient_LegacyAdditions__getPublishedURLForItemAtURL_forStreaming_requestedTTL_reply___block_invoke_83;
  v25[3] = &unk_1E8765370;
  v28 = a4;
  v25[4] = self;
  v27 = a5;
  v22 = v14;
  v26 = v22;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v12, 1, 0, 0, v25);

  __brc_leave_section(v29);
}

void __104__BRCXPCRegularIPCsClient_LegacyAdditions__getPublishedURLForItemAtURL_forStreaming_requestedTTL_reply___block_invoke(uint64_t *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  int v24;
  uint64_t v25;
  __int16 v26;
  id v27;
  __int16 v28;
  id v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = v9;
  if (!v7 || !v8 || v9)
  {
    if (v9)
    {
      if (objc_msgSend(v9, "code") == 5)
      {
        v11 = (void *)MEMORY[0x1E0CB35C8];
        v12 = a1[4];
        objc_msgSend(v10, "userInfo");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "objectForKey:", *MEMORY[0x1E0CB3388]);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "brc_errorNoDocumentAtURL:underlyingError:", v12, v14);
        v15 = objc_claimAutoreleasedReturnValue();

LABEL_10:
        v10 = (void *)v15;
        goto LABEL_11;
      }
      if (objc_msgSend(v10, "code") == 7)
      {
        v16 = (void *)MEMORY[0x1E0CB35C8];
        objc_msgSend((id)a1[4], "path");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "brc_errorNotInCloud:", v17);
        v15 = objc_claimAutoreleasedReturnValue();

        goto LABEL_10;
      }
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithDomain:code:description:", *MEMORY[0x1E0D10B70], 15, CFSTR("Publish failed but no error was set"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
    }
LABEL_11:

    v8 = 0;
    v7 = 0;
  }
  brc_bread_crumbs();
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v19 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
  {
    v20 = a1[5];
    objc_msgSend(v10, "brc_wrappedError");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = 138413314;
    v25 = v20;
    v26 = 2112;
    v27 = v7;
    v28 = 2112;
    v29 = v8;
    v30 = 2112;
    v31 = v21;
    v32 = 2112;
    v33 = v18;
    _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v24, 0x34u);

  }
  v22 = a1[6];
  objc_msgSend(v10, "brc_wrappedError");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, id, void *))(v22 + 16))(v22, v7, v8, v23);

}

void __104__BRCXPCRegularIPCsClient_LegacyAdditions__getPublishedURLForItemAtURL_forStreaming_requestedTTL_reply___block_invoke_83(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    objc_msgSend(v5, "byIDLocalItem");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v7)
    {
      objc_msgSend(v5, "faultedLocalItem");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v7)
      {
        brc_bread_crumbs();
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v9 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
          __104__BRCXPCRegularIPCsClient_LegacyAdditions__getPublishedURLForItemAtURL_forStreaming_requestedTTL_reply___block_invoke_83_cold_1();

        v7 = 0;
      }
    }
    objc_msgSend(*(id *)(a1 + 32), "_getPublishedURLForLocalItem:forStreaming:requestedTTL:reply:", v7, *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));

  }
  if (v6)
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

- (void)getAttributeValues:(id)a3 forItemAtURL:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  _QWORD v20[5];
  id v21;
  id v22;
  id v23;
  uint64_t v24[3];
  uint8_t buf[4];
  uint64_t v26;
  __int16 v27;
  BRCXPCRegularIPCsClient *v28;
  __int16 v29;
  id v30;
  __int16 v31;
  const char *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v24, 0, sizeof(v24));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getAttributeValues:forItemAtURL:reply:]", 1212, v24);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v24[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "path");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v26 = v13;
    v27 = 2112;
    v28 = self;
    v29 = 2112;
    v30 = v15;
    v31 = 2080;
    v32 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getAttributeValues:forItemAtURL:reply:]";
    v33 = 2112;
    v34 = v16;
    v35 = 2112;
    v36 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __82__BRCXPCRegularIPCsClient_LegacyAdditions__getAttributeValues_forItemAtURL_reply___block_invoke;
  v20[3] = &unk_1E8765280;
  v20[4] = self;
  v17 = v8;
  v21 = v17;
  v18 = v9;
  v22 = v18;
  v19 = v10;
  v23 = v19;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v18, 1, 1, 0, v20);

  __brc_leave_section(v24);
}

void __82__BRCXPCRegularIPCsClient_LegacyAdditions__getAttributeValues_forItemAtURL_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint8_t buf[4];
  uint64_t v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  void *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v5)
  {
    objc_msgSend(*(id *)(a1 + 32), "_removeSandboxedAttributes:", *(_QWORD *)(a1 + 40));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 48), "brc_attributesValues:lookup:", v7, v5);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 32), "clientPriviledgesDescriptor");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "applicationIdentifier");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "isEqualToString:", CFSTR("com.apple.finder"));

    if (v11)
    {
      objc_msgSend(v5, "byIDLocalItem");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = v12;
      if (v12)
      {
        v14 = v12;
      }
      else
      {
        objc_msgSend(v5, "faultedLocalItem");
        v14 = (id)objc_claimAutoreleasedReturnValue();
      }
      v15 = v14;

      objc_msgSend(v5, "relpath");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v15
        || (objc_msgSend(v15, "isZoneRoot") & 1) != 0
        || (objc_msgSend(v15, "isDead") & 1) != 0
        || (objc_msgSend(v15, "isReserved") & 1) != 0)
      {
        v17 = 0;
      }
      else
      {
        +[BRCNotification notificationFromItem:relpath:](BRCNotification, "notificationFromItem:relpath:", v15, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v17, "isDirectory"))
        {
          objc_msgSend(v17, "mtime");
          v24 = objc_claimAutoreleasedReturnValue();
          if (v24)
          {
            v25 = (void *)v24;
            objc_msgSend(v17, "mtime");
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            v30 = objc_msgSend(v26, "longLongValue");
            v27 = objc_msgSend(v16, "modificationTime");

            if (v30 != v27)
            {
              v28 = *(void **)(a1 + 32);
              objc_msgSend(v17, "mtime");
              v29 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v28, "_updateDirectoryMtime:onDisk:", objc_msgSend(v29, "longValue"), v16);

            }
          }
        }
      }

    }
  }
  else
  {
    v8 = 0;
  }
  brc_bread_crumbs();
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v19 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
  {
    v20 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v6, "brc_wrappedError");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413058;
    v32 = v20;
    v33 = 2112;
    v34 = v8;
    v35 = 2112;
    v36 = v21;
    v37 = 2112;
    v38 = v18;
    _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

  }
  v22 = *(_QWORD *)(a1 + 56);
  objc_msgSend(v6, "brc_wrappedError");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *))(v22 + 16))(v22, v8, v23);

}

- (void)getiWorkPublishingInfoAtURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  qos_class_t v19;
  id v20;
  void *v21;
  _QWORD v22[5];
  id v23;
  id v24;
  uint64_t v25[3];
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  id v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkPublishingInfoAtURL:reply:]", 1219, v28);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v28[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = v10;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v12;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkPublishingInfoAtURL:reply:]";
    v37 = 2112;
    v38 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v14 = (void *)*MEMORY[0x1E0D10B68];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __78__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkPublishingInfoAtURL_reply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v15 = v7;
  v27 = v15;
  LODWORD(v14) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v14, v26);

  if ((_DWORD)v14)
  {
    memset(v25, 0, sizeof(v25));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkPublishingInfoAtURL:reply:]", 1230, v25);
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      v18 = v25[0];
      v19 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v19, (uint64_t)&brc_qos_entries, 0);
      v20 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "path");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v30 = v18;
      v31 = 2112;
      v32 = self;
      v33 = 2112;
      v34 = v20;
      v35 = 2080;
      v36 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkPublishingInfoAtURL:reply:]";
      v37 = 2112;
      v38 = v21;
      v39 = 2112;
      v40 = v16;
      _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v13 = MEMORY[0x1E0C809B0];
    }

    v22[0] = v13;
    v22[1] = 3221225472;
    v22[2] = __78__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkPublishingInfoAtURL_reply___block_invoke_87;
    v22[3] = &unk_1E8765208;
    v22[4] = self;
    v24 = v15;
    v23 = v6;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v23, 1, 0, 0, v22);

    __brc_leave_section(v25);
  }
  __brc_leave_section(v28);

}

void __78__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkPublishingInfoAtURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  int v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413570;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 1024;
    v12 = 0;
    v13 = 2112;
    v14 = 0;
    v15 = 2112;
    v16 = v3;
    v17 = 2112;
    v18 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %@, %@)%@", (uint8_t *)&v7, 0x36u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __78__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkPublishingInfoAtURL_reply___block_invoke_87(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  uint64_t v17;
  __int16 v18;
  int v19;
  __int16 v20;
  int v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  id v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      v16 = 138413570;
      v17 = v9;
      v18 = 1024;
      v19 = 0;
      v20 = 1024;
      v21 = 0;
      v22 = 2112;
      v23 = 0;
      v24 = 2112;
      v25 = v6;
      v26 = 2112;
      v27 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %@, %@)%@", (uint8_t *)&v16, 0x36u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    objc_msgSend(v5, "byIDLocalItem");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (v10)
    {
      v12 = v10;
    }
    else
    {
      objc_msgSend(v5, "faultedLocalItem");
      v12 = (id)objc_claimAutoreleasedReturnValue();
    }
    v13 = v12;

    v14 = *(void **)(a1 + 32);
    objc_msgSend(*(id *)(a1 + 40), "path");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "_getiWorkPublishingInfoForLocalItem:itemIdentifier:reply:", v13, v15, *(_QWORD *)(a1 + 48));

  }
}

- (void)setiWorkPublishingInfoAtURL:(id)a3 publish:(BOOL)a4 readonly:(BOOL)a5 reply:(id)a6
{
  id v10;
  id v11;
  void *v12;
  NSObject *v13;
  BOOL v14;
  id v15;
  BOOL v16;
  uint64_t v17;
  qos_class_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  qos_class_t v26;
  id v27;
  void *v28;
  BOOL v29;
  BOOL v30;
  _QWORD v31[5];
  id v32;
  id v33;
  BOOL v34;
  BOOL v35;
  uint64_t v36[3];
  _QWORD v37[5];
  id v38;
  uint64_t v39[3];
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  BRCXPCRegularIPCsClient *v43;
  __int16 v44;
  id v45;
  __int16 v46;
  const char *v47;
  __int16 v48;
  void *v49;
  __int16 v50;
  void *v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a6;
  memset(v39, 0, sizeof(v39));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) setiWorkPublishingInfoAtURL:publish:readonly:reply:]", 1237, v39);
  brc_bread_crumbs();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    v14 = a5;
    v15 = v10;
    v16 = a4;
    v17 = v39[0];
    v18 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v18, (uint64_t)&brc_qos_entries, 0);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v41 = v17;
    v42 = 2112;
    v43 = self;
    v44 = 2112;
    v45 = v19;
    v46 = 2080;
    v47 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) setiWorkPublishingInfoAtURL:publish:readonly:reply:]";
    v48 = 2112;
    v49 = v12;
    _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

    a4 = v16;
    v10 = v15;
    a5 = v14;
  }

  v20 = MEMORY[0x1E0C809B0];
  v21 = (void *)*MEMORY[0x1E0D10B68];
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __95__BRCXPCRegularIPCsClient_LegacyAdditions__setiWorkPublishingInfoAtURL_publish_readonly_reply___block_invoke;
  v37[3] = &unk_1E875FCF8;
  v37[4] = self;
  v22 = v11;
  v38 = v22;
  LODWORD(v21) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v21, v37);

  if ((_DWORD)v21)
  {
    memset(v36, 0, sizeof(v36));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) setiWorkPublishingInfoAtURL:publish:readonly:reply:]", 1250, v36);
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      v29 = a4;
      v30 = a5;
      v25 = v36[0];
      v26 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v26, (uint64_t)&brc_qos_entries, 0);
      v27 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "path");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v41 = v25;
      v42 = 2112;
      v43 = self;
      v44 = 2112;
      v45 = v27;
      v46 = 2080;
      v47 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) setiWorkPublishingInfoAtURL:publish:readonly:reply:]";
      v48 = 2112;
      v49 = v28;
      v50 = 2112;
      v51 = v23;
      _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      a4 = v29;
      a5 = v30;

    }
    v31[0] = v20;
    v31[1] = 3221225472;
    v31[2] = __95__BRCXPCRegularIPCsClient_LegacyAdditions__setiWorkPublishingInfoAtURL_publish_readonly_reply___block_invoke_88;
    v31[3] = &unk_1E8765398;
    v31[4] = self;
    v33 = v22;
    v32 = v10;
    v34 = a4;
    v35 = a5;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v32, 0, 0, 0, v31);

    __brc_leave_section(v36);
  }
  __brc_leave_section(v39);

}

void __95__BRCXPCRegularIPCsClient_LegacyAdditions__setiWorkPublishingInfoAtURL_publish_readonly_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __95__BRCXPCRegularIPCsClient_LegacyAdditions__setiWorkPublishingInfoAtURL_publish_readonly_reply___block_invoke_88(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  int v18;
  uint64_t v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v6, "brc_wrappedError");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = 138412802;
      v19 = v9;
      v20 = 2112;
      v21 = v10;
      v22 = 2112;
      v23 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v18, 0x20u);

    }
    v11 = *(_QWORD *)(a1 + 48);
    objc_msgSend(v6, "brc_wrappedError");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *))(v11 + 16))(v11, v12);
  }
  else
  {
    objc_msgSend(v5, "byIDLocalItem");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (v13)
    {
      v15 = v13;
    }
    else
    {
      objc_msgSend(v5, "faultedLocalItem");
      v15 = (id)objc_claimAutoreleasedReturnValue();
    }
    v12 = v15;

    v16 = *(void **)(a1 + 32);
    objc_msgSend(*(id *)(a1 + 40), "path");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "_setiWorkPublishingInfoForLocalItem:itemIdentifier:publish:readonly:reply:", v12, v17, *(unsigned __int8 *)(a1 + 56), *(unsigned __int8 *)(a1 + 57), *(_QWORD *)(a1 + 48));

  }
}

- (void)getiWorkPublishingBadgingStatusAtURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  qos_class_t v19;
  id v20;
  void *v21;
  _QWORD v22[5];
  id v23;
  id v24;
  uint64_t v25[3];
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  id v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkPublishingBadgingStatusAtURL:reply:]", 1257, v28);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v28[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = v10;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v12;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkPublishingBadgingStatusAtURL:reply:]";
    v37 = 2112;
    v38 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v14 = (void *)*MEMORY[0x1E0D10B68];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkPublishingBadgingStatusAtURL_reply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v15 = v7;
  v27 = v15;
  LODWORD(v14) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v14, v26);

  if ((_DWORD)v14)
  {
    memset(v25, 0, sizeof(v25));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkPublishingBadgingStatusAtURL:reply:]", 1268, v25);
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      v18 = v25[0];
      v19 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v19, (uint64_t)&brc_qos_entries, 0);
      v20 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "path");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v30 = v18;
      v31 = 2112;
      v32 = self;
      v33 = 2112;
      v34 = v20;
      v35 = 2080;
      v36 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkPublishingBadgingStatusAtURL:reply:]";
      v37 = 2112;
      v38 = v21;
      v39 = 2112;
      v40 = v16;
      _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v13 = MEMORY[0x1E0C809B0];
    }

    v22[0] = v13;
    v22[1] = 3221225472;
    v22[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkPublishingBadgingStatusAtURL_reply___block_invoke_89;
    v22[3] = &unk_1E8765208;
    v22[4] = self;
    v24 = v15;
    v23 = v6;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v23, 1, 0, 0, v22);

    __brc_leave_section(v25);
  }
  __brc_leave_section(v28);

}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkPublishingBadgingStatusAtURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkPublishingBadgingStatusAtURL_reply___block_invoke_89(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  uint64_t v17;
  __int16 v18;
  int v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      v16 = 138413058;
      v17 = v9;
      v18 = 1024;
      v19 = 0;
      v20 = 2112;
      v21 = v6;
      v22 = 2112;
      v23 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v16, 0x26u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    objc_msgSend(v5, "byIDLocalItem");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (v10)
    {
      v12 = v10;
    }
    else
    {
      objc_msgSend(v5, "faultedLocalItem");
      v12 = (id)objc_claimAutoreleasedReturnValue();
    }
    v13 = v12;

    v14 = *(void **)(a1 + 32);
    objc_msgSend(*(id *)(a1 + 40), "path");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "_getiWorkPublishingBadgingStatusForLocalItem:itemIdentifier:reply:", v13, v15, *(_QWORD *)(a1 + 48));

  }
}

- (void)getiWorkNeedsShareMigrateAtURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  qos_class_t v19;
  id v20;
  void *v21;
  _QWORD v22[5];
  id v23;
  id v24;
  uint64_t v25[3];
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  id v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkNeedsShareMigrateAtURL:reply:]", 1275, v28);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v28[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = v10;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v12;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkNeedsShareMigrateAtURL:reply:]";
    v37 = 2112;
    v38 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v14 = (void *)*MEMORY[0x1E0D10B68];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __81__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkNeedsShareMigrateAtURL_reply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v15 = v7;
  v27 = v15;
  LODWORD(v14) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v14, v26);

  if ((_DWORD)v14)
  {
    memset(v25, 0, sizeof(v25));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkNeedsShareMigrateAtURL:reply:]", 1286, v25);
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      v18 = v25[0];
      v19 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v19, (uint64_t)&brc_qos_entries, 0);
      v20 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "path");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v30 = v18;
      v31 = 2112;
      v32 = self;
      v33 = 2112;
      v34 = v20;
      v35 = 2080;
      v36 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getiWorkNeedsShareMigrateAtURL:reply:]";
      v37 = 2112;
      v38 = v21;
      v39 = 2112;
      v40 = v16;
      _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v13 = MEMORY[0x1E0C809B0];
    }

    v22[0] = v13;
    v22[1] = 3221225472;
    v22[2] = __81__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkNeedsShareMigrateAtURL_reply___block_invoke_90;
    v22[3] = &unk_1E8765208;
    v22[4] = self;
    v24 = v15;
    v23 = v6;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v23, 1, 0, 0, v22);

    __brc_leave_section(v25);
  }
  __brc_leave_section(v28);

}

void __81__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkNeedsShareMigrateAtURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __81__BRCXPCRegularIPCsClient_LegacyAdditions__getiWorkNeedsShareMigrateAtURL_reply___block_invoke_90(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  uint64_t v17;
  __int16 v18;
  int v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      v16 = 138413058;
      v17 = v9;
      v18 = 1024;
      v19 = 0;
      v20 = 2112;
      v21 = v6;
      v22 = 2112;
      v23 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v16, 0x26u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    objc_msgSend(v5, "byIDLocalItem");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (v10)
    {
      v12 = v10;
    }
    else
    {
      objc_msgSend(v5, "faultedLocalItem");
      v12 = (id)objc_claimAutoreleasedReturnValue();
    }
    v13 = v12;

    v14 = *(void **)(a1 + 32);
    objc_msgSend(*(id *)(a1 + 40), "path");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "_getiWorkNeedsShareMigrateForLocalItem:itemIdentifier:reply:", v13, v15, *(_QWORD *)(a1 + 48));

  }
}

- (void)getURLForItemIdentifier:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  qos_class_t v19;
  void *v20;
  void *v21;
  NSObject *v22;
  id v23;
  _QWORD v24[4];
  id v25;
  id v26;
  BRCXPCRegularIPCsClient *v27;
  id v28;
  uint64_t v29[3];
  _QWORD v30[5];
  id v31;
  uint64_t v32[3];
  uint8_t buf[4];
  uint64_t v34;
  __int16 v35;
  BRCXPCRegularIPCsClient *v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  const char *v40;
  __int16 v41;
  id v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v32, 0, sizeof(v32));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getURLForItemIdentifier:reply:]", 1293, v32);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v32[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v34 = v10;
    v35 = 2112;
    v36 = self;
    v37 = 2112;
    v38 = v12;
    v39 = 2080;
    v40 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getURLForItemIdentifier:reply:]";
    v41 = 2112;
    v42 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 3221225472;
  v30[2] = __74__BRCXPCRegularIPCsClient_LegacyAdditions__getURLForItemIdentifier_reply___block_invoke;
  v30[3] = &unk_1E875FCF8;
  v30[4] = self;
  v14 = v7;
  v31 = v14;
  v15 = _brc_ipc_check_applibrary_proxy(self, 1, v30);

  if (v15)
  {
    memset(v29, 0, sizeof(v29));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getURLForItemIdentifier:reply:]", 1295, v29);
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      v18 = v29[0];
      v19 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v19, (uint64_t)&brc_qos_entries, 0);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v34 = v18;
      v35 = 2112;
      v36 = self;
      v37 = 2112;
      v38 = v20;
      v39 = 2080;
      v40 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getURLForItemIdentifier:reply:]";
      v41 = 2112;
      v42 = v6;
      v43 = 2112;
      v44 = v16;
      _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s Getting url for %@%@", buf, 0x3Eu);

    }
    -[BRCXPCClient session](self, "session");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "clientTruthWorkloop");
    v22 = objc_claimAutoreleasedReturnValue();
    v24[0] = v13;
    v24[1] = 3221225472;
    v24[2] = __74__BRCXPCRegularIPCsClient_LegacyAdditions__getURLForItemIdentifier_reply___block_invoke_91;
    v24[3] = &unk_1E875DDA0;
    v25 = v6;
    v26 = v21;
    v27 = self;
    v28 = v14;
    v23 = v21;
    dispatch_async(v22, v24);

    __brc_leave_section(v29);
  }
  __brc_leave_section(v32);

}

void __74__BRCXPCRegularIPCsClient_LegacyAdditions__getURLForItemIdentifier_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __74__BRCXPCRegularIPCsClient_LegacyAdditions__getURLForItemIdentifier_reply___block_invoke_91(_QWORD *a1)
{
  void *v2;
  int v3;
  void *v4;
  void *v5;
  void *v6;
  BRCItemToPathLookup *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0D10E70], "fileObjectIDWithString:", a1[4]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isDocumentID");
  v4 = (void *)a1[5];
  if (v3)
  {
    objc_msgSend(v2, "documentID");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "globalItemByDocumentID:", objc_msgSend(v5, "longLongValue"));
  }
  else
  {
    objc_msgSend(v2, "folderID");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "globalItemByFileID:", objc_msgSend(v5, "longLongValue"));
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6
    && (v7 = -[BRCItemToPathLookup initWithItem:]([BRCItemToPathLookup alloc], "initWithItem:", v6),
        -[BRCItemToPathLookup coordinatedReadURL](v7, "coordinatedReadURL"),
        v8 = (void *)objc_claimAutoreleasedReturnValue(),
        -[BRCItemToPathLookup closePaths](v7, "closePaths"),
        v7,
        v8))
  {
    brc_bread_crumbs();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      v11 = a1[6];
      v17 = 138413058;
      v18 = v11;
      v19 = 2112;
      v20 = v8;
      v21 = 2112;
      v22 = 0;
      v23 = 2112;
      v24 = v9;
      _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v17, 0x2Au);
    }

    (*(void (**)(_QWORD, void *, _QWORD))(a1[7] + 16))(a1[7], v8, 0);
  }
  else
  {
    brc_bread_crumbs();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      v14 = a1[6];
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", a1[4]);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = 138413058;
      v18 = v14;
      v19 = 2112;
      v20 = 0;
      v21 = 2112;
      v22 = v15;
      v23 = 2112;
      v24 = v12;
      _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v17, 0x2Au);

    }
    v16 = a1[7];
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", a1[4]);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v16 + 16))(v16, 0, v8);
  }

}

- (void)getNonLocalVersionSenderWithReceiver:(id)a3 documentURL:(id)a4 includeCachedVersions:(BOOL)a5 reply:(id)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  NSObject *v14;
  id v15;
  BOOL v16;
  uint64_t v17;
  qos_class_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  _QWORD v24[5];
  id v25;
  id v26;
  BOOL v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  id v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a6;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getNonLocalVersionSenderWithReceiver:documentURL:includeCachedVersions:reply:]", 1335, v28);
  brc_bread_crumbs();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    v23 = v12;
    v15 = v10;
    v16 = a5;
    v17 = v28[0];
    v18 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v18, (uint64_t)&brc_qos_entries, 0);
    v19 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "path");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v30 = v17;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v19;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getNonLocalVersionSenderWithReceiver:documentURL:includeCachedVersions:reply:]";
    v37 = 2112;
    v38 = v20;
    v39 = 2112;
    v40 = v13;
    _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

    a5 = v16;
    v10 = v15;
    v12 = v23;

  }
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __121__BRCXPCRegularIPCsClient_LegacyAdditions__getNonLocalVersionSenderWithReceiver_documentURL_includeCachedVersions_reply___block_invoke;
  v24[3] = &unk_1E87653C0;
  v24[4] = self;
  v21 = v10;
  v25 = v21;
  v27 = a5;
  v22 = v12;
  v26 = v22;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v11, 1, 0, 0, v24);

  __brc_leave_section(v28);
}

void __121__BRCXPCRegularIPCsClient_LegacyAdditions__getNonLocalVersionSenderWithReceiver_documentURL_includeCachedVersions_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  id v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    v17 = v6;
    +[BRCNonLocalVersionsSender senderWithLookup:client:XPCReceiver:error:](BRCNonLocalVersionsSender, "senderWithLookup:client:XPCReceiver:error:", v5, v7, v8, &v17);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v17;

    objc_msgSend(v9, "setIncludeCachedVersions:", *(unsigned __int8 *)(a1 + 56));
    v6 = v10;
  }
  else
  {
    v9 = 0;
  }
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v9, "physicalURL");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413314;
    v19 = v13;
    v20 = 2112;
    v21 = v9;
    v22 = 2112;
    v23 = v14;
    v24 = 2112;
    v25 = v6;
    v26 = 2112;
    v27 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);

  }
  v15 = *(_QWORD *)(a1 + 48);
  objc_msgSend(v9, "physicalURL");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *, id))(v15 + 16))(v15, v9, v16, v6);

}

- (void)copyBulkShareIDsAtURLs:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  void *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  brc_task_tracker *tracker;
  _QWORD v30[5];
  id v31;
  _QWORD v32[5];
  id v33;
  id v34;
  id v35;
  _QWORD *v36;
  _BYTE *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  id *v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  void (*v44)(uint64_t);
  id v45;
  _QWORD v46[5];
  id v47;
  _QWORD v48[5];
  id v49;
  uint64_t v50[3];
  _BYTE buf[24];
  uint64_t (*v52)(uint64_t, uint64_t);
  _BYTE v53[20];
  uint64_t v54;

  v54 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v50, 0, sizeof(v50));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) copyBulkShareIDsAtURLs:reply:]", 1342, v50);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v50[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    *(_QWORD *)&buf[4] = v10;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    *(_WORD *)&buf[22] = 2112;
    v52 = v12;
    *(_WORD *)v53 = 2080;
    *(_QWORD *)&v53[2] = "-[BRCXPCRegularIPCsClient(LegacyAdditions) copyBulkShareIDsAtURLs:reply:]";
    *(_WORD *)&v53[10] = 2112;
    *(_QWORD *)&v53[12] = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "isSharingPrivateInterfaceEntitled");
  v15 = MEMORY[0x1E0C809B0];
  v48[0] = MEMORY[0x1E0C809B0];
  v48[1] = 3221225472;
  v48[2] = __73__BRCXPCRegularIPCsClient_LegacyAdditions__copyBulkShareIDsAtURLs_reply___block_invoke;
  v48[3] = &unk_1E875FCF8;
  v48[4] = self;
  v16 = v7;
  v49 = v16;
  v17 = _brc_ipc_check_client_privilege(self, 1, v14, (uint64_t)"isSharingPrivateInterfaceEntitled", v48);

  if ((v17 & 1) != 0)
  {
    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient(LegacyAdditions) copyBulkShareIDsAtURLs:reply:].cold.1();

    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x3032000000;
    v52 = __Block_byref_object_copy__42;
    *(_QWORD *)v53 = __Block_byref_object_dispose__42;
    *(_QWORD *)&v53[8] = 0;
    v20 = (void *)objc_opt_new();
    v46[0] = 0;
    v46[1] = v46;
    v46[2] = 0x3032000000;
    v46[3] = __Block_byref_object_copy__42;
    v46[4] = __Block_byref_object_dispose__42;
    v47 = v6;
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v21, "copyShareIDsBatchSize");

    -[BRCXPCClient session](self, "session");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "clientTruthWorkloop");
    v24 = (void *)objc_claimAutoreleasedReturnValue();

    v40 = 0;
    v41 = (id *)&v40;
    v42 = 0x3042000000;
    v43 = __Block_byref_object_copy__96;
    v44 = __Block_byref_object_dispose__97;
    v45 = 0;
    v32[0] = v15;
    v32[1] = 3221225472;
    v32[2] = __73__BRCXPCRegularIPCsClient_LegacyAdditions__copyBulkShareIDsAtURLs_reply___block_invoke_98;
    v32[3] = &unk_1E8765410;
    v36 = v46;
    v32[4] = self;
    v39 = v22;
    v37 = buf;
    v25 = v20;
    v33 = v25;
    v26 = v24;
    v34 = v26;
    v38 = &v40;
    v27 = v16;
    v35 = v27;
    v28 = (void *)MEMORY[0x1D17A6DB0](v32);
    objc_storeWeak(v41 + 5, v28);
    tracker = self->super._tracker;
    v30[0] = v15;
    v30[1] = 3221225472;
    v30[2] = __73__BRCXPCRegularIPCsClient_LegacyAdditions__copyBulkShareIDsAtURLs_reply___block_invoke_100;
    v30[3] = &unk_1E875EAA8;
    v30[4] = self;
    v31 = v27;
    brc_task_tracker_async_with_logs(tracker, v26, v28, v30);

    _Block_object_dispose(&v40, 8);
    objc_destroyWeak(&v45);

    _Block_object_dispose(v46, 8);
    _Block_object_dispose(buf, 8);

  }
  __brc_leave_section(v50);

}

void __73__BRCXPCRegularIPCsClient_LegacyAdditions__copyBulkShareIDsAtURLs_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __73__BRCXPCRegularIPCsClient_LegacyAdditions__copyBulkShareIDsAtURLs_reply___block_invoke_98(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id WeakRetained;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  id v25;
  _QWORD v26[5];
  id v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint8_t buf[4];
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  void *v40;
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "count");
  v3 = *(_QWORD *)(a1 + 88);
  if (v2 < v3)
    v3 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "count");
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "subarrayWithRange:", 0, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "subarrayWithRange:", v3, objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "count") - v3);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v8 = v4;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v29, v41, 16);
  v10 = MEMORY[0x1E0C809B0];
  if (v9)
  {
    v11 = v9;
    v12 = *(_QWORD *)v30;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v30 != v12)
          objc_enumerationMutation(v8);
        v14 = *(_QWORD *)(*((_QWORD *)&v29 + 1) + 8 * v13);
        v26[0] = v10;
        v26[1] = 3221225472;
        v26[2] = __73__BRCXPCRegularIPCsClient_LegacyAdditions__copyBulkShareIDsAtURLs_reply___block_invoke_2;
        v26[3] = &unk_1E87653E8;
        v28 = *(_QWORD *)(a1 + 72);
        v26[4] = v14;
        v15 = *(void **)(a1 + 32);
        v27 = *(id *)(a1 + 40);
        objc_msgSend(v15, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v14, 1, 0, 1, v26);

        ++v13;
      }
      while (v11 != v13);
      v11 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v29, v41, 16);
    }
    while (v11);
  }

  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "count"))
  {
    v16 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
    v17 = *(void **)(a1 + 48);
    WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40));
    v24[0] = v10;
    v24[1] = 3221225472;
    v24[2] = __73__BRCXPCRegularIPCsClient_LegacyAdditions__copyBulkShareIDsAtURLs_reply___block_invoke_3;
    v24[3] = &unk_1E875EAA8;
    v24[4] = *(_QWORD *)(a1 + 32);
    v25 = *(id *)(a1 + 56);
    brc_task_tracker_async_with_logs(v16, v17, WeakRetained, v24);

  }
  else
  {
    brc_bread_crumbs();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      v21 = *(_QWORD *)(a1 + 32);
      v22 = *(_QWORD *)(a1 + 40);
      v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40);
      *(_DWORD *)buf = 138413058;
      v34 = v21;
      v35 = 2112;
      v36 = v22;
      v37 = 2112;
      v38 = v23;
      v39 = 2112;
      v40 = v19;
      _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }

}

void __73__BRCXPCRegularIPCsClient_LegacyAdditions__copyBulkShareIDsAtURLs_reply___block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;

  v17 = a2;
  objc_msgSend(v17, "byIDLocalItem");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v3)
  {
    objc_msgSend(v17, "faultedLocalItem");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v3)
    {
      v13 = (void *)MEMORY[0x1E0CB35C8];
      objc_msgSend(*(id *)(a1 + 32), "path");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "brc_errorNoDocument:underlyingPOSIXError:", v3, 2);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "brc_addPartialError:forURL:toError:", v5, *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
      v14 = objc_claimAutoreleasedReturnValue();
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v16 = *(void **)(v15 + 40);
      *(_QWORD *)(v15 + 40) = v14;

      goto LABEL_7;
    }
  }
  if (objc_msgSend(v3, "isDocument") && !objc_msgSend(v3, "isFinderBookmark"))
  {
    if ((objc_msgSend(v3, "isKnownByServer") & 1) != 0)
    {
      v11 = objc_alloc(MEMORY[0x1E0C95070]);
      objc_msgSend(v3, "asShareableItem");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = (void *)objc_msgSend(v11, "initShareIDWithShareableItem:", v12);

      objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v5, *(_QWORD *)(a1 + 32));
      goto LABEL_7;
    }
    v4 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(*(id *)(a1 + 32), "path");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "brc_errorNotInCloud:", v5);
    v6 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(*(id *)(a1 + 32), "path");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "brc_errorNoDocument:underlyingPOSIXError:", v5, 21);
    v6 = objc_claimAutoreleasedReturnValue();
  }
  v7 = (void *)v6;
  objc_msgSend(v4, "brc_addPartialError:forURL:toError:", v6, *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v8;

LABEL_7:
}

void __73__BRCXPCRegularIPCsClient_LegacyAdditions__copyBulkShareIDsAtURLs_reply___block_invoke_3(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v8, 0x2Au);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

void __73__BRCXPCRegularIPCsClient_LegacyAdditions__copyBulkShareIDsAtURLs_reply___block_invoke_100(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v8, 0x2Au);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

- (void)getCreatorNameComponentsForURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  qos_class_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  _QWORD v23[5];
  id v24;
  id v25;
  uint64_t v26[3];
  uint64_t v27[3];
  uint8_t buf[4];
  uint64_t v29;
  __int16 v30;
  BRCXPCRegularIPCsClient *v31;
  __int16 v32;
  id v33;
  __int16 v34;
  const char *v35;
  __int16 v36;
  uint64_t v37;
  __int16 v38;
  void *v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v27, 0, sizeof(v27));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getCreatorNameComponentsForURL:reply:]", 1397, v27);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v27[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "path");
    v13 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    v14 = objc_msgSend(v13, "UTF8String");
    *(_DWORD *)buf = 134219266;
    v29 = v10;
    v30 = 2112;
    v31 = self;
    v32 = 2112;
    v33 = v12;
    v34 = 2080;
    v35 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getCreatorNameComponentsForURL:reply:]";
    v36 = 2080;
    v37 = v14;
    v38 = 2112;
    v39 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s Getting creator name for %s%@", buf, 0x3Eu);

  }
  memset(v26, 0, sizeof(v26));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getCreatorNameComponentsForURL:reply:]", 1410, v26);
  brc_bread_crumbs();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    v17 = v26[0];
    v18 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v18, (uint64_t)&brc_qos_entries, 0);
    v19 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "path");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v29 = v17;
    v30 = 2112;
    v31 = self;
    v32 = 2112;
    v33 = v19;
    v34 = 2080;
    v35 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getCreatorNameComponentsForURL:reply:]";
    v36 = 2112;
    v37 = (uint64_t)v20;
    v38 = 2112;
    v39 = v15;
    _os_log_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __81__BRCXPCRegularIPCsClient_LegacyAdditions__getCreatorNameComponentsForURL_reply___block_invoke;
  v23[3] = &unk_1E8765208;
  v23[4] = self;
  v21 = v7;
  v25 = v21;
  v22 = v6;
  v24 = v22;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v22, 1, 0, 0, v23);

  __brc_leave_section(v26);
  __brc_leave_section(v27);

}

void __81__BRCXPCRegularIPCsClient_LegacyAdditions__getCreatorNameComponentsForURL_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  void (*v18)(void);
  void *v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  id v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      v27 = 138413058;
      v28 = v9;
      v29 = 2112;
      v30 = 0;
      v31 = 2112;
      v32 = v6;
      v33 = 2112;
      v34 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v27, 0x2Au);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    objc_msgSend(v5, "byIDLocalItem");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10 || (objc_msgSend(v5, "faultedLocalItem"), (v10 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
    {
      objc_msgSend(v10, "st");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "creatorRowID");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "db");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      +[BRCAccountSession nameComponentsForKey:db:](BRCAccountSession, "nameComponentsForKey:db:", v12, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      brc_bread_crumbs();
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        v17 = *(_QWORD *)(a1 + 32);
        v27 = 138413058;
        v28 = v17;
        v29 = 2112;
        v30 = v14;
        v31 = 2112;
        v32 = 0;
        v33 = 2112;
        v34 = v15;
        _os_log_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v27, 0x2Au);
      }

      v18 = *(void (**)(void))(*(_QWORD *)(a1 + 48) + 16);
    }
    else
    {
      brc_bread_crumbs();
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        v21 = (void *)MEMORY[0x1E0CB35C8];
        v22 = *(_QWORD *)(a1 + 32);
        objc_msgSend(*(id *)(a1 + 40), "path");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "brc_errorItemNotFound:", v23);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v27 = 138413058;
        v28 = v22;
        v29 = 2112;
        v30 = 0;
        v31 = 2112;
        v32 = v24;
        v33 = 2112;
        v34 = v19;
        _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v27, 0x2Au);

      }
      v25 = (void *)MEMORY[0x1E0CB35C8];
      v26 = *(_QWORD *)(a1 + 48);
      objc_msgSend(*(id *)(a1 + 40), "path");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "brc_errorItemNotFound:", v10);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = *(void (**)(void))(v26 + 16);
    }
    v18();

  }
}

- (void)startOperation:(id)a3 toDownloadItemAtURL:(id)a4 readingOptions:(unint64_t)a5 wantsCurrentVersion:(BOOL)a6 reply:(id)a7
{
  id v12;
  id v13;
  id v14;
  void *v15;
  NSObject *v16;
  id v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  qos_class_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  int v25;
  id v26;
  _QWORD v27[5];
  id v28;
  id v29;
  id v30;
  unint64_t v31;
  BOOL v32;
  _QWORD v33[5];
  id v34;
  uint64_t v35[3];
  uint8_t buf[4];
  uint64_t v37;
  __int16 v38;
  BRCXPCRegularIPCsClient *v39;
  __int16 v40;
  void *v41;
  __int16 v42;
  const char *v43;
  __int16 v44;
  void *v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v14 = a7;
  memset(v35, 0, sizeof(v35));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toDownloadItemAtURL:readingOptions:wantsCurrentVersion:reply:]", 1438, v35);
  brc_bread_crumbs();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    v26 = v13;
    v17 = v12;
    v18 = a5;
    v19 = a6;
    v20 = v35[0];
    v21 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v21, (uint64_t)&brc_qos_entries, 0);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v37 = v20;
    v38 = 2112;
    v39 = self;
    v40 = 2112;
    v41 = v22;
    v42 = 2080;
    v43 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) startOperation:toDownloadItemAtURL:readingOptions:wantsCurrentVersion:reply:]";
    v44 = 2112;
    v45 = v15;
    _os_log_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

    a6 = v19;
    a5 = v18;
    v12 = v17;
    v13 = v26;
  }

  v23 = MEMORY[0x1E0C809B0];
  v33[0] = MEMORY[0x1E0C809B0];
  v33[1] = 3221225472;
  v33[2] = __120__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toDownloadItemAtURL_readingOptions_wantsCurrentVersion_reply___block_invoke;
  v33[3] = &unk_1E875FCF8;
  v33[4] = self;
  v24 = v14;
  v34 = v24;
  v25 = _brc_ipc_check_applibrary_proxy(self, 1, v33);

  if (v25)
  {
    v27[0] = v23;
    v27[1] = 3221225472;
    v27[2] = __120__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toDownloadItemAtURL_readingOptions_wantsCurrentVersion_reply___block_invoke_102;
    v27[3] = &unk_1E8765460;
    v27[4] = self;
    v30 = v24;
    v28 = v13;
    v31 = a5;
    v32 = a6;
    v29 = v12;
    -[BRCXPCClient performBlock:withSessionFromURL:](self, "performBlock:withSessionFromURL:", v27, v28);

  }
  __brc_leave_section(v35);

}

void __120__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toDownloadItemAtURL_readingOptions_wantsCurrentVersion_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __120__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toDownloadItemAtURL_readingOptions_wantsCurrentVersion_reply___block_invoke_102(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  BRCFileProvidingRequestOperation *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void *);
  void *v14;
  uint64_t v15;
  id v16;
  uint8_t buf[4];
  uint64_t v18;
  __int16 v19;
  id v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412802;
      v18 = v9;
      v19 = 2112;
      v20 = v6;
      v21 = 2112;
      v22 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v10 = -[BRCFileProvidingRequestOperation initWithURL:readingOptions:client:session:]([BRCFileProvidingRequestOperation alloc], "initWithURL:readingOptions:client:session:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 32), v5);
    -[BRCFileProvidingRequestOperation setWantsCurrentVersion:](v10, "setWantsCurrentVersion:", *(unsigned __int8 *)(a1 + 72));
    -[_BRCFrameworkOperation setRemoteClientProxy:](v10, "setRemoteClientProxy:", *(_QWORD *)(a1 + 48));
    v11 = MEMORY[0x1E0C809B0];
    v12 = 3221225472;
    v13 = __120__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toDownloadItemAtURL_readingOptions_wantsCurrentVersion_reply___block_invoke_104;
    v14 = &unk_1E8765438;
    v15 = *(_QWORD *)(a1 + 32);
    v16 = *(id *)(a1 + 56);
    -[BRCFileProvidingRequestOperation addCompletionCallback:](v10, "addCompletionCallback:", &v11);
    objc_msgSend(*(id *)(a1 + 32), "addOperation:", v10, v11, v12, v13, v14, v15);

  }
}

uint64_t __120__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toDownloadItemAtURL_readingOptions_wantsCurrentVersion_reply___block_invoke_104(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  int v11;
  uint64_t v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v3, "brc_wrappedError");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = 138412802;
    v12 = v6;
    v13 = 2112;
    v14 = v7;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v11, 0x20u);

  }
  v8 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v3, "brc_wrappedError");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v9);

  return 1;
}

- (void)evictItemAtURL:(id)a3 options:(unint64_t)a4 reply:(id)a5
{
  _BOOL4 v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  _BOOL4 v13;
  uint64_t v14;
  qos_class_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  _QWORD v20[5];
  id v21;
  unint64_t v22;
  uint64_t v23[3];
  uint8_t buf[4];
  uint64_t v25;
  __int16 v26;
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  id v29;
  __int16 v30;
  const char *v31;
  __int16 v32;
  void *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v8 = a4 == 4;
  v36 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a5;
  memset(v23, 0, sizeof(v23));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) evictItemAtURL:options:reply:]", 1484, v23);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v19 = v10;
    v13 = v8;
    v14 = v23[0];
    v15 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v15, (uint64_t)&brc_qos_entries, 0);
    v16 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "path");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v25 = v14;
    v26 = 2112;
    v27 = self;
    v28 = 2112;
    v29 = v16;
    v30 = 2080;
    v31 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) evictItemAtURL:options:reply:]";
    v32 = 2112;
    v33 = v17;
    v34 = 2112;
    v35 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

    v8 = v13;
    v10 = v19;

  }
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __73__BRCXPCRegularIPCsClient_LegacyAdditions__evictItemAtURL_options_reply___block_invoke;
  v20[3] = &unk_1E8765488;
  v20[4] = self;
  v18 = v10;
  v21 = v18;
  v22 = a4;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v9, 2 * v8, 0, 0, v20);

  __brc_leave_section(v23);
}

void __73__BRCXPCRegularIPCsClient_LegacyAdditions__evictItemAtURL_options_reply___block_invoke(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint8_t buf[4];
  uint64_t v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = v6;
    brc_bread_crumbs();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = a1[4];
      objc_msgSend(v7, "brc_wrappedError");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v20 = v10;
      v21 = 2112;
      v22 = v11;
      v23 = 2112;
      v24 = v8;
LABEL_9:
      _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
  }
  else
  {
    objc_msgSend(v5, "byIDLocalItem");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12 || (objc_msgSend(v5, "faultedLocalItem"), (v12 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
    {
      v13 = *(_QWORD *)(a1[4] + 8);
      v14 = a1[6];
      v18 = 0;
      objc_msgSend(v12, "evictInTask:options:error:", v13, v14, &v18);
      v7 = v18;

    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:", 2);
      v7 = (id)objc_claimAutoreleasedReturnValue();
    }
    brc_bread_crumbs();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v15 = a1[4];
      objc_msgSend(v7, "brc_wrappedError");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v20 = v15;
      v21 = 2112;
      v22 = v11;
      v23 = 2112;
      v24 = v8;
      goto LABEL_9;
    }
  }

  v16 = a1[5];
  objc_msgSend(v7, "brc_wrappedError");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v16 + 16))(v16, v17);

}

- (void)thumbnailChangedForItemAtURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  _QWORD v16[5];
  id v17;
  id v18;
  uint64_t v19[3];
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  BRCXPCRegularIPCsClient *v23;
  __int16 v24;
  id v25;
  __int16 v26;
  const char *v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  void *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v19, 0, sizeof(v19));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) thumbnailChangedForItemAtURL:reply:]", 1504, v19);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v19[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "path");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v21 = v10;
    v22 = 2112;
    v23 = self;
    v24 = 2112;
    v25 = v12;
    v26 = 2080;
    v27 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) thumbnailChangedForItemAtURL:reply:]";
    v28 = 2112;
    v29 = v13;
    v30 = 2112;
    v31 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __79__BRCXPCRegularIPCsClient_LegacyAdditions__thumbnailChangedForItemAtURL_reply___block_invoke;
  v16[3] = &unk_1E8765208;
  v16[4] = self;
  v14 = v7;
  v18 = v14;
  v15 = v6;
  v17 = v15;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v15, 0, 0, 0, v16);

  __brc_leave_section(v19);
}

void __79__BRCXPCRegularIPCsClient_LegacyAdditions__thumbnailChangedForItemAtURL_reply___block_invoke(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  void *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = v6;
    brc_bread_crumbs();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = a1[4];
      objc_msgSend(v7, "brc_wrappedError");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v27 = v10;
      v28 = 2112;
      v29 = v11;
      v30 = 2112;
      v31 = v8;
      _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    v12 = a1[6];
    objc_msgSend(v7, "brc_wrappedError");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *))(v12 + 16))(v12, v13);
  }
  else
  {
    objc_msgSend(v5, "relpath");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v13, "exists")
      && (objc_msgSend(v5, "byIDLocalItem"), (v14 = objc_claimAutoreleasedReturnValue()) != 0))
    {
      v15 = (void *)v14;
      objc_msgSend(v5, "session");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "fsReader");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = a1[5];
      v25 = 0;
      objc_msgSend(v17, "thumbnailChangedForItem:relpath:url:error:", v15, v13, v18, &v25);
      v7 = v25;

    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:", 2);
      v7 = (id)objc_claimAutoreleasedReturnValue();
    }
    brc_bread_crumbs();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      v21 = a1[4];
      objc_msgSend(v7, "brc_wrappedError");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v27 = v21;
      v28 = 2112;
      v29 = v22;
      v30 = 2112;
      v31 = v19;
      _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    v23 = a1[6];
    objc_msgSend(v7, "brc_wrappedError");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *))(v23 + 16))(v23, v24);

  }
}

- (void)getQueryItemForURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v15[5];
  id v16;
  uint64_t v17[3];
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  BRCXPCRegularIPCsClient *v21;
  __int16 v22;
  id v23;
  __int16 v24;
  const char *v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v17, 0, sizeof(v17));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getQueryItemForURL:reply:]", 1550, v17);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v17[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "path");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v19 = v10;
    v20 = 2112;
    v21 = self;
    v22 = 2112;
    v23 = v12;
    v24 = 2080;
    v25 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getQueryItemForURL:reply:]";
    v26 = 2112;
    v27 = v13;
    v28 = 2112;
    v29 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __69__BRCXPCRegularIPCsClient_LegacyAdditions__getQueryItemForURL_reply___block_invoke;
  v15[3] = &unk_1E8765320;
  v15[4] = self;
  v14 = v7;
  v16 = v14;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v6, 1, 1, 0, v15);

  __brc_leave_section(v17);
}

void __69__BRCXPCRegularIPCsClient_LegacyAdditions__getQueryItemForURL_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  int v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  NSObject *v31;
  void *v32;
  NSObject *v33;
  void *v34;
  void *v35;
  id v36;
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  void *v40;
  __int16 v41;
  id v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = v6;
    brc_bread_crumbs();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138413058;
      v38 = v10;
      v39 = 2112;
      v40 = 0;
      v41 = 2112;
      v42 = v7;
      v43 = 2112;
      v44 = v8;
      _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    goto LABEL_27;
  }
  objc_msgSend(v5, "byIDLocalItem");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if (v11)
  {
    v13 = v11;
  }
  else
  {
    objc_msgSend(v5, "faultedLocalItem");
    v13 = (id)objc_claimAutoreleasedReturnValue();
  }
  v14 = v13;

  objc_msgSend(v5, "relpath");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  brc_bread_crumbs();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
    __69__BRCXPCRegularIPCsClient_LegacyAdditions__getQueryItemForURL_reply___block_invoke_cold_1();

  if (!v14
    || (objc_msgSend(v14, "isZoneRoot") & 1) != 0
    || (objc_msgSend(v14, "isDead") & 1) != 0
    || (objc_msgSend(v14, "isReserved") & 1) != 0)
  {
    if (v15)
    {
      v36 = 0;
      v18 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10EB8]), "initWithRelPath:error:", v15, &v36);
      v7 = v36;
      if (objc_msgSend(v14, "isZoneRoot"))
      {
        v19 = (void *)MEMORY[0x1E0D10EB8];
        objc_msgSend(v14, "appLibrary");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "containerMetadata");
        v35 = v15;
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "clientZone");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "dbRowID");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "containerItemForContainer:withRepresentativeItem:zoneRowID:", v21, v18, v23);
        v24 = objc_claimAutoreleasedReturnValue();

        v15 = v35;
        v18 = (void *)v24;
      }
      if (objc_msgSend(v14, "isZoneRoot"))
      {
        objc_msgSend(v14, "clientZone");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v26 = objc_msgSend(v25, "isCloudDocsZone");

        if (v26)
        {
          objc_msgSend(*(id *)(a1 + 32), "session");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v27, "fsUploader");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "quotaAvailableForOwner:", *MEMORY[0x1E0C94730]);
          v29 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v18, "setAttribute:forKey:", v29, *MEMORY[0x1E0D11138]);
        }
      }
      goto LABEL_22;
    }
    v18 = 0;
  }
  else
  {
    +[BRCNotification notificationFromItem:relpath:](BRCNotification, "notificationFromItem:relpath:", v14, v15);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v7 = 0;
LABEL_22:
  brc_bread_crumbs();
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v31 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v31, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 138413058;
    v38 = v18;
    v39 = 2112;
    v40 = v14;
    v41 = 2112;
    v42 = v15;
    v43 = 2112;
    v44 = v30;
    _os_log_debug_impl(&dword_1CBD43000, v31, OS_LOG_TYPE_DEBUG, "[DEBUG] sending back: %@\n item: %@\n path: %@\n%@", buf, 0x2Au);
  }

  brc_bread_crumbs();
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v33 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
  {
    v34 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 138413058;
    v38 = v34;
    v39 = 2112;
    v40 = v18;
    v41 = 2112;
    v42 = 0;
    v43 = 2112;
    v44 = v32;
    _os_log_impl(&dword_1CBD43000, v33, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
LABEL_27:

}

- (void)updateItemFromURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  _QWORD v16[5];
  id v17;
  id v18;
  uint64_t v19[3];
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  BRCXPCRegularIPCsClient *v23;
  __int16 v24;
  id v25;
  __int16 v26;
  const char *v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  void *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v19, 0, sizeof(v19));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) updateItemFromURL:reply:]", 1623, v19);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v19[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "path");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v21 = v10;
    v22 = 2112;
    v23 = self;
    v24 = 2112;
    v25 = v12;
    v26 = 2080;
    v27 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) updateItemFromURL:reply:]";
    v28 = 2112;
    v29 = v13;
    v30 = 2112;
    v31 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __68__BRCXPCRegularIPCsClient_LegacyAdditions__updateItemFromURL_reply___block_invoke;
  v16[3] = &unk_1E87654B0;
  v16[4] = self;
  v14 = v6;
  v17 = v14;
  v15 = v7;
  v18 = v15;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v14, 1, 0, 0, v16);

  __brc_leave_section(v19);
}

void __68__BRCXPCRegularIPCsClient_LegacyAdditions__updateItemFromURL_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  BRCURLToItemLookup *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  void *v12;
  void *v13;
  BRCURLToItemLookup *v14;
  BRCURLToItemLookup *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  NSObject *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  _QWORD v35[4];
  BRCURLToItemLookup *v36;
  uint8_t buf[4];
  uint64_t v38;
  __int16 v39;
  void *v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (!v5)
  {
    v11 = 0;
    goto LABEL_23;
  }
  -[BRCURLToItemLookup relpath](v5, "relpath");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "appLibrary");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "appLibraryID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(*(id *)(a1 + 32), "_isAppLibraryProxyEntitled") & 1) != 0)
  {
    v10 = 1;
  }
  else if (v9)
  {
    objc_msgSend(*(id *)(a1 + 32), "entitledAppLibraryIDs");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v12, "containsObject:", v9);

  }
  else
  {
    v10 = 0;
  }
  -[BRCURLToItemLookup db](v5, "db");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v35[0] = MEMORY[0x1E0C809B0];
  v35[1] = 3221225472;
  v35[2] = __68__BRCXPCRegularIPCsClient_LegacyAdditions__updateItemFromURL_reply___block_invoke_2;
  v35[3] = &unk_1E8760A50;
  v36 = v5;
  v14 = v5;
  objc_msgSend(v13, "groupInBatch:", v35);

  v15 = [BRCURLToItemLookup alloc];
  -[BRCURLToItemLookup url](v14, "url");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  -[BRCURLToItemLookup session](v14, "session");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = -[BRCURLToItemLookup initWithURL:session:](v15, "initWithURL:session:", v16, v17);
  if ((v10 & 1) == 0)
  {
    -[BRCURLToItemLookup closePaths](v5, "closePaths");
LABEL_21:
    v27 = (uint64_t)v6;
    v6 = v36;
    goto LABEL_22;
  }
  v18 = 0;
  if (-[BRCURLToItemLookup resolveParentAndKeepOpenMustExist:errcode:](v5, "resolveParentAndKeepOpenMustExist:errcode:", 1, 0)&& ((-[BRCURLToItemLookup byIDLocalItem](v5, "byIDLocalItem"), (v18 = (void *)objc_claimAutoreleasedReturnValue()) != 0)|| (-[BRCURLToItemLookup faultedLocalItem](v5, "faultedLocalItem"), (v18 = (void *)objc_claimAutoreleasedReturnValue()) != 0))&& (objc_msgSend(v18, "isZoneRoot") & 1) == 0&& (objc_msgSend(v18, "isDead") & 1) == 0)
  {
    +[BRCNotification notificationGatheredFromItem:](BRCNotification, "notificationGatheredFromItem:", v18);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v19 = objc_alloc(MEMORY[0x1E0D10EB8]);
    -[BRCURLToItemLookup relpath](v5, "relpath");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = v6;
    v11 = (void *)objc_msgSend(v19, "initWithRelPath:error:", v20, &v34);
    v21 = v34;

    v6 = v21;
  }

  -[BRCURLToItemLookup closePaths](v5, "closePaths");
  if (!v11)
    goto LABEL_21;
  -[BRCURLToItemLookup db](v5, "db");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "flushToMakeEditsVisibleToIPCReaders");

  objc_msgSend(v11, "fileObjectID");
  v23 = (void *)objc_claimAutoreleasedReturnValue();

  if (v23)
    goto LABEL_23;
  brc_bread_crumbs();
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v25 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v25, OS_LOG_TYPE_FAULT))
    __68__BRCXPCRegularIPCsClient_LegacyAdditions__updateItemFromURL_reply___block_invoke_cold_1();

  v26 = (void *)MEMORY[0x1E0CB35C8];
  objc_msgSend(*(id *)(a1 + 40), "path");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "brc_errorNoDocument:underlyingPOSIXError:", v9, 22);
  v27 = objc_claimAutoreleasedReturnValue();
LABEL_22:

  v11 = 0;
  v6 = (id)v27;
LABEL_23:
  brc_bread_crumbs();
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v29 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
  {
    v30 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v6, "brc_wrappedError");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413058;
    v38 = v30;
    v39 = 2112;
    v40 = v11;
    v41 = 2112;
    v42 = v31;
    v43 = 2112;
    v44 = v28;
    _os_log_impl(&dword_1CBD43000, v29, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

  }
  v32 = *(_QWORD *)(a1 + 48);
  objc_msgSend(v6, "brc_wrappedError");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *))(v32 + 16))(v32, v11, v33);

}

void __68__BRCXPCRegularIPCsClient_LegacyAdditions__updateItemFromURL_reply___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  objc_msgSend(*(id *)(a1 + 32), "relpath");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    objc_msgSend(*(id *)(a1 + 32), "session");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "fsReader");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "fseventAtPath:flags:", v7, 0);

  }
  objc_msgSend(*(id *)(a1 + 32), "faultedRelpath");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "session");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "fsReader");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "fseventAtPath:flags:", v4, 0);

  }
}

- (void)resolveConflictWithName:(id)a3 atURL:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  qos_class_t v15;
  id v16;
  void *v17;
  void *v18;
  NSObject *v19;
  BRCXPCRegularIPCsClient *v20;
  BRCXPCRegularIPCsClient *v21;
  void *v22;
  void *v23;
  id v24;
  _QWORD v25[4];
  id v26;
  id v27;
  BRCXPCRegularIPCsClient *v28;
  id v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32[3];
  _QWORD v33[4];
  id v34;
  uint64_t *v35;
  uint64_t *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  void (*v44)(uint64_t);
  id v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  char v49;
  _QWORD v50[5];
  id v51;
  _QWORD v52[5];
  id v53;
  _QWORD v54[5];
  id v55;
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v57;
  __int16 v58;
  BRCXPCRegularIPCsClient *v59;
  __int16 v60;
  id v61;
  __int16 v62;
  const char *v63;
  __int16 v64;
  void *v65;
  __int16 v66;
  void *v67;
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  v54[0] = 0;
  v54[1] = v54;
  v54[2] = 0x3032000000;
  v54[3] = __Block_byref_object_copy__42;
  v54[4] = __Block_byref_object_dispose__42;
  v55 = 0;
  v52[0] = 0;
  v52[1] = v52;
  v52[2] = 0x3032000000;
  v52[3] = __Block_byref_object_copy__42;
  v52[4] = __Block_byref_object_dispose__42;
  v53 = 0;
  v50[0] = 0;
  v50[1] = v50;
  v50[2] = 0x3032000000;
  v50[3] = __Block_byref_object_copy__42;
  v50[4] = __Block_byref_object_dispose__42;
  v51 = 0;
  v46 = 0;
  v47 = &v46;
  v48 = 0x2020000000;
  v49 = 0;
  v40 = 0;
  v41 = &v40;
  v42 = 0x3032000000;
  v43 = __Block_byref_object_copy__42;
  v44 = __Block_byref_object_dispose__42;
  v45 = 0;
  v33[0] = MEMORY[0x1E0C809B0];
  v33[1] = 3221225472;
  v33[2] = __80__BRCXPCRegularIPCsClient_LegacyAdditions__resolveConflictWithName_atURL_reply___block_invoke;
  v33[3] = &unk_1E87654D8;
  v35 = &v40;
  v36 = &v46;
  v11 = v8;
  v34 = v11;
  v37 = v54;
  v38 = v50;
  v39 = v52;
  -[BRCXPCClient performBlock:withSessionFromURL:](self, "performBlock:withSessionFromURL:", v33, v9);
  if (*((_BYTE *)v47 + 24))
  {
    memset(v32, 0, sizeof(v32));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) resolveConflictWithName:atURL:reply:]", 1658, v32);
    brc_bread_crumbs();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      v24 = v10;
      v14 = v32[0];
      v15 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v15, (uint64_t)&brc_qos_entries, 0);
      v16 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "path");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v57 = (BRCXPCRegularIPCsClient *)v14;
      v58 = 2112;
      v59 = self;
      v60 = 2112;
      v61 = v16;
      v62 = 2080;
      v63 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) resolveConflictWithName:atURL:reply:]";
      v64 = 2112;
      v65 = v17;
      v66 = 2112;
      v67 = v12;
      _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v10 = v24;
    }

    v25[0] = MEMORY[0x1E0C809B0];
    v25[1] = 3221225472;
    v25[2] = __80__BRCXPCRegularIPCsClient_LegacyAdditions__resolveConflictWithName_atURL_reply___block_invoke_108;
    v25[3] = &unk_1E8765500;
    v26 = v9;
    v30 = v50;
    v31 = v52;
    v27 = v11;
    v28 = self;
    v29 = v10;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v26, 0, 0, 0, v25);

    __brc_leave_section(v32);
  }
  else
  {
    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      v20 = (BRCXPCRegularIPCsClient *)v41[5];
      v21 = v20;
      if (!v20)
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("url"), v9);
        v21 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
      }
      *(_DWORD *)buf = 138412802;
      v57 = self;
      v58 = 2112;
      v59 = v21;
      v60 = 2112;
      v61 = v18;
      _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
      if (!v20)

    }
    v22 = (void *)v41[5];
    v23 = v22;
    if (!v22)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("url"), v9);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
    }
    (*((void (**)(id, void *))v10 + 2))(v10, v23);
    if (!v22)

  }
  _Block_object_dispose(&v40, 8);

  _Block_object_dispose(&v46, 8);
  _Block_object_dispose(v50, 8);

  _Block_object_dispose(v52, 8);
  _Block_object_dispose(v54, 8);

}

void __80__BRCXPCRegularIPCsClient_LegacyAdditions__resolveConflictWithName_atURL_reply___block_invoke(_QWORD *a1, uint64_t a2, void *a3)
{
  id v6;

  v6 = a3;
  if (v6)
    objc_storeStrong((id *)(*(_QWORD *)(a1[5] + 8) + 40), a3);
  else
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = objc_msgSend(MEMORY[0x1E0D25D38], "brc_parseAdditionFilename:mangledID:itemID:etag:session:", a1[4], *(_QWORD *)(a1[7] + 8) + 40, *(_QWORD *)(a1[8] + 8) + 40, *(_QWORD *)(a1[9] + 8) + 40, a2);

}

void __80__BRCXPCRegularIPCsClient_LegacyAdditions__resolveConflictWithName_atURL_reply___block_invoke_108(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  char v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  int v19;
  void *v20;
  __int16 v21;
  id v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v5)
  {
    objc_msgSend(v5, "byIDLocalItem");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_bread_crumbs();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(*(id *)(a1 + 32), "path");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = *(void **)(a1 + 40);
      v18 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
      v19 = 138413314;
      v20 = v16;
      v21 = 2112;
      v22 = v17;
      v23 = 2112;
      v24 = v18;
      v25 = 2112;
      v26 = v7;
      v27 = 2112;
      v28 = v8;
      _os_log_debug_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_DEBUG, "[DEBUG] Trying to resolve conflict at url=%@ name=%@ itemid=%@ item=%@%@", (uint8_t *)&v19, 0x34u);

    }
    objc_msgSend(v7, "itemID");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v10, "isEqualToItemID:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))&& objc_msgSend(v7, "isDocument"))
    {
      v11 = objc_msgSend(v7, "isFault");

      if ((v11 & 1) == 0)
      {
        objc_msgSend(v7, "asDocument");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "appDidResolveConflictLoserWithEtag:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40));
LABEL_10:

        goto LABEL_11;
      }
    }
    else
    {

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("url"), *(_QWORD *)(a1 + 32));
    v12 = v6;
    v6 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_10;
  }
LABEL_11:
  brc_bread_crumbs();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    v15 = *(void **)(a1 + 48);
    v19 = 138412802;
    v20 = v15;
    v21 = 2112;
    v22 = v6;
    v23 = 2112;
    v24 = v13;
    _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v19, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
}

- (void)forceConflictForURL:(id)a3 bookmarkData:(id)a4 forcedEtag:(id)a5 reply:(id)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  qos_class_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  qos_class_t v24;
  id v25;
  void *v26;
  void *v27;
  NSObject *v28;
  BRCXPCRegularIPCsClient *v29;
  id v30;
  id v31;
  _QWORD v32[4];
  id v33;
  id v34;
  BRCXPCRegularIPCsClient *v35;
  id v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39[3];
  _QWORD v40[4];
  id v41;
  uint64_t *v42;
  uint64_t *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD v47[5];
  id v48;
  uint64_t v49[3];
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  void (*v58)(uint64_t);
  id v59;
  _QWORD v60[5];
  id v61;
  _QWORD v62[5];
  id v63;
  _QWORD v64[5];
  id v65;
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v67;
  __int16 v68;
  BRCXPCRegularIPCsClient *v69;
  __int16 v70;
  id v71;
  __int16 v72;
  const char *v73;
  __int16 v74;
  void *v75;
  __int16 v76;
  void *v77;
  uint64_t v78;

  v78 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v31 = a5;
  v12 = a6;
  v64[0] = 0;
  v64[1] = v64;
  v64[2] = 0x3032000000;
  v64[3] = __Block_byref_object_copy__42;
  v64[4] = __Block_byref_object_dispose__42;
  v65 = 0;
  v62[0] = 0;
  v62[1] = v62;
  v62[2] = 0x3032000000;
  v62[3] = __Block_byref_object_copy__42;
  v62[4] = __Block_byref_object_dispose__42;
  v63 = 0;
  v60[0] = 0;
  v60[1] = v60;
  v60[2] = 0x3032000000;
  v60[3] = __Block_byref_object_copy__42;
  v60[4] = __Block_byref_object_dispose__42;
  v61 = 0;
  v54 = 0;
  v55 = &v54;
  v56 = 0x3032000000;
  v57 = __Block_byref_object_copy__42;
  v58 = __Block_byref_object_dispose__42;
  v59 = 0;
  v50 = 0;
  v51 = &v50;
  v52 = 0x2020000000;
  v53 = 0;
  memset(v49, 0, sizeof(v49));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) forceConflictForURL:bookmarkData:forcedEtag:reply:]", 1671, v49);
  brc_bread_crumbs();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    v15 = v49[0];
    v16 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v16, (uint64_t)&brc_qos_entries, 0);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v67 = (BRCXPCRegularIPCsClient *)v15;
    v68 = 2112;
    v69 = self;
    v70 = 2112;
    v71 = v17;
    v72 = 2080;
    v73 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) forceConflictForURL:bookmarkData:forcedEtag:reply:]";
    v74 = 2112;
    v75 = v13;
    _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v18 = MEMORY[0x1E0C809B0];
  v19 = (void *)*MEMORY[0x1E0D10B58];
  v47[0] = MEMORY[0x1E0C809B0];
  v47[1] = 3221225472;
  v47[2] = __94__BRCXPCRegularIPCsClient_LegacyAdditions__forceConflictForURL_bookmarkData_forcedEtag_reply___block_invoke;
  v47[3] = &unk_1E875FCF8;
  v47[4] = self;
  v20 = v12;
  v48 = v20;
  LODWORD(v19) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v19, v47);

  if ((_DWORD)v19)
  {
    v40[0] = v18;
    v40[1] = 3221225472;
    v40[2] = __94__BRCXPCRegularIPCsClient_LegacyAdditions__forceConflictForURL_bookmarkData_forcedEtag_reply___block_invoke_109;
    v40[3] = &unk_1E87654D8;
    v42 = &v54;
    v43 = &v50;
    v41 = v11;
    v44 = v62;
    v45 = v60;
    v46 = v64;
    -[BRCXPCClient performBlock:withSessionFromURL:](self, "performBlock:withSessionFromURL:", v40, v10);
    if (*((_BYTE *)v51 + 24))
    {
      memset(v39, 0, sizeof(v39));
      __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) forceConflictForURL:bookmarkData:forcedEtag:reply:]", 1712, v39);
      brc_bread_crumbs();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        v30 = v11;
        v23 = v39[0];
        v24 = qos_class_self();
        BRCPrettyPrintEnumWithContext(v24, (uint64_t)&brc_qos_entries, 0);
        v25 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "path");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 134219266;
        v67 = (BRCXPCRegularIPCsClient *)v23;
        v68 = 2112;
        v69 = self;
        v70 = 2112;
        v71 = v25;
        v72 = 2080;
        v73 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) forceConflictForURL:bookmarkData:forcedEtag:reply:]";
        v74 = 2112;
        v75 = v26;
        v76 = 2112;
        v77 = v21;
        _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

        v11 = v30;
      }

      v32[0] = v18;
      v32[1] = 3221225472;
      v32[2] = __94__BRCXPCRegularIPCsClient_LegacyAdditions__forceConflictForURL_bookmarkData_forcedEtag_reply___block_invoke_110;
      v32[3] = &unk_1E8765528;
      v33 = v10;
      v37 = v60;
      v38 = v64;
      v34 = v31;
      v35 = self;
      v36 = v20;
      -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v33, 0, 0, 0, v32);

      __brc_leave_section(v39);
    }
    else
    {
      brc_bread_crumbs();
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v28 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
      {
        v29 = (BRCXPCRegularIPCsClient *)v55[5];
        *(_DWORD *)buf = 138412802;
        v67 = self;
        v68 = 2112;
        v69 = v29;
        v70 = 2112;
        v71 = v27;
        _os_log_impl(&dword_1CBD43000, v28, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
      }

      (*((void (**)(id, uint64_t))v20 + 2))(v20, v55[5]);
    }

  }
  __brc_leave_section(v49);
  _Block_object_dispose(&v50, 8);
  _Block_object_dispose(&v54, 8);

  _Block_object_dispose(v60, 8);
  _Block_object_dispose(v62, 8);

  _Block_object_dispose(v64, 8);
}

void __94__BRCXPCRegularIPCsClient_LegacyAdditions__forceConflictForURL_bookmarkData_forcedEtag_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __94__BRCXPCRegularIPCsClient_LegacyAdditions__forceConflictForURL_bookmarkData_forcedEtag_reply___block_invoke_109(_QWORD *a1, uint64_t a2, void *a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  id obj;

  v6 = a3;
  if (v6)
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1[5] + 8) + 40), a3);
  }
  else
  {
    v7 = *(_QWORD *)(a1[7] + 8) + 40;
    v8 = *(_QWORD *)(a1[8] + 8) + 40;
    v9 = *(_QWORD *)(a1[9] + 8) + 40;
    v10 = (void *)a1[4];
    v11 = *(_QWORD *)(a1[5] + 8);
    obj = *(id *)(v11 + 40);
    v12 = objc_msgSend(v10, "parseBookmarkDataWithAccountSession:docID:itemID:mangledID:unsaltedBookmarkData:error:", a2, v7, v8, v9, 0, &obj);
    objc_storeStrong((id *)(v11 + 40), obj);
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = v12;
  }

}

void __94__BRCXPCRegularIPCsClient_LegacyAdditions__forceConflictForURL_bookmarkData_forcedEtag_reply___block_invoke_110(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  id v29;
  __int16 v30;
  void *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (!v6)
  {
    objc_msgSend(v5, "byIDLocalItem");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    if (v7)
    {
      v9 = v7;
    }
    else
    {
      objc_msgSend(v5, "faultedLocalItem");
      v9 = (id)objc_claimAutoreleasedReturnValue();
    }
    v10 = v9;

    if ((objc_msgSend(v10, "isDocument") & 1) != 0)
    {
      if (objc_msgSend(v10, "isFault"))
      {
        v11 = (void *)MEMORY[0x1E0CB35C8];
        v12 = *MEMORY[0x1E0D10B70];
        objc_msgSend(*(id *)(a1 + 32), "path");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "br_errorWithDomain:code:description:", v12, 10, CFSTR("Item %@ isn't local at path"), v13);
LABEL_14:
        v6 = (id)objc_claimAutoreleasedReturnValue();

        goto LABEL_15;
      }
      objc_msgSend(v10, "itemID");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v16, "isEqualToItemID:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40)) & 1) != 0)
      {
        objc_msgSend(v10, "appLibrary");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "mangledID");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = objc_msgSend(v18, "isEqualToMangledID:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40));

        if ((v19 & 1) != 0)
        {
          objc_msgSend(v10, "asDocument");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "forceiWorkConflictEtag:", *(_QWORD *)(a1 + 40));

          objc_msgSend(v10, "saveToDB");
          v6 = 0;
          goto LABEL_15;
        }
      }
      else
      {

      }
      v21 = (void *)MEMORY[0x1E0CB35C8];
      v22 = *MEMORY[0x1E0D10B70];
      objc_msgSend(*(id *)(a1 + 32), "path");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "br_errorWithDomain:code:description:", v22, 10, CFSTR("Item %@ is stale at path"), v13);
      goto LABEL_14;
    }
    v14 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(*(id *)(a1 + 32), "path");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "brc_errorItemNotFound:", v15);
    v6 = (id)objc_claimAutoreleasedReturnValue();

LABEL_15:
  }
  brc_bread_crumbs();
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v24 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
  {
    v25 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)buf = 138412802;
    v27 = v25;
    v28 = 2112;
    v29 = v6;
    v30 = 2112;
    v31 = v23;
    _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
}

- (void)removeItemFromDisk:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  _QWORD v16[5];
  id v17;
  id v18;
  uint64_t v19[3];
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  BRCXPCRegularIPCsClient *v23;
  __int16 v24;
  id v25;
  __int16 v26;
  const char *v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  void *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v19, 0, sizeof(v19));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) removeItemFromDisk:reply:]", 1731, v19);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v19[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "path");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v21 = v10;
    v22 = 2112;
    v23 = self;
    v24 = 2112;
    v25 = v12;
    v26 = 2080;
    v27 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) removeItemFromDisk:reply:]";
    v28 = 2112;
    v29 = v13;
    v30 = 2112;
    v31 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __69__BRCXPCRegularIPCsClient_LegacyAdditions__removeItemFromDisk_reply___block_invoke;
  v16[3] = &unk_1E8765208;
  v16[4] = self;
  v14 = v7;
  v18 = v14;
  v15 = v6;
  v17 = v15;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v15, 0, 0, 0, v16);

  __brc_leave_section(v19);
}

void __69__BRCXPCRegularIPCsClient_LegacyAdditions__removeItemFromDisk_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  char v17;
  void *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  _QWORD v25[4];
  id v26;
  uint8_t buf[4];
  uint64_t v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = v6;
    brc_bread_crumbs();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v7, "brc_wrappedError");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v28 = v10;
      v29 = 2112;
      v30 = v11;
      v31 = 2112;
      v32 = v8;
      _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    v12 = *(_QWORD *)(a1 + 48);
    objc_msgSend(v7, "brc_wrappedError");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *))(v12 + 16))(v12, v13);

  }
  else
  {
    objc_msgSend(v5, "session");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "diskReclaimer");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "path");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v15, "renameAndUnlinkInBackgroundItemAt:path:", 0xFFFFFFFFLL, v16);

    if ((v17 & 1) != 0)
    {
      brc_bread_crumbs();
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
        __69__BRCXPCRegularIPCsClient_LegacyAdditions__removeItemFromDisk_reply___block_invoke_cold_1();

      objc_msgSend(v5, "session");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "clientDB");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v25[0] = MEMORY[0x1E0C809B0];
      v25[1] = 3221225472;
      v25[2] = __69__BRCXPCRegularIPCsClient_LegacyAdditions__removeItemFromDisk_reply___block_invoke_115;
      v25[3] = &unk_1E8760A50;
      v26 = v5;
      objc_msgSend(v21, "groupInBatch:", v25);

      v7 = 0;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorFromErrno");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
    }
    brc_bread_crumbs();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      v24 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412802;
      v28 = v24;
      v29 = 2112;
      v30 = v7;
      v31 = 2112;
      v32 = v22;
      _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }

}

void __69__BRCXPCRegularIPCsClient_LegacyAdditions__removeItemFromDisk_reply___block_invoke_115(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "session");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fsReader");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "byPathRelpath");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fseventAtPath:flags:", v3, 0);

}

- (void)trashItemAtURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  _QWORD v16[5];
  id v17;
  id v18;
  uint64_t v19[3];
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  BRCXPCRegularIPCsClient *v23;
  __int16 v24;
  id v25;
  __int16 v26;
  const char *v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  void *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v19, 0, sizeof(v19));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) trashItemAtURL:reply:]", 1802, v19);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v19[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "path");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v21 = v10;
    v22 = 2112;
    v23 = self;
    v24 = 2112;
    v25 = v12;
    v26 = 2080;
    v27 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) trashItemAtURL:reply:]";
    v28 = 2112;
    v29 = v13;
    v30 = 2112;
    v31 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __65__BRCXPCRegularIPCsClient_LegacyAdditions__trashItemAtURL_reply___block_invoke;
  v16[3] = &unk_1E8765208;
  v16[4] = self;
  v14 = v7;
  v18 = v14;
  v15 = v6;
  v17 = v15;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v15, 1, 0, 0, v16);

  __brc_leave_section(v19);
}

void __65__BRCXPCRegularIPCsClient_LegacyAdditions__trashItemAtURL_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  char v20;
  void *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  char v28;
  void *v29;
  _BOOL4 v30;
  void *v31;
  uint64_t v32;
  void *v33;
  NSObject *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  NSObject *v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65[3];
  uint8_t buf[4];
  uint64_t v67;
  __int16 v68;
  id v69;
  __int16 v70;
  id v71;
  __int16 v72;
  void *v73;
  __int16 v74;
  void *v75;
  uint64_t v76;

  v76 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  v5 = a3;
  v56 = v4;
  if (v5)
  {
    v6 = v5;
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v6, "brc_wrappedError");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v67 = v9;
      v68 = 2112;
      v69 = 0;
      v70 = 2112;
      v71 = v10;
      v72 = 2112;
      v73 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

    }
    v11 = *(_QWORD *)(a1 + 48);
    objc_msgSend(v6, "brc_wrappedError");
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v11 + 16))(v11, 0, v59);
  }
  else
  {
    objc_msgSend(v4, "relpath");
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v59, "appLibrary");
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    +[BRCPathToItemLookup lookupForRelativePath:](BRCPathToItemLookup, "lookupForRelativePath:", v59);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "clientZone");
    v55 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v55, "isPrivateZone"))
    {
      objc_msgSend(v54, "containerMetadata");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "trashURL");
      v60 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v60 = 0;
    }
    memset(v65, 0, sizeof(v65));
    __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) trashItemAtURL:reply:]_block_invoke", 1753, v65);
    brc_bread_crumbs();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
    {
      v48 = v65[0];
      v49 = *(void **)(a1 + 40);
      objc_msgSend(v54, "appLibraryID");
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219010;
      v67 = v48;
      v68 = 2112;
      v69 = v49;
      v70 = 2112;
      v71 = v50;
      v72 = 2112;
      v73 = v60;
      v74 = 2112;
      v75 = v14;
      _os_log_debug_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx trash item at %@ in %@ to %@%@", buf, 0x34u);

    }
    if (v60)
    {
      objc_msgSend(*(id *)(a1 + 40), "br_logicalURL");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "lastPathComponent");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v63 = 0;
      v64 = 0;
      objc_msgSend(v17, "br_stringByDeletingPathBounceNo:andPathExtension:", &v64, &v63);
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = v63;
      objc_msgSend(v56, "session");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "fsReader");
      v53 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v64)
        v64 = 1;
      v62 = 0;
      v20 = objc_msgSend(v52, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v60, 1, 0, &v62);
      v51 = v62;
      if ((v20 & 1) == 0)
      {
        brc_bread_crumbs();
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v60, "path");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v67 = (uint64_t)v23;
          v68 = 2112;
          v69 = v51;
          v70 = 2112;
          v71 = v21;
          _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_DEFAULT, "[WARNING] can't create %@: %@%@", buf, 0x20u);

        }
      }
      objc_msgSend(v53, "fseventOnURL:dbFlags:", v60, 16);
      v24 = 0;
      v25 = *MEMORY[0x1E0CB28A8];
      while (1)
      {
        objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v60, "URLByAppendingPathComponent:", v17);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v61 = v24;
        v28 = objc_msgSend(v26, "br_movePromisedItemAtURL:toURL:error:", v16, v27, &v61);
        v6 = v61;

        if ((v28 & 1) != 0)
          break;
        objc_msgSend(v6, "domain");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        if (!objc_msgSend(v29, "isEqualToString:", v25))
        {

LABEL_29:
          brc_bread_crumbs();
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v46 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
          {
            v47 = *(_QWORD *)(a1 + 32);
            *(_DWORD *)buf = 138413058;
            v67 = v47;
            v68 = 2112;
            v69 = 0;
            v70 = 2112;
            v71 = v6;
            v72 = 2112;
            v73 = v45;
            _os_log_impl(&dword_1CBD43000, v46, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
          }

          (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
          goto LABEL_32;
        }
        v30 = objc_msgSend(v6, "code") == 516;

        if (!v30)
          goto LABEL_29;
        ++v64;
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v58, "br_representableHFSFileNameWithNumber:addedExtension:makeDotFile:", v31, v18, 0);
        v32 = objc_claimAutoreleasedReturnValue();

        v17 = (void *)v32;
        v24 = v6;
      }
      objc_msgSend(v60, "URLByAppendingPathComponent:", v17);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v38, "br_physicalURL");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v53, "fseventOnURL:dbFlags:", v39, 0);

      objc_msgSend(v56, "session");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "clientDB");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v41, "flushToMakeEditsVisibleToIPCReaders");

      brc_bread_crumbs();
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
      {
        v44 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138413058;
        v67 = v44;
        v68 = 2112;
        v69 = v38;
        v70 = 2112;
        v71 = 0;
        v72 = 2112;
        v73 = v42;
        _os_log_impl(&dword_1CBD43000, v43, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
      }

      (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
LABEL_32:

    }
    else
    {
      brc_bread_crumbs();
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v34 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
      {
        v35 = *(_QWORD *)(a1 + 32);
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorPathOutsideAnyCloudDocsAppLibraryAtURL:", *(_QWORD *)(a1 + 40));
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        v67 = v35;
        v68 = 2112;
        v69 = 0;
        v70 = 2112;
        v71 = v36;
        v72 = 2112;
        v73 = v33;
        _os_log_impl(&dword_1CBD43000, v34, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

      }
      v37 = *(_QWORD *)(a1 + 48);
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorPathOutsideAnyCloudDocsAppLibraryAtURL:", *(_QWORD *)(a1 + 40));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, _QWORD, void *))(v37 + 16))(v37, 0, v16);
      v6 = 0;
    }

    __brc_leave_section(v65);
  }

}

- (void)listFilesIngested:(id)a3 reply:(id)a4
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  qos_class_t v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  BRCXPCRegularIPCsClient *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  id v26;
  BRCXPCRegularIPCsClient *v27;
  void *v28;
  NSObject *v29;
  void *v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v37;
  uint64_t v38[3];
  _QWORD v39[5];
  id v40;
  uint64_t v41[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v43;
  __int16 v44;
  BRCXPCRegularIPCsClient *v45;
  __int16 v46;
  _BYTE v47[18];
  __int16 v48;
  void *v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v35 = a3;
  v5 = a4;
  memset(v41, 0, sizeof(v41));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) listFilesIngested:reply:]", 1810, v41);
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = v41[0];
    v9 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v9, (uint64_t)&brc_qos_entries, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v43 = (BRCXPCRegularIPCsClient *)v8;
    v44 = 2112;
    v45 = self;
    v46 = 2112;
    *(_QWORD *)v47 = v10;
    *(_WORD *)&v47[8] = 2080;
    *(_QWORD *)&v47[10] = "-[BRCXPCRegularIPCsClient(LegacyAdditions) listFilesIngested:reply:]";
    v48 = 2112;
    v49 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v11 = (void *)*MEMORY[0x1E0D10C28];
  v39[0] = MEMORY[0x1E0C809B0];
  v39[1] = 3221225472;
  v39[2] = __68__BRCXPCRegularIPCsClient_LegacyAdditions__listFilesIngested_reply___block_invoke;
  v39[3] = &unk_1E875FCF8;
  v39[4] = self;
  v34 = v5;
  v40 = v34;
  v12 = _brc_ipc_check_entitlement_and_logged_status(self, 1, v11, v39);

  if (v12)
  {
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "listFilesIngestedBatchSize");

    memset(v38, 0, sizeof(v38));
    __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) listFilesIngested:reply:]", 1814, v38);
    brc_bread_crumbs();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
    {
      v32 = v38[0];
      v33 = objc_msgSend(v35, "count");
      *(_DWORD *)buf = 134218754;
      v43 = (BRCXPCRegularIPCsClient *)v32;
      v44 = 2048;
      v45 = (BRCXPCRegularIPCsClient *)v33;
      v46 = 1024;
      *(_DWORD *)v47 = v14;
      *(_WORD *)&v47[4] = 2112;
      *(_QWORD *)&v47[6] = v15;
      _os_log_debug_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx list ingested %lu fileIDs with batchSize: %u%@", buf, 0x26u);
    }

    v17 = objc_msgSend(v35, "count");
    v18 = v17;
    if (v17)
    {
      v19 = 0;
      v20 = (BRCXPCRegularIPCsClient *)MEMORY[0x1E0C9AA60];
      v21 = v17;
      while (1)
      {
        v22 = v21 - v14;
        v23 = v21 >= v14 ? v14 : v21;
        objc_msgSend(v35, "subarrayWithRange:", v19, v23, v34);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v37 = 0;
        -[BRCXPCRegularIPCsClient _listBatchedFilesIngested:batchSize:error:](self, "_listBatchedFilesIngested:batchSize:error:", v24, v14, &v37);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v26 = v37;
        -[BRCXPCRegularIPCsClient arrayByAddingObjectsFromArray:](v20, "arrayByAddingObjectsFromArray:", v25);
        v27 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();

        if (v26)
          break;

        v19 += v14;
        v21 = v22;
        v20 = v27;
        if (v19 >= v18)
          goto LABEL_15;
      }
      brc_bread_crumbs();
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v31 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138413058;
        v43 = self;
        v44 = 2112;
        v45 = 0;
        v46 = 2112;
        *(_QWORD *)v47 = v26;
        *(_WORD *)&v47[8] = 2112;
        *(_QWORD *)&v47[10] = v30;
        _os_log_impl(&dword_1CBD43000, v31, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
      }

      (*((void (**)(id, _QWORD, id))v34 + 2))(v34, 0, v26);
    }
    else
    {
      v27 = (BRCXPCRegularIPCsClient *)MEMORY[0x1E0C9AA60];
LABEL_15:
      brc_bread_crumbs();
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v29 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138413058;
        v43 = self;
        v44 = 2112;
        v45 = v27;
        v46 = 2112;
        *(_QWORD *)v47 = 0;
        *(_WORD *)&v47[8] = 2112;
        *(_QWORD *)&v47[10] = v28;
        _os_log_impl(&dword_1CBD43000, v29, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
      }

      (*((void (**)(id, BRCXPCRegularIPCsClient *, _QWORD))v34 + 2))(v34, v27, 0);
      v26 = 0;
    }

    __brc_leave_section(v38);
  }
  __brc_leave_section(v41);

}

void __68__BRCXPCRegularIPCsClient_LegacyAdditions__listFilesIngested_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (id)_listBatchedFilesIngested:(id)a3 batchSize:(unsigned int)a4 error:(id *)a5
{
  id v8;
  void *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  NSObject *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v21;
  NSObject *v22;
  _QWORD v23[5];
  id v24;
  id v25;
  _BYTE *v26;
  unsigned int v27;
  uint64_t v28[3];
  _BYTE buf[24];
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  if (objc_msgSend(v8, "count") > (unint64_t)a4)
  {
    brc_bread_crumbs();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_FAULT))
      -[BRCXPCRegularIPCsClient(LegacyAdditions) _listBatchedFilesIngested:batchSize:error:].cold.1();

  }
  objc_msgSend(v8, "componentsJoinedByString:", CFSTR(", "));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  memset(v28, 0, sizeof(v28));
  __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) _listBatchedFilesIngested:batchSize:error:]", 1836, v28);
  brc_bread_crumbs();
  v10 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134218498;
    *(_QWORD *)&buf[4] = v28[0];
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v9;
    *(_WORD *)&buf[22] = 2112;
    v30 = v10;
    _os_log_debug_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx list ingested with batch fileIDs:(%@)%@", buf, 0x20u);
  }

  v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v8, "count"));
  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  v30 = __Block_byref_object_copy__42;
  v31 = __Block_byref_object_dispose__42;
  v32 = 0;
  -[BRCXPCClient session](self, "session");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "readOnlyWorkloop");
  v14 = objc_claimAutoreleasedReturnValue();
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __86__BRCXPCRegularIPCsClient_LegacyAdditions___listBatchedFilesIngested_batchSize_error___block_invoke;
  v23[3] = &unk_1E8765550;
  v23[4] = self;
  v15 = v9;
  v27 = a4;
  v24 = v15;
  v26 = buf;
  v16 = v12;
  v25 = v16;
  dispatch_async_and_wait(v14, v23);

  v17 = *(void **)(*(_QWORD *)&buf[8] + 40);
  if (v17)
    *a5 = objc_retainAutorelease(v17);
  v18 = v25;
  v19 = v16;

  _Block_object_dispose(buf, 8);
  __brc_leave_section(v28);

  return v19;
}

void __86__BRCXPCRegularIPCsClient_LegacyAdditions___listBatchedFilesIngested_batchSize_error___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "readOnlyDB");
  v10 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0DE81E0], "rawInjection:length:", objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 40)), "UTF8String"), objc_msgSend(*(id *)(a1 + 40), "length"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)objc_msgSend(v10, "fetch:", CFSTR("SELECT item_file_id FROM client_items WHERE item_file_id IN (%@) LIMIT %u"), v3, *(unsigned int *)(a1 + 64));

  objc_msgSend(v10, "lastError");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    objc_msgSend(v10, "lastError");
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

  }
  else if (objc_msgSend(v4, "next"))
  {
    do
    {
      objc_msgSend(v4, "objectOfClass:atIndex:", objc_opt_class(), 0);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 48), "addObject:", v9);

    }
    while ((objc_msgSend(v4, "next") & 1) != 0);
  }

}

- (void)pauseSyncForFileAtURL:(id)a3 timeout:(double)a4 options:(int64_t)a5 reply:(id)a6
{
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  qos_class_t v22;
  id v23;
  void *v24;
  _QWORD v25[5];
  id v26;
  id v27;
  double v28;
  uint64_t v29[3];
  _QWORD v30[5];
  id v31;
  uint64_t v32[3];
  uint8_t buf[4];
  uint64_t v34;
  __int16 v35;
  BRCXPCRegularIPCsClient *v36;
  __int16 v37;
  id v38;
  __int16 v39;
  const char *v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a6;
  memset(v32, 0, sizeof(v32));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) pauseSyncForFileAtURL:timeout:options:reply:]", 1868, v32);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v32[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v34 = v13;
    v35 = 2112;
    v36 = self;
    v37 = 2112;
    v38 = v15;
    v39 = 2080;
    v40 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) pauseSyncForFileAtURL:timeout:options:reply:]";
    v41 = 2112;
    v42 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v16 = MEMORY[0x1E0C809B0];
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 3221225472;
  v30[2] = __88__BRCXPCRegularIPCsClient_LegacyAdditions__pauseSyncForFileAtURL_timeout_options_reply___block_invoke;
  v30[3] = &unk_1E875FCF8;
  v30[4] = self;
  v17 = v10;
  v31 = v17;
  v18 = _brc_ipc_check_entitlement_and_logged_status(self, 1, CFSTR("com.apple.internal.fileprovider.in-place-collaboration"), v30);

  if (v18)
  {
    memset(v29, 0, sizeof(v29));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) pauseSyncForFileAtURL:timeout:options:reply:]", 1891, v29);
    brc_bread_crumbs();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      v21 = v29[0];
      v22 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v22, (uint64_t)&brc_qos_entries, 0);
      v23 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "path");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v34 = v21;
      v35 = 2112;
      v36 = self;
      v37 = 2112;
      v38 = v23;
      v39 = 2080;
      v40 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) pauseSyncForFileAtURL:timeout:options:reply:]";
      v41 = 2112;
      v42 = v24;
      v43 = 2112;
      v44 = v19;
      _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v16 = MEMORY[0x1E0C809B0];
    }

    v25[0] = v16;
    v25[1] = 3221225472;
    v25[2] = __88__BRCXPCRegularIPCsClient_LegacyAdditions__pauseSyncForFileAtURL_timeout_options_reply___block_invoke_126;
    v25[3] = &unk_1E87652F8;
    v25[4] = self;
    v27 = v17;
    v26 = v9;
    v28 = a4;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v26, 0, 0, 0, v25);

    __brc_leave_section(v29);
  }
  __brc_leave_section(v32);

}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__pauseSyncForFileAtURL_timeout_options_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__pauseSyncForFileAtURL_timeout_options_reply___block_invoke_126(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  double v17;
  void *v18;
  char v19;
  id v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  void (*v24)(void);
  void *v25;
  NSObject *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  NSObject *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  id v42;
  uint8_t buf[4];
  uint64_t v44;
  __int16 v45;
  id v46;
  __int16 v47;
  void *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (!v6)
  {
    objc_msgSend(v5, "byIDLocalItem");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (v13)
    {
      v15 = v13;
    }
    else
    {
      objc_msgSend(v5, "faultedLocalItem");
      v15 = (id)objc_claimAutoreleasedReturnValue();
    }
    v12 = v15;

    if ((objc_msgSend(v12, "isDocument") & 1) != 0)
    {
      if ((objc_msgSend(v12, "isShared") & 1) != 0)
      {
        objc_msgSend(v12, "asDocument");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = *(double *)(a1 + 56);
        objc_msgSend(*(id *)(a1 + 32), "bundleID");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v42 = 0;
        v19 = objc_msgSend(v16, "pauseFromSyncWithTimeout:forBundleID:error:", v18, &v42, v17);
        v20 = v42;

        if ((v19 & 1) != 0)
        {
          brc_bread_crumbs();
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v22 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
          {
            v23 = *(_QWORD *)(a1 + 32);
            *(_DWORD *)buf = 138412802;
            v44 = v23;
            v45 = 2112;
            v46 = 0;
            v47 = 2112;
            v48 = v21;
            _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
          }
        }
        else
        {
          brc_bread_crumbs();
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v22 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
          {
            v41 = *(_QWORD *)(a1 + 32);
            *(_DWORD *)buf = 138412802;
            v44 = v41;
            v45 = 2112;
            v46 = v20;
            v47 = 2112;
            v48 = v21;
            _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
          }
        }

        v24 = *(void (**)(void))(*(_QWORD *)(a1 + 48) + 16);
        goto LABEL_21;
      }
      brc_bread_crumbs();
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v35 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
      {
        v36 = (void *)MEMORY[0x1E0CB35C8];
        v37 = *(_QWORD *)(a1 + 32);
        objc_msgSend(*(id *)(a1 + 40), "path");
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v36, "brc_errorDocumentIsNotSharedAtIdentifier:", v38);
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v44 = v37;
        v45 = 2112;
        v46 = v39;
        v47 = 2112;
        v48 = v34;
        _os_log_impl(&dword_1CBD43000, v35, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

      }
      v40 = (void *)MEMORY[0x1E0CB35C8];
      v32 = *(_QWORD *)(a1 + 48);
      objc_msgSend(*(id *)(a1 + 40), "path");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "brc_errorDocumentIsNotSharedAtIdentifier:", v16);
      v33 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      brc_bread_crumbs();
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        v27 = (void *)MEMORY[0x1E0CB35C8];
        v28 = *(_QWORD *)(a1 + 32);
        objc_msgSend(*(id *)(a1 + 40), "path");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "brc_errorNoDocument:underlyingPOSIXError:", v29, 2);
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v44 = v28;
        v45 = 2112;
        v46 = v30;
        v47 = 2112;
        v48 = v25;
        _os_log_impl(&dword_1CBD43000, v26, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

      }
      v31 = (void *)MEMORY[0x1E0CB35C8];
      v32 = *(_QWORD *)(a1 + 48);
      objc_msgSend(*(id *)(a1 + 40), "path");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v31, "brc_errorNoDocument:underlyingPOSIXError:", v16, 2);
      v33 = objc_claimAutoreleasedReturnValue();
    }
    v20 = (id)v33;
    v24 = *(void (**)(void))(v32 + 16);
LABEL_21:
    v24();

    goto LABEL_22;
  }
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v6, "brc_wrappedError");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    v44 = v9;
    v45 = 2112;
    v46 = v10;
    v47 = 2112;
    v48 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

  }
  v11 = *(_QWORD *)(a1 + 48);
  objc_msgSend(v6, "brc_wrappedError");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v11 + 16))(v11, v12);
LABEL_22:

}

- (void)resumeSyncForFileAtURL:(id)a3 dropLocalChanges:(BOOL)a4 reply:(id)a5
{
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  qos_class_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  int v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  qos_class_t v21;
  id v22;
  void *v23;
  BOOL v24;
  _QWORD v25[5];
  id v26;
  id v27;
  BOOL v28;
  uint64_t v29[3];
  _QWORD v30[5];
  id v31;
  uint64_t v32[3];
  uint8_t buf[4];
  uint64_t v34;
  __int16 v35;
  BRCXPCRegularIPCsClient *v36;
  __int16 v37;
  id v38;
  __int16 v39;
  const char *v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  memset(v32, 0, sizeof(v32));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) resumeSyncForFileAtURL:dropLocalChanges:reply:]", 1898, v32);
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = v32[0];
    v13 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v13, (uint64_t)&brc_qos_entries, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v34 = v12;
    v35 = 2112;
    v36 = self;
    v37 = 2112;
    v38 = v14;
    v39 = 2080;
    v40 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) resumeSyncForFileAtURL:dropLocalChanges:reply:]";
    v41 = 2112;
    v42 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v15 = MEMORY[0x1E0C809B0];
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 3221225472;
  v30[2] = __90__BRCXPCRegularIPCsClient_LegacyAdditions__resumeSyncForFileAtURL_dropLocalChanges_reply___block_invoke;
  v30[3] = &unk_1E875FCF8;
  v30[4] = self;
  v16 = v9;
  v31 = v16;
  v17 = _brc_ipc_check_entitlement_and_logged_status(self, 1, CFSTR("com.apple.internal.fileprovider.in-place-collaboration"), v30);

  if (v17)
  {
    memset(v29, 0, sizeof(v29));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) resumeSyncForFileAtURL:dropLocalChanges:reply:]", 1919, v29);
    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      v24 = a4;
      v20 = v29[0];
      v21 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v21, (uint64_t)&brc_qos_entries, 0);
      v22 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "path");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v34 = v20;
      v35 = 2112;
      v36 = self;
      v37 = 2112;
      v38 = v22;
      v39 = 2080;
      v40 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) resumeSyncForFileAtURL:dropLocalChanges:reply:]";
      v41 = 2112;
      v42 = v23;
      v43 = 2112;
      v44 = v18;
      _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      a4 = v24;
      v15 = MEMORY[0x1E0C809B0];

    }
    v25[0] = v15;
    v25[1] = 3221225472;
    v25[2] = __90__BRCXPCRegularIPCsClient_LegacyAdditions__resumeSyncForFileAtURL_dropLocalChanges_reply___block_invoke_127;
    v25[3] = &unk_1E8765578;
    v25[4] = self;
    v27 = v16;
    v26 = v8;
    v28 = a4;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v26, 0, 0, 0, v25);

    __brc_leave_section(v29);
  }
  __brc_leave_section(v32);

}

void __90__BRCXPCRegularIPCsClient_LegacyAdditions__resumeSyncForFileAtURL_dropLocalChanges_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __90__BRCXPCRegularIPCsClient_LegacyAdditions__resumeSyncForFileAtURL_dropLocalChanges_reply___block_invoke_127(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  char v19;
  id v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  NSObject *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void (*v32)(void);
  uint64_t v33;
  id v34;
  uint8_t buf[4];
  uint64_t v36;
  __int16 v37;
  id v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v6, "brc_wrappedError");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v36 = v9;
      v37 = 2112;
      v38 = v10;
      v39 = 2112;
      v40 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    v11 = *(_QWORD *)(a1 + 48);
    objc_msgSend(v6, "brc_wrappedError");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *))(v11 + 16))(v11, v12);
  }
  else
  {
    objc_msgSend(v5, "byIDLocalItem");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (v13)
    {
      v15 = v13;
    }
    else
    {
      objc_msgSend(v5, "faultedLocalItem");
      v15 = (id)objc_claimAutoreleasedReturnValue();
    }
    v12 = v15;

    if ((objc_msgSend(v12, "isDocument") & 1) != 0)
    {
      objc_msgSend(v12, "asDocument");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "bundleID");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = *(unsigned __int8 *)(a1 + 56);
      v34 = 0;
      v19 = objc_msgSend(v16, "resumeSyncForBundleID:dropLocalChanges:error:", v17, v18, &v34);
      v20 = v34;

      if ((v19 & 1) != 0)
      {
        brc_bread_crumbs();
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          v23 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 138412802;
          v36 = v23;
          v37 = 2112;
          v38 = 0;
          v39 = 2112;
          v40 = v21;
          _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
        }
      }
      else
      {
        brc_bread_crumbs();
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          v33 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 138412802;
          v36 = v33;
          v37 = 2112;
          v38 = v20;
          v39 = 2112;
          v40 = v21;
          _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
        }
      }

      v32 = *(void (**)(void))(*(_QWORD *)(a1 + 48) + 16);
    }
    else
    {
      brc_bread_crumbs();
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        v26 = (void *)MEMORY[0x1E0CB35C8];
        v27 = *(_QWORD *)(a1 + 32);
        objc_msgSend(*(id *)(a1 + 40), "path");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "brc_errorNoDocument:underlyingPOSIXError:", v28, 2);
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v36 = v27;
        v37 = 2112;
        v38 = v29;
        v39 = 2112;
        v40 = v24;
        _os_log_impl(&dword_1CBD43000, v25, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

      }
      v30 = (void *)MEMORY[0x1E0CB35C8];
      v31 = *(_QWORD *)(a1 + 48);
      objc_msgSend(*(id *)(a1 + 40), "path");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "brc_errorNoDocument:underlyingPOSIXError:", v16, 2);
      v20 = (id)objc_claimAutoreleasedReturnValue();
      v32 = *(void (**)(void))(v31 + 16);
    }
    v32();

  }
}

- (void)fetchLatestVersionForFileAtURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  qos_class_t v19;
  id v20;
  void *v21;
  _QWORD v22[5];
  id v23;
  id v24;
  uint64_t v25[3];
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  id v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) fetchLatestVersionForFileAtURL:reply:]", 1926, v28);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v28[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = v10;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v12;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) fetchLatestVersionForFileAtURL:reply:]";
    v37 = 2112;
    v38 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __81__BRCXPCRegularIPCsClient_LegacyAdditions__fetchLatestVersionForFileAtURL_reply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v14 = v7;
  v27 = v14;
  v15 = _brc_ipc_check_entitlement_and_logged_status(self, 1, CFSTR("com.apple.internal.fileprovider.in-place-collaboration"), v26);

  if (v15)
  {
    memset(v25, 0, sizeof(v25));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) fetchLatestVersionForFileAtURL:reply:]", 1983, v25);
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      v18 = v25[0];
      v19 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v19, (uint64_t)&brc_qos_entries, 0);
      v20 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "path");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v30 = v18;
      v31 = 2112;
      v32 = self;
      v33 = 2112;
      v34 = v20;
      v35 = 2080;
      v36 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) fetchLatestVersionForFileAtURL:reply:]";
      v37 = 2112;
      v38 = v21;
      v39 = 2112;
      v40 = v16;
      _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

      v13 = MEMORY[0x1E0C809B0];
    }

    v22[0] = v13;
    v22[1] = 3221225472;
    v22[2] = __81__BRCXPCRegularIPCsClient_LegacyAdditions__fetchLatestVersionForFileAtURL_reply___block_invoke_128;
    v22[3] = &unk_1E8765208;
    v22[4] = self;
    v24 = v14;
    v23 = v6;
    -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v23, 0, 0, 0, v22);

    __brc_leave_section(v25);
  }
  __brc_leave_section(v28);

}

void __81__BRCXPCRegularIPCsClient_LegacyAdditions__fetchLatestVersionForFileAtURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __81__BRCXPCRegularIPCsClient_LegacyAdditions__fetchLatestVersionForFileAtURL_reply___block_invoke_128(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  BRCDownloadVersion *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  BRCDownloadVersion *v37;
  void *v38;
  NSObject *v39;
  void *v40;
  NSObject *v41;
  uint64_t v42;
  void *v43;
  NSObject *v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  NSObject *v55;
  void *v56;
  uint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  NSObject *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  NSObject *v67;
  void *v68;
  NSObject *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  BRCDownloadVersionsBatchOperation *v74;
  void *v75;
  BRCDownloadVersionsBatchOperation *v76;
  void *v77;
  void *v78;
  void *v79;
  id v80;
  uint64_t v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  BRCDownloadVersion *v86;
  void *v87;
  _QWORD v88[4];
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  uint8_t buf[4];
  uint64_t v94;
  __int16 v95;
  void *v96;
  __int16 v97;
  void *v98;
  __int16 v99;
  void *v100;
  uint64_t v101;

  v101 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (!v6)
  {
    objc_msgSend(v5, "byIDLocalItem");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (v13)
    {
      v15 = v13;
    }
    else
    {
      objc_msgSend(v5, "faultedLocalItem");
      v15 = (id)objc_claimAutoreleasedReturnValue();
    }
    v12 = v15;

    objc_msgSend(v12, "clientZone");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "itemID");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "db");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "serverItemByItemID:db:", v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    if ((objc_msgSend(v12, "isDocument") & 1) != 0)
    {
      if (v19)
      {
        objc_msgSend(v12, "asDocument");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v20, "isPausedFromSync") & 1) != 0)
        {
          v84 = v20;
          v21 = (void *)MEMORY[0x1E0CB3940];
          objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v22, "UUIDString");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "stringWithFormat:", CFSTR("dl-latestVersion-%@"), v23);
          v24 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v19, "latestVersion");
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          v26 = [BRCDownloadVersion alloc];
          objc_msgSend(v12, "asDocument");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v25, "ckInfo");
          v87 = v19;
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "etag");
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          v86 = -[BRCDownloadVersion initWithDocument:stageID:etag:isLoser:](v26, "initWithDocument:stageID:etag:isLoser:", v27, v24, v29, 0);

          objc_msgSend(v87, "itemID");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v87, "serverZone");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v31, "zoneID");
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          v85 = v25;
          objc_msgSend(v25, "additionNameForItemID:zoneID:", v30, v32);
          v33 = (void *)objc_claimAutoreleasedReturnValue();

          -[BRCDownloadVersion storage](v86, "storage");
          v34 = (void *)objc_claimAutoreleasedReturnValue();

          if (v34)
          {
            -[BRCDownloadVersion storage](v86, "storage");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v35, "additionWithName:inNameSpace:error:", v33, *MEMORY[0x1E0D25D00], 0);
            v36 = objc_claimAutoreleasedReturnValue();

            v82 = (void *)v36;
            if (v36)
            {
              v37 = v86;
              brc_bread_crumbs();
              v38 = (void *)objc_claimAutoreleasedReturnValue();
              brc_default_log();
              v39 = objc_claimAutoreleasedReturnValue();
              v20 = v84;
              if (os_log_type_enabled(v39, OS_LOG_TYPE_DEBUG))
                __81__BRCXPCRegularIPCsClient_LegacyAdditions__fetchLatestVersionForFileAtURL_reply___block_invoke_128_cold_2();

              brc_bread_crumbs();
              v40 = (void *)objc_claimAutoreleasedReturnValue();
              brc_default_log();
              v41 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
              {
                v42 = *(_QWORD *)(a1 + 32);
                *(_DWORD *)buf = 138413058;
                v94 = v42;
                v95 = 2112;
                v96 = v33;
                v97 = 2112;
                v98 = 0;
                v99 = 2112;
                v100 = v40;
                _os_log_impl(&dword_1CBD43000, v41, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
              }

              (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
            }
            else
            {
              v74 = [BRCDownloadVersionsBatchOperation alloc];
              v20 = v84;
              objc_msgSend(v84, "syncContextUsedForTransfers");
              v75 = (void *)objc_claimAutoreleasedReturnValue();
              v76 = -[BRCDownloadVersionsBatchOperation initWithSyncContext:forNonLocalVersion:](v74, "initWithSyncContext:forNonLocalVersion:", v75, 1);

              objc_msgSend(MEMORY[0x1E0C94F88], "br_fetchNonLocalVersions");
              v77 = (void *)objc_claimAutoreleasedReturnValue();
              -[_BRCOperation setGroup:](v76, "setGroup:", v77);

              objc_msgSend(v12, "session");
              v78 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v78, "stageRegistry");
              v79 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v79, "associateDownloadStageID:withOperation:", v24, v76);

              v37 = v86;
              -[BRCDownloadVersionsBatchOperation addDownload:](v76, "addDownload:", v86);
              v88[0] = MEMORY[0x1E0C809B0];
              v88[1] = 3221225472;
              v88[2] = __81__BRCXPCRegularIPCsClient_LegacyAdditions__fetchLatestVersionForFileAtURL_reply___block_invoke_138;
              v88[3] = &unk_1E87655A0;
              v80 = *(id *)(a1 + 40);
              v81 = *(_QWORD *)(a1 + 32);
              v89 = v80;
              v90 = v81;
              v92 = *(id *)(a1 + 48);
              v91 = v33;
              -[BRCDownloadVersionsBatchOperation setPerDownloadCompletionBlock:](v76, "setPerDownloadCompletionBlock:", v88);
              -[_BRCOperation schedule](v76, "schedule");

            }
            v73 = v82;
          }
          else
          {
            v83 = v33;
            brc_bread_crumbs();
            v66 = (void *)objc_claimAutoreleasedReturnValue();
            brc_default_log();
            v67 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v67, (os_log_type_t)0x90u))
              __81__BRCXPCRegularIPCsClient_LegacyAdditions__fetchLatestVersionForFileAtURL_reply___block_invoke_128_cold_1(a1, (uint64_t)v66, v67);

            brc_bread_crumbs();
            v68 = (void *)objc_claimAutoreleasedReturnValue();
            brc_default_log();
            v69 = objc_claimAutoreleasedReturnValue();
            v20 = v84;
            if (os_log_type_enabled(v69, OS_LOG_TYPE_INFO))
            {
              v70 = *(_QWORD *)(a1 + 32);
              objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("storage"), 0);
              v71 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138413058;
              v94 = v70;
              v95 = 2112;
              v96 = 0;
              v97 = 2112;
              v98 = v71;
              v99 = 2112;
              v100 = v68;
              _os_log_impl(&dword_1CBD43000, v69, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

            }
            v72 = *(_QWORD *)(a1 + 48);
            objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("storage"), 0);
            v73 = (void *)objc_claimAutoreleasedReturnValue();
            (*(void (**)(uint64_t, _QWORD, void *))(v72 + 16))(v72, 0, v73);
            v37 = v86;
            v33 = v83;
          }

          v19 = v87;
        }
        else
        {
          brc_bread_crumbs();
          v61 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v62 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v62, OS_LOG_TYPE_INFO))
          {
            v63 = *(_QWORD *)(a1 + 32);
            objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotPausedFromSync");
            v64 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138413058;
            v94 = v63;
            v95 = 2112;
            v96 = 0;
            v97 = 2112;
            v98 = v64;
            v99 = 2112;
            v100 = v61;
            _os_log_impl(&dword_1CBD43000, v62, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

          }
          v65 = *(_QWORD *)(a1 + 48);
          objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotPausedFromSync");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          (*(void (**)(uint64_t, _QWORD, void *))(v65 + 16))(v65, 0, v24);
        }
        goto LABEL_25;
      }
      brc_bread_crumbs();
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v55 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v55, OS_LOG_TYPE_INFO))
      {
        v56 = (void *)MEMORY[0x1E0CB35C8];
        v57 = *(_QWORD *)(a1 + 32);
        objc_msgSend(*(id *)(a1 + 40), "path");
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v56, "brc_errorNotInCloud:", v58);
        v59 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        v94 = v57;
        v95 = 2112;
        v96 = 0;
        v97 = 2112;
        v98 = v59;
        v99 = 2112;
        v100 = v54;
        _os_log_impl(&dword_1CBD43000, v55, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

      }
      v60 = (void *)MEMORY[0x1E0CB35C8];
      v52 = *(_QWORD *)(a1 + 48);
      objc_msgSend(*(id *)(a1 + 40), "path");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v60, "brc_errorNotInCloud:", v20);
      v53 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      brc_bread_crumbs();
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v44 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
      {
        v45 = (void *)MEMORY[0x1E0CB35C8];
        v46 = v5;
        v47 = v19;
        v48 = *(_QWORD *)(a1 + 32);
        objc_msgSend(*(id *)(a1 + 40), "path");
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v45, "brc_errorNoDocument:underlyingPOSIXError:", v49, 2);
        v50 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        v94 = v48;
        v19 = v47;
        v5 = v46;
        v95 = 2112;
        v96 = 0;
        v97 = 2112;
        v98 = v50;
        v99 = 2112;
        v100 = v43;
        _os_log_impl(&dword_1CBD43000, v44, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

      }
      v51 = (void *)MEMORY[0x1E0CB35C8];
      v52 = *(_QWORD *)(a1 + 48);
      objc_msgSend(*(id *)(a1 + 40), "path");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "brc_errorNoDocument:underlyingPOSIXError:", v20, 2);
      v53 = objc_claimAutoreleasedReturnValue();
    }
    v24 = (void *)v53;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 16))(v52, 0, v53);
LABEL_25:

    goto LABEL_26;
  }
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v6, "brc_wrappedError");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413058;
    v94 = v9;
    v95 = 2112;
    v96 = 0;
    v97 = 2112;
    v98 = v10;
    v99 = 2112;
    v100 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

  }
  v11 = *(_QWORD *)(a1 + 48);
  objc_msgSend(v6, "brc_wrappedError");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v11 + 16))(v11, 0, v12);
LABEL_26:

}

void __81__BRCXPCRegularIPCsClient_LegacyAdditions__fetchLatestVersionForFileAtURL_reply___block_invoke_138(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  NSObject *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  __int16 v16;
  id v17;
  __int16 v18;
  id v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (v4)
  {
    brc_bread_crumbs();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, (os_log_type_t)0x90u))
    {
      objc_msgSend(*(id *)(a1 + 32), "path");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "fp_obfuscatedPath");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138412802;
      v15 = v13;
      v16 = 2112;
      v17 = v4;
      v18 = 2112;
      v19 = v5;
      _os_log_error_impl(&dword_1CBD43000, v6, (os_log_type_t)0x90u, "[ERROR] failed downloading version to path '%@': %@%@", (uint8_t *)&v14, 0x20u);

    }
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(void **)(a1 + 40);
      v14 = 138413058;
      v15 = v9;
      v16 = 2112;
      v17 = 0;
      v18 = 2112;
      v19 = v4;
      v20 = 2112;
      v21 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v14, 0x2Au);
    }
  }
  else
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v10 = *(void **)(a1 + 40);
      v11 = *(void **)(a1 + 48);
      v14 = 138413058;
      v15 = v10;
      v16 = 2112;
      v17 = v11;
      v18 = 2112;
      v19 = 0;
      v20 = 2112;
      v21 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v14, 0x2Au);
    }
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
}

- (void)copyCollaborationIdentifierForItemAtURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;
  BRCXPCRegularIPCsClient *v18;
  id v19;
  uint64_t v20[3];
  uint8_t buf[4];
  uint64_t v22;
  __int16 v23;
  BRCXPCRegularIPCsClient *v24;
  __int16 v25;
  id v26;
  __int16 v27;
  const char *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v20, 0, sizeof(v20));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) copyCollaborationIdentifierForItemAtURL:reply:]", 1999, v20);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v20[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "path");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v22 = v10;
    v23 = 2112;
    v24 = self;
    v25 = 2112;
    v26 = v12;
    v27 = 2080;
    v28 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) copyCollaborationIdentifierForItemAtURL:reply:]";
    v29 = 2112;
    v30 = v13;
    v31 = 2112;
    v32 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __90__BRCXPCRegularIPCsClient_LegacyAdditions__copyCollaborationIdentifierForItemAtURL_reply___block_invoke;
  v16[3] = &unk_1E87654B0;
  v14 = v6;
  v17 = v14;
  v18 = self;
  v15 = v7;
  v19 = v15;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v14, 1, 0, 0, v16);

  __brc_leave_section(v20);
}

void __90__BRCXPCRegularIPCsClient_LegacyAdditions__copyCollaborationIdentifierForItemAtURL_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  NSObject *v27;
  void *v28;
  NSObject *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  id v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v5)
  {
    objc_msgSend(v5, "byIDLocalItem");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v7)
    {
      objc_msgSend(v5, "faultedLocalItem");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v7)
      {
        brc_bread_crumbs();
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v9 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
          __104__BRCXPCRegularIPCsClient_LegacyAdditions__getPublishedURLForItemAtURL_forStreaming_requestedTTL_reply___block_invoke_83_cold_1();

        brc_bread_crumbs();
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          v12 = (void *)MEMORY[0x1E0CB35C8];
          v13 = *(_QWORD *)(a1 + 40);
          objc_msgSend(*(id *)(a1 + 32), "path");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "brc_errorItemNotFound:", v14);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v31 = 138413058;
          v32 = v13;
          v33 = 2112;
          v34 = 0;
          v35 = 2112;
          v36 = v15;
          v37 = 2112;
          v38 = v10;
          _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v31, 0x2Au);

        }
        v16 = *(_QWORD *)(a1 + 48);
        v17 = (void *)MEMORY[0x1E0CB35C8];
        objc_msgSend(*(id *)(a1 + 32), "path");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "brc_errorItemNotFound:", v18);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        (*(void (**)(uint64_t, _QWORD, void *))(v16 + 16))(v16, 0, v19);

        v7 = 0;
      }
    }
    brc_bread_crumbs();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      v22 = *(_QWORD *)(a1 + 40);
      objc_msgSend(v7, "collaborationIdentifierIfComputable");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v31 = 138413058;
      v32 = v22;
      v33 = 2112;
      v34 = v23;
      v35 = 2112;
      v36 = 0;
      v37 = 2112;
      v38 = v20;
      _os_log_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v31, 0x2Au);

    }
    v24 = *(_QWORD *)(a1 + 48);
    objc_msgSend(v7, "collaborationIdentifierIfComputable");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *, _QWORD))(v24 + 16))(v24, v25, 0);

  }
  else
  {
    brc_bread_crumbs();
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, (os_log_type_t)0x90u))
      __90__BRCXPCRegularIPCsClient_LegacyAdditions__copyCollaborationIdentifierForItemAtURL_reply___block_invoke_cold_1(a1);

    brc_bread_crumbs();
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
    {
      v30 = *(_QWORD *)(a1 + 40);
      v31 = 138413058;
      v32 = v30;
      v33 = 2112;
      v34 = 0;
      v35 = 2112;
      v36 = v6;
      v37 = 2112;
      v38 = v28;
      _os_log_impl(&dword_1CBD43000, v29, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v31, 0x2Au);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }

}

- (void)_gatherInformationForPath:(id)a3 session:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  BRCURLToItemLookup *v12;
  BRCURLToItemLookup *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  brc_task_tracker *tracker;
  _QWORD v21[4];
  BRCURLToItemLookup *v22;
  BRCXPCRegularIPCsClient *v23;
  id v24;
  _QWORD v25[4];
  id v26;
  BRCURLToItemLookup *v27;
  BRCXPCRegularIPCsClient *v28;
  id v29;
  int v30;
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  uint64_t v34;
  __int16 v35;
  void *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  -[BRCXPCClient _auditedURLFromPath:](self, "_auditedURLFromPath:", v8);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = -[BRCURLToItemLookup initWithURL:session:]([BRCURLToItemLookup alloc], "initWithURL:session:", v11, v9);
  v13 = v12;
  v30 = 22;
  if (v8
    && -[BRCURLToItemLookup resolveParentAndKeepOpenMustExist:errcode:](v12, "resolveParentAndKeepOpenMustExist:errcode:", 1, &v30))
  {
    tracker = self->super._tracker;
    objc_msgSend(v9, "clientTruthWorkloop");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = MEMORY[0x1E0C809B0];
    v25[0] = MEMORY[0x1E0C809B0];
    v25[1] = 3221225472;
    v25[2] = __84__BRCXPCRegularIPCsClient_LegacyAdditions___gatherInformationForPath_session_reply___block_invoke;
    v25[3] = &unk_1E875DDA0;
    v26 = v8;
    v27 = v13;
    v28 = self;
    v29 = v10;
    v21[0] = v15;
    v21[1] = 3221225472;
    v21[2] = __84__BRCXPCRegularIPCsClient_LegacyAdditions___gatherInformationForPath_session_reply___block_invoke_152;
    v21[3] = &unk_1E875EB70;
    v22 = v27;
    v23 = self;
    v24 = v29;
    brc_task_tracker_async_with_logs(tracker, v14, v25, v21);

    v16 = v26;
  }
  else
  {
    brc_bread_crumbs();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("path"), v8);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v32 = self;
      v33 = 2112;
      v34 = 0;
      v35 = 2112;
      v36 = v19;
      v37 = 2112;
      v38 = v17;
      _os_log_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("path"), v8);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, void *))v10 + 2))(v10, 0, v16);
  }

}

void __84__BRCXPCRegularIPCsClient_LegacyAdditions___gatherInformationForPath_session_reply___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  id v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  char v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  char v43;
  void *v44;
  void *v45;
  void *v46;
  NSObject *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  __int16 v51;
  id v52;
  __int16 v53;
  uint64_t v54;
  __int16 v55;
  void *v56;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D17A6BE8]();
  brc_bread_crumbs();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    __84__BRCXPCRegularIPCsClient_LegacyAdditions___gatherInformationForPath_session_reply___block_invoke_cold_1(a1);

  v5 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  objc_msgSend(*(id *)(a1 + 40), "relpath");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "exists");

  v8 = *(void **)(a1 + 40);
  if (v7)
  {
LABEL_8:
    objc_msgSend(v8, "relpath");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_9;
  }
  objc_msgSend(v8, "faultedRelpath");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "exists");

  v11 = *(void **)(a1 + 40);
  if (!v10)
  {
    objc_msgSend(v11, "relpath");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v13)
      goto LABEL_10;
    v8 = *(void **)(a1 + 40);
    goto LABEL_8;
  }
  objc_msgSend(v11, "faultedRelpath");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_9:
  v14 = v12;
  objc_msgSend(v12, "description");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setObject:forKeyedSubscript:", v15, CFSTR("relpath"));

LABEL_10:
  objc_msgSend(*(id *)(a1 + 40), "byIDLocalItem");
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  v17 = *(void **)(a1 + 40);
  if (v16)
  {
    objc_msgSend(v17, "byIDLocalItem");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(v17, "faultedLocalItem");
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v19)
      goto LABEL_15;
    objc_msgSend(*(id *)(a1 + 40), "faultedLocalItem");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v20 = v18;
  objc_msgSend(v18, "description");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setObject:forKeyedSubscript:", v21, CFSTR("local item"));

LABEL_15:
  objc_msgSend(*(id *)(a1 + 40), "byIDServerItem");
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  v23 = *(void **)(a1 + 40);
  if (v22)
  {
    objc_msgSend(v23, "byIDServerItem");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_19:
    v26 = v24;
    objc_msgSend(v24, "description");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v27, CFSTR("server item"));

    goto LABEL_20;
  }
  objc_msgSend(v23, "faultedServerItem");
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  if (v25)
  {
    objc_msgSend(*(id *)(a1 + 40), "faultedServerItem");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_19;
  }
LABEL_20:
  objc_msgSend(*(id *)(a1 + 40), "byPathLocalItem");
  v28 = objc_claimAutoreleasedReturnValue();
  if (v28)
  {
    v29 = (void *)v28;
    objc_msgSend(*(id *)(a1 + 40), "byIDLocalItem");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "itemID");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "byPathLocalItem");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "itemID");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = objc_msgSend(v31, "isEqualToItemID:", v33);

    if ((v34 & 1) == 0)
    {
      objc_msgSend(*(id *)(a1 + 40), "byPathLocalItem");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v35, "description");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v36, CFSTR("local path match"));

    }
  }
  objc_msgSend(*(id *)(a1 + 40), "byPathServerItem");
  v37 = objc_claimAutoreleasedReturnValue();
  if (v37)
  {
    v38 = (void *)v37;
    objc_msgSend(*(id *)(a1 + 40), "byIDServerItem");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "itemID");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "byPathServerItem");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "itemID");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    v43 = objc_msgSend(v40, "isEqualToItemID:", v42);

    if ((v43 & 1) == 0)
    {
      objc_msgSend(*(id *)(a1 + 40), "byPathServerItem");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v44, "description");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v45, CFSTR("server path match"));

    }
  }
  brc_bread_crumbs();
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v47 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
  {
    v48 = *(_QWORD *)(a1 + 48);
    v49 = 138413058;
    v50 = v48;
    v51 = 2112;
    v52 = v5;
    v53 = 2112;
    v54 = 0;
    v55 = 2112;
    v56 = v46;
    _os_log_impl(&dword_1CBD43000, v47, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v49, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  objc_msgSend(*(id *)(a1 + 40), "closePaths");

  objc_autoreleasePoolPop(v2);
}

void __84__BRCXPCRegularIPCsClient_LegacyAdditions___gatherInformationForPath_session_reply___block_invoke_152(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "closePaths");
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 40);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v8, 0x2Au);

  }
  v6 = *(_QWORD *)(a1 + 48);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

- (void)gatherInformationForPath:(id)a3 reply:(id)a4
{
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  qos_class_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  int v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  _QWORD v21[5];
  id v22;
  uint64_t v23[3];
  uint8_t buf[4];
  uint64_t v25;
  __int16 v26;
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  const char *v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  memset(v23, 0, sizeof(v23));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) gatherInformationForPath:reply:]", 2059, v23);
  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = v23[0];
    v12 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v12, (uint64_t)&brc_qos_entries, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v25 = v11;
    v26 = 2112;
    v27 = self;
    v28 = 2112;
    v29 = v13;
    v30 = 2080;
    v31 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) gatherInformationForPath:reply:]";
    v32 = 2112;
    v33 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v14 = MEMORY[0x1E0C809B0];
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __75__BRCXPCRegularIPCsClient_LegacyAdditions__gatherInformationForPath_reply___block_invoke;
  v21[3] = &unk_1E875FCF8;
  v21[4] = self;
  v15 = v8;
  v22 = v15;
  v16 = _brc_ipc_spi(self, 1, (uint64_t)a2, v21);

  if (v16)
  {
    v20 = v15;
    v19 = v7;
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v19, v14, 3221225472, __75__BRCXPCRegularIPCsClient_LegacyAdditions__gatherInformationForPath_reply___block_invoke_153, &unk_1E87655C8, self);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    -[BRCXPCClient performBlock:withSessionFromURL:](self, "performBlock:withSessionFromURL:", &v18, v17);

  }
  __brc_leave_section(v23);

}

void __75__BRCXPCRegularIPCsClient_LegacyAdditions__gatherInformationForPath_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __75__BRCXPCRegularIPCsClient_LegacyAdditions__gatherInformationForPath_reply___block_invoke_153(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = 138413058;
      v10 = v8;
      v11 = 2112;
      v12 = 0;
      v13 = 2112;
      v14 = v5;
      v15 = 2112;
      v16 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v9, 0x2Au);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "_gatherInformationForPath:session:reply:", *(_QWORD *)(a1 + 40), a2, *(_QWORD *)(a1 + 48));
  }

}

- (void)getBackReferencingContainerIDsForURLs:(id)a3 reply:(id)a4
{
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  qos_class_t v10;
  void *v11;
  int v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  id v18;
  NSObject *queue;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  NSObject *group;
  id obj;
  _QWORD block[4];
  id v28;
  BRCXPCRegularIPCsClient *v29;
  id v30;
  id v31;
  _QWORD v32[5];
  id v33;
  id v34;
  NSObject *v35;
  _QWORD v36[4];
  id v37;
  uint64_t v38;
  _BYTE *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _QWORD v44[5];
  id v45;
  uint64_t v46[3];
  uint8_t v47[128];
  _BYTE buf[24];
  void *v49;
  __int16 v50;
  const char *v51;
  __int16 v52;
  void *v53;
  uint64_t v54;

  v54 = *MEMORY[0x1E0C80C00];
  v23 = a3;
  v6 = a4;
  memset(v46, 0, sizeof(v46));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getBackReferencingContainerIDsForURLs:reply:]", 2074, v46);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = v46[0];
    v10 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v10, (uint64_t)&brc_qos_entries, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    *(_QWORD *)&buf[4] = v9;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    *(_WORD *)&buf[22] = 2112;
    v49 = v11;
    v50 = 2080;
    v51 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getBackReferencingContainerIDsForURLs:reply:]";
    v52 = 2112;
    v53 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v44[0] = MEMORY[0x1E0C809B0];
  v44[1] = 3221225472;
  v44[2] = __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke;
  v44[3] = &unk_1E875FCF8;
  v44[4] = self;
  v22 = v6;
  v45 = v22;
  v12 = _brc_ipc_check_applibrary_proxy(self, 1, v44);

  if (v12)
  {
    v24 = (void *)objc_opt_new();
    v13 = (void *)objc_opt_new();
    group = dispatch_group_create();
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0u;
    obj = v23;
    v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v40, v47, 16);
    if (v14)
    {
      v15 = *(_QWORD *)v41;
      do
      {
        for (i = 0; i != v14; ++i)
        {
          if (*(_QWORD *)v41 != v15)
            objc_enumerationMutation(obj);
          v17 = *(_QWORD *)(*((_QWORD *)&v40 + 1) + 8 * i);
          *(_QWORD *)buf = 0;
          *(_QWORD *)&buf[8] = buf;
          *(_QWORD *)&buf[16] = 0x2020000000;
          LOBYTE(v49) = 0;
          v36[0] = MEMORY[0x1E0C809B0];
          v36[1] = 3221225472;
          v36[2] = __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke_154;
          v36[3] = &unk_1E87655F0;
          v18 = v13;
          v37 = v18;
          v38 = v17;
          v39 = buf;
          -[BRCXPCClient performBlock:withSessionFromURL:](self, "performBlock:withSessionFromURL:", v36, v17, v22);
          if (!*(_BYTE *)(*(_QWORD *)&buf[8] + 24))
          {
            dispatch_group_enter(group);
            v32[0] = MEMORY[0x1E0C809B0];
            v32[1] = 3221225472;
            v32[2] = __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke_2;
            v32[3] = &unk_1E8765618;
            v32[4] = v17;
            v33 = v18;
            v34 = v24;
            v35 = group;
            -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v17, 1, 0, 0, v32);

          }
          _Block_object_dispose(buf, 8);
        }
        v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v40, v47, 16);
      }
      while (v14);
    }

    queue = self->super._queue;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke_3;
    block[3] = &unk_1E875FE38;
    v28 = v13;
    v29 = self;
    v30 = v24;
    v31 = v22;
    v20 = v24;
    v21 = v13;
    dispatch_group_notify(group, queue, block);

  }
  __brc_leave_section(v46);

}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke_154(uint64_t a1, void *a2, uint64_t a3)
{
  void *v4;

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", a3, *(_QWORD *)(a1 + 40));
LABEL_3:
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
    return;
  }
  if (!objc_msgSend(a2, "syncedFolderTypeForURL:", *(_QWORD *)(a1 + 40)))
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorPathOutsideAnyCloudDocsAppLibraryAtURL:", *(_QWORD *)(a1 + 40));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v4, *(_QWORD *)(a1 + 40));

    goto LABEL_3;
  }
}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;

  v18 = a2;
  v5 = a3;
  objc_msgSend(v18, "byIDLocalItem");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
  {
    v8 = v6;
  }
  else
  {
    objc_msgSend(v18, "faultedLocalItem");
    v8 = (id)objc_claimAutoreleasedReturnValue();
  }
  v9 = v8;

  if (objc_msgSend(v9, "isDocument"))
  {
    objc_msgSend(v9, "setOfAppLibraryIDsWithReverseAliases");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "allObjects");
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)v11;
    v13 = (void *)MEMORY[0x1E0C9AA60];
    if (v11)
      v13 = (void *)v11;
    v14 = v13;

  }
  else if (v9)
  {
    v15 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(*(id *)(a1 + 32), "path");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "brc_errorNoDocument:underlyingPOSIXError:", v10, 21);
    v16 = objc_claimAutoreleasedReturnValue();

    v14 = 0;
    v5 = (id)v16;
  }
  else
  {
    if (v5)
    {
      v14 = 0;
      goto LABEL_11;
    }
    v17 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(*(id *)(a1 + 32), "path");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "brc_errorNoDocument:underlyingPOSIXError:", v10, 2);
    v5 = (id)objc_claimAutoreleasedReturnValue();
    v14 = 0;
  }

  if (!v5)
  {
    objc_msgSend(*(id *)(a1 + 48), "setObject:forKeyedSubscript:", v14, *(_QWORD *)(a1 + 32));
    goto LABEL_13;
  }
LABEL_11:
  objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v5, *(_QWORD *)(a1 + 32));

LABEL_13:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));

}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke_3(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  _QWORD v21[5];
  uint8_t v22[4];
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  __int16 v28;
  void *v29;
  _BYTE buf[24];
  uint64_t (*v31)(uint64_t, uint64_t);
  __int128 v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    if (objc_msgSend(*(id *)(a1 + 32), "count") == 1)
    {
      brc_bread_crumbs();
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        v4 = *(_QWORD *)(a1 + 40);
        objc_msgSend(*(id *)(a1 + 32), "allValues");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "objectAtIndexedSubscript:", 0);
        v6 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        *(_QWORD *)&buf[4] = v4;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = 0;
        *(_WORD *)&buf[22] = 2112;
        v31 = v6;
        LOWORD(v32) = 2112;
        *(_QWORD *)((char *)&v32 + 2) = v2;
        _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

      }
      v7 = *(_QWORD *)(a1 + 56);
      objc_msgSend(*(id *)(a1 + 32), "allValues");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "objectAtIndexedSubscript:", 0);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, _QWORD, void *))(v7 + 16))(v7, 0, v9);

    }
    else
    {
      *(_QWORD *)buf = 0;
      *(_QWORD *)&buf[8] = buf;
      *(_QWORD *)&buf[16] = 0x3032000000;
      v31 = __Block_byref_object_copy__42;
      *(_QWORD *)&v32 = __Block_byref_object_dispose__42;
      *((_QWORD *)&v32 + 1) = 0;
      v14 = *(void **)(a1 + 32);
      v21[0] = MEMORY[0x1E0C809B0];
      v21[1] = 3221225472;
      v21[2] = __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke_155;
      v21[3] = &unk_1E8765640;
      v21[4] = buf;
      objc_msgSend(v14, "enumerateKeysAndObjectsUsingBlock:", v21);
      if (!*(_QWORD *)(*(_QWORD *)&buf[8] + 40))
      {
        brc_bread_crumbs();
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v20 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_FAULT))
          __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke_3_cold_1();

      }
      brc_bread_crumbs();
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        v17 = *(_QWORD *)(a1 + 40);
        v18 = *(_QWORD *)(*(_QWORD *)&buf[8] + 40);
        *(_DWORD *)v22 = 138413058;
        v23 = v17;
        v24 = 2112;
        v25 = 0;
        v26 = 2112;
        v27 = v18;
        v28 = 2112;
        v29 = v15;
        _os_log_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", v22, 0x2Au);
      }

      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
      _Block_object_dispose(buf, 8);

    }
  }
  else
  {
    brc_bread_crumbs();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = *(_QWORD *)(a1 + 40);
      v13 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138413058;
      *(_QWORD *)&buf[4] = v12;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v13;
      *(_WORD *)&buf[22] = 2112;
      v31 = 0;
      LOWORD(v32) = 2112;
      *(_QWORD *)((char *)&v32 + 2) = v10;
      _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke_155(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_addPartialError:forURL:toError:", a3, a2, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40));
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

}

- (void)_sendPausedFileListBatchToUpdater:(id)a3 fromRowID:(unint64_t)a4 batchSize:(unsigned int)a5 completion:(id)a6
{
  uint64_t v7;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  id v19;
  uint64_t v20;
  id (__cdecl *v21)(NSError *, SEL);
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t i;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  NSObject *queue;
  id v31;
  id v32;
  BRCXPCRegularIPCsClient *v33;
  int v34;
  int v35;
  id v36;
  _QWORD block[5];
  id v38;
  id v39;
  unint64_t v40;
  int v41;
  int v42;
  _QWORD v43[4];
  NSObject *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _BYTE v49[128];
  uint64_t v50;

  v7 = *(_QWORD *)&a5;
  v50 = *MEMORY[0x1E0C80C00];
  v36 = a3;
  v10 = a6;
  -[BRCXPCClient session](self, "session");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "clientDB");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "assertOnQueue");

  -[BRCXPCClient bundleID](self, "bundleID");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[BRCXPCClient session](self, "session");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[BRCXPCClient session](self, "session");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "clientDB");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  +[BRCDocumentItem nextPausedDocumentBatchEnumeratorWithBundleID:fromRowID:batchSize:session:db:](BRCDocumentItem, "nextPausedDocumentBatchEnumeratorWithBundleID:fromRowID:batchSize:session:db:", v13, a4, v7, v14, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = dispatch_group_create();
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v48 = 0u;
  v19 = v17;
  v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v45, v49, 16);
  v21 = -[NSError _brc_cloudKitPluginErrorPayload];
  if (v20)
  {
    v22 = v20;
    v33 = self;
    v34 = v7;
    v23 = 0;
    v24 = *(_QWORD *)v46;
    do
    {
      v35 = v23;
      for (i = 0; i != v22; ++i)
      {
        if (*(_QWORD *)v46 != v24)
          objc_enumerationMutation(v19);
        v26 = *(void **)(*((_QWORD *)&v45 + 1) + 8 * i);
        v27 = (void *)MEMORY[0x1D17A6BE8]();
        a4 = objc_msgSend(v26, "dbRowID");
        +[BRCItemToPathLookup lookupForItem:](BRCItemToPathLookup, "lookupForItem:", v26);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "coordinatedReadURL");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        if (v29)
        {
          dispatch_group_enter(v18);
          v43[0] = MEMORY[0x1E0C809B0];
          v43[1] = 3221225472;
          v43[2] = __109__BRCXPCRegularIPCsClient_LegacyAdditions___sendPausedFileListBatchToUpdater_fromRowID_batchSize_completion___block_invoke;
          v43[3] = &unk_1E875D500;
          v44 = v18;
          objc_msgSend(v36, "updatePausedFileURL:reply:", v29, v43);

        }
        objc_autoreleasePoolPop(v27);
      }
      v23 = v35 + v22;
      v22 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v45, v49, 16);
    }
    while (v22);
    LODWORD(v7) = v34;
    self = v33;
    v21 = -[NSError _brc_cloudKitPluginErrorPayload];
  }
  else
  {
    v23 = 0;
  }

  queue = self->super._queue;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = *((_QWORD *)v21 + 318);
  block[2] = __109__BRCXPCRegularIPCsClient_LegacyAdditions___sendPausedFileListBatchToUpdater_fromRowID_batchSize_completion___block_invoke_2;
  block[3] = &unk_1E8765690;
  v41 = v23;
  v42 = v7;
  block[4] = self;
  v38 = v36;
  v39 = v10;
  v40 = a4;
  v31 = v36;
  v32 = v10;
  dispatch_group_notify(v18, queue, block);

}

void __109__BRCXPCRegularIPCsClient_LegacyAdditions___sendPausedFileListBatchToUpdater_fromRowID_batchSize_completion___block_invoke(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void __109__BRCXPCRegularIPCsClient_LegacyAdditions___sendPausedFileListBatchToUpdater_fromRowID_batchSize_completion___block_invoke_2(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD block[5];
  id v12;
  id v13;
  uint64_t v14;
  int v15;
  uint8_t buf[4];
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(a1 + 64) >= *(_DWORD *)(a1 + 68))
  {
    objc_msgSend(*(id *)(a1 + 32), "session");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "clientTruthWorkloop");
    v6 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __109__BRCXPCRegularIPCsClient_LegacyAdditions___sendPausedFileListBatchToUpdater_fromRowID_batchSize_completion___block_invoke_159;
    block[3] = &unk_1E8765668;
    v7 = *(void **)(a1 + 40);
    block[4] = *(_QWORD *)(a1 + 32);
    v8 = v7;
    v10 = *(void **)(a1 + 48);
    v9 = *(_QWORD *)(a1 + 56);
    v12 = v8;
    v14 = v9;
    v15 = *(_DWORD *)(a1 + 68);
    v13 = v10;
    dispatch_async(v6, block);

  }
  else
  {
    brc_bread_crumbs();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      v4 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412802;
      v17 = v4;
      v18 = 2112;
      v19 = 0;
      v20 = 2112;
      v21 = v2;
      _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
}

uint64_t __109__BRCXPCRegularIPCsClient_LegacyAdditions___sendPausedFileListBatchToUpdater_fromRowID_batchSize_completion___block_invoke_159(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_sendPausedFileListBatchToUpdater:fromRowID:batchSize:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), *(unsigned int *)(a1 + 64), *(_QWORD *)(a1 + 48));
}

- (void)getPausedFilesList:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  void *v16;
  NSObject *v17;
  _QWORD v18[5];
  id v19;
  id v20;
  _QWORD v21[5];
  id v22;
  uint64_t v23[3];
  uint8_t buf[4];
  uint64_t v25;
  __int16 v26;
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  const char *v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v23, 0, sizeof(v23));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getPausedFilesList:reply:]", 2194, v23);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v23[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v25 = v10;
    v26 = 2112;
    v27 = self;
    v28 = 2112;
    v29 = v12;
    v30 = 2080;
    v31 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getPausedFilesList:reply:]";
    v32 = 2112;
    v33 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __69__BRCXPCRegularIPCsClient_LegacyAdditions__getPausedFilesList_reply___block_invoke;
  v21[3] = &unk_1E875FCF8;
  v21[4] = self;
  v14 = v7;
  v22 = v14;
  v15 = _brc_ipc_check_entitlement_and_logged_status(self, 1, CFSTR("com.apple.internal.fileprovider.in-place-collaboration"), v21);

  if (v15)
  {
    -[BRCXPCClient session](self, "session");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "clientTruthWorkloop");
    v17 = objc_claimAutoreleasedReturnValue();
    v18[0] = v13;
    v18[1] = 3221225472;
    v18[2] = __69__BRCXPCRegularIPCsClient_LegacyAdditions__getPausedFilesList_reply___block_invoke_160;
    v18[3] = &unk_1E875EB70;
    v18[4] = self;
    v19 = v6;
    v20 = v14;
    dispatch_async(v17, v18);

  }
  __brc_leave_section(v23);

}

void __69__BRCXPCRegularIPCsClient_LegacyAdditions__getPausedFilesList_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t __69__BRCXPCRegularIPCsClient_LegacyAdditions__getPausedFilesList_reply___block_invoke_160(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "iWorkFetchPausedFilesBatchSize");

  return objc_msgSend(*(id *)(a1 + 32), "_sendPausedFileListBatchToUpdater:fromRowID:batchSize:completion:", *(_QWORD *)(a1 + 40), 0, v3, *(_QWORD *)(a1 + 48));
}

- (void)waitForFileSystemChangeProcessingWithReply:(id)a3
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  qos_class_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  int v13;
  void *v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  void *v25;
  NSObject *v26;
  NSObject *queue;
  id v28;
  _QWORD block[5];
  id v30;
  id v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36[3];
  _QWORD v37[5];
  id v38;
  uint64_t v39[3];
  _BYTE buf[24];
  void *v41;
  __int16 v42;
  const char *v43;
  __int16 v44;
  void *v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  memset(v39, 0, sizeof(v39));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) waitForFileSystemChangeProcessingWithReply:]", 2212, v39);
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = v39[0];
    v9 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v9, (uint64_t)&brc_qos_entries, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    *(_QWORD *)&buf[4] = v8;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    *(_WORD *)&buf[22] = 2112;
    v41 = v10;
    v42 = 2080;
    v43 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) waitForFileSystemChangeProcessingWithReply:]";
    v44 = 2112;
    v45 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v11 = MEMORY[0x1E0C809B0];
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__waitForFileSystemChangeProcessingWithReply___block_invoke;
  v37[3] = &unk_1E875FCF8;
  v37[4] = self;
  v12 = v5;
  v38 = v12;
  v13 = _brc_ipc_spi(self, 1, (uint64_t)a2, v37);

  if (v13)
  {
    memset(v36, 0, sizeof(v36));
    __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) waitForFileSystemChangeProcessingWithReply:]", 2214, v36);
    brc_bread_crumbs();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134218498;
      *(_QWORD *)&buf[4] = v36[0];
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = self;
      *(_WORD *)&buf[22] = 2112;
      v41 = v14;
      _os_log_debug_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx %@ asks us to wait for the fsevents to be processed%@", buf, 0x20u);
    }

    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient(LegacyAdditions) waitForFileSystemChangeProcessingWithReply:].cold.3();

    v18 = dispatch_semaphore_create(0);
    -[BRCXPCClient session](self, "session");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "fsEventsMonitorForSyncedFolderType:", 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "signalAfterCurrentFSEvent:", v18);

    dispatch_semaphore_wait(v18, 0xFFFFFFFFFFFFFFFFLL);
    brc_bread_crumbs();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient(LegacyAdditions) waitForFileSystemChangeProcessingWithReply:].cold.2();

    v34 = 0uLL;
    v35 = 0;
    __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) waitForFileSystemChangeProcessingWithReply:]", 2223, &v34);
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient(LegacyAdditions) waitForFileSystemChangeProcessingWithReply:].cold.1();

    *(_OWORD *)buf = v34;
    *(_QWORD *)&buf[16] = v35;
    objc_msgSend(v19, "fsReader");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "lostScanGroup");
    v26 = objc_claimAutoreleasedReturnValue();
    queue = self->super._queue;
    block[0] = v11;
    block[1] = 3221225472;
    block[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__waitForFileSystemChangeProcessingWithReply___block_invoke_161;
    block[3] = &unk_1E8760A28;
    v32 = *(_OWORD *)buf;
    v33 = *(_QWORD *)&buf[16];
    block[4] = self;
    v30 = v19;
    v31 = v12;
    v28 = v19;
    dispatch_group_notify(v26, queue, block);

    __brc_leave_section(v36);
  }
  __brc_leave_section(v39);

}

uint64_t __87__BRCXPCRegularIPCsClient_LegacyAdditions__waitForFileSystemChangeProcessingWithReply___block_invoke(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  __int16 v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412546;
    v7 = v4;
    v8 = 2112;
    v9 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply()%@", (uint8_t *)&v6, 0x16u);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__waitForFileSystemChangeProcessingWithReply___block_invoke_161(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  NSObject *v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  _QWORD block[4];
  id v10;
  __int128 v11;
  uint64_t v12;
  uint8_t buf[4];
  uint64_t v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v11 = *(_OWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 72);
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    v8 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 134218498;
    v14 = v11;
    v15 = 2112;
    v16 = v8;
    v17 = 2112;
    v18 = v2;
    _os_log_debug_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx lost scan is done, notifying client %@%@", buf, 0x20u);
  }

  objc_msgSend(*(id *)(a1 + 40), "clientTruthWorkloop");
  v4 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__waitForFileSystemChangeProcessingWithReply___block_invoke_162;
  block[3] = &unk_1E875D500;
  v10 = *(id *)(a1 + 40);
  dispatch_async_and_wait(v4, block);

  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    v14 = v7;
    v15 = 2112;
    v16 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply()%@", buf, 0x16u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  __brc_leave_section((uint64_t *)&v11);
}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__waitForFileSystemChangeProcessingWithReply___block_invoke_162(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "clientDB");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "flush");

}

- (void)resolveFileObjectIDToURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  void *v16;
  NSObject *v17;
  void *v18;
  brc_task_tracker *tracker;
  void *v20;
  id v21;
  _QWORD v22[5];
  id v23;
  _QWORD v24[4];
  id v25;
  id v26;
  BRCXPCRegularIPCsClient *v27;
  id v28;
  _QWORD v29[5];
  id v30;
  uint64_t v31[3];
  uint8_t buf[4];
  uint64_t v33;
  __int16 v34;
  BRCXPCRegularIPCsClient *v35;
  __int16 v36;
  void *v37;
  __int16 v38;
  const char *v39;
  __int16 v40;
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v31, 0, sizeof(v31));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) resolveFileObjectIDToURL:reply:]", 2239, v31);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v31[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v33 = v10;
    v34 = 2112;
    v35 = self;
    v36 = 2112;
    v37 = v12;
    v38 = 2080;
    v39 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) resolveFileObjectIDToURL:reply:]";
    v40 = 2112;
    v41 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v29[0] = MEMORY[0x1E0C809B0];
  v29[1] = 3221225472;
  v29[2] = __75__BRCXPCRegularIPCsClient_LegacyAdditions__resolveFileObjectIDToURL_reply___block_invoke;
  v29[3] = &unk_1E875FCF8;
  v29[4] = self;
  v14 = v7;
  v30 = v14;
  v15 = _brc_ipc_check_applibrary_proxy(self, 1, v29);

  if (v15)
  {
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient(LegacyAdditions) resolveFileObjectIDToURL:reply:].cold.1();

    -[BRCXPCClient session](self, "session");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    tracker = self->super._tracker;
    objc_msgSend(v18, "readOnlyWorkloop");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v24[0] = v13;
    v24[1] = 3221225472;
    v24[2] = __75__BRCXPCRegularIPCsClient_LegacyAdditions__resolveFileObjectIDToURL_reply___block_invoke_163;
    v24[3] = &unk_1E875DDA0;
    v25 = v6;
    v21 = v18;
    v26 = v21;
    v27 = self;
    v28 = v14;
    v22[0] = v13;
    v22[1] = 3221225472;
    v22[2] = __75__BRCXPCRegularIPCsClient_LegacyAdditions__resolveFileObjectIDToURL_reply___block_invoke_164;
    v22[3] = &unk_1E875EAA8;
    v22[4] = self;
    v23 = v28;
    brc_task_tracker_async_with_logs(tracker, v20, v24, v22);

  }
  __brc_leave_section(v31);

}

void __75__BRCXPCRegularIPCsClient_LegacyAdditions__resolveFileObjectIDToURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  id v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413826;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = 0;
    v15 = 2112;
    v16 = 0;
    v17 = 2112;
    v18 = v3;
    v19 = 2112;
    v20 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@)%@", (uint8_t *)&v7, 0x48u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __75__BRCXPCRegularIPCsClient_LegacyAdditions__resolveFileObjectIDToURL_reply___block_invoke_163(uint64_t a1)
{
  uint64_t v2;
  int v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  BRCItemToPathLookup *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  NSObject *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  __int16 v35;
  void *v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  void *v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  void *v44;
  __int16 v45;
  void *v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v2 = a1 + 32;
  v3 = objc_msgSend(*(id *)(a1 + 32), "isFolderOrAliasID");
  v4 = *(void **)v2;
  v5 = *(void **)(v2 + 8);
  if (v3)
  {
    objc_msgSend(v4, "folderID");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "unsignedLongLongValue");
    objc_msgSend(*(id *)(a1 + 40), "readOnlyDB");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "globalItemByFileID:db:", v7, v8);
  }
  else
  {
    objc_msgSend(v4, "documentID");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v6, "unsignedIntValue");
    objc_msgSend(*(id *)(a1 + 40), "readOnlyDB");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "globalItemByDocumentID:db:", v9, v8);
  }
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    v11 = -[BRCItemToPathLookup initWithItem:]([BRCItemToPathLookup alloc], "initWithItem:", v10);
    -[BRCItemToPathLookup byFileSystemID](v11, "byFileSystemID");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "st");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "logicalName");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "logicalURLWithLogicalName:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(*(id *)(a1 + 48), "isSandboxed"))
    {
      v16 = *MEMORY[0x1E0C80008];
      objc_msgSend(v15, "brc_issueSandboxExtensionOfClass:error:", *MEMORY[0x1E0C80008], 0);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v10, "isFault"))
      {
        objc_msgSend(v12, "physicalURL");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "brc_issueSandboxExtensionOfClass:error:", v16, 0);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_16:
        brc_bread_crumbs();
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v31 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
        {
          v32 = *(_QWORD *)(a1 + 48);
          v33 = 138413826;
          v34 = v32;
          v35 = 2112;
          v36 = v15;
          v37 = 2112;
          v38 = v17;
          v39 = 2112;
          v40 = v18;
          v41 = 2112;
          v42 = v19;
          v43 = 2112;
          v44 = 0;
          v45 = 2112;
          v46 = v30;
          _os_log_impl(&dword_1CBD43000, v31, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@)%@", (uint8_t *)&v33, 0x48u);
        }

        (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
        goto LABEL_19;
      }
      v18 = 0;
    }
    else
    {
      v18 = 0;
      v17 = 0;
    }
    v19 = 0;
    goto LABEL_16;
  }
  brc_bread_crumbs();
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v21 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
    __75__BRCXPCRegularIPCsClient_LegacyAdditions__resolveFileObjectIDToURL_reply___block_invoke_163_cold_1();

  brc_bread_crumbs();
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v23 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
  {
    v24 = *(_QWORD *)(a1 + 48);
    v25 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(*(id *)(a1 + 32), "description");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "brc_errorItemNotFound:", v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v33 = 138413826;
    v34 = v24;
    v35 = 2112;
    v36 = 0;
    v37 = 2112;
    v38 = 0;
    v39 = 2112;
    v40 = 0;
    v41 = 2112;
    v42 = 0;
    v43 = 2112;
    v44 = v27;
    v45 = 2112;
    v46 = v22;
    _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@)%@", (uint8_t *)&v33, 0x48u);

  }
  v28 = *(_QWORD *)(a1 + 56);
  v29 = (void *)MEMORY[0x1E0CB35C8];
  objc_msgSend(*(id *)(a1 + 32), "description");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "brc_errorItemNotFound:", v15);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, void *))(v28 + 16))(v28, 0, 0, 0, 0, v18);
LABEL_19:

}

void __75__BRCXPCRegularIPCsClient_LegacyAdditions__resolveFileObjectIDToURL_reply___block_invoke_164(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413826;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = 0;
    v14 = 2112;
    v15 = 0;
    v16 = 2112;
    v17 = 0;
    v18 = 2112;
    v19 = v5;
    v20 = 2112;
    v21 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@)%@", (uint8_t *)&v8, 0x48u);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, void *))(v6 + 16))(v6, 0, 0, 0, 0, v7);

}

- (void)getBookmarkDataForURL:(id)a3 onlyAllowItemKnowByServer:(BOOL)a4 allowAccessByBundleID:(id)a5 reply:(id)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  NSObject *v14;
  BOOL v15;
  id v16;
  uint64_t v17;
  qos_class_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  _QWORD v24[4];
  id v25;
  BRCXPCRegularIPCsClient *v26;
  id v27;
  BOOL v28;
  uint64_t v29[3];
  uint8_t buf[4];
  uint64_t v31;
  __int16 v32;
  BRCXPCRegularIPCsClient *v33;
  __int16 v34;
  id v35;
  __int16 v36;
  const char *v37;
  __int16 v38;
  void *v39;
  __int16 v40;
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a5;
  v12 = a6;
  memset(v29, 0, sizeof(v29));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) getBookmarkDataForURL:onlyAllowItemKnowByServer:allowAccessByBundleID:reply:]", 2325, v29);
  brc_bread_crumbs();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    v23 = v12;
    v15 = a4;
    v16 = v11;
    v17 = v29[0];
    v18 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v18, (uint64_t)&brc_qos_entries, 0);
    v19 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "path");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v31 = v17;
    v32 = 2112;
    v33 = self;
    v34 = 2112;
    v35 = v19;
    v36 = 2080;
    v37 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) getBookmarkDataForURL:onlyAllowItemKnowByServer:allowAccessByBundleID:reply:]";
    v38 = 2112;
    v39 = v20;
    v40 = 2112;
    v41 = v13;
    _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

    v11 = v16;
    a4 = v15;
    v12 = v23;

  }
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __120__BRCXPCRegularIPCsClient_LegacyAdditions__getBookmarkDataForURL_onlyAllowItemKnowByServer_allowAccessByBundleID_reply___block_invoke;
  v24[3] = &unk_1E87653C0;
  v28 = a4;
  v21 = v10;
  v25 = v21;
  v26 = self;
  v22 = v12;
  v27 = v22;
  -[BRCXPCClient accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:](self, "accessLogicalOrPhysicalURL:accessKind:dbAccessKind:synchronouslyIfPossible:handler:", v21, 1, 0, 0, v24);

  __brc_leave_section(v29);
}

void __120__BRCXPCRegularIPCsClient_LegacyAdditions__getBookmarkDataForURL_onlyAllowItemKnowByServer_allowAccessByBundleID_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  void *v3;
  void *v4;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  NSObject *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  __int16 v43;
  void *v44;
  __int16 v45;
  id v46;
  __int16 v47;
  void *v48;
  __int16 v49;
  void *v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  if (!v7)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_30;
  }
  objc_msgSend(v7, "byIDLocalItem");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v9)
  {
    v11 = v9;
  }
  else
  {
    objc_msgSend(v7, "faultedLocalItem");
    v11 = (id)objc_claimAutoreleasedReturnValue();
  }
  v14 = v11;

  if (objc_msgSend(v14, "isKnownByServer"))
  {
    if ((objc_msgSend(v14, "isFSRoot") & 1) == 0)
    {
      objc_msgSend(v14, "bookmarkData");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v14, "isDocument"))
      {
        objc_msgSend(v14, "asDocument");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "currentVersion");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "ckInfo");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "etag");
        v12 = (void *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        objc_msgSend(v14, "st");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "ckInfo");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "etag");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
      }

      goto LABEL_29;
    }
LABEL_12:
    objc_msgSend(v7, "relpath");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    if ((v21 || (objc_msgSend(v7, "byPathRelpath"), (v21 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
      && (objc_msgSend(v21, "exists") & 1) != 0)
    {
      if ((objc_msgSend(v21, "isDocument") & 1) != 0)
      {
        v22 = (void *)MEMORY[0x1E0CB3940];
        objc_msgSend(v14, "serverZone");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = v23;
        if (!v23)
        {
          +[BRCPathToItemLookup lookupForRelativePath:](BRCPathToItemLookup, "lookupForRelativePath:", v21);
          v3 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v3, "clientZone");
          v4 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "serverZone");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
        }
        objc_msgSend(v22, "bookmarkDataWithRelativePath:serverZone:", v21, v24);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v23)
        {

        }
        goto LABEL_28;
      }
      v32 = (void *)MEMORY[0x1E0CB35C8];
      objc_msgSend(*(id *)(a1 + 32), "path");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = v32;
      v30 = v28;
      v31 = 21;
    }
    else
    {
      brc_bread_crumbs();
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
      {
        v40 = *(_QWORD *)(a1 + 32);
        v41 = 138413058;
        v42 = v40;
        v43 = 2112;
        v44 = v21;
        v45 = 2112;
        v46 = v7;
        v47 = 2112;
        v48 = v25;
        _os_log_debug_impl(&dword_1CBD43000, v26, OS_LOG_TYPE_DEBUG, "[DEBUG] no local item for %@\n  path:   %@\n  lookup: %@\n%@", (uint8_t *)&v41, 0x2Au);
      }

      v27 = (void *)MEMORY[0x1E0CB35C8];
      objc_msgSend(*(id *)(a1 + 32), "path");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = v27;
      v30 = v28;
      v31 = 2;
    }
    objc_msgSend(v29, "brc_errorNoDocument:underlyingPOSIXError:", v30, v31);
    v33 = objc_claimAutoreleasedReturnValue();

    v13 = 0;
    v8 = (id)v33;
LABEL_28:

    v12 = 0;
    goto LABEL_29;
  }
  if (!*(_BYTE *)(a1 + 56))
    goto LABEL_12;
  v18 = (void *)MEMORY[0x1E0CB35C8];
  objc_msgSend(*(id *)(a1 + 32), "path");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "brc_errorNotInCloud:", v19);
  v20 = objc_claimAutoreleasedReturnValue();

  v12 = 0;
  v13 = 0;
  v8 = (id)v20;
LABEL_29:

LABEL_30:
  brc_bread_crumbs();
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v35 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
  {
    v36 = *(_QWORD *)(a1 + 40);
    objc_msgSend(v8, "brc_wrappedError");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    v41 = 138413314;
    v42 = v36;
    v43 = 2112;
    v44 = v13;
    v45 = 2112;
    v46 = v12;
    v47 = 2112;
    v48 = v37;
    v49 = 2112;
    v50 = v34;
    _os_log_impl(&dword_1CBD43000, v35, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v41, 0x34u);

  }
  v38 = *(_QWORD *)(a1 + 48);
  objc_msgSend(v8, "brc_wrappedError");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *, void *))(v38 + 16))(v38, v13, v12, v39);

}

- (void)refreshSharingStateForItemIdentifier:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  qos_class_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  brc_task_tracker *tracker;
  void *v24;
  id v25;
  _QWORD v26[4];
  id v27;
  id v28;
  BRCXPCRegularIPCsClient *v29;
  id v30;
  uint64_t v31[3];
  _QWORD v32[5];
  id v33;
  uint64_t v34[3];
  uint8_t buf[4];
  uint64_t v36;
  __int16 v37;
  BRCXPCRegularIPCsClient *v38;
  __int16 v39;
  id v40;
  __int16 v41;
  const char *v42;
  __int16 v43;
  uint64_t v44;
  __int16 v45;
  void *v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v34, 0, sizeof(v34));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) refreshSharingStateForItemIdentifier:reply:]", 2332, v34);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v34[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v36 = v10;
    v37 = 2112;
    v38 = self;
    v39 = 2112;
    v40 = v12;
    v41 = 2080;
    v42 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) refreshSharingStateForItemIdentifier:reply:]";
    v43 = 2112;
    v44 = (uint64_t)v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v32[0] = MEMORY[0x1E0C809B0];
  v32[1] = 3221225472;
  v32[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke;
  v32[3] = &unk_1E875FCF8;
  v32[4] = self;
  v14 = v7;
  v33 = v14;
  v15 = _brc_ipc_check_applibrary_proxy(self, 1, v32);

  if (v15)
  {
    memset(v31, 0, sizeof(v31));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) refreshSharingStateForItemIdentifier:reply:]", 2334, v31);
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      v18 = v31[0];
      v19 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v19, (uint64_t)&brc_qos_entries, 0);
      v20 = (id)objc_claimAutoreleasedReturnValue();
      v21 = objc_msgSend(objc_retainAutorelease(v6), "UTF8String");
      *(_DWORD *)buf = 134219266;
      v36 = v18;
      v37 = 2112;
      v38 = self;
      v39 = 2112;
      v40 = v20;
      v41 = 2080;
      v42 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) refreshSharingStateForItemIdentifier:reply:]";
      v43 = 2080;
      v44 = v21;
      v45 = 2112;
      v46 = v16;
      _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s Refreshing sharing state for %s%@", buf, 0x3Eu);

    }
    -[BRCXPCClient session](self, "session");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    tracker = self->super._tracker;
    objc_msgSend(v22, "clientTruthWorkloop");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v26[0] = v13;
    v26[1] = 3221225472;
    v26[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_165;
    v26[3] = &unk_1E875DDA0;
    v27 = v6;
    v25 = v22;
    v28 = v25;
    v29 = self;
    v30 = v14;
    brc_task_tracker_async_with_logs(tracker, v24, v26, 0);

    __brc_leave_section(v31);
  }
  __brc_leave_section(v34);

}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_165(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  BRCSharingCopyShareOperation *v15;
  uint64_t v16;
  void *v17;
  BRCSharingCopyShareOperation *v18;
  NSObject *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  NSObject *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  void *v31;
  NSObject *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  _QWORD v40[5];
  id v41;
  id v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  void (*v49)(uint64_t);
  id v50;
  uint8_t buf[4];
  uint64_t v52;
  __int16 v53;
  void *v54;
  __int16 v55;
  void *v56;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v45 = 0;
  v46 = &v45;
  v47 = 0x3032000000;
  v48 = __Block_byref_object_copy__42;
  v49 = __Block_byref_object_dispose__42;
  v50 = 0;
  objc_msgSend(MEMORY[0x1E0D10E70], "fileObjectIDWithString:", *(_QWORD *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_bread_crumbs();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    -[BRCXPCRegularIPCsClient(LegacyAdditions) resolveFileObjectIDToURL:reply:].cold.1();

  if (v2)
  {
    if (objc_msgSend(v2, "isDocumentID"))
    {
      v5 = *(void **)(a1 + 40);
      objc_msgSend(v2, "documentID");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "globalItemByDocumentID:", objc_msgSend(v6, "unsignedIntValue"));
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_8;
    }
    if (objc_msgSend(v2, "isFolderOrAliasID"))
    {
      v8 = *(void **)(a1 + 40);
      objc_msgSend(v2, "folderID");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "globalItemByFileID:", objc_msgSend(v6, "unsignedIntValue"));
      v7 = objc_claimAutoreleasedReturnValue();
LABEL_8:
      v9 = (void *)v46[5];
      v46[5] = v7;

      v10 = (void *)v46[5];
      if (v10)
      {
        objc_msgSend(v10, "clientZone");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend((id)v46[5], "itemID");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = objc_msgSend(v11, "serverRankByItemID:", v12);

        objc_msgSend((id)v46[5], "clientZone");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "scheduleSyncDownFirst");

        v15 = [BRCSharingCopyShareOperation alloc];
        v16 = v46[5];
        objc_msgSend(*(id *)(a1 + 48), "session");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = -[BRCSharingCopyShareOperation initWithItem:sessionContext:](v15, "initWithItem:sessionContext:", v16, v17);

        -[_BRCFrameworkOperation setIgnoreMissingRemoteClientProxy:](v18, "setIgnoreMissingRemoteClientProxy:", 1);
        -[_BRCOperation callbackQueue](v18, "callbackQueue");
        v19 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 40), "clientTruthWorkloop");
        v20 = objc_claimAutoreleasedReturnValue();
        dispatch_set_target_queue(v19, v20);

        v40[0] = MEMORY[0x1E0C809B0];
        v40[1] = 3221225472;
        v40[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_169;
        v40[3] = &unk_1E87656E0;
        v43 = &v45;
        v44 = v13;
        v21 = *(void **)(a1 + 56);
        v40[4] = *(_QWORD *)(a1 + 48);
        v42 = v21;
        v41 = *(id *)(a1 + 40);
        -[_BRCOperation setFinishBlock:](v18, "setFinishBlock:", v40);
        -[_BRCOperation schedule](v18, "schedule");

      }
      else
      {
        brc_bread_crumbs();
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v30 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG))
          __75__BRCXPCRegularIPCsClient_LegacyAdditions__resolveFileObjectIDToURL_reply___block_invoke_163_cold_1();

        brc_bread_crumbs();
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v32 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
        {
          v33 = *(_QWORD *)(a1 + 48);
          v34 = (void *)MEMORY[0x1E0CB35C8];
          objc_msgSend(*(id *)(a1 + 32), "description");
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v34, "brc_errorItemNotFound:", v35);
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v52 = v33;
          v53 = 2112;
          v54 = v36;
          v55 = 2112;
          v56 = v31;
          _os_log_impl(&dword_1CBD43000, v32, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

        }
        v37 = *(_QWORD *)(a1 + 56);
        v38 = (void *)MEMORY[0x1E0CB35C8];
        objc_msgSend(*(id *)(a1 + 32), "description");
        v18 = (BRCSharingCopyShareOperation *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v38, "brc_errorItemNotFound:", v18);
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        (*(void (**)(uint64_t, void *))(v37 + 16))(v37, v39);

      }
      goto LABEL_20;
    }
  }
  brc_bread_crumbs();
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v23 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
    __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_165_cold_1();

  brc_bread_crumbs();
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v25 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
  {
    v26 = *(_QWORD *)(a1 + 48);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("itemIdentifier"), *(_QWORD *)(a1 + 32));
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    v52 = v26;
    v53 = 2112;
    v54 = v27;
    v55 = 2112;
    v56 = v24;
    _os_log_impl(&dword_1CBD43000, v25, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

  }
  v28 = *(_QWORD *)(a1 + 56);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("itemIdentifier"), *(_QWORD *)(a1 + 32));
  v18 = (BRCSharingCopyShareOperation *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, BRCSharingCopyShareOperation *))(v28 + 16))(v28, v18);
LABEL_20:

  _Block_object_dispose(&v45, 8);
}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_169(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  int v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  BRCItemToPathLookup *v20;
  BRCItemToPathLookup *v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  BRCItemToPathLookup *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  BRCItemToPathLookup *v29;
  void *v30;
  void *v31;
  NSObject *v32;
  BRCItemToPathLookup *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  NSObject *v38;
  BRCItemToPathLookup *v39;
  void *v40;
  int v41;
  int v42;
  void *v43;
  NSObject *v44;
  void *v45;
  char v46;
  void *v47;
  char v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  NSObject *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  NSObject *v58;
  _QWORD v59[5];
  _BYTE v60[5];
  uint64_t v61;
  uint8_t buf[4];
  BRCItemToPathLookup *v63;
  __int16 v64;
  void *v65;
  __int16 v66;
  void *v67;
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v5)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      brc_bread_crumbs();
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v58 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v58, OS_LOG_TYPE_FAULT))
        __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_169_cold_2();

    }
  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "clientZone");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "itemID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v7, "serverRankByItemID:", v8);

  if (*(_QWORD *)(a1 + 64) == v9)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "clientZone");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "itemID");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "itemByItemID:", v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    if ((objc_msgSend(v6, "brc_containsCloudKitErrorCode:", 11) & 1) != 0
      || objc_msgSend(v6, "brc_isCloudKitErrorImplyingZoneNeedsCreation"))
    {

      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "clientZone");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_msgSend(v15, "isSharedZone");

      v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      if (v16)
      {
        objc_msgSend(*(id *)(v17 + 40), "markForceRejected");
        brc_bread_crumbs();
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          v20 = *(BRCItemToPathLookup **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
          *(_DWORD *)buf = 138412546;
          v63 = v20;
          v64 = 2112;
          v65 = v18;
          _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_DEFAULT, "[WARNING] force deleting item with missing share in shared zone %@%@", buf, 0x16u);
        }
        goto LABEL_17;
      }
      objc_msgSend(*(id *)(v17 + 40), "setSharingOptions:", objc_msgSend(*(id *)(v17 + 40), "sharingOptions") & 0xFFFFFFFFFFFFFFB3);
      brc_bread_crumbs();
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "itemID");
        v29 = (BRCItemToPathLookup *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v63 = v29;
        v64 = 2112;
        v65 = v18;
        _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_DEFAULT, "[WARNING] Clearing sharing options on missing share for %@%@", buf, 0x16u);
LABEL_16:

      }
    }
    else
    {
      if (v6)
        goto LABEL_18;
      objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("share"));
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("rootURL"));
      v19 = objc_claimAutoreleasedReturnValue();
      v61 = 0;
      if (objc_msgSend(v18, "deserializeSharingOptions:error:", &v61, 0))
      {
        v36 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "sharingOptions");
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "setSharingOptions:", v61 | (4 * (v19 == 0)) | v36 & 0xFFFFFFFFFFFFFF83);
        brc_bread_crumbs();
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v38 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "sharingOptions");
          BRCPrettyPrintBitmap();
          v39 = (BRCItemToPathLookup *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "itemID");
          v40 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v63 = v39;
          v64 = 2112;
          v65 = v40;
          v66 = 2112;
          v67 = v37;
          _os_log_impl(&dword_1CBD43000, v38, OS_LOG_TYPE_DEFAULT, "[WARNING] Learning new sharing options %@ from refresh state for %@%@", buf, 0x20u);

        }
        v41 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "sharingOptions");
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "orig");
        v29 = (BRCItemToPathLookup *)objc_claimAutoreleasedReturnValue();
        if (((-[BRCItemToPathLookup sharingOptions](v29, "sharingOptions") ^ v41) & 0x20) != 0)
        {
          v42 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "isSharedToMeTopLevelItem");

          if (!v42)
            goto LABEL_17;
          brc_bread_crumbs();
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v44 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
          {
            v60[0] = 114;
            objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "st");
            v45 = (void *)objc_claimAutoreleasedReturnValue();
            if ((objc_msgSend(v45, "mode") & 1) != 0)
              v46 = 119;
            else
              v46 = 45;
            v60[1] = v46;
            objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "st");
            v47 = (void *)objc_claimAutoreleasedReturnValue();
            if ((objc_msgSend(v47, "mode") & 2) != 0)
              v48 = 120;
            else
              v48 = 45;
            v60[2] = v48;
            objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "st");
            v49 = (void *)objc_claimAutoreleasedReturnValue();
            v60[3] = ((char)(32 * objc_msgSend(v49, "mode")) >> 7) & 0x4C;
            v60[4] = 0;
            objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "itemID");
            v50 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 136315650;
            v63 = (BRCItemToPathLookup *)v60;
            v64 = 2112;
            v65 = v50;
            v66 = 2112;
            v67 = v43;
            _os_log_impl(&dword_1CBD43000, v44, OS_LOG_TYPE_DEFAULT, "[WARNING] Learning updated item mode %s from refresh state for %@%@", buf, 0x20u);

          }
          v29 = -[BRCItemToPathLookup initWithItem:]([BRCItemToPathLookup alloc], "initWithItem:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
          -[BRCItemToPathLookup byFileSystemID](v29, "byFileSystemID");
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 0;
          v59[0] = MEMORY[0x1E0C809B0];
          v59[1] = 3221225472;
          v59[2] = __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_175;
          v59[3] = &unk_1E87656B8;
          v59[4] = *(_QWORD *)(a1 + 56);
          if ((objc_msgSend(v51, "performOnOpenFileDescriptor:error:", v59, buf) & 1) == 0)
          {
            brc_bread_crumbs();
            v52 = (void *)objc_claimAutoreleasedReturnValue();
            brc_default_log();
            v53 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v53, (os_log_type_t)0x90u))
              __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_169_cold_1((int *)buf, (uint64_t)v52, v53);

          }
          if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "isDocument"))
          {
            objc_msgSend(*(id *)(a1 + 40), "fsWriter");
            v54 = (void *)objc_claimAutoreleasedReturnValue();
            -[BRCItemToPathLookup coordinatedReadURL](v29, "coordinatedReadURL");
            v55 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "asDocument");
            v56 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v54, "applyLocalEditIfNecessaryToURL:forItem:serverItem:forDelete:error:", v55, v56, 0, 0, 0);

          }
          -[BRCItemToPathLookup closePaths](v29, "closePaths");

        }
        goto LABEL_16;
      }
    }
LABEL_17:

    v6 = 0;
LABEL_18:
    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "diffAgainstOriginalItem"))
    {
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "saveToDBForServerEdit:keepAliases:", 1, 0);
      objc_msgSend(*(id *)(a1 + 40), "clientDB");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "flushToMakeEditsVisibleToIPCReaders");

    }
    brc_bread_crumbs();
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v32 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
    {
      v33 = *(BRCItemToPathLookup **)(a1 + 32);
      objc_msgSend(v6, "brc_wrappedError");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v63 = v33;
      v64 = 2112;
      v65 = v34;
      v66 = 2112;
      v67 = v31;
      _os_log_impl(&dword_1CBD43000, v32, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    v27 = *(_QWORD *)(a1 + 48);
    objc_msgSend(v6, "brc_wrappedError");
    v28 = objc_claimAutoreleasedReturnValue();
    goto LABEL_23;
  }
  brc_bread_crumbs();
  v21 = (BRCItemToPathLookup *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v22 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v63 = v21;
    _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_DEFAULT, "[WARNING] Server zone was updated during refresh - avoiding races%@", buf, 0xCu);
  }

  brc_bread_crumbs();
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v24 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
  {
    v25 = *(BRCItemToPathLookup **)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemChanged");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    v63 = v25;
    v64 = 2112;
    v65 = v26;
    v66 = 2112;
    v67 = v23;
    _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

  }
  v27 = *(_QWORD *)(a1 + 48);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemChanged");
  v28 = objc_claimAutoreleasedReturnValue();
LABEL_23:
  v35 = (void *)v28;
  (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v27, v28);

}

uint64_t __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_175(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v5;
  void *v6;
  mode_t v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  BOOL v12;

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "st");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "isDocument") & 1) != 0)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "asDocument");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "currentVersion");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = +[BRCStageRegistry computeItemModeFromStatInfo:isPackage:](BRCStageRegistry, "computeItemModeFromStatInfo:isPackage:", v5, objc_msgSend(v2, "isPackage"));

  }
  else
  {
    v7 = +[BRCStageRegistry computeItemModeFromStatInfo:isPackage:](BRCStageRegistry, "computeItemModeFromStatInfo:isPackage:", v5, 0);
  }

  if (fchmod(a2, v7))
    return *__error();
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "st");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "isDocument");
  if (v9)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "asDocument");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "currentVersion");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "clientZone");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = +[BRCStageRegistry applySharingReadonlyACLsToFD:statInfo:version:clientZone:sharingOptions:](BRCStageRegistry, "applySharingReadonlyACLsToFD:statInfo:version:clientZone:sharingOptions:", a2, v8, v10, v11, objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "sharingOptions"));

  if (v9)
  {

  }
  if (!v12)
    return *__error();
  else
    return 0;
}

- (void)checkIfItemIsShareableWithInode:(unint64_t)a3 reply:(id)a4
{
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  qos_class_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  NSObject *v16;
  id v17;
  _QWORD block[4];
  id v19;
  BRCXPCRegularIPCsClient *v20;
  id v21;
  unint64_t v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  memset(v25, 0, sizeof(v25));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient(LegacyAdditions) checkIfItemIsShareableWithInode:reply:]", 2762, v25);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = v25[0];
    v10 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v10, (uint64_t)&brc_qos_entries, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v27 = v9;
    v28 = 2112;
    v29 = self;
    v30 = 2112;
    v31 = v11;
    v32 = 2080;
    v33 = "-[BRCXPCRegularIPCsClient(LegacyAdditions) checkIfItemIsShareableWithInode:reply:]";
    v34 = 2112;
    v35 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v12 = MEMORY[0x1E0C809B0];
  v13 = (void *)*MEMORY[0x1E0D10C38];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __82__BRCXPCRegularIPCsClient_LegacyAdditions__checkIfItemIsShareableWithInode_reply___block_invoke;
  v23[3] = &unk_1E875FCF8;
  v23[4] = self;
  v14 = v6;
  v24 = v14;
  LODWORD(v13) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v13, v23);

  if ((_DWORD)v13)
  {
    -[BRCXPCClient session](self, "session");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "readOnlyWorkloop");
    v16 = objc_claimAutoreleasedReturnValue();
    block[0] = v12;
    block[1] = 3221225472;
    block[2] = __82__BRCXPCRegularIPCsClient_LegacyAdditions__checkIfItemIsShareableWithInode_reply___block_invoke_178;
    block[3] = &unk_1E8760188;
    v22 = a3;
    v19 = v15;
    v20 = self;
    v21 = v14;
    v17 = v15;
    dispatch_async(v16, block);

  }
  __brc_leave_section(v25);

}

void __82__BRCXPCRegularIPCsClient_LegacyAdditions__checkIfItemIsShareableWithInode_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __82__BRCXPCRegularIPCsClient_LegacyAdditions__checkIfItemIsShareableWithInode_reply___block_invoke_178(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  int v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = (void *)a1[4];
  v3 = a1[7];
  objc_msgSend(v2, "readOnlyDB");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "globalItemByFileID:db:", v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = a1[5];
    v9 = 138413058;
    v10 = v8;
    v11 = 1024;
    v12 = objc_msgSend(v5, "isShareableItem");
    v13 = 2112;
    v14 = 0;
    v15 = 2112;
    v16 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v9, 0x26u);
  }

  (*(void (**)(_QWORD, uint64_t, _QWORD))(a1[6] + 16))(a1[6], objc_msgSend(v5, "isShareableItem"), 0);
}

void __59__BRCXPCRegularIPCsClient_checkinAskClientIfUsingUbiquity___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  NSObject *v4;

  v2 = a2;
  brc_bread_crumbs();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    __59__BRCXPCRegularIPCsClient_checkinAskClientIfUsingUbiquity___block_invoke_cold_1();

}

- (void)getContainerURLForID:(id)a3 reply:(id)a4
{
  -[BRCXPCRegularIPCsClient getContainerURLForID:recreateDocumentsIfNeeded:reply:](self, "getContainerURLForID:recreateDocumentsIfNeeded:reply:", a3, 0, a4);
}

- (void)presyncContainerWithID:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  void *v16;
  _QWORD v17[5];
  id v18;
  _QWORD v19[5];
  id v20;
  uint64_t v21[3];
  uint8_t buf[4];
  uint64_t v23;
  __int16 v24;
  BRCXPCRegularIPCsClient *v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  const char *v29;
  __int16 v30;
  void *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v21, 0, sizeof(v21));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient presyncContainerWithID:reply:]", 1668, v21);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v21[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v23 = v10;
    v24 = 2112;
    v25 = self;
    v26 = 2112;
    v27 = v12;
    v28 = 2080;
    v29 = "-[BRCXPCRegularIPCsClient presyncContainerWithID:reply:]";
    v30 = 2112;
    v31 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __56__BRCXPCRegularIPCsClient_presyncContainerWithID_reply___block_invoke;
  v19[3] = &unk_1E875FCF8;
  v19[4] = self;
  v14 = v7;
  v20 = v14;
  v15 = _brc_ipc_check_applibrary_proxy(self, 1, v19);

  if (v15)
  {
    v16 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v6);
    v17[0] = v13;
    v17[1] = 3221225472;
    v17[2] = __56__BRCXPCRegularIPCsClient_presyncContainerWithID_reply___block_invoke_273;
    v17[3] = &unk_1E87663E0;
    v17[4] = self;
    v18 = v14;
    -[BRCXPCClient _setupAppLibraryAndZoneWithID:recreateDocumentsIfNeeded:reply:](self, "_setupAppLibraryAndZoneWithID:recreateDocumentsIfNeeded:reply:", v16, 0, v17);

  }
  __brc_leave_section(v21);

}

void __56__BRCXPCRegularIPCsClient_presyncContainerWithID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v3, "brc_wrappedError");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = 138412802;
    v11 = v6;
    v12 = 2112;
    v13 = v7;
    v14 = 2112;
    v15 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v10, 0x20u);

  }
  v8 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v3, "brc_wrappedError");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v9);

}

void __56__BRCXPCRegularIPCsClient_presyncContainerWithID_reply___block_invoke_273(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v6 = a5;
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v6, "brc_wrappedError");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138412802;
    v14 = v9;
    v15 = 2112;
    v16 = v10;
    v17 = 2112;
    v18 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v13, 0x20u);

  }
  v11 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v6, "brc_wrappedError");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v11 + 16))(v11, v12);

}

- (void)getContainerURLForID:(id)a3 forProcess:(id *)a4 reply:(id)a5
{
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  qos_class_t v13;
  void *v14;
  id v15;
  int v16;
  BRCClientPrivilegesDescriptor *v17;
  __int128 v18;
  BRCClientPrivilegesDescriptor *v19;
  void *v20;
  _BOOL4 v21;
  void *v22;
  char v23;
  void *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  NSObject *v33;
  void *v34;
  _QWORD v35[5];
  id v36;
  uint64_t v37[3];
  _BYTE buf[32];
  __int16 v39;
  const char *v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  memset(v37, 0, sizeof(v37));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getContainerURLForID:forProcess:reply:]", 1683, v37);
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = v37[0];
    v13 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v13, (uint64_t)&brc_qos_entries, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    *(_QWORD *)&buf[4] = v12;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    *(_WORD *)&buf[22] = 2112;
    *(_QWORD *)&buf[24] = v14;
    v39 = 2080;
    v40 = "-[BRCXPCRegularIPCsClient getContainerURLForID:forProcess:reply:]";
    v41 = 2112;
    v42 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v35[0] = MEMORY[0x1E0C809B0];
  v35[1] = 3221225472;
  v35[2] = __65__BRCXPCRegularIPCsClient_getContainerURLForID_forProcess_reply___block_invoke;
  v35[3] = &unk_1E875FCF8;
  v35[4] = self;
  v15 = v9;
  v36 = v15;
  v16 = _brc_ipc_check_applibrary_proxy(self, 1, v35);

  if (v16)
  {
    v17 = [BRCClientPrivilegesDescriptor alloc];
    v18 = *(_OWORD *)&a4->var0[4];
    *(_OWORD *)buf = *(_OWORD *)a4->var0;
    *(_OWORD *)&buf[16] = v18;
    v19 = -[BRCClientPrivilegesDescriptor initWithAuditToken:](v17, "initWithAuditToken:", buf);
    -[BRCClientPrivilegesDescriptor appLibraryIDs](v19, "appLibraryIDs");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = v20 == 0;

    if (v21)
    {
      brc_bread_crumbs();
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        v27 = (void *)MEMORY[0x1E0CB35C8];
        -[BRCClientPrivilegesDescriptor applicationIdentifier](v19, "applicationIdentifier");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "brc_errorNoAppLibraryForBundle:", v28);
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413570;
        *(_QWORD *)&buf[4] = self;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = 0;
        *(_WORD *)&buf[22] = 2112;
        *(_QWORD *)&buf[24] = 0;
        v39 = 2112;
        v40 = 0;
        v41 = 2112;
        v42 = v29;
        v43 = 2112;
        v44 = v25;
        _os_log_impl(&dword_1CBD43000, v26, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@)%@", buf, 0x3Eu);

      }
      v30 = (void *)MEMORY[0x1E0CB35C8];
      -[BRCClientPrivilegesDescriptor applicationIdentifier](v19, "applicationIdentifier");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "brc_errorNoAppLibraryForBundle:", v24);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, _QWORD, _QWORD, void *))v15 + 2))(v15, 0, 0, 0, v31);

    }
    else
    {
      if (!v8)
      {
        -[BRCClientPrivilegesDescriptor defaultAppLibraryID](v19, "defaultAppLibraryID");
        v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      -[BRCClientPrivilegesDescriptor appLibraryIDs](v19, "appLibraryIDs");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = objc_msgSend(v22, "containsObject:", v8);

      if ((v23 & 1) != 0)
      {
        v24 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v8);
        -[BRCXPCClient _setupAppLibraryAndZoneWithID:recreateDocumentsIfNeeded:reply:](self, "_setupAppLibraryAndZoneWithID:recreateDocumentsIfNeeded:reply:", v24, 0, v15);
      }
      else
      {
        brc_bread_crumbs();
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v33 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("containerID"), v8);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138413570;
          *(_QWORD *)&buf[4] = self;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = 0;
          *(_WORD *)&buf[22] = 2112;
          *(_QWORD *)&buf[24] = 0;
          v39 = 2112;
          v40 = 0;
          v41 = 2112;
          v42 = v34;
          v43 = 2112;
          v44 = v32;
          _os_log_impl(&dword_1CBD43000, v33, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@)%@", buf, 0x3Eu);

        }
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("containerID"), v8);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, _QWORD, _QWORD, _QWORD, void *))v15 + 2))(v15, 0, 0, 0, v24);
      }
    }

  }
  __brc_leave_section(v37);

}

void __65__BRCXPCRegularIPCsClient_getContainerURLForID_forProcess_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v3, "brc_wrappedError");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = 138413570;
    v11 = v6;
    v12 = 2112;
    v13 = 0;
    v14 = 2112;
    v15 = 0;
    v16 = 2112;
    v17 = 0;
    v18 = 2112;
    v19 = v7;
    v20 = 2112;
    v21 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@)%@", (uint8_t *)&v10, 0x3Eu);

  }
  v8 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v3, "brc_wrappedError");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, void *))(v8 + 16))(v8, 0, 0, 0, v9);

}

void __56__BRCXPCRegularIPCsClient_updateContainerMetadataForID___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  id v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = *(_QWORD *)(a1 + 40);
    v8 = 138413058;
    v9 = v6;
    v10 = 2112;
    v11 = v7;
    v12 = 2112;
    v13 = v3;
    v14 = 2112;
    v15 = v4;
    _os_log_debug_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_DEBUG, "[DEBUG] %@ can't access %@: %@%@", (uint8_t *)&v8, 0x2Au);
  }

}

uint64_t __56__BRCXPCRegularIPCsClient_updateContainerMetadataForID___block_invoke_275(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void __56__BRCXPCRegularIPCsClient_updateContainerMetadataForID___block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v5 = a2;
  v6 = a3;
  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  objc_msgSend(*(id *)(a1 + 40), "defaultClientZone");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "activated");
  if (v5 && v8)
  {
    v9 = *(void **)(*(_QWORD *)(a1 + 48) + 8);
    objc_msgSend(*(id *)(a1 + 40), "db");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "serialQueue");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __56__BRCXPCRegularIPCsClient_updateContainerMetadataForID___block_invoke_3;
    v12[3] = &unk_1E8766408;
    v13 = v7;
    v14 = *(id *)(a1 + 40);
    v15 = v5;
    v16 = v6;
    v17 = *(id *)(a1 + 56);
    brc_task_tracker_async_with_logs(v9, v11, v12, 0);

  }
}

void __56__BRCXPCRegularIPCsClient_updateContainerMetadataForID___block_invoke_3(uint64_t a1)
{
  void *v2;
  int v3;
  void *v4;
  int v5;
  void *v6;
  int v7;

  if (objc_msgSend(*(id *)(a1 + 32), "activated"))
  {
    objc_msgSend(*(id *)(a1 + 40), "containerMetadata");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v2, "isDocumentScopePublic");

    objc_msgSend(*(id *)(a1 + 40), "containerMetadata");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "updateMetadataWithExtractorProperties:iconPaths:bundleID:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));

    if (v5)
      objc_msgSend(*(id *)(a1 + 40), "scheduleContainerMetadataSyncUp");
    objc_msgSend(*(id *)(a1 + 40), "containerMetadata");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "isDocumentScopePublic");

    if (v3 != v7)
      objc_msgSend(*(id *)(a1 + 40), "didUpdateDocumentScopePublic");
  }
}

- (void)deleteAllContentsOfContainerID:(id)a3 onClient:(BOOL)a4 onServer:(BOOL)a5 wait:(BOOL)a6 reply:(id)a7
{
  _BOOL4 v8;
  _BOOL4 v9;
  id v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  qos_class_t v17;
  void *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  void *v27;
  BRCXPCRegularIPCsClient *v28;
  NSObject *v29;
  NSObject *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t j;
  BRCXPCRegularIPCsClient *v35;
  BRCXPCRegularIPCsClient *v36;
  NSObject *v37;
  void *v38;
  NSObject *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  NSObject *queue;
  void *v46;
  NSObject *v47;
  BRCXPCRegularIPCsClient *v48;
  id v49;
  uint64_t v52;
  BRCXPCRegularIPCsClient *v53;
  id obj;
  _BOOL4 v55;
  _QWORD block[5];
  id v57;
  _QWORD v58[4];
  NSObject *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  id v68;
  _QWORD v69[5];
  id v70;
  uint64_t v71[3];
  uint64_t v72[3];
  _BYTE v73[128];
  uint8_t v74[128];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v76;
  __int16 v77;
  BRCXPCRegularIPCsClient *v78;
  __int16 v79;
  void *v80;
  __int16 v81;
  const char *v82;
  __int16 v83;
  void *v84;
  uint64_t v85;

  v8 = a5;
  v9 = a4;
  v85 = *MEMORY[0x1E0C80C00];
  v53 = (BRCXPCRegularIPCsClient *)a3;
  v10 = a7;
  v11 = 2;
  if (v9)
    v11 = 3;
  v55 = v8;
  if (v8)
    v11 = 4;
  v52 = v11;
  memset(v72, 0, sizeof(v72));
  __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient deleteAllContentsOfContainerID:onClient:onServer:wait:reply:]", 1789, v72);
  brc_bread_crumbs();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134218498;
    v76 = (BRCXPCRegularIPCsClient *)v72[0];
    v77 = 2112;
    v78 = v53;
    v79 = 2112;
    v80 = v12;
    _os_log_debug_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx IPC-initiated reset for %@%@", buf, 0x20u);
  }

  memset(v71, 0, sizeof(v71));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient deleteAllContentsOfContainerID:onClient:onServer:wait:reply:]", 1793, v71);
  brc_bread_crumbs();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v15 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
  {
    v16 = v71[0];
    v17 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v17, (uint64_t)&brc_qos_entries, 0);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v76 = (BRCXPCRegularIPCsClient *)v16;
    v77 = 2112;
    v78 = self;
    v79 = 2112;
    v80 = v18;
    v81 = 2080;
    v82 = "-[BRCXPCRegularIPCsClient deleteAllContentsOfContainerID:onClient:onServer:wait:reply:]";
    v83 = 2112;
    v84 = v14;
    _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v69[0] = MEMORY[0x1E0C809B0];
  v69[1] = 3221225472;
  v69[2] = __87__BRCXPCRegularIPCsClient_deleteAllContentsOfContainerID_onClient_onServer_wait_reply___block_invoke;
  v69[3] = &unk_1E875FCF8;
  v69[4] = self;
  v49 = v10;
  v70 = v49;
  v19 = _brc_ipc_check_applibrary_proxy(self, 1, v69);

  if (v19)
  {
    -[BRCXPCClient session](self, "session");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v68 = 0;
    objc_msgSend(v20, "clientZonesMatchingSearchString:error:", v53, &v68);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v48 = (BRCXPCRegularIPCsClient *)v68;

    v22 = (void *)objc_opt_new();
    v66 = 0u;
    v67 = 0u;
    v64 = 0u;
    v65 = 0u;
    obj = v21;
    v23 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v64, v74, 16);
    if (v23)
    {
      v24 = *(_QWORD *)v65;
      v25 = *MEMORY[0x1E0D10DB0];
      do
      {
        for (i = 0; i != v23; ++i)
        {
          if (*(_QWORD *)v65 != v24)
            objc_enumerationMutation(obj);
          v27 = *(void **)(*((_QWORD *)&v64 + 1) + 8 * i);
          if (objc_msgSend(v27, "isCloudDocsZone")
            && (-[BRCXPCRegularIPCsClient isEqualToString:](v53, "isEqualToString:", v25) & 1) == 0)
          {
            brc_bread_crumbs();
            v28 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
            brc_default_log();
            v29 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412546;
              v76 = v53;
              v77 = 2112;
              v78 = v28;
              _os_log_debug_impl(&dword_1CBD43000, v29, OS_LOG_TYPE_DEBUG, "[DEBUG] Not deleting container %@ which is moved to clouddocs%@", buf, 0x16u);
            }

          }
          else
          {
            objc_msgSend(v22, "addObject:", v27);
          }
        }
        v23 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v64, v74, 16);
      }
      while (v23);
    }

    if (objc_msgSend(v22, "count"))
    {
      v30 = dispatch_group_create();
      v60 = 0u;
      v61 = 0u;
      v62 = 0u;
      v63 = 0u;
      v31 = v22;
      v32 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v60, v73, 16);
      if (!v32)
        goto LABEL_42;
      v33 = *(_QWORD *)v61;
      while (1)
      {
        for (j = 0; j != v32; ++j)
        {
          if (*(_QWORD *)v61 != v33)
            objc_enumerationMutation(v31);
          v35 = *(BRCXPCRegularIPCsClient **)(*((_QWORD *)&v60 + 1) + 8 * j);
          if (v55 && objc_msgSend(*(id *)(*((_QWORD *)&v60 + 1) + 8 * j), "isSharedZone"))
          {
            brc_bread_crumbs();
            v36 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
            brc_default_log();
            v37 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v37, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412546;
              v76 = v35;
              v77 = 2112;
              v78 = v36;
              _os_log_debug_impl(&dword_1CBD43000, v37, OS_LOG_TYPE_DEBUG, "[DEBUG] We can't delete server zone for shared zone, skipping %@%@", buf, 0x16u);
            }

            goto LABEL_38;
          }
          brc_bread_crumbs();
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v39 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v39, OS_LOG_TYPE_FAULT))
          {
            v44 = BRCPrettyPrintEnum();
            *(_DWORD *)buf = 136315650;
            v76 = (BRCXPCRegularIPCsClient *)v44;
            v77 = 2112;
            v78 = v35;
            v79 = 2112;
            v80 = v38;
            _os_log_fault_impl(&dword_1CBD43000, v39, OS_LOG_TYPE_FAULT, "[CRIT] %s reset for %@%@", buf, 0x20u);
          }

          +[BRCEventsAnalytics sharedAnalytics](BRCEventsAnalytics, "sharedAnalytics");
          v40 = (void *)objc_claimAutoreleasedReturnValue();
          v41 = (void *)MEMORY[0x1E0CB3940];
          -[BRCXPCClient bundleID](self, "bundleID");
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v41, "stringWithFormat:", CFSTR("ipc-%@"), v42);
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v40, "registerAndSendNewContainerResetWithOutcome:", v43);

          if (a6)
          {
            dispatch_group_enter(v30);
            v58[0] = MEMORY[0x1E0C809B0];
            v58[1] = 3221225472;
            v58[2] = __87__BRCXPCRegularIPCsClient_deleteAllContentsOfContainerID_onClient_onServer_wait_reply___block_invoke_281;
            v58[3] = &unk_1E875D500;
            v59 = v30;
            -[BRCXPCRegularIPCsClient scheduleReset:completionHandler:](v35, "scheduleReset:completionHandler:", v52, v58);
            v36 = (BRCXPCRegularIPCsClient *)v59;
LABEL_38:

            continue;
          }
          -[BRCXPCRegularIPCsClient scheduleReset:](v35, "scheduleReset:", v52);
        }
        v32 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v60, v73, 16);
        if (!v32)
        {
LABEL_42:

          queue = self->super._queue;
          block[0] = MEMORY[0x1E0C809B0];
          block[1] = 3221225472;
          block[2] = __87__BRCXPCRegularIPCsClient_deleteAllContentsOfContainerID_onClient_onServer_wait_reply___block_invoke_2;
          block[3] = &unk_1E875EAA8;
          block[4] = self;
          v57 = v49;
          dispatch_group_notify(v30, queue, block);

          goto LABEL_46;
        }
      }
    }
    brc_bread_crumbs();
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v47 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v76 = self;
      v77 = 2112;
      v78 = v48;
      v79 = 2112;
      v80 = v46;
      _os_log_impl(&dword_1CBD43000, v47, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, BRCXPCRegularIPCsClient *))v49 + 2))(v49, v48);
LABEL_46:

  }
  __brc_leave_section(v71);
  __brc_leave_section(v72);

}

void __87__BRCXPCRegularIPCsClient_deleteAllContentsOfContainerID_onClient_onServer_wait_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __87__BRCXPCRegularIPCsClient_deleteAllContentsOfContainerID_onClient_onServer_wait_reply___block_invoke_281(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t __87__BRCXPCRegularIPCsClient_deleteAllContentsOfContainerID_onClient_onServer_wait_reply___block_invoke_2(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412802;
    v7 = v4;
    v8 = 2112;
    v9 = 0;
    v10 = 2112;
    v11 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v6, 0x20u);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)registerInitialSyncBarrierForID:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  id v13;
  int v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  BRCXPCRegularIPCsClient *v21;
  id v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v25, 0, sizeof(v25));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient registerInitialSyncBarrierForID:reply:]", 1842, v25);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v25[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v27 = (BRCXPCRegularIPCsClient *)v10;
    v28 = 2112;
    v29 = self;
    v30 = 2112;
    v31 = v12;
    v32 = 2080;
    v33 = "-[BRCXPCRegularIPCsClient registerInitialSyncBarrierForID:reply:]";
    v34 = 2112;
    v35 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __65__BRCXPCRegularIPCsClient_registerInitialSyncBarrierForID_reply___block_invoke;
  v23[3] = &unk_1E875FCF8;
  v23[4] = self;
  v13 = v7;
  v24 = v13;
  v14 = _brc_ipc_check_applibraries_access(self, 1, v23);

  if (v14)
  {
    v22 = 0;
    if (v6)
    {
      v15 = objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v6);
    }
    else
    {
      -[BRCXPCClient defaultMangledID](self, "defaultMangledID");
      v15 = objc_claimAutoreleasedReturnValue();
    }
    v16 = (void *)v15;
    -[BRCXPCClient _setupAppLibrary:error:](self, "_setupAppLibrary:error:", v15, &v22);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (v17)
    {
      -[BRCXPCClient addAppLibrary:](self, "addAppLibrary:", v17);
      -[BRCXPCClient description](self, "description");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "notifyClient:whenFaultingIsDone:", v18, v13);
    }
    else
    {
      brc_bread_crumbs();
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v22, "brc_wrappedError");
        v21 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v27 = self;
        v28 = 2112;
        v29 = v21;
        v30 = 2112;
        v31 = v19;
        _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

      }
      objc_msgSend(v22, "brc_wrappedError");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *))v13 + 2))(v13, v18);
    }

  }
  __brc_leave_section(v25);

}

void __65__BRCXPCRegularIPCsClient_registerInitialSyncBarrierForID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (id)_removeSandboxedAttributes:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  uint8_t buf[4];
  id v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = v4;
  if (!-[BRCXPCClient isSandboxed](self, "isSandboxed"))
  {
    v5 = v4;
    if (!-[BRCXPCClient hasPrivateSharingInterfaceEntitlement](self, "hasPrivateSharingInterfaceEntitlement"))
    {
      objc_msgSend(MEMORY[0x1E0C99E20], "setWithArray:", v4);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", *MEMORY[0x1E0C99B70], *MEMORY[0x1E0C99B68], *MEMORY[0x1E0C99B60], 0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = v4;
      if (objc_msgSend(v6, "intersectsSet:", v7))
      {
        objc_msgSend(v6, "minusSet:", v7);
        brc_bread_crumbs();
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v9 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412802;
          v12 = v4;
          v13 = 2112;
          v14 = v6;
          v15 = 2112;
          v16 = v8;
          _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_DEFAULT, "[WARNING] Stripping attributes request from %@ to %@%@", buf, 0x20u);
        }

        objc_msgSend(v6, "allObjects");
        v5 = (void *)objc_claimAutoreleasedReturnValue();

      }
    }
  }

  return v5;
}

- (void)getItemUpdateSenderWithReceiver:(id)a3 reply:(id)a4
{
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  qos_class_t v10;
  void *v11;
  int v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id obj;
  id v38;
  uint64_t v39;
  _QWORD v40[5];
  id v41;
  id v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  BRCXPCRegularIPCsClient *v47;
  _QWORD v48[5];
  id v49;
  uint64_t v50[3];
  uint8_t v51[128];
  uint8_t buf[4];
  uint64_t v53;
  __int16 v54;
  BRCXPCRegularIPCsClient *v55;
  __int16 v56;
  uint64_t v57;
  __int16 v58;
  const char *v59;
  __int16 v60;
  void *v61;
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  v34 = a3;
  v6 = a4;
  memset(v50, 0, sizeof(v50));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getItemUpdateSenderWithReceiver:reply:]", 1893, v50);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = v50[0];
    v10 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v10, (uint64_t)&brc_qos_entries, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v53 = v9;
    v54 = 2112;
    v55 = self;
    v56 = 2112;
    v57 = (uint64_t)v11;
    v58 = 2080;
    v59 = "-[BRCXPCRegularIPCsClient getItemUpdateSenderWithReceiver:reply:]";
    v60 = 2112;
    v61 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v48[0] = MEMORY[0x1E0C809B0];
  v48[1] = 3221225472;
  v48[2] = __65__BRCXPCRegularIPCsClient_getItemUpdateSenderWithReceiver_reply___block_invoke;
  v48[3] = &unk_1E875FCF8;
  v48[4] = self;
  v33 = v6;
  v49 = v33;
  v12 = _brc_ipc_check_applibraries_access(self, 1, v48);

  if (v12)
  {
    brc_bread_crumbs();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient getItemUpdateSenderWithReceiver:reply:].cold.1();

    -[BRCXPCClient session](self, "session");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "notificationManager");
    v32 = (void *)objc_claimAutoreleasedReturnValue();

    v47 = 0;
    v43 = 0u;
    v44 = 0u;
    v45 = 0u;
    v46 = 0u;
    -[BRCXPCClient entitledAppLibraryIDs](self, "entitledAppLibraryIDs");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 0;
    v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
    if (v18)
    {
      v38 = 0;
      v39 = *(_QWORD *)v44;
      v36 = *MEMORY[0x1E0D110F0];
      v35 = *MEMORY[0x1E0D110E8];
      obj = v16;
      do
      {
        for (i = 0; i != v18; ++i)
        {
          if (*(_QWORD *)v44 != v39)
            objc_enumerationMutation(obj);
          v20 = *(_QWORD *)(*((_QWORD *)&v43 + 1) + 8 * i);
          v21 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v20);
          -[BRCXPCClient _setupAppLibrary:error:](self, "_setupAppLibrary:error:", v21, &v47);
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          if (v22)
          {
            -[BRCXPCClient addAppLibrary:](self, "addAppLibrary:", v22);
            objc_msgSend(v22, "url");
            v23 = objc_claimAutoreleasedReturnValue();

            if (-[BRCXPCClient canAccessPhysicalURL:](self, "canAccessPhysicalURL:", v23))
            {
              v24 = 0;
            }
            else
            {
              -[BRCXPCClient issueContainerExtensionForURL:error:](self, "issueContainerExtensionForURL:error:", v23, 0);
              v24 = objc_claimAutoreleasedReturnValue();
            }
            objc_msgSend(v22, "containerMetadata");
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            -[BRCXPCClient bundleID](self, "bundleID");
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v26, "versionNumberForBundleIdentifier:", v27);
            v25 = objc_claimAutoreleasedReturnValue();

            if (v24 | v25)
            {
              objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              v29 = v28;
              if (v24)
                objc_msgSend(v28, "setObject:forKeyedSubscript:", v24, v36);
              if (v25)
                objc_msgSend(v29, "setObject:forKeyedSubscript:", v25, v35);
              if (!v38)
                v38 = objc_alloc_init(MEMORY[0x1E0C99E08]);
              objc_msgSend(v22, "appLibraryID");
              v30 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v38, "setObject:forKeyedSubscript:", v29, v30);

            }
            v17 = (void *)v23;
          }
          else
          {
            brc_bread_crumbs();
            v24 = objc_claimAutoreleasedReturnValue();
            brc_default_log();
            v25 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled((os_log_t)v25, (os_log_type_t)0x90u))
            {
              *(_DWORD *)buf = 138412802;
              v53 = v20;
              v54 = 2112;
              v55 = v47;
              v56 = 2112;
              v57 = v24;
              _os_log_error_impl(&dword_1CBD43000, (os_log_t)v25, (os_log_type_t)0x90u, "[ERROR] can't setup container %@: %@%@", buf, 0x20u);
            }
          }

        }
        v16 = obj;
        v18 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
      }
      while (v18);
    }
    else
    {
      v38 = 0;
    }

    v40[0] = MEMORY[0x1E0C809B0];
    v40[1] = 3221225472;
    v40[2] = __65__BRCXPCRegularIPCsClient_getItemUpdateSenderWithReceiver_reply___block_invoke_284;
    v40[3] = &unk_1E8766458;
    v40[4] = self;
    v31 = v38;
    v41 = v31;
    v42 = v33;
    objc_msgSend(v32, "getPipeWithXPCReceiver:client:reply:", v34, self, v40);

  }
  __brc_leave_section(v50);

}

void __65__BRCXPCRegularIPCsClient_getItemUpdateSenderWithReceiver_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __65__BRCXPCRegularIPCsClient_getItemUpdateSenderWithReceiver_reply___block_invoke_284(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  id v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = a1[4];
    v7 = a1[5];
    v8 = 138413314;
    v9 = v6;
    v10 = 2112;
    v11 = v3;
    v12 = 2112;
    v13 = v7;
    v14 = 2112;
    v15 = 0;
    v16 = 2112;
    v17 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v8, 0x34u);
  }

  (*(void (**)(void))(a1[6] + 16))();
}

- (void)queryPathsForPersona:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  id v13;
  int v14;
  void *v15;
  BRCXPCRegularIPCsClient *v16;
  id v17;
  char *v18;
  NSObject *v19;
  id v20;
  _QWORD v21[5];
  id v22;
  uint64_t v23[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v25;
  __int16 v26;
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  id v29;
  __int16 v30;
  const char *v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v23, 0, sizeof(v23));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient queryPathsForPersona:reply:]", 1949, v23);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v23[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v25 = (BRCXPCRegularIPCsClient *)v10;
    v26 = 2112;
    v27 = self;
    v28 = 2112;
    v29 = v12;
    v30 = 2080;
    v31 = "-[BRCXPCRegularIPCsClient queryPathsForPersona:reply:]";
    v32 = 2112;
    v33 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __54__BRCXPCRegularIPCsClient_queryPathsForPersona_reply___block_invoke;
  v21[3] = &unk_1E875FCF8;
  v21[4] = self;
  v13 = v7;
  v22 = v13;
  v14 = _brc_ipc_check_logged_status(self, 0, v21);

  if (v14)
  {
    objc_msgSend(MEMORY[0x1E0D10E40], "cloudDocsHelper");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = 0;
    objc_msgSend(v15, "queryPathsForPersona:withError:", v6, &v20);
    v16 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    v17 = v20;
    brc_bread_crumbs();
    v18 = (char *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138413058;
      v25 = self;
      v26 = 2112;
      v27 = v16;
      v28 = 2112;
      v29 = v17;
      v30 = 2112;
      v31 = v18;
      _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*((void (**)(id, BRCXPCRegularIPCsClient *, id))v13 + 2))(v13, v16, v17);
  }
  __brc_leave_section(v23);

}

void __54__BRCXPCRegularIPCsClient_queryPathsForPersona_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)queryEligibleAccountDescriptorsWithReply:(id)a3
{
  void (**v4)(id, void *, _QWORD);
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  int v9;
  BRCXPCRegularIPCsClient *v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = (void (**)(id, void *, _QWORD))a3;
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    objc_msgSend(MEMORY[0x1E0D10E30], "allEligibleAccountDescriptors");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138413058;
    v10 = self;
    v11 = 2112;
    v12 = v7;
    v13 = 2112;
    v14 = 0;
    v15 = 2112;
    v16 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v9, 0x2Au);

  }
  objc_msgSend(MEMORY[0x1E0D10E30], "allEligibleAccountDescriptors");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v4[2](v4, v8, 0);

}

- (void)getTotalApplicationDocumentUsageWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  NSObject *v15;
  id v16;
  BRCXPCRegularIPCsClient *v17;
  char *v18;
  NSObject *v19;
  _QWORD block[4];
  id v21;
  BRCXPCRegularIPCsClient *v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v25, 0, sizeof(v25));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getTotalApplicationDocumentUsageWithReply:]", 1968, v25);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v25[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v27 = (BRCXPCRegularIPCsClient *)v7;
    v28 = 2112;
    v29 = self;
    v30 = 2112;
    v31 = v9;
    v32 = 2080;
    v33 = "-[BRCXPCRegularIPCsClient getTotalApplicationDocumentUsageWithReply:]";
    v34 = 2112;
    v35 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = MEMORY[0x1E0C809B0];
  v11 = (void *)*MEMORY[0x1E0D10B60];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __69__BRCXPCRegularIPCsClient_getTotalApplicationDocumentUsageWithReply___block_invoke;
  v23[3] = &unk_1E875FCF8;
  v23[4] = self;
  v12 = v4;
  v24 = v12;
  LODWORD(v11) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v11, v23);

  if ((_DWORD)v11)
  {
    v13 = (void *)objc_opt_new();
    -[BRCXPCClient session](self, "session");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "readOnlyWorkloop");
    v15 = objc_claimAutoreleasedReturnValue();
    block[0] = v10;
    block[1] = 3221225472;
    block[2] = __69__BRCXPCRegularIPCsClient_getTotalApplicationDocumentUsageWithReply___block_invoke_288;
    block[3] = &unk_1E875D470;
    v16 = v14;
    v21 = v16;
    v17 = v13;
    v22 = v17;
    dispatch_async_and_wait(v15, block);

    brc_bread_crumbs();
    v18 = (char *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138413058;
      v27 = self;
      v28 = 2112;
      v29 = v17;
      v30 = 2112;
      v31 = 0;
      v32 = 2112;
      v33 = v18;
      _os_log_debug_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_DEBUG, "[DEBUG] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*((void (**)(id, BRCXPCRegularIPCsClient *, _QWORD))v12 + 2))(v12, v17, 0);
  }
  __brc_leave_section(v25);

}

void __69__BRCXPCRegularIPCsClient_getTotalApplicationDocumentUsageWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __69__BRCXPCRegularIPCsClient_getTotalApplicationDocumentUsageWithReply___block_invoke_288(uint64_t a1)
{
  uint64_t v1;
  uint64_t i;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id obj;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _QWORD v40[6];
  _QWORD v41[6];
  _BYTE v42[128];
  uint64_t v43;

  v1 = a1;
  v43 = *MEMORY[0x1E0C80C00];
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  objc_msgSend(*(id *)(a1 + 32), "appLibraries");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v26 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v42, 16);
  if (v26)
  {
    v25 = *(_QWORD *)v37;
    do
    {
      for (i = 0; i != v26; ++i)
      {
        if (*(_QWORD *)v37 != v25)
          objc_enumerationMutation(obj);
        v3 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * i);
        objc_msgSend(v3, "containerMetadata");
        v4 = (void *)objc_claimAutoreleasedReturnValue();
        v40[0] = CFSTR("Total Size");
        v5 = (void *)MEMORY[0x1E0CB37E8];
        objc_msgSend(*(id *)(v1 + 32), "expensiveReadOnlyDB");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "numberWithUnsignedLongLong:", objc_msgSend(v3, "documentSizeUsageWithDB:"));
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        v41[0] = v33;
        v40[1] = CFSTR("Document Count");
        v6 = (void *)MEMORY[0x1E0CB37E8];
        objc_msgSend(*(id *)(v1 + 32), "expensiveReadOnlyDB");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "numberWithUnsignedLongLong:", objc_msgSend(v3, "documentCountWithDB:"));
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        v41[1] = v31;
        v40[2] = CFSTR("Applications");
        objc_msgSend(v4, "bundleIdentifiers");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "allObjects");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v29, "componentsJoinedByString:", CFSTR(", "));
        v7 = objc_claimAutoreleasedReturnValue();
        v28 = (void *)v7;
        if (!v7)
        {
          objc_msgSend(MEMORY[0x1E0C99E38], "null");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v7 = (uint64_t)v24;
        }
        v41[2] = v7;
        v40[3] = CFSTR("Localized Name");
        objc_msgSend(v4, "localizedName");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = v8;
        if (!v8)
        {
          objc_msgSend(MEMORY[0x1E0C99E38], "null");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          v9 = v23;
        }
        v41[3] = v9;
        v40[4] = CFSTR("Documents URL");
        objc_msgSend(v4, "documentsURL");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "path");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = v10;
        if (!v10)
        {
          objc_msgSend(MEMORY[0x1E0C99E38], "null");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = v22;
        }
        v41[4] = v11;
        v40[5] = CFSTR("Icons");
        v35 = v4;
        objc_msgSend(v4, "iconURLs");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "allKeys");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "componentsJoinedByString:", CFSTR(", "));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = v14;
        if (!v14)
        {
          objc_msgSend(MEMORY[0x1E0C99E38], "null");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = v21;
        }
        v41[5] = v15;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v41, v40, 6);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = v1;
        v18 = *(void **)(v1 + 40);
        objc_msgSend(v3, "appLibraryID");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "setObject:forKeyedSubscript:", v16, v19);

        if (!v14)
        if (!v10)

        v1 = v17;
        if (!v8)

        if (!v28)
      }
      v26 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v42, 16);
    }
    while (v26);
  }

}

- (void)getApplicationDocumentUsageInfoForBundleID:(id)a3 withReply:(id)a4
{
  BRCXPCRegularIPCsClient *v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  BRCXPCRegularIPCsClient *v20;
  NSObject *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  BRCXPCRegularIPCsClient *v26;
  char *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  void *v32;
  id v33;
  id v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char v44;
  uint64_t v45[3];
  _QWORD v46[5];
  id v47;
  uint64_t v48[3];
  _QWORD v49[2];
  _QWORD v50[2];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v52;
  __int16 v53;
  BRCXPCRegularIPCsClient *v54;
  __int16 v55;
  void *v56;
  __int16 v57;
  const char *v58;
  __int16 v59;
  void *v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v6 = (BRCXPCRegularIPCsClient *)a3;
  v7 = a4;
  memset(v48, 0, sizeof(v48));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getApplicationDocumentUsageInfoForBundleID:withReply:]", 2019, v48);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v48[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v52 = (BRCXPCRegularIPCsClient *)v10;
    v53 = 2112;
    v54 = self;
    v55 = 2112;
    v56 = v12;
    v57 = 2080;
    v58 = "-[BRCXPCRegularIPCsClient getApplicationDocumentUsageInfoForBundleID:withReply:]";
    v59 = 2112;
    v60 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v14 = (void *)*MEMORY[0x1E0D10B60];
  v46[0] = MEMORY[0x1E0C809B0];
  v46[1] = 3221225472;
  v46[2] = __80__BRCXPCRegularIPCsClient_getApplicationDocumentUsageInfoForBundleID_withReply___block_invoke;
  v46[3] = &unk_1E875FCF8;
  v46[4] = self;
  v15 = v7;
  v47 = v15;
  LODWORD(v14) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v14, v46);

  if ((_DWORD)v14)
  {
    memset(v45, 0, sizeof(v45));
    __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient getApplicationDocumentUsageInfoForBundleID:withReply:]", 2021, v45);
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134218498;
      v52 = (BRCXPCRegularIPCsClient *)v45[0];
      v53 = 2112;
      v54 = v6;
      v55 = 2112;
      v56 = v16;
      _os_log_debug_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx getting usage for %@%@", buf, 0x20u);
    }

    objc_msgSend(MEMORY[0x1E0CA5860], "applicationProxyForIdentifier:placeholder:", v6, 0);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    if (v18)
    {
      BREntitledContainerIdentifiersForProxy();
      v19 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      brc_bread_crumbs();
      v20 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v52 = v6;
        v53 = 2112;
        v54 = v20;
        _os_log_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_DEFAULT, "[WARNING] unable to find bundleID %@%@", buf, 0x16u);
      }

      v19 = 0;
    }
    v41 = 0;
    v42 = &v41;
    v43 = 0x2020000000;
    v44 = 0;
    v37 = 0;
    v38 = &v37;
    v39 = 0x2020000000;
    v40 = 0;
    -[BRCXPCClient session](self, "session");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v19, "count"))
    {
      objc_msgSend(v22, "clientTruthWorkloop");
      v23 = objc_claimAutoreleasedReturnValue();
      v29 = v13;
      v30 = 3221225472;
      v31 = __80__BRCXPCRegularIPCsClient_getApplicationDocumentUsageInfoForBundleID_withReply___block_invoke_305;
      v32 = &unk_1E8766480;
      v33 = v19;
      v34 = v22;
      v35 = &v41;
      v36 = &v37;
      dispatch_async_and_wait(v23, &v29);

    }
    v49[0] = *MEMORY[0x1E0D10B08];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", *((unsigned __int8 *)v38 + 24), v29, v30, v31, v32);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v49[1] = *MEMORY[0x1E0D10B00];
    v50[0] = v24;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", *((unsigned __int8 *)v42 + 24));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v50[1] = v25;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v50, v49, 2);
    v26 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();

    brc_bread_crumbs();
    v27 = (char *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v28 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138413058;
      v52 = self;
      v53 = 2112;
      v54 = v26;
      v55 = 2112;
      v56 = 0;
      v57 = 2112;
      v58 = v27;
      _os_log_impl(&dword_1CBD43000, v28, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*((void (**)(id, BRCXPCRegularIPCsClient *, _QWORD))v15 + 2))(v15, v26, 0);
    _Block_object_dispose(&v37, 8);
    _Block_object_dispose(&v41, 8);

    __brc_leave_section(v45);
  }
  __brc_leave_section(v48);

}

void __80__BRCXPCRegularIPCsClient_getApplicationDocumentUsageInfoForBundleID_withReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __80__BRCXPCRegularIPCsClient_getApplicationDocumentUsageInfoForBundleID_withReply___block_invoke_305(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v14;
    while (2)
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v14 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(a1 + 40), "appLibraryByID:", *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * i), (_QWORD)v13);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = v7;
        v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        if (*(_BYTE *)(v9 + 24))
        {
          v10 = 1;
        }
        else
        {
          v10 = objc_msgSend(v7, "hasLocalChanges");
          v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        }
        *(_BYTE *)(v9 + 24) = v10;
        v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        if (*(_BYTE *)(v11 + 24))
        {
          v12 = 1;
        }
        else
        {
          v12 = objc_msgSend(v8, "hasUbiquitousDocuments");
          v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        }
        *(_BYTE *)(v11 + 24) = v12;
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24)
          && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
        {

          goto LABEL_18;
        }

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v4)
        continue;
      break;
    }
  }
LABEL_18:

}

- (void)hasOptimizeStorageWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  _QWORD v16[5];
  id v17;
  uint64_t v18[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v20;
  __int16 v21;
  _BYTE v22[28];
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v18, 0, sizeof(v18));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient hasOptimizeStorageWithReply:]", 2062, v18);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v18[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v20 = (BRCXPCRegularIPCsClient *)v7;
    v21 = 2112;
    *(_QWORD *)v22 = self;
    *(_WORD *)&v22[8] = 2112;
    *(_QWORD *)&v22[10] = v9;
    *(_WORD *)&v22[18] = 2080;
    *(_QWORD *)&v22[20] = "-[BRCXPCRegularIPCsClient hasOptimizeStorageWithReply:]";
    v23 = 2112;
    v24 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = (void *)*MEMORY[0x1E0D10C68];
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __55__BRCXPCRegularIPCsClient_hasOptimizeStorageWithReply___block_invoke;
  v16[3] = &unk_1E875FCF8;
  v16[4] = self;
  v11 = v4;
  v17 = v11;
  LODWORD(v10) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v10, v16);

  if ((_DWORD)v10)
  {
    -[BRCXPCClient session](self, "session");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "hasOptimizeStorageEnabled");

    brc_bread_crumbs();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138413058;
      v20 = self;
      v21 = 1024;
      *(_DWORD *)v22 = v13;
      *(_WORD *)&v22[4] = 2112;
      *(_QWORD *)&v22[6] = 0;
      *(_WORD *)&v22[14] = 2112;
      *(_QWORD *)&v22[16] = v14;
      _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);
    }

    (*((void (**)(id, uint64_t, _QWORD))v11 + 2))(v11, v13, 0);
  }
  __brc_leave_section(v18);

}

void __55__BRCXPCRegularIPCsClient_hasOptimizeStorageWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)setStorageOpimizationEnabled:(BOOL)a3 reply:(id)a4
{
  _BOOL8 v4;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  qos_class_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  NSObject *v16;
  _QWORD v17[5];
  id v18;
  uint64_t v19[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v21;
  __int16 v22;
  BRCXPCRegularIPCsClient *v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  const char *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v4 = a3;
  v30 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  memset(v19, 0, sizeof(v19));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient setStorageOpimizationEnabled:reply:]", 2072, v19);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = v19[0];
    v10 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v10, (uint64_t)&brc_qos_entries, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v21 = (BRCXPCRegularIPCsClient *)v9;
    v22 = 2112;
    v23 = self;
    v24 = 2112;
    v25 = v11;
    v26 = 2080;
    v27 = "-[BRCXPCRegularIPCsClient setStorageOpimizationEnabled:reply:]";
    v28 = 2112;
    v29 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v12 = (void *)*MEMORY[0x1E0D10C68];
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __62__BRCXPCRegularIPCsClient_setStorageOpimizationEnabled_reply___block_invoke;
  v17[3] = &unk_1E875FCF8;
  v17[4] = self;
  v13 = v6;
  v18 = v13;
  LODWORD(v12) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v12, v17);

  if ((_DWORD)v12)
  {
    -[BRCXPCClient session](self, "session");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "setOptimizeStorageEnabled:synchronous:", v4, 0);

    brc_bread_crumbs();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v21 = self;
      v22 = 2112;
      v23 = 0;
      v24 = 2112;
      v25 = v15;
      _os_log_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v13 + 2))(v13, 0);
  }
  __brc_leave_section(v19);

}

void __62__BRCXPCRegularIPCsClient_setStorageOpimizationEnabled_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)evictOldDocumentsWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  void *v18;
  BRCXPCRegularIPCsClient *v19;
  void *v20;
  NSObject *v21;
  id v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v25, 0, sizeof(v25));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient evictOldDocumentsWithReply:]", 2082, v25);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v25[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v27 = (BRCXPCRegularIPCsClient *)v7;
    v28 = 2112;
    v29 = self;
    v30 = 2112;
    v31 = v9;
    v32 = 2080;
    v33 = "-[BRCXPCRegularIPCsClient evictOldDocumentsWithReply:]";
    v34 = 2112;
    v35 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = (void *)*MEMORY[0x1E0D10C68];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __54__BRCXPCRegularIPCsClient_evictOldDocumentsWithReply___block_invoke;
  v23[3] = &unk_1E875FCF8;
  v23[4] = self;
  v11 = v4;
  v24 = v11;
  LODWORD(v10) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v10, v23);

  if ((_DWORD)v10)
  {
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "defaultTimeDeltaForEviction");
    v14 = v13;
    objc_msgSend(v12, "defaultOnDiskAccessTimeDefaultForEviction");
    v16 = v15;
    -[BRCXPCClient session](self, "session");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "diskReclaimer");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = 0;
    objc_msgSend(v18, "performOptimizeStorageWithTimeDelta:onDiskAccessTimeDelta:error:", &v22, v14, v16);
    v19 = (BRCXPCRegularIPCsClient *)v22;

    brc_bread_crumbs();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v27 = self;
      v28 = 2112;
      v29 = v19;
      v30 = 2112;
      v31 = v20;
      _os_log_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, BRCXPCRegularIPCsClient *))v11 + 2))(v11, v19);
  }
  __brc_leave_section(v25);

}

void __54__BRCXPCRegularIPCsClient_evictOldDocumentsWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)iCloudDesktopSettingsChangedWithAttributes:(id)a3 reply:(id)a4
{
  void (**v5)(id, void *);
  void *v6;
  NSObject *v7;
  _BOOL4 v8;
  uint64_t v9;
  void *v10;
  void *v11;
  int v12;
  BRCXPCRegularIPCsClient *v13;
  __int16 v14;
  void *v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = (void (**)(id, void *))a4;
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_INFO);
  v9 = *MEMORY[0x1E0CB28A8];
  if (v8)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0CB28A8], 3328, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 138412802;
    v13 = self;
    v14 = 2112;
    v15 = v10;
    v16 = 2112;
    v17 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v12, 0x20u);

  }
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", v9, 3328, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v5[2](v5, v11);

}

uint64_t __45__BRCXPCRegularIPCsClient_getContainersByID___block_invoke_308(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;

  v3 = a2;
  objc_msgSend(v3, "containerMetadata");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    objc_msgSend(v4, "setIsCloudSyncTCCDisabled:", objc_msgSend(*(id *)(a1 + 32), "cloudSyncTCCDisabledForContainerMeta:", v4));
    v5 = *(void **)(a1 + 40);
    objc_msgSend(v3, "appLibraryID");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v4, v6);

  }
  else
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, (os_log_type_t)0x90u))
      __45__BRCXPCRegularIPCsClient_getContainersByID___block_invoke_308_cold_1();

  }
  return 1;
}

- (void)getContainerForMangledID:(id)a3 personaID:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  id v16;
  int v17;
  id v18;
  id v19;
  _QWORD v20[5];
  id v21;
  uint64_t v22[3];
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  BRCXPCRegularIPCsClient *v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  const char *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v22, 0, sizeof(v22));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getContainerForMangledID:personaID:reply:]", 2154, v22);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v22[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v24 = v13;
    v25 = 2112;
    v26 = self;
    v27 = 2112;
    v28 = v15;
    v29 = 2080;
    v30 = "-[BRCXPCRegularIPCsClient getContainerForMangledID:personaID:reply:]";
    v31 = 2112;
    v32 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __68__BRCXPCRegularIPCsClient_getContainerForMangledID_personaID_reply___block_invoke;
  v20[3] = &unk_1E875FCF8;
  v20[4] = self;
  v16 = v10;
  v21 = v16;
  v17 = _brc_ipc_check_logged_status(self, 0, v20);

  if (v17)
  {
    v19 = v16;
    v18 = v8;
    BRPerformWithPersonaAndError();

  }
  __brc_leave_section(v22);

}

void __68__BRCXPCRegularIPCsClient_getContainerForMangledID_personaID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __68__BRCXPCRegularIPCsClient_getContainerForMangledID_personaID_reply___block_invoke_310(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  id v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    brc_bread_crumbs();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = a1[4];
      v21 = 138413058;
      v22 = v6;
      v23 = 2112;
      v24 = 0;
      v25 = 2112;
      v26 = v3;
      v27 = 2112;
      v28 = v4;
      _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v21, 0x2Au);
    }

    (*(void (**)(void))(a1[6] + 16))();
  }
  else
  {
    +[BRCAccountsManager sharedManager](BRCAccountsManager, "sharedManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "accountHandlerForCurrentPersona");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v8, "session");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v9;
    if (v9)
    {
      objc_msgSend(v9, "appLibraryByMangledID:", a1[5]);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "containerMetadataFilledWithTCCInfo");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      brc_bread_crumbs();
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        v15 = a1[4];
        v21 = 138413058;
        v22 = v15;
        v23 = 2112;
        v24 = v12;
        v25 = 2112;
        v26 = 0;
        v27 = 2112;
        v28 = v13;
        _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v21, 0x2Au);
      }

      (*(void (**)(void))(a1[6] + 16))();
    }
    else
    {
      brc_bread_crumbs();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        v18 = a1[4];
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorLoggedOut");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = 138413058;
        v22 = v18;
        v23 = 2112;
        v24 = 0;
        v25 = 2112;
        v26 = v19;
        v27 = 2112;
        v28 = v16;
        _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v21, 0x2Au);

      }
      v20 = a1[6];
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorLoggedOut");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, _QWORD, void *))(v20 + 16))(v20, 0, v11);
    }

  }
}

- (void)didReceiveHandoffRequestForBundleID:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  id v13;
  int v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  NSObject *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _QWORD v29[5];
  id v30;
  uint64_t v31[3];
  uint8_t v32[128];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v34;
  __int16 v35;
  BRCXPCRegularIPCsClient *v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  const char *v40;
  __int16 v41;
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v31, 0, sizeof(v31));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient didReceiveHandoffRequestForBundleID:reply:]", 2187, v31);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v31[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v34 = (BRCXPCRegularIPCsClient *)v10;
    v35 = 2112;
    v36 = self;
    v37 = 2112;
    v38 = v12;
    v39 = 2080;
    v40 = "-[BRCXPCRegularIPCsClient didReceiveHandoffRequestForBundleID:reply:]";
    v41 = 2112;
    v42 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v29[0] = MEMORY[0x1E0C809B0];
  v29[1] = 3221225472;
  v29[2] = __69__BRCXPCRegularIPCsClient_didReceiveHandoffRequestForBundleID_reply___block_invoke;
  v29[3] = &unk_1E875FCF8;
  v29[4] = self;
  v13 = v7;
  v30 = v13;
  v14 = _brc_ipc_check_applibrary_proxy(self, 1, v29);

  if (v14)
  {
    +[BRCCloudDocsAppsMonitor cloudDocsAppsMonitor](BRCCloudDocsAppsMonitor, "cloudDocsAppsMonitor");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "containerIDsForApplicationIdentifier:", v6);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    -[BRCXPCClient session](self, "session");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = 0u;
    v28 = 0u;
    v25 = 0u;
    v26 = 0u;
    v18 = v16;
    v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v25, v32, 16);
    if (v19)
    {
      v20 = *(_QWORD *)v26;
      do
      {
        v21 = 0;
        do
        {
          if (*(_QWORD *)v26 != v20)
            objc_enumerationMutation(v18);
          objc_msgSend(v17, "appLibraryByID:", *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * v21), (_QWORD)v25);
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v22, "didReceiveHandoffRequest");

          ++v21;
        }
        while (v19 != v21);
        v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v25, v32, 16);
      }
      while (v19);
    }

    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v34 = self;
      v35 = 2112;
      v36 = 0;
      v37 = 2112;
      v38 = v23;
      _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v13 + 2))(v13, 0);
  }
  __brc_leave_section(v31);

}

void __69__BRCXPCRegularIPCsClient_didReceiveHandoffRequestForBundleID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (id)_loggedInUserPropertyValuesForKeys:(id)a3 error:(id *)a4
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  id v18;
  void *v19;
  void *v20;
  NSObject *v21;
  const char *v23;
  id *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint8_t v34[128];
  uint8_t buf[4];
  const char *v36;
  __int16 v37;
  const char *v38;
  __int16 v39;
  void *v40;
  __int16 v41;
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithCapacity:", objc_msgSend(v5, "count"));
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C8F2B8], "defaultStore");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "br_accountForCurrentPersona");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    v24 = a4;
    v25 = v6;
    v32 = 0u;
    v33 = 0u;
    v30 = 0u;
    v31 = 0u;
    v26 = v5;
    v8 = v5;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v31;
      v12 = *MEMORY[0x1E0D10CB8];
      v28 = *MEMORY[0x1E0D10CC8];
      v27 = *MEMORY[0x1E0D10CC0];
      while (2)
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v31 != v11)
            objc_enumerationMutation(v8);
          v14 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * v13);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            if (objc_msgSend(v14, "isEqualToString:", v12))
            {
              objc_msgSend(v7, "br_firstName");
              v15 = objc_claimAutoreleasedReturnValue();
            }
            else if (objc_msgSend(v14, "isEqualToString:", v28))
            {
              objc_msgSend(v7, "br_lastName");
              v15 = objc_claimAutoreleasedReturnValue();
            }
            else
            {
              if (!objc_msgSend(v14, "isEqualToString:", v27))
              {
                if (v24)
                {
                  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorUnknownKey:", v14);
                  *v24 = (id)objc_claimAutoreleasedReturnValue();
                }

                v18 = 0;
                goto LABEL_31;
              }
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", objc_msgSend(v7, "br_isManagedAppleID"));
              v15 = objc_claimAutoreleasedReturnValue();
            }
            v16 = (char *)v15;
            if (v15)
              objc_msgSend(v29, "setObject:forKeyedSubscript:", v15, v14);
          }
          else
          {
            brc_bread_crumbs();
            v16 = (char *)objc_claimAutoreleasedReturnValue();
            brc_default_log();
            v17 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v17, (os_log_type_t)0x90u))
            {
              *(_DWORD *)buf = 138412546;
              v36 = (const char *)v14;
              v37 = 2112;
              v38 = v16;
              _os_log_error_impl(&dword_1CBD43000, v17, (os_log_type_t)0x90u, "[ERROR] key: %@ is not of class NSString%@", buf, 0x16u);
            }

          }
          ++v13;
        }
        while (v10 != v13);
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
        if (v10)
          continue;
        break;
      }
    }

    v18 = v29;
LABEL_31:
    v6 = v25;
    v5 = v26;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", CFSTR("account"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    if (v19)
    {
      brc_bread_crumbs();
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, (os_log_type_t)0x90u))
      {
        v23 = "(passed to caller)";
        *(_DWORD *)buf = 136315906;
        v36 = "-[BRCXPCRegularIPCsClient _loggedInUserPropertyValuesForKeys:error:]";
        v37 = 2080;
        if (!a4)
          v23 = "(ignored by caller)";
        v38 = v23;
        v39 = 2112;
        v40 = v19;
        v41 = 2112;
        v42 = v20;
        _os_log_error_impl(&dword_1CBD43000, v21, (os_log_type_t)0x90u, "[ERROR] %s: %s error: %@%@", buf, 0x2Au);
      }

    }
    if (a4)
      *a4 = objc_retainAutorelease(v19);

    v18 = 0;
  }

  return v18;
}

- (void)getLoggedInUserPropertyValuesForKeys:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  void *v13;
  char v14;
  id v15;
  char v16;
  BRCXPCRegularIPCsClient *v17;
  id v18;
  char *v19;
  NSObject *v20;
  id v21;
  _QWORD v22[5];
  id v23;
  uint64_t v24[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v26;
  __int16 v27;
  BRCXPCRegularIPCsClient *v28;
  __int16 v29;
  id v30;
  __int16 v31;
  const char *v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v24, 0, sizeof(v24));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getLoggedInUserPropertyValuesForKeys:reply:]", 2240, v24);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v24[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v26 = (BRCXPCRegularIPCsClient *)v10;
    v27 = 2112;
    v28 = self;
    v29 = 2112;
    v30 = v12;
    v31 = 2080;
    v32 = "-[BRCXPCRegularIPCsClient getLoggedInUserPropertyValuesForKeys:reply:]";
    v33 = 2112;
    v34 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "isSharingPrivateInterfaceEntitled");
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __70__BRCXPCRegularIPCsClient_getLoggedInUserPropertyValuesForKeys_reply___block_invoke;
  v22[3] = &unk_1E875FCF8;
  v22[4] = self;
  v15 = v7;
  v23 = v15;
  v16 = _brc_ipc_check_client_privilege(self, 1, v14, (uint64_t)"isSharingPrivateInterfaceEntitled", v22);

  if ((v16 & 1) != 0)
  {
    v21 = 0;
    -[BRCXPCRegularIPCsClient _loggedInUserPropertyValuesForKeys:error:](self, "_loggedInUserPropertyValuesForKeys:error:", v6, &v21);
    v17 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    v18 = v21;
    brc_bread_crumbs();
    v19 = (char *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138413058;
      v26 = self;
      v27 = 2112;
      v28 = v17;
      v29 = 2112;
      v30 = v18;
      v31 = 2112;
      v32 = v19;
      _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*((void (**)(id, BRCXPCRegularIPCsClient *, id))v15 + 2))(v15, v17, v18);
  }
  __brc_leave_section(v24);

}

void __70__BRCXPCRegularIPCsClient_getLoggedInUserPropertyValuesForKeys_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)setupInstanceWithDict:(id)a3 reply:(id)a4
{
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  qos_class_t v12;
  void *v13;
  id v14;
  _QWORD v15[5];
  id v16;
  uint64_t v17[3];
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  BRCXPCRegularIPCsClient *v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  const char *v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  memset(v17, 0, sizeof(v17));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient setupInstanceWithDict:reply:]", 2254, v17);
  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = v17[0];
    v12 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v12, (uint64_t)&brc_qos_entries, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v19 = v11;
    v20 = 2112;
    v21 = self;
    v22 = 2112;
    v23 = v13;
    v24 = 2080;
    v25 = "-[BRCXPCRegularIPCsClient setupInstanceWithDict:reply:]";
    v26 = 2112;
    v27 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __55__BRCXPCRegularIPCsClient_setupInstanceWithDict_reply___block_invoke;
  v15[3] = &unk_1E875FCF8;
  v15[4] = self;
  v14 = v8;
  v16 = v14;
  _brc_ipc_spi(self, -1, (uint64_t)a2, v15);

  __brc_leave_section(v17);
}

void __55__BRCXPCRegularIPCsClient_setupInstanceWithDict_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)resetBudgets:(id)a3 reply:(id)a4
{
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  qos_class_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  int v16;
  void *v17;
  void *v18;
  id v19;
  _QWORD v20[4];
  id v21;
  id v22;
  BRCXPCRegularIPCsClient *v23;
  id v24;
  _QWORD v25[5];
  id v26;
  uint64_t v27[3];
  uint8_t buf[4];
  uint64_t v29;
  __int16 v30;
  BRCXPCRegularIPCsClient *v31;
  __int16 v32;
  void *v33;
  __int16 v34;
  const char *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  memset(v27, 0, sizeof(v27));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient resetBudgets:reply:]", 2262, v27);
  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = v27[0];
    v12 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v12, (uint64_t)&brc_qos_entries, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v29 = v11;
    v30 = 2112;
    v31 = self;
    v32 = 2112;
    v33 = v13;
    v34 = 2080;
    v35 = "-[BRCXPCRegularIPCsClient resetBudgets:reply:]";
    v36 = 2112;
    v37 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v14 = MEMORY[0x1E0C809B0];
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __46__BRCXPCRegularIPCsClient_resetBudgets_reply___block_invoke;
  v25[3] = &unk_1E875FCF8;
  v25[4] = self;
  v15 = v8;
  v26 = v15;
  v16 = _brc_ipc_spi(self, 1, (uint64_t)a2, v25);

  if (v16)
  {
    -[BRCXPCClient session](self, "session");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "clientDB");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v20[0] = v14;
    v20[1] = 3221225472;
    v20[2] = __46__BRCXPCRegularIPCsClient_resetBudgets_reply___block_invoke_316;
    v20[3] = &unk_1E87664A8;
    v19 = v17;
    v21 = v19;
    v22 = v7;
    v23 = self;
    v24 = v15;
    objc_msgSend(v18, "performWithFlags:action:", 5, v20);

  }
  __brc_leave_section(v27);

}

void __46__BRCXPCRegularIPCsClient_resetBudgets_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t __46__BRCXPCRegularIPCsClient_resetBudgets_reply___block_invoke_316(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  _QWORD v13[4];
  id v14;
  uint8_t buf[4];
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "forceBatchStart");
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __46__BRCXPCRegularIPCsClient_resetBudgets_reply___block_invoke_2;
  v13[3] = &unk_1E8764150;
  v3 = *(void **)(a1 + 32);
  v14 = *(id *)(a1 + 40);
  objc_msgSend(v3, "enumerateServerZones:", v13);
  v4 = *(void **)(a1 + 40);
  if (!v4 || objc_msgSend(v4, "containsObject:", CFSTR("global")))
  {
    objc_msgSend(*(id *)(a1 + 32), "containerScheduler");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "syncUpBudget");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "clear");

    objc_msgSend(*(id *)(a1 + 32), "resetThrottles");
  }
  objc_msgSend(*(id *)(a1 + 32), "containerScheduler");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "syncScheduler");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "signal");

  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)buf = 138412802;
    v16 = v11;
    v17 = 2112;
    v18 = 0;
    v19 = 2112;
    v20 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  return 1;
}

uint64_t __46__BRCXPCRegularIPCsClient_resetBudgets_reply___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;

  v3 = a2;
  v4 = v3;
  v5 = *(void **)(a1 + 32);
  if (!v5
    || (objc_msgSend(v3, "zoneName"),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        v7 = objc_msgSend(v5, "containsObject:", v6),
        v6,
        v7))
  {
    objc_msgSend(v4, "clientZone");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "resetSyncBudgetAndThrottle");

  }
  return 1;
}

- (void)performSelfCheck:(id)a3 reply:(id)a4
{
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  qos_class_t v12;
  void *v13;
  id v14;
  int v15;
  int v16;
  FILE *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v30;
  __int16 v31;
  _BYTE v32[28];
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient performSelfCheck:reply:]", 2289, v28);
  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = v28[0];
    v12 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v12, (uint64_t)&brc_qos_entries, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = (BRCXPCRegularIPCsClient *)v11;
    v31 = 2112;
    *(_QWORD *)v32 = self;
    *(_WORD *)&v32[8] = 2112;
    *(_QWORD *)&v32[10] = v13;
    *(_WORD *)&v32[18] = 2080;
    *(_QWORD *)&v32[20] = "-[BRCXPCRegularIPCsClient performSelfCheck:reply:]";
    v33 = 2112;
    v34 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __50__BRCXPCRegularIPCsClient_performSelfCheck_reply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v14 = v8;
  v27 = v14;
  v15 = _brc_ipc_spi(self, 1, (uint64_t)a2, v26);

  if (v15)
  {
    v16 = dup(objc_msgSend(v7, "fileDescriptor"));
    v17 = fdopen(v16, "a");
    if (v17)
    {
      +[BRCDaemon daemon](BRCDaemon, "daemon");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_msgSend(v18, "selfCheck:", v17);

      fclose(v17);
      if ((v19 & 1) != 0)
      {
        v20 = 0;
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithDomain:code:description:", *MEMORY[0x1E0D10C90], 1003, CFSTR("self check failed: broken invariant"));
        v20 = (void *)objc_claimAutoreleasedReturnValue();
      }
      brc_bread_crumbs();
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138413058;
        v30 = self;
        v31 = 1024;
        *(_DWORD *)v32 = v19;
        *(_WORD *)&v32[4] = 2112;
        *(_QWORD *)&v32[6] = v20;
        *(_WORD *)&v32[14] = 2112;
        *(_QWORD *)&v32[16] = v24;
        _os_log_impl(&dword_1CBD43000, v25, OS_LOG_TYPE_INFO, "[INFO] %@: reply(success=%d, %@)%@", buf, 0x26u);
      }

      (*((void (**)(id, uint64_t, void *))v14 + 2))(v14, v19, v20);
    }
    else
    {
      brc_bread_crumbs();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorFromErrno");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        v30 = self;
        v31 = 1024;
        *(_DWORD *)v32 = 0;
        *(_WORD *)&v32[4] = 2112;
        *(_QWORD *)&v32[6] = v23;
        *(_WORD *)&v32[14] = 2112;
        *(_QWORD *)&v32[16] = v21;
        _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] %@: reply(success=%d, %@)%@", buf, 0x26u);

      }
      objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorFromErrno");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v14 + 2))(v14, 0, v20);
    }

  }
  __brc_leave_section(v28);

}

void __50__BRCXPCRegularIPCsClient_performSelfCheck_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)printStatus:(id)a3 containerID:(id)a4 reply:(id)a5
{
  id v9;
  id v10;
  id v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  qos_class_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  int v19;
  brc_task_tracker *tracker;
  void *v21;
  _QWORD v22[5];
  id v23;
  _QWORD v24[5];
  id v25;
  id v26;
  id v27;
  _QWORD v28[5];
  id v29;
  uint64_t v30[3];
  uint8_t buf[4];
  uint64_t v32;
  __int16 v33;
  BRCXPCRegularIPCsClient *v34;
  __int16 v35;
  void *v36;
  __int16 v37;
  const char *v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  v11 = a5;
  memset(v30, 0, sizeof(v30));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient printStatus:containerID:reply:]", 2307, v30);
  brc_bread_crumbs();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    v14 = v30[0];
    v15 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v15, (uint64_t)&brc_qos_entries, 0);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v32 = v14;
    v33 = 2112;
    v34 = self;
    v35 = 2112;
    v36 = v16;
    v37 = 2080;
    v38 = "-[BRCXPCRegularIPCsClient printStatus:containerID:reply:]";
    v39 = 2112;
    v40 = v12;
    _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v17 = MEMORY[0x1E0C809B0];
  v28[0] = MEMORY[0x1E0C809B0];
  v28[1] = 3221225472;
  v28[2] = __57__BRCXPCRegularIPCsClient_printStatus_containerID_reply___block_invoke;
  v28[3] = &unk_1E875FCF8;
  v28[4] = self;
  v18 = v11;
  v29 = v18;
  v19 = _brc_ipc_spi(self, 1, (uint64_t)a2, v28);

  if (v19)
  {
    tracker = self->super._tracker;
    dispatch_get_global_queue(0, 0);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v24[0] = v17;
    v24[1] = 3221225472;
    v24[2] = __57__BRCXPCRegularIPCsClient_printStatus_containerID_reply___block_invoke_324;
    v24[3] = &unk_1E875DDA0;
    v24[4] = self;
    v25 = v9;
    v26 = v10;
    v27 = v18;
    v22[0] = v17;
    v22[1] = 3221225472;
    v22[2] = __57__BRCXPCRegularIPCsClient_printStatus_containerID_reply___block_invoke_325;
    v22[3] = &unk_1E875EAA8;
    v22[4] = self;
    v23 = v27;
    brc_task_tracker_async_with_logs(tracker, v21, v24, v22);

  }
  __brc_leave_section(v30);

}

void __57__BRCXPCRegularIPCsClient_printStatus_containerID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __57__BRCXPCRegularIPCsClient_printStatus_containerID_reply___block_invoke_324(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint8_t buf[4];
  uint64_t v17;
  __int16 v18;
  int v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D17A6BE8]();
  objc_msgSend(*(id *)(a1 + 32), "session");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v15 = 0;
  v7 = objc_msgSend(v3, "dumpStatusToFileHandle:zoneName:tracker:error:", v4, v5, v6, &v15);
  v8 = v15;

  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v8, "brc_wrappedError");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413058;
    v17 = v11;
    v18 = 1024;
    v19 = v7;
    v20 = 2112;
    v21 = v12;
    v22 = 2112;
    v23 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] %@: reply(success=%d, %@)%@", buf, 0x26u);

  }
  v13 = *(_QWORD *)(a1 + 56);
  objc_msgSend(v8, "brc_wrappedError");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, uint64_t, void *))(v13 + 16))(v13, v7, v14);

  objc_autoreleasePoolPop(v2);
}

void __57__BRCXPCRegularIPCsClient_printStatus_containerID_reply___block_invoke_325(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 1024;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v8, 0x26u);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

- (void)dumpFPFSMigrationStatusTo:(id)a3 personaID:(id)a4 includeNonMigratedItems:(BOOL)a5 reply:(id)a6
{
  id v10;
  __CFString *v11;
  id v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  qos_class_t v16;
  void *v17;
  id v18;
  int v19;
  id v20;
  id v21;
  _QWORD v22[5];
  id v23;
  uint64_t v24[3];
  uint8_t buf[4];
  uint64_t v26;
  __int16 v27;
  BRCXPCRegularIPCsClient *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  const char *v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = (__CFString *)a4;
  v12 = a6;
  memset(v24, 0, sizeof(v24));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient dumpFPFSMigrationStatusTo:personaID:includeNonMigratedItems:reply:]", 2327, v24);
  brc_bread_crumbs();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    v15 = v24[0];
    v16 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v16, (uint64_t)&brc_qos_entries, 0);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v26 = v15;
    v27 = 2112;
    v28 = self;
    v29 = 2112;
    v30 = v17;
    v31 = 2080;
    v32 = "-[BRCXPCRegularIPCsClient dumpFPFSMigrationStatusTo:personaID:includeNonMigratedItems:reply:]";
    v33 = 2112;
    v34 = v13;
    _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __93__BRCXPCRegularIPCsClient_dumpFPFSMigrationStatusTo_personaID_includeNonMigratedItems_reply___block_invoke;
  v22[3] = &unk_1E875FCF8;
  v22[4] = self;
  v18 = v12;
  v23 = v18;
  v19 = _brc_ipc_spi(self, 0, (uint64_t)a2, v22);

  if (v19)
  {
    if (!v11)
      v11 = CFSTR("__defaultPersonaID__");
    v21 = v18;
    v20 = v10;
    BRPerformWithPersonaAndError();

  }
  __brc_leave_section(v24);

}

void __93__BRCXPCRegularIPCsClient_dumpFPFSMigrationStatusTo_personaID_includeNonMigratedItems_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __93__BRCXPCRegularIPCsClient_dumpFPFSMigrationStatusTo_personaID_includeNonMigratedItems_reply___block_invoke_326(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  _QWORD v25[5];
  id v26;
  _QWORD v27[4];
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  char v32;
  uint8_t buf[4];
  uint64_t v34;
  __int16 v35;
  int v36;
  __int16 v37;
  id v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    brc_bread_crumbs();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138413058;
      v34 = v6;
      v35 = 1024;
      v36 = 0;
      v37 = 2112;
      v38 = v3;
      v39 = 2112;
      v40 = v4;
      _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    +[BRCAccountsManager sharedManager](BRCAccountsManager, "sharedManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "accountHandlerForCurrentPersona");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v8, "session");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      v10 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
      dispatch_get_global_queue(0, 0);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = MEMORY[0x1E0C809B0];
      v27[0] = MEMORY[0x1E0C809B0];
      v27[1] = 3221225472;
      v27[2] = __93__BRCXPCRegularIPCsClient_dumpFPFSMigrationStatusTo_personaID_includeNonMigratedItems_reply___block_invoke_327;
      v27[3] = &unk_1E87664D0;
      v28 = v8;
      v13 = *(id *)(a1 + 40);
      v14 = *(_QWORD *)(a1 + 32);
      v29 = v13;
      v30 = v14;
      v32 = *(_BYTE *)(a1 + 56);
      v31 = *(id *)(a1 + 48);
      v25[0] = v12;
      v25[1] = 3221225472;
      v25[2] = __93__BRCXPCRegularIPCsClient_dumpFPFSMigrationStatusTo_personaID_includeNonMigratedItems_reply___block_invoke_328;
      v25[3] = &unk_1E875EAA8;
      v25[4] = *(_QWORD *)(a1 + 32);
      v26 = *(id *)(a1 + 48);
      brc_task_tracker_async_with_logs(v10, v11, v27, v25);

      v15 = v28;
    }
    else
    {
      brc_bread_crumbs();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        v18 = *(_QWORD *)(a1 + 32);
        v19 = (void *)MEMORY[0x1E0CB35C8];
        objc_msgSend(v8, "loggedOutError");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "brc_errorLoggedOutWithUnderlyingError:", v20);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        v34 = v18;
        v35 = 1024;
        v36 = 0;
        v37 = 2112;
        v38 = v21;
        v39 = 2112;
        v40 = v16;
        _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);

      }
      v22 = *(_QWORD *)(a1 + 48);
      v23 = (void *)MEMORY[0x1E0CB35C8];
      objc_msgSend(v8, "loggedOutError");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "brc_errorLoggedOutWithUnderlyingError:", v15);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, _QWORD, void *))(v22 + 16))(v22, 0, v24);

    }
  }

}

void __93__BRCXPCRegularIPCsClient_dumpFPFSMigrationStatusTo_personaID_includeNonMigratedItems_reply___block_invoke_327(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint8_t buf[4];
  uint64_t v17;
  __int16 v18;
  int v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D17A6BE8]();
  objc_msgSend(*(id *)(a1 + 32), "session");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v6 = *(unsigned __int8 *)(a1 + 64);
  v15 = 0;
  v7 = objc_msgSend(v3, "dumpFPFSMigrationStatusToFileHandle:tracker:includeNonMigratedItems:error:", v4, v5, v6, &v15);
  v8 = v15;

  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = *(_QWORD *)(a1 + 48);
    objc_msgSend(v8, "brc_wrappedError");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413058;
    v17 = v11;
    v18 = 1024;
    v19 = v7;
    v20 = 2112;
    v21 = v12;
    v22 = 2112;
    v23 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] %@: reply(success=%d, %@)%@", buf, 0x26u);

  }
  v13 = *(_QWORD *)(a1 + 56);
  objc_msgSend(v8, "brc_wrappedError");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, uint64_t, void *))(v13 + 16))(v13, v7, v14);

  objc_autoreleasePoolPop(v2);
}

void __93__BRCXPCRegularIPCsClient_dumpFPFSMigrationStatusTo_personaID_includeNonMigratedItems_reply___block_invoke_328(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 1024;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v8, 0x26u);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

- (void)dumpDatabaseTo:(id)a3 containerID:(id)a4 personaID:(id)a5 includeAllItems:(BOOL)a6 verbose:(BOOL)a7 reply:(id)a8
{
  id v12;
  id v13;
  __CFString *v14;
  id v15;
  void *v16;
  NSObject *v17;
  id v18;
  id v19;
  uint64_t v20;
  qos_class_t v21;
  void *v22;
  id v23;
  int v24;
  id v26;
  id v27;
  id v28;
  _QWORD v29[5];
  id v30;
  uint64_t v31[3];
  uint8_t buf[4];
  uint64_t v33;
  __int16 v34;
  BRCXPCRegularIPCsClient *v35;
  __int16 v36;
  void *v37;
  __int16 v38;
  const char *v39;
  __int16 v40;
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v14 = (__CFString *)a5;
  v15 = a8;
  memset(v31, 0, sizeof(v31));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient dumpDatabaseTo:containerID:personaID:includeAllItems:verbose:reply:]", 2365, v31);
  brc_bread_crumbs();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    v18 = v13;
    v19 = v12;
    v20 = v31[0];
    v21 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v21, (uint64_t)&brc_qos_entries, 0);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v33 = v20;
    v34 = 2112;
    v35 = self;
    v36 = 2112;
    v37 = v22;
    v38 = 2080;
    v39 = "-[BRCXPCRegularIPCsClient dumpDatabaseTo:containerID:personaID:includeAllItems:verbose:reply:]";
    v40 = 2112;
    v41 = v16;
    _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

    v12 = v19;
    v13 = v18;
  }

  v29[0] = MEMORY[0x1E0C809B0];
  v29[1] = 3221225472;
  v29[2] = __94__BRCXPCRegularIPCsClient_dumpDatabaseTo_containerID_personaID_includeAllItems_verbose_reply___block_invoke;
  v29[3] = &unk_1E875FCF8;
  v29[4] = self;
  v23 = v15;
  v30 = v23;
  v24 = _brc_ipc_spi(self, 0, (uint64_t)a2, v29);

  if (v24)
  {
    if (!v14)
      v14 = CFSTR("__defaultPersonaID__");
    v28 = v23;
    v26 = v12;
    v27 = v13;
    BRPerformWithPersonaAndError();

  }
  __brc_leave_section(v31);

}

void __94__BRCXPCRegularIPCsClient_dumpDatabaseTo_containerID_personaID_includeAllItems_verbose_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __94__BRCXPCRegularIPCsClient_dumpDatabaseTo_containerID_personaID_includeAllItems_verbose_reply___block_invoke_329(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  _QWORD v36[5];
  id v37;
  _QWORD v38[4];
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  __int16 v44;
  _QWORD v45[5];
  id v46;
  uint64_t v47[3];
  uint8_t buf[4];
  uint64_t v49;
  __int16 v50;
  _BYTE v51[28];
  __int16 v52;
  void *v53;
  uint64_t v54;

  v54 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (!v3)
  {
    +[BRCAccountsManager sharedManager](BRCAccountsManager, "sharedManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "accountHandlerForCurrentPersona");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v8, "session");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v9)
    {
      brc_bread_crumbs();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        v23 = *(_QWORD *)(a1 + 32);
        v24 = (void *)MEMORY[0x1E0CB35C8];
        objc_msgSend(v8, "loggedOutError");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "brc_errorLoggedOutWithUnderlyingError:", v25);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        v49 = v23;
        v50 = 1024;
        *(_DWORD *)v51 = 0;
        *(_WORD *)&v51[4] = 2112;
        *(_QWORD *)&v51[6] = v26;
        *(_WORD *)&v51[14] = 2112;
        *(_QWORD *)&v51[16] = v21;
        _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);

      }
      v27 = *(_QWORD *)(a1 + 56);
      v28 = (void *)MEMORY[0x1E0CB35C8];
      objc_msgSend(v8, "loggedOutError");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "brc_errorLoggedOutWithUnderlyingError:", v29);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, _QWORD, void *))(v27 + 16))(v27, 0, v30);

      goto LABEL_17;
    }
    memset(v47, 0, sizeof(v47));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient dumpDatabaseTo:containerID:personaID:includeAllItems:verbose:reply:]_block_invoke", 2384, v47);
    brc_bread_crumbs();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = v47[0];
      v13 = *(_QWORD *)(a1 + 32);
      v14 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219010;
      v49 = v12;
      v50 = 2112;
      *(_QWORD *)v51 = v13;
      *(_WORD *)&v51[8] = 2112;
      *(_QWORD *)&v51[10] = v15;
      *(_WORD *)&v51[18] = 2080;
      *(_QWORD *)&v51[20] = "-[BRCXPCRegularIPCsClient dumpDatabaseTo:containerID:personaID:includeAllItems:verbose:reply:]_block_invoke";
      v52 = 2112;
      v53 = v10;
      _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

    }
    v16 = *(void **)(a1 + 32);
    objc_msgSend(v8, "session");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = MEMORY[0x1E0C809B0];
    v45[0] = MEMORY[0x1E0C809B0];
    v45[1] = 3221225472;
    v45[2] = __94__BRCXPCRegularIPCsClient_dumpDatabaseTo_containerID_personaID_includeAllItems_verbose_reply___block_invoke_330;
    v45[3] = &unk_1E875FCF8;
    v45[4] = *(_QWORD *)(a1 + 32);
    v19 = *(id *)(a1 + 56);
    v46 = v19;
    if (v16)
    {
      v20 = _brc_ipc_check_logged_status(v16, 1, v45);

      if ((v20 & 1) == 0)
        goto LABEL_16;
    }
    else
    {
      v31 = v19;

    }
    v32 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
    dispatch_get_global_queue(0, 0);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v38[0] = v18;
    v38[1] = 3221225472;
    v38[2] = __94__BRCXPCRegularIPCsClient_dumpDatabaseTo_containerID_personaID_includeAllItems_verbose_reply___block_invoke_331;
    v38[3] = &unk_1E8766520;
    v39 = v8;
    v40 = *(id *)(a1 + 40);
    v34 = *(id *)(a1 + 48);
    v44 = *(_WORD *)(a1 + 64);
    v35 = *(_QWORD *)(a1 + 32);
    v41 = v34;
    v42 = v35;
    v43 = *(id *)(a1 + 56);
    v36[0] = v18;
    v36[1] = 3221225472;
    v36[2] = __94__BRCXPCRegularIPCsClient_dumpDatabaseTo_containerID_personaID_includeAllItems_verbose_reply___block_invoke_332;
    v36[3] = &unk_1E875EAA8;
    v36[4] = *(_QWORD *)(a1 + 32);
    v37 = *(id *)(a1 + 56);
    brc_task_tracker_async_with_logs(v32, v33, v38, v36);

LABEL_16:
    __brc_leave_section(v47);
LABEL_17:

    goto LABEL_18;
  }
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138413058;
    v49 = v6;
    v50 = 1024;
    *(_DWORD *)v51 = 0;
    *(_WORD *)&v51[4] = 2112;
    *(_QWORD *)&v51[6] = v3;
    *(_WORD *)&v51[14] = 2112;
    *(_QWORD *)&v51[16] = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
LABEL_18:

}

void __94__BRCXPCRegularIPCsClient_dumpDatabaseTo_containerID_personaID_includeAllItems_verbose_reply___block_invoke_330(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __94__BRCXPCRegularIPCsClient_dumpDatabaseTo_containerID_personaID_includeAllItems_verbose_reply___block_invoke_331(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  int v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D17A6BE8]();
  objc_msgSend(*(id *)(a1 + 32), "session");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(unsigned __int8 *)(a1 + 72);
  v7 = *(unsigned __int8 *)(a1 + 73);
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v17 = 0;
  v9 = objc_msgSend(v3, "dumpDatabaseToFileHandle:zoneName:includeAllItems:verbose:tracker:error:", v4, v5, v6, v7, v8, &v17);
  v10 = v17;

  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = *(_QWORD *)(a1 + 56);
    objc_msgSend(v10, "brc_wrappedError");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413058;
    v19 = v13;
    v20 = 1024;
    v21 = v9;
    v22 = 2112;
    v23 = v14;
    v24 = 2112;
    v25 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] %@: reply(success=%d, %@)%@", buf, 0x26u);

  }
  v15 = *(_QWORD *)(a1 + 64);
  objc_msgSend(v10, "brc_wrappedError");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, uint64_t, void *))(v15 + 16))(v15, v9, v16);

  objc_autoreleasePoolPop(v2);
}

void __94__BRCXPCRegularIPCsClient_dumpDatabaseTo_containerID_personaID_includeAllItems_verbose_reply___block_invoke_332(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 1024;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v8, 0x26u);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

- (void)backupDatabaseWithURLWrapper:(id)a3 reply:(id)a4
{
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  qos_class_t v12;
  void *v13;
  id v14;
  int v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  BRCXPCRegularIPCsClient *v23;
  void *v24;
  id v25;
  char *v26;
  NSObject *v27;
  BRCXPCRegularIPCsClient *v28;
  id v29;
  _QWORD v30[5];
  id v31;
  uint64_t v32[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v34;
  __int16 v35;
  BRCXPCRegularIPCsClient *v36;
  __int16 v37;
  id v38;
  __int16 v39;
  const char *v40;
  __int16 v41;
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  memset(v32, 0, sizeof(v32));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient backupDatabaseWithURLWrapper:reply:]", 2402, v32);
  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = v32[0];
    v12 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v12, (uint64_t)&brc_qos_entries, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v34 = (BRCXPCRegularIPCsClient *)v11;
    v35 = 2112;
    v36 = self;
    v37 = 2112;
    v38 = v13;
    v39 = 2080;
    v40 = "-[BRCXPCRegularIPCsClient backupDatabaseWithURLWrapper:reply:]";
    v41 = 2112;
    v42 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 3221225472;
  v30[2] = __62__BRCXPCRegularIPCsClient_backupDatabaseWithURLWrapper_reply___block_invoke;
  v30[3] = &unk_1E875FCF8;
  v30[4] = self;
  v14 = v8;
  v31 = v14;
  v15 = _brc_ipc_spi(self, 1, (uint64_t)a2, v30);

  if (v15)
  {
    objc_msgSend(v7, "url");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = (void *)MEMORY[0x1E0C99E98];
    v18 = (void *)MEMORY[0x1E0CB3940];
    -[BRCXPCClient session](self, "session");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "sessionDirPath");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "stringWithFormat:", CFSTR("%@/db"), v20);
    v21 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "fileURLWithPath:", v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    v23 = v16;
    +[BRCAccountSession sessionForBackingUpDatabasesAtURL:](BRCAccountSession, "sessionForBackingUpDatabasesAtURL:", v22);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = 0;
    LOBYTE(v21) = objc_msgSend(v24, "backupDatabaseToURL:includeServer:doNotObfuscate:error:", v23, 1, 1, &v29);
    v25 = v29;
    if ((v21 & 1) != 0)
    {
      brc_bread_crumbs();
      v26 = (char *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138413058;
        v34 = self;
        v35 = 2112;
        v36 = v23;
        v37 = 2112;
        v38 = v25;
        v39 = 2112;
        v40 = v26;
        _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
      }
      v28 = v23;
    }
    else
    {
      brc_bread_crumbs();
      v26 = (char *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138413058;
        v34 = self;
        v35 = 2112;
        v36 = 0;
        v37 = 2112;
        v38 = v25;
        v39 = 2112;
        v40 = v26;
        _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
      }
      v28 = 0;
    }

    (*((void (**)(id, BRCXPCRegularIPCsClient *, id))v14 + 2))(v14, v28, v25);
  }
  __brc_leave_section(v32);

}

void __62__BRCXPCRegularIPCsClient_backupDatabaseWithURLWrapper_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)dumpCoordinationInfoTo:(id)a3 reply:(id)a4
{
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  qos_class_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  int v16;
  brc_task_tracker *tracker;
  void *v18;
  _QWORD v19[5];
  id v20;
  _QWORD v21[5];
  id v22;
  id v23;
  _QWORD v24[5];
  id v25;
  uint64_t v26[3];
  uint8_t buf[4];
  uint64_t v28;
  __int16 v29;
  BRCXPCRegularIPCsClient *v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  const char *v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  memset(v26, 0, sizeof(v26));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient dumpCoordinationInfoTo:reply:]", 2423, v26);
  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = v26[0];
    v12 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v12, (uint64_t)&brc_qos_entries, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v28 = v11;
    v29 = 2112;
    v30 = self;
    v31 = 2112;
    v32 = v13;
    v33 = 2080;
    v34 = "-[BRCXPCRegularIPCsClient dumpCoordinationInfoTo:reply:]";
    v35 = 2112;
    v36 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v14 = MEMORY[0x1E0C809B0];
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __56__BRCXPCRegularIPCsClient_dumpCoordinationInfoTo_reply___block_invoke;
  v24[3] = &unk_1E875FCF8;
  v24[4] = self;
  v15 = v8;
  v25 = v15;
  v16 = _brc_ipc_spi(self, 1, (uint64_t)a2, v24);

  if (v16)
  {
    tracker = self->super._tracker;
    dispatch_get_global_queue(0, 0);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v21[0] = v14;
    v21[1] = 3221225472;
    v21[2] = __56__BRCXPCRegularIPCsClient_dumpCoordinationInfoTo_reply___block_invoke_336;
    v21[3] = &unk_1E875EB70;
    v21[4] = self;
    v22 = v7;
    v23 = v15;
    v19[0] = v14;
    v19[1] = 3221225472;
    v19[2] = __56__BRCXPCRegularIPCsClient_dumpCoordinationInfoTo_reply___block_invoke_337;
    v19[3] = &unk_1E875EAA8;
    v19[4] = self;
    v20 = v23;
    brc_task_tracker_async_with_logs(tracker, v18, v21, v19);

  }
  __brc_leave_section(v26);

}

void __56__BRCXPCRegularIPCsClient_dumpCoordinationInfoTo_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __56__BRCXPCRegularIPCsClient_dumpCoordinationInfoTo_reply___block_invoke_336(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint8_t buf[4];
  uint64_t v15;
  __int16 v16;
  int v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D17A6BE8]();
  objc_msgSend(*(id *)(a1 + 32), "session");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(a1 + 40);
  v13 = 0;
  v5 = objc_msgSend(v3, "dumpFileCoordinationInfoToFileHandle:error:", v4, &v13);
  v6 = v13;

  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v6, "brc_wrappedError");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413058;
    v15 = v9;
    v16 = 1024;
    v17 = v5;
    v18 = 2112;
    v19 = v10;
    v20 = 2112;
    v21 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(success=%d, %@)%@", buf, 0x26u);

  }
  v11 = *(_QWORD *)(a1 + 48);
  objc_msgSend(v6, "brc_wrappedError");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, uint64_t, void *))(v11 + 16))(v11, v5, v12);

  objc_autoreleasePoolPop(v2);
}

void __56__BRCXPCRegularIPCsClient_dumpCoordinationInfoTo_reply___block_invoke_337(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 1024;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v8, 0x26u);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

- (void)simulateHealthIssueWithContainer:(id)a3 status:(id)a4 reply:(id)a5
{
  BRCXPCRegularIPCsClient *v9;
  id v10;
  BRCXPCRegularIPCsClient *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  id v16;
  int v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  qos_class_t v21;
  void *v22;
  void *v23;
  BRCXPCRegularIPCsClient *v24;
  id v25;
  int v26;
  BRCXPCRegularIPCsClient *v27;
  NSObject *v28;
  id v29;
  void *v30;
  uint64_t v31;
  qos_class_t v32;
  void *v33;
  void *v34;
  NSObject *v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  double v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  void *v57;
  NSObject *v58;
  BRCXPCRegularIPCsClient *v59;
  void *v60;
  NSObject *v61;
  void *v62;
  NSObject *v63;
  BRCXPCRegularIPCsClient *v64;
  void *v65;
  id v66;
  void *v67;
  BRCXPCRegularIPCsClient *v68;
  _QWORD v69[5];
  id v70;
  id v71;
  uint64_t v72[3];
  _QWORD v73[5];
  id v74;
  uint64_t v75[3];
  _QWORD v76[5];
  id v77;
  uint64_t v78[3];
  void *v79;
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v81;
  __int16 v82;
  BRCXPCRegularIPCsClient *v83;
  __int16 v84;
  void *v85;
  __int16 v86;
  const char *v87;
  __int16 v88;
  BRCXPCRegularIPCsClient *v89;
  __int16 v90;
  void *v91;
  uint64_t v92;

  v92 = *MEMORY[0x1E0C80C00];
  v68 = (BRCXPCRegularIPCsClient *)a3;
  v9 = (BRCXPCRegularIPCsClient *)a4;
  v10 = a5;
  memset(v78, 0, sizeof(v78));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient simulateHealthIssueWithContainer:status:reply:]", 2439, v78);
  brc_bread_crumbs();
  v11 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v78[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v81 = (BRCXPCRegularIPCsClient *)v13;
    v82 = 2112;
    v83 = self;
    v84 = 2112;
    v85 = v15;
    v86 = 2080;
    v87 = "-[BRCXPCRegularIPCsClient simulateHealthIssueWithContainer:status:reply:]";
    v88 = 2112;
    v89 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v76[0] = MEMORY[0x1E0C809B0];
  v76[1] = 3221225472;
  v76[2] = __73__BRCXPCRegularIPCsClient_simulateHealthIssueWithContainer_status_reply___block_invoke;
  v76[3] = &unk_1E875FCF8;
  v76[4] = self;
  v16 = v10;
  v77 = v16;
  v17 = _brc_ipc_spi(self, 1, (uint64_t)a2, v76);

  if (v17)
  {
    memset(v75, 0, sizeof(v75));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient simulateHealthIssueWithContainer:status:reply:]", 2443, v75);
    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      v20 = v75[0];
      v21 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v21, (uint64_t)&brc_qos_entries, 0);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v81 = (BRCXPCRegularIPCsClient *)v20;
      v82 = 2112;
      v83 = self;
      v84 = 2112;
      v85 = v22;
      v86 = 2080;
      v87 = "-[BRCXPCRegularIPCsClient simulateHealthIssueWithContainer:status:reply:]";
      v88 = 2112;
      v89 = v68;
      v90 = 2112;
      v91 = v18;
      _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

    }
    if (v68)
      v23 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v68);
    else
      v23 = 0;
    v73[0] = MEMORY[0x1E0C809B0];
    v73[1] = 3221225472;
    v73[2] = __73__BRCXPCRegularIPCsClient_simulateHealthIssueWithContainer_status_reply___block_invoke_338;
    v73[3] = &unk_1E875FCF8;
    v73[4] = self;
    v25 = v16;
    v74 = v25;
    v26 = _brc_ipc_check_applibrary_write_access(self, 1, v23, v73);

    if (!v26)
    {
      v24 = v9;
LABEL_31:

      __brc_leave_section(v75);
      goto LABEL_32;
    }
    memset(v72, 0, sizeof(v72));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient simulateHealthIssueWithContainer:status:reply:]", 2444, v72);
    brc_bread_crumbs();
    v27 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v28 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
    {
      v66 = v16;
      v29 = v25;
      v30 = v23;
      v31 = v72[0];
      v32 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v32, (uint64_t)&brc_qos_entries, 0);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219010;
      v81 = (BRCXPCRegularIPCsClient *)v31;
      v82 = 2112;
      v83 = self;
      v84 = 2112;
      v85 = v33;
      v86 = 2080;
      v87 = "-[BRCXPCRegularIPCsClient simulateHealthIssueWithContainer:status:reply:]";
      v88 = 2112;
      v89 = v27;
      _os_log_impl(&dword_1CBD43000, v28, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s simulating health issue%@", buf, 0x34u);

      v23 = v30;
      v25 = v29;
      v16 = v66;
    }

    brc_bread_crumbs();
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v35 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412802;
      v81 = v68;
      v82 = 2112;
      v83 = v9;
      v84 = 2112;
      v85 = v34;
      _os_log_impl(&dword_1CBD43000, v35, OS_LOG_TYPE_DEFAULT, "[NOTICE] simulating health issue on %@: %@%@", buf, 0x20u);
    }

    -[BRCXPCClient session](self, "session");
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v65, "appLibraryByID:", v68);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v36, "defaultClientZone");
    v67 = (void *)objc_claimAutoreleasedReturnValue();

    if (v67)
    {
      -[BRCXPCRegularIPCsClient lowercaseString](v9, "lowercaseString");
      v24 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();

      if (-[BRCXPCRegularIPCsClient isEqualToString:](v24, "isEqualToString:", CFSTR("healthy")))
      {
        v37 = objc_alloc(MEMORY[0x1E0C95070]);
        objc_msgSend(v67, "zoneName");
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C95098], "brc_zoneHealthZoneID");
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        v40 = (void *)objc_msgSend(v37, "initWithRecordName:zoneID:", v38, v39);

        v41 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C95048]), "initWithRecordType:recordID:", CFSTR("zoneState"), v40);
        objc_msgSend(v41, "setObject:forKeyedSubscript:", &unk_1E87D74A8, CFSTR("state"));
        v42 = (void *)MEMORY[0x1E0CB37E8];
        objc_msgSend(MEMORY[0x1E0C99D68], "date");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v43, "timeIntervalSince1970");
        objc_msgSend(v42, "numberWithUnsignedLongLong:", (unint64_t)v44);
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v41, "setObject:forKeyedSubscript:", v45, CFSTR("updateTime"));

        objc_msgSend(v41, "setObject:forKeyedSubscript:", &stru_1E8769030, CFSTR("clientInfo"));
        objc_msgSend(v67, "zoneHealthState");
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v46, "ckInfo");
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v47, "setCKInfoFieldsInRecord:includeCZMEtag:", v41, 0);

        v48 = objc_alloc(MEMORY[0x1E0C94F10]);
        v79 = v41;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v79, 1);
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        v50 = (void *)objc_msgSend(v48, "initWithRecordsToSave:recordIDsToDelete:", v49, 0);

        objc_msgSend(MEMORY[0x1E0C94F88], "br_zoneHealthSimulation");
        v51 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v50, "setGroup:", v51);

        v52 = (void *)objc_opt_new();
        objc_msgSend(v50, "setConfiguration:", v52);

        objc_msgSend(v50, "configuration");
        v53 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v53, "setSourceApplicationBundleIdentifier:", *MEMORY[0x1E0D10E20]);

        v69[0] = MEMORY[0x1E0C809B0];
        v69[1] = 3221225472;
        v69[2] = __73__BRCXPCRegularIPCsClient_simulateHealthIssueWithContainer_status_reply___block_invoke_351;
        v69[3] = &unk_1E8765AC8;
        v69[4] = self;
        v71 = v25;
        v54 = v65;
        v70 = v54;
        objc_msgSend(v50, "setModifyRecordsCompletionBlock:", v69);
        objc_msgSend(v54, "syncContextProvider");
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v55, "zoneHealthSyncContext");
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v56, "addOperation:", v50);

        v9 = v24;
      }
      else
      {
        if (-[BRCXPCRegularIPCsClient isEqualToString:](v24, "isEqualToString:", CFSTR("partial")))
        {
          objc_msgSend(v67, "reportProblemWithType:recordName:", 6, CFSTR("root"));
          brc_bread_crumbs();
          v60 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v61 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v61, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412802;
            v81 = self;
            v82 = 2112;
            v83 = 0;
            v84 = 2112;
            v85 = v60;
            _os_log_impl(&dword_1CBD43000, v61, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
          }

          (*((void (**)(id, _QWORD))v25 + 2))(v25, 0);
          goto LABEL_30;
        }
        brc_bread_crumbs();
        v62 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v63 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v63, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("newStatus"), v24);
          v64 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v81 = self;
          v82 = 2112;
          v83 = v64;
          v84 = 2112;
          v85 = v62;
          _os_log_impl(&dword_1CBD43000, v63, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

        }
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("newStatus"), v24);
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, void *))v25 + 2))(v25, v40);
        v9 = v24;
      }
    }
    else
    {
      brc_bread_crumbs();
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v58 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v58, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", v68);
        v59 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v81 = self;
        v82 = 2112;
        v83 = v59;
        v84 = 2112;
        v85 = v57;
        _os_log_impl(&dword_1CBD43000, v58, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

      }
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", v68);
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *))v25 + 2))(v25, v40);
    }

    v24 = v9;
LABEL_30:

    __brc_leave_section(v72);
    goto LABEL_31;
  }
  v24 = v9;
LABEL_32:
  __brc_leave_section(v78);

}

void __73__BRCXPCRegularIPCsClient_simulateHealthIssueWithContainer_status_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __73__BRCXPCRegularIPCsClient_simulateHealthIssueWithContainer_status_reply___block_invoke_338(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __73__BRCXPCRegularIPCsClient_simulateHealthIssueWithContainer_status_reply___block_invoke_351(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = a4;
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v5, "brc_wrappedError");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138412802;
    v14 = v8;
    v15 = 2112;
    v16 = v9;
    v17 = 2112;
    v18 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v13, 0x20u);

  }
  v10 = *(_QWORD *)(a1 + 48);
  objc_msgSend(v5, "brc_wrappedError");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v11);

  objc_msgSend(*(id *)(a1 + 40), "containerScheduler");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "scheduleSyncDownForZoneHealthWithGroup:", 0);

}

- (void)healthStatusStringForContainer:(id)a3 reply:(id)a4
{
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  qos_class_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  int v16;
  void *v17;
  NSObject *v18;
  id v19;
  uint64_t v20;
  qos_class_t v21;
  void *v22;
  void *v23;
  id v24;
  int v25;
  void *v26;
  NSObject *v27;
  id v28;
  uint64_t v29;
  qos_class_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  char *v35;
  NSObject *v36;
  void *v37;
  BRCXPCRegularIPCsClient *v38;
  void *v39;
  void *v40;
  char *v41;
  NSObject *v42;
  void *v43;
  void *v44;
  uint64_t v45[3];
  _QWORD v46[5];
  id v47;
  uint64_t v48[3];
  _QWORD v49[5];
  id v50;
  uint64_t v51[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v53;
  __int16 v54;
  BRCXPCRegularIPCsClient *v55;
  __int16 v56;
  void *v57;
  __int16 v58;
  const char *v59;
  __int16 v60;
  void *v61;
  __int16 v62;
  void *v63;
  uint64_t v64;

  v64 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  memset(v51, 0, sizeof(v51));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient healthStatusStringForContainer:reply:]", 2493, v51);
  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = v51[0];
    v12 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v12, (uint64_t)&brc_qos_entries, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v53 = (BRCXPCRegularIPCsClient *)v11;
    v54 = 2112;
    v55 = self;
    v56 = 2112;
    v57 = v13;
    v58 = 2080;
    v59 = "-[BRCXPCRegularIPCsClient healthStatusStringForContainer:reply:]";
    v60 = 2112;
    v61 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v14 = MEMORY[0x1E0C809B0];
  v49[0] = MEMORY[0x1E0C809B0];
  v49[1] = 3221225472;
  v49[2] = __64__BRCXPCRegularIPCsClient_healthStatusStringForContainer_reply___block_invoke;
  v49[3] = &unk_1E875FCF8;
  v49[4] = self;
  v15 = v8;
  v50 = v15;
  v16 = _brc_ipc_spi(self, 1, (uint64_t)a2, v49);

  if (v16)
  {
    memset(v48, 0, sizeof(v48));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient healthStatusStringForContainer:reply:]", 2497, v48);
    brc_bread_crumbs();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      v19 = v7;
      v20 = v48[0];
      v21 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v21, (uint64_t)&brc_qos_entries, 0);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v53 = (BRCXPCRegularIPCsClient *)v20;
      v54 = 2112;
      v55 = self;
      v56 = 2112;
      v57 = v22;
      v58 = 2080;
      v59 = "-[BRCXPCRegularIPCsClient healthStatusStringForContainer:reply:]";
      v60 = 2112;
      v7 = v19;
      v61 = v19;
      v62 = 2112;
      v63 = v17;
      _os_log_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

    }
    if (v7)
      v23 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v7);
    else
      v23 = 0;
    v46[0] = v14;
    v46[1] = 3221225472;
    v46[2] = __64__BRCXPCRegularIPCsClient_healthStatusStringForContainer_reply___block_invoke_359;
    v46[3] = &unk_1E875FCF8;
    v46[4] = self;
    v24 = v15;
    v47 = v24;
    v44 = v23;
    v25 = _brc_ipc_check_applibrary_read_access(self, 1, v23, v46);

    if (v25)
    {
      memset(v45, 0, sizeof(v45));
      __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient healthStatusStringForContainer:reply:]", 2499, v45);
      brc_bread_crumbs();
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        v28 = v7;
        v29 = v45[0];
        v30 = qos_class_self();
        BRCPrettyPrintEnumWithContext(v30, (uint64_t)&brc_qos_entries, 0);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 134219266;
        v53 = (BRCXPCRegularIPCsClient *)v29;
        v54 = 2112;
        v55 = self;
        v56 = 2112;
        v57 = v31;
        v58 = 2080;
        v59 = "-[BRCXPCRegularIPCsClient healthStatusStringForContainer:reply:]";
        v60 = 2112;
        v7 = v28;
        v61 = v28;
        v62 = 2112;
        v63 = v26;
        _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s getting health status on %@%@", buf, 0x3Eu);

      }
      -[BRCXPCClient session](self, "session", v44);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v32, "appLibraryByID:", v7);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "defaultClientZone");
      v34 = (void *)objc_claimAutoreleasedReturnValue();

      if (v34)
      {
        brc_bread_crumbs();
        v35 = (char *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v36 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(v34, "zoneHealthState");
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          zoneHealthStateDescriptionForCode(objc_msgSend(v37, "state"));
          v38 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138413058;
          v53 = self;
          v54 = 2112;
          v55 = v38;
          v56 = 2112;
          v57 = 0;
          v58 = 2112;
          v59 = v35;
          _os_log_impl(&dword_1CBD43000, v36, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

        }
        objc_msgSend(v34, "zoneHealthState");
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        zoneHealthStateDescriptionForCode(objc_msgSend(v39, "state"));
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, void *, _QWORD))v24 + 2))(v24, v40, 0);

      }
      else
      {
        brc_bread_crumbs();
        v41 = (char *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v42 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", v7);
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138413058;
          v53 = self;
          v54 = 2112;
          v55 = 0;
          v56 = 2112;
          v57 = v43;
          v58 = 2112;
          v59 = v41;
          _os_log_impl(&dword_1CBD43000, v42, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

        }
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", v7);
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, _QWORD, void *))v24 + 2))(v24, 0, v39);
      }

      __brc_leave_section(v45);
    }

    __brc_leave_section(v48);
  }
  __brc_leave_section(v51);

}

void __64__BRCXPCRegularIPCsClient_healthStatusStringForContainer_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __64__BRCXPCRegularIPCsClient_healthStatusStringForContainer_reply___block_invoke_359(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)zoneNameForContainer:(id)a3 reply:(id)a4
{
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  qos_class_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  int v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  qos_class_t v20;
  void *v21;
  void *v22;
  id v23;
  int v24;
  void *v25;
  void *v26;
  void *v27;
  char *v28;
  NSObject *v29;
  BRCXPCRegularIPCsClient *v30;
  void *v31;
  char *v32;
  NSObject *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, void *);
  void *v38;
  BRCXPCRegularIPCsClient *v39;
  id v40;
  uint64_t v41[3];
  _QWORD v42[5];
  id v43;
  uint64_t v44[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v46;
  __int16 v47;
  BRCXPCRegularIPCsClient *v48;
  __int16 v49;
  void *v50;
  __int16 v51;
  const char *v52;
  __int16 v53;
  id v54;
  __int16 v55;
  void *v56;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  memset(v44, 0, sizeof(v44));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient zoneNameForContainer:reply:]", 2514, v44);
  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = v44[0];
    v12 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v12, (uint64_t)&brc_qos_entries, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v46 = (BRCXPCRegularIPCsClient *)v11;
    v47 = 2112;
    v48 = self;
    v49 = 2112;
    v50 = v13;
    v51 = 2080;
    v52 = "-[BRCXPCRegularIPCsClient zoneNameForContainer:reply:]";
    v53 = 2112;
    v54 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v14 = MEMORY[0x1E0C809B0];
  v42[0] = MEMORY[0x1E0C809B0];
  v42[1] = 3221225472;
  v42[2] = __54__BRCXPCRegularIPCsClient_zoneNameForContainer_reply___block_invoke;
  v42[3] = &unk_1E875FCF8;
  v42[4] = self;
  v15 = v8;
  v43 = v15;
  v16 = _brc_ipc_spi(self, 1, (uint64_t)a2, v42);

  if (v16)
  {
    memset(v41, 0, sizeof(v41));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient zoneNameForContainer:reply:]", 2518, v41);
    brc_bread_crumbs();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      v19 = v41[0];
      v20 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v20, (uint64_t)&brc_qos_entries, 0);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219266;
      v46 = (BRCXPCRegularIPCsClient *)v19;
      v47 = 2112;
      v48 = self;
      v49 = 2112;
      v50 = v21;
      v51 = 2080;
      v52 = "-[BRCXPCRegularIPCsClient zoneNameForContainer:reply:]";
      v53 = 2112;
      v54 = v7;
      v55 = 2112;
      v56 = v17;
      _os_log_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

    }
    if (v7)
      v22 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v7);
    else
      v22 = 0;
    v35 = v14;
    v36 = 3221225472;
    v37 = __54__BRCXPCRegularIPCsClient_zoneNameForContainer_reply___block_invoke_360;
    v38 = &unk_1E875FCF8;
    v39 = self;
    v23 = v15;
    v40 = v23;
    v24 = _brc_ipc_check_applibrary_read_access(self, 1, v22, &v35);

    if (v24)
    {
      -[BRCXPCClient session](self, "session", v35, v36, v37, v38, v39);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "appLibraryByID:", v7);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "defaultClientZone");
      v27 = (void *)objc_claimAutoreleasedReturnValue();

      if (v27)
      {
        brc_bread_crumbs();
        v28 = (char *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v29 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(v27, "zoneName");
          v30 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138413058;
          v46 = self;
          v47 = 2112;
          v48 = v30;
          v49 = 2112;
          v50 = 0;
          v51 = 2112;
          v52 = v28;
          _os_log_impl(&dword_1CBD43000, v29, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

        }
        objc_msgSend(v27, "zoneName");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, void *, _QWORD))v23 + 2))(v23, v31, 0);
      }
      else
      {
        brc_bread_crumbs();
        v32 = (char *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v33 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", v7);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138413058;
          v46 = self;
          v47 = 2112;
          v48 = 0;
          v49 = 2112;
          v50 = v34;
          v51 = 2112;
          v52 = v32;
          _os_log_impl(&dword_1CBD43000, v33, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

        }
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", v7);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, _QWORD, void *))v23 + 2))(v23, 0, v31);
      }

    }
    __brc_leave_section(v41);
  }
  __brc_leave_section(v44);

}

void __54__BRCXPCRegularIPCsClient_zoneNameForContainer_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __54__BRCXPCRegularIPCsClient_zoneNameForContainer_reply___block_invoke_360(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)forceSyncZoneHealthWithBarrierWithTimeout:(unint64_t)a3 reply:(id)a4
{
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  qos_class_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  id v13;
  int v14;
  void *v15;
  NSObject *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  NSObject *queue;
  id v24;
  dispatch_time_t v25;
  void *v26;
  NSObject *v27;
  BRCXPCRegularIPCsClient *v28;
  void *v29;
  NSObject *v30;
  void *v31;
  void *v32;
  __int128 v33;
  uint64_t v34;
  _QWORD block[5];
  id v36;
  uint64_t *v37;
  uint8_t *v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[4];
  NSObject *v42;
  uint8_t *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  uint64_t v51;
  _QWORD v52[5];
  id v53;
  uint64_t v54[3];
  uint8_t v55[4];
  BRCXPCRegularIPCsClient *v56;
  __int16 v57;
  void *v58;
  __int16 v59;
  void *v60;
  uint8_t buf[24];
  uint64_t (*v62)(uint64_t, uint64_t);
  _BYTE v63[20];
  uint64_t v64;

  v64 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  memset(v54, 0, sizeof(v54));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient forceSyncZoneHealthWithBarrierWithTimeout:reply:]", 2533, v54);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = v54[0];
    v10 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v10, (uint64_t)&brc_qos_entries, 0);
    v11 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    *(_QWORD *)&buf[4] = v9;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    *(_WORD *)&buf[22] = 2112;
    v62 = v11;
    *(_WORD *)v63 = 2080;
    *(_QWORD *)&v63[2] = "-[BRCXPCRegularIPCsClient forceSyncZoneHealthWithBarrierWithTimeout:reply:]";
    *(_WORD *)&v63[10] = 2112;
    *(_QWORD *)&v63[12] = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v12 = MEMORY[0x1E0C809B0];
  v52[0] = MEMORY[0x1E0C809B0];
  v52[1] = 3221225472;
  v52[2] = __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke;
  v52[3] = &unk_1E875FCF8;
  v52[4] = self;
  v13 = v6;
  v53 = v13;
  v14 = _brc_ipc_check_applibraries_access(self, 1, v52);

  if (v14)
  {
    memset(buf, 0, sizeof(buf));
    __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient forceSyncZoneHealthWithBarrierWithTimeout:reply:]", 2535, buf);
    brc_bread_crumbs();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient forceSyncZoneHealthWithBarrierWithTimeout:reply:].cold.2();

    v50 = *(_OWORD *)buf;
    v51 = *(_QWORD *)&buf[16];
    v46 = 0;
    v47 = &v46;
    v48 = 0x2020000000;
    v49 = 0;
    v17 = dispatch_group_create();
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x3032000000;
    v62 = __Block_byref_object_copy__48;
    *(_QWORD *)v63 = __Block_byref_object_dispose__48;
    *(_QWORD *)&v63[8] = 0;
    dispatch_group_enter(v17);
    -[BRCXPCClient session](self, "session");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "containerScheduler");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v41[0] = v12;
    v41[1] = 3221225472;
    v41[2] = __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke_361;
    v41[3] = &unk_1E875F058;
    v44 = v50;
    v45 = v51;
    v43 = buf;
    v20 = v17;
    v42 = v20;
    objc_msgSend(v19, "notifyAfterNextZoneHealthSyncDown:", v41);

    -[BRCXPCClient session](self, "session");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "containerScheduler");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "scheduleSyncDownForZoneHealthWithGroup:", 0);

    queue = self->super._queue;
    block[0] = v12;
    block[1] = 3221225472;
    block[2] = __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke_362;
    block[3] = &unk_1E8766570;
    v39 = v50;
    v40 = v51;
    block[4] = self;
    v37 = &v46;
    v38 = buf;
    v24 = v13;
    v36 = v24;
    dispatch_group_notify(v20, queue, block);
    if (a3)
    {
      v25 = dispatch_time(0, 1000000000 * a3);
      if (dispatch_group_wait(v20, v25))
      {
        v33 = v50;
        v34 = v51;
        brc_bread_crumbs();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v27 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
          -[BRCXPCRegularIPCsClient forceSyncZoneHealthWithBarrierWithTimeout:reply:].cold.1();

        v28 = self;
        objc_sync_enter(v28);
        if (!*((_BYTE *)v47 + 24))
        {
          *((_BYTE *)v47 + 24) = 1;
          brc_bread_crumbs();
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v30 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
          {
            objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:description:", 60, CFSTR("zone-health sync timed-out"), v33, v34);
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)v55 = 138412802;
            v56 = v28;
            v57 = 2112;
            v58 = v31;
            v59 = 2112;
            v60 = v29;
            _os_log_impl(&dword_1CBD43000, v30, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", v55, 0x20u);

          }
          objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:description:", 60, CFSTR("zone-health sync timed-out"));
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          (*((void (**)(id, void *))v24 + 2))(v24, v32);

        }
        objc_sync_exit(v28);

        __brc_leave_section((uint64_t *)&v33);
      }
    }

    _Block_object_dispose(buf, 8);
    _Block_object_dispose(&v46, 8);
  }
  __brc_leave_section(v54);

}

void __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke_361(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 v11;
  uint64_t v12;

  v3 = a2;
  v11 = *(_OWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 64);
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke_361_cold_2();

  if (v3)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke_361_cold_1();

    objc_msgSend(v3, "brc_wrappedError", v11, v12);
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  __brc_leave_section((uint64_t *)&v11);

}

void __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke_362(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint8_t buf[4];
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 80);
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke_362_cold_1();

  v4 = *(id *)(a1 + 32);
  objc_sync_enter(v4);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if (!*(_BYTE *)(v5 + 24))
  {
    *(_BYTE *)(v5 + 24) = 1;
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      *(_DWORD *)buf = 138412802;
      v14 = v8;
      v15 = 2112;
      v16 = v9;
      v17 = 2112;
      v18 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), v10);
  }
  objc_sync_exit(v4);

  __brc_leave_section((uint64_t *)&v11);
}

- (void)forceSyncWithBarrierContainerID:(id)a3 timeout:(unint64_t)a4 reply:(id)a5
{
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  qos_class_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  id v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  void *v21;
  NSObject *v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  NSObject *v29;
  void *v30;
  void *v31;
  id v32;
  NSObject *v33;
  NSObject *queue;
  id v35;
  dispatch_time_t v36;
  void *v37;
  NSObject *v38;
  BRCXPCRegularIPCsClient *v39;
  void *v40;
  NSObject *v41;
  void *v42;
  void *v43;
  void *v44;
  NSObject *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  NSObject *group;
  __int128 v52;
  uint64_t v53;
  _QWORD block[4];
  id v55;
  BRCXPCRegularIPCsClient *v56;
  id v57;
  _BYTE *v58;
  _BYTE *v59;
  _QWORD *v60;
  __int128 v61;
  uint64_t v62;
  _QWORD v63[4];
  id v64;
  NSObject *v65;
  _QWORD *v66;
  __int128 v67;
  uint64_t v68;
  _QWORD v69[4];
  id v70;
  NSObject *v71;
  _BYTE *v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _QWORD v77[5];
  id v78;
  _QWORD v79[5];
  id v80;
  uint64_t v81[3];
  uint8_t v82[24];
  void *v83;
  _BYTE v84[24];
  id v85;
  __int16 v86;
  void *v87;
  _QWORD v88[4];
  _BYTE buf[24];
  uint64_t (*v90)(uint64_t, uint64_t);
  _BYTE v91[20];
  uint64_t v92;

  v92 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a5;
  memset(v81, 0, sizeof(v81));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient forceSyncWithBarrierContainerID:timeout:reply:]", 2580, v81);
  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = v81[0];
    v12 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v12, (uint64_t)&brc_qos_entries, 0);
    v13 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    *(_QWORD *)&buf[4] = v11;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    *(_WORD *)&buf[22] = 2112;
    v90 = v13;
    *(_WORD *)v91 = 2080;
    *(_QWORD *)&v91[2] = "-[BRCXPCRegularIPCsClient forceSyncWithBarrierContainerID:timeout:reply:]";
    *(_WORD *)&v91[10] = 2112;
    *(_QWORD *)&v91[12] = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v14 = MEMORY[0x1E0C809B0];
  v79[0] = MEMORY[0x1E0C809B0];
  v79[1] = 3221225472;
  v79[2] = __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke;
  v79[3] = &unk_1E875FCF8;
  v79[4] = self;
  v15 = v8;
  v80 = v15;
  v16 = _brc_ipc_check_applibraries_access(self, 1, v79);

  if (v16)
  {
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x3032000000;
    v90 = __Block_byref_object_copy__48;
    *(_QWORD *)v91 = __Block_byref_object_dispose__48;
    *(_QWORD *)&v91[8] = 0;
    v77[0] = 0;
    v77[1] = v77;
    v77[2] = 0x3032000000;
    v77[3] = __Block_byref_object_copy__48;
    v77[4] = __Block_byref_object_dispose__48;
    v78 = 0;
    group = dispatch_group_create();
    v17 = *MEMORY[0x1E0D10DA0];
    v88[0] = *MEMORY[0x1E0D10DF0];
    v88[1] = v17;
    v18 = *MEMORY[0x1E0D11150];
    v88[2] = *MEMORY[0x1E0D10E20];
    v88[3] = v18;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v88, 4);
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v48, "containsObject:", v7);
    v20 = v19;
    if (v19)
    {
      brc_bread_crumbs();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
        -[BRCXPCRegularIPCsClient forceSyncWithBarrierContainerID:timeout:reply:].cold.1();

      v23 = v7;
      v49 = 0;
    }
    else
    {
      if (v7)
      {
        v24 = objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v7);
      }
      else
      {
        -[BRCXPCClient defaultMangledID](self, "defaultMangledID");
        v24 = objc_claimAutoreleasedReturnValue();
      }
      v25 = (id)v24;
      -[BRCXPCClient _setupAppLibrary:error:](self, "_setupAppLibrary:error:", v24, *(_QWORD *)&buf[8] + 40);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v26)
      {
        brc_bread_crumbs();
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v45 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v45, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(*(id *)(*(_QWORD *)&buf[8] + 40), "brc_wrappedError");
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)v84 = 138412802;
          *(_QWORD *)&v84[4] = self;
          *(_WORD *)&v84[12] = 2112;
          *(_QWORD *)&v84[14] = v46;
          *(_WORD *)&v84[22] = 2112;
          v85 = v44;
          _os_log_impl(&dword_1CBD43000, v45, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", v84, 0x20u);

        }
        objc_msgSend(*(id *)(*(_QWORD *)&buf[8] + 40), "brc_wrappedError");
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, void *))v15 + 2))(v15, v47);

        v49 = 0;
        goto LABEL_27;
      }
      -[BRCXPCClient addAppLibrary:](self, "addAppLibrary:", v26);
      objc_msgSend(v26, "defaultClientZone");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "zoneName");
      v23 = (id)objc_claimAutoreleasedReturnValue();
      v49 = v26;

    }
    memset(v82, 0, sizeof(v82));
    __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient forceSyncWithBarrierContainerID:timeout:reply:]", 2614, v82);
    brc_bread_crumbs();
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)v84 = 134218754;
      *(_QWORD *)&v84[4] = *(_QWORD *)v82;
      *(_WORD *)&v84[12] = 2112;
      *(_QWORD *)&v84[14] = v7;
      *(_WORD *)&v84[22] = 2112;
      v85 = v23;
      v86 = 2112;
      v87 = v28;
      _os_log_debug_impl(&dword_1CBD43000, v29, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx waiting for next sync down for %@ -> %@%@", v84, 0x2Au);
    }

    v75 = *(_OWORD *)v82;
    v76 = *(_QWORD *)&v82[16];
    if ((v20 & 1) == 0)
    {
      dispatch_group_enter(group);
      objc_msgSend(v49, "defaultClientZone");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      -[BRCXPCClient description](self, "description");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v69[0] = v14;
      v69[1] = 3221225472;
      v69[2] = __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke_365;
      v69[3] = &unk_1E8766598;
      v73 = v75;
      v74 = v76;
      v70 = v23;
      v72 = buf;
      v71 = group;
      objc_msgSend(v30, "notifyClient:afterNextSyncDown:", v31, v69);

    }
    dispatch_group_enter(group);
    v63[0] = v14;
    v63[1] = 3221225472;
    v63[2] = __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke_366;
    v63[3] = &unk_1E8766598;
    v67 = v75;
    v68 = v76;
    v32 = v23;
    v64 = v32;
    v66 = v77;
    v33 = group;
    v65 = v33;
    -[BRCXPCRegularIPCsClient forceSyncContainerID:reply:](self, "forceSyncContainerID:reply:", v32, v63);
    *(_QWORD *)v84 = 0;
    *(_QWORD *)&v84[8] = v84;
    *(_QWORD *)&v84[16] = 0x2020000000;
    LOBYTE(v85) = 0;
    queue = self->super._queue;
    block[0] = v14;
    block[1] = 3221225472;
    block[2] = __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke_367;
    block[3] = &unk_1E87665C0;
    v61 = v75;
    v62 = v76;
    v25 = v32;
    v55 = v25;
    v56 = self;
    v58 = v84;
    v59 = buf;
    v60 = v77;
    v35 = v15;
    v57 = v35;
    dispatch_group_notify(v33, queue, block);
    if (a4)
    {
      v36 = dispatch_time(0, 1000000000 * a4);
      if (dispatch_group_wait(v33, v36))
      {
        v52 = v75;
        v53 = v76;
        brc_bread_crumbs();
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v38 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)v82 = 134218498;
          *(_QWORD *)&v82[4] = v52;
          *(_WORD *)&v82[12] = 2112;
          *(_QWORD *)&v82[14] = v25;
          *(_WORD *)&v82[22] = 2112;
          v83 = v37;
          _os_log_debug_impl(&dword_1CBD43000, v38, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx timed-out: sync of %@%@", v82, 0x20u);
        }

        v39 = self;
        objc_sync_enter(v39);
        if (!*(_BYTE *)(*(_QWORD *)&v84[8] + 24))
        {
          *(_BYTE *)(*(_QWORD *)&v84[8] + 24) = 1;
          brc_bread_crumbs();
          v40 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v41 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
          {
            objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:description:", 60, CFSTR("sync-down timed out: %@"), v7);
            v42 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)v82 = 138412802;
            *(_QWORD *)&v82[4] = v39;
            *(_WORD *)&v82[12] = 2112;
            *(_QWORD *)&v82[14] = v42;
            *(_WORD *)&v82[22] = 2112;
            v83 = v40;
            _os_log_impl(&dword_1CBD43000, v41, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", v82, 0x20u);

          }
          objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:description:", 60, CFSTR("sync-down timed out: %@"), v7);
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          (*((void (**)(id, void *))v35 + 2))(v35, v43);

        }
        objc_sync_exit(v39);

        __brc_leave_section((uint64_t *)&v52);
      }
    }

    _Block_object_dispose(v84, 8);
LABEL_27:

    _Block_object_dispose(v77, 8);
    _Block_object_dispose(buf, 8);

  }
  __brc_leave_section(v81);

}

void __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke_365(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint8_t buf[4];
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v12 = *(_OWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 72);
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    v11 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 134218498;
    v15 = v12;
    v16 = 2112;
    v17 = v11;
    v18 = 2112;
    v19 = v4;
    _os_log_debug_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx finished sync down for %@%@", buf, 0x20u);
  }

  if (v3)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke_365_cold_1();

    objc_msgSend(v3, "brc_wrappedError");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  __brc_leave_section((uint64_t *)&v12);

}

void __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke_366(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint8_t buf[4];
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v12 = *(_OWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 72);
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    v11 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 134218498;
    v15 = v12;
    v16 = 2112;
    v17 = v11;
    v18 = 2112;
    v19 = v4;
    _os_log_debug_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx finished scheduling sync for %@%@", buf, 0x20u);
  }

  if (v3)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke_366_cold_1();

    objc_msgSend(v3, "brc_wrappedError");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  __brc_leave_section((uint64_t *)&v12);

}

void __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke_367(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint8_t buf[4];
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v12 = *(_OWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 96);
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    v11 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 134218498;
    v15 = v12;
    v16 = 2112;
    v17 = v11;
    v18 = 2112;
    v19 = v2;
    _os_log_debug_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx finished all sync down tasks for %@%@", buf, 0x20u);
  }

  v4 = *(id *)(a1 + 40);
  objc_sync_enter(v4);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  if (!*(_BYTE *)(v5 + 24))
  {
    *(_BYTE *)(v5 + 24) = 1;
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 40);
      v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
      if (!v9)
        v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40);
      *(_DWORD *)buf = 138412802;
      v15 = v8;
      v16 = 2112;
      v17 = v9;
      v18 = 2112;
      v19 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
    if (!v10)
      v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48), v10);
  }
  objc_sync_exit(v4);

  __brc_leave_section((uint64_t *)&v12);
}

- (void)forceSyncContainerID:(id)a3 reply:(id)a4
{
  void *v6;
  NSObject *v7;
  uint64_t v8;
  qos_class_t v9;
  void *v10;
  void *v11;
  char *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  int v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  void *v25;
  BRCXPCRegularIPCsClient *v26;
  int v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  void *v33;
  void *v34;
  BRCXPCRegularIPCsClient *v35;
  NSObject *v36;
  void *v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t j;
  void *v42;
  void *v43;
  NSObject *v44;
  BRCXPCRegularIPCsClient *v45;
  brc_task_tracker *tracker;
  void *v47;
  uint64_t v48;
  BRCXPCRegularIPCsClient *v49;
  NSObject *v50;
  void *v51;
  BRCXPCRegularIPCsClient *v52;
  NSObject *v53;
  void *v54;
  BRCXPCRegularIPCsClient *v55;
  NSObject *v56;
  void *v57;
  void *v58;
  NSObject *queue;
  void *v60;
  void *v61;
  NSObject *v62;
  BRCXPCRegularIPCsClient *v63;
  BRCXPCRegularIPCsClient *v64;
  void *v65;
  void *v66;
  int v67;
  int v68;
  int v69;
  void (**v70)(id, _QWORD);
  id v71;
  id obj;
  void *v73;
  _QWORD block[5];
  void (**v76)(id, _QWORD);
  _QWORD v77[4];
  NSObject *v78;
  _QWORD v79[5];
  NSObject *v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  BRCXPCRegularIPCsClient *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  id v90;
  uint64_t v91[3];
  _QWORD v92[5];
  uint64_t v93[3];
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t, uint64_t);
  void (*v98)(uint64_t);
  id v99;
  _BYTE v100[128];
  uint8_t v101[128];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v103;
  __int16 v104;
  BRCXPCRegularIPCsClient *v105;
  __int16 v106;
  id v107;
  __int16 v108;
  const char *v109;
  __int16 v110;
  void *v111;
  uint64_t v112;

  v112 = *MEMORY[0x1E0C80C00];
  v71 = a3;
  v70 = (void (**)(id, _QWORD))a4;
  v94 = 0;
  v95 = &v94;
  v96 = 0x3032000000;
  v97 = __Block_byref_object_copy__48;
  v98 = __Block_byref_object_dispose__48;
  v99 = 0;
  memset(v93, 0, sizeof(v93));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient forceSyncContainerID:reply:]", 2669, v93);
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = v93[0];
    v9 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v9, (uint64_t)&brc_qos_entries, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v103 = (BRCXPCRegularIPCsClient *)v8;
    v104 = 2112;
    v105 = self;
    v106 = 2112;
    v107 = v10;
    v108 = 2080;
    v109 = "-[BRCXPCRegularIPCsClient forceSyncContainerID:reply:]";
    v110 = 2112;
    v111 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v92[0] = MEMORY[0x1E0C809B0];
  v92[1] = 3221225472;
  v92[2] = __54__BRCXPCRegularIPCsClient_forceSyncContainerID_reply___block_invoke;
  v92[3] = &unk_1E875EB20;
  v92[4] = &v94;
  _brc_ipc_check_applibraries_access(self, 1, v92);
  v11 = (void *)v95[5];
  if (!v11)
    goto LABEL_6;
  if ((objc_msgSend(v11, "br_isCloudDocsErrorCode:", 16) & 1) == 0)
  {
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      goto LABEL_55;
    goto LABEL_56;
  }
  if (!-[BRCXPCClient _hasPrivateIPCEntitlementForSelector:error:](self, "_hasPrivateIPCEntitlementForSelector:error:", a2, 0))
  {
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
LABEL_55:
      v63 = (BRCXPCRegularIPCsClient *)v95[5];
      *(_DWORD *)buf = 138412802;
      v103 = self;
      v104 = 2112;
      v105 = v63;
      v106 = 2112;
      v107 = v23;
      _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }
LABEL_56:

    v70[2](v70, v95[5]);
    goto LABEL_57;
  }
LABEL_6:
  memset(v91, 0, sizeof(v91));
  __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient forceSyncContainerID:reply:]", 2684, v91);
  brc_bread_crumbs();
  v12 = (char *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134218754;
    v103 = (BRCXPCRegularIPCsClient *)v91[0];
    v104 = 2112;
    v105 = self;
    v106 = 2112;
    v107 = v71;
    v108 = 2112;
    v109 = v12;
    _os_log_debug_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx %@: force syncing containers matching '%@'%@", buf, 0x2Au);
  }

  if (v71)
  {
    objc_msgSend((id)*MEMORY[0x1E0D10DF0], "lowercaseString");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v71, "lowercaseString");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v14, "containsString:", v15);

    objc_msgSend((id)*MEMORY[0x1E0D10DA0], "lowercaseString");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v71, "lowercaseString");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v69 = objc_msgSend(v17, "containsString:", v18);

    objc_msgSend((id)*MEMORY[0x1E0D10E20], "lowercaseString");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v71, "lowercaseString");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v68 = objc_msgSend(v19, "containsString:", v20);

    objc_msgSend((id)*MEMORY[0x1E0D11150], "lowercaseString");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v71, "lowercaseString");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v67 = objc_msgSend(v21, "containsString:", v22);

  }
  else
  {
    v67 = 1;
    v68 = 1;
    v69 = 1;
    v16 = 1;
  }
  -[BRCXPCClient session](self, "session");
  v90 = 0;
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v73, "appLibrariesMatchingSearchString:error:", v71, &v90);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = (BRCXPCRegularIPCsClient *)v90;
  v66 = v25;
  if (v25)
    v27 = 1;
  else
    v27 = v16;
  if (((v27 | v69 | v68 | v67) & 1) != 0)
  {
    v28 = (void *)objc_opt_new();
    v88 = 0u;
    v89 = 0u;
    v86 = 0u;
    v87 = 0u;
    v29 = v25;
    v30 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v86, v101, 16);
    if (v30)
    {
      v31 = *(_QWORD *)v87;
      do
      {
        for (i = 0; i != v30; ++i)
        {
          if (*(_QWORD *)v87 != v31)
            objc_enumerationMutation(v29);
          v33 = *(void **)(*((_QWORD *)&v86 + 1) + 8 * i);
          -[BRCXPCClient addAppLibrary:](self, "addAppLibrary:", v33);
          objc_msgSend(v33, "defaultClientZone");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "addObject:", v34);

        }
        v30 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v86, v101, 16);
      }
      while (v30);
    }

    v85 = v26;
    objc_msgSend(v73, "clientZonesMatchingSearchString:error:", v71, &v85);
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    v64 = v85;

    objc_msgSend(v28, "addObjectsFromArray:", v65);
    if (v16)
    {
      brc_bread_crumbs();
      v35 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v36 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v103 = self;
        v104 = 2112;
        v105 = v35;
        _os_log_impl(&dword_1CBD43000, v36, OS_LOG_TYPE_DEFAULT, "[NOTICE] %@: force syncing shared database%@", buf, 0x16u);
      }

      objc_msgSend(v73, "containerScheduler");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v37, "scheduleSyncDownForSharedDatabaseImmediately:", 1);

    }
    v38 = dispatch_group_create();
    v81 = 0u;
    v82 = 0u;
    v83 = 0u;
    v84 = 0u;
    obj = v28;
    v39 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v81, v100, 16);
    if (v39)
    {
      v40 = *(_QWORD *)v82;
      do
      {
        for (j = 0; j != v39; ++j)
        {
          if (*(_QWORD *)v82 != v40)
            objc_enumerationMutation(obj);
          v42 = *(void **)(*((_QWORD *)&v81 + 1) + 8 * j);
          brc_bread_crumbs();
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v44 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
          {
            objc_msgSend(v42, "mangledID");
            v45 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412802;
            v103 = self;
            v104 = 2112;
            v105 = v45;
            v106 = 2112;
            v107 = v43;
            _os_log_impl(&dword_1CBD43000, v44, OS_LOG_TYPE_DEFAULT, "[NOTICE] %@: force syncing %@%@", buf, 0x20u);

          }
          dispatch_group_enter(v38);
          tracker = self->super._tracker;
          objc_msgSend(v73, "clientTruthWorkloop");
          v47 = (void *)objc_claimAutoreleasedReturnValue();
          v48 = MEMORY[0x1E0C809B0];
          v79[0] = MEMORY[0x1E0C809B0];
          v79[1] = 3221225472;
          v79[2] = __54__BRCXPCRegularIPCsClient_forceSyncContainerID_reply___block_invoke_370;
          v79[3] = &unk_1E875D470;
          v79[4] = v42;
          v80 = v38;
          v77[0] = v48;
          v77[1] = 3221225472;
          v77[2] = __54__BRCXPCRegularIPCsClient_forceSyncContainerID_reply___block_invoke_2;
          v77[3] = &unk_1E875D500;
          v78 = v80;
          brc_task_tracker_async_with_logs(tracker, v47, v79, v77);

        }
        v39 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v81, v100, 16);
      }
      while (v39);
    }

    if (v69)
    {
      brc_bread_crumbs();
      v49 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v50 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v103 = self;
        v104 = 2112;
        v105 = v49;
        _os_log_impl(&dword_1CBD43000, v50, OS_LOG_TYPE_DEFAULT, "[NOTICE] %@: force syncing container metadata%@", buf, 0x16u);
      }

      objc_msgSend(v73, "containerScheduler");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "scheduleSyncDownForContainerMetadataWithGroup:", 0);

    }
    if (v68)
    {
      brc_bread_crumbs();
      v52 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v53 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v103 = self;
        v104 = 2112;
        v105 = v52;
        _os_log_impl(&dword_1CBD43000, v53, OS_LOG_TYPE_DEFAULT, "[NOTICE] %@: forcing syncing zone health%@", buf, 0x16u);
      }

      objc_msgSend(v73, "containerScheduler");
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v54, "scheduleSyncDownForZoneHealthWithGroup:", 0);

    }
    if (v67)
    {
      brc_bread_crumbs();
      v55 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v56 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v103 = self;
        v104 = 2112;
        v105 = v55;
        _os_log_impl(&dword_1CBD43000, v56, OS_LOG_TYPE_DEFAULT, "[NOTICE] %@: forcing syncing side car zone%@", buf, 0x16u);
      }

      objc_msgSend(v73, "containerScheduler");
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C94F88], "br_syncDownPushTriggered");
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v57, "scheduleSyncDownForSideCarWithGroup:", v58);

    }
    queue = self->super._queue;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __54__BRCXPCRegularIPCsClient_forceSyncContainerID_reply___block_invoke_371;
    block[3] = &unk_1E875EAA8;
    block[4] = self;
    v76 = v70;
    dispatch_group_notify(v38, queue, block);

    v26 = v64;
    v60 = v66;
  }
  else
  {
    brc_bread_crumbs();
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v62 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v62, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v103 = self;
      v104 = 2112;
      v105 = v26;
      v106 = 2112;
      v107 = v61;
      _os_log_impl(&dword_1CBD43000, v62, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    ((void (**)(id, BRCXPCRegularIPCsClient *))v70)[2](v70, v26);
    v60 = v66;
  }

  __brc_leave_section(v91);
LABEL_57:
  __brc_leave_section(v93);
  _Block_object_dispose(&v94, 8);

}

void __54__BRCXPCRegularIPCsClient_forceSyncContainerID_reply___block_invoke(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void __54__BRCXPCRegularIPCsClient_forceSyncContainerID_reply___block_invoke_370(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "resetSyncBudgetAndThrottle");
  objc_msgSend(*(id *)(a1 + 32), "clearStateBits:", 0x200000);
  objc_msgSend(*(id *)(a1 + 32), "scheduleSyncDown");
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void __54__BRCXPCRegularIPCsClient_forceSyncContainerID_reply___block_invoke_2(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t __54__BRCXPCRegularIPCsClient_forceSyncContainerID_reply___block_invoke_371(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412802;
    v7 = v4;
    v8 = 2112;
    v9 = 0;
    v10 = 2112;
    v11 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v6, 0x20u);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)iWorkForceSyncContainerID:(id)a3 ownedByMe:(BOOL)a4 reply:(id)a5
{
  _BOOL4 v6;
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  qos_class_t v13;
  void *v14;
  void *v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  void *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  brc_task_tracker *tracker;
  void *v26;
  id v27;
  void *v28;
  NSObject *v29;
  BRCXPCRegularIPCsClient *v30;
  void *v31;
  void *v32;
  NSObject *v33;
  void *v34;
  _QWORD v35[4];
  id v36;
  uint64_t v37[3];
  _QWORD v38[5];
  id v39;
  uint64_t v40[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v42;
  __int16 v43;
  BRCXPCRegularIPCsClient *v44;
  __int16 v45;
  id v46;
  __int16 v47;
  _BYTE v48[18];
  uint64_t v49;

  v6 = a4;
  v49 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  memset(v40, 0, sizeof(v40));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient iWorkForceSyncContainerID:ownedByMe:reply:]", 2754, v40);
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = v40[0];
    v13 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v13, (uint64_t)&brc_qos_entries, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v42 = (BRCXPCRegularIPCsClient *)v12;
    v43 = 2112;
    v44 = self;
    v45 = 2112;
    v46 = v14;
    v47 = 2080;
    *(_QWORD *)v48 = "-[BRCXPCRegularIPCsClient iWorkForceSyncContainerID:ownedByMe:reply:]";
    *(_WORD *)&v48[8] = 2112;
    *(_QWORD *)&v48[10] = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "isSharingPrivateInterfaceEntitled");
  v17 = MEMORY[0x1E0C809B0];
  v38[0] = MEMORY[0x1E0C809B0];
  v38[1] = 3221225472;
  v38[2] = __69__BRCXPCRegularIPCsClient_iWorkForceSyncContainerID_ownedByMe_reply___block_invoke;
  v38[3] = &unk_1E875FCF8;
  v38[4] = self;
  v18 = v9;
  v39 = v18;
  v19 = _brc_ipc_check_client_privilege(self, 1, v16, (uint64_t)"isSharingPrivateInterfaceEntitled", v38);

  if ((v19 & 1) != 0)
  {
    memset(v37, 0, sizeof(v37));
    __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient iWorkForceSyncContainerID:ownedByMe:reply:]", 2756, v37);
    brc_bread_crumbs();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134219010;
      v42 = (BRCXPCRegularIPCsClient *)v37[0];
      v43 = 2112;
      v44 = self;
      v45 = 2112;
      v46 = v8;
      v47 = 1024;
      *(_DWORD *)v48 = v6;
      *(_WORD *)&v48[4] = 2112;
      *(_QWORD *)&v48[6] = v20;
      _os_log_debug_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx %@: iWork force syncing containers matching '%@' ownedByMe:%d%@", buf, 0x30u);
    }

    -[BRCXPCClient session](self, "session");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = v22;
    if (v6)
    {
      objc_msgSend(v22, "appLibraryByID:", v8);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      tracker = self->super._tracker;
      objc_msgSend(v23, "clientTruthWorkloop");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v35[0] = v17;
      v35[1] = 3221225472;
      v35[2] = __69__BRCXPCRegularIPCsClient_iWorkForceSyncContainerID_ownedByMe_reply___block_invoke_372;
      v35[3] = &unk_1E875D500;
      v27 = v24;
      v36 = v27;
      brc_task_tracker_async_with_logs(tracker, v26, v35, 0);

      brc_bread_crumbs();
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v29 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
      {
        if (v8)
        {
          v30 = 0;
        }
        else
        {
          objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", 0);
          v30 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
        }
        *(_DWORD *)buf = 138412802;
        v42 = self;
        v43 = 2112;
        v44 = v30;
        v45 = 2112;
        v46 = v28;
        _os_log_impl(&dword_1CBD43000, v29, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
        if (!v8)

      }
      if (v8)
      {
        v34 = 0;
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", 0);
        v34 = (void *)objc_claimAutoreleasedReturnValue();
      }
      (*((void (**)(id, void *))v18 + 2))(v18, v34);
      if (!v8)

    }
    else
    {
      objc_msgSend(v22, "containerScheduler");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v31, "scheduleSyncDownForSharedDatabaseImmediately:", 1);

      brc_bread_crumbs();
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v33 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412802;
        v42 = self;
        v43 = 2112;
        v44 = 0;
        v45 = 2112;
        v46 = v32;
        _os_log_impl(&dword_1CBD43000, v33, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
      }

      (*((void (**)(id, _QWORD))v18 + 2))(v18, 0);
    }

    __brc_leave_section(v37);
  }
  __brc_leave_section(v40);

}

void __69__BRCXPCRegularIPCsClient_iWorkForceSyncContainerID_ownedByMe_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __69__BRCXPCRegularIPCsClient_iWorkForceSyncContainerID_ownedByMe_reply___block_invoke_372(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "defaultClientZone");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "scheduleSyncDown");

}

- (void)createContainerWithID:(id)a3 ownerName:(id)a4 reply:(id)a5
{
  id v9;
  id v10;
  id v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  qos_class_t v15;
  void *v16;
  id v17;
  int v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  NSObject *v24;
  _QWORD v25[5];
  id v26;
  uint64_t v27[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  BRCXPCRegularIPCsClient *v31;
  __int16 v32;
  void *v33;
  __int16 v34;
  const char *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  v11 = a5;
  memset(v27, 0, sizeof(v27));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient createContainerWithID:ownerName:reply:]", 2776, v27);
  brc_bread_crumbs();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    v14 = v27[0];
    v15 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v15, (uint64_t)&brc_qos_entries, 0);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v29 = (BRCXPCRegularIPCsClient *)v14;
    v30 = 2112;
    v31 = self;
    v32 = 2112;
    v33 = v16;
    v34 = 2080;
    v35 = "-[BRCXPCRegularIPCsClient createContainerWithID:ownerName:reply:]";
    v36 = 2112;
    v37 = v12;
    _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __65__BRCXPCRegularIPCsClient_createContainerWithID_ownerName_reply___block_invoke;
  v25[3] = &unk_1E875FCF8;
  v25[4] = self;
  v17 = v11;
  v26 = v17;
  v18 = _brc_ipc_spi(self, 1, (uint64_t)a2, v25);

  if (v18)
  {
    -[BRCXPCClient session](self, "session");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithZoneName:ownerName:", v9, v10);
    if (objc_msgSend(v20, "isShared"))
      v21 = (id)objc_msgSend(v19, "getOrCreateSharedZones:", v20);
    else
      v22 = (id)objc_msgSend(v19, "getOrCreateAppLibraryAndPrivateZonesIfNecessary:", v20);
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v29 = self;
      v30 = 2112;
      v31 = 0;
      v32 = 2112;
      v33 = v23;
      _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v17 + 2))(v17, 0);
  }
  __brc_leave_section(v27);

}

void __65__BRCXPCRegularIPCsClient_createContainerWithID_ownerName_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)computePurgeableSpaceForAllUrgenciesWithReply:(id)a3
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  qos_class_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  int v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  char *v18;
  void *v19;
  _QWORD v20[5];
  id v21;
  _QWORD v22[5];
  id v23;
  uint64_t v24[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v26;
  __int16 v27;
  BRCXPCRegularIPCsClient *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  const char *v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  memset(v24, 0, sizeof(v24));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient computePurgeableSpaceForAllUrgenciesWithReply:]", 2795, v24);
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = v24[0];
    v9 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v9, (uint64_t)&brc_qos_entries, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v26 = (BRCXPCRegularIPCsClient *)v8;
    v27 = 2112;
    v28 = self;
    v29 = 2112;
    v30 = v10;
    v31 = 2080;
    v32 = "-[BRCXPCRegularIPCsClient computePurgeableSpaceForAllUrgenciesWithReply:]";
    v33 = 2112;
    v34 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v11 = MEMORY[0x1E0C809B0];
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __73__BRCXPCRegularIPCsClient_computePurgeableSpaceForAllUrgenciesWithReply___block_invoke;
  v22[3] = &unk_1E875FCF8;
  v22[4] = self;
  v12 = v5;
  v23 = v12;
  v13 = _brc_ipc_spi(self, 1, (uint64_t)a2, v22);

  if (v13)
  {
    -[BRCXPCClient session](self, "session");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "diskReclaimer");
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      v20[0] = v11;
      v20[1] = 3221225472;
      v20[2] = __73__BRCXPCRegularIPCsClient_computePurgeableSpaceForAllUrgenciesWithReply___block_invoke_373;
      v20[3] = &unk_1E87665E8;
      v20[4] = self;
      v21 = v12;
      objc_msgSend(v15, "computePurgeableSpaceForAllUrgenciesWithReply:", v20);

    }
    else
    {
      brc_bread_crumbs();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorLoggedOut");
        v18 = (char *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413314;
        v26 = self;
        v27 = 2112;
        v28 = 0;
        v29 = 2112;
        v30 = 0;
        v31 = 2112;
        v32 = v18;
        v33 = 2112;
        v34 = v16;
        _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);

      }
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorLoggedOut");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, _QWORD, void *))v12 + 2))(v12, 0, 0, v19);

    }
  }
  __brc_leave_section(v24);

}

void __73__BRCXPCRegularIPCsClient_computePurgeableSpaceForAllUrgenciesWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __73__BRCXPCRegularIPCsClient_computePurgeableSpaceForAllUrgenciesWithReply___block_invoke_373(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  id v18;
  __int16 v19;
  id v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v9 = a4;
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = *(_QWORD *)(a1 + 32);
    v13 = 138413314;
    v14 = v12;
    v15 = 2112;
    v16 = v7;
    v17 = 2112;
    v18 = v8;
    v19 = 2112;
    v20 = v9;
    v21 = 2112;
    v22 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v13, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)purgeAmount:(int64_t)a3 withUrgency:(int)a4 reply:(id)a5
{
  uint64_t v5;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  qos_class_t v13;
  void *v14;
  id v15;
  int v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  _QWORD v22[5];
  id v23;
  uint64_t v24[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v26;
  __int16 v27;
  BRCXPCRegularIPCsClient *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  const char *v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v5 = *(_QWORD *)&a4;
  v35 = *MEMORY[0x1E0C80C00];
  v9 = a5;
  memset(v24, 0, sizeof(v24));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient purgeAmount:withUrgency:reply:]", 2813, v24);
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = v24[0];
    v13 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v13, (uint64_t)&brc_qos_entries, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v26 = (BRCXPCRegularIPCsClient *)v12;
    v27 = 2112;
    v28 = self;
    v29 = 2112;
    v30 = v14;
    v31 = 2080;
    v32 = "-[BRCXPCRegularIPCsClient purgeAmount:withUrgency:reply:]";
    v33 = 2112;
    v34 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __57__BRCXPCRegularIPCsClient_purgeAmount_withUrgency_reply___block_invoke;
  v22[3] = &unk_1E875FCF8;
  v22[4] = self;
  v15 = v9;
  v23 = v15;
  v16 = _brc_ipc_spi(self, 1, (uint64_t)a2, v22);

  if (v16)
  {
    -[BRCXPCClient session](self, "session");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "diskReclaimer");
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    v19 = objc_msgSend(v18, "purgeSpace:withUrgency:", a3, v5);
    brc_bread_crumbs();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v26 = self;
      v27 = 2048;
      v28 = (BRCXPCRegularIPCsClient *)v19;
      v29 = 2112;
      v30 = v20;
      _os_log_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%lld)%@", buf, 0x20u);
    }

    (*((void (**)(id, uint64_t))v15 + 2))(v15, v19);
  }
  __brc_leave_section(v24);

}

uint64_t __57__BRCXPCRegularIPCsClient_purgeAmount_withUrgency_reply___block_invoke(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  __int16 v8;
  int v9;
  __int16 v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412802;
    v7 = v4;
    v8 = 1024;
    v9 = 0;
    v10 = 2112;
    v11 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d)%@", (uint8_t *)&v6, 0x1Cu);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)reclaimAmount:(int64_t)a3 withUrgency:(int)a4 reply:(id)a5
{
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  id v13;
  int v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  _QWORD v20[5];
  id v21;
  uint64_t v22[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v24;
  __int16 v25;
  BRCXPCRegularIPCsClient *v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  const char *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v7 = a5;
  memset(v22, 0, sizeof(v22));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient reclaimAmount:withUrgency:reply:]", 2823, v22);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v22[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v24 = (BRCXPCRegularIPCsClient *)v10;
    v25 = 2112;
    v26 = self;
    v27 = 2112;
    v28 = v12;
    v29 = 2080;
    v30 = "-[BRCXPCRegularIPCsClient reclaimAmount:withUrgency:reply:]";
    v31 = 2112;
    v32 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __59__BRCXPCRegularIPCsClient_reclaimAmount_withUrgency_reply___block_invoke;
  v20[3] = &unk_1E875FCF8;
  v20[4] = self;
  v13 = v7;
  v21 = v13;
  v14 = _brc_ipc_spi(self, 1, (uint64_t)a2, v20);

  if (v14)
  {
    -[BRCXPCClient session](self, "session");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "diskReclaimer");
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v17 = objc_msgSend(v16, "periodicReclaimSpace");
    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v24 = self;
      v25 = 2048;
      v26 = (BRCXPCRegularIPCsClient *)v17;
      v27 = 2112;
      v28 = v18;
      _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%lld)%@", buf, 0x20u);
    }

    (*((void (**)(id, uint64_t))v13 + 2))(v13, v17);
  }
  __brc_leave_section(v22);

}

uint64_t __59__BRCXPCRegularIPCsClient_reclaimAmount_withUrgency_reply___block_invoke(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  __int16 v8;
  int v9;
  __int16 v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412802;
    v7 = v4;
    v8 = 1024;
    v9 = 0;
    v10 = 2112;
    v11 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d)%@", (uint8_t *)&v6, 0x1Cu);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)dropSpotlightIndexWithReply:(id)a3
{
  +[BRCRecentsEnumerator dropLegacyCoreSpotlightIndexIfNeededWithCompletionHandler:](BRCRecentsEnumerator, "dropLegacyCoreSpotlightIndexIfNeededWithCompletionHandler:", a3);
}

- (void)launchSyncConsistencyChecksWithContainerIDs:(id)a3 reply:(id)a4
{
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  qos_class_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  dispatch_time_t v25;
  void *v26;
  NSObject *v27;
  char *v28;
  void *v29;
  void *v30;
  id v31;
  _QWORD v32[5];
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _QWORD v38[5];
  id v39;
  uint64_t v40[3];
  uint8_t v41[128];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v43;
  __int16 v44;
  BRCXPCRegularIPCsClient *v45;
  __int16 v46;
  void *v47;
  __int16 v48;
  const char *v49;
  __int16 v50;
  void *v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v31 = a3;
  v6 = a4;
  memset(v40, 0, sizeof(v40));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient launchSyncConsistencyChecksWithContainerIDs:reply:]", 2846, v40);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = v40[0];
    v10 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v10, (uint64_t)&brc_qos_entries, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v43 = (BRCXPCRegularIPCsClient *)v9;
    v44 = 2112;
    v45 = self;
    v46 = 2112;
    v47 = v11;
    v48 = 2080;
    v49 = "-[BRCXPCRegularIPCsClient launchSyncConsistencyChecksWithContainerIDs:reply:]";
    v50 = 2112;
    v51 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v12 = (void *)*MEMORY[0x1E0D10C28];
  v38[0] = MEMORY[0x1E0C809B0];
  v38[1] = 3221225472;
  v38[2] = __77__BRCXPCRegularIPCsClient_launchSyncConsistencyChecksWithContainerIDs_reply___block_invoke;
  v38[3] = &unk_1E875FCF8;
  v38[4] = self;
  v13 = v6;
  v39 = v13;
  LODWORD(v12) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v12, v38);

  if ((_DWORD)v12)
  {
    -[BRCXPCClient session](self, "session");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v31, "count"));
    v36 = 0u;
    v37 = 0u;
    v34 = 0u;
    v35 = 0u;
    v15 = v31;
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
    if (v16)
    {
      v17 = *(_QWORD *)v35;
      while (2)
      {
        v18 = 0;
        do
        {
          if (*(_QWORD *)v35 != v17)
            objc_enumerationMutation(v15);
          v19 = *(_QWORD *)(*((_QWORD *)&v34 + 1) + 8 * v18);
          v20 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v19);
          v21 = v20;
          if (!v20)
          {
            brc_bread_crumbs();
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            brc_default_log();
            v27 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
            {
              objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", v19);
              v28 = (char *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138413314;
              v43 = self;
              v44 = 2112;
              v45 = 0;
              v46 = 2112;
              v47 = 0;
              v48 = 2112;
              v49 = v28;
              v50 = 2112;
              v51 = v26;
              _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);

            }
            objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", v19);
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            (*((void (**)(id, _QWORD, _QWORD, void *))v13 + 2))(v13, 0, 0, v29);

            goto LABEL_16;
          }
          objc_msgSend(v20, "mangledIDString");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "addObject:", v22);

          ++v18;
        }
        while (v16 != v18);
        v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
        if (v16)
          continue;
        break;
      }
    }

    objc_msgSend(v30, "applyScheduler");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "hasActiveWorkGroup");
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = dispatch_time(0, 10000000000);
    dispatch_group_wait(v24, v25);

    v32[0] = MEMORY[0x1E0C809B0];
    v32[1] = 3221225472;
    v32[2] = __77__BRCXPCRegularIPCsClient_launchSyncConsistencyChecksWithContainerIDs_reply___block_invoke_377;
    v32[3] = &unk_1E8766610;
    v32[4] = self;
    v33 = v13;
    +[BRCSyncConsistencyReport generateReportWithSession:mangledIDs:completion:](BRCSyncConsistencyReport, "generateReportWithSession:mangledIDs:completion:", v30, v14, v32);

LABEL_16:
  }
  __brc_leave_section(v40);

}

void __77__BRCXPCRegularIPCsClient_launchSyncConsistencyChecksWithContainerIDs_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __77__BRCXPCRegularIPCsClient_launchSyncConsistencyChecksWithContainerIDs_reply___block_invoke_377(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint8_t buf[4];
  uint64_t v37;
  __int16 v38;
  void *v39;
  __int16 v40;
  void *v41;
  __int16 v42;
  void *v43;
  __int16 v44;
  void *v45;
  _BYTE v46[128];
  _BYTE v47[128];
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = objc_alloc(MEMORY[0x1E0C99DE8]);
  objc_msgSend(v3, "telemetryErrorEvents");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithCapacity:", objc_msgSend(v5, "count"));

  v7 = objc_alloc(MEMORY[0x1E0C99DE8]);
  objc_msgSend(v3, "telemetryWarningEvents");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithCapacity:", objc_msgSend(v8, "count"));

  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  objc_msgSend(v3, "telemetryErrorEvents");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v32, v47, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v33;
    do
    {
      v14 = 0;
      do
      {
        if (*(_QWORD *)v33 != v13)
          objc_enumerationMutation(v10);
        objc_msgSend(*(id *)(*((_QWORD *)&v32 + 1) + 8 * v14), "data");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "addObject:", v15);

        ++v14;
      }
      while (v12 != v14);
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v32, v47, 16);
    }
    while (v12);
  }

  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  objc_msgSend(v3, "telemetryWarningEvents", 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v28, v46, 16);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)v29;
    do
    {
      v20 = 0;
      do
      {
        if (*(_QWORD *)v29 != v19)
          objc_enumerationMutation(v16);
        objc_msgSend(*(id *)(*((_QWORD *)&v28 + 1) + 8 * v20), "data");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "addObject:", v21);

        ++v20;
      }
      while (v18 != v20);
      v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v28, v46, 16);
    }
    while (v18);
  }

  brc_bread_crumbs();
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v23 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
  {
    v24 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v3, "lastError");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413314;
    v37 = v24;
    v38 = 2112;
    v39 = v6;
    v40 = 2112;
    v41 = v9;
    v42 = 2112;
    v43 = v25;
    v44 = 2112;
    v45 = v22;
    _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);

  }
  v26 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v3, "lastError");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *, void *))(v26 + 16))(v26, v6, v9, v27);

}

- (void)pauseSyncConsistencyWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  _QWORD v16[5];
  id v17;
  uint64_t v18[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v20;
  __int16 v21;
  BRCXPCRegularIPCsClient *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  const char *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v18, 0, sizeof(v18));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient pauseSyncConsistencyWithReply:]", 2882, v18);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v18[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v20 = (BRCXPCRegularIPCsClient *)v7;
    v21 = 2112;
    v22 = self;
    v23 = 2112;
    v24 = v9;
    v25 = 2080;
    v26 = "-[BRCXPCRegularIPCsClient pauseSyncConsistencyWithReply:]";
    v27 = 2112;
    v28 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = (void *)*MEMORY[0x1E0D10C28];
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __57__BRCXPCRegularIPCsClient_pauseSyncConsistencyWithReply___block_invoke;
  v16[3] = &unk_1E875FCF8;
  v16[4] = self;
  v11 = v4;
  v17 = v11;
  LODWORD(v10) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v10, v16);

  if ((_DWORD)v10)
  {
    BRDiskCheckerServiceConnection();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "remoteObjectProxy");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "pauseTreeConsistencyCheck");

    brc_bread_crumbs();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v20 = self;
      v21 = 2112;
      v22 = 0;
      v23 = 2112;
      v24 = v14;
      _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v11 + 2))(v11, 0);
  }
  __brc_leave_section(v18);

}

void __57__BRCXPCRegularIPCsClient_pauseSyncConsistencyWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)resumeSyncConsistencyWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  _QWORD v16[5];
  id v17;
  _QWORD v18[5];
  id v19;
  _QWORD v20[5];
  id v21;
  uint64_t v22[3];
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  BRCXPCRegularIPCsClient *v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  const char *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v22, 0, sizeof(v22));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient resumeSyncConsistencyWithReply:]", 2894, v22);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v22[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v24 = v7;
    v25 = 2112;
    v26 = self;
    v27 = 2112;
    v28 = v9;
    v29 = 2080;
    v30 = "-[BRCXPCRegularIPCsClient resumeSyncConsistencyWithReply:]";
    v31 = 2112;
    v32 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = MEMORY[0x1E0C809B0];
  v11 = (void *)*MEMORY[0x1E0D10C28];
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __58__BRCXPCRegularIPCsClient_resumeSyncConsistencyWithReply___block_invoke;
  v20[3] = &unk_1E875FCF8;
  v20[4] = self;
  v12 = v4;
  v21 = v12;
  LODWORD(v11) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v11, v20);

  if ((_DWORD)v11)
  {
    BRDiskCheckerServiceConnection();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v18[0] = v10;
    v18[1] = 3221225472;
    v18[2] = __58__BRCXPCRegularIPCsClient_resumeSyncConsistencyWithReply___block_invoke_379;
    v18[3] = &unk_1E875FCF8;
    v18[4] = self;
    v14 = v12;
    v19 = v14;
    objc_msgSend(v13, "remoteObjectProxyWithErrorHandler:", v18);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16[0] = v10;
    v16[1] = 3221225472;
    v16[2] = __58__BRCXPCRegularIPCsClient_resumeSyncConsistencyWithReply___block_invoke_380;
    v16[3] = &unk_1E875FCF8;
    v16[4] = self;
    v17 = v14;
    objc_msgSend(v15, "resumeTreeConsistencyCheckWithReply:", v16);

  }
  __brc_leave_section(v22);

}

void __58__BRCXPCRegularIPCsClient_resumeSyncConsistencyWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __58__BRCXPCRegularIPCsClient_resumeSyncConsistencyWithReply___block_invoke_379(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __58__BRCXPCRegularIPCsClient_resumeSyncConsistencyWithReply___block_invoke_380(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)cancelTreeConsistencyCheckWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  _QWORD v16[5];
  id v17;
  uint64_t v18[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v20;
  __int16 v21;
  BRCXPCRegularIPCsClient *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  const char *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v18, 0, sizeof(v18));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient cancelTreeConsistencyCheckWithReply:]", 2908, v18);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v18[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v20 = (BRCXPCRegularIPCsClient *)v7;
    v21 = 2112;
    v22 = self;
    v23 = 2112;
    v24 = v9;
    v25 = 2080;
    v26 = "-[BRCXPCRegularIPCsClient cancelTreeConsistencyCheckWithReply:]";
    v27 = 2112;
    v28 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = (void *)*MEMORY[0x1E0D10C28];
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __63__BRCXPCRegularIPCsClient_cancelTreeConsistencyCheckWithReply___block_invoke;
  v16[3] = &unk_1E875FCF8;
  v16[4] = self;
  v11 = v4;
  v17 = v11;
  LODWORD(v10) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v10, v16);

  if ((_DWORD)v10)
  {
    BRDiskCheckerServiceConnection();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "remoteObjectProxy");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "cancelTreeConsistencyCheck");

    brc_bread_crumbs();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v20 = self;
      v21 = 2112;
      v22 = 0;
      v23 = 2112;
      v24 = v14;
      _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v11 + 2))(v11, 0);
  }
  __brc_leave_section(v18);

}

void __63__BRCXPCRegularIPCsClient_cancelTreeConsistencyCheckWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)waitForAccountToLoadWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  id v10;
  int v11;
  void *v12;
  NSObject *v13;
  _QWORD v14[5];
  id v15;
  uint64_t v16[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v18;
  __int16 v19;
  BRCXPCRegularIPCsClient *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  const char *v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v16, 0, sizeof(v16));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient waitForAccountToLoadWithReply:]", 2937, v16);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v16[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v18 = (BRCXPCRegularIPCsClient *)v7;
    v19 = 2112;
    v20 = self;
    v21 = 2112;
    v22 = v9;
    v23 = 2080;
    v24 = "-[BRCXPCRegularIPCsClient waitForAccountToLoadWithReply:]";
    v25 = 2112;
    v26 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __57__BRCXPCRegularIPCsClient_waitForAccountToLoadWithReply___block_invoke;
  v14[3] = &unk_1E875FCF8;
  v14[4] = self;
  v10 = v4;
  v15 = v10;
  v11 = _brc_ipc_check_logged_status(self, 1, v14);

  if (v11)
  {
    brc_bread_crumbs();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v18 = self;
      v19 = 2112;
      v20 = 0;
      v21 = 2112;
      v22 = v12;
      _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
  }
  __brc_leave_section(v16);

}

void __57__BRCXPCRegularIPCsClient_waitForAccountToLoadWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)validateCloudDocsSupported:(BOOL)a3 withReply:(id)a4
{
  _BOOL4 v4;
  void (**v6)(id, void *);
  void *v7;
  NSObject *v8;
  uint64_t v9;
  qos_class_t v10;
  void *v11;
  BRCXPCRegularIPCsClient *v12;
  BRCXPCRegularIPCsClient *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v19;
  __int16 v20;
  BRCXPCRegularIPCsClient *v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  const char *v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v4 = a3;
  v28 = *MEMORY[0x1E0C80C00];
  v6 = (void (**)(id, void *))a4;
  memset(v17, 0, sizeof(v17));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient validateCloudDocsSupported:withReply:]", 2944, v17);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = v17[0];
    v10 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v10, (uint64_t)&brc_qos_entries, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v19 = (BRCXPCRegularIPCsClient *)v9;
    v20 = 2112;
    v21 = self;
    v22 = 2112;
    v23 = v11;
    v24 = 2080;
    v25 = "-[BRCXPCRegularIPCsClient validateCloudDocsSupported:withReply:]";
    v26 = 2112;
    v27 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient _getCloudDocsUnsupportedError](self, "_getCloudDocsUnsupportedError");
  v12 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
  v13 = v12;
  if (v12
    && v4
    && -[BRCXPCRegularIPCsClient br_isCloudDocsErrorCode:](v12, "br_isCloudDocsErrorCode:", 139))
  {
    +[BRCUserNotification defaultInstance](BRCUserNotification, "defaultInstance");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "showCloudDocsNotSupportedSimulatorRunningOnOldHost");

  }
  brc_bread_crumbs();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412802;
    v19 = self;
    v20 = 2112;
    v21 = v13;
    v22 = 2112;
    v23 = v15;
    _os_log_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
  }

  v6[2](v6, v13);
  __brc_leave_section(v17);

}

- (void)createAccountWithACAccountID:(id)a3 dsid:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  NSObject *v25;
  BRCXPCRegularIPCsClient *v26;
  void *v27;
  void *v28;
  _QWORD v29[5];
  id v30;
  _QWORD v31[5];
  id v32;
  uint64_t v33[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v35;
  __int16 v36;
  BRCXPCRegularIPCsClient *v37;
  __int16 v38;
  void *v39;
  __int16 v40;
  const char *v41;
  __int16 v42;
  void *v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v33, 0, sizeof(v33));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient createAccountWithACAccountID:dsid:reply:]", 2967, v33);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v33[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v35 = (BRCXPCRegularIPCsClient *)v13;
    v36 = 2112;
    v37 = self;
    v38 = 2112;
    v39 = v15;
    v40 = 2080;
    v41 = "-[BRCXPCRegularIPCsClient createAccountWithACAccountID:dsid:reply:]";
    v42 = 2112;
    v43 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v16 = MEMORY[0x1E0C809B0];
  v31[0] = MEMORY[0x1E0C809B0];
  v31[1] = 3221225472;
  v31[2] = __67__BRCXPCRegularIPCsClient_createAccountWithACAccountID_dsid_reply___block_invoke;
  v31[3] = &unk_1E875FCF8;
  v31[4] = self;
  v17 = v10;
  v32 = v17;
  v18 = _brc_ipc_check_account_access(self, -1, v31);

  if (v18)
  {
    +[BRCAccountsManager sharedManager](BRCAccountsManager, "sharedManager");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v19, "waitForInitialAccountLoadingSynchronouslyIfPossible") & 1) != 0)
    {
      brc_bread_crumbs();
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
        -[BRCXPCRegularIPCsClient createAccountWithACAccountID:dsid:reply:].cold.2();

      if ((int)BRGetMigrationStatusForDSID() > 1)
      {
        v29[0] = v16;
        v29[1] = 3221225472;
        v29[2] = __67__BRCXPCRegularIPCsClient_createAccountWithACAccountID_dsid_reply___block_invoke_384;
        v29[3] = &unk_1E8766638;
        v29[4] = self;
        v30 = v17;
        objc_msgSend(v19, "createSessionWithACAccountID:dsid:completionHandler:", v8, v9, v29);

      }
      else
      {
        brc_bread_crumbs();
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_FAULT))
          -[BRCXPCRegularIPCsClient createAccountWithACAccountID:dsid:reply:].cold.1();

        brc_bread_crumbs();
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v25 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("accountID"), v9);
          v26 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v35 = self;
          v36 = 2112;
          v37 = v26;
          v38 = 2112;
          v39 = v24;
          _os_log_impl(&dword_1CBD43000, v25, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

        }
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("accountID"), v9);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, void *))v17 + 2))(v17, v27);

      }
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorBuddyFlowNeedsToRun");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *))v17 + 2))(v17, v28);

    }
  }
  __brc_leave_section(v33);

}

void __67__BRCXPCRegularIPCsClient_createAccountWithACAccountID_dsid_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __67__BRCXPCRegularIPCsClient_createAccountWithACAccountID_dsid_reply___block_invoke_384(uint64_t a1, char a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if ((a2 & 1) == 0)
  {
    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, (os_log_type_t)0x90u))
      __67__BRCXPCRegularIPCsClient_createAccountWithACAccountID_dsid_reply___block_invoke_384_cold_1();

  }
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = 138412802;
    v12 = v10;
    v13 = 2112;
    v14 = v5;
    v15 = 2112;
    v16 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v11, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)_unregisterPrematurely
{
  BRCXPCRegularIPCsClient *v2;
  BRCAccountSession *session;
  BRCAccountSession *v4;

  v2 = self;
  objc_sync_enter(v2);
  if ((*((_BYTE *)&v2->super + 32) & 1) != 0)
    v4 = 0;
  else
    v4 = v2->super.__session;
  session = v2->super.__session;
  v2->super.__session = 0;

  objc_sync_exit(v2);
  -[BRCAccountSession unregisterClient:](v4, "unregisterClient:", v2);

}

- (void)logoutAccountWithACAccountID:(id)a3 reply:(id)a4
{
  BRCXPCRegularIPCsClient *v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  id v13;
  int v14;
  BRCXPCRegularIPCsClient *v15;
  NSObject *v16;
  void *v17;
  char v18;
  void *v19;
  NSObject *v20;
  void *v21;
  NSObject *v22;
  BRCXPCRegularIPCsClient *v23;
  void *v24;
  _QWORD v25[5];
  id v26;
  uint64_t v27[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  BRCXPCRegularIPCsClient *v31;
  __int16 v32;
  void *v33;
  __int16 v34;
  const char *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v6 = (BRCXPCRegularIPCsClient *)a3;
  v7 = a4;
  memset(v27, 0, sizeof(v27));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient logoutAccountWithACAccountID:reply:]", 3018, v27);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v27[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v29 = (BRCXPCRegularIPCsClient *)v10;
    v30 = 2112;
    v31 = self;
    v32 = 2112;
    v33 = v12;
    v34 = 2080;
    v35 = "-[BRCXPCRegularIPCsClient logoutAccountWithACAccountID:reply:]";
    v36 = 2112;
    v37 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __62__BRCXPCRegularIPCsClient_logoutAccountWithACAccountID_reply___block_invoke;
  v25[3] = &unk_1E875FCF8;
  v25[4] = self;
  v13 = v7;
  v26 = v13;
  v14 = _brc_ipc_check_account_access(self, 3, v25);

  if (v14)
  {
    -[BRCXPCRegularIPCsClient _unregisterPrematurely](self, "_unregisterPrematurely");
    brc_bread_crumbs();
    v15 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v29 = v6;
      v30 = 2112;
      v31 = v15;
      _os_log_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_DEFAULT, "[NOTICE] Requested to logout of account %@%@", buf, 0x16u);
    }

    +[BRCAccountsManager sharedManager](BRCAccountsManager, "sharedManager");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v17, "destroySessionWithACAccountID:", v6);

    brc_bread_crumbs();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient logoutAccountWithACAccountID:reply:].cold.1(v18);

    brc_bread_crumbs();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      if ((v18 & 1) != 0)
      {
        v23 = 0;
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithDomain:code:description:", *MEMORY[0x1E0D10B70], 15, CFSTR("Failed to destroy account"));
        v23 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
      }
      *(_DWORD *)buf = 138412802;
      v29 = self;
      v30 = 2112;
      v31 = v23;
      v32 = 2112;
      v33 = v21;
      _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
      if ((v18 & 1) == 0)

    }
    if ((v18 & 1) != 0)
    {
      v24 = 0;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithDomain:code:description:", *MEMORY[0x1E0D10B70], 15, CFSTR("Failed to destroy account"));
      v24 = (void *)objc_claimAutoreleasedReturnValue();
    }
    (*((void (**)(id, void *))v13 + 2))(v13, v24);
    if ((v18 & 1) == 0)

  }
  __brc_leave_section(v27);

}

void __62__BRCXPCRegularIPCsClient_logoutAccountWithACAccountID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)updateAccountDisplayName:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  BRCXPCRegularIPCsClient *v16;
  NSObject *v17;
  void *v18;
  _QWORD v19[5];
  id v20;
  _QWORD v21[5];
  id v22;
  uint64_t v23[3];
  uint8_t buf[4];
  uint64_t v25;
  __int16 v26;
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  const char *v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v23, 0, sizeof(v23));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient updateAccountDisplayName:reply:]", 3035, v23);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v23[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v25 = v10;
    v26 = 2112;
    v27 = self;
    v28 = 2112;
    v29 = v12;
    v30 = 2080;
    v31 = "-[BRCXPCRegularIPCsClient updateAccountDisplayName:reply:]";
    v32 = 2112;
    v33 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __58__BRCXPCRegularIPCsClient_updateAccountDisplayName_reply___block_invoke;
  v21[3] = &unk_1E875FCF8;
  v21[4] = self;
  v14 = v7;
  v22 = v14;
  v15 = _brc_ipc_check_account_access(self, 1, v21);

  if (v15)
  {
    brc_bread_crumbs();
    v16 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v25 = (uint64_t)v6;
      v26 = 2112;
      v27 = v16;
      _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_DEFAULT, "[NOTICE] Requested to update display name of account %@%@", buf, 0x16u);
    }

    +[BRCAccountsManager sharedManager](BRCAccountsManager, "sharedManager");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19[0] = v13;
    v19[1] = 3221225472;
    v19[2] = __58__BRCXPCRegularIPCsClient_updateAccountDisplayName_reply___block_invoke_392;
    v19[3] = &unk_1E875FCF8;
    v19[4] = self;
    v20 = v14;
    objc_msgSend(v18, "updateAccountDisplayName:completionHandler:", v6, v19);

  }
  __brc_leave_section(v23);

}

void __58__BRCXPCRegularIPCsClient_updateAccountDisplayName_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __58__BRCXPCRegularIPCsClient_updateAccountDisplayName_reply___block_invoke_392(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    brc_bread_crumbs();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, (os_log_type_t)0x90u))
      __58__BRCXPCRegularIPCsClient_updateAccountDisplayName_reply___block_invoke_392_cold_1();

  }
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = *(_QWORD *)(a1 + 32);
    v9 = 138412802;
    v10 = v8;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v9, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)invalidateAccountCacheWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  id v10;
  int v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _QWORD v15[5];
  id v16;
  uint64_t v17[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v19;
  __int16 v20;
  BRCXPCRegularIPCsClient *v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  const char *v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v17, 0, sizeof(v17));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient invalidateAccountCacheWithReply:]", 3050, v17);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v17[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v19 = (BRCXPCRegularIPCsClient *)v7;
    v20 = 2112;
    v21 = self;
    v22 = 2112;
    v23 = v9;
    v24 = 2080;
    v25 = "-[BRCXPCRegularIPCsClient invalidateAccountCacheWithReply:]";
    v26 = 2112;
    v27 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __59__BRCXPCRegularIPCsClient_invalidateAccountCacheWithReply___block_invoke;
  v15[3] = &unk_1E875FCF8;
  v15[4] = self;
  v10 = v4;
  v16 = v10;
  v11 = _brc_ipc_check_account_access(self, 0, v15);

  if (v11)
  {
    objc_msgSend(MEMORY[0x1E0C8F2B8], "defaultStore");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "invalidateAccountForPersonaCache");

    brc_bread_crumbs();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v19 = self;
      v20 = 2112;
      v21 = 0;
      v22 = 2112;
      v23 = v13;
      _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
  }
  __brc_leave_section(v17);

}

void __59__BRCXPCRegularIPCsClient_invalidateAccountCacheWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)jetsamCloudDocsAppsWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  id v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _QWORD v20[5];
  id v21;
  uint64_t v22[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v24;
  __int16 v25;
  BRCXPCRegularIPCsClient *v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  const char *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v22, 0, sizeof(v22));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient jetsamCloudDocsAppsWithReply:]", 3061, v22);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v22[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v24 = (BRCXPCRegularIPCsClient *)v7;
    v25 = 2112;
    v26 = self;
    v27 = 2112;
    v28 = v9;
    v29 = 2080;
    v30 = "-[BRCXPCRegularIPCsClient jetsamCloudDocsAppsWithReply:]";
    v31 = 2112;
    v32 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __56__BRCXPCRegularIPCsClient_jetsamCloudDocsAppsWithReply___block_invoke;
  v20[3] = &unk_1E875FCF8;
  v20[4] = self;
  v10 = v4;
  v21 = v10;
  v11 = _brc_ipc_check_account_access(self, 0, v20);

  if (v11)
  {
    -[BRCXPCClient session](self, "session");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "accountHandler");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (v13)
    {
      v15 = v13;
    }
    else
    {
      +[BRCAccountsManager sharedManager](BRCAccountsManager, "sharedManager");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "accountHandlerForCurrentPersona");
      v15 = (id)objc_claimAutoreleasedReturnValue();

    }
    objc_msgSend(v15, "jetsamCloudDocsApps");
    objc_msgSend(MEMORY[0x1E0C8F2B8], "defaultStore");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "invalidateAccountForPersonaCache");

    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v24 = self;
      v25 = 2112;
      v26 = 0;
      v27 = 2112;
      v28 = v18;
      _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
  }
  __brc_leave_section(v22);

}

void __56__BRCXPCRegularIPCsClient_jetsamCloudDocsAppsWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)getContainersNeedingUpload:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  int v12;
  void *v13;
  brc_task_tracker *tracker;
  void *v15;
  id v16;
  _QWORD v17[5];
  id v18;
  _QWORD v19[4];
  id v20;
  BRCXPCRegularIPCsClient *v21;
  id v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v25, 0, sizeof(v25));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getContainersNeedingUpload:]", 3074, v25);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v25[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v27 = v7;
    v28 = 2112;
    v29 = self;
    v30 = 2112;
    v31 = v9;
    v32 = 2080;
    v33 = "-[BRCXPCRegularIPCsClient getContainersNeedingUpload:]";
    v34 = 2112;
    v35 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = MEMORY[0x1E0C809B0];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __54__BRCXPCRegularIPCsClient_getContainersNeedingUpload___block_invoke;
  v23[3] = &unk_1E875FCF8;
  v23[4] = self;
  v11 = v4;
  v24 = v11;
  v12 = _brc_ipc_check_account_access(self, 1, v23);

  if (v12)
  {
    -[BRCXPCClient session](self, "session");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    tracker = self->super._tracker;
    objc_msgSend(v13, "clientTruthWorkloop");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v19[0] = v10;
    v19[1] = 3221225472;
    v19[2] = __54__BRCXPCRegularIPCsClient_getContainersNeedingUpload___block_invoke_393;
    v19[3] = &unk_1E875EB70;
    v16 = v13;
    v20 = v16;
    v21 = self;
    v22 = v11;
    v17[0] = v10;
    v17[1] = 3221225472;
    v17[2] = __54__BRCXPCRegularIPCsClient_getContainersNeedingUpload___block_invoke_394;
    v17[3] = &unk_1E875EAA8;
    v17[4] = self;
    v18 = v22;
    brc_task_tracker_async_with_logs(tracker, v15, v19, v17);

  }
  __brc_leave_section(v25);

}

void __54__BRCXPCRegularIPCsClient_getContainersNeedingUpload___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __54__BRCXPCRegularIPCsClient_getContainersNeedingUpload___block_invoke_393(_QWORD *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  _QWORD v8[4];
  id v9;
  uint8_t buf[4];
  uint64_t v11;
  __int16 v12;
  id v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v2 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v3 = (void *)a1[4];
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __54__BRCXPCRegularIPCsClient_getContainersNeedingUpload___block_invoke_2;
  v8[3] = &unk_1E875E790;
  v4 = v2;
  v9 = v4;
  objc_msgSend(v3, "enumerateAppLibraries:", v8);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = a1[5];
    *(_DWORD *)buf = 138413058;
    v11 = v7;
    v12 = 2112;
    v13 = v4;
    v14 = 2112;
    v15 = 0;
    v16 = 2112;
    v17 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
  }

  (*(void (**)(void))(a1[6] + 16))();
}

uint64_t __54__BRCXPCRegularIPCsClient_getContainersNeedingUpload___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;

  v3 = a2;
  objc_msgSend(v3, "defaultClientZone");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isSyncBlockedBecauseAppNotInstalled");

  if ((v5 & 1) == 0 && objc_msgSend(v3, "hasLocalChanges"))
  {
    v6 = *(void **)(a1 + 32);
    objc_msgSend(v3, "containerMetadata");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "addObject:", v7);

  }
  return 1;
}

void __54__BRCXPCRegularIPCsClient_getContainersNeedingUpload___block_invoke_394(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v8, 0x2Au);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

- (void)setMigrationStatus:(char)a3 forDSID:(id)a4 shouldUpdateAccount:(BOOL)a5 reply:(id)a6
{
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  qos_class_t v13;
  void *v14;
  id v15;
  int v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  BRCXPCRegularIPCsClient *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  _QWORD v30[5];
  id v31;
  uint64_t v32[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v34;
  __int16 v35;
  BRCXPCRegularIPCsClient *v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  const char *v40;
  __int16 v41;
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v8 = a4;
  v9 = a6;
  memset(v32, 0, sizeof(v32));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient setMigrationStatus:forDSID:shouldUpdateAccount:reply:]", 3097, v32);
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = v32[0];
    v13 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v13, (uint64_t)&brc_qos_entries, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v34 = (BRCXPCRegularIPCsClient *)v12;
    v35 = 2112;
    v36 = self;
    v37 = 2112;
    v38 = v14;
    v39 = 2080;
    v40 = "-[BRCXPCRegularIPCsClient setMigrationStatus:forDSID:shouldUpdateAccount:reply:]";
    v41 = 2112;
    v42 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 3221225472;
  v30[2] = __80__BRCXPCRegularIPCsClient_setMigrationStatus_forDSID_shouldUpdateAccount_reply___block_invoke;
  v30[3] = &unk_1E875FCF8;
  v30[4] = self;
  v15 = v9;
  v31 = v15;
  v16 = _brc_ipc_check_account_access(self, 0, v30);

  if (v16)
  {
    +[BRCAccountsManager sharedManager](BRCAccountsManager, "sharedManager");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C8F2B8], "defaultStore");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "br_appleAccountWithPersonID:", v8);
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v19, "identifier");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    if (v20)
    {
      objc_msgSend(v19, "br_personaIdentifier");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = v15;
      v26 = v17;
      v27 = v19;
      v28 = v8;
      BRPerformWithPersonaAndError();

    }
    else
    {
      brc_bread_crumbs();
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorLoggedOut");
        v24 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v34 = self;
        v35 = 2112;
        v36 = v24;
        v37 = 2112;
        v38 = v22;
        _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

      }
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorLoggedOut");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *))v15 + 2))(v15, v25);

    }
  }
  __brc_leave_section(v32);

}

void __80__BRCXPCRegularIPCsClient_setMigrationStatus_forDSID_shouldUpdateAccount_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __80__BRCXPCRegularIPCsClient_setMigrationStatus_forDSID_shouldUpdateAccount_reply___block_invoke_395(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[5];
  id v18;
  uint8_t buf[4];
  uint64_t v20;
  __int16 v21;
  id v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    brc_bread_crumbs();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412802;
      v20 = v6;
      v21 = 2112;
      v22 = v3;
      v23 = 2112;
      v24 = v4;
      _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "getOrCreateAccountHandlerForACAccount:", *(_QWORD *)(a1 + 48));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      v8 = *(char *)(a1 + 72);
      v9 = *(unsigned __int8 *)(a1 + 73);
      v17[0] = MEMORY[0x1E0C809B0];
      v17[1] = 3221225472;
      v17[2] = __80__BRCXPCRegularIPCsClient_setMigrationStatus_forDSID_shouldUpdateAccount_reply___block_invoke_396;
      v17[3] = &unk_1E875EAA8;
      v17[4] = *(_QWORD *)(a1 + 32);
      v10 = *(_QWORD *)(a1 + 56);
      v18 = *(id *)(a1 + 64);
      objc_msgSend(v7, "setMigrationStatus:forDSID:shouldUpdateAccount:completion:", v8, v10, v9, v17);

    }
    else
    {
      brc_bread_crumbs();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        v13 = *(_QWORD *)(a1 + 32);
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorLoggedOut");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v20 = v13;
        v21 = 2112;
        v22 = v14;
        v23 = 2112;
        v24 = v11;
        _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

      }
      v15 = *(_QWORD *)(a1 + 64);
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorLoggedOut");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, void *))(v15 + 16))(v15, v16);

    }
  }

}

uint64_t __80__BRCXPCRegularIPCsClient_setMigrationStatus_forDSID_shouldUpdateAccount_reply___block_invoke_396(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412802;
    v7 = v4;
    v8 = 2112;
    v9 = 0;
    v10 = 2112;
    v11 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v6, 0x20u);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)getSyncState:(unint64_t)a3 reply:(id)a4
{
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  qos_class_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  int v14;
  void *v15;
  NSObject *v16;
  _QWORD v17[5];
  id v18;
  unint64_t v19;
  _QWORD v20[5];
  id v21;
  uint64_t v22[3];
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  BRCXPCRegularIPCsClient *v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  const char *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  memset(v22, 0, sizeof(v22));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getSyncState:reply:]", 3127, v22);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = v22[0];
    v10 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v10, (uint64_t)&brc_qos_entries, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v24 = v9;
    v25 = 2112;
    v26 = self;
    v27 = 2112;
    v28 = v11;
    v29 = 2080;
    v30 = "-[BRCXPCRegularIPCsClient getSyncState:reply:]";
    v31 = 2112;
    v32 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v12 = MEMORY[0x1E0C809B0];
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __46__BRCXPCRegularIPCsClient_getSyncState_reply___block_invoke;
  v20[3] = &unk_1E875FCF8;
  v20[4] = self;
  v13 = v6;
  v21 = v13;
  v14 = _brc_ipc_check_entitlement_and_logged_status(self, 1, CFSTR("com.apple.fileprovider.acl-read"), v20);

  if (v14)
  {
    -[BRCXPCClient session](self, "session");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "readOnlyWorkloop");
    v16 = objc_claimAutoreleasedReturnValue();
    v17[0] = v12;
    v17[1] = 3221225472;
    v17[2] = __46__BRCXPCRegularIPCsClient_getSyncState_reply___block_invoke_399;
    v17[3] = &unk_1E87629D0;
    v17[4] = self;
    v19 = a3;
    v18 = v13;
    dispatch_async(v16, v17);

  }
  __brc_leave_section(v22);

}

void __46__BRCXPCRegularIPCsClient_getSyncState_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2048;
    v10 = 1;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%lu, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __46__BRCXPCRegularIPCsClient_getSyncState_reply___block_invoke_399(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  unsigned int v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "readOnlyDB");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = *(_QWORD *)(a1 + 48);
  v5 = v4 & 0xA;
  if ((v4 & 0xA) != 0)
  {
    if (v5 == 10)
    {
      v6 = (void *)MEMORY[0x1E0DE81E0];
      v7 = "(3, 4)";
      v8 = 6;
    }
    else
    {
      v6 = (void *)MEMORY[0x1E0DE81E0];
      if ((v4 & 8) != 0)
        v7 = "(3)";
      else
        v7 = "(4)";
      v8 = 3;
    }
    objc_msgSend(v6, "rawInjection:length:", v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v3, "fetch:", CFSTR("SELECT DISTINCT item_localsyncupstate,zone_rowid FROM client_items WHERE item_localsyncupstate IN %@       AND NOT item_id_is_documents(item_id)       AND item_scope = 2"), v9);
    objc_msgSend(v3, "lastError");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (v11)
    {
      brc_bread_crumbs();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        v14 = *(_QWORD *)(a1 + 32);
        objc_msgSend(v3, "lastError");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        v24 = v14;
        v25 = 2048;
        v26 = 1;
        v27 = 2112;
        v28 = v15;
        v29 = 2112;
        v30 = v12;
        _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%lu, %@)%@", buf, 0x2Au);

      }
      v16 = *(_QWORD *)(a1 + 40);
      objc_msgSend(v3, "lastError");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, uint64_t, void *))(v16 + 16))(v16, 1, v17);

    }
    v5 = 0;
    if (objc_msgSend(v10, "next"))
    {
      do
      {
        v18 = objc_msgSend(v10, "unsignedIntAtIndex:", 0);
        v19 = v5 | 8;
        if ((v18 & 3) == 0)
          v19 = v5;
        v5 = v19 | (v18 >> 1) & 2;
      }
      while ((objc_msgSend(v10, "next") & 1) != 0);
    }

  }
  brc_bread_crumbs();
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v21 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
  {
    v22 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138413058;
    v24 = v22;
    v25 = 2048;
    v26 = v5;
    v27 = 2112;
    v28 = 0;
    v29 = 2112;
    v30 = v20;
    _os_log_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%lu, %@)%@", buf, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)resolveFileObjectIDsToContentRecordIDsForThumbnails:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  void *v16;
  brc_task_tracker *tracker;
  void *v18;
  id v19;
  _QWORD v20[5];
  id v21;
  _QWORD v22[4];
  id v23;
  id v24;
  BRCXPCRegularIPCsClient *v25;
  id v26;
  _QWORD v27[5];
  id v28;
  uint64_t v29[3];
  uint8_t buf[4];
  uint64_t v31;
  __int16 v32;
  BRCXPCRegularIPCsClient *v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  const char *v37;
  __int16 v38;
  void *v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v29, 0, sizeof(v29));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient resolveFileObjectIDsToContentRecordIDsForThumbnails:reply:]", 3225, v29);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v29[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v31 = v10;
    v32 = 2112;
    v33 = self;
    v34 = 2112;
    v35 = v12;
    v36 = 2080;
    v37 = "-[BRCXPCRegularIPCsClient resolveFileObjectIDsToContentRecordIDsForThumbnails:reply:]";
    v38 = 2112;
    v39 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v27[0] = MEMORY[0x1E0C809B0];
  v27[1] = 3221225472;
  v27[2] = __85__BRCXPCRegularIPCsClient_resolveFileObjectIDsToContentRecordIDsForThumbnails_reply___block_invoke;
  v27[3] = &unk_1E875FCF8;
  v27[4] = self;
  v14 = v7;
  v28 = v14;
  v15 = _brc_ipc_check_applibrary_proxy(self, 1, v27);

  if (v15)
  {
    -[BRCXPCClient session](self, "session");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    tracker = self->super._tracker;
    objc_msgSend(v16, "readOnlyWorkloop");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = v13;
    v22[1] = 3221225472;
    v22[2] = __85__BRCXPCRegularIPCsClient_resolveFileObjectIDsToContentRecordIDsForThumbnails_reply___block_invoke_406;
    v22[3] = &unk_1E875DDA0;
    v23 = v6;
    v19 = v16;
    v24 = v19;
    v25 = self;
    v26 = v14;
    v20[0] = v13;
    v20[1] = 3221225472;
    v20[2] = __85__BRCXPCRegularIPCsClient_resolveFileObjectIDsToContentRecordIDsForThumbnails_reply___block_invoke_407;
    v20[3] = &unk_1E875EAA8;
    v20[4] = self;
    v21 = v26;
    brc_task_tracker_async_with_logs(tracker, v18, v22, v20);

  }
  __brc_leave_section(v29);

}

void __85__BRCXPCRegularIPCsClient_resolveFileObjectIDsToContentRecordIDsForThumbnails_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  id v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138414082;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = 0;
    v15 = 2112;
    v16 = 0;
    v17 = 2112;
    v18 = 0;
    v19 = 2112;
    v20 = v3;
    v21 = 2112;
    v22 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@, %@)%@", (uint8_t *)&v7, 0x52u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __85__BRCXPCRegularIPCsClient_resolveFileObjectIDsToContentRecordIDsForThumbnails_reply___block_invoke_406(uint64_t a1)
{
  id v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  int v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint8_t buf[4];
  void *v34;
  __int16 v35;
  void *v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  id v40;
  __int16 v41;
  id v42;
  __int16 v43;
  void *v44;
  __int16 v45;
  uint64_t v46;
  __int16 v47;
  void *v48;
  _BYTE v49[128];
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v28 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
  v27 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
  v25 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
  v26 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v3 = (_QWORD *)a1;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v29, v49, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v30;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v30 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * i);
        if (objc_msgSend(v9, "type") != 2)
        {
          brc_bread_crumbs();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v18 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)buf = 138412290;
            v34 = v17;
            _os_log_fault_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: asked the content record ID of a non-document%@", buf, 0xCu);
          }
          goto LABEL_12;
        }
        v10 = (void *)v3[5];
        objc_msgSend(v10, "readOnlyDB");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "itemByFileObjectID:db:", v9, v11);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "asDocument");
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v13)
        {
          brc_bread_crumbs();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v18 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412546;
            v34 = v9;
            v35 = 2112;
            v36 = v17;
            _os_log_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_DEFAULT, "[WARNING] No document found for %@%@", buf, 0x16u);
          }
LABEL_12:

          objc_msgSend(v2, "addObject:", v9);
          continue;
        }
        objc_msgSend(v13, "currentVersion");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = objc_msgSend(v14, "thumbnailSize");

        if (v15 < 1)
        {
          objc_msgSend(v13, "currentVersion");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = objc_msgSend(v19, "isSmallAndMostRecentClientsGenerateThumbnails");

          if (v20)
            v21 = v27;
          else
            v21 = v26;
          objc_msgSend(v21, "addObject:", v9);
        }
        else
        {
          objc_msgSend(v13, "documentRecordID");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "setObject:forKeyedSubscript:", v16, v9);

        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v29, v49, 16);
    }
    while (v6);
  }

  brc_bread_crumbs();
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v23 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
  {
    v24 = (void *)v3[6];
    *(_DWORD *)buf = 138414082;
    v34 = v24;
    v35 = 2112;
    v36 = v28;
    v37 = 2112;
    v38 = v27;
    v39 = 2112;
    v40 = v26;
    v41 = 2112;
    v42 = v2;
    v43 = 2112;
    v44 = v25;
    v45 = 2112;
    v46 = 0;
    v47 = 2112;
    v48 = v22;
    _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@, %@)%@", buf, 0x52u);
  }

  (*(void (**)(void))(v3[7] + 16))();
}

void __85__BRCXPCRegularIPCsClient_resolveFileObjectIDsToContentRecordIDsForThumbnails_reply___block_invoke_407(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138414082;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = 0;
    v14 = 2112;
    v15 = 0;
    v16 = 2112;
    v17 = 0;
    v18 = 2112;
    v19 = 0;
    v20 = 2112;
    v21 = v5;
    v22 = 2112;
    v23 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@, %@)%@", (uint8_t *)&v8, 0x52u);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, void *))(v6 + 16))(v6, 0, 0, 0, 0, 0, v7);

}

- (void)resolveBookmarkDataToURL:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  void *v16;
  NSObject *v17;
  void *v18;
  char v19;
  id v20;
  void *v21;
  NSObject *v22;
  brc_task_tracker *tracker;
  void *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  void *v28;
  _QWORD v29[5];
  id v30;
  _QWORD v31[4];
  id v32;
  id v33;
  BRCXPCRegularIPCsClient *v34;
  BRCXPCRegularIPCsClient *v35;
  BRCXPCRegularIPCsClient *v36;
  char *v37;
  id v38;
  id v39;
  BRCXPCRegularIPCsClient *v40;
  char *v41;
  id v42;
  BRCXPCRegularIPCsClient *v43;
  _QWORD v44[5];
  id v45;
  uint64_t v46[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v48;
  __int16 v49;
  BRCXPCRegularIPCsClient *v50;
  __int16 v51;
  id v52;
  __int16 v53;
  const char *v54;
  __int16 v55;
  void *v56;
  __int16 v57;
  void *v58;
  __int16 v59;
  void *v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v46, 0, sizeof(v46));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]", 3279, v46);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v46[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v48 = (BRCXPCRegularIPCsClient *)v10;
    v49 = 2112;
    v50 = self;
    v51 = 2112;
    v52 = v12;
    v53 = 2080;
    v54 = "-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]";
    v55 = 2112;
    v56 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v44[0] = MEMORY[0x1E0C809B0];
  v44[1] = 3221225472;
  v44[2] = __58__BRCXPCRegularIPCsClient_resolveBookmarkDataToURL_reply___block_invoke;
  v44[3] = &unk_1E875FCF8;
  v44[4] = self;
  v14 = v7;
  v45 = v14;
  v15 = _brc_ipc_check_logged_status(self, 1, v44);

  if (v15)
  {
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:].cold.1();

    v42 = 0;
    v43 = 0;
    v40 = 0;
    v41 = 0;
    -[BRCXPCClient session](self, "session");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v39 = 0;
    v19 = objc_msgSend(v6, "parseBookmarkDataWithAccountSession:docID:itemID:mangledID:unsaltedBookmarkData:error:", v18, &v40, &v43, &v42, &v41, &v39);
    v20 = v39;
    if ((v19 & 1) != 0)
    {
      brc_bread_crumbs();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138413314;
        v48 = v40;
        v49 = 2112;
        v50 = v43;
        v51 = 2112;
        v52 = v42;
        v53 = 2112;
        v54 = v41;
        v55 = 2112;
        v56 = v21;
        _os_log_debug_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_DEBUG, "[DEBUG] looking for docID:%@ itemID:%@ mangledID:%@ unsaltedBookmarkData:%@%@", buf, 0x34u);
      }

      tracker = self->super._tracker;
      objc_msgSend(v18, "clientTruthWorkloop");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v31[0] = v13;
      v31[1] = 3221225472;
      v31[2] = __58__BRCXPCRegularIPCsClient_resolveBookmarkDataToURL_reply___block_invoke_408;
      v31[3] = &unk_1E87666B0;
      v32 = v18;
      v33 = v42;
      v34 = self;
      v35 = v43;
      v38 = v14;
      v36 = v40;
      v37 = v41;
      v29[0] = v13;
      v29[1] = 3221225472;
      v29[2] = __58__BRCXPCRegularIPCsClient_resolveBookmarkDataToURL_reply___block_invoke_415;
      v29[3] = &unk_1E875EAA8;
      v29[4] = self;
      v30 = v38;
      brc_task_tracker_async_with_logs(tracker, v24, v31, v29);

      v25 = v32;
    }
    else
    {
      brc_bread_crumbs();
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v20, "brc_wrappedError");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413826;
        v48 = self;
        v49 = 2112;
        v50 = 0;
        v51 = 2112;
        v52 = 0;
        v53 = 2112;
        v54 = 0;
        v55 = 2112;
        v56 = 0;
        v57 = 2112;
        v58 = v28;
        v59 = 2112;
        v60 = v26;
        _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@)%@", buf, 0x48u);

      }
      objc_msgSend(v20, "brc_wrappedError");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, _QWORD, _QWORD, _QWORD, void *))v14 + 2))(v14, 0, 0, 0, 0, v25);
    }

  }
  __brc_leave_section(v46);

}

void __58__BRCXPCRegularIPCsClient_resolveBookmarkDataToURL_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  id v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413826;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = 0;
    v15 = 2112;
    v16 = 0;
    v17 = 2112;
    v18 = v3;
    v19 = 2112;
    v20 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@)%@", (uint8_t *)&v7, 0x48u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __58__BRCXPCRegularIPCsClient_resolveBookmarkDataToURL_reply___block_invoke_408(uint64_t a1)
{
  id *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  BOOL v12;
  char *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  char v17;
  int v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  void *v23;
  void *v24;
  void *v25;
  NSObject *v26;
  BRCItemToPathLookup *v27;
  void *v28;
  void *v29;
  char v30;
  void *v31;
  NSObject *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  void *v38;
  NSObject *v39;
  BRCItemToPathLookup *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  NSObject *v46;
  int v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const char *v54;
  const char *v55;
  char v56;
  BRCItemToPathLookup *v57;
  void *v58;
  void (**v59)(_QWORD, _QWORD, _QWORD, _QWORD);
  id obj;
  void *v61;
  int8x16_t v62;
  void *v63;
  uint64_t v64[3];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69[3];
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _QWORD v74[4];
  int8x16_t v75;
  id v76;
  id v77;
  uint64_t *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t);
  void (*v84)(uint64_t);
  id v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t);
  void (*v90)(uint64_t);
  id v91;
  uint8_t v92[128];
  uint8_t buf[4];
  uint64_t v94;
  __int16 v95;
  const char *v96;
  __int16 v97;
  uint64_t v98;
  __int16 v99;
  void *v100;
  _BYTE v101[128];
  uint64_t v102;

  v102 = *MEMORY[0x1E0C80C00];
  v2 = (id *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 32), "clientZoneByMangledID:", *(_QWORD *)(a1 + 40));
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v86 = 0;
  v87 = &v86;
  v88 = 0x3032000000;
  v89 = __Block_byref_object_copy__48;
  v90 = __Block_byref_object_dispose__48;
  if (objc_msgSend(*v2, "isPrivate"))
  {
    objc_msgSend(*(id *)(a1 + 32), "appLibraryByMangledID:", *(_QWORD *)(a1 + 40));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }
  v91 = v3;
  v80 = 0;
  v81 = &v80;
  v82 = 0x3032000000;
  v83 = __Block_byref_object_copy__48;
  v84 = __Block_byref_object_dispose__48;
  v85 = 0;
  v74[0] = MEMORY[0x1E0C809B0];
  v74[1] = 3221225472;
  v74[2] = __58__BRCXPCRegularIPCsClient_resolveBookmarkDataToURL_reply___block_invoke_2;
  v74[3] = &unk_1E8766688;
  v62 = *(int8x16_t *)(a1 + 40);
  v78 = &v86;
  v4 = (id)v62.i64[0];
  v75 = vextq_s8(v62, v62, 8uLL);
  v79 = &v80;
  v76 = *(id *)(a1 + 56);
  v77 = *(id *)(a1 + 80);
  v59 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1D17A6DB0](v74);
  objc_msgSend(v61, "itemByItemID:", *(_QWORD *)(a1 + 56));
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = (void *)v81[5];
  v81[5] = v5;

  v7 = (void *)v81[5];
  if (v7
    || (objc_msgSend(v61, "itemByDocumentID:", objc_msgSend(*(id *)(a1 + 64), "unsignedIntValue")),
        v8 = objc_claimAutoreleasedReturnValue(),
        v9 = (void *)v81[5],
        v81[5] = v8,
        v9,
        (v7 = (void *)v81[5]) != 0))
  {
    objc_msgSend(v7, "appLibrary");
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)v87[5];
    v87[5] = v10;

  }
  if ((objc_msgSend(*(id *)(a1 + 48), "_isAppLibraryProxyEntitled") & 1) != 0)
  {
    v12 = 1;
  }
  else if (v87[5])
  {
    objc_msgSend(*(id *)(a1 + 48), "entitledAppLibraryIDs");
    v13 = (char *)objc_claimAutoreleasedReturnValue();
    brc_bread_crumbs();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
    {
      v50 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412802;
      v94 = v50;
      v95 = 2112;
      v96 = v13;
      v97 = 2112;
      v98 = (uint64_t)v14;
      _os_log_debug_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_DEBUG, "[DEBUG] %@ has access to %@%@", buf, 0x20u);
    }

    objc_msgSend((id)v87[5], "appLibraryID");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v13, "containsObject:", v16);

    if ((v17 & 1) != 0)
    {
      v18 = 1;
    }
    else
    {
      v72 = 0u;
      v73 = 0u;
      v71 = 0u;
      v70 = 0u;
      v19 = v13;
      v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v70, v101, 16);
      if (v20)
      {
        v21 = *(_QWORD *)v71;
        while (2)
        {
          for (i = 0; i != v20; ++i)
          {
            if (*(_QWORD *)v71 != v21)
              objc_enumerationMutation(v19);
            objc_msgSend(*(id *)(a1 + 32), "appLibraryByID:", *(_QWORD *)(*((_QWORD *)&v70 + 1) + 8 * i));
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "aliasByUnsaltedBookmarkData:", *(_QWORD *)(a1 + 72));
            v24 = (void *)objc_claimAutoreleasedReturnValue();

            if (v24)
            {
              v18 = 1;
              goto LABEL_25;
            }
          }
          v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v70, v101, 16);
          if (v20)
            continue;
          break;
        }
      }
      v18 = 0;
LABEL_25:

    }
    brc_bread_crumbs();
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
    {
      v51 = *(_QWORD *)(a1 + 48);
      objc_msgSend((id)v87[5], "logName");
      v52 = objc_claimAutoreleasedReturnValue();
      v53 = (void *)v52;
      v54 = "has";
      *(_DWORD *)buf = 138413058;
      v94 = v51;
      v95 = 2080;
      if (!v18)
        v54 = "does not have";
      v96 = v54;
      v97 = 2112;
      v98 = v52;
      v99 = 2112;
      v100 = v25;
      _os_log_debug_impl(&dword_1CBD43000, v26, OS_LOG_TYPE_DEBUG, "[DEBUG] %@ %s access to %@%@", buf, 0x2Au);

    }
    v12 = v18 != 0;
  }
  else
  {
    v12 = 0;
  }
  v27 = [BRCItemToPathLookup alloc];
  v57 = -[BRCItemToPathLookup initWithItem:](v27, "initWithItem:", v81[5]);
  -[BRCItemToPathLookup byFileSystemID](v57, "byFileSystemID");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)v81[5], "st");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "logicalName");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v63, "logicalURLWithLogicalName:", v29);
  v58 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    v30 = 1;
  }
  else if (objc_msgSend((id)v81[5], "isDocument"))
  {
    memset(v69, 0, sizeof(v69));
    __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]_block_invoke", 3412, v69);
    brc_bread_crumbs();
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v32 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG))
    {
      v55 = (const char *)v81[5];
      *(_DWORD *)buf = 134218498;
      v94 = v69[0];
      v95 = 2112;
      v96 = v55;
      v97 = 2112;
      v98 = (uint64_t)v31;
      _os_log_debug_impl(&dword_1CBD43000, v32, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx looking for reverse aliases of %@%@", buf, 0x20u);
    }

    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    objc_msgSend((id)v81[5], "asDocument");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "reverseAliasEnumerator");
    obj = (id)objc_claimAutoreleasedReturnValue();

    v34 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v65, v92, 16);
    if (v34)
    {
      v56 = 0;
      v35 = *(_QWORD *)v66;
LABEL_35:
      v36 = 0;
      while (1)
      {
        if (*(_QWORD *)v66 != v35)
          objc_enumerationMutation(obj);
        v37 = *(const char **)(*((_QWORD *)&v65 + 1) + 8 * v36);
        memset(v64, 0, sizeof(v64));
        __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]_block_invoke", 3414, v64);
        brc_bread_crumbs();
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v39 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134218498;
          v94 = v64[0];
          v95 = 2112;
          v96 = v37;
          v97 = 2112;
          v98 = (uint64_t)v38;
          _os_log_debug_impl(&dword_1CBD43000, v39, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx testing access to %@%@", buf, 0x20u);
        }

        v40 = -[BRCItemToPathLookup initWithItem:]([BRCItemToPathLookup alloc], "initWithItem:", v37);
        -[BRCItemToPathLookup byFileSystemID](v40, "byFileSystemID");
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        if (!objc_msgSend(v41, "resolveMustExist:error:", 1, 0))
          goto LABEL_45;
        v42 = *(void **)(a1 + 48);
        objc_msgSend(v41, "physicalURL");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v43, "path");
        v44 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        LODWORD(v42) = objc_msgSend(v42, "canAccessPath:accessKind:", objc_msgSend(v44, "fileSystemRepresentation"), 0);

        if ((_DWORD)v42)
        {
          brc_bread_crumbs();
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v46 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v46, OS_LOG_TYPE_DEBUG))
          {
            v48 = v81[5];
            v49 = *(const char **)(a1 + 48);
            *(_DWORD *)buf = 138413058;
            v94 = v48;
            v95 = 2112;
            v96 = v49;
            v97 = 2112;
            v98 = (uint64_t)v41;
            v99 = 2112;
            v100 = v45;
            _os_log_debug_impl(&dword_1CBD43000, v46, OS_LOG_TYPE_DEBUG, "[DEBUG] granting access to %@, because %@ has access to %@%@", buf, 0x2Au);
          }

          v47 = 0;
          v56 = 1;
        }
        else
        {
LABEL_45:
          v47 = 1;
        }

        __brc_leave_section(v64);
        if (!v47)
          break;
        if (v34 == ++v36)
        {
          v34 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v65, v92, 16);
          if (v34)
            goto LABEL_35;
          break;
        }
      }
    }
    else
    {
      v56 = 0;
    }

    __brc_leave_section(v69);
    v30 = v56;
  }
  else
  {
    v30 = 0;
  }
  ((void (**)(_QWORD, void *, void *, _QWORD))v59)[2](v59, v58, v63, v30 & 1);

  _Block_object_dispose(&v80, 8);
  _Block_object_dispose(&v86, 8);

}

void __58__BRCXPCRegularIPCsClient_resolveBookmarkDataToURL_reply___block_invoke_2(uint64_t a1, void *a2, void *a3, char a4)
{
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  NSObject *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  __int16 v39;
  id v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  void *v44;
  __int16 v45;
  void *v46;
  __int16 v47;
  void *v48;
  __int16 v49;
  void *v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  if ((a4 & 1) == 0)
  {
    v9 = *(void **)(a1 + 32);
    v10 = objc_retainAutorelease(v7);
    if (!objc_msgSend(v9, "canAccessPath:accessKind:", objc_msgSend(v10, "fileSystemRepresentation"), 0))
    {
      if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))
      {
        brc_bread_crumbs();
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v18 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          v19 = *(_QWORD *)(a1 + 32);
          v37 = 138412546;
          v38 = v19;
          v39 = 2112;
          v40 = v17;
          _os_log_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_DEFAULT, "[WARNING] resolveBookmarkDataToURL denied for %@: not entitled%@", (uint8_t *)&v37, 0x16u);
        }

        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorPermissionError:", CFSTR("Not Entitled"));
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        goto LABEL_18;
      }
LABEL_15:
      brc_bread_crumbs();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        v23 = *(_QWORD *)(a1 + 40);
        v37 = 138412546;
        v38 = v23;
        v39 = 2112;
        v40 = v21;
        _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_DEFAULT, "[WARNING] Can't find appLibrary for id %@%@", (uint8_t *)&v37, 0x16u);
      }

      v24 = (void *)MEMORY[0x1E0CB35C8];
      objc_msgSend(*(id *)(a1 + 40), "appLibraryOrZoneName");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "brc_errorAppLibraryNotFound:", v25);
      v20 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_18:
      v16 = 0;
      v14 = 0;
      v15 = 0;
      goto LABEL_19;
    }
    brc_bread_crumbs();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    {
      v36 = *(_QWORD *)(a1 + 32);
      v37 = 138412802;
      v38 = v36;
      v39 = 2112;
      v40 = v10;
      v41 = 2112;
      v42 = v11;
      _os_log_debug_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_DEBUG, "[DEBUG] Client %@ has access to %@%@", (uint8_t *)&v37, 0x20u);
    }

  }
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))
    goto LABEL_15;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40))
  {
    v13 = *MEMORY[0x1E0C80008];
    objc_msgSend(v7, "brc_issueSandboxExtensionOfClass:error:", *MEMORY[0x1E0C80008], 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "isFault"))
    {
      objc_msgSend(v8, "physicalURL");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "brc_issueSandboxExtensionOfClass:error:", v13, 0);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      if (v7)
        goto LABEL_26;
      goto LABEL_30;
    }
    v16 = 0;
  }
  else
  {
    v16 = 0;
    v14 = 0;
  }
  v15 = 0;
  if (v7)
    goto LABEL_26;
LABEL_30:
  v32 = (void *)MEMORY[0x1E0CB35C8];
  objc_msgSend(*(id *)(a1 + 48), "itemIDString");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "brc_errorItemNotFound:", v33);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  if (v20)
  {
    brc_bread_crumbs();
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v35 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v35, (os_log_type_t)0x90u))
      __58__BRCXPCRegularIPCsClient_resolveBookmarkDataToURL_reply___block_invoke_2_cold_1((uint64_t)v20, (uint64_t)v34, v35);

  }
LABEL_19:
  if (v20)
  {
    brc_bread_crumbs();
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      v28 = *(_QWORD *)(a1 + 32);
      v37 = 138413826;
      v38 = v28;
      v39 = 2112;
      v40 = 0;
      v41 = 2112;
      v42 = 0;
      v43 = 2112;
      v44 = 0;
      v45 = 2112;
      v46 = 0;
      v47 = 2112;
      v48 = v20;
      v49 = 2112;
      v50 = v26;
      _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@)%@", (uint8_t *)&v37, 0x48u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    goto LABEL_29;
  }
LABEL_26:
  brc_bread_crumbs();
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v30 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
  {
    v31 = *(_QWORD *)(a1 + 32);
    v37 = 138413826;
    v38 = v31;
    v39 = 2112;
    v40 = v7;
    v41 = 2112;
    v42 = v14;
    v43 = 2112;
    v44 = v15;
    v45 = 2112;
    v46 = v16;
    v47 = 2112;
    v48 = 0;
    v49 = 2112;
    v50 = v29;
    _os_log_impl(&dword_1CBD43000, v30, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@)%@", (uint8_t *)&v37, 0x48u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
LABEL_29:

}

void __58__BRCXPCRegularIPCsClient_resolveBookmarkDataToURL_reply___block_invoke_415(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413826;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = 0;
    v14 = 2112;
    v15 = 0;
    v16 = 2112;
    v17 = 0;
    v18 = 2112;
    v19 = v5;
    v20 = 2112;
    v21 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@)%@", (uint8_t *)&v8, 0x48u);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, void *))(v6 + 16))(v6, 0, 0, 0, 0, v7);

}

- (void)getApplicationStatus:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  id v10;
  int v11;
  void *v12;
  NSObject *v13;
  int v14;
  _QWORD v15[5];
  id v16;
  uint64_t v17[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v19;
  __int16 v20;
  _BYTE v21[28];
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v17, 0, sizeof(v17));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getApplicationStatus:]", 3481, v17);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v17[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v19 = (BRCXPCRegularIPCsClient *)v7;
    v20 = 2112;
    *(_QWORD *)v21 = self;
    *(_WORD *)&v21[8] = 2112;
    *(_QWORD *)&v21[10] = v9;
    *(_WORD *)&v21[18] = 2080;
    *(_QWORD *)&v21[20] = "-[BRCXPCRegularIPCsClient getApplicationStatus:]";
    v22 = 2112;
    v23 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __48__BRCXPCRegularIPCsClient_getApplicationStatus___block_invoke;
  v15[3] = &unk_1E875FCF8;
  v15[4] = self;
  v10 = v4;
  v16 = v10;
  v11 = _brc_ipc_check_logged_status(self, 0, v15);

  if (v11)
  {
    brc_bread_crumbs();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      v14 = -[BRCXPCClient cloudEnabledStatus](self, "cloudEnabledStatus");
      *(_DWORD *)buf = 138413058;
      v19 = self;
      v20 = 1024;
      *(_DWORD *)v21 = v14;
      *(_WORD *)&v21[4] = 2112;
      *(_QWORD *)&v21[6] = 0;
      *(_WORD *)&v21[14] = 2112;
      *(_QWORD *)&v21[16] = v12;
      _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);
    }

    (*((void (**)(id, _QWORD, _QWORD))v10 + 2))(v10, -[BRCXPCClient cloudEnabledStatus](self, "cloudEnabledStatus"), 0);
  }
  __brc_leave_section(v17);

}

void __48__BRCXPCRegularIPCsClient_getApplicationStatus___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)getApplicationStatusForProcess:(id *)a3 reply:(id)a4
{
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  qos_class_t v10;
  void *v11;
  id v12;
  int v13;
  BRCClientPrivilegesDescriptor *v14;
  __int128 v15;
  BRCClientPrivilegesDescriptor *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  _QWORD v21[5];
  id v22;
  uint64_t v23[3];
  _BYTE buf[42];
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  memset(v23, 0, sizeof(v23));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getApplicationStatusForProcess:reply:]", 3490, v23);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = v23[0];
    v10 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v10, (uint64_t)&brc_qos_entries, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    *(_QWORD *)&buf[4] = v9;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    *(_WORD *)&buf[22] = 2112;
    *(_QWORD *)&buf[24] = v11;
    *(_WORD *)&buf[32] = 2080;
    *(_QWORD *)&buf[34] = "-[BRCXPCRegularIPCsClient getApplicationStatusForProcess:reply:]";
    v25 = 2112;
    v26 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __64__BRCXPCRegularIPCsClient_getApplicationStatusForProcess_reply___block_invoke;
  v21[3] = &unk_1E875FCF8;
  v21[4] = self;
  v12 = v6;
  v22 = v12;
  v13 = _brc_ipc_check_applibrary_proxy(self, 0, v21);

  if (v13)
  {
    v14 = [BRCClientPrivilegesDescriptor alloc];
    v15 = *(_OWORD *)&a3->var0[4];
    *(_OWORD *)buf = *(_OWORD *)a3->var0;
    *(_OWORD *)&buf[16] = v15;
    v16 = -[BRCClientPrivilegesDescriptor initWithAuditToken:](v14, "initWithAuditToken:", buf);
    -[BRCXPCClient session](self, "session");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = -[BRCClientPrivilegesDescriptor cloudEnabledStatusWithHasSession:](v16, "cloudEnabledStatusWithHasSession:", v17 != 0);

    brc_bread_crumbs();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138413058;
      *(_QWORD *)&buf[4] = self;
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = v18;
      *(_WORD *)&buf[18] = 2112;
      *(_QWORD *)&buf[20] = 0;
      *(_WORD *)&buf[28] = 2112;
      *(_QWORD *)&buf[30] = v19;
      _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);
    }

    (*((void (**)(id, uint64_t, _QWORD))v12 + 2))(v12, v18, 0);
  }
  __brc_leave_section(v23);

}

void __64__BRCXPCRegularIPCsClient_getApplicationStatusForProcess_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)getLastSyncDateWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  id v10;
  int v11;
  char *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  BRCXPCRegularIPCsClient *v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD v20[5];
  id v21;
  uint64_t v22[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v24;
  __int16 v25;
  BRCXPCRegularIPCsClient *v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  const char *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v22, 0, sizeof(v22));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getLastSyncDateWithReply:]", 3504, v22);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v22[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v24 = (BRCXPCRegularIPCsClient *)v7;
    v25 = 2112;
    v26 = self;
    v27 = 2112;
    v28 = v9;
    v29 = 2080;
    v30 = "-[BRCXPCRegularIPCsClient getLastSyncDateWithReply:]";
    v31 = 2112;
    v32 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __52__BRCXPCRegularIPCsClient_getLastSyncDateWithReply___block_invoke;
  v20[3] = &unk_1E875FCF8;
  v20[4] = self;
  v10 = v4;
  v21 = v10;
  v11 = _brc_ipc_check_logged_status(self, 0, v20);

  if (v11)
  {
    brc_bread_crumbs();
    v12 = (char *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      -[BRCXPCClient session](self, "session");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "serverState");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "lastSyncDownDate");
      v16 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v24 = self;
      v25 = 2112;
      v26 = v16;
      v27 = 2112;
      v28 = 0;
      v29 = 2112;
      v30 = v12;
      _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

    }
    -[BRCXPCClient session](self, "session");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "serverState");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "lastSyncDownDate");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, void *, _QWORD))v10 + 2))(v10, v19, 0);

  }
  __brc_leave_section(v22);

}

void __52__BRCXPCRegularIPCsClient_getLastSyncDateWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __57__BRCXPCRegularIPCsClient_getLocalizedLastSyncWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)getContainerStatusWithID:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  void *v13;
  id v14;
  int v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  int v25;
  void *v26;
  uint64_t v27;
  _QWORD v28[5];
  id v29;
  uint64_t v30[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  _BYTE v34[28];
  __int16 v35;
  id v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v30, 0, sizeof(v30));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getContainerStatusWithID:reply:]", 3570, v30);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v30[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v32 = (BRCXPCRegularIPCsClient *)v10;
    v33 = 2112;
    *(_QWORD *)v34 = self;
    *(_WORD *)&v34[8] = 2112;
    *(_QWORD *)&v34[10] = v12;
    *(_WORD *)&v34[18] = 2080;
    *(_QWORD *)&v34[20] = "-[BRCXPCRegularIPCsClient getContainerStatusWithID:reply:]";
    v35 = 2112;
    v36 = v6;
    v37 = 2112;
    v38 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  if (v6)
    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v6);
  else
    v13 = 0;
  v28[0] = MEMORY[0x1E0C809B0];
  v28[1] = 3221225472;
  v28[2] = __58__BRCXPCRegularIPCsClient_getContainerStatusWithID_reply___block_invoke;
  v28[3] = &unk_1E875FCF8;
  v28[4] = self;
  v14 = v7;
  v29 = v14;
  v15 = _brc_ipc_check_applibrary_read_access(self, 1, v13, v28);

  if (v15)
  {
    -[BRCXPCClient session](self, "session");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "appLibraryByID:", v6);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v17)
    {
      brc_bread_crumbs();
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("containerID"), v6);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        v32 = self;
        v33 = 1024;
        *(_DWORD *)v34 = 0;
        *(_WORD *)&v34[4] = 2112;
        *(_QWORD *)&v34[6] = v20;
        *(_WORD *)&v34[14] = 2112;
        *(_QWORD *)&v34[16] = v18;
        _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);

      }
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("containerID"), v6);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v14 + 2))(v14, 0, v21);

    }
    brc_bread_crumbs();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(v17, "defaultClientZone");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = BRContainerStatusFromSyncState(objc_msgSend(v24, "syncState"));
      *(_DWORD *)buf = 138413058;
      v32 = self;
      v33 = 1024;
      *(_DWORD *)v34 = v25;
      *(_WORD *)&v34[4] = 2112;
      *(_QWORD *)&v34[6] = 0;
      *(_WORD *)&v34[14] = 2112;
      *(_QWORD *)&v34[16] = v22;
      _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);

    }
    objc_msgSend(v17, "defaultClientZone");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = BRContainerStatusFromSyncState(objc_msgSend(v26, "syncState"));
    (*((void (**)(id, uint64_t, _QWORD))v14 + 2))(v14, v27, 0);

  }
  __brc_leave_section(v30);

}

void __58__BRCXPCRegularIPCsClient_getContainerStatusWithID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)getContainerLastServerUpdateWithID:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  void *v13;
  id v14;
  int v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  _QWORD v32[5];
  id v33;
  uint64_t v34[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v36;
  __int16 v37;
  _BYTE v38[28];
  __int16 v39;
  id v40;
  __int16 v41;
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v34, 0, sizeof(v34));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getContainerLastServerUpdateWithID:reply:]", 3584, v34);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v34[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219266;
    v36 = (BRCXPCRegularIPCsClient *)v10;
    v37 = 2112;
    *(_QWORD *)v38 = self;
    *(_WORD *)&v38[8] = 2112;
    *(_QWORD *)&v38[10] = v12;
    *(_WORD *)&v38[18] = 2080;
    *(_QWORD *)&v38[20] = "-[BRCXPCRegularIPCsClient getContainerLastServerUpdateWithID:reply:]";
    v39 = 2112;
    v40 = v6;
    v41 = 2112;
    v42 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@%@", buf, 0x3Eu);

  }
  if (v6)
    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithAppLibraryName:", v6);
  else
    v13 = 0;
  v32[0] = MEMORY[0x1E0C809B0];
  v32[1] = 3221225472;
  v32[2] = __68__BRCXPCRegularIPCsClient_getContainerLastServerUpdateWithID_reply___block_invoke;
  v32[3] = &unk_1E875FCF8;
  v32[4] = self;
  v14 = v7;
  v33 = v14;
  v15 = _brc_ipc_check_applibrary_read_access(self, 1, v13, v32);

  if (v15)
  {
    -[BRCXPCClient session](self, "session");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "appLibraryByID:", v6);
    v31 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v31)
    {
      brc_bread_crumbs();
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("containerID"), v6);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        v36 = self;
        v37 = 1024;
        *(_DWORD *)v38 = 0;
        *(_WORD *)&v38[4] = 2112;
        *(_QWORD *)&v38[6] = v19;
        *(_WORD *)&v38[14] = 2112;
        *(_QWORD *)&v38[16] = v17;
        _os_log_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);

      }
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("containerID"), v6);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v14 + 2))(v14, 0, v20);

    }
    brc_bread_crumbs();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(v31, "defaultClientZone");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "serverZone");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "changeState");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "lastSyncDownDate");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v36 = self;
      v37 = 2112;
      *(_QWORD *)v38 = v26;
      *(_WORD *)&v38[8] = 2112;
      *(_QWORD *)&v38[10] = 0;
      *(_WORD *)&v38[18] = 2112;
      *(_QWORD *)&v38[20] = v21;
      _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

    }
    objc_msgSend(v31, "defaultClientZone");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "serverZone");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "changeState");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "lastSyncDownDate");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, void *, _QWORD))v14 + 2))(v14, v30, 0);

  }
  __brc_leave_section(v34);

}

void __68__BRCXPCRegularIPCsClient_getContainerLastServerUpdateWithID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)currentNotifRankWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  int v12;
  void *v13;
  void *v14;
  _QWORD v15[5];
  id v16;
  _QWORD v17[5];
  id v18;
  uint64_t v19[3];
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  BRCXPCRegularIPCsClient *v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  const char *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v19, 0, sizeof(v19));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient currentNotifRankWithReply:]", 3600, v19);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v19[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v21 = v7;
    v22 = 2112;
    v23 = self;
    v24 = 2112;
    v25 = v9;
    v26 = 2080;
    v27 = "-[BRCXPCRegularIPCsClient currentNotifRankWithReply:]";
    v28 = 2112;
    v29 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = MEMORY[0x1E0C809B0];
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __53__BRCXPCRegularIPCsClient_currentNotifRankWithReply___block_invoke;
  v17[3] = &unk_1E875FCF8;
  v17[4] = self;
  v11 = v4;
  v18 = v11;
  v12 = _brc_ipc_check_applibrary_proxy(self, 1, v17);

  if (v12)
  {
    -[BRCXPCClient session](self, "session");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "notificationManager");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15[0] = v10;
    v15[1] = 3221225472;
    v15[2] = __53__BRCXPCRegularIPCsClient_currentNotifRankWithReply___block_invoke_436;
    v15[3] = &unk_1E87666D8;
    v15[4] = self;
    v16 = v11;
    objc_msgSend(v14, "fetchLastFlushedRankWithReply:", v15);

  }
  __brc_leave_section(v19);

}

void __53__BRCXPCRegularIPCsClient_currentNotifRankWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2048;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%llu, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t __53__BRCXPCRegularIPCsClient_currentNotifRankWithReply___block_invoke_436(uint64_t a1, uint64_t a2)
{
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v8 = 138413058;
    v9 = v6;
    v10 = 2048;
    v11 = a2;
    v12 = 2112;
    v13 = 0;
    v14 = 2112;
    v15 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%llu, %@)%@", (uint8_t *)&v8, 0x2Au);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)enumerateItemsInFolder:(id)a3 sortOrder:(unsigned __int8)a4 offset:(unint64_t)a5 limit:(unint64_t)a6 completion:(id)a7
{
  id v10;
  id v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  qos_class_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  int v19;
  char *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  brc_task_tracker *tracker;
  void *v25;
  id v26;
  id v27;
  _QWORD v30[5];
  id v31;
  _QWORD v32[4];
  id v33;
  id v34;
  id v35;
  BRCXPCRegularIPCsClient *v36;
  id v37;
  unint64_t v38;
  unint64_t v39;
  unsigned __int8 v40;
  _QWORD v41[5];
  id v42;
  uint64_t v43[3];
  uint8_t buf[4];
  uint64_t v45;
  __int16 v46;
  unint64_t v47;
  __int16 v48;
  unint64_t v49;
  __int16 v50;
  const char *v51;
  __int16 v52;
  void *v53;
  uint64_t v54;

  v54 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a7;
  memset(v43, 0, sizeof(v43));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient enumerateItemsInFolder:sortOrder:offset:limit:completion:]", 3620, v43);
  brc_bread_crumbs();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    v14 = v43[0];
    v15 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v15, (uint64_t)&brc_qos_entries, 0);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v45 = v14;
    v46 = 2112;
    v47 = (unint64_t)self;
    v48 = 2112;
    v49 = (unint64_t)v16;
    v50 = 2080;
    v51 = "-[BRCXPCRegularIPCsClient enumerateItemsInFolder:sortOrder:offset:limit:completion:]";
    v52 = 2112;
    v53 = v12;
    _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v17 = MEMORY[0x1E0C809B0];
  v41[0] = MEMORY[0x1E0C809B0];
  v41[1] = 3221225472;
  v41[2] = __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke;
  v41[3] = &unk_1E875FCF8;
  v41[4] = self;
  v18 = v11;
  v42 = v18;
  v19 = _brc_ipc_check_applibrary_proxy(self, 1, v41);

  if (v19)
  {
    brc_bread_crumbs();
    v20 = (char *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138413058;
      v45 = (uint64_t)v10;
      v46 = 2048;
      v47 = a5;
      v48 = 2048;
      v49 = a6;
      v50 = 2112;
      v51 = v20;
      _os_log_debug_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_DEBUG, "[DEBUG] enumerating items in %@ offset:%lld limit:%lld%@", buf, 0x2Au);
    }

    -[BRCXPCClient session](self, "session");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "readOnlyDB");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    tracker = self->super._tracker;
    objc_msgSend(v22, "readOnlyWorkloop");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v32[0] = v17;
    v32[1] = 3221225472;
    v32[2] = __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_438;
    v32[3] = &unk_1E8766728;
    v33 = v10;
    v38 = a5;
    v26 = v22;
    v34 = v26;
    v27 = v23;
    v35 = v27;
    v36 = self;
    v40 = a4;
    v37 = v18;
    v39 = a6;
    v30[0] = v17;
    v30[1] = 3221225472;
    v30[2] = __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_444;
    v30[3] = &unk_1E875EAA8;
    v30[4] = self;
    v31 = v37;
    brc_task_tracker_async_with_logs(tracker, v25, v32, v30);

  }
  __brc_leave_section(v43);

}

void __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  int v12;
  __int16 v13;
  int v14;
  __int16 v15;
  id v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413570;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 1024;
    v12 = 0;
    v13 = 1024;
    v14 = 0;
    v15 = 2112;
    v16 = v3;
    v17 = 2112;
    v18 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %ull, %d, %@)%@", (uint8_t *)&v7, 0x36u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_438(uint64_t a1)
{
  void *v2;
  void *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  void *v29;
  void *v30;
  _BOOL4 v31;
  void *v32;
  void *v33;
  void *v34;
  double v35;
  double v36;
  void *v37;
  double v38;
  double v39;
  void *v40;
  NSObject *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  void *v47;
  NSObject *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  int v58;
  void *v60;
  NSObject *v61;
  uint64_t v62;
  void *v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  _QWORD v68[4];
  id v69;
  _BYTE v70[128];
  void *v71;
  void *v72;
  uint8_t buf[4];
  uint64_t v74;
  __int16 v75;
  void *v76;
  __int16 v77;
  uint64_t v78;
  __int16 v79;
  _BOOL4 v80;
  __int16 v81;
  void *v82;
  __int16 v83;
  void *v84;
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  v2 = (void *)objc_opt_new();
  v3 = *(void **)(a1 + 32);
  if (!v3)
  {
    if (*(_QWORD *)(a1 + 72))
      goto LABEL_8;
    objc_msgSend(*(id *)(a1 + 40), "clientState");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "objectForKeyedSubscript:", CFSTR("lastQuotaFetchDate"));
    v33 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v33)
      goto LABEL_27;
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "timeIntervalSinceDate:", v33);
    v36 = v35;
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "minFetchQuotaInterval");
    v39 = v38;

    if (v36 > v39)
    {
LABEL_27:
      brc_bread_crumbs();
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v41 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_DEBUG))
        __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_438_cold_3();

      objc_msgSend(*(id *)(a1 + 40), "fsUploader");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v42, "forceScheduleQuotaFetchForOwner:", *MEMORY[0x1E0C94730]);

    }
    v43 = *(void **)(a1 + 40);
    v44 = *(_QWORD *)(a1 + 48);
    v68[0] = MEMORY[0x1E0C809B0];
    v68[1] = 3221225472;
    v68[2] = __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_441;
    v68[3] = &unk_1E8766700;
    v69 = v2;
    objc_msgSend(v43, "enumerateContainersWithDB:handler:", v44, v68);

    v3 = *(void **)(a1 + 32);
    if (!v3)
    {
LABEL_8:
      objc_msgSend(*(id *)(a1 + 40), "appLibraryByID:", *MEMORY[0x1E0D10DB0]);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      brc_bread_crumbs();
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
        __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_438_cold_1();

      objc_msgSend(v16, "fetchRootItemInDB:", *(_QWORD *)(a1 + 48));
      v19 = (void *)objc_claimAutoreleasedReturnValue();

      goto LABEL_12;
    }
  }
  v4 = objc_msgSend(v3, "isDocumentID");
  v5 = *(void **)(a1 + 32);
  v6 = *(void **)(a1 + 40);
  if (v4)
  {
    objc_msgSend(v6, "globalItemByDocumentID:db:", objc_msgSend(v5, "rawID"), *(_QWORD *)(a1 + 48));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    +[BRCNotification notificationFromItem:relpath:](BRCNotification, "notificationFromItem:relpath:", v7, 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "asFileProviderItem");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      brc_bread_crumbs();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        v12 = *(_QWORD *)(a1 + 56);
        v72 = v9;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v72, 1);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413570;
        v74 = v12;
        v75 = 2112;
        v76 = v13;
        v77 = 2048;
        v78 = 0;
        v79 = 1024;
        v80 = 0;
        v81 = 2112;
        v82 = 0;
        v83 = 2112;
        v84 = v10;
        _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %llu, %d, %@)%@", buf, 0x3Au);

      }
      v14 = *(_QWORD *)(a1 + 64);
      v71 = v9;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v71, 1);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, void *, _QWORD, _QWORD, _QWORD))(v14 + 16))(v14, v15, 0, 0, 0);

      goto LABEL_47;
    }

    goto LABEL_33;
  }
  objc_msgSend(v5, "folderID");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "globalItemByFileID:db:", objc_msgSend(v20, "unsignedLongLongValue"), *(_QWORD *)(a1 + 48));
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v19)
  {
LABEL_33:
    brc_bread_crumbs();
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v46 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v46, OS_LOG_TYPE_DEBUG))
      __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_438_cold_2();

    brc_bread_crumbs();
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v48 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v48, OS_LOG_TYPE_INFO))
    {
      v49 = *(_QWORD *)(a1 + 56);
      v50 = (void *)MEMORY[0x1E0CB35C8];
      objc_msgSend(*(id *)(a1 + 32), "description");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v50, "brc_errorItemNotFound:", v51);
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413570;
      v74 = v49;
      v75 = 2112;
      v76 = 0;
      v77 = 2048;
      v78 = 0;
      v79 = 1024;
      v80 = 0;
      v81 = 2112;
      v82 = v52;
      v83 = 2112;
      v84 = v47;
      _os_log_impl(&dword_1CBD43000, v48, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %llu, %d, %@)%@", buf, 0x3Au);

    }
    v53 = *(_QWORD *)(a1 + 64);
    v54 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(*(id *)(a1 + 32), "description");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v54, "brc_errorItemNotFound:", v7);
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, void *))(v53 + 16))(v53, 0, 0, 0, v55);

    goto LABEL_47;
  }
LABEL_12:
  v21 = *(_QWORD *)(a1 + 72);
  v64 = 0u;
  v65 = 0u;
  v66 = 0u;
  v67 = 0u;
  objc_msgSend(v19, "appLibrary");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v63 = v19;
  objc_msgSend(v19, "itemGlobalID");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "enumerateUserVisibleChildrenOfItemGlobalID:sortOrder:offset:limit:db:", v23, *(unsigned __int8 *)(a1 + 88), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 48));
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v64, v70, 16);
  if (v25)
  {
    v26 = v25;
    v27 = *(_QWORD *)v65;
    do
    {
      for (i = 0; i != v26; ++i)
      {
        if (*(_QWORD *)v65 != v27)
          objc_enumerationMutation(v24);
        +[BRCNotification notificationFromItem:](BRCNotification, "notificationFromItem:", *(_QWORD *)(*((_QWORD *)&v64 + 1) + 8 * i));
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v29, "asFileProviderItem");
        v30 = (void *)objc_claimAutoreleasedReturnValue();

        if (v30)
          objc_msgSend(v2, "addObject:", v30);

      }
      v21 += v26;
      v26 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v64, v70, 16);
    }
    while (v26);
  }

  if (v21 - *(_QWORD *)(a1 + 72) == *(_QWORD *)(a1 + 80))
  {
    v31 = 1;
    v7 = v63;
  }
  else
  {
    v7 = v63;
    if ((objc_msgSend(v63, "isShareAcceptationFault") & 1) != 0)
    {
      v21 = 0;
      v31 = 1;
    }
    else
    {
      objc_msgSend(v63, "clientZone");
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v63, "itemID");
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      v58 = objc_msgSend(v56, "serverItemTypeByItemID:db:", v57, *(_QWORD *)(a1 + 48));

      v21 = 0;
      v31 = v58 == 9 || v58 == -1;
    }
  }
  brc_bread_crumbs();
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v61 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v61, OS_LOG_TYPE_INFO))
  {
    v62 = *(_QWORD *)(a1 + 56);
    *(_DWORD *)buf = 138413570;
    v74 = v62;
    v75 = 2112;
    v76 = v2;
    v77 = 2048;
    v78 = v21;
    v79 = 1024;
    v80 = v31;
    v81 = 2112;
    v82 = 0;
    v83 = 2112;
    v84 = v60;
    _os_log_impl(&dword_1CBD43000, v61, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %llu, %d, %@)%@", buf, 0x3Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
LABEL_47:

}

void __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_441(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;

  objc_msgSend(a2, "asFileProviderItem");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);
    v3 = v4;
  }

}

void __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_444(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  int v15;
  __int16 v16;
  void *v17;
  __int16 v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413570;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2048;
    v13 = 0;
    v14 = 1024;
    v15 = 0;
    v16 = 2112;
    v17 = v5;
    v18 = 2112;
    v19 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %llu, %d, %@)%@", (uint8_t *)&v8, 0x3Au);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, void *))(v6 + 16))(v6, 0, 0, 0, v7);

}

- (BOOL)_enumerateFoldersWithParent:(id)a3 depth:(unint64_t)a4 session:(id)a5 db:(id)a6 handler:(id)a7
{
  id v12;
  id v13;
  id v14;
  unsigned int (**v15)(id, void *);
  _BOOL4 v16;
  void *v17;
  unint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  NSObject *v29;
  uint64_t v30;
  unsigned int (**v31)(id, void *);
  void *v33;
  id v34;
  id obj;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _QWORD v41[5];
  id v42;
  id v43;
  unsigned int (**v44)(id, void *);
  unint64_t v45;
  uint8_t buf[4];
  void *v47;
  _BYTE v48[128];
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a5;
  v14 = a6;
  v15 = (unsigned int (**)(id, void *))a7;
  if ((brc_task_tracker_is_cancelled(self->super._tracker) & 1) != 0)
  {
    LOBYTE(v16) = 0;
  }
  else
  {
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v17, "maxFolderEnumerationDepth");

    if (v18 >= a4)
    {
      if (v12)
      {
        v39 = 0u;
        v40 = 0u;
        v37 = 0u;
        v38 = 0u;
        objc_msgSend(v12, "appLibrary");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "itemGlobalID");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "enumerateUserVisibleChildrenDirectoriesOfItemGlobalID:db:", v20, v14);
        v21 = (void *)objc_claimAutoreleasedReturnValue();

        obj = v21;
        v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v37, v48, 16);
        if (v22)
        {
          v23 = v22;
          v34 = v12;
          v24 = *(_QWORD *)v38;
          v36 = a4 + 1;
          do
          {
            v25 = 0;
            do
            {
              if (*(_QWORD *)v38 != v24)
                objc_enumerationMutation(obj);
              v26 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * v25);
              v27 = (void *)MEMORY[0x1D17A6BE8]();
              if ((objc_msgSend(v26, "isDirectory") & 1) == 0)
              {
                brc_bread_crumbs();
                v33 = (void *)objc_claimAutoreleasedReturnValue();
                brc_default_log();
                v29 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v29, OS_LOG_TYPE_FAULT))
                {
                  *(_DWORD *)buf = 138412290;
                  v47 = v33;
                  _os_log_fault_impl(&dword_1CBD43000, v29, OS_LOG_TYPE_FAULT, "[CRIT] Assertion failed: directoryItem.isDirectory%@", buf, 0xCu);
                }

              }
              +[BRCNotification notificationFromItem:](BRCNotification, "notificationFromItem:", v26);
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              if (!v15[2](v15, v28))
              {

                objc_autoreleasePoolPop(v27);
                LOBYTE(v16) = 0;
                goto LABEL_24;
              }
              v16 = -[BRCXPCRegularIPCsClient _enumerateFoldersWithParent:depth:session:db:handler:](self, "_enumerateFoldersWithParent:depth:session:db:handler:", v26, v36, v13, v14, v15);

              objc_autoreleasePoolPop(v27);
              if (!v16)
                goto LABEL_24;
              ++v25;
            }
            while (v23 != v25);
            v30 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v37, v48, 16);
            v23 = v30;
            LOBYTE(v16) = 1;
          }
          while (v30);
LABEL_24:
          v12 = v34;
        }
        else
        {
          LOBYTE(v16) = 1;
        }
        v31 = (unsigned int (**)(id, void *))obj;
      }
      else
      {
        v41[0] = MEMORY[0x1E0C809B0];
        v41[1] = 3221225472;
        v41[2] = __80__BRCXPCRegularIPCsClient__enumerateFoldersWithParent_depth_session_db_handler___block_invoke;
        v41[3] = &unk_1E8766750;
        v44 = v15;
        v45 = a4;
        v41[4] = self;
        v42 = v13;
        v43 = v14;
        objc_msgSend(v42, "enumerateContainersWithDB:handler:", v43, v41);

        LOBYTE(v16) = 1;
        v31 = v44;
      }

    }
    else
    {
      LOBYTE(v16) = 1;
    }
  }

  return v16;
}

void __80__BRCXPCRegularIPCsClient__enumerateFoldersWithParent_depth_session_db_handler___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (v6)
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  if (v5)
    objc_msgSend(*(id *)(a1 + 32), "_enumerateFoldersWithParent:depth:session:db:handler:", v5, *(_QWORD *)(a1 + 64) + 1, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));

}

- (void)enumerateAllFoldersWithSortOrder:(unsigned __int8)a3 offset:(unint64_t)a4 limit:(unint64_t)a5 completion:(id)a6
{
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  qos_class_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  int v17;
  void *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  brc_task_tracker *tracker;
  void *v23;
  id v24;
  id v25;
  _QWORD v26[5];
  id v27;
  _QWORD v28[5];
  id v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD v34[5];
  id v35;
  uint64_t v36[3];
  uint8_t buf[4];
  unint64_t v38;
  __int16 v39;
  unint64_t v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  const char *v44;
  __int16 v45;
  void *v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v9 = a6;
  memset(v36, 0, sizeof(v36));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient enumerateAllFoldersWithSortOrder:offset:limit:completion:]", 3806, v36);
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = v36[0];
    v13 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v13, (uint64_t)&brc_qos_entries, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v38 = v12;
    v39 = 2112;
    v40 = (unint64_t)self;
    v41 = 2112;
    v42 = v14;
    v43 = 2080;
    v44 = "-[BRCXPCRegularIPCsClient enumerateAllFoldersWithSortOrder:offset:limit:completion:]";
    v45 = 2112;
    v46 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v15 = MEMORY[0x1E0C809B0];
  v34[0] = MEMORY[0x1E0C809B0];
  v34[1] = 3221225472;
  v34[2] = __84__BRCXPCRegularIPCsClient_enumerateAllFoldersWithSortOrder_offset_limit_completion___block_invoke;
  v34[3] = &unk_1E875FCF8;
  v34[4] = self;
  v16 = v9;
  v35 = v16;
  v17 = _brc_ipc_check_applibrary_proxy(self, 1, v34);

  if (v17)
  {
    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134218498;
      v38 = a4;
      v39 = 2048;
      v40 = a5;
      v41 = 2112;
      v42 = v18;
      _os_log_debug_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_DEBUG, "[DEBUG] enumerating all folders offset:%lld limit:%lld%@", buf, 0x20u);
    }

    -[BRCXPCClient session](self, "session");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "readOnlyDB");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    tracker = self->super._tracker;
    objc_msgSend(v21, "serialQueue");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v28[0] = v15;
    v28[1] = 3221225472;
    v28[2] = __84__BRCXPCRegularIPCsClient_enumerateAllFoldersWithSortOrder_offset_limit_completion___block_invoke_445;
    v28[3] = &unk_1E87667A0;
    v28[4] = self;
    v24 = v20;
    v29 = v24;
    v25 = v21;
    v30 = v25;
    v32 = a4;
    v33 = a5;
    v31 = v16;
    v26[0] = v15;
    v26[1] = 3221225472;
    v26[2] = __84__BRCXPCRegularIPCsClient_enumerateAllFoldersWithSortOrder_offset_limit_completion___block_invoke_447;
    v26[3] = &unk_1E875EAA8;
    v26[4] = self;
    v27 = v31;
    brc_task_tracker_async_with_logs(tracker, v23, v28, v26);

  }
  __brc_leave_section(v36);

}

void __84__BRCXPCRegularIPCsClient_enumerateAllFoldersWithSortOrder_offset_limit_completion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  int v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 1024;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %ull, %@)%@", (uint8_t *)&v7, 0x30u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __84__BRCXPCRegularIPCsClient_enumerateAllFoldersWithSortOrder_offset_limit_completion___block_invoke_445(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[4];
  id v12;
  uint64_t *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t buf[4];
  uint64_t v20;
  __int16 v21;
  id v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v2 = (void *)objc_opt_new();
  v15 = 0;
  v16 = &v15;
  v17 = 0x2020000000;
  v18 = 0;
  v3 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __84__BRCXPCRegularIPCsClient_enumerateAllFoldersWithSortOrder_offset_limit_completion___block_invoke_2;
  v11[3] = &unk_1E8766778;
  v13 = &v15;
  v14 = *(_OWORD *)(a1 + 64);
  v6 = v2;
  v12 = v6;
  objc_msgSend(v3, "_enumerateFoldersWithParent:depth:session:db:handler:", 0, 0, v4, v5, v11);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = v16[3];
    *(_DWORD *)buf = 138413314;
    v20 = v9;
    v21 = 2112;
    v22 = v6;
    v23 = 2048;
    v24 = v10;
    v25 = 2112;
    v26 = 0;
    v27 = 2112;
    v28 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %llu, %@)%@", buf, 0x34u);
  }

  (*(void (**)(_QWORD, id, uint64_t, _QWORD))(*(_QWORD *)(a1 + 56) + 16))(*(_QWORD *)(a1 + 56), v6, v16[3], 0);
  _Block_object_dispose(&v15, 8);

}

uint64_t __84__BRCXPCRegularIPCsClient_enumerateAllFoldersWithSortOrder_offset_limit_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  if (v5 < v4)
    goto LABEL_5;
  if (v5 <= *(_QWORD *)(a1 + 56) + v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
LABEL_5:
    v6 = 1;
    goto LABEL_6;
  }
  v6 = 0;
LABEL_6:

  return v6;
}

void __84__BRCXPCRegularIPCsClient_enumerateAllFoldersWithSortOrder_offset_limit_completion___block_invoke_447(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  void *v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413314;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2048;
    v13 = 0;
    v14 = 2112;
    v15 = v5;
    v16 = 2112;
    v17 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %llu, %@)%@", (uint8_t *)&v8, 0x34u);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, _QWORD, void *))(v6 + 16))(v6, 0, 0, v7);

}

- (void)enumerateWorkingSetChangesFromChangeToken:(id)a3 limit:(unint64_t)a4 completion:(id)a5
{
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  qos_class_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  int v17;
  void *v18;
  NSObject *v19;
  unint64_t v20;
  uint64_t v21;
  qos_class_t v22;
  void *v23;
  void *v24;
  brc_task_tracker *tracker;
  void *v26;
  id v27;
  id v28;
  _QWORD v29[5];
  id v30;
  _QWORD v31[4];
  id v32;
  id v33;
  BRCXPCRegularIPCsClient *v34;
  id v35;
  unint64_t v36;
  uint64_t v37[3];
  _QWORD v38[5];
  id v39;
  uint64_t v40[3];
  uint8_t buf[4];
  uint64_t v42;
  __int16 v43;
  BRCXPCRegularIPCsClient *v44;
  __int16 v45;
  void *v46;
  __int16 v47;
  const char *v48;
  __int16 v49;
  void *v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  memset(v40, 0, sizeof(v40));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient enumerateWorkingSetChangesFromChangeToken:limit:completion:]", 3849, v40);
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = v40[0];
    v13 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v13, (uint64_t)&brc_qos_entries, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v42 = v12;
    v43 = 2112;
    v44 = self;
    v45 = 2112;
    v46 = v14;
    v47 = 2080;
    v48 = "-[BRCXPCRegularIPCsClient enumerateWorkingSetChangesFromChangeToken:limit:completion:]";
    v49 = 2112;
    v50 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v15 = MEMORY[0x1E0C809B0];
  v38[0] = MEMORY[0x1E0C809B0];
  v38[1] = 3221225472;
  v38[2] = __86__BRCXPCRegularIPCsClient_enumerateWorkingSetChangesFromChangeToken_limit_completion___block_invoke;
  v38[3] = &unk_1E875FCF8;
  v38[4] = self;
  v16 = v9;
  v39 = v16;
  v17 = _brc_ipc_check_applibrary_proxy(self, 1, v38);

  if (v17)
  {
    memset(v37, 0, sizeof(v37));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient enumerateWorkingSetChangesFromChangeToken:limit:completion:]", 3851, v37);
    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      v28 = v8;
      v20 = a4;
      v21 = v37[0];
      v22 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v22, (uint64_t)&brc_qos_entries, 0);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219010;
      v42 = v21;
      v43 = 2112;
      v44 = self;
      v45 = 2112;
      v46 = v23;
      v47 = 2080;
      v48 = "-[BRCXPCRegularIPCsClient enumerateWorkingSetChangesFromChangeToken:limit:completion:]";
      v49 = 2112;
      v50 = v18;
      _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s enumerating working set changes%@", buf, 0x34u);

      a4 = v20;
      v8 = v28;
    }

    -[BRCXPCClient session](self, "session");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    tracker = self->super._tracker;
    objc_msgSend(v24, "clientTruthWorkloop");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v31[0] = v15;
    v31[1] = 3221225472;
    v31[2] = __86__BRCXPCRegularIPCsClient_enumerateWorkingSetChangesFromChangeToken_limit_completion___block_invoke_448;
    v31[3] = &unk_1E8760138;
    v27 = v24;
    v32 = v27;
    v36 = a4;
    v33 = v8;
    v34 = self;
    v35 = v16;
    v29[0] = v15;
    v29[1] = 3221225472;
    v29[2] = __86__BRCXPCRegularIPCsClient_enumerateWorkingSetChangesFromChangeToken_limit_completion___block_invoke_450;
    v29[3] = &unk_1E875EAA8;
    v29[4] = self;
    v30 = v35;
    brc_task_tracker_async_with_logs(tracker, v26, v31, v29);

    __brc_leave_section(v37);
  }
  __brc_leave_section(v40);

}

void __86__BRCXPCRegularIPCsClient_enumerateWorkingSetChangesFromChangeToken_limit_completion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413570;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = 0;
    v15 = 2112;
    v16 = v3;
    v17 = 2112;
    v18 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@)%@", (uint8_t *)&v7, 0x3Eu);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __86__BRCXPCRegularIPCsClient_enumerateWorkingSetChangesFromChangeToken_limit_completion___block_invoke_448(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "recentsEnumerator");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __86__BRCXPCRegularIPCsClient_enumerateWorkingSetChangesFromChangeToken_limit_completion___block_invoke_2;
  v5[3] = &unk_1E87667C8;
  v3 = *(_QWORD *)(a1 + 40);
  v5[4] = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 64);
  v6 = *(id *)(a1 + 56);
  objc_msgSend(v2, "enumerateChangesFromChangeToken:limit:completion:", v3, v4, v5);

}

void __86__BRCXPCRegularIPCsClient_enumerateWorkingSetChangesFromChangeToken_limit_completion___block_invoke_2(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  __int16 v18;
  id v19;
  __int16 v20;
  id v21;
  __int16 v22;
  id v23;
  __int16 v24;
  id v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v9 = a2;
  v10 = a3;
  v11 = a4;
  v12 = a5;
  brc_bread_crumbs();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    v15 = *(_QWORD *)(a1 + 32);
    v16 = 138413570;
    v17 = v15;
    v18 = 2112;
    v19 = v9;
    v20 = 2112;
    v21 = v10;
    v22 = 2112;
    v23 = v11;
    v24 = 2112;
    v25 = v12;
    v26 = 2112;
    v27 = v13;
    _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@)%@", (uint8_t *)&v16, 0x3Eu);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __86__BRCXPCRegularIPCsClient_enumerateWorkingSetChangesFromChangeToken_limit_completion___block_invoke_450(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  void *v17;
  __int16 v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413570;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = 0;
    v14 = 2112;
    v15 = 0;
    v16 = 2112;
    v17 = v5;
    v18 = 2112;
    v19 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@)%@", (uint8_t *)&v8, 0x3Eu);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, void *))(v6 + 16))(v6, 0, 0, 0, v7);

}

- (void)_getPublishedURLForLocalItem:(id)a3 forStreaming:(BOOL)a4 requestedTTL:(unint64_t)a5 reply:(id)a6
{
  _BOOL4 v8;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  OS_dispatch_queue *queue;
  brc_task_tracker *tracker;
  id v38;
  id v39;
  void *v40;
  void *v41;
  _QWORD v42[4];
  id v43;
  id v44;
  _QWORD v45[4];
  id v46;
  void *v47;
  _QWORD v48[4];
  id v49;
  void *v50;
  const __CFString *v51;
  void *v52;
  _QWORD v53[3];

  v8 = a4;
  v53[1] = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a6;
  if ((objc_msgSend(v10, "isDocument") & 1) == 0)
  {
    v18 = (void *)MEMORY[0x1E0CB35C8];
    v19 = 2;
LABEL_6:
    objc_msgSend(v18, "brc_errorNoDocument:underlyingPOSIXError:", 0, v19);
    v20 = objc_claimAutoreleasedReturnValue();
    goto LABEL_8;
  }
  objc_msgSend(v10, "asDocument");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "currentVersion");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "ckInfo");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    objc_msgSend(v10, "asDocument");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "currentVersion");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "isPackage");

    if (!v17)
    {
      objc_msgSend(v10, "serverZone");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "mangledID");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", v22);
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v10, "asDocument");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "documentRecordID");
      v24 = objc_claimAutoreleasedReturnValue();

      v25 = objc_alloc(MEMORY[0x1E0C95008]);
      v41 = (void *)v24;
      v53[0] = v24;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v53, 1);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = (void *)objc_msgSend(v25, "initWithRecordIDs:", v26);

      objc_msgSend(MEMORY[0x1E0C94F88], "br_publishingRequest");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "setGroup:", v28);

      v51 = CFSTR("fileContent");
      objc_msgSend(v10, "st");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "logicalName");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v52 = v30;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v52, &v51, 1);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "setFileNamesByAssetFieldNames:", v31);

      if (!a5)
        a5 = objc_msgSend(v21, "publishURLTimeout");
      objc_msgSend(v27, "setRequestedTTL:", a5);
      objc_msgSend(v27, "configuration");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v32, "setDiscretionaryNetworkBehavior:", 0);

      objc_msgSend(v27, "configuration");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "setAutomaticallyRetryNetworkFailures:", 0);

      if (v8)
        objc_msgSend(v27, "setURLOptions:", 1);
      v34 = MEMORY[0x1E0C809B0];
      v48[0] = MEMORY[0x1E0C809B0];
      v48[1] = 3221225472;
      v48[2] = __88__BRCXPCRegularIPCsClient__getPublishedURLForLocalItem_forStreaming_requestedTTL_reply___block_invoke;
      v48[3] = &unk_1E87667F0;
      v35 = v11;
      v49 = v35;
      v50 = v27;
      objc_msgSend(v27, "setAssetPublishedBlock:", v48);
      v45[0] = v34;
      v45[1] = 3221225472;
      v45[2] = __88__BRCXPCRegularIPCsClient__getPublishedURLForLocalItem_forStreaming_requestedTTL_reply___block_invoke_2;
      v45[3] = &unk_1E8766818;
      v46 = v35;
      v47 = v27;
      objc_msgSend(v27, "setPublishAssetCompletionBlock:", v45);
      tracker = self->super._tracker;
      queue = self->super._queue;
      v42[0] = v34;
      v42[1] = 3221225472;
      v42[2] = __88__BRCXPCRegularIPCsClient__getPublishedURLForLocalItem_forStreaming_requestedTTL_reply___block_invoke_3;
      v42[3] = &unk_1E875D470;
      v43 = v40;
      v44 = v27;
      v38 = v27;
      v39 = v40;
      brc_task_tracker_async_with_logs(tracker, queue, v42, 0);

      goto LABEL_15;
    }
    v18 = (void *)MEMORY[0x1E0CB35C8];
    v19 = 21;
    goto LABEL_6;
  }
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", 0);
  v20 = objc_claimAutoreleasedReturnValue();
LABEL_8:
  v21 = (void *)v20;
  if (v20)
  {
    (*((void (**)(id, _QWORD, _QWORD, uint64_t))v11 + 2))(v11, 0, 0, v20);
LABEL_15:

  }
}

uint64_t __88__BRCXPCRegularIPCsClient__getPublishedURLForLocalItem_forStreaming_requestedTTL_reply___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  void *v11;

  v7 = *(_QWORD *)(a1 + 32);
  v8 = a5;
  v9 = a4;
  objc_msgSend(v9, "downloadURL");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "downloadURLExpiration");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  (*(void (**)(uint64_t, void *, void *, id))(v7 + 16))(v7, v10, v11, v8);
  objc_msgSend(*(id *)(a1 + 40), "setPublishAssetCompletionBlock:", 0);
  return objc_msgSend(*(id *)(a1 + 40), "setAssetPublishedBlock:", 0);
}

uint64_t __88__BRCXPCRegularIPCsClient__getPublishedURLForLocalItem_forStreaming_requestedTTL_reply___block_invoke_2(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  objc_msgSend(*(id *)(a1 + 40), "setPublishAssetCompletionBlock:", 0);
  return objc_msgSend(*(id *)(a1 + 40), "setAssetPublishedBlock:", 0);
}

void __88__BRCXPCRegularIPCsClient__getPublishedURLForLocalItem_forStreaming_requestedTTL_reply___block_invoke_3(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "metadataSyncContext");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addOperation:", *(_QWORD *)(a1 + 40));

}

- (void)_getiWorkPublishingInfoForLocalItem:(id)a3 itemIdentifier:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  char v12;
  BRCFetchiWorkSharingInfoOperation *v13;
  void *v14;
  void *v15;
  BRCFetchiWorkSharingInfoOperation *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  NSObject *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, void *, void *);
  void *v34;
  BRCXPCRegularIPCsClient *v35;
  id v36;
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v38;
  __int16 v39;
  int v40;
  __int16 v41;
  int v42;
  __int16 v43;
  uint64_t v44;
  __int16 v45;
  void *v46;
  __int16 v47;
  void *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (!v8)
  {
    brc_bread_crumbs();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", v9);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413570;
      v38 = self;
      v39 = 1024;
      v40 = 0;
      v41 = 1024;
      v42 = 0;
      v43 = 2112;
      v44 = 0;
      v45 = 2112;
      v46 = v20;
      v47 = 2112;
      v48 = v18;
      _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %@, %@)%@", buf, 0x36u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", v9);
    v21 = objc_claimAutoreleasedReturnValue();
    goto LABEL_18;
  }
  if ((objc_msgSend(v8, "isDocument") & 1) == 0)
  {
    brc_bread_crumbs();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", v9, 21);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413570;
      v38 = self;
      v39 = 1024;
      v40 = 0;
      v41 = 1024;
      v42 = 0;
      v43 = 2112;
      v44 = 0;
      v45 = 2112;
      v46 = v24;
      v47 = 2112;
      v48 = v22;
      _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %@, %@)%@", buf, 0x36u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", v9, 21);
    v21 = objc_claimAutoreleasedReturnValue();
    goto LABEL_18;
  }
  if ((objc_msgSend(v8, "isKnownByServer") & 1) == 0)
  {
    brc_bread_crumbs();
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", v9);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413570;
      v38 = self;
      v39 = 1024;
      v40 = 0;
      v41 = 1024;
      v42 = 0;
      v43 = 2112;
      v44 = 0;
      v45 = 2112;
      v46 = v27;
      v47 = 2112;
      v48 = v25;
      _os_log_impl(&dword_1CBD43000, v26, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %@, %@)%@", buf, 0x36u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", v9);
    v21 = objc_claimAutoreleasedReturnValue();
    goto LABEL_18;
  }
  objc_msgSend(v8, "st");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "iWorkShareable");

  if ((v12 & 1) == 0)
  {
    brc_bread_crumbs();
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("path isn't iWork Shareable"), v9);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413570;
      v38 = self;
      v39 = 1024;
      v40 = 0;
      v41 = 1024;
      v42 = 0;
      v43 = 2112;
      v44 = 0;
      v45 = 2112;
      v46 = v30;
      v47 = 2112;
      v48 = v28;
      _os_log_impl(&dword_1CBD43000, v29, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %@, %@)%@", buf, 0x36u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("path isn't iWork Shareable"), v9);
    v21 = objc_claimAutoreleasedReturnValue();
LABEL_18:
    v16 = (BRCFetchiWorkSharingInfoOperation *)v21;
    (*((void (**)(id, _QWORD, _QWORD, _QWORD, uint64_t))v10 + 2))(v10, 0, 0, 0, v21);
    goto LABEL_19;
  }
  v13 = [BRCFetchiWorkSharingInfoOperation alloc];
  objc_msgSend(v8, "asDocument");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[BRCXPCClient session](self, "session");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = -[BRCFetchiWorkSharingInfoOperation initWithDocumentItem:sessionContext:](v13, "initWithDocumentItem:sessionContext:", v14, v15);

  v31 = MEMORY[0x1E0C809B0];
  v32 = 3221225472;
  v33 = __84__BRCXPCRegularIPCsClient__getiWorkPublishingInfoForLocalItem_itemIdentifier_reply___block_invoke;
  v34 = &unk_1E8766840;
  v35 = self;
  v36 = v10;
  -[_BRCOperation setFinishBlock:](v16, "setFinishBlock:", &v31);
  -[BRCXPCClient session](self, "session", v31, v32, v33, v34, v35);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "addMiscOperation:", v16);

  -[_BRCOperation schedule](v16, "schedule");
LABEL_19:

}

void __84__BRCXPCRegularIPCsClient__getiWorkPublishingInfoForLocalItem_itemIdentifier_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  char v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  NSObject *v28;
  void *v29;
  void *v30;
  NSObject *v31;
  uint64_t v32;
  void *v33;
  NSObject *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  NSObject *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  __int16 v43;
  int v44;
  __int16 v45;
  int v46;
  __int16 v47;
  void *v48;
  __int16 v49;
  void *v50;
  __int16 v51;
  void *v52;
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = *MEMORY[0x1E0C94B58];
  v7 = a2;
  objc_msgSend(v7, "objectForKeyedSubscript:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "BOOLValue");

  objc_msgSend(v7, "objectForKeyedSubscript:", *MEMORY[0x1E0C94B50]);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "BOOLValue");

  objc_msgSend(v7, "objectForKeyedSubscript:", *MEMORY[0x1E0C94B48]);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "encryptedValues");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v13, "objectForKeyedSubscript:", *MEMORY[0x1E0C94B60]);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      brc_bread_crumbs();
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_FAULT))
        __84__BRCXPCRegularIPCsClient__getiWorkPublishingInfoForLocalItem_itemIdentifier_reply___block_invoke_cold_3();

      objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithDomain:code:description:", *MEMORY[0x1E0D10C90], 15, CFSTR("unreachable: base token of unexpected class"));
      v17 = objc_claimAutoreleasedReturnValue();

      v5 = (id)v17;
    }
  }
  if (v14)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      brc_bread_crumbs();
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT))
        __84__BRCXPCRegularIPCsClient__getiWorkPublishingInfoForLocalItem_itemIdentifier_reply___block_invoke_cold_2();

      objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithDomain:code:description:", *MEMORY[0x1E0D10C90], 15, CFSTR("unreachable: sharing key of unexpected class"));
      v20 = objc_claimAutoreleasedReturnValue();

      v5 = (id)v20;
    }
  }
  if (v5)
  {
    brc_bread_crumbs();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      v23 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v5, "brc_wrappedError");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v41 = 138413570;
      v42 = v23;
      v43 = 1024;
      v44 = 0;
      v45 = 1024;
      v46 = 0;
      v47 = 2112;
      v48 = 0;
      v49 = 2112;
      v50 = v24;
      v51 = 2112;
      v52 = v21;
      _os_log_impl(&dword_1CBD43000, v22, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %@, %@)%@", (uint8_t *)&v41, 0x36u);

    }
    v25 = *(_QWORD *)(a1 + 40);
    objc_msgSend(v5, "brc_wrappedError");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, void *))(v25 + 16))(v25, 0, 0, 0, v26);

LABEL_15:
    goto LABEL_26;
  }
  if ((v9 & 1) != 0)
  {
    if ((v12 != 0) == (v14 != 0))
    {
      objc_msgSend(v14, "base64EncodedStringWithOptions:", 0);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = (id)objc_msgSend(v36, "mutableCopy");

      objc_msgSend(v5, "replaceOccurrencesOfString:withString:options:range:", CFSTR("+"), CFSTR("-"), 0, 0, objc_msgSend(v5, "length"));
      objc_msgSend(v5, "replaceOccurrencesOfString:withString:options:range:", CFSTR("/"), CFSTR("_"), 0, 0, objc_msgSend(v5, "length"));
      objc_msgSend(v12, "stringByAppendingString:", v5);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      brc_bread_crumbs();
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v39 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
      {
        v40 = *(_QWORD *)(a1 + 32);
        v41 = 138413570;
        v42 = v40;
        v43 = 1024;
        v44 = 1;
        v45 = 1024;
        v46 = v11;
        v47 = 2112;
        v48 = v37;
        v49 = 2112;
        v50 = 0;
        v51 = 2112;
        v52 = v38;
        _os_log_impl(&dword_1CBD43000, v39, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %@, %@)%@", (uint8_t *)&v41, 0x36u);
      }

      (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
      goto LABEL_15;
    }
    brc_bread_crumbs();
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v28 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_FAULT))
      __84__BRCXPCRegularIPCsClient__getiWorkPublishingInfoForLocalItem_itemIdentifier_reply___block_invoke_cold_1();

    objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithDomain:code:description:", *MEMORY[0x1E0D10C90], 15, CFSTR("unreachable: only got sharing key or base token, didn't get both"));
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    brc_bread_crumbs();
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v31 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
    {
      v32 = *(_QWORD *)(a1 + 32);
      v41 = 138413570;
      v42 = v32;
      v43 = 1024;
      v44 = 0;
      v45 = 1024;
      v46 = 0;
      v47 = 2112;
      v48 = 0;
      v49 = 2112;
      v50 = v29;
      v51 = 2112;
      v52 = v30;
      _os_log_impl(&dword_1CBD43000, v31, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %@, %@)%@", (uint8_t *)&v41, 0x36u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  else
  {
    brc_bread_crumbs();
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v34 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
    {
      v35 = *(_QWORD *)(a1 + 32);
      v41 = 138413570;
      v42 = v35;
      v43 = 1024;
      v44 = 0;
      v45 = 1024;
      v46 = 0;
      v47 = 2112;
      v48 = 0;
      v49 = 2112;
      v50 = 0;
      v51 = 2112;
      v52 = v33;
      _os_log_impl(&dword_1CBD43000, v34, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %@, %@)%@", (uint8_t *)&v41, 0x36u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
LABEL_26:

}

- (void)_setiWorkPublishingInfoForLocalItem:(id)a3 itemIdentifier:(id)a4 publish:(BOOL)a5 readonly:(BOOL)a6 reply:(id)a7
{
  _BOOL8 v8;
  _BOOL8 v9;
  id v12;
  id v13;
  void (**v14)(id, uint64_t);
  void *v15;
  char v16;
  BRCiWorkPublishingOperation *v17;
  void *v18;
  void *v19;
  BRCiWorkPublishingOperation *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  void *v31;
  void *v32;
  NSObject *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, void *);
  void *v38;
  BRCXPCRegularIPCsClient *v39;
  void (**v40)(id, uint64_t);
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v42;
  __int16 v43;
  void *v44;
  __int16 v45;
  void *v46;
  uint64_t v47;

  v8 = a6;
  v9 = a5;
  v47 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v14 = (void (**)(id, uint64_t))a7;
  if (!v12)
  {
    brc_bread_crumbs();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", v13);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v42 = self;
      v43 = 2112;
      v44 = v24;
      v45 = 2112;
      v46 = v22;
      _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", v13);
    v25 = objc_claimAutoreleasedReturnValue();
    goto LABEL_18;
  }
  if ((objc_msgSend(v12, "isDocument") & 1) == 0)
  {
    brc_bread_crumbs();
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", v13, 21);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v42 = self;
      v43 = 2112;
      v44 = v28;
      v45 = 2112;
      v46 = v26;
      _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", v13, 21);
    v25 = objc_claimAutoreleasedReturnValue();
    goto LABEL_18;
  }
  if ((objc_msgSend(v12, "isKnownByServer") & 1) == 0)
  {
    brc_bread_crumbs();
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v30 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", v13);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v42 = self;
      v43 = 2112;
      v44 = v31;
      v45 = 2112;
      v46 = v29;
      _os_log_impl(&dword_1CBD43000, v30, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", v13);
    v25 = objc_claimAutoreleasedReturnValue();
    goto LABEL_18;
  }
  objc_msgSend(v12, "st");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "iWorkShareable");

  if ((v16 & 1) == 0)
  {
    brc_bread_crumbs();
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v33 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("path isn't iWork Shareable"), v13);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v42 = self;
      v43 = 2112;
      v44 = v34;
      v45 = 2112;
      v46 = v32;
      _os_log_impl(&dword_1CBD43000, v33, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("path isn't iWork Shareable"), v13);
    v25 = objc_claimAutoreleasedReturnValue();
LABEL_18:
    v20 = (BRCiWorkPublishingOperation *)v25;
    v14[2](v14, v25);
    goto LABEL_19;
  }
  v17 = [BRCiWorkPublishingOperation alloc];
  objc_msgSend(v12, "asDocument");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  -[BRCXPCClient session](self, "session");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = -[BRCiWorkPublishingOperation initWithDocumentItem:sessionContext:forPublish:readonly:](v17, "initWithDocumentItem:sessionContext:forPublish:readonly:", v18, v19, v9, v8);

  v35 = MEMORY[0x1E0C809B0];
  v36 = 3221225472;
  v37 = __101__BRCXPCRegularIPCsClient__setiWorkPublishingInfoForLocalItem_itemIdentifier_publish_readonly_reply___block_invoke;
  v38 = &unk_1E8760EB8;
  v39 = self;
  v40 = v14;
  -[_BRCOperation setFinishBlock:](v20, "setFinishBlock:", &v35);
  -[BRCXPCClient session](self, "session", v35, v36, v37, v38, v39);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "addMiscOperation:", v20);

  -[_BRCOperation schedule](v20, "schedule");
LABEL_19:

}

void __101__BRCXPCRegularIPCsClient__setiWorkPublishingInfoForLocalItem_itemIdentifier_publish_readonly_reply___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v4, "brc_wrappedError");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = 138412802;
    v12 = v7;
    v13 = 2112;
    v14 = v8;
    v15 = 2112;
    v16 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v11, 0x20u);

  }
  v9 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v4, "brc_wrappedError");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);

}

- (void)_getiWorkPublishingBadgingStatusForLocalItem:(id)a3 itemIdentifier:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  void (**v10)(id, _QWORD, uint64_t);
  void *v11;
  char v12;
  void *v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  int v29;
  BRCXPCRegularIPCsClient *v30;
  __int16 v31;
  int v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = (void (**)(id, _QWORD, uint64_t))a5;
  if (!v8)
  {
    brc_bread_crumbs();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", v9);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = 138413058;
      v30 = self;
      v31 = 1024;
      v32 = 0;
      v33 = 2112;
      v34 = v17;
      v35 = 2112;
      v36 = v15;
      _os_log_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v29, 0x26u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", v9);
    v18 = objc_claimAutoreleasedReturnValue();
    goto LABEL_20;
  }
  if ((objc_msgSend(v8, "isDocument") & 1) == 0)
  {
    brc_bread_crumbs();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", v9, 21);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = 138413058;
      v30 = self;
      v31 = 1024;
      v32 = 0;
      v33 = 2112;
      v34 = v21;
      v35 = 2112;
      v36 = v19;
      _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v29, 0x26u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", v9, 21);
    v18 = objc_claimAutoreleasedReturnValue();
    goto LABEL_20;
  }
  if ((objc_msgSend(v8, "isKnownByServer") & 1) == 0)
  {
    brc_bread_crumbs();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", v9);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = 138413058;
      v30 = self;
      v31 = 1024;
      v32 = 0;
      v33 = 2112;
      v34 = v24;
      v35 = 2112;
      v36 = v22;
      _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v29, 0x26u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", v9);
    v18 = objc_claimAutoreleasedReturnValue();
    goto LABEL_20;
  }
  objc_msgSend(v8, "st");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "iWorkShareable");

  if ((v12 & 1) == 0)
  {
    brc_bread_crumbs();
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("path isn't iWork Shareable"), v9);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = 138413058;
      v30 = self;
      v31 = 1024;
      v32 = 0;
      v33 = 2112;
      v34 = v27;
      v35 = 2112;
      v36 = v25;
      _os_log_impl(&dword_1CBD43000, v26, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v29, 0x26u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("path isn't iWork Shareable"), v9);
    v18 = objc_claimAutoreleasedReturnValue();
LABEL_20:
    v28 = (void *)v18;
    v10[2](v10, 0, v18);

    goto LABEL_21;
  }
  brc_bread_crumbs();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    v29 = 138413058;
    v30 = self;
    v31 = 1024;
    LOBYTE(v32) = objc_msgSend(v8, "sharingOptions") & 3;
    v32 = v32;
    v33 = 2112;
    v34 = 0;
    v35 = 2112;
    v36 = v13;
    _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v29, 0x26u);
  }

  v10[2](v10, objc_msgSend(v8, "sharingOptions") & 3, 0);
LABEL_21:

}

- (void)_getiWorkNeedsShareMigrateForLocalItem:(id)a3 itemIdentifier:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  void (**v10)(id, _QWORD, uint64_t);
  void *v11;
  char v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  void *v28;
  void *v29;
  int v30;
  BRCXPCRegularIPCsClient *v31;
  __int16 v32;
  _BOOL4 v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = (void (**)(id, _QWORD, uint64_t))a5;
  if (!v8)
  {
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", v9);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v30 = 138413058;
      v31 = self;
      v32 = 1024;
      v33 = 0;
      v34 = 2112;
      v35 = v18;
      v36 = 2112;
      v37 = v16;
      _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v30, 0x26u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", v9);
    v19 = objc_claimAutoreleasedReturnValue();
    goto LABEL_20;
  }
  if ((objc_msgSend(v8, "isDocument") & 1) == 0)
  {
    brc_bread_crumbs();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", v9, 21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v30 = 138413058;
      v31 = self;
      v32 = 1024;
      v33 = 0;
      v34 = 2112;
      v35 = v22;
      v36 = 2112;
      v37 = v20;
      _os_log_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v30, 0x26u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", v9, 21);
    v19 = objc_claimAutoreleasedReturnValue();
    goto LABEL_20;
  }
  if ((objc_msgSend(v8, "isKnownByServer") & 1) == 0)
  {
    brc_bread_crumbs();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", v9);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v30 = 138413058;
      v31 = self;
      v32 = 1024;
      v33 = 0;
      v34 = 2112;
      v35 = v25;
      v36 = 2112;
      v37 = v23;
      _os_log_impl(&dword_1CBD43000, v24, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v30, 0x26u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", v9);
    v19 = objc_claimAutoreleasedReturnValue();
    goto LABEL_20;
  }
  objc_msgSend(v8, "st");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "iWorkShareable");

  if ((v12 & 1) == 0)
  {
    brc_bread_crumbs();
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("path isn't iWork Shareable"), v9);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v30 = 138413058;
      v31 = self;
      v32 = 1024;
      v33 = 0;
      v34 = 2112;
      v35 = v28;
      v36 = 2112;
      v37 = v26;
      _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v30, 0x26u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("path isn't iWork Shareable"), v9);
    v19 = objc_claimAutoreleasedReturnValue();
LABEL_20:
    v29 = (void *)v19;
    v10[2](v10, 0, v19);

    goto LABEL_21;
  }
  v13 = objc_msgSend(v8, "sharingOptions") & 0x4D;
  brc_bread_crumbs();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v15 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
  {
    v30 = 138413058;
    v31 = self;
    v32 = 1024;
    v33 = v13 == 1;
    v34 = 2112;
    v35 = 0;
    v36 = 2112;
    v37 = v14;
    _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v30, 0x26u);
  }

  ((void (**)(id, BOOL, uint64_t))v10)[2](v10, v13 == 1, 0);
LABEL_21:

}

- (void)_launchItemCountMismatchChecksForLocalItem:(id)a3 itemIdentifier:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  void (**v10)(id, _QWORD, uint64_t);
  void *v11;
  void *v12;
  NSObject *v13;
  dispatch_time_t v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  _QWORD v24[5];
  void (**v25)(id, _QWORD, uint64_t);
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  int v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = (void (**)(id, _QWORD, uint64_t))a5;
  if (!v8)
  {
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", v9);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v27 = self;
      v28 = 1024;
      v29 = 0;
      v30 = 2112;
      v31 = v18;
      v32 = 2112;
      v33 = v16;
      _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", v9);
    v19 = objc_claimAutoreleasedReturnValue();
    goto LABEL_10;
  }
  if ((objc_msgSend(v8, "isDirectory") & 1) == 0)
  {
    brc_bread_crumbs();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", v9, 20);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v27 = self;
      v28 = 1024;
      v29 = 0;
      v30 = 2112;
      v31 = v22;
      v32 = 2112;
      v33 = v20;
      _os_log_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", v9, 20);
    v19 = objc_claimAutoreleasedReturnValue();
LABEL_10:
    v23 = (void *)v19;
    v10[2](v10, 0, v19);

    goto LABEL_11;
  }
  -[BRCXPCClient session](self, "session");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "applyScheduler");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "hasActiveWorkGroup");
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = dispatch_time(0, 10000000000);
  dispatch_group_wait(v13, v14);

  objc_msgSend(v8, "asDirectory");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __91__BRCXPCRegularIPCsClient__launchItemCountMismatchChecksForLocalItem_itemIdentifier_reply___block_invoke;
  v24[3] = &unk_1E8766868;
  v24[4] = self;
  v25 = v10;
  +[BRCItemCountMismatchReport generateReportForSharedFolder:qualityOfService:completionHandler:](BRCItemCountMismatchReport, "generateReportForSharedFolder:qualityOfService:completionHandler:", v15, 25, v24);

LABEL_11:
}

void __91__BRCXPCRegularIPCsClient__launchItemCountMismatchChecksForLocalItem_itemIdentifier_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  _BOOL8 v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  __int16 v21;
  _BOOL4 v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    brc_bread_crumbs();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = objc_msgSend(v3, "itemCountDifference") == 0;
      objc_msgSend(v3, "lastError");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = 138413058;
      v20 = v6;
      v21 = 1024;
      v22 = v7;
      v23 = 2112;
      v24 = v8;
      v25 = 2112;
      v26 = v4;
      _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v19, 0x26u);

    }
    v9 = *(_QWORD *)(a1 + 40);
    v10 = objc_msgSend(v3, "itemCountDifference") == 0;
    objc_msgSend(v3, "lastError");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _BOOL8, void *))(v9 + 16))(v9, v10, v11);
  }
  else
  {
    brc_bread_crumbs();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_INFO);
    v15 = *MEMORY[0x1E0D10B70];
    if (v14)
    {
      v16 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithDomain:code:description:", *MEMORY[0x1E0D10B70], 9999, CFSTR("Failed generating mismatch report"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = 138413058;
      v20 = v16;
      v21 = 1024;
      v22 = 0;
      v23 = 2112;
      v24 = v17;
      v25 = 2112;
      v26 = v12;
      _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v19, 0x26u);

    }
    v18 = *(_QWORD *)(a1 + 40);
    objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithDomain:code:description:", v15, 9999, CFSTR("Failed generating mismatch report"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v18 + 16))(v18, 0, v11);
  }

}

- (void)_startOperation:(id)a3 toCopySharingAccessTokenWithLocalItem:(id)a4 itemIdentifier:(id)a5 reply:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  BRCSharingCopyAccessTokenOperation *v14;
  void *v15;
  void *v16;
  BRCSharingCopyAccessTokenOperation *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, void *, void *);
  void *v25;
  id v26;
  id v27;
  BRCXPCRegularIPCsClient *v28;
  id v29;

  v10 = a4;
  v11 = a5;
  v12 = a6;
  v13 = a3;
  v14 = [BRCSharingCopyAccessTokenOperation alloc];
  objc_msgSend(v10, "asDocument");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[BRCXPCClient session](self, "session");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = -[BRCSharingCopyAccessTokenOperation initWithItem:sessionContext:](v14, "initWithItem:sessionContext:", v15, v16);

  -[_BRCFrameworkOperation setRemoteClientProxy:](v17, "setRemoteClientProxy:", v13);
  v22 = MEMORY[0x1E0C809B0];
  v23 = 3221225472;
  v24 = __102__BRCXPCRegularIPCsClient__startOperation_toCopySharingAccessTokenWithLocalItem_itemIdentifier_reply___block_invoke;
  v25 = &unk_1E8766890;
  v26 = v10;
  v27 = v11;
  v28 = self;
  v29 = v12;
  v18 = v12;
  v19 = v11;
  v20 = v10;
  -[_BRCOperation setFinishBlock:](v17, "setFinishBlock:", &v22);
  -[BRCXPCClient session](self, "session", v22, v23, v24, v25);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "addMiscOperation:", v17);

  -[_BRCOperation schedule](v17, "schedule");
}

void __102__BRCXPCRegularIPCsClient__startOperation_toCopySharingAccessTokenWithLocalItem_itemIdentifier_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  _QWORD block[4];
  id v22;
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  void *v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a2;
  if (objc_msgSend(v5, "br_isCloudDocsErrorCode:", 24))
  {
    objc_msgSend(*(id *)(a1 + 32), "clientZone");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isSharedZone");

    v9 = *(_QWORD *)(a1 + 40);
    if (v8)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorDocumentIsNoLongerSharedAtIdentifier:", v9);
      v10 = objc_claimAutoreleasedReturnValue();

      objc_msgSend(*(id *)(a1 + 48), "session");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "clientTruthWorkloop");
      v12 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __102__BRCXPCRegularIPCsClient__startOperation_toCopySharingAccessTokenWithLocalItem_itemIdentifier_reply___block_invoke_2;
      block[3] = &unk_1E875D500;
      v22 = *(id *)(a1 + 32);
      dispatch_async(v12, block);

    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorDocumentIsNotSharedAtIdentifier:", v9);
      v10 = objc_claimAutoreleasedReturnValue();

    }
    v5 = (id)v10;
  }
  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("token"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("ref_id"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  brc_bread_crumbs();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    v17 = *(_QWORD *)(a1 + 48);
    objc_msgSend(v5, "brc_wrappedError");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413314;
    v24 = v17;
    v25 = 2112;
    v26 = v13;
    v27 = 2112;
    v28 = v14;
    v29 = 2112;
    v30 = v18;
    v31 = 2112;
    v32 = v15;
    _os_log_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);

  }
  v19 = *(_QWORD *)(a1 + 56);
  objc_msgSend(v5, "brc_wrappedError");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *, void *))(v19 + 16))(v19, v13, v14, v20);

}

void __102__BRCXPCRegularIPCsClient__startOperation_toCopySharingAccessTokenWithLocalItem_itemIdentifier_reply___block_invoke_2(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "clientZone");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "scheduleSyncDown");

}

- (void)_startOperation:(id)a3 toCopySharingInfoWithLocalItem:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  BRCSharingCopyShareOperation *v13;
  void *v14;
  BRCSharingCopyShareOperation *v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  BRCXPCRegularIPCsClient *v20;
  id v21;

  v8 = a4;
  v9 = a5;
  v10 = a3;
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    -[BRCXPCRegularIPCsClient _startOperation:toCopySharingInfoWithLocalItem:reply:].cold.1();

  v13 = [BRCSharingCopyShareOperation alloc];
  -[BRCXPCClient session](self, "session");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = -[BRCSharingCopyShareOperation initWithItem:sessionContext:](v13, "initWithItem:sessionContext:", v8, v14);

  -[_BRCFrameworkOperation setRemoteClientProxy:](v15, "setRemoteClientProxy:", v10);
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __80__BRCXPCRegularIPCsClient__startOperation_toCopySharingInfoWithLocalItem_reply___block_invoke;
  v18[3] = &unk_1E8765AA0;
  v19 = v8;
  v20 = self;
  v21 = v9;
  v16 = v9;
  v17 = v8;
  -[_BRCOperation setFinishBlock:](v15, "setFinishBlock:", v18);
  -[_BRCOperation schedule](v15, "schedule");

}

void __80__BRCXPCRegularIPCsClient__startOperation_toCopySharingInfoWithLocalItem_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  int v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  NSObject *v18;
  _QWORD *v19;
  void *v20;
  void *v21;
  void *v22;
  unint64_t v23;
  void *v24;
  NSObject *v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  const char *label;
  void *v33;
  NSObject *v34;
  uint64_t v35;
  _QWORD v36[4];
  id v37;
  __int128 v38;
  uint64_t v39;
  _BYTE block[24];
  void *v41;
  _BYTE v42[32];
  uint64_t v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v5)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      brc_bread_crumbs();
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v34 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_FAULT))
        __80__BRCXPCRegularIPCsClient__startOperation_toCopySharingInfoWithLocalItem_reply___block_invoke_cold_2();

    }
  }
  if ((objc_msgSend(v6, "brc_containsCloudKitErrorCode:", 11) & 1) != 0
    || objc_msgSend(v6, "brc_isCloudKitErrorImplyingZoneNeedsCreation"))
  {
    objc_msgSend(*(id *)(a1 + 32), "clientZone");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isSharedZone");

    if (v8)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorDocumentIsNoLongerSharedAtIdentifier:", 0);
      v9 = objc_claimAutoreleasedReturnValue();

      objc_msgSend(*(id *)(a1 + 40), "session");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "clientTruthWorkloop");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = MEMORY[0x1E0C809B0];
      v36[0] = MEMORY[0x1E0C809B0];
      v36[1] = 3221225472;
      v36[2] = __80__BRCXPCRegularIPCsClient__startOperation_toCopySharingInfoWithLocalItem_reply___block_invoke_485;
      v36[3] = &unk_1E875D500;
      v37 = *(id *)(a1 + 32);
      v13 = v11;
      v14 = v36;
      v15 = (void *)MEMORY[0x1D17A6BE8]();
      v38 = 0uLL;
      v39 = 0;
      __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v38);
      brc_bread_crumbs();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      {
        v35 = v38;
        label = dispatch_queue_get_label(v13);
        *(_DWORD *)block = 134218498;
        *(_QWORD *)&block[4] = v35;
        *(_WORD *)&block[12] = 2080;
        *(_QWORD *)&block[14] = label;
        *(_WORD *)&block[22] = 2112;
        v41 = v16;
        _os_log_debug_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", block, 0x20u);
      }

      *(_OWORD *)&v42[16] = v38;
      v43 = v39;
      *(_QWORD *)block = v12;
      *(_QWORD *)&block[8] = 3221225472;
      *(_QWORD *)&block[16] = __dispatch_async_with_logs_block_invoke_23;
      v41 = &unk_1E875D578;
      v18 = v13;
      *(_QWORD *)v42 = v18;
      v19 = v14;
      *(_QWORD *)&v42[8] = v19;
      dispatch_async(v18, block);

      objc_autoreleasePoolPop(v15);
      v6 = v37;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorDocumentIsNotSharedAtIdentifier:", 0);
      v9 = objc_claimAutoreleasedReturnValue();
    }

    v6 = (id)v9;
  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("share"));
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("rootURL"));
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "participants");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend(v22, "count");

  if (v23 >= 3)
  {
    brc_bread_crumbs();
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
      __80__BRCXPCRegularIPCsClient__startOperation_toCopySharingInfoWithLocalItem_reply___block_invoke_cold_1(v20, (uint64_t)v24, v25);

  }
  brc_bread_crumbs();
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v27 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
  {
    v28 = *(_QWORD *)(a1 + 40);
    objc_msgSend(v6, "brc_wrappedError");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)block = 138413314;
    *(_QWORD *)&block[4] = v28;
    *(_WORD *)&block[12] = 2112;
    *(_QWORD *)&block[14] = v20;
    *(_WORD *)&block[22] = 2112;
    v41 = v21;
    *(_WORD *)v42 = 2112;
    *(_QWORD *)&v42[2] = v29;
    *(_WORD *)&v42[10] = 2112;
    *(_QWORD *)&v42[12] = v26;
    _os_log_impl(&dword_1CBD43000, v27, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", block, 0x34u);

  }
  v30 = *(_QWORD *)(a1 + 48);
  objc_msgSend(v6, "brc_wrappedError");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *, void *))(v30 + 16))(v30, v20, v21, v31);

}

void __80__BRCXPCRegularIPCsClient__startOperation_toCopySharingInfoWithLocalItem_reply___block_invoke_485(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "clientZone");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "scheduleSyncDown");

}

- (void)startOperation:(id)a3 toCopySharingInfoWithItemID:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  NSObject *v21;
  _QWORD block[5];
  id v23;
  id v24;
  id v25;
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toCopySharingInfoWithItemID:reply:]", 4131, v28);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v28[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = v13;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v15;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient startOperation:toCopySharingInfoWithItemID:reply:]";
    v37 = 2112;
    v38 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingProxyEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __76__BRCXPCRegularIPCsClient_startOperation_toCopySharingInfoWithItemID_reply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v19 = v10;
  v27 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingProxyEntitled", v26);

  if ((v20 & 1) != 0)
  {
    -[BRCAccountSession clientTruthWorkloop](self->super.__session, "clientTruthWorkloop");
    v21 = objc_claimAutoreleasedReturnValue();
    block[0] = v18;
    block[1] = 3221225472;
    block[2] = __76__BRCXPCRegularIPCsClient_startOperation_toCopySharingInfoWithItemID_reply___block_invoke_493;
    block[3] = &unk_1E875FE38;
    block[4] = self;
    v23 = v9;
    v25 = v19;
    v24 = v8;
    dispatch_async_and_wait(v21, block);

  }
  __brc_leave_section(v28);

}

void __76__BRCXPCRegularIPCsClient_startOperation_toCopySharingInfoWithItemID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __76__BRCXPCRegularIPCsClient_startOperation_toCopySharingInfoWithItemID_reply___block_invoke_493(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D10E70], "fileObjectIDWithString:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "itemByFileObjectID:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "_startOperation:toCopySharingInfoWithLocalItem:reply:", *(_QWORD *)(a1 + 48), v4, *(_QWORD *)(a1 + 56));
  }
  else
  {
    brc_bread_crumbs();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = 138413314;
      v12 = v7;
      v13 = 2112;
      v14 = 0;
      v15 = 2112;
      v16 = 0;
      v17 = 2112;
      v18 = v8;
      v19 = 2112;
      v20 = v5;
      _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v11, 0x34u);

    }
    v9 = *(_QWORD *)(a1 + 56);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, _QWORD, void *))(v9 + 16))(v9, 0, 0, v10);

  }
}

- (void)startOperation:(id)a3 toCopySharingAccessTokenOfItemID:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  NSObject *v21;
  _QWORD block[5];
  id v23;
  id v24;
  id v25;
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toCopySharingAccessTokenOfItemID:reply:]", 4147, v28);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v28[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = v13;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v15;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient startOperation:toCopySharingAccessTokenOfItemID:reply:]";
    v37 = 2112;
    v38 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingProxyEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __81__BRCXPCRegularIPCsClient_startOperation_toCopySharingAccessTokenOfItemID_reply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v19 = v10;
  v27 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingProxyEntitled", v26);

  if ((v20 & 1) != 0)
  {
    -[BRCAccountSession clientTruthWorkloop](self->super.__session, "clientTruthWorkloop");
    v21 = objc_claimAutoreleasedReturnValue();
    block[0] = v18;
    block[1] = 3221225472;
    block[2] = __81__BRCXPCRegularIPCsClient_startOperation_toCopySharingAccessTokenOfItemID_reply___block_invoke_495;
    block[3] = &unk_1E875FE38;
    block[4] = self;
    v23 = v9;
    v25 = v19;
    v24 = v8;
    dispatch_async_and_wait(v21, block);

  }
  __brc_leave_section(v28);

}

void __81__BRCXPCRegularIPCsClient_startOperation_toCopySharingAccessTokenOfItemID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __81__BRCXPCRegularIPCsClient_startOperation_toCopySharingAccessTokenOfItemID_reply___block_invoke_495(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  void *v17;
  __int16 v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D10E70], "fileObjectIDWithString:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "itemByFileObjectID:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4 && (objc_msgSend(v4, "isDocument") & 1) != 0)
  {
    if ((objc_msgSend(v4, "isKnownByServer") & 1) != 0 || (objc_msgSend(v4, "isShareAcceptationFault") & 1) != 0)
      goto LABEL_11;
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", *(_QWORD *)(a1 + 40));
    v5 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", *(_QWORD *)(a1 + 40), 2);
    v5 = objc_claimAutoreleasedReturnValue();
  }
  v6 = (void *)v5;
  if (!v5)
  {
LABEL_11:
    objc_msgSend(*(id *)(a1 + 32), "_startOperation:toCopySharingAccessTokenWithLocalItem:itemIdentifier:reply:", *(_QWORD *)(a1 + 48), v4, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56));
    goto LABEL_12;
  }
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = 138413314;
    v11 = v9;
    v12 = 2112;
    v13 = 0;
    v14 = 2112;
    v15 = 0;
    v16 = 2112;
    v17 = v6;
    v18 = 2112;
    v19 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v10, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
LABEL_12:

}

- (void)startOperation:(id)a3 toCopyShortTokenOfItemID:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  NSObject *v21;
  _QWORD block[5];
  id v23;
  id v24;
  id v25;
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toCopyShortTokenOfItemID:reply:]", 4171, v28);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v28[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = v13;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v15;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient startOperation:toCopyShortTokenOfItemID:reply:]";
    v37 = 2112;
    v38 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingProxyEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __73__BRCXPCRegularIPCsClient_startOperation_toCopyShortTokenOfItemID_reply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v19 = v10;
  v27 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingProxyEntitled", v26);

  if ((v20 & 1) != 0)
  {
    -[BRCAccountSession clientTruthWorkloop](self->super.__session, "clientTruthWorkloop");
    v21 = objc_claimAutoreleasedReturnValue();
    block[0] = v18;
    block[1] = 3221225472;
    block[2] = __73__BRCXPCRegularIPCsClient_startOperation_toCopyShortTokenOfItemID_reply___block_invoke_496;
    block[3] = &unk_1E875FE38;
    block[4] = self;
    v23 = v9;
    v25 = v19;
    v24 = v8;
    dispatch_async_and_wait(v21, block);

  }
  __brc_leave_section(v28);

}

void __73__BRCXPCRegularIPCsClient_startOperation_toCopyShortTokenOfItemID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __73__BRCXPCRegularIPCsClient_startOperation_toCopyShortTokenOfItemID_reply___block_invoke_496(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  BRCSharingCopyShortTokenOperation *v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  BRCSharingCopyShortTokenOperation *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, void *, void *);
  void *v16;
  uint64_t v17;
  id v18;
  uint8_t buf[4];
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  BRCSharingCopyShortTokenOperation *v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D10E70], "fileObjectIDWithString:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "itemByFileObjectID:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4 && (objc_msgSend(v4, "isDocument") & 1) != 0)
  {
    if ((objc_msgSend(v4, "isKnownByServer") & 1) != 0 || (objc_msgSend(v4, "isShareAcceptationFault") & 1) != 0)
      goto LABEL_11;
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", *(_QWORD *)(a1 + 40));
    v5 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", *(_QWORD *)(a1 + 40), 2);
    v5 = objc_claimAutoreleasedReturnValue();
  }
  v6 = (BRCSharingCopyShortTokenOperation *)v5;
  if (!v5)
  {
LABEL_11:
    v10 = [BRCSharingCopyShortTokenOperation alloc];
    objc_msgSend(v4, "asDocument");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "session");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[BRCSharingCopyShortTokenOperation initWithItem:sessionContext:](v10, "initWithItem:sessionContext:", v11, v12);

    v13 = MEMORY[0x1E0C809B0];
    v14 = 3221225472;
    v15 = __73__BRCXPCRegularIPCsClient_startOperation_toCopyShortTokenOfItemID_reply___block_invoke_498;
    v16 = &unk_1E8760EB8;
    v17 = *(_QWORD *)(a1 + 32);
    v18 = *(id *)(a1 + 56);
    -[_BRCOperation setFinishBlock:](v6, "setFinishBlock:", &v13);
    objc_msgSend(*(id *)(a1 + 32), "_startSharingOperationAfterAcceptation:client:item:", v6, *(_QWORD *)(a1 + 48), v4, v13, v14, v15, v16, v17);

    goto LABEL_12;
  }
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138413058;
    v20 = v9;
    v21 = 2112;
    v22 = 0;
    v23 = 2112;
    v24 = v6;
    v25 = 2112;
    v26 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
LABEL_12:

}

void __73__BRCXPCRegularIPCsClient_startOperation_toCopyShortTokenOfItemID_reply___block_invoke_498(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v6, "brc_wrappedError");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138413058;
    v14 = v9;
    v15 = 2112;
    v16 = v5;
    v17 = 2112;
    v18 = v10;
    v19 = 2112;
    v20 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v13, 0x2Au);

  }
  v11 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v6, "brc_wrappedError");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, void *))(v11 + 16))(v11, v5, v12);

}

- (void)startOperation:(id)a3 toCopySharingWebAuthTokenForContainerID:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  BRCSharingCopyWebAuthTokenOperation *v22;
  void *v23;
  void *v24;
  BRCSharingCopyWebAuthTokenOperation *v25;
  _QWORD v26[5];
  id v27;
  _QWORD v28[5];
  id v29;
  uint64_t v30[3];
  uint8_t buf[4];
  uint64_t v32;
  __int16 v33;
  BRCXPCRegularIPCsClient *v34;
  __int16 v35;
  void *v36;
  __int16 v37;
  const char *v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v30, 0, sizeof(v30));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toCopySharingWebAuthTokenForContainerID:reply:]", 4199, v30);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v30[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v32 = v13;
    v33 = 2112;
    v34 = self;
    v35 = 2112;
    v36 = v15;
    v37 = 2080;
    v38 = "-[BRCXPCRegularIPCsClient startOperation:toCopySharingWebAuthTokenForContainerID:reply:]";
    v39 = 2112;
    v40 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingPrivateInterfaceEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v28[0] = MEMORY[0x1E0C809B0];
  v28[1] = 3221225472;
  v28[2] = __88__BRCXPCRegularIPCsClient_startOperation_toCopySharingWebAuthTokenForContainerID_reply___block_invoke;
  v28[3] = &unk_1E875FCF8;
  v28[4] = self;
  v19 = v10;
  v29 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingPrivateInterfaceEntitled", v28);

  if ((v20 & 1) != 0)
  {
    -[BRCXPCClient session](self, "session");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = [BRCSharingCopyWebAuthTokenOperation alloc];
    objc_msgSend(v21, "syncContextProvider");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "defaultSyncContext");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = -[BRCSharingCopyWebAuthTokenOperation initWithSyncContext:ckContainerID:sessionContext:](v22, "initWithSyncContext:ckContainerID:sessionContext:", v24, v9, v21);

    -[_BRCFrameworkOperation setRemoteClientProxy:](v25, "setRemoteClientProxy:", v8);
    v26[0] = v18;
    v26[1] = 3221225472;
    v26[2] = __88__BRCXPCRegularIPCsClient_startOperation_toCopySharingWebAuthTokenForContainerID_reply___block_invoke_500;
    v26[3] = &unk_1E8760EB8;
    v26[4] = self;
    v27 = v19;
    -[_BRCOperation setFinishBlock:](v25, "setFinishBlock:", v26);
    objc_msgSend(v21, "addMiscOperation:", v25);
    -[_BRCOperation schedule](v25, "schedule");

  }
  __brc_leave_section(v30);

}

void __88__BRCXPCRegularIPCsClient_startOperation_toCopySharingWebAuthTokenForContainerID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __88__BRCXPCRegularIPCsClient_startOperation_toCopySharingWebAuthTokenForContainerID_reply___block_invoke_500(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v6, "brc_wrappedError");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138413058;
    v14 = v9;
    v15 = 2112;
    v16 = v5;
    v17 = 2112;
    v18 = v10;
    v19 = 2112;
    v20 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v13, 0x2Au);

  }
  v11 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v6, "brc_wrappedError");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, void *))(v11 + 16))(v11, v5, v12);

}

- (void)startOperation:(id)a3 toCopyDocumentURLForRecordID:(id)a4 syncIfNeeded:(BOOL)a5 reply:(id)a6
{
  id v9;
  id v10;
  id v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  qos_class_t v15;
  void *v16;
  void *v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  void *v22;
  NSObject *v23;
  id v24;
  uint64_t v25;
  qos_class_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  void *v30;
  brc_task_tracker *v31;
  void *v32;
  void *v33;
  brc_task_tracker *v34;
  id v35;
  id v36;
  _BOOL4 v37;
  _QWORD v38[5];
  brc_task_tracker *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  BOOL v44;
  uint64_t v45[3];
  _QWORD v46[5];
  id v47;
  uint64_t v48[3];
  uint8_t buf[4];
  uint64_t v50;
  __int16 v51;
  BRCXPCRegularIPCsClient *v52;
  __int16 v53;
  uint64_t v54;
  __int16 v55;
  const char *v56;
  __int16 v57;
  id v58;
  __int16 v59;
  const char *v60;
  __int16 v61;
  void *v62;
  uint64_t v63;

  v37 = a5;
  v63 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  v11 = a6;
  memset(v48, 0, sizeof(v48));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:]", 4218, v48);
  brc_bread_crumbs();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    v14 = v48[0];
    v15 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v15, (uint64_t)&brc_qos_entries, 0);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v50 = v14;
    v51 = 2112;
    v52 = self;
    v53 = 2112;
    v54 = (uint64_t)v16;
    v55 = 2080;
    v56 = "-[BRCXPCRegularIPCsClient startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:]";
    v57 = 2112;
    v58 = v12;
    _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(v17, "isSharingPrivateInterfaceEntitled");
  v19 = MEMORY[0x1E0C809B0];
  v46[0] = MEMORY[0x1E0C809B0];
  v46[1] = 3221225472;
  v46[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke;
  v46[3] = &unk_1E875FCF8;
  v46[4] = self;
  v20 = v11;
  v47 = v20;
  v21 = _brc_ipc_check_client_privilege(self, 1, v18, (uint64_t)"isSharingPrivateInterfaceEntitled", v46);

  if ((v21 & 1) != 0)
  {
    memset(v45, 0, sizeof(v45));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:]", 4220, v45);
    brc_bread_crumbs();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      v24 = v9;
      v25 = v45[0];
      v26 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v26, (uint64_t)&brc_qos_entries, 0);
      v27 = objc_claimAutoreleasedReturnValue();
      v28 = (void *)v27;
      v29 = "No";
      *(_DWORD *)buf = 134219522;
      v50 = v25;
      v51 = 2112;
      if (v37)
        v29 = "Yes";
      v52 = self;
      v53 = 2112;
      v54 = v27;
      v55 = 2080;
      v56 = "-[BRCXPCRegularIPCsClient startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:]";
      v57 = 2112;
      v58 = v10;
      v59 = 2080;
      v60 = v29;
      v61 = 2112;
      v62 = v22;
      _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s looking up url for recordID %@ fetching from server:%s%@", buf, 0x48u);

      v9 = v24;
      v19 = MEMORY[0x1E0C809B0];
    }

    -[BRCXPCClient session](self, "session");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = self->super._tracker;
    -[BRCXPCClient session](self, "session");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "clientTruthWorkloop");
    v33 = (void *)objc_claimAutoreleasedReturnValue();

    v38[0] = v19;
    v38[1] = 3221225472;
    v38[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_503;
    v38[3] = &unk_1E87669A8;
    v38[4] = self;
    v43 = v20;
    v34 = v31;
    v39 = v34;
    v35 = v33;
    v40 = v35;
    v41 = v10;
    v36 = v30;
    v42 = v36;
    v44 = v37;
    objc_msgSend(v36, "fetchUserRecordIDWithCompletionHandler:", v38);

    __brc_leave_section(v45);
  }
  __brc_leave_section(v48);

}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_503(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  _QWORD v15[5];
  id v16;
  _QWORD v17[4];
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  char v25;
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  __int16 v30;
  id v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = MEMORY[0x1E0C809B0];
    v8 = *(void **)(a1 + 40);
    v9 = *(void **)(a1 + 48);
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_504;
    v17[3] = &unk_1E8766980;
    v18 = *(id *)(a1 + 56);
    v10 = *(id *)(a1 + 64);
    v11 = *(_QWORD *)(a1 + 32);
    v19 = v10;
    v20 = v11;
    v24 = *(id *)(a1 + 72);
    v21 = v5;
    v22 = *(id *)(a1 + 40);
    v25 = *(_BYTE *)(a1 + 80);
    v23 = *(id *)(a1 + 48);
    v15[0] = v7;
    v15[1] = 3221225472;
    v15[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_516;
    v15[3] = &unk_1E875EAA8;
    v15[4] = *(_QWORD *)(a1 + 32);
    v16 = *(id *)(a1 + 72);
    brc_task_tracker_async_with_logs(v8, v9, v17, v15);

  }
  else
  {
    brc_bread_crumbs();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      v14 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138413058;
      v27 = v14;
      v28 = 2112;
      v29 = 0;
      v30 = 2112;
      v31 = v6;
      v32 = 2112;
      v33 = v12;
      _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
  }

}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_504(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  int v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  _QWORD v20[5];
  id v21;
  _QWORD v22[4];
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  _BYTE *v31;
  char v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  _BYTE buf[24];
  uint64_t (*v35)(uint64_t, uint64_t);
  __int128 v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v33 = 0;
  objc_msgSend(*(id *)(a1 + 32), "brc_itemIDWithSession:error:", *(_QWORD *)(a1 + 40), &v33);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(*(id *)(a1 + 32), "zoneID");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "ownerName");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 56), "recordName");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v4, "isEqualToString:", v5);

    if (v6)
    {
      v7 = objc_alloc(MEMORY[0x1E0C95098]);
      objc_msgSend(v3, "zoneName");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v7, "initWithZoneName:ownerName:", v8, *MEMORY[0x1E0C94730]);

      v3 = (void *)v9;
    }
    v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10E88]), "initWithRecordZoneID:", v3);
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x3032000000;
    v35 = __Block_byref_object_copy__48;
    *(_QWORD *)&v36 = __Block_byref_object_dispose__48;
    objc_msgSend(*(id *)(a1 + 40), "clientZoneByMangledID:", v10);
    *((_QWORD *)&v36 + 1) = objc_claimAutoreleasedReturnValue();
    v11 = *(void **)(a1 + 64);
    v12 = *(void **)(*(_QWORD *)(a1 + 48) + 16);
    v13 = MEMORY[0x1E0C809B0];
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 3221225472;
    v22[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_505;
    v22[3] = &unk_1E8766958;
    v31 = buf;
    v32 = *(_BYTE *)(a1 + 88);
    v14 = v10;
    v23 = v14;
    v24 = *(id *)(a1 + 40);
    v25 = *(id *)(a1 + 64);
    v15 = *(id *)(a1 + 72);
    v16 = *(_QWORD *)(a1 + 48);
    v26 = v15;
    v27 = v16;
    v30 = *(id *)(a1 + 80);
    v28 = *(id *)(a1 + 32);
    v29 = v2;
    v20[0] = v13;
    v20[1] = 3221225472;
    v20[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_515;
    v20[3] = &unk_1E875EAA8;
    v20[4] = *(_QWORD *)(a1 + 48);
    v21 = *(id *)(a1 + 80);
    brc_task_tracker_async_with_logs(v11, v12, v22, v20);

    _Block_object_dispose(buf, 8);
  }
  else
  {
    brc_bread_crumbs();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      v19 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138413058;
      *(_QWORD *)&buf[4] = v19;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = 0;
      *(_WORD *)&buf[22] = 2112;
      v35 = v33;
      LOWORD(v36) = 2112;
      *(_QWORD *)((char *)&v36 + 2) = v17;
      _os_log_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 80) + 16))();
  }

}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_505(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD v16[5];
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  char v27;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 40) && *(_BYTE *)(a1 + 104))
  {
    v2 = objc_msgSend(*(id *)(a1 + 32), "isShared");
    v4 = *(_QWORD *)(a1 + 32);
    v3 = *(void **)(a1 + 40);
    if (v2)
    {
      objc_msgSend(v3, "getOrCreateSharedZones:", v4);
      v5 = objc_claimAutoreleasedReturnValue();
      v6 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
      v7 = *(void **)(v6 + 40);
      *(_QWORD *)(v6 + 40) = v5;
    }
    else
    {
      objc_msgSend(v3, "getOrCreateAppLibraryAndPrivateZonesIfNecessary:", v4);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "defaultClientZone");
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
      v10 = *(void **)(v9 + 40);
      *(_QWORD *)(v9 + 40) = v8;

    }
  }
  v12 = *(void **)(a1 + 48);
  v11 = *(void **)(a1 + 56);
  v13 = MEMORY[0x1E0C809B0];
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_2;
  v18[3] = &unk_1E8766930;
  v26 = *(_QWORD *)(a1 + 96);
  v19 = *(id *)(a1 + 40);
  v14 = *(id *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 64);
  v20 = v14;
  v21 = v15;
  v25 = *(id *)(a1 + 88);
  v22 = *(id *)(a1 + 72);
  v23 = *(id *)(a1 + 80);
  v27 = *(_BYTE *)(a1 + 104);
  v24 = *(id *)(a1 + 48);
  v16[0] = v13;
  v16[1] = 3221225472;
  v16[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_514;
  v16[3] = &unk_1E875EAA8;
  v16[4] = *(_QWORD *)(a1 + 64);
  v17 = *(id *)(a1 + 88);
  brc_task_tracker_async_with_logs(v12, v11, v18, v16);

}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_2(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void (**v7)(_QWORD, _QWORD);
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD v29[4];
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void (**v34)(_QWORD, _QWORD);
  id v35;
  uint64_t v36;
  _QWORD v37[5];
  id v38;
  id v39;
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  __int16 v44;
  void *v45;
  __int16 v46;
  void *v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "clientZoneByMangledID:", *(_QWORD *)(a1 + 40));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40))
  {
    v5 = MEMORY[0x1E0C809B0];
    v37[0] = MEMORY[0x1E0C809B0];
    v37[1] = 3221225472;
    v37[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_506;
    v37[3] = &unk_1E8762DD8;
    v6 = *(void **)(a1 + 56);
    v37[4] = *(_QWORD *)(a1 + 48);
    v38 = v6;
    v39 = *(id *)(a1 + 80);
    v7 = (void (**)(_QWORD, _QWORD))MEMORY[0x1D17A6DB0](v37);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), "itemByItemID:", *(_QWORD *)(a1 + 64));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (*(_BYTE *)(a1 + 96) && (objc_msgSend(v8, "isOnDisk") & 1) == 0)
    {
      v20 = *(void **)(a1 + 64);
      v21 = objc_msgSend(*(id *)(a1 + 56), "brc_itemType");
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), "serverZone");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "structureRecordIDForItemType:zone:aliasTargetZoneIsShared:", v21, v22, 1);
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      v24 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40);
      v29[0] = v5;
      v29[1] = 3221225472;
      v29[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_511;
      v29[3] = &unk_1E8766908;
      v34 = v7;
      v30 = *(id *)(a1 + 72);
      v25 = *(id *)(a1 + 32);
      v26 = *(_QWORD *)(a1 + 88);
      v31 = v25;
      v36 = v26;
      v27 = *(id *)(a1 + 64);
      v28 = *(_QWORD *)(a1 + 48);
      v32 = v27;
      v33 = v28;
      v35 = *(id *)(a1 + 80);
      objc_msgSend(v24, "performBlock:whenItemWithRecordIDIsOnDisk:", v29, v23);

    }
    else
    {
      ((void (**)(_QWORD, void *))v7)[2](v7, v9);
    }

  }
  else
  {
    brc_bread_crumbs();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = (void *)MEMORY[0x1E0CB35C8];
      v13 = *(_QWORD *)(a1 + 48);
      objc_msgSend(*(id *)(a1 + 40), "appLibraryOrZoneName");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "brc_errorAppLibraryNotFound:", v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v41 = v13;
      v42 = 2112;
      v43 = 0;
      v44 = 2112;
      v45 = v15;
      v46 = 2112;
      v47 = v10;
      _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

    }
    v16 = *(_QWORD *)(a1 + 80);
    v17 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(*(id *)(a1 + 40), "appLibraryOrZoneName");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "brc_errorAppLibraryNotFound:", v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v16 + 16))(v16, 0, v19);

  }
}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_506(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void (**v6)(_QWORD, _QWORD);
  BRCItemToPathLookup *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  _QWORD v19[4];
  id v20;
  uint64_t v21;
  id v22;
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if ((objc_msgSend(v3, "isOnDisk") & 1) != 0)
  {
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_507;
    v19[3] = &unk_1E87668B8;
    v4 = v3;
    v5 = *(_QWORD *)(a1 + 32);
    v20 = v4;
    v21 = v5;
    v22 = *(id *)(a1 + 48);
    v6 = (void (**)(_QWORD, _QWORD))MEMORY[0x1D17A6DB0](v19);
    v7 = -[BRCItemToPathLookup initWithItem:]([BRCItemToPathLookup alloc], "initWithItem:", v4);
    -[BRCItemToPathLookup coordinatedReadURL](v7, "coordinatedReadURL");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, void *))v6)[2](v6, v8);

    v9 = v20;
  }
  else
  {
    brc_bread_crumbs();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = (void *)MEMORY[0x1E0CB35C8];
      v13 = *(_QWORD *)(a1 + 32);
      objc_msgSend(*(id *)(a1 + 40), "description");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "brc_errorItemNotFound:", v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v24 = v13;
      v25 = 2112;
      v26 = 0;
      v27 = 2112;
      v28 = v15;
      v29 = 2112;
      v30 = v10;
      _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

    }
    v16 = (void *)MEMORY[0x1E0CB35C8];
    v17 = *(_QWORD *)(a1 + 48);
    objc_msgSend(*(id *)(a1 + 40), "description");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "brc_errorItemNotFound:", v9);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v17 + 16))(v17, 0, v18);

  }
}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_507(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  id v12;
  uint8_t buf[4];
  uint64_t v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  id v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    v12 = 0;
    objc_msgSend(MEMORY[0x1E0CAACB8], "wrapperWithURL:readonly:error:", v3, 0, &v12);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v12;
  }
  else
  {
    v6 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(*(id *)(a1 + 32), "itemID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "description");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "brc_errorItemNotFound:", v8);
    v5 = (id)objc_claimAutoreleasedReturnValue();

    v4 = 0;
  }
  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138413058;
    v14 = v11;
    v15 = 2112;
    v16 = v4;
    v17 = 2112;
    v18 = v5;
    v19 = 2112;
    v20 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_511(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD v6[5];
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  uint64_t v11;

  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(a1 + 32);
    objc_msgSend(*(id *)(a1 + 40), "clientTruthWorkloop");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = MEMORY[0x1E0C809B0];
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_2_512;
    v8[3] = &unk_1E87668E0;
    v11 = *(_QWORD *)(a1 + 80);
    v9 = *(id *)(a1 + 48);
    v10 = *(id *)(a1 + 64);
    v6[0] = v5;
    v6[1] = 3221225472;
    v6[2] = __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_3;
    v6[3] = &unk_1E875EAA8;
    v6[4] = *(_QWORD *)(a1 + 56);
    v7 = *(id *)(a1 + 72);
    brc_task_tracker_async_with_logs(v3, v4, v8, v6);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
  }
}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_2_512(_QWORD *a1)
{
  id v2;

  objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "itemByItemID:", a1[4]);
  v2 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(a1[5] + 16))();

}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_3(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v8, 0x2Au);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_514(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v8, 0x2Au);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_515(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v8, 0x2Au);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

void __90__BRCXPCRegularIPCsClient_startOperation_toCopyDocumentURLForRecordID_syncIfNeeded_reply___block_invoke_516(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413058;
    v9 = v4;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v8, 0x2Au);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);

}

void __72__BRCXPCRegularIPCsClient_startOperation_toCopyAvailableQuotaWithReply___block_invoke_520(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  id v13;
  __int16 v14;
  id v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = 138413058;
    v11 = v9;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v6;
    v16 = 2112;
    v17 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v10, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)startOperation:(id)a3 toUploadAllFilesInContainer:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  int v18;
  void *v19;
  void *v20;
  id v21;
  BRCUploadAllFilesTrackerOperation *v22;
  void *v23;
  BRCUploadAllFilesTrackerOperation *v24;
  void *v25;
  NSObject *v26;
  BRCXPCRegularIPCsClient *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, void *);
  void *v31;
  BRCXPCRegularIPCsClient *v32;
  id v33;
  _QWORD v34[5];
  id v35;
  _QWORD v36[5];
  id v37;
  uint64_t v38[3];
  id v39;
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v41;
  __int16 v42;
  BRCXPCRegularIPCsClient *v43;
  __int16 v44;
  void *v45;
  __int16 v46;
  const char *v47;
  __int16 v48;
  void *v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v38, 0, sizeof(v38));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toUploadAllFilesInContainer:reply:]", 4352, v38);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v38[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v41 = (BRCXPCRegularIPCsClient *)v13;
    v42 = 2112;
    v43 = self;
    v44 = 2112;
    v45 = v15;
    v46 = 2080;
    v47 = "-[BRCXPCRegularIPCsClient startOperation:toUploadAllFilesInContainer:reply:]";
    v48 = 2112;
    v49 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v16 = MEMORY[0x1E0C809B0];
  v36[0] = MEMORY[0x1E0C809B0];
  v36[1] = 3221225472;
  v36[2] = __76__BRCXPCRegularIPCsClient_startOperation_toUploadAllFilesInContainer_reply___block_invoke;
  v36[3] = &unk_1E875FCF8;
  v36[4] = self;
  v17 = v10;
  v37 = v17;
  v18 = _brc_ipc_check_applibraries_access(self, 1, v36);

  if (v18)
  {
    -[BRCXPCClient session](self, "session");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      -[BRCXPCClient session](self, "session");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "appLibraryByID:", v9);
      v21 = (id)objc_claimAutoreleasedReturnValue();

      if (!v21)
      {
        brc_bread_crumbs();
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v26 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", v9);
          v27 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v41 = self;
          v42 = 2112;
          v43 = v27;
          v44 = 2112;
          v45 = v25;
          _os_log_impl(&dword_1CBD43000, v26, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

        }
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", v9);
        v24 = (BRCUploadAllFilesTrackerOperation *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, BRCUploadAllFilesTrackerOperation *))v17 + 2))(v17, v24);
        goto LABEL_12;
      }
      -[BRCXPCClient addAppLibrary:](self, "addAppLibrary:", v21);
      v22 = [BRCUploadAllFilesTrackerOperation alloc];
      v39 = v21;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v39, 1);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = -[BRCUploadAllFilesTrackerOperation initWithSession:appLibraries:](v22, "initWithSession:appLibraries:", v19, v23);

    }
    else
    {
      v34[0] = v16;
      v34[1] = 3221225472;
      v34[2] = __76__BRCXPCRegularIPCsClient_startOperation_toUploadAllFilesInContainer_reply___block_invoke_523;
      v34[3] = &unk_1E875E0F8;
      v34[4] = self;
      v21 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v35 = v21;
      objc_msgSend(v19, "enumerateAppLibraries:", v34);
      v24 = -[BRCUploadAllFilesTrackerOperation initWithSession:appLibraries:]([BRCUploadAllFilesTrackerOperation alloc], "initWithSession:appLibraries:", v19, v21);

    }
    -[_BRCFrameworkOperation setRemoteClientProxy:](v24, "setRemoteClientProxy:", v8);
    v28 = v16;
    v29 = 3221225472;
    v30 = __76__BRCXPCRegularIPCsClient_startOperation_toUploadAllFilesInContainer_reply___block_invoke_2;
    v31 = &unk_1E8760EB8;
    v32 = self;
    v33 = v17;
    -[_BRCOperation setFinishBlock:](v24, "setFinishBlock:", &v28);
    objc_msgSend(v19, "addMiscOperation:", v24, v28, v29, v30, v31, v32);
    -[_BRCOperation schedule](v24, "schedule");

LABEL_12:
  }
  __brc_leave_section(v38);

}

void __76__BRCXPCRegularIPCsClient_startOperation_toUploadAllFilesInContainer_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t __76__BRCXPCRegularIPCsClient_startOperation_toUploadAllFilesInContainer_reply___block_invoke_523(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "addAppLibrary:", v4);
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v4);

  return 1;
}

void __76__BRCXPCRegularIPCsClient_startOperation_toUploadAllFilesInContainer_reply___block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  id v11;
  __int16 v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = 138412802;
    v9 = v7;
    v10 = 2112;
    v11 = v4;
    v12 = 2112;
    v13 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v8, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)copyCurrentUserIdentifierWithReply:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  qos_class_t v9;
  void *v10;
  void *v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  BRCSharingFetchUserRecordIDOperation *v16;
  void *v17;
  void *v18;
  BRCSharingFetchUserRecordIDOperation *v19;
  void *v20;
  _QWORD v21[5];
  id v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[BRCXPCClient session](self, "session");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  memset(v25, 0, sizeof(v25));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient copyCurrentUserIdentifierWithReply:]", 4390, v25);
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = v25[0];
    v9 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v9, (uint64_t)&brc_qos_entries, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v27 = v8;
    v28 = 2112;
    v29 = self;
    v30 = 2112;
    v31 = v10;
    v32 = 2080;
    v33 = "-[BRCXPCRegularIPCsClient copyCurrentUserIdentifierWithReply:]";
    v34 = 2112;
    v35 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "isSharingPrivateInterfaceEntitled");
  v13 = MEMORY[0x1E0C809B0];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __62__BRCXPCRegularIPCsClient_copyCurrentUserIdentifierWithReply___block_invoke;
  v23[3] = &unk_1E875FCF8;
  v23[4] = self;
  v14 = v4;
  v24 = v14;
  v15 = _brc_ipc_check_client_privilege(self, 1, v12, (uint64_t)"isSharingPrivateInterfaceEntitled", v23);

  if ((v15 & 1) != 0)
  {
    v16 = [BRCSharingFetchUserRecordIDOperation alloc];
    objc_msgSend(v5, "syncContextProvider");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "defaultSyncContext");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = -[BRCSharingFetchUserRecordIDOperation initWithSyncContext:sessionContext:](v16, "initWithSyncContext:sessionContext:", v18, v5);

    objc_msgSend(MEMORY[0x1E0C94F88], "br_fetchIdentityXPC");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    -[_BRCOperation setGroup:](v19, "setGroup:", v20);

    v21[0] = v13;
    v21[1] = 3221225472;
    v21[2] = __62__BRCXPCRegularIPCsClient_copyCurrentUserIdentifierWithReply___block_invoke_525;
    v21[3] = &unk_1E87669F8;
    v21[4] = self;
    v22 = v14;
    -[_BRCOperation setFinishBlock:](v19, "setFinishBlock:", v21);
    objc_msgSend(v5, "addMiscOperation:", v19);
    -[_BRCOperation schedule](v19, "schedule");

  }
  __brc_leave_section(v25);

}

void __62__BRCXPCRegularIPCsClient_copyCurrentUserIdentifierWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __62__BRCXPCRegularIPCsClient_copyCurrentUserIdentifierWithReply___block_invoke_525(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  uint64_t v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v5, "recordName");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "brc_wrappedError");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = 138413058;
    v16 = v9;
    v17 = 2112;
    v18 = v10;
    v19 = 2112;
    v20 = v11;
    v21 = 2112;
    v22 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v15, 0x2Au);

  }
  v12 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v5, "recordName");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "brc_wrappedError");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *))(v12 + 16))(v12, v13, v14);

}

- (void)copyCurrentUserNameAndDisplayHandleWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  _QWORD v23[5];
  id v24;
  id v25;
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient copyCurrentUserNameAndDisplayHandleWithReply:]", 4409, v28);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v28[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = v7;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v9;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient copyCurrentUserNameAndDisplayHandleWithReply:]";
    v37 = 2112;
    v38 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "isSharingProxyEntitled");
  v12 = MEMORY[0x1E0C809B0];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __72__BRCXPCRegularIPCsClient_copyCurrentUserNameAndDisplayHandleWithReply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v13 = v4;
  v27 = v13;
  v14 = _brc_ipc_check_client_privilege(self, 1, v11, (uint64_t)"isSharingProxyEntitled", v26);

  if ((v14 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0DC5EE8], "sharedManager");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "currentPersona");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "br_personaID");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    -[BRCXPCClient session](self, "session");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "syncContextProvider");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "defaultSyncContext");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "ckContainer");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v23[0] = v12;
    v23[1] = 3221225472;
    v23[2] = __72__BRCXPCRegularIPCsClient_copyCurrentUserNameAndDisplayHandleWithReply___block_invoke_526;
    v23[3] = &unk_1E8766A48;
    v23[4] = self;
    v22 = v17;
    v24 = v22;
    v25 = v13;
    objc_msgSend(v21, "fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:", v23);

  }
  __brc_leave_section(v28);

}

void __72__BRCXPCRegularIPCsClient_copyCurrentUserNameAndDisplayHandleWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  id v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413826;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = 0;
    v15 = 2112;
    v16 = 0;
    v17 = 2112;
    v18 = v3;
    v19 = 2112;
    v20 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@)%@", (uint8_t *)&v7, 0x48u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __72__BRCXPCRegularIPCsClient_copyCurrentUserNameAndDisplayHandleWithReply___block_invoke_526(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD v14[5];
  id v15;
  id v16;
  id v17;
  id v18;

  v5 = a2;
  v6 = a3;
  objc_msgSend(*(id *)(a1 + 32), "session");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "syncContextProvider");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "defaultSyncContext");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "ckContainer");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __72__BRCXPCRegularIPCsClient_copyCurrentUserNameAndDisplayHandleWithReply___block_invoke_2;
  v14[3] = &unk_1E8766A20;
  v11 = *(void **)(a1 + 40);
  v14[4] = *(_QWORD *)(a1 + 32);
  v15 = v5;
  v16 = v6;
  v17 = v11;
  v18 = *(id *)(a1 + 48);
  v12 = v6;
  v13 = v5;
  objc_msgSend(v10, "fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:", v14);

}

void __72__BRCXPCRegularIPCsClient_copyCurrentUserNameAndDisplayHandleWithReply___block_invoke_2(_QWORD *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  int v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  id v28;
  __int16 v29;
  uint64_t v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = a1[4];
    v11 = a1[5];
    v12 = a1[6];
    v13 = a1[7];
    objc_msgSend(v7, "brc_wrappedError");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = 138413826;
    v22 = v10;
    v23 = 2112;
    v24 = v11;
    v25 = 2112;
    v26 = v12;
    v27 = 2112;
    v28 = v6;
    v29 = 2112;
    v30 = v13;
    v31 = 2112;
    v32 = v14;
    v33 = 2112;
    v34 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@, %@, %@)%@", (uint8_t *)&v21, 0x48u);

  }
  v15 = a1[5];
  v16 = a1[6];
  v19 = a1 + 7;
  v17 = a1[7];
  v18 = v19[1];
  objc_msgSend(v7, "brc_wrappedError");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t, id, uint64_t, void *))(v18 + 16))(v18, v15, v16, v6, v17, v20);

}

- (void)copyCollaborationIdentifierForFileObjectID:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  void *v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  void *v18;
  NSObject *v19;
  _QWORD v20[5];
  id v21;
  id v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v25, 0, sizeof(v25));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient copyCollaborationIdentifierForFileObjectID:reply:]", 4424, v25);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v25[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v27 = v10;
    v28 = 2112;
    v29 = self;
    v30 = 2112;
    v31 = v12;
    v32 = 2080;
    v33 = "-[BRCXPCRegularIPCsClient copyCollaborationIdentifierForFileObjectID:reply:]";
    v34 = 2112;
    v35 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "isSharingProxyEntitled");
  v15 = MEMORY[0x1E0C809B0];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __76__BRCXPCRegularIPCsClient_copyCollaborationIdentifierForFileObjectID_reply___block_invoke;
  v23[3] = &unk_1E875FCF8;
  v23[4] = self;
  v16 = v7;
  v24 = v16;
  v17 = _brc_ipc_check_client_privilege(self, 1, v14, (uint64_t)"isSharingProxyEntitled", v23);

  if ((v17 & 1) != 0)
  {
    -[BRCXPCClient session](self, "session");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "clientTruthWorkloop");
    v19 = objc_claimAutoreleasedReturnValue();
    v20[0] = v15;
    v20[1] = 3221225472;
    v20[2] = __76__BRCXPCRegularIPCsClient_copyCollaborationIdentifierForFileObjectID_reply___block_invoke_528;
    v20[3] = &unk_1E875EB70;
    v20[4] = self;
    v21 = v6;
    v22 = v16;
    dispatch_async_and_wait(v19, v20);

  }
  __brc_leave_section(v25);

}

void __76__BRCXPCRegularIPCsClient_copyCollaborationIdentifierForFileObjectID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __76__BRCXPCRegularIPCsClient_copyCollaborationIdentifierForFileObjectID_reply___block_invoke_528(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  int v22;
  uint64_t v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "itemByFileObjectID:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
  {
    brc_bread_crumbs();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      __76__BRCXPCRegularIPCsClient_copyCollaborationIdentifierForFileObjectID_reply___block_invoke_528_cold_1();

    brc_bread_crumbs();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = (void *)MEMORY[0x1E0CB35C8];
      v9 = *(_QWORD *)(a1 + 32);
      objc_msgSend(*(id *)(a1 + 40), "description");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "brc_errorItemNotFound:", v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = 138413058;
      v23 = v9;
      v24 = 2112;
      v25 = 0;
      v26 = 2112;
      v27 = v11;
      v28 = 2112;
      v29 = v6;
      _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v22, 0x2Au);

    }
    v12 = (void *)MEMORY[0x1E0CB35C8];
    v13 = *(_QWORD *)(a1 + 48);
    objc_msgSend(*(id *)(a1 + 40), "description");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "brc_errorItemNotFound:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v13 + 16))(v13, 0, v15);

  }
  brc_bread_crumbs();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    v18 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v3, "collaborationIdentifierIfComputable");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = 138413058;
    v23 = v18;
    v24 = 2112;
    v25 = v19;
    v26 = 2112;
    v27 = 0;
    v28 = 2112;
    v29 = v16;
    _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v22, 0x2Au);

  }
  v20 = *(_QWORD *)(a1 + 48);
  objc_msgSend(v3, "collaborationIdentifierIfComputable");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, _QWORD))(v20 + 16))(v20, v21, 0);

}

- (void)_createSharingInfoForLocalItem:(id)a3 reply:(id)a4
{
  id v6;
  void (**v7)(id, void *, _QWORD);
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  NSObject *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  NSObject *v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  int v45;
  BRCXPCRegularIPCsClient *v46;
  __int16 v47;
  void *v48;
  __int16 v49;
  void *v50;
  __int16 v51;
  void *v52;
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = (void (**)(id, void *, _QWORD))a4;
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    -[BRCXPCRegularIPCsClient _createSharingInfoForLocalItem:reply:].cold.1();

  if ((objc_msgSend(v6, "isKnownByServer") & 1) != 0)
  {
    if (!objc_msgSend(v6, "isDirectory"))
      goto LABEL_29;
    objc_msgSend(v6, "appLibrary");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "mangledID");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "isBlacklistedFromFolderSharing");

    if ((v13 & 1) == 0)
    {
      v25 = objc_alloc(MEMORY[0x1E0C95070]);
      objc_msgSend(v6, "asShareableItem");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = (void *)objc_msgSend(v25, "initShareIDWithShareableItem:", v26);

      objc_msgSend(v6, "asDirectory");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "folderRootStructureRecord");
      v28 = (void *)objc_claimAutoreleasedReturnValue();

      v29 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C95110]), "initWithRootRecord:shareID:", v28, v19);
      objc_msgSend(v6, "st");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "logicalName");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "brc_updateWithLogicalName:isFolder:", v31, 1);

      objc_msgSend(v6, "serverZone");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v32, "metadataSyncContext");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "ckContainerID");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "CKAssignToContainerWithID:", v34);

      brc_bread_crumbs();
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v36 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
      {
LABEL_24:
        v45 = 138413058;
        v46 = self;
        v47 = 2112;
        v48 = v29;
        v49 = 2112;
        v50 = 0;
        v51 = 2112;
        v52 = v35;
        _os_log_impl(&dword_1CBD43000, v36, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v45, 0x2Au);
      }
    }
    else
    {
LABEL_29:
      if (!objc_msgSend(v6, "isDocument") || objc_msgSend(v6, "isFinderBookmark"))
      {
        brc_bread_crumbs();
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", 0, 21);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v45 = 138413058;
          v46 = self;
          v47 = 2112;
          v48 = 0;
          v49 = 2112;
          v50 = v16;
          v51 = 2112;
          v52 = v14;
          _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v45, 0x2Au);

        }
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", 0, 21);
        v17 = objc_claimAutoreleasedReturnValue();
        goto LABEL_19;
      }
      v37 = objc_alloc(MEMORY[0x1E0C95070]);
      objc_msgSend(v6, "asShareableItem");
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = (void *)objc_msgSend(v37, "initShareIDWithShareableItem:", v38);

      objc_msgSend(v6, "asDocument");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "baseRecord");
      v28 = (void *)objc_claimAutoreleasedReturnValue();

      v29 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C95110]), "initWithRootRecord:shareID:", v28, v19);
      objc_msgSend(v6, "st");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "logicalName");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "brc_updateWithLogicalName:isFolder:", v41, 0);

      objc_msgSend(v6, "serverZone");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v42, "metadataSyncContext");
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "ckContainerID");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "CKAssignToContainerWithID:", v44);

      brc_bread_crumbs();
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v36 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
        goto LABEL_24;
    }

    v7[2](v7, v29, 0);
    goto LABEL_26;
  }
  if (objc_msgSend(v6, "isDocument"))
  {
    objc_msgSend(v6, "asDocument");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "uploadError");
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    if (v19)
    {
      brc_bread_crumbs();
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        v45 = 138413058;
        v46 = self;
        v47 = 2112;
        v48 = 0;
        v49 = 2112;
        v50 = v19;
        v51 = 2112;
        v52 = v20;
        _os_log_impl(&dword_1CBD43000, v21, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v45, 0x2Au);
      }

      goto LABEL_20;
    }
  }
  brc_bread_crumbs();
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v23 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", 0);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = 138413058;
    v46 = self;
    v47 = 2112;
    v48 = 0;
    v49 = 2112;
    v50 = v24;
    v51 = 2112;
    v52 = v22;
    _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v45, 0x2Au);

  }
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", 0);
  v17 = objc_claimAutoreleasedReturnValue();
LABEL_19:
  v19 = (void *)v17;
LABEL_20:
  ((void (**)(id, void *, void *))v7)[2](v7, 0, v19);
LABEL_26:

}

- (void)createSharingInfoForItemID:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  void *v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  NSObject *v18;
  _QWORD v19[5];
  id v20;
  id v21;
  _QWORD v22[5];
  id v23;
  uint64_t v24[3];
  uint8_t buf[4];
  uint64_t v26;
  __int16 v27;
  BRCXPCRegularIPCsClient *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  const char *v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v24, 0, sizeof(v24));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient createSharingInfoForItemID:reply:]", 4476, v24);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v24[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v26 = v10;
    v27 = 2112;
    v28 = self;
    v29 = 2112;
    v30 = v12;
    v31 = 2080;
    v32 = "-[BRCXPCRegularIPCsClient createSharingInfoForItemID:reply:]";
    v33 = 2112;
    v34 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "isSharingProxyEntitled");
  v15 = MEMORY[0x1E0C809B0];
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __60__BRCXPCRegularIPCsClient_createSharingInfoForItemID_reply___block_invoke;
  v22[3] = &unk_1E875FCF8;
  v22[4] = self;
  v16 = v7;
  v23 = v16;
  v17 = _brc_ipc_check_client_privilege(self, 1, v14, (uint64_t)"isSharingProxyEntitled", v22);

  if ((v17 & 1) != 0)
  {
    -[BRCAccountSession clientTruthWorkloop](self->super.__session, "clientTruthWorkloop");
    v18 = objc_claimAutoreleasedReturnValue();
    v19[0] = v15;
    v19[1] = 3221225472;
    v19[2] = __60__BRCXPCRegularIPCsClient_createSharingInfoForItemID_reply___block_invoke_530;
    v19[3] = &unk_1E875EB70;
    v19[4] = self;
    v20 = v6;
    v21 = v16;
    dispatch_async_and_wait(v18, v19);

  }
  __brc_leave_section(v24);

}

void __60__BRCXPCRegularIPCsClient_createSharingInfoForItemID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __60__BRCXPCRegularIPCsClient_createSharingInfoForItemID_reply___block_invoke_530(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D10E70], "fileObjectIDWithString:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "itemByFileObjectID:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    __60__BRCXPCRegularIPCsClient_createSharingInfoForItemID_reply___block_invoke_530_cold_1();

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "_createSharingInfoForLocalItem:reply:", v4, *(_QWORD *)(a1 + 48));
  }
  else
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = 138413058;
      v14 = v9;
      v15 = 2112;
      v16 = 0;
      v17 = 2112;
      v18 = v10;
      v19 = 2112;
      v20 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v13, 0x2Au);

    }
    v11 = *(_QWORD *)(a1 + 48);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v11 + 16))(v11, 0, v12);

  }
}

- (void)_bumpLastUsedTimeOfSharedItem:(id)a3 clientZone:(id)a4
{
  id v5;
  void *v6;
  BRCItemToPathLookup *v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  BRCItemToPathLookup *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  BRCItemToPathLookup *v15;
  uint8_t buf[4];
  id v17;
  __int16 v18;
  BRCItemToPathLookup *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  objc_msgSend(a4, "itemByItemID:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v7 = -[BRCItemToPathLookup initWithItem:]([BRCItemToPathLookup alloc], "initWithItem:", v6);
    -[BRCItemToPathLookup byFileSystemID](v7, "byFileSystemID");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (v8)
    {
      -[NSObject physicalURL](v8, "physicalURL");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = (BRCItemToPathLookup *)v5;
      FPUpdateLastUsedDate();

      v11 = v15;
    }
    else
    {
      brc_bread_crumbs();
      v11 = (BRCItemToPathLookup *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v17 = v6;
        v18 = 2112;
        v19 = v11;
        _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_DEFAULT, "[WARNING] can't resolve item to path lookup for %@%@", buf, 0x16u);
      }

    }
    -[BRCItemToPathLookup closePaths](v7, "closePaths");
  }
  else
  {
    brc_bread_crumbs();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT))
      -[BRCXPCRegularIPCsClient _bumpLastUsedTimeOfSharedItem:clientZone:].cold.1();

    brc_bread_crumbs();
    v7 = (BRCItemToPathLookup *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v17 = v5;
      v18 = 2112;
      v19 = v7;
      _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_DEFAULT, "[WARNING] can't find item with ID %@; last used date not bumped%@",
        buf,
        0x16u);
    }
  }

}

void __68__BRCXPCRegularIPCsClient__bumpLastUsedTimeOfSharedItem_clientZone___block_invoke(uint64_t a1, uint64_t a2)
{
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (a2)
  {
    brc_bread_crumbs();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, (os_log_type_t)0x90u))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = 138412802;
      v8 = v6;
      v9 = 2112;
      v10 = a2;
      v11 = 2112;
      v12 = v4;
      _os_log_error_impl(&dword_1CBD43000, v5, (os_log_type_t)0x90u, "[ERROR] can't bump last used date for %@; %@%@",
        (uint8_t *)&v7,
        0x20u);
    }
  }
  else
  {
    brc_bread_crumbs();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      __68__BRCXPCRegularIPCsClient__bumpLastUsedTimeOfSharedItem_clientZone___block_invoke_cold_1(a1);
  }

}

- (void)startOperation:(id)a3 toSaveSharingInfo:(id)a4 reply:(id)a5
{
  BRCXPCRegularIPCsClient *v8;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  qos_class_t v13;
  void *v14;
  void *v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  void *v20;
  int v21;
  void *v22;
  NSObject *v23;
  int v24;
  uint64_t v25;
  qos_class_t v26;
  void *v27;
  void *v28;
  char v29;
  char v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  char *v36;
  NSObject *v37;
  void *v38;
  void *v39;
  void *v40;
  BRCXPCRegularIPCsClient *v41;
  NSObject *v42;
  void *v43;
  NSObject *v44;
  char *v45;
  NSObject *v46;
  void *v47;
  NSObject *v48;
  id v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  BRCSharingSaveShareOperation *v54;
  void *v55;
  BRCSharingSaveShareOperation *v56;
  BRCXPCRegularIPCsClient *v57;
  id v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  NSObject *v64;
  char *v65;
  NSObject *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  _BOOL4 v72;
  void *v73;
  void *v74;
  id v75;
  _QWORD v76[5];
  BRCXPCRegularIPCsClient *v77;
  id v78;
  id v79;
  _QWORD v80[4];
  BRCXPCRegularIPCsClient *v81;
  BRCXPCRegularIPCsClient *v82;
  id v83;
  _QWORD v84[5];
  id v85;
  uint64_t v86[3];
  _QWORD v87[5];
  id v88;
  uint64_t v89[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v91;
  __int16 v92;
  BRCXPCRegularIPCsClient *v93;
  __int16 v94;
  void *v95;
  __int16 v96;
  const char *v97;
  __int16 v98;
  void *v99;
  uint64_t v100;

  v100 = *MEMORY[0x1E0C80C00];
  v75 = a3;
  v8 = (BRCXPCRegularIPCsClient *)a4;
  v9 = a5;
  memset(v89, 0, sizeof(v89));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toSaveSharingInfo:reply:]", 4520, v89);
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = v89[0];
    v13 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v13, (uint64_t)&brc_qos_entries, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v91 = (BRCXPCRegularIPCsClient *)v12;
    v92 = 2112;
    v93 = self;
    v94 = 2112;
    v95 = v14;
    v96 = 2080;
    v97 = "-[BRCXPCRegularIPCsClient startOperation:toSaveSharingInfo:reply:]";
    v98 = 2112;
    v99 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "isSharingProxyEntitled");
  v17 = MEMORY[0x1E0C809B0];
  v87[0] = MEMORY[0x1E0C809B0];
  v87[1] = 3221225472;
  v87[2] = __66__BRCXPCRegularIPCsClient_startOperation_toSaveSharingInfo_reply___block_invoke;
  v87[3] = &unk_1E875FCF8;
  v87[4] = self;
  v18 = v9;
  v88 = v18;
  v19 = _brc_ipc_check_client_privilege(self, 1, v16, (uint64_t)"isSharingProxyEntitled", v87);

  if ((v19 & 1) == 0)
    goto LABEL_47;
  if (!v8)
  {
    brc_bread_crumbs();
    v36 = (char *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v37 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("share"), 0);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v91 = self;
      v92 = 2112;
      v93 = 0;
      v94 = 2112;
      v95 = v38;
      v96 = 2112;
      v97 = v36;
      _os_log_impl(&dword_1CBD43000, v37, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("share"), 0);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, void *))v18 + 2))(v18, 0, v39);
    goto LABEL_46;
  }
  -[BRCXPCRegularIPCsClient objectForKeyedSubscript:](v8, "objectForKeyedSubscript:", *MEMORY[0x1E0C94A88]);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = objc_msgSend(v20, "isEqual:", *MEMORY[0x1E0D10D48]);

  if (v21)
  {
    memset(v86, 0, sizeof(v86));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toSaveSharingInfo:reply:]", 4531, v86);
    brc_bread_crumbs();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      v24 = v21;
      v25 = v86[0];
      v26 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v26, (uint64_t)&brc_qos_entries, 0);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219010;
      v91 = (BRCXPCRegularIPCsClient *)v25;
      v92 = 2112;
      v93 = self;
      v94 = 2112;
      v95 = v27;
      v96 = 2080;
      v97 = "-[BRCXPCRegularIPCsClient startOperation:toSaveSharingInfo:reply:]";
      v98 = 2112;
      v99 = v22;
      _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

      v21 = v24;
      v17 = MEMORY[0x1E0C809B0];
    }

    -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = objc_msgSend(v28, "isFolderSharingProxyEntitled");
    v84[0] = v17;
    v84[1] = 3221225472;
    v84[2] = __66__BRCXPCRegularIPCsClient_startOperation_toSaveSharingInfo_reply___block_invoke_533;
    v84[3] = &unk_1E875FCF8;
    v84[4] = self;
    v85 = v18;
    v30 = _brc_ipc_check_client_privilege(self, 1, v29, (uint64_t)"isFolderSharingProxyEntitled", v84);

    __brc_leave_section(v86);
    if ((v30 & 1) == 0)
      goto LABEL_47;
  }
  if (-[BRCXPCRegularIPCsClient publicPermission](v8, "publicPermission") != 1)
  {
LABEL_32:
    brc_bread_crumbs();
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v48 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v48, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient startOperation:toSaveSharingInfo:reply:].cold.3();

    v49 = objc_alloc(MEMORY[0x1E0D10E88]);
    -[BRCXPCRegularIPCsClient recordID](v8, "recordID");
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v50, "zoneID");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    v39 = (void *)objc_msgSend(v49, "initWithRecordZoneID:", v51);

    -[BRCXPCClient session](self, "session");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v52, "clientZoneByMangledID:", v39);
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    if (v53)
    {
      v54 = [BRCSharingSaveShareOperation alloc];
      objc_msgSend(v53, "serverZone");
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      v56 = -[BRCSharingSaveShareOperation initWithShare:zone:sessionContext:](v54, "initWithShare:zone:sessionContext:", v8, v55, v52);

      -[_BRCFrameworkOperation setRemoteClientProxy:](v56, "setRemoteClientProxy:", v75);
      v76[0] = v17;
      v76[1] = 3221225472;
      v76[2] = __66__BRCXPCRegularIPCsClient_startOperation_toSaveSharingInfo_reply___block_invoke_536;
      v76[3] = &unk_1E8766A98;
      v76[4] = self;
      v79 = v18;
      v57 = v8;
      v77 = v57;
      v58 = v53;
      v78 = v58;
      -[_BRCOperation setFinishBlock:](v56, "setFinishBlock:", v76);
      if (v21)
      {
        objc_msgSend(v58, "asPrivateClientZone");
        v59 = (void *)objc_claimAutoreleasedReturnValue();
        -[BRCXPCRegularIPCsClient recordID](v57, "recordID");
        v60 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v60, "brc_shareItemID");
        v61 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v59, "pcsChainOperationForItemID:", v61);
        v62 = (void *)objc_claimAutoreleasedReturnValue();

        if (v62)
        {
          brc_bread_crumbs();
          v63 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v64 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v64, OS_LOG_TYPE_DEBUG))
            -[BRCXPCRegularIPCsClient startOperation:toSaveSharingInfo:reply:].cold.2();

          -[_BRCOperation addDependency:](v56, "addDependency:", v62);
        }

      }
      objc_msgSend(v52, "addMiscOperation:", v56);
      -[_BRCOperation schedule](v56, "schedule");

    }
    else
    {
      brc_bread_crumbs();
      v65 = (char *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v66 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v66, OS_LOG_TYPE_INFO))
      {
        v67 = (void *)MEMORY[0x1E0CB35C8];
        objc_msgSend(v39, "appLibraryOrZoneName");
        v68 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v67, "brc_errorAppLibraryNotFound:", v68);
        v69 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138413058;
        v91 = self;
        v92 = 2112;
        v93 = 0;
        v94 = 2112;
        v95 = v69;
        v96 = 2112;
        v97 = v65;
        _os_log_impl(&dword_1CBD43000, v66, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

      }
      v70 = (void *)MEMORY[0x1E0CB35C8];
      objc_msgSend(v39, "appLibraryOrZoneName");
      v56 = (BRCSharingSaveShareOperation *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v70, "brc_errorAppLibraryNotFound:", v56);
      v71 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v18 + 2))(v18, 0, v71);

    }
LABEL_46:

    goto LABEL_47;
  }
  +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v31, "deleteShareOnEmptySave"))
  {
LABEL_31:

    goto LABEL_32;
  }
  -[BRCXPCRegularIPCsClient participants](v8, "participants");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v32, "count"))
  {
    -[BRCXPCRegularIPCsClient participants](v8, "participants");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v33, "count") == 1)
    {
      -[BRCXPCRegularIPCsClient participants](v8, "participants");
      v74 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v74, "firstObject");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v34, "isCurrentUser"))
      {
        -[BRCXPCRegularIPCsClient participants](v8, "participants");
        v73 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v73, "firstObject");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        v72 = objc_msgSend(v35, "role") == 1;

        if (!v72)
          goto LABEL_32;
        goto LABEL_20;
      }

    }
    goto LABEL_31;
  }

LABEL_20:
  -[BRCXPCRegularIPCsClient etag](v8, "etag");
  v40 = (void *)objc_claimAutoreleasedReturnValue();

  if (v40)
  {
    brc_bread_crumbs();
    v41 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v42 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v91 = v8;
      v92 = 2112;
      v93 = v41;
      _os_log_impl(&dword_1CBD43000, v42, OS_LOG_TYPE_DEFAULT, "[WARNING] Deleting share %@ because we're being asked to save a share with no participants%@", buf, 0x16u);
    }

    v80[0] = v17;
    v80[1] = 3221225472;
    v80[2] = __66__BRCXPCRegularIPCsClient_startOperation_toSaveSharingInfo_reply___block_invoke_534;
    v80[3] = &unk_1E875FFC8;
    v81 = v8;
    v82 = self;
    v83 = v18;
    -[BRCXPCRegularIPCsClient startOperation:toUnshareShare:forceDelete:reply:](self, "startOperation:toUnshareShare:forceDelete:reply:", v75, v81, 1, v80);

    v39 = v81;
    goto LABEL_46;
  }
  brc_bread_crumbs();
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v44 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v44, OS_LOG_TYPE_DEBUG))
    -[BRCXPCRegularIPCsClient startOperation:toSaveSharingInfo:reply:].cold.1();

  brc_bread_crumbs();
  v45 = (char *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v46 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138413058;
    v91 = self;
    v92 = 2112;
    v93 = v8;
    v94 = 2112;
    v95 = 0;
    v96 = 2112;
    v97 = v45;
    _os_log_impl(&dword_1CBD43000, v46, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
  }

  (*((void (**)(id, BRCXPCRegularIPCsClient *, _QWORD))v18 + 2))(v18, v8, 0);
LABEL_47:
  __brc_leave_section(v89);

}

void __66__BRCXPCRegularIPCsClient_startOperation_toSaveSharingInfo_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __66__BRCXPCRegularIPCsClient_startOperation_toSaveSharingInfo_reply___block_invoke_533(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __66__BRCXPCRegularIPCsClient_startOperation_toSaveSharingInfo_reply___block_invoke_534(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (!v3)
  {
    objc_msgSend(*(id *)(a1 + 32), "setEtag:", 0);
    objc_msgSend(*(id *)(a1 + 32), "setKnownToServer:", 0);
  }
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v6 = *(_QWORD *)(a1 + 40);
    v8 = 138413058;
    v9 = v6;
    v10 = 2112;
    v11 = v7;
    v12 = 2112;
    v13 = 0;
    v14 = 2112;
    v15 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v8, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void __66__BRCXPCRegularIPCsClient_startOperation_toSaveSharingInfo_reply___block_invoke_536(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  id v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    brc_bread_crumbs();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 32);
      objc_msgSend(v6, "brc_wrappedError");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = 138413058;
      v18 = v9;
      v19 = 2112;
      v20 = v5;
      v21 = 2112;
      v22 = v10;
      v23 = 2112;
      v24 = v7;
      _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v17, 0x2Au);

    }
    v11 = *(_QWORD *)(a1 + 56);
    objc_msgSend(v6, "brc_wrappedError");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id, void *))(v11 + 16))(v11, v5, v12);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "recordID");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "brc_shareItemID");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 32), "_bumpLastUsedTimeOfSharedItem:clientZone:", v12, *(_QWORD *)(a1 + 48));
    brc_bread_crumbs();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      v16 = *(_QWORD *)(a1 + 32);
      v17 = 138413058;
      v18 = v16;
      v19 = 2112;
      v20 = v5;
      v21 = 2112;
      v22 = 0;
      v23 = 2112;
      v24 = v14;
      _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v17, 0x2Au);
    }

    (*(void (**)(_QWORD, id, _QWORD))(*(_QWORD *)(a1 + 56) + 16))(*(_QWORD *)(a1 + 56), v5, 0);
  }

}

- (void)startOperation:(id)a3 toUnshareShare:(id)a4 forceDelete:(BOOL)a5 reply:(id)a6
{
  id v10;
  id v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  qos_class_t v15;
  void *v16;
  void *v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  void *v22;
  int v23;
  void *v24;
  NSObject *v25;
  BOOL v26;
  uint64_t v27;
  qos_class_t v28;
  void *v29;
  void *v30;
  char v31;
  char v32;
  void *v33;
  NSObject *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  int v42;
  void *v43;
  void *v44;
  NSObject *v45;
  id v46;
  BRCSharingDestroyShareOperation *v47;
  void *v48;
  NSObject *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  id v57;
  _QWORD v58[5];
  id v59;
  _QWORD block[4];
  id v61;
  id v62;
  _BYTE *v63;
  _QWORD v64[5];
  id v65;
  uint64_t v66[3];
  _QWORD v67[5];
  id v68;
  uint64_t v69[3];
  _BYTE buf[24];
  void *v71;
  __int16 v72;
  const char *v73;
  __int16 v74;
  void *v75;
  uint64_t v76;

  v76 = *MEMORY[0x1E0C80C00];
  v57 = a3;
  v10 = a4;
  v11 = a6;
  memset(v69, 0, sizeof(v69));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toUnshareShare:forceDelete:reply:]", 4594, v69);
  brc_bread_crumbs();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    v14 = v69[0];
    v15 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v15, (uint64_t)&brc_qos_entries, 0);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    *(_QWORD *)&buf[4] = v14;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    *(_WORD *)&buf[22] = 2112;
    v71 = v16;
    v72 = 2080;
    v73 = "-[BRCXPCRegularIPCsClient startOperation:toUnshareShare:forceDelete:reply:]";
    v74 = 2112;
    v75 = v12;
    _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(v17, "isSharingProxyEntitled");
  v19 = MEMORY[0x1E0C809B0];
  v67[0] = MEMORY[0x1E0C809B0];
  v67[1] = 3221225472;
  v67[2] = __75__BRCXPCRegularIPCsClient_startOperation_toUnshareShare_forceDelete_reply___block_invoke;
  v67[3] = &unk_1E875FCF8;
  v67[4] = self;
  v20 = v11;
  v68 = v20;
  v21 = _brc_ipc_check_client_privilege(self, 1, v18, (uint64_t)"isSharingProxyEntitled", v67);

  if ((v21 & 1) != 0)
  {
    objc_msgSend(v10, "objectForKeyedSubscript:", *MEMORY[0x1E0C94A88]);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = objc_msgSend(v22, "isEqual:", *MEMORY[0x1E0D10D48]);

    if (!v23)
      goto LABEL_8;
    memset(v66, 0, sizeof(v66));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toUnshareShare:forceDelete:reply:]", 4599, v66);
    brc_bread_crumbs();
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      v26 = a5;
      v27 = v66[0];
      v28 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v28, (uint64_t)&brc_qos_entries, 0);
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219010;
      *(_QWORD *)&buf[4] = v27;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = self;
      *(_WORD *)&buf[22] = 2112;
      v71 = v29;
      v72 = 2080;
      v73 = "-[BRCXPCRegularIPCsClient startOperation:toUnshareShare:forceDelete:reply:]";
      v74 = 2112;
      v75 = v24;
      _os_log_impl(&dword_1CBD43000, v25, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

      a5 = v26;
      v19 = MEMORY[0x1E0C809B0];
    }

    -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = objc_msgSend(v30, "isFolderSharingProxyEntitled");
    v64[0] = v19;
    v64[1] = 3221225472;
    v64[2] = __75__BRCXPCRegularIPCsClient_startOperation_toUnshareShare_forceDelete_reply___block_invoke_537;
    v64[3] = &unk_1E875FCF8;
    v64[4] = self;
    v65 = v20;
    v32 = _brc_ipc_check_client_privilege(self, 1, v31, (uint64_t)"isFolderSharingProxyEntitled", v64);

    __brc_leave_section(v66);
    if ((v32 & 1) != 0)
    {
LABEL_8:
      brc_bread_crumbs();
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v34 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
        -[BRCXPCRegularIPCsClient startOperation:toUnshareShare:forceDelete:reply:].cold.1();

      -[BRCXPCClient session](self, "session");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v36 = objc_alloc(MEMORY[0x1E0D10E88]);
      objc_msgSend(v10, "recordID");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v37, "zoneID");
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      v39 = (void *)objc_msgSend(v36, "initWithRecordZoneID:", v38);

      objc_msgSend(v35, "clientZoneByMangledID:", v39);
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v56, "serverZone");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      if (v40)
      {
        +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", v39);
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        v42 = objc_msgSend(v41, "destroyiWorkShares");

        *(_QWORD *)buf = 0;
        *(_QWORD *)&buf[8] = buf;
        *(_QWORD *)&buf[16] = 0x2020000000;
        LOBYTE(v71) = 1;
        if (!a5 && ((objc_msgSend(v40, "isSharedZone") | v42) & 1) == 0)
        {
          objc_msgSend(v10, "recordID");
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v43, "brc_shareItemID");
          v44 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v35, "clientTruthWorkloop");
          v45 = objc_claimAutoreleasedReturnValue();
          block[0] = v19;
          block[1] = 3221225472;
          block[2] = __75__BRCXPCRegularIPCsClient_startOperation_toUnshareShare_forceDelete_reply___block_invoke_538;
          block[3] = &unk_1E87615A8;
          v61 = v56;
          v62 = v44;
          v63 = buf;
          v46 = v44;
          dispatch_async_and_wait(v45, block);

        }
        v47 = -[BRCSharingDestroyShareOperation initWithShare:zone:sessionContext:]([BRCSharingDestroyShareOperation alloc], "initWithShare:zone:sessionContext:", v10, v40, v35);
        -[_BRCFrameworkOperation setRemoteClientProxy:](v47, "setRemoteClientProxy:", v57);
        v58[0] = v19;
        v58[1] = 3221225472;
        v58[2] = __75__BRCXPCRegularIPCsClient_startOperation_toUnshareShare_forceDelete_reply___block_invoke_2;
        v58[3] = &unk_1E8760EB8;
        v58[4] = self;
        v59 = v20;
        -[_BRCOperation setFinishBlock:](v47, "setFinishBlock:", v58);
        objc_msgSend(v35, "addMiscOperation:", v47);
        -[_BRCOperation schedule](v47, "schedule");

        _Block_object_dispose(buf, 8);
      }
      else
      {
        brc_bread_crumbs();
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v49 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
        {
          v50 = (void *)MEMORY[0x1E0CB35C8];
          objc_msgSend(v39, "appLibraryOrZoneName");
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v50, "brc_errorAppLibraryNotFound:", v51);
          v52 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          *(_QWORD *)&buf[4] = self;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v52;
          *(_WORD *)&buf[22] = 2112;
          v71 = v48;
          _os_log_impl(&dword_1CBD43000, v49, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

        }
        v53 = (void *)MEMORY[0x1E0CB35C8];
        objc_msgSend(v39, "appLibraryOrZoneName");
        v54 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v53, "brc_errorAppLibraryNotFound:", v54);
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, void *))v20 + 2))(v20, v55);

      }
    }
  }
  __brc_leave_section(v69);

}

void __75__BRCXPCRegularIPCsClient_startOperation_toUnshareShare_forceDelete_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __75__BRCXPCRegularIPCsClient_startOperation_toUnshareShare_forceDelete_reply___block_invoke_537(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __75__BRCXPCRegularIPCsClient_startOperation_toUnshareShare_forceDelete_reply___block_invoke_538(uint64_t a1)
{
  void *v2;
  int v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "itemByItemID:", *(_QWORD *)(a1 + 40));
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "st");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "iWorkShareable");

  if (v3)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;

}

void __75__BRCXPCRegularIPCsClient_startOperation_toUnshareShare_forceDelete_reply___block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v4, "brc_wrappedError");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = 138412802;
    v12 = v7;
    v13 = 2112;
    v14 = v8;
    v15 = 2112;
    v16 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v11, 0x20u);

  }
  v9 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v4, "brc_wrappedError");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);

}

- (void)startOperation:(id)a3 toLookupShareParticipants:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  NSObject *v22;
  _QWORD v23[5];
  id v24;
  id v25;
  id v26;
  _QWORD v27[5];
  id v28;
  uint64_t v29[3];
  uint8_t buf[4];
  uint64_t v31;
  __int16 v32;
  BRCXPCRegularIPCsClient *v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  const char *v37;
  __int16 v38;
  void *v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v29, 0, sizeof(v29));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toLookupShareParticipants:reply:]", 4640, v29);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v29[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v31 = v13;
    v32 = 2112;
    v33 = self;
    v34 = 2112;
    v35 = v15;
    v36 = 2080;
    v37 = "-[BRCXPCRegularIPCsClient startOperation:toLookupShareParticipants:reply:]";
    v38 = 2112;
    v39 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingProxyEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v27[0] = MEMORY[0x1E0C809B0];
  v27[1] = 3221225472;
  v27[2] = __74__BRCXPCRegularIPCsClient_startOperation_toLookupShareParticipants_reply___block_invoke;
  v27[3] = &unk_1E875FCF8;
  v27[4] = self;
  v19 = v10;
  v28 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 0, v17, (uint64_t)"isSharingProxyEntitled", v27);

  if ((v20 & 1) != 0)
  {
    brc_bread_crumbs();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient startOperation:toLookupShareParticipants:reply:].cold.1();

    v23[0] = v18;
    v23[1] = 3221225472;
    v23[2] = __74__BRCXPCRegularIPCsClient_startOperation_toLookupShareParticipants_reply___block_invoke_540;
    v23[3] = &unk_1E8766AC0;
    v23[4] = self;
    v26 = v19;
    v24 = v9;
    v25 = v8;
    -[BRCXPCClient performBlockWithAnySession:](self, "performBlockWithAnySession:", v23);

  }
  __brc_leave_section(v29);

}

void __74__BRCXPCRegularIPCsClient_startOperation_toLookupShareParticipants_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __74__BRCXPCRegularIPCsClient_startOperation_toLookupShareParticipants_reply___block_invoke_540(uint64_t a1, void *a2)
{
  id v3;
  BRCSharingLookupParticipantsOperation *v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, void *, void *);
  void *v13;
  uint64_t v14;
  id v15;
  uint8_t buf[4];
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    v4 = -[BRCSharingLookupParticipantsOperation initWithUserIdentities:session:]([BRCSharingLookupParticipantsOperation alloc], "initWithUserIdentities:session:", *(_QWORD *)(a1 + 40), v3);
    -[_BRCFrameworkOperation setRemoteClientProxy:](v4, "setRemoteClientProxy:", *(_QWORD *)(a1 + 48));
    v10 = MEMORY[0x1E0C809B0];
    v11 = 3221225472;
    v12 = __74__BRCXPCRegularIPCsClient_startOperation_toLookupShareParticipants_reply___block_invoke_542;
    v13 = &unk_1E8760EB8;
    v14 = *(_QWORD *)(a1 + 32);
    v15 = *(id *)(a1 + 56);
    -[_BRCOperation setFinishBlock:](v4, "setFinishBlock:", &v10);
    objc_msgSend(v3, "addMiscOperation:", v4, v10, v11, v12, v13, v14);
    -[_BRCOperation schedule](v4, "schedule");

  }
  else
  {
    brc_bread_crumbs();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorLoggedOut");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v17 = v7;
      v18 = 2112;
      v19 = 0;
      v20 = 2112;
      v21 = v8;
      v22 = 2112;
      v23 = v5;
      _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

    }
    v9 = *(_QWORD *)(a1 + 56);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorLoggedOut");
    v4 = (BRCSharingLookupParticipantsOperation *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, BRCSharingLookupParticipantsOperation *))(v9 + 16))(v9, 0, v4);
  }

}

void __74__BRCXPCRegularIPCsClient_startOperation_toLookupShareParticipants_reply___block_invoke_542(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v6, "brc_wrappedError");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138413058;
    v14 = v9;
    v15 = 2112;
    v16 = v5;
    v17 = 2112;
    v18 = v10;
    v19 = 2112;
    v20 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v13, 0x2Au);

  }
  v11 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v6, "brc_wrappedError");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, void *))(v11 + 16))(v11, v5, v12);

}

- (void)_startOperation:(id)a3 toModifyRecordAccessWithLocalItem:(id)a4 allowAccess:(BOOL)a5 reply:(id)a6
{
  _BOOL8 v7;
  id v10;
  id v11;
  id v12;
  void *v13;
  NSObject *v14;
  BRCSharingModifyAccessOperation *v15;
  void *v16;
  void *v17;
  BRCSharingModifyAccessOperation *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, void *, void *);
  void *v25;
  BRCXPCRegularIPCsClient *v26;
  id v27;
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v7 = a5;
  v38 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a6;
  brc_bread_crumbs();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    -[BRCXPCRegularIPCsClient _startOperation:toModifyRecordAccessWithLocalItem:allowAccess:reply:].cold.1();

  if ((objc_msgSend(v11, "isDocument") & 1) != 0)
  {
    v15 = [BRCSharingModifyAccessOperation alloc];
    objc_msgSend(v11, "asDocument");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    -[BRCXPCClient session](self, "session");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = -[BRCSharingModifyAccessOperation initWithItem:allowAccess:sessionContext:](v15, "initWithItem:allowAccess:sessionContext:", v16, v7, v17);

    v22 = MEMORY[0x1E0C809B0];
    v23 = 3221225472;
    v24 = __95__BRCXPCRegularIPCsClient__startOperation_toModifyRecordAccessWithLocalItem_allowAccess_reply___block_invoke;
    v25 = &unk_1E8765168;
    v26 = self;
    v27 = v12;
    -[_BRCOperation setFinishBlock:](v18, "setFinishBlock:", &v22);
    -[BRCXPCClient _startSharingOperationAfterAcceptation:client:item:](self, "_startSharingOperationAfterAcceptation:client:item:", v18, v10, v11, v22, v23, v24, v25, v26);

  }
  else
  {
    brc_bread_crumbs();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotShareable");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413314;
      v29 = self;
      v30 = 2112;
      v31 = 0;
      v32 = 2112;
      v33 = 0;
      v34 = 2112;
      v35 = v21;
      v36 = 2112;
      v37 = v19;
      _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotShareable");
    v18 = (BRCSharingModifyAccessOperation *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, _QWORD, BRCSharingModifyAccessOperation *))v12 + 2))(v12, 0, 0, v18);
  }

}

void __95__BRCXPCRegularIPCsClient__startOperation_toModifyRecordAccessWithLocalItem_allowAccess_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("accessToken"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("referenceIdentifier"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "brc_wrappedError");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 138413314;
    v18 = v9;
    v19 = 2112;
    v20 = v10;
    v21 = 2112;
    v22 = v11;
    v23 = 2112;
    v24 = v12;
    v25 = 2112;
    v26 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v17, 0x34u);

  }
  v13 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("accessToken"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("referenceIdentifier"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "brc_wrappedError");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *, void *))(v13 + 16))(v13, v14, v15, v16);

}

- (void)startOperation:(id)a3 toModifyRecordAccessWithItemID:(id)a4 allowAccess:(BOOL)a5 reply:(id)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  qos_class_t v16;
  void *v17;
  void *v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  NSObject *v23;
  _QWORD v24[5];
  id v25;
  id v26;
  id v27;
  BOOL v28;
  _QWORD v29[5];
  id v30;
  uint64_t v31[3];
  uint8_t buf[4];
  uint64_t v33;
  __int16 v34;
  BRCXPCRegularIPCsClient *v35;
  __int16 v36;
  void *v37;
  __int16 v38;
  const char *v39;
  __int16 v40;
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a6;
  memset(v31, 0, sizeof(v31));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toModifyRecordAccessWithItemID:allowAccess:reply:]", 4676, v31);
  brc_bread_crumbs();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    v15 = v31[0];
    v16 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v16, (uint64_t)&brc_qos_entries, 0);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v33 = v15;
    v34 = 2112;
    v35 = self;
    v36 = 2112;
    v37 = v17;
    v38 = 2080;
    v39 = "-[BRCXPCRegularIPCsClient startOperation:toModifyRecordAccessWithItemID:allowAccess:reply:]";
    v40 = 2112;
    v41 = v13;
    _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "isSharingProxyEntitled");
  v20 = MEMORY[0x1E0C809B0];
  v29[0] = MEMORY[0x1E0C809B0];
  v29[1] = 3221225472;
  v29[2] = __91__BRCXPCRegularIPCsClient_startOperation_toModifyRecordAccessWithItemID_allowAccess_reply___block_invoke;
  v29[3] = &unk_1E875FCF8;
  v29[4] = self;
  v21 = v12;
  v30 = v21;
  v22 = _brc_ipc_check_client_privilege(self, 1, v19, (uint64_t)"isSharingProxyEntitled", v29);

  if ((v22 & 1) != 0)
  {
    -[BRCAccountSession clientTruthWorkloop](self->super.__session, "clientTruthWorkloop");
    v23 = objc_claimAutoreleasedReturnValue();
    v24[0] = v20;
    v24[1] = 3221225472;
    v24[2] = __91__BRCXPCRegularIPCsClient_startOperation_toModifyRecordAccessWithItemID_allowAccess_reply___block_invoke_549;
    v24[3] = &unk_1E8766AE8;
    v24[4] = self;
    v25 = v11;
    v27 = v21;
    v26 = v10;
    v28 = a5;
    dispatch_async_and_wait(v23, v24);

  }
  __brc_leave_section(v31);

}

void __91__BRCXPCRegularIPCsClient_startOperation_toModifyRecordAccessWithItemID_allowAccess_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __91__BRCXPCRegularIPCsClient_startOperation_toModifyRecordAccessWithItemID_allowAccess_reply___block_invoke_549(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D10E70], "fileObjectIDWithString:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "itemByFileObjectID:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "_startOperation:toModifyRecordAccessWithLocalItem:allowAccess:reply:", *(_QWORD *)(a1 + 48), v4, *(unsigned __int8 *)(a1 + 64), *(_QWORD *)(a1 + 56));
  }
  else
  {
    brc_bread_crumbs();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = 138413314;
      v12 = v7;
      v13 = 2112;
      v14 = 0;
      v15 = 2112;
      v16 = 0;
      v17 = 2112;
      v18 = v8;
      v19 = 2112;
      v20 = v5;
      _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v11, 0x34u);

    }
    v9 = *(_QWORD *)(a1 + 56);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, _QWORD, void *))(v9 + 16))(v9, 0, 0, v10);

  }
}

- (void)_startOperation:(id)a3 toCopyParticipantTokenWithLocalItem:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  BRCSharingCopyParticipantTokenOperation *v13;
  void *v14;
  void *v15;
  BRCSharingCopyParticipantTokenOperation *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, void *, void *);
  void *v23;
  BRCXPCRegularIPCsClient *v24;
  id v25;
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  __int16 v32;
  void *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    -[BRCXPCRegularIPCsClient _startOperation:toCopyParticipantTokenWithLocalItem:reply:].cold.1();

  if ((objc_msgSend(v9, "sharingOptions") & 0x48) != 0)
  {
    v13 = [BRCSharingCopyParticipantTokenOperation alloc];
    objc_msgSend(v9, "asDocument");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[BRCXPCClient session](self, "session");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = -[BRCSharingCopyParticipantTokenOperation initWithItem:sessionContext:](v13, "initWithItem:sessionContext:", v14, v15);

    v20 = MEMORY[0x1E0C809B0];
    v21 = 3221225472;
    v22 = __85__BRCXPCRegularIPCsClient__startOperation_toCopyParticipantTokenWithLocalItem_reply___block_invoke;
    v23 = &unk_1E8760EB8;
    v24 = self;
    v25 = v10;
    -[_BRCOperation setFinishBlock:](v16, "setFinishBlock:", &v20);
    -[BRCXPCClient _startSharingOperationAfterAcceptation:client:item:](self, "_startSharingOperationAfterAcceptation:client:item:", v16, v8, v9, v20, v21, v22, v23, v24);

  }
  else
  {
    brc_bread_crumbs();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorDocumentIsNotSharedAtIdentifier:", 0);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413314;
      v27 = self;
      v28 = 2112;
      v29 = 0;
      v30 = 2112;
      v31 = 0;
      v32 = 2112;
      v33 = v19;
      v34 = 2112;
      v35 = v17;
      _os_log_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", buf, 0x34u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorDocumentIsNotSharedAtIdentifier:", 0);
    v16 = (BRCSharingCopyParticipantTokenOperation *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, _QWORD, BRCSharingCopyParticipantTokenOperation *))v10 + 2))(v10, 0, 0, v16);
  }

}

void __85__BRCXPCRegularIPCsClient__startOperation_toCopyParticipantTokenWithLocalItem_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  int v15;
  uint64_t v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a2;
  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("participantKey"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("baseToken"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  brc_bread_crumbs();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v5, "brc_wrappedError");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = 138413314;
    v16 = v11;
    v17 = 2112;
    v18 = v7;
    v19 = 2112;
    v20 = v8;
    v21 = 2112;
    v22 = v12;
    v23 = 2112;
    v24 = v9;
    _os_log_impl(&dword_1CBD43000, v10, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v15, 0x34u);

  }
  v13 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v5, "brc_wrappedError");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *, void *))(v13 + 16))(v13, v7, v8, v14);

}

- (void)startOperation:(id)a3 toCopyParticipantTokenWithItemID:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  NSObject *v21;
  _QWORD block[5];
  id v23;
  id v24;
  id v25;
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toCopyParticipantTokenWithItemID:reply:]", 4712, v28);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v28[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = v13;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v15;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient startOperation:toCopyParticipantTokenWithItemID:reply:]";
    v37 = 2112;
    v38 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingPrivateInterfaceEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __81__BRCXPCRegularIPCsClient_startOperation_toCopyParticipantTokenWithItemID_reply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v19 = v10;
  v27 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingPrivateInterfaceEntitled", v26);

  if ((v20 & 1) != 0)
  {
    -[BRCAccountSession clientTruthWorkloop](self->super.__session, "clientTruthWorkloop");
    v21 = objc_claimAutoreleasedReturnValue();
    block[0] = v18;
    block[1] = 3221225472;
    block[2] = __81__BRCXPCRegularIPCsClient_startOperation_toCopyParticipantTokenWithItemID_reply___block_invoke_555;
    block[3] = &unk_1E875FE38;
    block[4] = self;
    v23 = v9;
    v25 = v19;
    v24 = v8;
    dispatch_async_and_wait(v21, block);

  }
  __brc_leave_section(v28);

}

void __81__BRCXPCRegularIPCsClient_startOperation_toCopyParticipantTokenWithItemID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __81__BRCXPCRegularIPCsClient_startOperation_toCopyParticipantTokenWithItemID_reply___block_invoke_555(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D10E70], "fileObjectIDWithString:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "itemByFileObjectID:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "_startOperation:toCopyParticipantTokenWithLocalItem:reply:", *(_QWORD *)(a1 + 48), v4, *(_QWORD *)(a1 + 56));
  }
  else
  {
    brc_bread_crumbs();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = 138413314;
      v12 = v7;
      v13 = 2112;
      v14 = 0;
      v15 = 2112;
      v16 = 0;
      v17 = 2112;
      v18 = v8;
      v19 = 2112;
      v20 = v5;
      _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v11, 0x34u);

    }
    v9 = *(_QWORD *)(a1 + 56);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, _QWORD, void *))(v9 + 16))(v9, 0, 0, v10);

  }
}

- (void)_startOperation:(id)a3 toPrepFolderForSharingWithLocalItem:(id)a4 reply:(id)a5
{
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  BRCSharingPCSChainFolderOperation *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  BRCSharingPCSChainFolderOperation *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  NSObject *v38;
  void *v39;
  int v40;
  void *v41;
  double v42;
  double v43;
  double v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  NSObject *v54;
  id v55;
  void *v57;
  void (**v58)(id, void *);
  _QWORD v59[4];
  id v60;
  id v61;
  BRCXPCRegularIPCsClient *v62;
  void (**v63)(id, void *);
  uint64_t *v64;
  uint64_t v65;
  double *v66;
  uint64_t v67;
  uint64_t v68;
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v70;
  __int16 v71;
  BRCSharingPCSChainFolderOperation *v72;
  __int16 v73;
  void *v74;
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  v55 = a3;
  v7 = a4;
  v58 = (void (**)(id, void *))a5;
  v65 = 0;
  v66 = (double *)&v65;
  v67 = 0x2020000000;
  v68 = 0;
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "timeIntervalSinceReferenceDate");
  v10 = v9;

  v68 = v10;
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    -[BRCXPCRegularIPCsClient _startOperation:toPrepFolderForSharingWithLocalItem:reply:].cold.2();

  +[BRCEventsAnalytics sharedAnalytics](BRCEventsAnalytics, "sharedAnalytics");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v7, "isDirectory") & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", 0, 2);
    v18 = (BRCSharingPCSChainFolderOperation *)objc_claimAutoreleasedReturnValue();
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = objc_msgSend(v23, "reportXPCErrorOnPCSChain");

    if (v24)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "timeIntervalSinceReferenceDate");
      v27 = v26;
      v28 = v66[3];

      objc_msgSend(v7, "clientZone");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "mangledID");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "clientZone");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v32 = objc_msgSend(v31, "enhancedDrivePrivacyEnabled");
      objc_msgSend(v7, "itemID");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "itemIDString");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      -[BRCXPCClient session](self, "session");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v35, "analyticsReporter");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v57, "registerAndSendNewFolderSharePCSChainingTime:chainedRecordsCount:zoneMangledID:enhancedDrivePrivacyEnabled:itemIDString:error:analyticsReporter:", MEMORY[0x1E0C9AAA0], v30, v32, v34, v18, v36, v27 - v28);

    }
    brc_bread_crumbs();
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v38 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v70 = self;
      v71 = 2112;
      v72 = v18;
      v73 = 2112;
      v74 = v37;
      _os_log_impl(&dword_1CBD43000, v38, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }
    goto LABEL_16;
  }
  if ((objc_msgSend(v7, "isKnownByServer") & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNotInCloud:", 0);
    v18 = (BRCSharingPCSChainFolderOperation *)objc_claimAutoreleasedReturnValue();
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = objc_msgSend(v39, "reportXPCErrorOnPCSChain");

    if (v40)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v41, "timeIntervalSinceReferenceDate");
      v43 = v42;
      v44 = v66[3];

      objc_msgSend(v7, "clientZone");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v45, "mangledID");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "clientZone");
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      v48 = objc_msgSend(v47, "enhancedDrivePrivacyEnabled");
      objc_msgSend(v7, "itemID");
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v49, "itemIDString");
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      -[BRCXPCClient session](self, "session");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "analyticsReporter");
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v57, "registerAndSendNewFolderSharePCSChainingTime:chainedRecordsCount:zoneMangledID:enhancedDrivePrivacyEnabled:itemIDString:error:analyticsReporter:", MEMORY[0x1E0C9AAA0], v46, v48, v50, v18, v52, v43 - v44);

    }
    brc_bread_crumbs();
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v38 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v70 = self;
      v71 = 2112;
      v72 = v18;
      v73 = 2112;
      v74 = v37;
      _os_log_impl(&dword_1CBD43000, v38, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }
LABEL_16:

    v58[2](v58, v18);
    goto LABEL_17;
  }
  v13 = [BRCSharingPCSChainFolderOperation alloc];
  objc_msgSend(v7, "asDirectory");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[BRCXPCClient session](self, "session");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[BRCXPCClient session](self, "session");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "syncUpScheduler");
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = -[BRCSharingPCSChainFolderOperation initWithItem:sessionContext:syncUpCallback:](v13, "initWithItem:sessionContext:syncUpCallback:", v14, v15, v17);

  -[_BRCFrameworkOperation setRemoteClientProxy:](v18, "setRemoteClientProxy:", v55);
  v59[0] = MEMORY[0x1E0C809B0];
  v59[1] = 3221225472;
  v59[2] = __85__BRCXPCRegularIPCsClient__startOperation_toPrepFolderForSharingWithLocalItem_reply___block_invoke;
  v59[3] = &unk_1E8766B10;
  v64 = &v65;
  v60 = v57;
  v19 = v7;
  v61 = v19;
  v62 = self;
  v63 = v58;
  -[_BRCOperation setFinishBlock:](v18, "setFinishBlock:", v59);
  objc_msgSend(v19, "clientZone");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v17) = objc_msgSend(v20, "isPrivateZone");

  if ((v17 & 1) == 0)
  {
    brc_bread_crumbs();
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v54 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v54, OS_LOG_TYPE_FAULT))
      -[BRCXPCRegularIPCsClient _startOperation:toPrepFolderForSharingWithLocalItem:reply:].cold.1();

  }
  objc_msgSend(v19, "clientZone");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "asPrivateClientZone");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "registerPCSChainingOperation:", v18);

  -[_BRCOperation schedule](v18, "schedule");
LABEL_17:

  _Block_object_dispose(&v65, 8);
}

void __85__BRCXPCRegularIPCsClient__startOperation_toPrepFolderForSharingWithLocalItem_reply___block_invoke(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  void *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = a3;
  v5 = (void *)MEMORY[0x1E0C99D68];
  v6 = a2;
  objc_msgSend(v5, "date");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "timeIntervalSinceReferenceDate");
  v9 = v8 - *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);

  v24 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "clientZone");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "mangledID");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "clientZone");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v12, "enhancedDrivePrivacyEnabled");
  objc_msgSend(*(id *)(a1 + 40), "itemID");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "itemIDString");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 48), "session");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "analyticsReporter");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "registerAndSendNewFolderSharePCSChainingTime:chainedRecordsCount:zoneMangledID:enhancedDrivePrivacyEnabled:itemIDString:error:analyticsReporter:", v6, v11, v13, v15, v25, v17, v9);

  brc_bread_crumbs();
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v19 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
  {
    v20 = *(_QWORD *)(a1 + 48);
    objc_msgSend(v25, "brc_wrappedError");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    v27 = v20;
    v28 = 2112;
    v29 = v21;
    v30 = 2112;
    v31 = v18;
    _os_log_impl(&dword_1CBD43000, v19, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

  }
  v22 = *(_QWORD *)(a1 + 56);
  objc_msgSend(v25, "brc_wrappedError");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v22 + 16))(v22, v23);

}

- (void)startOperation:(id)a3 toPrepFolderForSharingWithItemID:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  NSObject *v21;
  _QWORD block[5];
  id v23;
  id v24;
  id v25;
  _QWORD v26[5];
  id v27;
  uint64_t v28[3];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v28, 0, sizeof(v28));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toPrepFolderForSharingWithItemID:reply:]", 4781, v28);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v28[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v30 = v13;
    v31 = 2112;
    v32 = self;
    v33 = 2112;
    v34 = v15;
    v35 = 2080;
    v36 = "-[BRCXPCRegularIPCsClient startOperation:toPrepFolderForSharingWithItemID:reply:]";
    v37 = 2112;
    v38 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingPrivateInterfaceEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __81__BRCXPCRegularIPCsClient_startOperation_toPrepFolderForSharingWithItemID_reply___block_invoke;
  v26[3] = &unk_1E875FCF8;
  v26[4] = self;
  v19 = v10;
  v27 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingPrivateInterfaceEntitled", v26);

  if ((v20 & 1) != 0)
  {
    -[BRCAccountSession clientTruthWorkloop](self->super.__session, "clientTruthWorkloop");
    v21 = objc_claimAutoreleasedReturnValue();
    block[0] = v18;
    block[1] = 3221225472;
    block[2] = __81__BRCXPCRegularIPCsClient_startOperation_toPrepFolderForSharingWithItemID_reply___block_invoke_557;
    block[3] = &unk_1E875FE38;
    block[4] = self;
    v23 = v9;
    v25 = v19;
    v24 = v8;
    dispatch_async_and_wait(v21, block);

  }
  __brc_leave_section(v28);

}

void __81__BRCXPCRegularIPCsClient_startOperation_toPrepFolderForSharingWithItemID_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __81__BRCXPCRegularIPCsClient_startOperation_toPrepFolderForSharingWithItemID_reply___block_invoke_557(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D10E70], "fileObjectIDWithString:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "itemByFileObjectID:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "_startOperation:toPrepFolderForSharingWithLocalItem:reply:", *(_QWORD *)(a1 + 48), v4, *(_QWORD *)(a1 + 56));
  }
  else
  {
    brc_bread_crumbs();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = 138412802;
      v12 = v7;
      v13 = 2112;
      v14 = v8;
      v15 = 2112;
      v16 = v5;
      _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v11, 0x20u);

    }
    v9 = *(_QWORD *)(a1 + 56);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);

  }
}

- (void)_startOperation:(id)a3 toProcessSubitemsWithLocalItem:(id)a4 maxSubsharesFailures:(unint64_t)a5 processType:(unint64_t)a6 reply:(id)a7
{
  id v12;
  id v13;
  id v14;
  void *v15;
  NSObject *v16;
  BRCSharingProcessFolderSubitemsOperation *v17;
  void *v18;
  void *v19;
  BRCSharingProcessFolderSubitemsOperation *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, void *);
  void *v28;
  BRCXPCRegularIPCsClient *v29;
  id v30;
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v14 = a7;
  brc_bread_crumbs();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
    -[BRCXPCRegularIPCsClient _startOperation:toProcessSubitemsWithLocalItem:maxSubsharesFailures:processType:reply:].cold.1();

  if ((objc_msgSend(v13, "isDirectory") & 1) != 0)
  {
    v17 = [BRCSharingProcessFolderSubitemsOperation alloc];
    objc_msgSend(v13, "asDirectory");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    -[BRCXPCClient session](self, "session");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = -[BRCSharingProcessFolderSubitemsOperation initWithItem:sessionContext:processType:maxSubitemsToFail:](v17, "initWithItem:sessionContext:processType:maxSubitemsToFail:", v18, v19, a6, a5);

    -[_BRCFrameworkOperation setRemoteClientProxy:](v20, "setRemoteClientProxy:", v12);
    v25 = MEMORY[0x1E0C809B0];
    v26 = 3221225472;
    v27 = __113__BRCXPCRegularIPCsClient__startOperation_toProcessSubitemsWithLocalItem_maxSubsharesFailures_processType_reply___block_invoke;
    v28 = &unk_1E8760EB8;
    v29 = self;
    v30 = v14;
    -[_BRCOperation setFinishBlock:](v20, "setFinishBlock:", &v25);
    -[BRCXPCClient session](self, "session", v25, v26, v27, v28, v29);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "addMiscOperation:", v20);

    -[_BRCOperation schedule](v20, "schedule");
  }
  else
  {
    brc_bread_crumbs();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", 0, 2);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v32 = self;
      v33 = 2112;
      v34 = v24;
      v35 = 2112;
      v36 = v22;
      _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

    }
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorNoDocument:underlyingPOSIXError:", 0, 2);
    v20 = (BRCSharingProcessFolderSubitemsOperation *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, BRCSharingProcessFolderSubitemsOperation *))v14 + 2))(v14, v20);
  }

}

void __113__BRCXPCRegularIPCsClient__startOperation_toProcessSubitemsWithLocalItem_maxSubsharesFailures_processType_reply___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v4, "brc_wrappedError");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = 138412802;
    v12 = v7;
    v13 = 2112;
    v14 = v8;
    v15 = 2112;
    v16 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v11, 0x20u);

  }
  v9 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v4, "brc_wrappedError");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);

}

- (void)startOperation:(id)a3 toProcessSubitemsWithItemID:(id)a4 maxSubsharesFailures:(unint64_t)a5 processType:(unint64_t)a6 reply:(id)a7
{
  id v12;
  id v13;
  id v14;
  void *v15;
  NSObject *v16;
  id v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  qos_class_t v22;
  void *v23;
  void *v24;
  char v25;
  uint64_t v26;
  id v27;
  char v28;
  NSObject *v29;
  id v30;
  _QWORD block[5];
  id v32;
  id v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD v37[5];
  id v38;
  uint64_t v39[3];
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  BRCXPCRegularIPCsClient *v43;
  __int16 v44;
  void *v45;
  __int16 v46;
  const char *v47;
  __int16 v48;
  void *v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v14 = a7;
  memset(v39, 0, sizeof(v39));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toProcessSubitemsWithItemID:maxSubsharesFailures:processType:reply:]", 4818, v39);
  brc_bread_crumbs();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    v30 = v14;
    v17 = v13;
    v18 = v12;
    v19 = a5;
    v20 = a6;
    v21 = v39[0];
    v22 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v22, (uint64_t)&brc_qos_entries, 0);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v41 = v21;
    v42 = 2112;
    v43 = self;
    v44 = 2112;
    v45 = v23;
    v46 = 2080;
    v47 = "-[BRCXPCRegularIPCsClient startOperation:toProcessSubitemsWithItemID:maxSubsharesFailures:processType:reply:]";
    v48 = 2112;
    v49 = v15;
    _os_log_impl(&dword_1CBD43000, v16, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

    a6 = v20;
    a5 = v19;
    v12 = v18;
    v13 = v17;
    v14 = v30;
  }

  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = objc_msgSend(v24, "isFolderSharingProxyEntitled");
  v26 = MEMORY[0x1E0C809B0];
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __109__BRCXPCRegularIPCsClient_startOperation_toProcessSubitemsWithItemID_maxSubsharesFailures_processType_reply___block_invoke;
  v37[3] = &unk_1E875FCF8;
  v37[4] = self;
  v27 = v14;
  v38 = v27;
  v28 = _brc_ipc_check_client_privilege(self, 1, v25, (uint64_t)"isFolderSharingProxyEntitled", v37);

  if ((v28 & 1) != 0)
  {
    -[BRCAccountSession clientTruthWorkloop](self->super.__session, "clientTruthWorkloop");
    v29 = objc_claimAutoreleasedReturnValue();
    block[0] = v26;
    block[1] = 3221225472;
    block[2] = __109__BRCXPCRegularIPCsClient_startOperation_toProcessSubitemsWithItemID_maxSubsharesFailures_processType_reply___block_invoke_559;
    block[3] = &unk_1E8766B38;
    block[4] = self;
    v32 = v13;
    v34 = v27;
    v33 = v12;
    v35 = a5;
    v36 = a6;
    dispatch_async_and_wait(v29, block);

  }
  __brc_leave_section(v39);

}

void __109__BRCXPCRegularIPCsClient_startOperation_toProcessSubitemsWithItemID_maxSubsharesFailures_processType_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __109__BRCXPCRegularIPCsClient_startOperation_toProcessSubitemsWithItemID_maxSubsharesFailures_processType_reply___block_invoke_559(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "session");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D10E70], "fileObjectIDWithString:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "itemByFileObjectID:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "_startOperation:toProcessSubitemsWithLocalItem:maxSubsharesFailures:processType:reply:", *(_QWORD *)(a1 + 48), v4, *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 56));
  }
  else
  {
    brc_bread_crumbs();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = 138412802;
      v12 = v7;
      v13 = 2112;
      v14 = v8;
      v15 = 2112;
      v16 = v5;
      _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v11, 0x20u);

    }
    v9 = *(_QWORD *)(a1 + 56);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorItemNotFound:", *(_QWORD *)(a1 + 40));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);

  }
}

- (void)startOperation:(id)a3 toAcceptShareLink:(id)a4 skipAcceptDialogs:(BOOL)a5 reply:(id)a6
{
  _BOOL4 v7;
  id v10;
  id v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  qos_class_t v15;
  void *v16;
  void *v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  qos_class_t v25;
  void *v26;
  void *v27;
  char v28;
  char v29;
  void *v30;
  void *v31;
  char *v32;
  NSObject *v33;
  void *v34;
  void *v35;
  id v36;
  _QWORD v37[5];
  id v38;
  uint64_t v39[3];
  _QWORD v40[5];
  id v41;
  uint64_t v42[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v44;
  __int16 v45;
  BRCXPCRegularIPCsClient *v46;
  __int16 v47;
  void *v48;
  __int16 v49;
  const char *v50;
  __int16 v51;
  void *v52;
  uint64_t v53;

  v7 = a5;
  v53 = *MEMORY[0x1E0C80C00];
  v36 = a3;
  v10 = a4;
  v11 = a6;
  memset(v42, 0, sizeof(v42));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toAcceptShareLink:skipAcceptDialogs:reply:]", 4835, v42);
  brc_bread_crumbs();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    v14 = v42[0];
    v15 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v15, (uint64_t)&brc_qos_entries, 0);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v44 = (BRCXPCRegularIPCsClient *)v14;
    v45 = 2112;
    v46 = self;
    v47 = 2112;
    v48 = v16;
    v49 = 2080;
    v50 = "-[BRCXPCRegularIPCsClient startOperation:toAcceptShareLink:skipAcceptDialogs:reply:]";
    v51 = 2112;
    v52 = v12;
    _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(v17, "isSharingPrivateInterfaceEntitled");
  v19 = MEMORY[0x1E0C809B0];
  v40[0] = MEMORY[0x1E0C809B0];
  v40[1] = 3221225472;
  v40[2] = __84__BRCXPCRegularIPCsClient_startOperation_toAcceptShareLink_skipAcceptDialogs_reply___block_invoke;
  v40[3] = &unk_1E875FCF8;
  v40[4] = self;
  v20 = v11;
  v41 = v20;
  v21 = _brc_ipc_check_client_privilege(self, 1, v18, (uint64_t)"isSharingPrivateInterfaceEntitled", v40);

  if ((v21 & 1) != 0)
  {
    if (!v7)
      goto LABEL_8;
    memset(v39, 0, sizeof(v39));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toAcceptShareLink:skipAcceptDialogs:reply:]", 4840, v39);
    brc_bread_crumbs();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      v24 = v39[0];
      v25 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v25, (uint64_t)&brc_qos_entries, 0);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219010;
      v44 = (BRCXPCRegularIPCsClient *)v24;
      v45 = 2112;
      v46 = self;
      v47 = 2112;
      v48 = v26;
      v49 = 2080;
      v50 = "-[BRCXPCRegularIPCsClient startOperation:toAcceptShareLink:skipAcceptDialogs:reply:]";
      v51 = 2112;
      v52 = v22;
      _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

    }
    -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = objc_msgSend(v27, "isAutomationEntitled");
    v37[0] = v19;
    v37[1] = 3221225472;
    v37[2] = __84__BRCXPCRegularIPCsClient_startOperation_toAcceptShareLink_skipAcceptDialogs_reply___block_invoke_561;
    v37[3] = &unk_1E875FCF8;
    v37[4] = self;
    v38 = v20;
    v29 = _brc_ipc_check_client_privilege(self, 1, v28, (uint64_t)"isAutomationEntitled", v37);

    __brc_leave_section(v39);
    if ((v29 & 1) != 0)
    {
LABEL_8:
      +[BRCDaemon daemon](BRCDaemon, "daemon");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "registerWaiterBlock:forShareURL:", v20, v10);

      objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v31, "openURL:withOptions:", v10, 0) & 1) == 0)
      {
        brc_bread_crumbs();
        v32 = (char *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v33 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:", 22);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138413058;
          v44 = self;
          v45 = 2112;
          v46 = 0;
          v47 = 2112;
          v48 = v34;
          v49 = 2112;
          v50 = v32;
          _os_log_impl(&dword_1CBD43000, v33, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

        }
        objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:", 22);
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, _QWORD, void *))v20 + 2))(v20, 0, v35);

      }
    }
  }
  __brc_leave_section(v42);

}

void __84__BRCXPCRegularIPCsClient_startOperation_toAcceptShareLink_skipAcceptDialogs_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __84__BRCXPCRegularIPCsClient_startOperation_toAcceptShareLink_skipAcceptDialogs_reply___block_invoke_561(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)startOperation:(id)a3 toCopyShareURLForShare:(id)a4 reply:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  qos_class_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  NSObject *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  BRCSharingCopyShareURLOperation *v29;
  void *v30;
  BRCSharingCopyShareURLOperation *v31;
  _QWORD v32[5];
  id v33;
  _QWORD v34[5];
  id v35;
  uint64_t v36[3];
  uint8_t buf[4];
  uint64_t v38;
  __int16 v39;
  BRCXPCRegularIPCsClient *v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  const char *v44;
  __int16 v45;
  void *v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  memset(v36, 0, sizeof(v36));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient startOperation:toCopyShareURLForShare:reply:]", 4878, v36);
  brc_bread_crumbs();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = v36[0];
    v14 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v14, (uint64_t)&brc_qos_entries, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v38 = v13;
    v39 = 2112;
    v40 = self;
    v41 = 2112;
    v42 = v15;
    v43 = 2080;
    v44 = "-[BRCXPCRegularIPCsClient startOperation:toCopyShareURLForShare:reply:]";
    v45 = 2112;
    v46 = v11;
    _os_log_impl(&dword_1CBD43000, v12, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  -[BRCXPCClient clientPriviledgesDescriptor](self, "clientPriviledgesDescriptor");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isSharingProxyEntitled");
  v18 = MEMORY[0x1E0C809B0];
  v34[0] = MEMORY[0x1E0C809B0];
  v34[1] = 3221225472;
  v34[2] = __71__BRCXPCRegularIPCsClient_startOperation_toCopyShareURLForShare_reply___block_invoke;
  v34[3] = &unk_1E875FCF8;
  v34[4] = self;
  v19 = v10;
  v35 = v19;
  v20 = _brc_ipc_check_client_privilege(self, 1, v17, (uint64_t)"isSharingProxyEntitled", v34);

  if ((v20 & 1) != 0)
  {
    brc_bread_crumbs();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      -[BRCXPCRegularIPCsClient startOperation:toCopyShareURLForShare:reply:].cold.1();

    -[BRCXPCClient session](self, "session");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = objc_alloc(MEMORY[0x1E0D10E88]);
    objc_msgSend(v9, "recordID");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "zoneID");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = (void *)objc_msgSend(v24, "initWithRecordZoneID:", v26);

    objc_msgSend(v23, "clientZoneByMangledID:", v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = [BRCSharingCopyShareURLOperation alloc];
    objc_msgSend(v28, "serverZone");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = -[BRCSharingCopyShareURLOperation initWithShare:zone:sessionContext:](v29, "initWithShare:zone:sessionContext:", v9, v30, v23);

    -[_BRCFrameworkOperation setRemoteClientProxy:](v31, "setRemoteClientProxy:", v8);
    v32[0] = v18;
    v32[1] = 3221225472;
    v32[2] = __71__BRCXPCRegularIPCsClient_startOperation_toCopyShareURLForShare_reply___block_invoke_564;
    v32[3] = &unk_1E8760EB8;
    v32[4] = self;
    v33 = v19;
    -[_BRCOperation setFinishBlock:](v31, "setFinishBlock:", v32);
    objc_msgSend(v23, "addMiscOperation:", v31);
    -[_BRCOperation schedule](v31, "schedule");

  }
  __brc_leave_section(v36);

}

void __71__BRCXPCRegularIPCsClient_startOperation_toCopyShareURLForShare_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413314;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = 0;
    v13 = 2112;
    v14 = v3;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v7, 0x34u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __71__BRCXPCRegularIPCsClient_startOperation_toCopyShareURLForShare_reply___block_invoke_564(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("share"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("url"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "brc_wrappedError");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 138413314;
    v18 = v9;
    v19 = 2112;
    v20 = v10;
    v21 = 2112;
    v22 = v11;
    v23 = 2112;
    v24 = v12;
    v25 = 2112;
    v26 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@, %@)%@", (uint8_t *)&v17, 0x34u);

  }
  v13 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("share"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("url"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "brc_wrappedError");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *, void *, void *))(v13 + 16))(v13, v14, v15, v16);

}

- (void)getShareOptionsOfItemIdentifier:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  qos_class_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  brc_task_tracker *tracker;
  void *v24;
  void *v25;
  id v26;
  _QWORD v27[5];
  id v28;
  _QWORD v29[4];
  id v30;
  id v31;
  BRCXPCRegularIPCsClient *v32;
  id v33;
  uint64_t v34[3];
  _QWORD v35[5];
  id v36;
  uint64_t v37[3];
  uint8_t buf[4];
  uint64_t v39;
  __int16 v40;
  BRCXPCRegularIPCsClient *v41;
  __int16 v42;
  id v43;
  __int16 v44;
  const char *v45;
  __int16 v46;
  uint64_t v47;
  __int16 v48;
  void *v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v37, 0, sizeof(v37));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getShareOptionsOfItemIdentifier:reply:]", 4899, v37);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v37[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v39 = v10;
    v40 = 2112;
    v41 = self;
    v42 = 2112;
    v43 = v12;
    v44 = 2080;
    v45 = "-[BRCXPCRegularIPCsClient getShareOptionsOfItemIdentifier:reply:]";
    v46 = 2112;
    v47 = (uint64_t)v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v35[0] = MEMORY[0x1E0C809B0];
  v35[1] = 3221225472;
  v35[2] = __65__BRCXPCRegularIPCsClient_getShareOptionsOfItemIdentifier_reply___block_invoke;
  v35[3] = &unk_1E875FCF8;
  v35[4] = self;
  v14 = v7;
  v36 = v14;
  v15 = _brc_ipc_check_applibrary_proxy(self, 1, v35);

  if (v15)
  {
    memset(v34, 0, sizeof(v34));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient getShareOptionsOfItemIdentifier:reply:]", 4901, v34);
    brc_bread_crumbs();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      v18 = v34[0];
      v19 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v19, (uint64_t)&brc_qos_entries, 0);
      v20 = (id)objc_claimAutoreleasedReturnValue();
      v21 = objc_msgSend(objc_retainAutorelease(v6), "UTF8String");
      *(_DWORD *)buf = 134219266;
      v39 = v18;
      v40 = 2112;
      v41 = self;
      v42 = 2112;
      v43 = v20;
      v44 = 2080;
      v45 = "-[BRCXPCRegularIPCsClient getShareOptionsOfItemIdentifier:reply:]";
      v46 = 2080;
      v47 = v21;
      v48 = 2112;
      v49 = v16;
      _os_log_impl(&dword_1CBD43000, v17, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s Getting sharing options for %s%@", buf, 0x3Eu);

    }
    -[BRCXPCClient session](self, "session");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    tracker = self->super._tracker;
    objc_msgSend(v22, "clientDB");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "serialQueue");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v13;
    v29[1] = 3221225472;
    v29[2] = __65__BRCXPCRegularIPCsClient_getShareOptionsOfItemIdentifier_reply___block_invoke_567;
    v29[3] = &unk_1E875DDA0;
    v30 = v6;
    v26 = v22;
    v31 = v26;
    v32 = self;
    v33 = v14;
    v27[0] = v13;
    v27[1] = 3221225472;
    v27[2] = __65__BRCXPCRegularIPCsClient_getShareOptionsOfItemIdentifier_reply___block_invoke_570;
    v27[3] = &unk_1E875EAA8;
    v27[4] = self;
    v28 = v33;
    brc_task_tracker_async_with_logs(tracker, v25, v29, v27);

    __brc_leave_section(v34);
  }
  __brc_leave_section(v37);

}

void __65__BRCXPCRegularIPCsClient_getShareOptionsOfItemIdentifier_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  int v12;
  __int16 v13;
  int v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  id v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413826;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 1024;
    v12 = 0;
    v13 = 1024;
    v14 = 0;
    v15 = 2112;
    v16 = 0;
    v17 = 2112;
    v18 = v3;
    v19 = 2112;
    v20 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %d, %@, %@)%@", (uint8_t *)&v7, 0x3Cu);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __65__BRCXPCRegularIPCsClient_getShareOptionsOfItemIdentifier_reply___block_invoke_567(_QWORD *a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;
  void *v12;
  int v13;
  void *v14;
  unint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  int v20;
  void *v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  void *v25;
  NSObject *v26;
  void *v27;
  NSObject *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint8_t buf[4];
  uint64_t v46;
  __int16 v47;
  _BOOL4 v48;
  __int16 v49;
  int v50;
  __int16 v51;
  int v52;
  __int16 v53;
  void *v54;
  __int16 v55;
  void *v56;
  __int16 v57;
  void *v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0D10E70], "fileObjectIDWithString:", a1[4]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_bread_crumbs();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    -[BRCXPCRegularIPCsClient(LegacyAdditions) resolveFileObjectIDToURL:reply:].cold.1();

  if (v2)
  {
    if (objc_msgSend(v2, "isDocumentID"))
    {
      v5 = (void *)a1[5];
      objc_msgSend(v2, "documentID");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "globalItemByDocumentID:", objc_msgSend(v6, "unsignedIntValue"));
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_8;
    }
    if (objc_msgSend(v2, "isFolderOrAliasID"))
    {
      v8 = (void *)a1[5];
      objc_msgSend(v2, "folderID");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "globalItemByFileID:", objc_msgSend(v6, "unsignedIntValue"));
      v7 = objc_claimAutoreleasedReturnValue();
LABEL_8:
      v9 = (void *)v7;

      if (v9)
      {
        v10 = objc_msgSend(v9, "sharingOptions");
        v11 = v10 & 0x48;
        objc_msgSend(v9, "clientZone");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = objc_msgSend(v12, "isPrivateZone");

        v14 = 0;
        v15 = v10 & 4;
        if ((v10 & 0x48) != 0 && (v10 & 4) == 0)
        {
          objc_msgSend(MEMORY[0x1E0C95070], "brc_fetchShareIDWithSharedItem:", v9);
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v44, "brc_shareItemID");
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "clientZone");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v16, "itemByItemID:", v43);
          v17 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v17, "st");
          v18 = v10 & 0x48;
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "logicalName");
          v20 = v13;
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "br_displayFilenameWithExtensionHidden:", 0);
          v14 = (void *)objc_claimAutoreleasedReturnValue();

          v13 = v20;
          v11 = v18;
          v15 = 0;

        }
        brc_bread_crumbs();
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
        {
          v24 = a1[6];
          *(_DWORD *)buf = 138413826;
          v46 = v24;
          v47 = 1024;
          v48 = v11 != 0;
          v49 = 1024;
          v50 = v13;
          v51 = 1024;
          v52 = v15 >> 2;
          v53 = 2112;
          v54 = v14;
          v55 = 2112;
          v56 = 0;
          v57 = 2112;
          v58 = v22;
          _os_log_impl(&dword_1CBD43000, v23, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %d, %@, %@)%@", buf, 0x3Cu);
        }

        (*(void (**)(void))(a1[7] + 16))();
      }
      else
      {
        brc_bread_crumbs();
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v33 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG))
          __65__BRCXPCRegularIPCsClient_getShareOptionsOfItemIdentifier_reply___block_invoke_567_cold_2();

        brc_bread_crumbs();
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v35 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
        {
          v36 = a1[6];
          v37 = (void *)MEMORY[0x1E0CB35C8];
          objc_msgSend(v2, "description");
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v37, "brc_errorItemNotFound:", v38);
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138413826;
          v46 = v36;
          v47 = 1024;
          v48 = 0;
          v49 = 1024;
          v50 = 0;
          v51 = 1024;
          v52 = 0;
          v53 = 2112;
          v54 = 0;
          v55 = 2112;
          v56 = v39;
          v57 = 2112;
          v58 = v34;
          _os_log_impl(&dword_1CBD43000, v35, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %d, %@, %@)%@", buf, 0x3Cu);

        }
        v40 = a1[7];
        v41 = (void *)MEMORY[0x1E0CB35C8];
        objc_msgSend(v2, "description");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v41, "brc_errorItemNotFound:", v9);
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, void *))(v40 + 16))(v40, 0, 0, 0, 0, v42);

      }
      goto LABEL_25;
    }
  }
  brc_bread_crumbs();
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v26 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
    __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_165_cold_1();

  brc_bread_crumbs();
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v28 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
  {
    v29 = a1[6];
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("itemIdentifier"), a1[4]);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138413826;
    v46 = v29;
    v47 = 1024;
    v48 = 0;
    v49 = 1024;
    v50 = 0;
    v51 = 1024;
    v52 = 0;
    v53 = 2112;
    v54 = 0;
    v55 = 2112;
    v56 = v30;
    v57 = 2112;
    v58 = v27;
    _os_log_impl(&dword_1CBD43000, v28, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %d, %@, %@)%@", buf, 0x3Cu);

  }
  v31 = a1[7];
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorInvalidParameter:value:", CFSTR("itemIdentifier"), a1[4]);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, void *))(v31 + 16))(v31, 0, 0, 0, 0, v9);
LABEL_25:

}

void __65__BRCXPCRegularIPCsClient_getShareOptionsOfItemIdentifier_reply___block_invoke_570(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  __int16 v12;
  int v13;
  __int16 v14;
  int v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138413826;
    v9 = v4;
    v10 = 1024;
    v11 = 0;
    v12 = 1024;
    v13 = 0;
    v14 = 1024;
    v15 = 0;
    v16 = 2112;
    v17 = 0;
    v18 = 2112;
    v19 = v5;
    v20 = 2112;
    v21 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %d, %d, %@, %@)%@", (uint8_t *)&v8, 0x3Cu);

  }
  v6 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorOperationCancelled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, void *))(v6 + 16))(v6, 0, 0, 0, 0, v7);

}

- (void)_presentAcceptDialogsWithMetadata:(id)a3 reply:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  int v15;
  void *v16;
  void *v17;
  void *v18;
  BRCSharingAcceptFlowOperation *v19;
  id v20;
  void *v21;
  BRCSharingAcceptFlowOperation *v22;
  void *v23;
  NSObject *v24;
  void *v25;
  NSObject *v26;
  BRCUserNotification *v27;
  void *v28;
  _QWORD v29[5];
  id v30;
  _QWORD v31[5];
  id v32;
  uint64_t v33[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v35;
  __int16 v36;
  BRCXPCRegularIPCsClient *v37;
  __int16 v38;
  void *v39;
  __int16 v40;
  const char *v41;
  __int16 v42;
  void *v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  -[BRCXPCClient session](self, "session");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  memset(v33, 0, sizeof(v33));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient _presentAcceptDialogsWithMetadata:reply:]", 4958, v33);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v33[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v35 = (BRCXPCRegularIPCsClient *)v10;
    v36 = 2112;
    v37 = self;
    v38 = 2112;
    v39 = v12;
    v40 = 2080;
    v41 = "-[BRCXPCRegularIPCsClient _presentAcceptDialogsWithMetadata:reply:]";
    v42 = 2112;
    v43 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v31[0] = MEMORY[0x1E0C809B0];
  v31[1] = 3221225472;
  v31[2] = __67__BRCXPCRegularIPCsClient__presentAcceptDialogsWithMetadata_reply___block_invoke;
  v31[3] = &unk_1E875FCF8;
  v31[4] = self;
  v14 = v7;
  v32 = v14;
  v15 = _brc_ipc_check_logged_status(self, 0, v31);

  if (v15)
  {
    objc_msgSend(v6, "share");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "URL");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    v27 = objc_alloc_init(BRCUserNotification);
    +[BRCUserActionsNavigator defaultNavigator](BRCUserActionsNavigator, "defaultNavigator");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = -[BRCSharingAcceptFlowOperation initWithShareMetadata:client:session:userNotifier:userActionsNavigator:]([BRCSharingAcceptFlowOperation alloc], "initWithShareMetadata:client:session:userNotifier:userActionsNavigator:", v6, self, v28, v27, v18);
    v29[0] = v13;
    v29[1] = 3221225472;
    v29[2] = __67__BRCXPCRegularIPCsClient__presentAcceptDialogsWithMetadata_reply___block_invoke_573;
    v29[3] = &unk_1E8760EB8;
    v29[4] = self;
    v20 = v14;
    v30 = v20;
    -[_BRCOperation setFinishBlock:](v19, "setFinishBlock:", v29);
    +[BRCDaemon daemon](BRCDaemon, "daemon");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "registerShareAcceptOperation:forURL:", v19, v17);
    v22 = (BRCSharingAcceptFlowOperation *)objc_claimAutoreleasedReturnValue();

    if (v22 != v19)
    {
      brc_bread_crumbs();
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, (os_log_type_t)0x90u))
        -[BRCXPCRegularIPCsClient _presentAcceptDialogsWithMetadata:reply:].cold.1();

      -[BRCSharingAcceptFlowOperation moveDialogToFront](v22, "moveDialogToFront");
      brc_bread_crumbs();
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412802;
        v35 = self;
        v36 = 2112;
        v37 = 0;
        v38 = 2112;
        v39 = v25;
        _os_log_impl(&dword_1CBD43000, v26, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
      }

      (*((void (**)(id, _QWORD))v20 + 2))(v20, 0);
    }

  }
  __brc_leave_section(v33);

}

void __67__BRCXPCRegularIPCsClient__presentAcceptDialogsWithMetadata_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t __67__BRCXPCRegularIPCsClient__presentAcceptDialogsWithMetadata_reply___block_invoke_573(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412802;
    v7 = v4;
    v8 = 2112;
    v9 = 0;
    v10 = 2112;
    v11 = v2;
    _os_log_impl(&dword_1CBD43000, v3, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v6, 0x20u);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)handleCloudKitShareMetadata:(id)a3 completionHandler:(id)a4
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  int v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  void *v20;
  BRCXPCRegularIPCsClient *v21;
  _QWORD v22[5];
  id v23;
  uint64_t v24[3];
  _QWORD v25[4];
  id v26;
  BRCXPCRegularIPCsClient *v27;
  id v28;
  uint64_t v29[3];
  uint8_t buf[4];
  uint64_t v31;
  __int16 v32;
  BRCXPCRegularIPCsClient *v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  const char *v37;
  __int16 v38;
  void *v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  memset(v29, 0, sizeof(v29));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient handleCloudKitShareMetadata:completionHandler:]", 5015, v29);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v29[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v31 = v10;
    v32 = 2112;
    v33 = self;
    v34 = 2112;
    v35 = v12;
    v36 = 2080;
    v37 = "-[BRCXPCRegularIPCsClient handleCloudKitShareMetadata:completionHandler:]";
    v38 = 2112;
    v39 = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = MEMORY[0x1E0C809B0];
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __73__BRCXPCRegularIPCsClient_handleCloudKitShareMetadata_completionHandler___block_invoke;
  v25[3] = &unk_1E875FFC8;
  v14 = v6;
  v26 = v14;
  v27 = self;
  v15 = v7;
  v28 = v15;
  v16 = _brc_ipc_check_logged_status(self, 0, v25);

  if (v16)
  {
    memset(v24, 0, sizeof(v24));
    __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient handleCloudKitShareMetadata:completionHandler:]", 5017, v24);
    brc_bread_crumbs();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
    {
      v19 = v24[0];
      objc_msgSend(v14, "share");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "URL");
      v21 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134218498;
      v31 = v19;
      v32 = 2112;
      v33 = v21;
      v34 = 2112;
      v35 = v17;
      _os_log_debug_impl(&dword_1CBD43000, v18, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx handling share at %@%@", buf, 0x20u);

    }
    v22[0] = v13;
    v22[1] = 3221225472;
    v22[2] = __73__BRCXPCRegularIPCsClient_handleCloudKitShareMetadata_completionHandler___block_invoke_574;
    v22[3] = &unk_1E875FCF8;
    v22[4] = self;
    v23 = v15;
    -[BRCXPCRegularIPCsClient presentAcceptDialogsForShareMetadata:reply:](self, "presentAcceptDialogsForShareMetadata:reply:", v14, v22);

    __brc_leave_section(v24);
  }
  __brc_leave_section(v29);

}

void __73__BRCXPCRegularIPCsClient_handleCloudKitShareMetadata_completionHandler___block_invoke(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, (os_log_type_t)0x90u))
  {
    v12 = a1[4];
    v13 = 138412802;
    v14 = v12;
    v15 = 2112;
    v16 = v3;
    v17 = 2112;
    v18 = v4;
    _os_log_error_impl(&dword_1CBD43000, v5, (os_log_type_t)0x90u, "[ERROR] can't handle share %@: %@%@", (uint8_t *)&v13, 0x20u);
  }

  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = a1[5];
    objc_msgSend(v3, "brc_wrappedError");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138412802;
    v14 = v8;
    v15 = 2112;
    v16 = v9;
    v17 = 2112;
    v18 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v13, 0x20u);

  }
  v10 = a1[6];
  objc_msgSend(v3, "brc_wrappedError");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v11);

}

void __73__BRCXPCRegularIPCsClient_handleCloudKitShareMetadata_completionHandler___block_invoke_574(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  int v12;
  id v13;
  __int16 v14;
  void *v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    brc_bread_crumbs();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v12 = 138412546;
      v13 = v3;
      v14 = 2112;
      v15 = v4;
      _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_DEFAULT, "[WARNING] can't accept the share: %@%@", (uint8_t *)&v12, 0x16u);
    }

  }
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = *(void **)(a1 + 32);
    objc_msgSend(v3, "brc_wrappedError");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 138412802;
    v13 = v8;
    v14 = 2112;
    v15 = v9;
    v16 = 2112;
    v17 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v12, 0x20u);

  }
  v10 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v3, "brc_wrappedError");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v11);

}

- (void)keepDataLocalOnSignOut:(BOOL)a3 reply:(id)a4
{
  _BOOL8 v4;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  qos_class_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  int v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  NSObject *v20;
  _QWORD block[5];
  BOOL v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v27;
  __int16 v28;
  BRCXPCRegularIPCsClient *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v4 = a3;
  v36 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  memset(v25, 0, sizeof(v25));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient keepDataLocalOnSignOut:reply:]", 5030, v25);
  brc_bread_crumbs();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = v25[0];
    v10 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v10, (uint64_t)&brc_qos_entries, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v27 = (BRCXPCRegularIPCsClient *)v9;
    v28 = 2112;
    v29 = self;
    v30 = 2112;
    v31 = v11;
    v32 = 2080;
    v33 = "-[BRCXPCRegularIPCsClient keepDataLocalOnSignOut:reply:]";
    v34 = 2112;
    v35 = v7;
    _os_log_impl(&dword_1CBD43000, v8, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v12 = MEMORY[0x1E0C809B0];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __56__BRCXPCRegularIPCsClient_keepDataLocalOnSignOut_reply___block_invoke;
  v23[3] = &unk_1E875FCF8;
  v23[4] = self;
  v13 = v6;
  v24 = v13;
  v14 = _brc_ipc_check_applibraries_access(self, 3, v23);

  if (v14)
  {
    +[BRCAccountsManager sharedManager](BRCAccountsManager, "sharedManager");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "keepDataLocalOnSignOutForCurrentPersona:", v4);
    -[BRCXPCClient session](self, "session");
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v16)
    {
      -[BRCXPCClient session](self, "session");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "clientTruthWorkloop");
      v18 = objc_claimAutoreleasedReturnValue();
      block[0] = v12;
      block[1] = 3221225472;
      block[2] = __56__BRCXPCRegularIPCsClient_keepDataLocalOnSignOut_reply___block_invoke_575;
      block[3] = &unk_1E8760EE0;
      v22 = v4;
      block[4] = self;
      dispatch_async_and_wait(v18, block);

    }
    brc_bread_crumbs();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v27 = self;
      v28 = 2112;
      v29 = 0;
      v30 = 2112;
      v31 = v19;
      _os_log_impl(&dword_1CBD43000, v20, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v13 + 2))(v13, 0);
  }
  __brc_leave_section(v25);

}

void __56__BRCXPCRegularIPCsClient_keepDataLocalOnSignOut_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __56__BRCXPCRegularIPCsClient_keepDataLocalOnSignOut_reply___block_invoke_575(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  brc_bread_crumbs();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    __56__BRCXPCRegularIPCsClient_keepDataLocalOnSignOut_reply___block_invoke_575_cold_1(a1);

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", *(unsigned __int8 *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "session");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "clientState");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v4, CFSTR("kBRCKeepDataLocalOnSignOutStatKey"));

  objc_msgSend(*(id *)(a1 + 32), "session");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "clientDB");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "forceBatchStart");

}

- (BOOL)_saveOrDeleteContainerMetadataRecordName:(id)a3 saveRecord:(BOOL)a4 error:(id *)a5
{
  _BOOL4 v6;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  BOOL v21;
  _QWORD v23[5];
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t);
  id v29;
  void *v30;
  _QWORD v31[2];

  v6 = a4;
  v31[1] = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v24 = 0;
  v25 = &v24;
  v26 = 0x3032000000;
  v27 = __Block_byref_object_copy__48;
  v28 = __Block_byref_object_dispose__48;
  v29 = 0;
  v9 = objc_alloc(MEMORY[0x1E0C95070]);
  objc_msgSend(MEMORY[0x1E0C95098], "brc_containerMetadataZoneID");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v9, "initWithRecordName:zoneID:", v8, v10);

  if (v6)
  {
    v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C95048]), "initWithRecordType:recordID:", CFSTR("AppContainer"), v11);
    v13 = objc_alloc(MEMORY[0x1E0C94F10]);
    v31[0] = v12;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v31, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = (void *)objc_msgSend(v13, "initWithRecordsToSave:recordIDsToDelete:", v14, 0);

  }
  else
  {
    v16 = objc_alloc(MEMORY[0x1E0C94F10]);
    v30 = v11;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v30, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = (void *)objc_msgSend(v16, "initWithRecordsToSave:recordIDsToDelete:", 0, v12);
  }

  objc_msgSend(MEMORY[0x1E0C94F88], "br_testTrigger");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "setGroup:", v17);

  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __85__BRCXPCRegularIPCsClient__saveOrDeleteContainerMetadataRecordName_saveRecord_error___block_invoke;
  v23[3] = &unk_1E8766B60;
  v23[4] = &v24;
  objc_msgSend(v15, "setModifyRecordsCompletionBlock:", v23);
  -[BRCXPCClient session](self, "session");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "syncContextProvider");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "defaultSyncContext");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "addOperation:", v15);

  objc_msgSend(v15, "waitUntilFinished");
  if (a5)
    *a5 = objc_retainAutorelease((id)v25[5]);
  v21 = v25[5] == 0;

  _Block_object_dispose(&v24, 8);
  return v21;
}

void __85__BRCXPCRegularIPCsClient__saveOrDeleteContainerMetadataRecordName_saveRecord_error___block_invoke(uint64_t a1, int a2, int a3, id obj)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), obj);
}

- (void)setEnhancedDrivePrivacyEnabled:(BOOL)a3 forContainer:(id)a4 onServer:(BOOL)a5 onClient:(BOOL)a6 reply:(id)a7
{
  _BOOL4 v8;
  _BOOL4 v9;
  id v12;
  id v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  BOOL v17;
  id v18;
  _BOOL4 v19;
  uint64_t v20;
  qos_class_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  char v27;
  void *v28;
  char v29;
  int v30;
  void *v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  NSObject *v35;
  void *v36;
  const __CFString *v37;
  uint64_t v38;
  char v39;
  __CFString *v40;
  void *v41;
  NSObject *v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  NSObject *v46;
  __CFString *v47;
  char v48;
  id v49;
  uint64_t (**v50)(void);
  _QWORD block[4];
  id v52;
  id v53;
  BRCXPCRegularIPCsClient *v54;
  id v55;
  BOOL v56;
  char v57;
  char v58;
  id obj;
  _QWORD v60[4];
  uint64_t (**v61)(void);
  BOOL v62;
  _QWORD v63[6];
  BOOL v64;
  _QWORD v65[5];
  id v66;
  uint64_t v67[3];
  uint8_t v68[4];
  BRCXPCRegularIPCsClient *v69;
  __int16 v70;
  uint64_t v71;
  __int16 v72;
  void *v73;
  _BYTE buf[24];
  uint64_t (*v75)(uint64_t, uint64_t);
  _BYTE v76[20];
  uint64_t v77;

  v8 = a6;
  v9 = a5;
  v77 = *MEMORY[0x1E0C80C00];
  v12 = a4;
  v13 = a7;
  memset(v67, 0, sizeof(v67));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient setEnhancedDrivePrivacyEnabled:forContainer:onServer:onClient:reply:]", 5086, v67);
  brc_bread_crumbs();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v15 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
  {
    v49 = v13;
    v16 = v9;
    v17 = a3;
    v18 = v12;
    v19 = v8;
    v20 = v67[0];
    v21 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v21, (uint64_t)&brc_qos_entries, 0);
    v22 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    *(_QWORD *)&buf[4] = v20;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    *(_WORD *)&buf[22] = 2112;
    v75 = v22;
    *(_WORD *)v76 = 2080;
    *(_QWORD *)&v76[2] = "-[BRCXPCRegularIPCsClient setEnhancedDrivePrivacyEnabled:forContainer:onServer:onClient:reply:]";
    *(_WORD *)&v76[10] = 2112;
    *(_QWORD *)&v76[12] = v14;
    _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

    v8 = v19;
    v12 = v18;
    a3 = v17;
    v9 = v16;
    v13 = v49;
  }

  v23 = MEMORY[0x1E0C809B0];
  v24 = (void *)*MEMORY[0x1E0D10C28];
  v65[0] = MEMORY[0x1E0C809B0];
  v65[1] = 3221225472;
  v65[2] = __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke;
  v65[3] = &unk_1E875FCF8;
  v65[4] = self;
  v25 = v13;
  v66 = v25;
  LODWORD(v24) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v24, v65);

  if ((_DWORD)v24)
  {
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend(v26, "supportsEnhancedDrivePrivacy");

    if ((v27 & 1) == 0)
    {
      brc_bread_crumbs();
      v34 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
      brc_default_log();
      v35 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorPermissionError:", CFSTR("Enhanced Drive Privacy Not Enabled"));
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        *(_QWORD *)&buf[4] = self;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v36;
        *(_WORD *)&buf[22] = 2112;
        v75 = v34;
        _os_log_impl(&dword_1CBD43000, v35, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

      }
      objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorPermissionError:", CFSTR("Enhanced Drive Privacy Not Enabled"));
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *))v25 + 2))(v25, v28);
      goto LABEL_30;
    }
    -[BRCXPCClient session](self, "session");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = objc_msgSend(v12, "isEqualToString:", CFSTR("all"));
    v30 = objc_msgSend(v12, "isEqualToString:", CFSTR("all-private"));
    if (v9)
    {
      v48 = v29;
      *(_QWORD *)buf = 0;
      *(_QWORD *)&buf[8] = buf;
      *(_QWORD *)&buf[16] = 0x3032000000;
      v75 = __Block_byref_object_copy__48;
      *(_QWORD *)v76 = __Block_byref_object_dispose__48;
      *(_QWORD *)&v76[8] = 0;
      v63[0] = v23;
      v63[1] = 3221225472;
      v63[2] = __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_586;
      v63[3] = &unk_1E8766B88;
      v64 = a3;
      v63[4] = self;
      v63[5] = buf;
      v50 = (uint64_t (**)(void))MEMORY[0x1D17A6DB0](v63);
      if (v30)
      {
        v60[0] = v23;
        v60[1] = 3221225472;
        v60[2] = __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_2;
        v60[3] = &unk_1E8766BB0;
        v62 = a3;
        v61 = v50;
        objc_msgSend(v28, "enumeratePrivateClientZones:", v60);
        if (*(_QWORD *)(*(_QWORD *)&buf[8] + 40))
        {
          brc_bread_crumbs();
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v32 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
          {
            v33 = *(_QWORD *)(*(_QWORD *)&buf[8] + 40);
            *(_DWORD *)v68 = 138412802;
            v69 = self;
            v70 = 2112;
            v71 = v33;
            v72 = 2112;
            v73 = v31;
            _os_log_impl(&dword_1CBD43000, v32, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", v68, 0x20u);
          }

          (*((void (**)(id, _QWORD))v25 + 2))(v25, *(_QWORD *)(*(_QWORD *)&buf[8] + 40));
LABEL_22:

          _Block_object_dispose(buf, 8);
LABEL_30:

          goto LABEL_31;
        }
        v40 = (__CFString *)v61;
      }
      else
      {
        if ((v29 & 1) != 0)
        {
          v37 = CFSTR("com.apple.lobodon.forced");
        }
        else
        {
          objc_msgSend(v12, "stringByAppendingString:", CFSTR(".lobodon.enabled"));
          v37 = (const __CFString *)objc_claimAutoreleasedReturnValue();
        }
        v38 = *(_QWORD *)&buf[8];
        obj = *(id *)(*(_QWORD *)&buf[8] + 40);
        v47 = (__CFString *)v37;
        v39 = v50[2]();
        objc_storeStrong((id *)(v38 + 40), obj);
        if ((v39 & 1) == 0)
        {
          brc_bread_crumbs();
          v41 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v42 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
          {
            v43 = *(_QWORD *)(*(_QWORD *)&buf[8] + 40);
            *(_DWORD *)v68 = 138412802;
            v69 = self;
            v70 = 2112;
            v71 = v43;
            v72 = 2112;
            v73 = v41;
            _os_log_impl(&dword_1CBD43000, v42, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", v68, 0x20u);
          }

          (*((void (**)(id, _QWORD))v25 + 2))(v25, *(_QWORD *)(*(_QWORD *)&buf[8] + 40));
          goto LABEL_22;
        }
        v40 = v47;
      }

      _Block_object_dispose(buf, 8);
      v29 = v48;
    }
    if (v8)
    {
      objc_msgSend(v28, "clientTruthWorkloop");
      v44 = objc_claimAutoreleasedReturnValue();
      block[0] = v23;
      block[1] = 3221225472;
      block[2] = __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_593;
      block[3] = &unk_1E8766C20;
      v56 = a3;
      v57 = v29;
      v52 = v28;
      v58 = v30;
      v53 = v12;
      v54 = self;
      v55 = v25;
      dispatch_async_and_wait(v44, block);

    }
    brc_bread_crumbs();
    v45 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v46 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      *(_QWORD *)&buf[4] = self;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = 0;
      *(_WORD *)&buf[22] = 2112;
      v75 = v45;
      _os_log_impl(&dword_1CBD43000, v46, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v25 + 2))(v25, 0);
    goto LABEL_30;
  }
LABEL_31:
  __brc_leave_section(v67);

}

void __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_586(uint64_t a1, uint64_t a2, id *a3)
{
  uint64_t v5;

  v5 = objc_msgSend(*(id *)(a1 + 32), "_saveOrDeleteContainerMetadataRecordName:saveRecord:error:", a2, *(unsigned __int8 *)(a1 + 48), a3);
  if ((v5 & 1) == 0)
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *a3);
  return v5;
}

uint64_t __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v11;

  v3 = a2;
  if (*(unsigned __int8 *)(a1 + 40) == objc_msgSend(v3, "enhancedDrivePrivacyEnabled"))
  {
    v4 = 1;
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v3, "mangledID");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "appLibraryOrZoneName");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "stringByAppendingString:", CFSTR(".lobodon.enabled"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = 0;
    v4 = (*(uint64_t (**)(uint64_t, void *, id *))(v5 + 16))(v5, v8, &v11);
    v9 = v11;

  }
  return v4;
}

void __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_593(uint64_t a1)
{
  uint64_t v2;
  void (**v3)(_QWORD, _QWORD);
  void (**v4)(_QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[4];
  void (**v16)(_QWORD, _QWORD);
  _QWORD v17[4];
  void (**v18)(_QWORD, _QWORD);
  _QWORD v19[4];
  char v20;
  uint8_t buf[4];
  uint64_t v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v2 = MEMORY[0x1E0C809B0];
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_2_594;
  v19[3] = &__block_descriptor_33_e23_v16__0__BRCClientZone_8l;
  v20 = *(_BYTE *)(a1 + 64);
  v3 = (void (**)(_QWORD, _QWORD))MEMORY[0x1D17A6DB0](v19);
  v4 = v3;
  if (*(_BYTE *)(a1 + 65))
  {
    v5 = *(void **)(a1 + 32);
    v17[0] = v2;
    v17[1] = 3221225472;
    v17[2] = __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_3;
    v17[3] = &unk_1E8766BF8;
    v18 = v3;
    objc_msgSend(v5, "enumerateClientZones:", v17);
    v6 = v18;
LABEL_7:

    objc_msgSend(*(id *)(a1 + 32), "clientDB");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "forceBatchStart");
    goto LABEL_8;
  }
  v7 = *(void **)(a1 + 32);
  if (*(_BYTE *)(a1 + 66))
  {
    v15[0] = v2;
    v15[1] = 3221225472;
    v15[2] = __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_4;
    v15[3] = &unk_1E8766BF8;
    v16 = v3;
    objc_msgSend(v7, "enumeratePrivateClientZones:", v15);
    v6 = v16;
    goto LABEL_7;
  }
  objc_msgSend(*(id *)(a1 + 32), "appLibraryByID:", *(_QWORD *)(a1 + 40));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "defaultClientZone");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    ((void (**)(_QWORD, void *))v4)[2](v4, v6);
    goto LABEL_7;
  }
  brc_bread_crumbs();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = *(_QWORD *)(a1 + 48);
    objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", *(_QWORD *)(a1 + 40));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    v22 = v12;
    v23 = 2112;
    v24 = v13;
    v25 = 2112;
    v26 = v10;
    _os_log_impl(&dword_1CBD43000, v11, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);

  }
  v14 = *(_QWORD *)(a1 + 56);
  objc_msgSend(MEMORY[0x1E0CB35C8], "brc_errorAppLibraryNotFound:", *(_QWORD *)(a1 + 40));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v14 + 16))(v14, v9);
LABEL_8:

}

uint64_t __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_2_594(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 32))
    return objc_msgSend(a2, "setStateBits:", 0x400000);
  else
    return objc_msgSend(a2, "clearStateBits:", 0x400000);
}

uint64_t __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_3(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  return 1;
}

uint64_t __95__BRCXPCRegularIPCsClient_setEnhancedDrivePrivacyEnabled_forContainer_onServer_onClient_reply___block_invoke_4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  return 1;
}

- (void)verifyAccountLoaded:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  id v10;
  int v11;
  void *v12;
  NSObject *v13;
  _QWORD v14[5];
  id v15;
  uint64_t v16[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v18;
  __int16 v19;
  BRCXPCRegularIPCsClient *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  const char *v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v16, 0, sizeof(v16));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient verifyAccountLoaded:]", 5166, v16);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v16[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v18 = (BRCXPCRegularIPCsClient *)v7;
    v19 = 2112;
    v20 = self;
    v21 = 2112;
    v22 = v9;
    v23 = 2080;
    v24 = "-[BRCXPCRegularIPCsClient verifyAccountLoaded:]";
    v25 = 2112;
    v26 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __47__BRCXPCRegularIPCsClient_verifyAccountLoaded___block_invoke;
  v14[3] = &unk_1E875FCF8;
  v14[4] = self;
  v10 = v4;
  v15 = v10;
  v11 = _brc_ipc_check_logged_status(self, 1, v14);

  if (v11)
  {
    brc_bread_crumbs();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v18 = self;
      v19 = 2112;
      v20 = 0;
      v21 = 2112;
      v22 = v12;
      _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
  }
  __brc_leave_section(v16);

}

void __47__BRCXPCRegularIPCsClient_verifyAccountLoaded___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)_t_getEntitlementsForBundleID:(id)a3 reply:(id)a4
{
  void (**v5)(id, _QWORD);
  void *v6;
  NSObject *v7;
  int v8;
  BRCXPCRegularIPCsClient *v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v5 = (void (**)(id, _QWORD))a4;
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = 138412802;
    v9 = self;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v8, 0x20u);
  }

  v5[2](v5, 0);
}

- (void)_t_getEntitledContainerIDsForBundleID:(id)a3 reply:(id)a4
{
  void (**v5)(id, _QWORD);
  void *v6;
  NSObject *v7;
  int v8;
  BRCXPCRegularIPCsClient *v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v5 = (void (**)(id, _QWORD))a4;
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = 138412802;
    v9 = self;
    v10 = 2112;
    v11 = 0;
    v12 = 2112;
    v13 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v8, 0x20u);
  }

  v5[2](v5, 0);
}

- (void)_t_extractMetadataForAllContainersWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  void *v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  dispatch_group_t v24;
  id v25;
  NSObject *v26;
  BOOL v27;
  void *v28;
  NSObject *v29;
  void *v30;
  NSObject *v31;
  uint64_t v32;
  id v33;
  id obj;
  uint64_t v35;
  _QWORD v36[5];
  id v37;
  NSObject *v38;
  _BYTE *v39;
  _QWORD v40[4];
  id v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _QWORD v46[5];
  id v47;
  uint64_t v48[3];
  uint8_t v49[4];
  BRCXPCRegularIPCsClient *v50;
  __int16 v51;
  uint64_t v52;
  __int16 v53;
  void *v54;
  uint8_t v55[128];
  _BYTE buf[24];
  uint64_t (*v57)(uint64_t, uint64_t);
  _BYTE v58[20];
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v48, 0, sizeof(v48));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient _t_extractMetadataForAllContainersWithReply:]", 6061, v48);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v48[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    *(_QWORD *)&buf[4] = v7;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    *(_WORD *)&buf[22] = 2112;
    v57 = v9;
    *(_WORD *)v58 = 2080;
    *(_QWORD *)&v58[2] = "-[BRCXPCRegularIPCsClient _t_extractMetadataForAllContainersWithReply:]";
    *(_WORD *)&v58[10] = 2112;
    *(_QWORD *)&v58[12] = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = (void *)*MEMORY[0x1E0D10C28];
  v46[0] = MEMORY[0x1E0C809B0];
  v46[1] = 3221225472;
  v46[2] = __71__BRCXPCRegularIPCsClient__t_extractMetadataForAllContainersWithReply___block_invoke;
  v46[3] = &unk_1E875FCF8;
  v46[4] = self;
  v33 = v4;
  v47 = v33;
  v11 = _brc_ipc_check_entitlement_and_logged_status(self, 0, v10, v46);

  if (v11)
  {
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x3032000000;
    v57 = __Block_byref_object_copy__48;
    *(_QWORD *)v58 = __Block_byref_object_dispose__48;
    *(_QWORD *)&v58[8] = 0;
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    v45 = 0u;
    -[BRCXPCClient entitledAppLibraryIDs](self, "entitledAppLibraryIDs");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v42, v55, 16);
    if (v13)
    {
      obj = v12;
      v35 = *(_QWORD *)v43;
      while (2)
      {
        for (i = 0; i != v13; ++i)
        {
          if (*(_QWORD *)v43 != v35)
            objc_enumerationMutation(obj);
          v15 = *(_QWORD *)(*((_QWORD *)&v42 + 1) + 8 * i);
          -[BRCXPCClient bundleID](self, "bundleID", v33);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          -[BRCXPCClient session](self, "session");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "appLibraryByID:", v15);
          v18 = (void *)objc_claimAutoreleasedReturnValue();

          if (!v18)
          {
            brc_bread_crumbs();
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            brc_default_log();
            v29 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v29, (os_log_type_t)0x90u))
              -[BRCXPCRegularIPCsClient updateContainerMetadataForID:].cold.1();

LABEL_17:
            v12 = obj;
            goto LABEL_18;
          }
          BRCBundleServiceConnection();
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v40[0] = MEMORY[0x1E0C809B0];
          v40[1] = 3221225472;
          v40[2] = __71__BRCXPCRegularIPCsClient__t_extractMetadataForAllContainersWithReply___block_invoke_598;
          v40[3] = &unk_1E875D850;
          v20 = v19;
          v41 = v20;
          objc_msgSend(v20, "remoteObjectProxyWithErrorHandler:", v40);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "containerMetadata");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v22, "versionNumberForBundleIdentifier:", v16);
          v23 = (void *)objc_claimAutoreleasedReturnValue();

          v24 = dispatch_group_create();
          v36[0] = MEMORY[0x1E0C809B0];
          v36[1] = 3221225472;
          v36[2] = __71__BRCXPCRegularIPCsClient__t_extractMetadataForAllContainersWithReply___block_invoke_2;
          v36[3] = &unk_1E8766C48;
          v36[4] = v15;
          v39 = buf;
          v25 = v20;
          v37 = v25;
          v26 = v24;
          v38 = v26;
          objc_msgSend(v21, "extractMetadataForContainerID:bundleID:minimumBundleVersion:reply:", v15, v16, v23, v36);
          dispatch_group_wait(v26, 0xFFFFFFFFFFFFFFFFLL);
          v27 = *(_QWORD *)(*(_QWORD *)&buf[8] + 40) == 0;

          if (!v27)
            goto LABEL_17;

        }
        v12 = obj;
        v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v42, v55, 16);
        if (v13)
          continue;
        break;
      }
    }
LABEL_18:

    brc_bread_crumbs();
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v31 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
    {
      v32 = *(_QWORD *)(*(_QWORD *)&buf[8] + 40);
      *(_DWORD *)v49 = 138412802;
      v50 = self;
      v51 = 2112;
      v52 = v32;
      v53 = 2112;
      v54 = v30;
      _os_log_impl(&dword_1CBD43000, v31, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", v49, 0x20u);
    }

    (*((void (**)(id, _QWORD))v33 + 2))(v33, *(_QWORD *)(*(_QWORD *)&buf[8] + 40));
    _Block_object_dispose(buf, 8);

  }
  __brc_leave_section(v48);

}

void __71__BRCXPCRegularIPCsClient__t_extractMetadataForAllContainersWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t __71__BRCXPCRegularIPCsClient__t_extractMetadataForAllContainersWithReply___block_invoke_598(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void __71__BRCXPCRegularIPCsClient__t_extractMetadataForAllContainersWithReply___block_invoke_2(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  id v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  __int16 v18;
  id v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v7 = a4;
  if (v7)
  {
    brc_bread_crumbs();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, (os_log_type_t)0x90u))
    {
      v14 = *(_QWORD *)(a1 + 32);
      v16 = 138412802;
      v17 = v14;
      v18 = 2112;
      v19 = v7;
      v20 = 2112;
      v21 = v8;
      _os_log_error_impl(&dword_1CBD43000, v9, (os_log_type_t)0x90u, "[ERROR] can't extract metadata for %@: %@%@", (uint8_t *)&v16, 0x20u);
    }

    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = v7;
    v12 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v11;
  }
  else
  {
    brc_bread_crumbs();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
    {
      v15 = *(_QWORD *)(a1 + 32);
      v16 = 138412802;
      v17 = v15;
      v18 = 2112;
      v19 = v6;
      v20 = 2112;
      v21 = v12;
      _os_log_debug_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_DEBUG, "[DEBUG] extracted metadata for %@: %@%@", (uint8_t *)&v16, 0x20u);
    }

  }
  objc_msgSend(*(id *)(a1 + 40), "invalidate");
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));

}

- (void)lookupExcludedFilenamesForLogoutWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  id v10;
  int v11;
  void *v12;
  BRCXPCRegularIPCsClient *v13;
  char *v14;
  NSObject *v15;
  _QWORD v16[5];
  id v17;
  uint64_t v18[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v20;
  __int16 v21;
  BRCXPCRegularIPCsClient *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  const char *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v18, 0, sizeof(v18));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient lookupExcludedFilenamesForLogoutWithReply:]", 6109, v18);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v18[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v20 = (BRCXPCRegularIPCsClient *)v7;
    v21 = 2112;
    v22 = self;
    v23 = 2112;
    v24 = v9;
    v25 = 2080;
    v26 = "-[BRCXPCRegularIPCsClient lookupExcludedFilenamesForLogoutWithReply:]";
    v27 = 2112;
    v28 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __69__BRCXPCRegularIPCsClient_lookupExcludedFilenamesForLogoutWithReply___block_invoke;
  v16[3] = &unk_1E875FCF8;
  v16[4] = self;
  v10 = v4;
  v17 = v10;
  v11 = _brc_ipc_check_logged_status(self, 1, v16);

  if (v11)
  {
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "excludedFilenamesWorthWarningAtLogout");
    v13 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();

    brc_bread_crumbs();
    v14 = (char *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138413058;
      v20 = self;
      v21 = 2112;
      v22 = v13;
      v23 = 2112;
      v24 = 0;
      v25 = 2112;
      v26 = v14;
      _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*((void (**)(id, BRCXPCRegularIPCsClient *, _QWORD))v10 + 2))(v10, v13, 0);
  }
  __brc_leave_section(v18);

}

void __69__BRCXPCRegularIPCsClient_lookupExcludedFilenamesForLogoutWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)lookupExcludedExtensionsForLogoutWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  id v10;
  int v11;
  void *v12;
  BRCXPCRegularIPCsClient *v13;
  char *v14;
  NSObject *v15;
  _QWORD v16[5];
  id v17;
  uint64_t v18[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v20;
  __int16 v21;
  BRCXPCRegularIPCsClient *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  const char *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v18, 0, sizeof(v18));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient lookupExcludedExtensionsForLogoutWithReply:]", 6119, v18);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v18[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v20 = (BRCXPCRegularIPCsClient *)v7;
    v21 = 2112;
    v22 = self;
    v23 = 2112;
    v24 = v9;
    v25 = 2080;
    v26 = "-[BRCXPCRegularIPCsClient lookupExcludedExtensionsForLogoutWithReply:]";
    v27 = 2112;
    v28 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __70__BRCXPCRegularIPCsClient_lookupExcludedExtensionsForLogoutWithReply___block_invoke;
  v16[3] = &unk_1E875FCF8;
  v16[4] = self;
  v10 = v4;
  v17 = v10;
  v11 = _brc_ipc_check_logged_status(self, 1, v16);

  if (v11)
  {
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "excludedExtensionsWorthPreserving");
    v13 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();

    brc_bread_crumbs();
    v14 = (char *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138413058;
      v20 = self;
      v21 = 2112;
      v22 = v13;
      v23 = 2112;
      v24 = 0;
      v25 = 2112;
      v26 = v14;
      _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
    }

    (*((void (**)(id, BRCXPCRegularIPCsClient *, _QWORD))v10 + 2))(v10, v13, 0);
  }
  __brc_leave_section(v18);

}

void __70__BRCXPCRegularIPCsClient_lookupExcludedExtensionsForLogoutWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)lookupMinFileSizeForThumbnailTransferWithReply:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  id v10;
  int v11;
  char *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  BRCXPCRegularIPCsClient *v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD v20[5];
  id v21;
  uint64_t v22[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v24;
  __int16 v25;
  BRCXPCRegularIPCsClient *v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  const char *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v22, 0, sizeof(v22));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient lookupMinFileSizeForThumbnailTransferWithReply:]", 6129, v22);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v22[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v24 = (BRCXPCRegularIPCsClient *)v7;
    v25 = 2112;
    v26 = self;
    v27 = 2112;
    v28 = v9;
    v29 = 2080;
    v30 = "-[BRCXPCRegularIPCsClient lookupMinFileSizeForThumbnailTransferWithReply:]";
    v31 = 2112;
    v32 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = __74__BRCXPCRegularIPCsClient_lookupMinFileSizeForThumbnailTransferWithReply___block_invoke;
  v20[3] = &unk_1E875FCF8;
  v20[4] = self;
  v10 = v4;
  v21 = v10;
  v11 = _brc_ipc_check_logged_status(self, 1, v20);

  if (v11)
  {
    brc_bread_crumbs();
    v12 = (char *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      v14 = (void *)MEMORY[0x1E0CB37E8];
      +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "numberWithLongLong:", objc_msgSend(v15, "minFileSizeForThumbnailTransfer"));
      v16 = (BRCXPCRegularIPCsClient *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v24 = self;
      v25 = 2112;
      v26 = v16;
      v27 = 2112;
      v28 = 0;
      v29 = 2112;
      v30 = v12;
      _os_log_impl(&dword_1CBD43000, v13, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);

    }
    v17 = (void *)MEMORY[0x1E0CB37E8];
    +[BRCUserDefaults defaultsForMangledID:](BRCUserDefaults, "defaultsForMangledID:", 0);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "numberWithLongLong:", objc_msgSend(v18, "minFileSizeForThumbnailTransfer"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, void *, _QWORD))v10 + 2))(v10, v19, 0);

  }
  __brc_leave_section(v22);

}

void __74__BRCXPCRegularIPCsClient_lookupMinFileSizeForThumbnailTransferWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)updatePrivilegesDescriptor
{
  -[BRCClientPrivilegesDescriptor updateCloudEnabledStatus](self->super._clientPriviledgesDescriptor, "updateCloudEnabledStatus");
}

- (void)queryTelemetryEnablementWithReply:(id)a3
{
  id v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  qos_class_t v9;
  void *v10;
  id v11;
  int v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  _QWORD v16[5];
  id v17;
  uint64_t v18[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v20;
  __int16 v21;
  _BYTE v22[28];
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  memset(v18, 0, sizeof(v18));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient queryTelemetryEnablementWithReply:]", 6145, v18);
  brc_bread_crumbs();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = v18[0];
    v9 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v9, (uint64_t)&brc_qos_entries, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v20 = (BRCXPCRegularIPCsClient *)v8;
    v21 = 2112;
    *(_QWORD *)v22 = self;
    *(_WORD *)&v22[8] = 2112;
    *(_QWORD *)&v22[10] = v10;
    *(_WORD *)&v22[18] = 2080;
    *(_QWORD *)&v22[20] = "-[BRCXPCRegularIPCsClient queryTelemetryEnablementWithReply:]";
    v23 = 2112;
    v24 = v6;
    _os_log_impl(&dword_1CBD43000, v7, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __61__BRCXPCRegularIPCsClient_queryTelemetryEnablementWithReply___block_invoke;
  v16[3] = &unk_1E875FCF8;
  v16[4] = self;
  v11 = v5;
  v17 = v11;
  v12 = _brc_ipc_spi(self, 1, (uint64_t)a2, v16);

  if (v12)
  {
    brc_bread_crumbs();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      v15 = +[BRCAnalyticsReporter isTelemetryReportingEnabled](BRCAnalyticsReporter, "isTelemetryReportingEnabled");
      *(_DWORD *)buf = 138413058;
      v20 = self;
      v21 = 1024;
      *(_DWORD *)v22 = v15;
      *(_WORD *)&v22[4] = 2112;
      *(_QWORD *)&v22[6] = 0;
      *(_WORD *)&v22[14] = 2112;
      *(_QWORD *)&v22[16] = v13;
      _os_log_impl(&dword_1CBD43000, v14, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", buf, 0x26u);
    }

    (*((void (**)(id, BOOL, _QWORD))v11 + 2))(v11, +[BRCAnalyticsReporter isTelemetryReportingEnabled](BRCAnalyticsReporter, "isTelemetryReportingEnabled"), 0);
  }
  __brc_leave_section(v18);

}

void __61__BRCXPCRegularIPCsClient_queryTelemetryEnablementWithReply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 1024;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%d, %@)%@", (uint8_t *)&v7, 0x26u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)corruptDatabase:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  qos_class_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  _QWORD v16[5];
  id v17;
  uint64_t v18[3];
  uint8_t buf[4];
  BRCXPCRegularIPCsClient *v20;
  __int16 v21;
  BRCXPCRegularIPCsClient *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  const char *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  memset(v18, 0, sizeof(v18));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient corruptDatabase:]", 6154, v18);
  brc_bread_crumbs();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = v18[0];
    v8 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v8, (uint64_t)&brc_qos_entries, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    v20 = (BRCXPCRegularIPCsClient *)v7;
    v21 = 2112;
    v22 = self;
    v23 = 2112;
    v24 = v9;
    v25 = 2080;
    v26 = "-[BRCXPCRegularIPCsClient corruptDatabase:]";
    v27 = 2112;
    v28 = v5;
    _os_log_impl(&dword_1CBD43000, v6, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v10 = (void *)*MEMORY[0x1E0D10C28];
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __43__BRCXPCRegularIPCsClient_corruptDatabase___block_invoke;
  v16[3] = &unk_1E875FCF8;
  v16[4] = self;
  v11 = v4;
  v17 = v11;
  LODWORD(v10) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v10, v16);

  if ((_DWORD)v10)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0D10B70], 10000, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[BRCXPCClient session](self, "session");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "dbBecameCorruptedWithDescription:error:", CFSTR("Testing brctl reset corrupt-db"), v12);

    brc_bread_crumbs();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412802;
      v20 = self;
      v21 = 2112;
      v22 = 0;
      v23 = 2112;
      v24 = v14;
      _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", buf, 0x20u);
    }

    (*((void (**)(id, _QWORD))v11 + 2))(v11, 0);
  }
  __brc_leave_section(v18);

}

void __43__BRCXPCRegularIPCsClient_corruptDatabase___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412802;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@)%@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)waitUntilIdle:(id)a3 timeout:(id)a4 reply:(id)a5
{
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  qos_class_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  qos_class_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  int v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  void *v25;
  NSObject *v26;
  void *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t j;
  void *v32;
  void *v33;
  void *v34;
  dispatch_time_t v35;
  void *v36;
  NSObject *v37;
  void *v38;
  NSObject *v39;
  void *v40;
  void *v41;
  void *v42;
  NSObject *v43;
  void *v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id obj;
  void *v52;
  _QWORD v54[5];
  NSObject *v55;
  _BYTE *v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  id v71;
  _QWORD v72[5];
  id v73;
  uint64_t v74[3];
  _QWORD v75[5];
  id v76;
  uint64_t v77[3];
  uint8_t v78[4];
  BRCXPCRegularIPCsClient *v79;
  __int16 v80;
  void *v81;
  __int16 v82;
  void *v83;
  __int16 v84;
  void *v85;
  _BYTE v86[128];
  uint8_t v87[128];
  _BYTE buf[24];
  uint64_t (*v89)(uint64_t, uint64_t);
  _BYTE v90[20];
  uint64_t v91;

  v91 = *MEMORY[0x1E0C80C00];
  v49 = a3;
  v48 = a4;
  v7 = a5;
  memset(v77, 0, sizeof(v77));
  __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient waitUntilIdle:timeout:reply:]", 6167, v77);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = v77[0];
    v11 = qos_class_self();
    BRCPrettyPrintEnumWithContext(v11, (uint64_t)&brc_qos_entries, 0);
    v12 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134219010;
    *(_QWORD *)&buf[4] = v10;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = self;
    *(_WORD *)&buf[22] = 2112;
    v89 = v12;
    *(_WORD *)v90 = 2080;
    *(_QWORD *)&v90[2] = "-[BRCXPCRegularIPCsClient waitUntilIdle:timeout:reply:]";
    *(_WORD *)&v90[10] = 2112;
    *(_QWORD *)&v90[12] = v8;
    _os_log_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

  }
  v13 = (void *)*MEMORY[0x1E0D10C28];
  v75[0] = MEMORY[0x1E0C809B0];
  v75[1] = 3221225472;
  v75[2] = __55__BRCXPCRegularIPCsClient_waitUntilIdle_timeout_reply___block_invoke;
  v75[3] = &unk_1E875FCF8;
  v75[4] = self;
  v50 = v7;
  v76 = v50;
  LODWORD(v13) = _brc_ipc_check_entitlement_and_logged_status(self, 1, v13, v75);

  if ((_DWORD)v13)
  {
    memset(v74, 0, sizeof(v74));
    __brc_create_section(1, (uint64_t)"-[BRCXPCRegularIPCsClient waitUntilIdle:timeout:reply:]", 6171, v74);
    brc_bread_crumbs();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    brc_default_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      v16 = v74[0];
      v17 = qos_class_self();
      BRCPrettyPrintEnumWithContext(v17, (uint64_t)&brc_qos_entries, 0);
      v18 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134219010;
      *(_QWORD *)&buf[4] = v16;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = self;
      *(_WORD *)&buf[22] = 2112;
      v89 = v18;
      *(_WORD *)v90 = 2080;
      *(_QWORD *)&v90[2] = "-[BRCXPCRegularIPCsClient waitUntilIdle:timeout:reply:]";
      *(_WORD *)&v90[10] = 2112;
      *(_QWORD *)&v90[12] = v14;
      _os_log_impl(&dword_1CBD43000, v15, OS_LOG_TYPE_INFO, "[INFO] ┏%llx %@ (%@) %s %@", buf, 0x34u);

    }
    v72[0] = MEMORY[0x1E0C809B0];
    v72[1] = 3221225472;
    v72[2] = __55__BRCXPCRegularIPCsClient_waitUntilIdle_timeout_reply___block_invoke_602;
    v72[3] = &unk_1E875FCF8;
    v72[4] = self;
    v47 = v50;
    v73 = v47;
    v19 = _brc_ipc_check_applibraries_access(self, 1, v72);

    if (v19)
    {
      -[BRCXPCClient session](self, "session");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v71 = 0;
      objc_msgSend(v20, "appLibrariesMatchingSearchString:error:", v49, &v71);
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      v45 = (uint64_t (*)(uint64_t, uint64_t))v71;

      v52 = (void *)objc_opt_new();
      if (v46)
      {
        v69 = 0u;
        v70 = 0u;
        v67 = 0u;
        v68 = 0u;
        v21 = v46;
        v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v67, v87, 16);
        if (v22)
        {
          v23 = *(_QWORD *)v68;
          do
          {
            for (i = 0; i != v22; ++i)
            {
              if (*(_QWORD *)v68 != v23)
                objc_enumerationMutation(v21);
              objc_msgSend(*(id *)(*((_QWORD *)&v67 + 1) + 8 * i), "defaultClientZone");
              v25 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v52, "addObject:", v25);

            }
            v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v67, v87, 16);
          }
          while (v22);
        }

        v26 = dispatch_group_create();
        *(_QWORD *)buf = 0;
        *(_QWORD *)&buf[8] = buf;
        *(_QWORD *)&buf[16] = 0x3032000000;
        v89 = __Block_byref_object_copy__48;
        *(_QWORD *)v90 = __Block_byref_object_dispose__48;
        *(_QWORD *)&v90[8] = 0;
        v63 = 0uLL;
        v64 = 0;
        __brc_create_section(0, (uint64_t)"-[BRCXPCRegularIPCsClient waitUntilIdle:timeout:reply:]", 6187, &v63);
        brc_bread_crumbs();
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v28 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)v78 = 134218498;
          v79 = (BRCXPCRegularIPCsClient *)v63;
          v80 = 2112;
          v81 = v52;
          v82 = 2112;
          v83 = v27;
          _os_log_debug_impl(&dword_1CBD43000, v28, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx waiting for %@ to be idle%@", v78, 0x20u);
        }

        v65 = v63;
        v66 = v64;
        v59 = 0u;
        v60 = 0u;
        v61 = 0u;
        v62 = 0u;
        obj = v52;
        v29 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v59, v86, 16);
        if (v29)
        {
          v30 = *(_QWORD *)v60;
          do
          {
            for (j = 0; j != v29; ++j)
            {
              if (*(_QWORD *)v60 != v30)
                objc_enumerationMutation(obj);
              v32 = *(void **)(*((_QWORD *)&v59 + 1) + 8 * j);
              objc_msgSend(v32, "defaultAppLibrary");
              v33 = (void *)objc_claimAutoreleasedReturnValue();
              -[BRCXPCClient addAppLibrary:](self, "addAppLibrary:", v33);

              dispatch_group_enter(v26);
              -[BRCXPCClient description](self, "description");
              v34 = (void *)objc_claimAutoreleasedReturnValue();
              v54[0] = MEMORY[0x1E0C809B0];
              v54[1] = 3221225472;
              v54[2] = __55__BRCXPCRegularIPCsClient_waitUntilIdle_timeout_reply___block_invoke_603;
              v54[3] = &unk_1E8766C70;
              v57 = v65;
              v58 = v66;
              v56 = buf;
              v54[4] = v32;
              v55 = v26;
              objc_msgSend(v32, "notifyClient:whenIdle:", v34, v54);

            }
            v29 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v59, v86, 16);
          }
          while (v29);
        }

        if (v48)
          v35 = dispatch_time(0, 1000000000 * objc_msgSend(v48, "unsignedLongLongValue"));
        else
          v35 = -1;
        if (dispatch_group_wait(v26, v35))
        {
          brc_bread_crumbs();
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v39 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
          {
            objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:description:", 60, CFSTR("Timed out while waiting for %@ to be idle."), obj);
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)v78 = 138413058;
            v79 = self;
            v80 = 2112;
            v81 = (void *)MEMORY[0x1E0C9AAA0];
            v82 = 2112;
            v83 = v40;
            v84 = 2112;
            v85 = v38;
            _os_log_impl(&dword_1CBD43000, v39, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", v78, 0x2Au);

          }
          objc_msgSend(MEMORY[0x1E0CB35C8], "br_errorWithPOSIXCode:description:", 60, CFSTR("Timed out while waiting for %@ to be idle."), obj);
          v41 = (void *)objc_claimAutoreleasedReturnValue();
          (*((void (**)(id, _QWORD, void *))v47 + 2))(v47, MEMORY[0x1E0C9AAA0], v41);

        }
        else
        {
          brc_bread_crumbs();
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          brc_default_log();
          v43 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
          {
            v44 = *(void **)(*(_QWORD *)&buf[8] + 40);
            *(_DWORD *)v78 = 138413058;
            v79 = self;
            v80 = 2112;
            v81 = v44;
            v82 = 2112;
            v83 = 0;
            v84 = 2112;
            v85 = v42;
            _os_log_impl(&dword_1CBD43000, v43, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", v78, 0x2Au);
          }

          (*((void (**)(id, _QWORD, _QWORD))v47 + 2))(v47, *(_QWORD *)(*(_QWORD *)&buf[8] + 40), 0);
        }
        _Block_object_dispose(buf, 8);

      }
      else
      {
        brc_bread_crumbs();
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        brc_default_log();
        v37 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138413058;
          *(_QWORD *)&buf[4] = self;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = 0;
          *(_WORD *)&buf[22] = 2112;
          v89 = v45;
          *(_WORD *)v90 = 2112;
          *(_QWORD *)&v90[2] = v36;
          _os_log_impl(&dword_1CBD43000, v37, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", buf, 0x2Au);
        }

        (*((void (**)(id, _QWORD, uint64_t (*)(uint64_t, uint64_t)))v47 + 2))(v47, 0, v45);
      }

    }
    __brc_leave_section(v74);
  }
  __brc_leave_section(v77);

}

void __55__BRCXPCRegularIPCsClient_waitUntilIdle_timeout_reply___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __55__BRCXPCRegularIPCsClient_waitUntilIdle_timeout_reply___block_invoke_602(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  brc_bread_crumbs();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138413058;
    v8 = v6;
    v9 = 2112;
    v10 = 0;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v4;
    _os_log_impl(&dword_1CBD43000, v5, OS_LOG_TYPE_INFO, "[INFO] %@: reply(%@, %@)%@", (uint8_t *)&v7, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __55__BRCXPCRegularIPCsClient_waitUntilIdle_timeout_reply___block_invoke_603(uint64_t a1, void *a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  int v10;
  const __CFString *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint8_t buf[4];
  uint64_t v16;
  __int16 v17;
  const __CFString *v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v7 = a3;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  v13 = *(_OWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 72);
  brc_bread_crumbs();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  brc_default_log();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
  {
    v10 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "BOOLValue");
    v11 = CFSTR("now");
    v12 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 134218754;
    if (v10)
      v11 = CFSTR("already");
    v16 = v13;
    v17 = 2112;
    v18 = v11;
    v19 = 2112;
    v20 = v12;
    v21 = 2112;
    v22 = v8;
    _os_log_debug_impl(&dword_1CBD43000, v9, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx %@ is %@ idle%@", buf, 0x2Au);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  __brc_leave_section((uint64_t *)&v13);

}

void __94__BRCXPCRegularIPCsClient_LegacyAdditions___startDownloadItemsAtURLs_pos_options_error_reply___block_invoke_cold_1(void *a1, uint64_t a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(_QWORD *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(_QWORD *)(buf + 14) = a2;
  _os_log_debug_impl(&dword_1CBD43000, log, OS_LOG_TYPE_DEBUG, "[DEBUG] %@ is on disk but we can't lookup in our db, we must not have scanned it yet%@", buf, 0x16u);

}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__startOperation_toCopySharingInfoAtURL_reply___block_invoke_44_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_2(&dword_1CBD43000, v0, v1, "[CRIT] UNREACHABLE: Item not found (with unspecified error)%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

void __104__BRCXPCRegularIPCsClient_LegacyAdditions__getPublishedURLForItemAtURL_forStreaming_requestedTTL_reply___block_invoke_83_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] no local item for %@%@");
  OUTLINED_FUNCTION_2();
}

void __69__BRCXPCRegularIPCsClient_LegacyAdditions__getQueryItemForURL_reply___block_invoke_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] lookup: %@%@");
  OUTLINED_FUNCTION_2();
}

void __68__BRCXPCRegularIPCsClient_LegacyAdditions__updateItemFromURL_reply___block_invoke_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_2(&dword_1CBD43000, v0, v1, "[CRIT] UNREACHABLE: we should always have a fileObjectID%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

void __69__BRCXPCRegularIPCsClient_LegacyAdditions__removeItemFromDisk_reply___block_invoke_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  OUTLINED_FUNCTION_11_0(*MEMORY[0x1E0C80C00]);
  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = v0;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v1, v2, "[DEBUG] faking FS event after deletion at %@%@", (_QWORD)v3, DWORD2(v3));
  OUTLINED_FUNCTION_2();
}

void __81__BRCXPCRegularIPCsClient_LegacyAdditions__fetchLatestVersionForFileAtURL_reply___block_invoke_128_cold_1(uint64_t a1, uint64_t a2, NSObject *a3)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint8_t v7[24];
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 40), "path");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fp_obfuscatedPath");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_3(&dword_1CBD43000, a3, v6, "[ERROR] can't find document storage for path '%@'%@", v7);

  OUTLINED_FUNCTION_6();
}

void __81__BRCXPCRegularIPCsClient_LegacyAdditions__fetchLatestVersionForFileAtURL_reply___block_invoke_128_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_3_1(&dword_1CBD43000, v0, v1, "[DEBUG] Latest version already exists!%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

void __90__BRCXPCRegularIPCsClient_LegacyAdditions__copyCollaborationIdentifierForItemAtURL_reply___block_invoke_cold_1(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(a1 + 32);
  v3 = 138412546;
  v4 = v1;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_3(&dword_1CBD43000, v2, (uint64_t)v2, "[ERROR] No lookup for url %@%@", (uint8_t *)&v3);
  OUTLINED_FUNCTION_2();
}

void __84__BRCXPCRegularIPCsClient_LegacyAdditions___gatherInformationForPath_session_reply___block_invoke_cold_1(uint64_t a1)
{
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = *(_QWORD *)(a1 + 32);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v1, v2, "[DEBUG] gathering information at '%@'%@", (_QWORD)v3, DWORD2(v3));
  OUTLINED_FUNCTION_2();
}

void __88__BRCXPCRegularIPCsClient_LegacyAdditions__getBackReferencingContainerIDsForURLs_reply___block_invoke_3_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_2(&dword_1CBD43000, v0, v1, "[CRIT] Assertion failed: partialError%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

void __75__BRCXPCRegularIPCsClient_LegacyAdditions__resolveFileObjectIDToURL_reply___block_invoke_163_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  OUTLINED_FUNCTION_11_0(*MEMORY[0x1E0C80C00]);
  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = v0;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v1, v2, "[DEBUG] couldn't find an item for fileObjectID=%@%@", (_QWORD)v3, DWORD2(v3));
  OUTLINED_FUNCTION_2();
}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_165_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  OUTLINED_FUNCTION_11_0(*MEMORY[0x1E0C80C00]);
  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = v0;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v1, v2, "[DEBUG] invalid item identifier %@%@", (_QWORD)v3, DWORD2(v3));
  OUTLINED_FUNCTION_2();
}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_169_cold_1(int *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  strerror(*a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_3(&dword_1CBD43000, a3, v4, "[ERROR] Failed chmoding the shared-to-me item after refreshing sharing options - %s%@", v5);
}

void __87__BRCXPCRegularIPCsClient_LegacyAdditions__refreshSharingStateForItemIdentifier_reply___block_invoke_169_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_2(&dword_1CBD43000, v0, v1, "[CRIT] Assertion failed: result == nil || [result isKindOfClass:[NSDictionary class]]%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

void __59__BRCXPCRegularIPCsClient_checkinAskClientIfUsingUbiquity___block_invoke_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)updateContainerMetadataForID:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_4_1(&dword_1CBD43000, v0, v1, "[ERROR] nonexistant container %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)getItemUpdateSenderWithReceiver:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] receiver: %@%@");
  OUTLINED_FUNCTION_2();
}

void __45__BRCXPCRegularIPCsClient_getContainersByID___block_invoke_308_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_4_1(&dword_1CBD43000, v0, v1, "[ERROR] no metadata for %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)forceSyncZoneHealthWithBarrierWithTimeout:reply:.cold.1()
{
  uint64_t v0;
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  OUTLINED_FUNCTION_11_0(*MEMORY[0x1E0C80C00]);
  LODWORD(v3) = 134218242;
  *(_QWORD *)((char *)&v3 + 4) = v0;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v1, v2, "[DEBUG] ┳%llx timed-out: zone health sync%@", (_QWORD)v3, DWORD2(v3));
  OUTLINED_FUNCTION_2();
}

- (void)forceSyncZoneHealthWithBarrierWithTimeout:reply:.cold.2()
{
  uint64_t v0;
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  OUTLINED_FUNCTION_11_0(*MEMORY[0x1E0C80C00]);
  LODWORD(v3) = 134218242;
  *(_QWORD *)((char *)&v3 + 4) = v0;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v1, v2, "[DEBUG] ┣%llx waiting for zone health sync down%@", (_QWORD)v3, DWORD2(v3));
  OUTLINED_FUNCTION_2();
}

void __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke_361_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] received an error while syncing down zone health: %@%@");
  OUTLINED_FUNCTION_2();
}

void __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke_361_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  OUTLINED_FUNCTION_11_0(*MEMORY[0x1E0C80C00]);
  LODWORD(v3) = 134218242;
  *(_QWORD *)((char *)&v3 + 4) = v0;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v1, v2, "[DEBUG] ┳%llx finished sync down zone health%@", (_QWORD)v3, DWORD2(v3));
  OUTLINED_FUNCTION_2();
}

void __75__BRCXPCRegularIPCsClient_forceSyncZoneHealthWithBarrierWithTimeout_reply___block_invoke_362_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  OUTLINED_FUNCTION_11_0(*MEMORY[0x1E0C80C00]);
  LODWORD(v3) = 134218242;
  *(_QWORD *)((char *)&v3 + 4) = v0;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v1, v2, "[DEBUG] ┳%llx finished syncing zone health%@", (_QWORD)v3, DWORD2(v3));
  OUTLINED_FUNCTION_2();
}

- (void)forceSyncWithBarrierContainerID:timeout:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] Requesting force sync on the special container %@ that doesn't have an app library.%@");
  OUTLINED_FUNCTION_2();
}

void __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke_365_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] received an error while syncing container: %@%@");
  OUTLINED_FUNCTION_2();
}

void __73__BRCXPCRegularIPCsClient_forceSyncWithBarrierContainerID_timeout_reply___block_invoke_366_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] received an error while trigger sync for container: %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)createAccountWithACAccountID:dsid:reply:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_2(&dword_1CBD43000, v0, v1, "[CRIT] UNREACHABLE: asked to login to a non migrated account%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

- (void)createAccountWithACAccountID:dsid:reply:.cold.2()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] accountID: %@%@");
  OUTLINED_FUNCTION_2();
}

void __67__BRCXPCRegularIPCsClient_createAccountWithACAccountID_dsid_reply___block_invoke_384_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_4_1(&dword_1CBD43000, v0, v1, "[ERROR] can't create account: %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)logoutAccountWithACAccountID:(char)a1 reply:.cold.1(char a1)
{
  const __CFString *v1;
  uint64_t v2;
  os_log_t v3;
  __int128 v4;

  v1 = CFSTR("was successful");
  if ((a1 & 1) == 0)
    v1 = CFSTR("failed");
  LODWORD(v4) = 138412546;
  *(_QWORD *)((char *)&v4 + 4) = v1;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v2, v3, "[DEBUG] Logout of account %@%@", (_QWORD)v4, DWORD2(v4));
  OUTLINED_FUNCTION_2();
}

void __58__BRCXPCRegularIPCsClient_updateAccountDisplayName_reply___block_invoke_392_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_4_1(&dword_1CBD43000, v0, v1, "[ERROR] can't update account: %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)resolveBookmarkDataToURL:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] data: %@%@");
  OUTLINED_FUNCTION_2();
}

void __58__BRCXPCRegularIPCsClient_resolveBookmarkDataToURL_reply___block_invoke_2_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  const char *v4;
  __int16 v5;
  const char *v6;
  __int16 v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v3 = 136315906;
  v4 = "-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]_block_invoke";
  v5 = 2080;
  v6 = "(passed to caller)";
  v7 = 2112;
  v8 = a1;
  v9 = 2112;
  v10 = a2;
  _os_log_error_impl(&dword_1CBD43000, log, (os_log_type_t)0x90u, "[ERROR] %s: %s error: %@%@", (uint8_t *)&v3, 0x2Au);
}

void __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_438_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] enumerating children of %@%@");
  OUTLINED_FUNCTION_2();
}

void __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_438_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  OUTLINED_FUNCTION_11_0(*MEMORY[0x1E0C80C00]);
  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = v0;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v1, v2, "[DEBUG] couldn't find item for %@%@", (_QWORD)v3, DWORD2(v3));
  OUTLINED_FUNCTION_2();
}

void __84__BRCXPCRegularIPCsClient_enumerateItemsInFolder_sortOrder_offset_limit_completion___block_invoke_438_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_3_1(&dword_1CBD43000, v0, v1, "[DEBUG] refetching quota%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

void __84__BRCXPCRegularIPCsClient__getiWorkPublishingInfoForLocalItem_itemIdentifier_reply___block_invoke_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_2(&dword_1CBD43000, v0, v1, "[CRIT] UNREACHABLE: only got sharing key or base token, didn't get both%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

void __84__BRCXPCRegularIPCsClient__getiWorkPublishingInfoForLocalItem_itemIdentifier_reply___block_invoke_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_2(&dword_1CBD43000, v0, v1, "[CRIT] UNREACHABLE: sharing key of unexpected class%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

void __84__BRCXPCRegularIPCsClient__getiWorkPublishingInfoForLocalItem_itemIdentifier_reply___block_invoke_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_2(&dword_1CBD43000, v0, v1, "[CRIT] UNREACHABLE: base token of unexpected class%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

- (void)_startOperation:toCopySharingInfoWithLocalItem:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] starting operation to copy sharing info at %@%@");
  OUTLINED_FUNCTION_2();
}

void __80__BRCXPCRegularIPCsClient__startOperation_toCopySharingInfoWithLocalItem_reply___block_invoke_cold_1(void *a1, uint64_t a2, NSObject *a3)
{
  void *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "values");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", *MEMORY[0x1E0C94A80]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "participants");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = 138412802;
  v10 = v7;
  v11 = 2048;
  v12 = objc_msgSend(v8, "count");
  v13 = 2112;
  v14 = a2;
  _os_log_debug_impl(&dword_1CBD43000, a3, OS_LOG_TYPE_DEBUG, "[DEBUG] Share %@ has %lu participants%@", (uint8_t *)&v9, 0x20u);

}

void __80__BRCXPCRegularIPCsClient__startOperation_toCopySharingInfoWithLocalItem_reply___block_invoke_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_2(&dword_1CBD43000, v0, v1, "[CRIT] Assertion failed: result == nil || [result isKindOfClass:[NSDictionary class]]%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

void __76__BRCXPCRegularIPCsClient_copyCollaborationIdentifierForFileObjectID_reply___block_invoke_528_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  OUTLINED_FUNCTION_11_0(*MEMORY[0x1E0C80C00]);
  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = v0;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v1, v2, "[DEBUG] no local item for %@%@", (_QWORD)v3, DWORD2(v3));
  OUTLINED_FUNCTION_2();
}

- (void)_createSharingInfoForLocalItem:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] creating sharing info for item %@%@");
  OUTLINED_FUNCTION_2();
}

void __60__BRCXPCRegularIPCsClient_createSharingInfoForItemID_reply___block_invoke_530_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] Creating share for item %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)_bumpLastUsedTimeOfSharedItem:clientZone:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_2(&dword_1CBD43000, v0, v1, "[CRIT] Assertion failed: li%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

void __68__BRCXPCRegularIPCsClient__bumpLastUsedTimeOfSharedItem_clientZone___block_invoke_cold_1(uint64_t a1)
{
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = *(_QWORD *)(a1 + 32);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v1, v2, "[DEBUG] last used date bumped for %@%@", (_QWORD)v3, DWORD2(v3));
  OUTLINED_FUNCTION_2();
}

- (void)startOperation:toSaveSharingInfo:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] Ignoring share save on empty share with no etag %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)startOperation:toSaveSharingInfo:reply:.cold.2()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] Adding %@ as a dependency on share save%@");
  OUTLINED_FUNCTION_2();
}

- (void)startOperation:toSaveSharingInfo:reply:.cold.3()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] Saving share %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)startOperation:toUnshareShare:forceDelete:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] Destroying share info for share %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)startOperation:toLookupShareParticipants:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] Copying share participants for identities %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)_startOperation:toModifyRecordAccessWithLocalItem:allowAccess:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] modifying record access at item %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)_startOperation:toCopyParticipantTokenWithLocalItem:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] copying participant token on item %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)_startOperation:toPrepFolderForSharingWithLocalItem:reply:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_2(&dword_1CBD43000, v0, v1, "[CRIT] Assertion failed: item.clientZone.isPrivateZone%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2();
}

- (void)_startOperation:toPrepFolderForSharingWithLocalItem:reply:.cold.2()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] preparing folder for sharing at item %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)_startOperation:toProcessSubitemsWithLocalItem:maxSubsharesFailures:processType:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] processing subitems at item %@%@");
  OUTLINED_FUNCTION_2();
}

- (void)startOperation:toCopyShareURLForShare:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] copying url for share %@%@");
  OUTLINED_FUNCTION_2();
}

void __65__BRCXPCRegularIPCsClient_getShareOptionsOfItemIdentifier_reply___block_invoke_567_cold_2()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v0, v1, "[DEBUG] couldn't find an item for fileObjectID=%@%@");
  OUTLINED_FUNCTION_2();
}

- (void)_presentAcceptDialogsWithMetadata:reply:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_4_1(&dword_1CBD43000, v0, v1, "[ERROR] An accept operation is already running for %@%@");
  OUTLINED_FUNCTION_2();
}

void __56__BRCXPCRegularIPCsClient_keepDataLocalOnSignOut_reply___block_invoke_575_cold_1(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  os_log_t v3;
  __int128 v4;

  v1 = "YES";
  if (!*(_BYTE *)(a1 + 40))
    v1 = "NO";
  LODWORD(v4) = 136315394;
  *(_QWORD *)((char *)&v4 + 4) = v1;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_1CBD43000, v2, v3, "[DEBUG] Should keep data local on sign out [%s]%@", (_QWORD)v4, DWORD2(v4));
  OUTLINED_FUNCTION_2();
}

@end
