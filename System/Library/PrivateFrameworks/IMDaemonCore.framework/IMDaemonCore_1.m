void sub_1D1609F2C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D1609F4C();
  qword_1ED936520 = v0;
  *(_QWORD *)algn_1ED936528 = v1;
}

void sub_1D1609F4C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v0 = objc_msgSend((id)*MEMORY[0x1E0D37C20], sel_stringByResolvingAndStandardizingPath);
  if (v0)
  {
    sub_1D166DACC();
    v2 = v1;
    IMSharedHelperEnsureDirectoryExistsAtPath();
    if (v2)
    {
      swift_bridgeObjectRelease();
      v3 = (void *)sub_1D166DAA8();
      v4 = objc_msgSend(v0, sel_stringByAppendingPathComponent_, v3);

      sub_1D166DACC();
      return;
    }
  }
  else
  {
    IMSharedHelperEnsureDirectoryExistsAtPath();
  }

  __break(1u);
}

uint64_t sub_1D160A024(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  unsigned int v15;
  uint64_t (*v16)(char *, uint64_t);
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD v31[2];
  id v32[2];

  v32[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1D166D4D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D141AC58(&qword_1ED9356E0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D166D580();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED935738 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CAFD78], v2);
  swift_bridgeObjectRetain();
  sub_1D166D574();
  v13 = *(id *)(a1 + OBJC_IVAR___IMDCollaborationClearNoticeRateLimiter_noticeEventHistory);
  v14 = (void *)sub_1D166D520();
  v32[0] = 0;
  v15 = objc_msgSend(v13, sel_writeToURL_error_, v14, v32);

  if (v15)
  {
    v16 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v17 = v32[0];
  }
  else
  {
    v18 = v32[0];
    v19 = (void *)sub_1D166D4B4();

    swift_willThrow();
    if (qword_1ED935750 != -1)
      swift_once();
    v20 = sub_1D166D964();
    sub_1D141AC1C(v20, (uint64_t)qword_1ED936560);
    v21 = v19;
    v22 = v19;
    v23 = sub_1D166D94C();
    v24 = sub_1D166DD84();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v31[0] = swift_slowAlloc();
      *(_DWORD *)v25 = 138412290;
      v26 = v19;
      v27 = v9;
      v28 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v32[0] = v28;
      sub_1D166DF28();
      v29 = v31[0];
      *(_QWORD *)v31[0] = v28;
      v9 = v27;

      _os_log_impl(&dword_1D1413000, v23, v24, "Error persisting clearNoticeEventHistory, error: %@", v25, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v29, -1, -1);
      MEMORY[0x1D17EB0AC](v25, -1, -1);

    }
    else
    {

    }
    v16 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  }
  return v16(v12, v9);
}

id IMDCollaborationClearNoticeRateLimiter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMDCollaborationClearNoticeRateLimiter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D160A448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v28;
  void *v29;
  char *v30;
  uint64_t v31;

  v0 = sub_1D166D4D8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D141AC58(&qword_1ED9356E0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1D166D580();
  v7 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v30 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_defaultManager);
  if (qword_1ED935738 != -1)
    swift_once();
  v11 = (void *)sub_1D166DAA8();
  v12 = objc_msgSend(v10, sel_fileExistsAtPath_, v11);

  if (v12)
  {
    v13 = v7;
    v14 = v31;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v6, 1, 1, v31);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAFD78], v0);
    swift_bridgeObjectRetain();
    v15 = v30;
    sub_1D166D574();
    v16 = objc_allocWithZone(MEMORY[0x1E0C99E08]);
    v17 = (void *)sub_1D166D520();
    v18 = objc_msgSend(v16, sel_initWithContentsOfURL_, v17);

    if (!v18)
    {
      if (qword_1ED935750 != -1)
        swift_once();
      v19 = sub_1D166D964();
      sub_1D141AC1C(v19, (uint64_t)qword_1ED936560);
      v20 = sub_1D166D94C();
      v21 = sub_1D166DD6C();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_1D1413000, v20, v21, "IMDCollaborationClearNoticeRateLimiter: Loaded empty dictionary, creating new dictionary", v22, 2u);
        MEMORY[0x1D17EB0AC](v22, -1, -1);
      }

      v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E08]), sel_init);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v14);
    return (uint64_t)v18;
  }
  else
  {
    if (qword_1ED935750 != -1)
      swift_once();
    v24 = sub_1D166D964();
    sub_1D141AC1C(v24, (uint64_t)qword_1ED936560);
    v25 = sub_1D166D94C();
    v26 = sub_1D166DD6C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1D1413000, v25, v26, "Creating rate limiter persistence", v27, 2u);
      MEMORY[0x1D17EB0AC](v27, -1, -1);
    }

    v28 = objc_msgSend(v9, sel_defaultManager);
    v29 = (void *)sub_1D166DAA8();
    objc_msgSend(v28, sel_createFileAtPath_contents_attributes_, v29, 0, 0);

    sub_1D15FD3C0(0, &qword_1ED9357D8);
    return sub_1D166DD60();
  }
}

uint64_t type metadata accessor for IMDCollaborationClearNoticeRateLimiter()
{
  return objc_opt_self();
}

uint64_t sub_1D160A87C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1D166D67C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_1D141AC58(&qword_1EFC620D0);
    v10 = sub_1D166E084();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1D15FC784(&qword_1EFC620D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1D166DA48();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1D15FC784(&qword_1EFC620E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1D166DA9C();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1D160AAE4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D160AB08()
{
  uint64_t v0;

  return sub_1D160A024(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D160AB10()
{
  return swift_deallocObject();
}

uint64_t method lookup function for IMDCollaborationClearNoticeRateLimiter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IMDCollaborationClearNoticeRateLimiter.shouldSend(notice:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of IMDCollaborationClearNoticeRateLimiter.didSend(notice:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t sub_1D160AB64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1D141AC58(&qword_1ED935698);
    v3 = sub_1D166E084();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_1D166DACC();
      sub_1D166E264();
      v7 = v6;
      sub_1D166DB08();
      v8 = sub_1D166E288();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_1D166DACC();
        v17 = v16;
        if (v15 == sub_1D166DACC() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_1D166E1E0();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_1D166DACC();
          v24 = v23;
          if (v22 == sub_1D166DACC() && v24 == v25)
            goto LABEL_3;
          v27 = sub_1D166E1E0();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1D160AD90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1D141AC58(&qword_1ED935848);
    v3 = sub_1D166E084();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1D166E264();
      swift_bridgeObjectRetain();
      sub_1D166DB08();
      result = sub_1D166E288();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1D166E1E0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1D166E1E0();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1D160AF30()
{
  uint64_t v0;

  v0 = sub_1D166D964();
  sub_1D15FD440(v0, qword_1EFC620E8);
  sub_1D141AC1C(v0, (uint64_t)qword_1EFC620E8);
  sub_1D166D940();
  return sub_1D166D958();
}

uint64_t sub_1D160AFA8()
{
  sub_1D166E090();
  sub_1D166DB5C();
  swift_bridgeObjectRetain();
  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  sub_1D166DB5C();
  sub_1D141AC58(&qword_1ED935C28);
  sub_1D166E138();
  return 0;
}

uint64_t sub_1D160B088()
{
  return sub_1D160AFA8();
}

uint64_t IMPurgedAttachmentHandler.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___IMPurgedAttachmentHandler_delegate;
  swift_beginAccess();
  return MEMORY[0x1D17EB154](v1);
}

uint64_t IMPurgedAttachmentHandler.delegate.setter()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void __swiftcall IMPurgedAttachmentHandler.init(batchSize:)(IMPurgedAttachmentHandler *__return_ptr retstr, Swift::Int batchSize)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithBatchSize_, batchSize);
}

id IMPurgedAttachmentHandler.init(batchSize:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___IMPurgedAttachmentHandler_currentBatch] = 0;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR___IMPurgedAttachmentHandler_attachmentPaths] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR___IMPurgedAttachmentHandler_successfullyDeletedLivePhotoComponents] = v3;
  *(_QWORD *)&v1[OBJC_IVAR___IMPurgedAttachmentHandler_livePhotoComponentDeletionFailures] = v3;
  *(_QWORD *)&v1[OBJC_IVAR___IMPurgedAttachmentHandler_livePhotoBundleOrComponentPaths] = v3;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR___IMPurgedAttachmentHandler_batchSize] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)IMPurgedAttachmentHandler;
  return objc_msgSendSuper2(&v5, sel_init);
}

Swift::Void __swiftcall IMPurgedAttachmentHandler.registerPurgedAttachment(at:)(Swift::String_optional at)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  unsigned int v7;
  _QWORD **v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD **v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;

  if (at.value._object)
  {
    object = at.value._object;
    countAndFlagsBits = at.value._countAndFlagsBits;
    swift_bridgeObjectRetain();
    v4 = (void *)sub_1D166DAA8();
    v5 = objc_msgSend(v4, sel___im_isLivePhotoBundlePath);

    if ((v5 & 1) != 0
      || (v6 = (void *)sub_1D166DAA8(),
          v7 = objc_msgSend(v6, sel___im_isLivePhotoBundleComponent),
          v6,
          v7))
    {
      v8 = (_QWORD **)(v1 + OBJC_IVAR___IMPurgedAttachmentHandler_livePhotoBundleOrComponentPaths);
      swift_beginAccess();
      v9 = *v8;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v8 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v9 = sub_1D160DB14(0, v9[2] + 1, 1, v9);
        *v8 = v9;
      }
      v12 = v9[2];
      v11 = v9[3];
      if (v12 >= v11 >> 1)
      {
        v9 = sub_1D160DB14((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
        *v8 = v9;
      }
      v9[2] = v12 + 1;
      v13 = &v9[2 * v12];
      v13[4] = countAndFlagsBits;
      v13[5] = object;
      swift_endAccess();
    }
    else
    {
      v14 = (_QWORD **)(v1 + OBJC_IVAR___IMPurgedAttachmentHandler_attachmentPaths);
      swift_beginAccess();
      v15 = *v14;
      v16 = swift_isUniquelyReferenced_nonNull_native();
      *v14 = v15;
      if ((v16 & 1) == 0)
      {
        v15 = sub_1D160DB14(0, v15[2] + 1, 1, v15);
        *v14 = v15;
      }
      v17 = v15[2];
      v18 = v15[3];
      v19 = v17 + 1;
      if (v17 >= v18 >> 1)
      {
        v25 = v17 + 1;
        v22 = v15;
        v23 = v15[2];
        v24 = sub_1D160DB14((_QWORD *)(v18 > 1), v17 + 1, 1, v22);
        v17 = v23;
        v19 = v25;
        v15 = v24;
        *v14 = v24;
      }
      v15[2] = v19;
      v20 = &v15[2 * v17];
      v20[4] = countAndFlagsBits;
      v20[5] = object;
      v21 = *v14;
      swift_endAccess();
      if (v21[2] >= *(_QWORD *)(v1 + OBJC_IVAR___IMPurgedAttachmentHandler_batchSize))
        sub_1D160B554();
    }
  }
}

void sub_1D160B554()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  os_log_type_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  NSObject *v53;
  uint64_t v54;
  void *v55;
  uint8_t *v56;
  unint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  id v64;
  void *v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  BOOL v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  BOOL v112;
  os_log_type_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  unint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  NSObject *v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  void *v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  id v144;
  void *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  id v151;
  id v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  BOOL v156;
  uint64_t v157;
  _QWORD v158[2];
  __int128 v159;
  id v160;
  id v161;
  unint64_t v162;
  uint64_t *v163;
  __int128 v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  unint64_t v169;
  unint64_t v170;
  char *v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181[2];

  v1 = sub_1D166D964();
  v172 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (unint64_t)v158 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFC614D0 != -1)
    goto LABEL_123;
  while (1)
  {
    v4 = sub_1D141AC1C(v1, (uint64_t)qword_1EFC620E8);
    v5 = (char *)(id)v0;
    v178 = v4;
    v6 = sub_1D166D94C();
    v7 = sub_1D166DD6C();
    v8 = os_log_type_enabled(v6, v7);
    v170 = v1;
    if (v8)
    {
      v9 = swift_slowAlloc();
      *(_DWORD *)v9 = 134218240;
      v181[0] = *(_QWORD *)&v5[OBJC_IVAR___IMPurgedAttachmentHandler_currentBatch];
      sub_1D166DF28();
      *(_WORD *)(v9 + 12) = 2048;
      v10 = &v5[OBJC_IVAR___IMPurgedAttachmentHandler_attachmentPaths];
      swift_beginAccess();
      v181[0] = *(_QWORD *)(*(_QWORD *)v10 + 16);
      sub_1D166DF28();

      _os_log_impl(&dword_1D1413000, v6, v7, "Processing batch %ld with %ld attachment paths.", (uint8_t *)v9, 0x16u);
      MEMORY[0x1D17EB0AC](v9, -1, -1);

    }
    else
    {

    }
    v11 = &v5[OBJC_IVAR___IMPurgedAttachmentHandler_attachmentPaths];
    swift_beginAccess();
    v12 = v5;
    v13 = swift_bridgeObjectRetain();
    v14 = sub_1D160E5F4(v13);
    swift_bridgeObjectRelease();

    v16 = v14[2];
    v171 = v11;
    if (v16 != *(_QWORD *)(*(_QWORD *)v11 + 16))
    {
      v17 = v12;
      swift_bridgeObjectRetain();
      v18 = sub_1D166D94C();
      v19 = sub_1D166DD84();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        *(_DWORD *)v20 = 134218240;
        v181[0] = v16;
        sub_1D166DF28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2048;
        v181[0] = *(_QWORD *)(*(_QWORD *)v171 + 16);
        sub_1D166DF28();

        _os_log_impl(&dword_1D1413000, v18, v19, "Only %ld guids could be found out of %ld attachment paths.", (uint8_t *)v20, 0x16u);
        MEMORY[0x1D17EB0AC](v20, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    v173 = v3;
    v174 = (uint64_t)v14;
    v175 = v16;
    v168 = v12;
    if (v16)
    {
      v21 = 0;
      v22 = 0;
      *(_QWORD *)&v15 = 136315394;
      v177 = v15;
      v176 = MEMORY[0x1E0DEE9B8] + 8;
      do
      {
        v23 = v12;
        swift_bridgeObjectRetain();
        v0 = sub_1D166D94C();
        v24 = sub_1D166DD78();
        if (os_log_type_enabled((os_log_t)v0, v24))
        {
          v3 = swift_slowAlloc();
          v1 = swift_slowAlloc();
          v181[0] = v1;
          *(_DWORD *)v3 = v177;
          v26 = v14[v21 + 4];
          v25 = v14[v21 + 5];
          swift_bridgeObjectRetain();
          *(_QWORD *)(v3 + 4) = sub_1D141BCB4(v26, v25, v181);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_WORD *)(v3 + 12) = 2080;
          if (v22 >= *(_QWORD *)(*(_QWORD *)v171 + 16))
            goto LABEL_121;
          v27 = *(_QWORD *)v171 + v21 * 8;
          v28 = *(_QWORD *)(v27 + 32);
          v29 = *(_QWORD *)(v27 + 40);
          swift_bridgeObjectRetain();
          *(_QWORD *)(v3 + 14) = sub_1D141BCB4(v28, v29, v181);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D1413000, (os_log_t)v0, v24, "guid: %s attachmentPath: %s", (uint8_t *)v3, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1D17EB0AC](v1, -1, -1);
          MEMORY[0x1D17EB0AC](v3, -1, -1);

          v3 = v173;
          v12 = v168;
          v14 = (_QWORD *)v174;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        ++v22;
        v21 += 2;
      }
      while (v175 != v22);
    }
    v30 = swift_bridgeObjectRetain();
    v31 = sub_1D16308B0(v30);
    swift_bridgeObjectRelease();
    v32 = sub_1D15FDE88(v31);
    swift_bridgeObjectRelease();
    swift_retain();
    v33 = sub_1D166D94C();
    v34 = sub_1D166DD6C();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v35 = 134217984;
      v181[0] = v32[2];
      sub_1D166DF28();
      swift_release();
      _os_log_impl(&dword_1D1413000, v33, v34, "%ld unique guids found.", v35, 0xCu);
      MEMORY[0x1D17EB0AC](v35, -1, -1);

    }
    else
    {

      swift_release();
    }
    sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC616E0);
    sub_1D141AC58((uint64_t *)&unk_1EFC631B0);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1D1683CF0;
    v37 = sub_1D166DACC();
    v39 = v38;
    v40 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
    v41 = sub_1D15FD2D0();
    *(_QWORD *)(v36 + 64) = v41;
    *(_QWORD *)(v36 + 32) = v37;
    *(_QWORD *)(v36 + 40) = v39;
    v42 = sub_1D141AC58(&qword_1ED9355C0);
    *(_QWORD *)(v36 + 96) = v42;
    v43 = sub_1D160F064(&qword_1EFC62168, &qword_1ED9355C0, MEMORY[0x1E0CB1B18]);
    *(_QWORD *)(v36 + 104) = v43;
    *(_QWORD *)(v36 + 72) = v32;
    v44 = sub_1D166DACC();
    *(_QWORD *)(v36 + 136) = v40;
    *(_QWORD *)(v36 + 144) = v41;
    *(_QWORD *)(v36 + 112) = v44;
    *(_QWORD *)(v36 + 120) = v45;
    *(_QWORD *)(v36 + 176) = v42;
    *(_QWORD *)(v36 + 184) = v43;
    *(_QWORD *)(v36 + 152) = v32;
    swift_retain_n();
    v46 = (void *)sub_1D166DD54();
    v47 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    if (!v47)
      goto LABEL_131;
    v48 = v47;
    v0 = (uint64_t)objc_msgSend(v47, sel_attachmentsFilteredUsingPredicate_limit_, v46, 0x7FFFFFFFFFFFFFFFLL);

    v49 = v172;
    if (!v0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v53 = sub_1D166D94C();
      v54 = sub_1D166DD84();
      if (os_log_type_enabled(v53, (os_log_type_t)v54))
      {
        v55 = v46;
        v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v56 = 0;
        _os_log_impl(&dword_1D1413000, v53, (os_log_type_t)v54, "Found no transfers!", v56, 2u);
        MEMORY[0x1D17EB0AC](v56, -1, -1);

      }
      else
      {

      }
      return;
    }
    sub_1D15FD3C0(0, &qword_1EFC62170);
    v1 = sub_1D166DBEC();
    v169 = v1;
    v162 = v1 >> 62;
    v160 = v46;
    if (v1 >> 62)
    {
LABEL_125:
      swift_bridgeObjectRetain();
      v50 = sub_1D166E15C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v50 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v51 = v32[2];
    v161 = (id)v0;
    if (v50 == v51)
    {
      swift_release();
      v52 = v170;
      goto LABEL_100;
    }
    swift_retain();
    v57 = v169;
    swift_bridgeObjectRetain();
    v58 = sub_1D166D94C();
    v59 = sub_1D166DD78();
    if (os_log_type_enabled(v58, v59))
    {
      v1 = swift_slowAlloc();
      *(_DWORD *)v1 = 134218240;
      v181[0] = v50;
      sub_1D166DF28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v1 + 12) = 2048;
      swift_release();
      v181[0] = v51;
      v49 = v172;
      sub_1D166DF28();
      swift_release();
      _os_log_impl(&dword_1D1413000, v58, v59, "Numbers of transfers %ld did not match the expected %ld transfers.", (uint8_t *)v1, 0x16u);
      MEMORY[0x1D17EB0AC](v1, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_release_n();
    }
    v60 = v175;
    v61 = MEMORY[0x1E0DEE9D8];
    v62 = (uint64_t *)(v50 & ~(v50 >> 63));
    v52 = v170;
    if (v50)
    {
      v181[0] = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)&v177 = v50 & ~(v50 >> 63);
      sub_1D164F724(0, v177, 0);
      if (v50 < 0)
        goto LABEL_127;
      v63 = 0;
      v61 = v181[0];
      do
      {
        if ((v57 & 0xC000000000000001) != 0)
          v64 = (id)MEMORY[0x1D17E8FD0](v63, v57);
        else
          v64 = *(id *)(v57 + 8 * v63 + 32);
        v65 = v64;
        v66 = objc_msgSend(v64, sel_guid);
        if (v66)
        {
          v67 = v66;
          v1 = sub_1D166DACC();
          v69 = v68;

        }
        else
        {

          v1 = 0;
          v69 = 0;
        }
        v181[0] = v61;
        v71 = *(_QWORD *)(v61 + 16);
        v70 = *(_QWORD *)(v61 + 24);
        if (v71 >= v70 >> 1)
        {
          sub_1D164F724(v70 > 1, v71 + 1, 1);
          v61 = v181[0];
        }
        ++v63;
        *(_QWORD *)(v61 + 16) = v71 + 1;
        v72 = v61 + 16 * v71;
        *(_QWORD *)(v72 + 32) = v1;
        *(_QWORD *)(v72 + 40) = v69;
      }
      while (v50 != v63);
      v52 = v170;
      v49 = v172;
      v60 = v175;
      v62 = (uint64_t *)v177;
    }
    v167 = sub_1D1630944(v61);
    swift_bridgeObjectRelease();
    v0 = MEMORY[0x1E0DEE9D8];
    if (v50)
    {
      v181[0] = MEMORY[0x1E0DEE9D8];
      sub_1D164F724(0, (int64_t)v62, 0);
      if (v50 < 0)
        goto LABEL_128;
      v73 = 0;
      v0 = v181[0];
      do
      {
        if ((v57 & 0xC000000000000001) != 0)
          v74 = (id)MEMORY[0x1D17E8FD0](v73, v57);
        else
          v74 = *(id *)(v57 + 8 * v73 + 32);
        v75 = v74;
        v76 = objc_msgSend(v74, sel_originalGUID);
        if (v76)
        {
          v77 = v76;
          v1 = sub_1D166DACC();
          v79 = v78;

        }
        else
        {

          v1 = 0;
          v79 = 0;
        }
        v181[0] = v0;
        v81 = *(_QWORD *)(v0 + 16);
        v80 = *(_QWORD *)(v0 + 24);
        if (v81 >= v80 >> 1)
        {
          sub_1D164F724(v80 > 1, v81 + 1, 1);
          v0 = v181[0];
        }
        ++v73;
        *(_QWORD *)(v0 + 16) = v81 + 1;
        v82 = v0 + 16 * v81;
        *(_QWORD *)(v82 + 32) = v1;
        *(_QWORD *)(v82 + 40) = v79;
        v52 = v170;
      }
      while (v50 != v73);
      v49 = v172;
      v60 = v175;
    }
    v83 = sub_1D1630944(v0);
    swift_bridgeObjectRelease();
    if (v60)
    {
      v3 = 0;
      v166 = v174 + 32;
      *(_QWORD *)&v177 = v167 + 56;
      v163 = &v180;
      v176 = v83 + 56;
      *(_QWORD *)&v84 = 136315394;
      v159 = v84;
      v158[1] = MEMORY[0x1E0DEE9B8] + 8;
      *(_QWORD *)&v84 = 136315138;
      v164 = v84;
      v165 = v83;
      do
      {
        if (v3 >= *(_QWORD *)(v174 + 16))
          goto LABEL_122;
        v85 = (uint64_t *)(v166 + 16 * v3);
        if (*(_QWORD *)(v167 + 16))
        {
          v87 = *v85;
          v86 = v85[1];
          v1 = v167;
          sub_1D166E264();
          sub_1D166E27C();
          swift_bridgeObjectRetain();
          sub_1D166DB08();
          v88 = sub_1D166E288();
          v89 = -1 << *(_BYTE *)(v1 + 32);
          v90 = v88 & ~v89;
          if (((*(_QWORD *)(v177 + ((v90 >> 3) & 0xFFFFFFFFFFFFF8)) >> v90) & 1) != 0)
          {
            v1 = ~v89;
            v91 = *(_QWORD *)(v167 + 48);
            while (1)
            {
              v92 = (_QWORD *)(v91 + 16 * v90);
              v93 = v92[1];
              if (v93)
              {
                v94 = *v92 == v87 && v93 == v86;
                if (v94 || (sub_1D166E1E0() & 1) != 0)
                  break;
              }
              v90 = (v90 + 1) & v1;
              if (((*(_QWORD *)(v177 + ((v90 >> 3) & 0xFFFFFFFFFFFFF8)) >> v90) & 1) == 0)
                goto LABEL_75;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            v0 = v178;
            v95 = sub_1D166D94C();
            v96 = sub_1D166DD78();
            v1 = v96;
            if (os_log_type_enabled(v95, v96))
            {
              v0 = swift_slowAlloc();
              v97 = swift_slowAlloc();
              v181[0] = v97;
              *(_DWORD *)v0 = v164;
              v98 = *v85;
              v99 = v85[1];
              swift_bridgeObjectRetain();
              v100 = v98;
              v52 = v170;
              v179 = sub_1D141BCB4(v100, v99, v181);
              v60 = v175;
              v83 = v165;
              sub_1D166DF28();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v101 = v95;
              v102 = v1;
              v103 = "Matching guid (%s) found in transfers.";
              goto LABEL_88;
            }
            goto LABEL_96;
          }
LABEL_75:
          swift_bridgeObjectRelease();
          v49 = v172;
        }
        if (*(_QWORD *)(v83 + 16))
        {
          v105 = *v85;
          v104 = v85[1];
          sub_1D166E264();
          sub_1D166E27C();
          swift_bridgeObjectRetain();
          sub_1D166DB08();
          v106 = sub_1D166E288();
          v107 = -1 << *(_BYTE *)(v83 + 32);
          v108 = v106 & ~v107;
          if (((*(_QWORD *)(v176 + ((v108 >> 3) & 0xFFFFFFFFFFFFF8)) >> v108) & 1) != 0)
          {
            v1 = ~v107;
            v109 = *(_QWORD *)(v83 + 48);
            while (1)
            {
              v110 = (_QWORD *)(v109 + 16 * v108);
              v111 = v110[1];
              if (v111)
              {
                v112 = *v110 == v105 && v111 == v104;
                if (v112 || (sub_1D166E1E0() & 1) != 0)
                  break;
              }
              v108 = (v108 + 1) & v1;
              if (((*(_QWORD *)(v176 + ((v108 >> 3) & 0xFFFFFFFFFFFFF8)) >> v108) & 1) == 0)
                goto LABEL_89;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            v0 = v178;
            v95 = sub_1D166D94C();
            v113 = sub_1D166DD78();
            v1 = v113;
            if (os_log_type_enabled(v95, v113))
            {
              v0 = swift_slowAlloc();
              v97 = swift_slowAlloc();
              v181[0] = v97;
              *(_DWORD *)v0 = v164;
              v114 = *v85;
              v115 = v85[1];
              swift_bridgeObjectRetain();
              v116 = v114;
              v52 = v170;
              v179 = sub_1D141BCB4(v116, v115, v181);
              v60 = v175;
              v83 = v165;
              sub_1D166DF28();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v101 = v95;
              v102 = v1;
              v103 = "Matching original guid (%s) found in transfers.";
LABEL_88:
              _os_log_impl(&dword_1D1413000, v101, v102, v103, (uint8_t *)v0, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1D17EB0AC](v97, -1, -1);
              MEMORY[0x1D17EB0AC](v0, -1, -1);

LABEL_97:
              v49 = v172;
              goto LABEL_61;
            }
LABEL_96:

            swift_bridgeObjectRelease();
            goto LABEL_97;
          }
LABEL_89:
          swift_bridgeObjectRelease();
          v49 = v172;
        }
        if (v60 == *(_QWORD *)(*(_QWORD *)v171 + 16))
        {
          v1 = v168;
          swift_bridgeObjectRetain();
          v0 = v178;
          v117 = sub_1D166D94C();
          v118 = sub_1D166DD6C();
          if (!os_log_type_enabled(v117, v118))
          {

            swift_bridgeObjectRelease();
            v83 = v165;
            goto LABEL_61;
          }
          v119 = (void *)v1;
          v0 = swift_slowAlloc();
          v1 = swift_slowAlloc();
          v181[0] = v1;
          *(_DWORD *)v0 = v159;
          v49 = *v85;
          v32 = (_QWORD *)v85[1];
          swift_bridgeObjectRetain();
          *(_QWORD *)(v0 + 4) = sub_1D141BCB4(v49, (unint64_t)v32, v181);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_WORD *)(v0 + 12) = 2080;
          if (v3 >= *(_QWORD *)(*(_QWORD *)v171 + 16))
          {
            __break(1u);
            goto LABEL_125;
          }
          v120 = *(_QWORD *)v171 + 16 * v3;
          v121 = *(_QWORD *)(v120 + 32);
          v122 = *(_QWORD *)(v120 + 40);
          swift_bridgeObjectRetain();
          *(_QWORD *)(v0 + 14) = sub_1D141BCB4(v121, v122, v181);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D1413000, v117, v118, "No matching guid or original guid found in transfers for guid: %s attachmentPath: %s", (uint8_t *)v0, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1D17EB0AC](v1, -1, -1);
          MEMORY[0x1D17EB0AC](v0, -1, -1);

          v52 = v170;
          v49 = v172;
          v83 = v165;
        }
        else
        {
          swift_bridgeObjectRetain();
          v123 = sub_1D166D94C();
          v124 = sub_1D166DD6C();
          v0 = v124;
          if (os_log_type_enabled(v123, v124))
          {
            v1 = swift_slowAlloc();
            v125 = swift_slowAlloc();
            v181[0] = v125;
            *(_DWORD *)v1 = v164;
            v126 = *v85;
            v127 = v85[1];
            swift_bridgeObjectRetain();
            v128 = v126;
            v83 = v165;
            *(_QWORD *)(v1 + 4) = sub_1D141BCB4(v128, v127, v181);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D1413000, v123, (os_log_type_t)v0, "No matching guid or original guid found in transfers for guid: %s", (uint8_t *)v1, 0xCu);
            swift_arrayDestroy();
            v129 = v125;
            v49 = v172;
            MEMORY[0x1D17EB0AC](v129, -1, -1);
            MEMORY[0x1D17EB0AC](v1, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease();
          }
        }
        v60 = v175;
LABEL_61:
        ++v3;
      }
      while (v3 != v60);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v173;
LABEL_100:
    swift_bridgeObjectRelease();
    sub_1D160CE10();
    if (v162)
      break;
    v130 = *(_QWORD *)((v169 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v130)
      goto LABEL_115;
LABEL_104:
    v132 = v169 & 0xC000000000000001;
    v133 = 4;
    *(_QWORD *)&v131 = 136315138;
    v177 = v131;
    v174 = MEMORY[0x1E0DEE9B8] + 8;
    v176 = v130;
    v175 = v169 & 0xC000000000000001;
    while (1)
    {
      v134 = v132 ? (id)MEMORY[0x1D17E8FD0](v133 - 4, v169) : *(id *)(v169 + 8 * v133);
      v0 = (uint64_t)v134;
      v135 = v133 - 3;
      if (__OFADD__(v133 - 4, 1))
        break;
      (*(void (**)(unint64_t, uint64_t, unint64_t))(v49 + 16))(v3, v178, v52);
      v62 = (uint64_t *)(id)v0;
      v136 = sub_1D166D94C();
      v1 = sub_1D166DD6C();
      if (os_log_type_enabled(v136, (os_log_type_t)v1))
      {
        v137 = swift_slowAlloc();
        v138 = swift_slowAlloc();
        v181[0] = v138;
        *(_DWORD *)v137 = v177;
        v139 = objc_msgSend(v62, sel_guid);
        if (!v139)
          goto LABEL_130;
        v140 = v139;
        v141 = sub_1D166DACC();
        v143 = v142;

        *(_QWORD *)(v137 + 4) = sub_1D141BCB4(v141, v143, v181);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D1413000, v136, (os_log_type_t)v1, "updating transfer with guid %s as waiting for accept.", (uint8_t *)v137, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v138, -1, -1);
        MEMORY[0x1D17EB0AC](v137, -1, -1);

        v49 = v172;
        v3 = v173;
        v52 = v170;
        (*(void (**)(unint64_t, unint64_t))(v172 + 8))(v173, v170);
        v130 = v176;
        v132 = v175;
      }
      else
      {

        (*(void (**)(unint64_t, unint64_t))(v49 + 8))(v3, v52);
      }
      v144 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      if (!v144)
        goto LABEL_129;
      v145 = v144;
      objc_msgSend(v144, sel_updateTransferAsWaitingForAccept_, v62);

      ++v133;
      if (v135 == v130)
        goto LABEL_115;
    }
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    swift_once();
  }
  swift_bridgeObjectRetain_n();
  v130 = sub_1D166E15C();
  swift_bridgeObjectRelease();
  if (v130)
    goto LABEL_104;
LABEL_115:
  v146 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v147 = v168;
  sub_1D160E890();
  swift_bridgeObjectRelease();
  *(_QWORD *)v171 = v146;
  swift_bridgeObjectRelease();
  v148 = &v147[OBJC_IVAR___IMPurgedAttachmentHandler_successfullyDeletedLivePhotoComponents];
  swift_beginAccess();
  *(_QWORD *)v148 = v146;
  swift_bridgeObjectRelease();
  v149 = &v147[OBJC_IVAR___IMPurgedAttachmentHandler_livePhotoComponentDeletionFailures];
  swift_beginAccess();
  *(_QWORD *)v149 = v146;
  swift_bridgeObjectRelease();
  v150 = &v147[OBJC_IVAR___IMPurgedAttachmentHandler_livePhotoBundleOrComponentPaths];
  swift_beginAccess();
  *(_QWORD *)v150 = v146;
  swift_bridgeObjectRelease();
  v151 = objc_msgSend(v147, sel_delegate);
  if (v151)
  {
    v152 = v161;
    objc_msgSend(v151, sel_batchCompletedWithTransfers_, v161);

    swift_unknownObjectRelease();
    v62 = &qword_1EFC62000;
    v153 = v160;
  }
  else
  {

    v153 = v161;
    v62 = &qword_1EFC62000;
  }

  v154 = v62[33];
  v155 = *(_QWORD *)&v147[v154];
  v156 = __OFADD__(v155, 1);
  v157 = v155 + 1;
  if (v156)
  {
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:

    __break(1u);
LABEL_130:

    __break(1u);
LABEL_131:
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v147[v154] = v157;
  }
}

Swift::Void __swiftcall IMPurgedAttachmentHandler.complete()()
{
  uint64_t v0;

  sub_1D160B554();
  *(_QWORD *)(v0 + OBJC_IVAR___IMPurgedAttachmentHandler_currentBatch) = 0;
}

uint64_t sub_1D160CE10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unsigned __int8 v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  unsigned int v21;
  id v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  id v28;
  void *v29;
  _QWORD *v30;
  id v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  void *v36;
  _QWORD *v37;
  id v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD **v43;
  _QWORD **v44;
  id v45[7];

  v45[6] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (uint64_t *)(v0 + OBJC_IVAR___IMPurgedAttachmentHandler_attachmentPaths);
  swift_beginAccess();
  result = *v1;
  v3 = *(_QWORD *)(*v1 + 16);
  if (v3)
  {
    v44 = (_QWORD **)(v0 + OBJC_IVAR___IMPurgedAttachmentHandler_livePhotoComponentDeletionFailures);
    v43 = (_QWORD **)(v0 + OBJC_IVAR___IMPurgedAttachmentHandler_successfullyDeletedLivePhotoComponents);
    for (i = (uint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
    {
      v6 = *(i - 1);
      v5 = *i;
      swift_bridgeObjectRetain();
      v7 = (void *)sub_1D166DAA8();
      v8 = objc_msgSend(v7, sel_im_isLivePhoto);

      if ((v8 & 1) != 0)
        break;
      swift_bridgeObjectRelease();
LABEL_4:
      if (!--v3)
        return swift_bridgeObjectRelease();
    }
    v9 = (void *)sub_1D166DAA8();
    v10 = objc_msgSend(v9, sel_im_livePhotoImagePath);

    if (v10)
    {
      v11 = sub_1D166DACC();
      v13 = v12;

    }
    else
    {
      v11 = 0;
      v13 = 0;
    }
    v14 = (void *)sub_1D166DAA8();
    v15 = objc_msgSend(v14, sel_im_livePhotoVideoPath);

    if (v15)
    {
      v16 = sub_1D166DACC();
      v18 = v17;

      if (!v13)
      {
        if (!v18)
          goto LABEL_26;
        v11 = v16;
        v13 = v18;
        goto LABEL_15;
      }
    }
    else if (!v13)
    {
LABEL_26:
      sub_1D160F0A4();
      v36 = (void *)swift_allocError();
      swift_beginAccess();
      v37 = *v44;
      swift_bridgeObjectRetain();
      v38 = v36;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v44 = v37;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v37 = sub_1D160DC8C(0, v37[2] + 1, 1, v37);
        *v44 = v37;
      }
      v41 = v37[2];
      v40 = v37[3];
      if (v41 >= v40 >> 1)
      {
        v37 = sub_1D160DC8C((_QWORD *)(v40 > 1), v41 + 1, 1, v37);
        *v44 = v37;
      }
      v37[2] = v41 + 1;
      v42 = &v37[3 * v41];
      v42[4] = v6;
      v42[5] = v5;
      v42[6] = v36;
      swift_endAccess();
      swift_bridgeObjectRelease();

      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
LABEL_15:
    v19 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v20 = (void *)sub_1D166DAA8();
    v45[0] = 0;
    v21 = objc_msgSend(v19, sel_removeItemAtPath_error_, v20, v45);

    if (v21)
    {
      v22 = v45[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v23 = *v43;
      v24 = swift_isUniquelyReferenced_nonNull_native();
      *v43 = v23;
      if ((v24 & 1) == 0)
      {
        v23 = sub_1D160DB14(0, v23[2] + 1, 1, v23);
        *v43 = v23;
      }
      v26 = v23[2];
      v25 = v23[3];
      if (v26 >= v25 >> 1)
      {
        v23 = sub_1D160DB14((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
        *v43 = v23;
      }
      v23[2] = v26 + 1;
      v27 = &v23[2 * v26];
      v27[4] = v11;
      v27[5] = v13;
      swift_endAccess();
    }
    else
    {
      v28 = v45[0];
      swift_bridgeObjectRelease();
      v29 = (void *)sub_1D166D4B4();

      swift_willThrow();
      swift_beginAccess();
      v30 = *v44;
      swift_bridgeObjectRetain();
      v31 = v29;
      v32 = swift_isUniquelyReferenced_nonNull_native();
      *v44 = v30;
      if ((v32 & 1) == 0)
      {
        v30 = sub_1D160DC8C(0, v30[2] + 1, 1, v30);
        *v44 = v30;
      }
      v34 = v30[2];
      v33 = v30[3];
      if (v34 >= v33 >> 1)
      {
        v30 = sub_1D160DC8C((_QWORD *)(v33 > 1), v34 + 1, 1, v30);
        *v44 = v30;
      }
      v30[2] = v34 + 1;
      v35 = &v30[3 * v34];
      v35[4] = v6;
      v35[5] = v5;
      v35[6] = v29;
      swift_endAccess();
      swift_bridgeObjectRelease();

    }
    goto LABEL_4;
  }
  return result;
}

void sub_1D160D2D4()
{
  char *v0;
  char *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[4];

  v1 = &v0[OBJC_IVAR___IMPurgedAttachmentHandler_successfullyDeletedLivePhotoComponents];
  swift_beginAccess();
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v2)
  {
    if (v2 >= 3)
      v2 = 3;
    v11[2] = 0;
    v11[3] = (2 * v2) | 1;
    swift_bridgeObjectRetain();
    sub_1D141AC58(&qword_1EFC62178);
    sub_1D160F064(&qword_1EFC62180, &qword_1EFC62178, MEMORY[0x1E0DEBF68]);
    sub_1D166DA78();
    swift_bridgeObjectRelease();
    v11[1] = 0xE100000000000000;
    sub_1D166DB5C();
    swift_bridgeObjectRelease();
    sub_1D166DB5C();
    v4 = 10;
    v3 = 0xE100000000000000;
  }
  else
  {
    v4 = 0;
    v3 = 0xE000000000000000;
  }
  if (qword_1EFC614D0 != -1)
    swift_once();
  v5 = sub_1D166D964();
  sub_1D141AC1C(v5, (uint64_t)qword_1EFC620E8);
  v6 = v0;
  swift_bridgeObjectRetain();
  v7 = sub_1D166D94C();
  v8 = sub_1D166DD6C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v11[0] = v10;
    *(_DWORD *)v9 = 134218242;

    sub_1D166DF28();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(v4, v3, v11);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D1413000, v7, v8, "Deleted %ld matching live photo components:%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v10, -1, -1);
    MEMORY[0x1D17EB0AC](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1D160D5A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19[2];
  uint64_t v20;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___IMPurgedAttachmentHandler_livePhotoComponentDeletionFailures);
  swift_beginAccess();
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D164F570(0, v3, 0);
    v4 = v20;
    v5 = (void **)(v2 + 48);
    do
    {
      v6 = *v5;
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v7 = v6;
      sub_1D166E090();
      sub_1D166DB5C();
      swift_bridgeObjectRetain();
      sub_1D166DB5C();
      swift_bridgeObjectRelease();
      sub_1D166DB5C();
      sub_1D141AC58(&qword_1ED935C28);
      sub_1D166E138();
      swift_bridgeObjectRelease();

      v20 = v4;
      v9 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1D164F570(v8 > 1, v9 + 1, 1);
        v4 = v20;
      }
      *(_QWORD *)(v4 + 16) = v9 + 1;
      v10 = v4 + 16 * v9;
      *(_QWORD *)(v10 + 32) = 0;
      *(_QWORD *)(v10 + 40) = 0xE000000000000000;
      v5 += 3;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  v19[0] = v4;
  sub_1D141AC58(&qword_1ED9355C0);
  sub_1D160F064((unint64_t *)&qword_1ED9355C8, &qword_1ED9355C0, MEMORY[0x1E0DEAF20]);
  v11 = sub_1D166DA78();
  v13 = v12;
  swift_bridgeObjectRelease();
  if (qword_1EFC614D0 != -1)
    swift_once();
  v14 = sub_1D166D964();
  sub_1D141AC1C(v14, (uint64_t)qword_1EFC620E8);
  swift_bridgeObjectRetain();
  v15 = sub_1D166D94C();
  v16 = sub_1D166DD6C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19[0] = v18;
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain();
    v20 = sub_1D141BCB4(v11, v13, v19);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D1413000, v15, v16, "Errors:\n%s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v18, -1, -1);
    MEMORY[0x1D17EB0AC](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void __swiftcall IMPurgedAttachmentHandler.init()(IMPurgedAttachmentHandler *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void IMPurgedAttachmentHandler.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

_QWORD *sub_1D160DA08(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1D141AC58(&qword_1EFC62198);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D160E3FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D160DB14(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1D141AC58(&qword_1ED935820);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D160E504(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1D160DC20()
{
  return sel_delegate;
}

id sub_1D160DC2C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_delegate);
  *a2 = result;
  return result;
}

id sub_1D160DC64(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDelegate_, *a1);
}

uint64_t type metadata accessor for IMPurgedAttachmentHandler(uint64_t a1)
{
  return sub_1D15FD3C0(a1, &qword_1EFC62138);
}

_QWORD *sub_1D160DC8C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1D141AC58(&qword_1EFC62190);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1D160E79C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D160DDB0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1D141AC58(&qword_1EFC62158);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D160EB34(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D160DEBC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1D141AC58(&qword_1ED935010);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D160EC3C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D160DFC8(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1D141AC58(&qword_1EFC62160);
  v10 = *(_QWORD *)(type metadata accessor for PlainTextEmojiTapbackParser.MatchingInfo() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_1D166E144();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for PlainTextEmojiTapbackParser.MatchingInfo() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D160ED2C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_1D160E1D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1D141AC58(&qword_1EFC62148);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1D160EE44(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D160E2F0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1D141AC58(&qword_1EFC62140);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D160EF50(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D160E3FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1D141AC58(&qword_1EFC621A0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D160E504(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

_QWORD *sub_1D160E5F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1D15FD3F8();
  v3 = a1 + 40;
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    swift_bridgeObjectRetain();
    v5 = sub_1D166DF40();
    v6 = *(_QWORD *)(v5 + 16);
    if (v6 > 9)
    {
      v8 = (uint64_t *)(v5 + 176);
      v9 = (uint64_t *)(v5 + 184);
    }
    else
    {
      if (!v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      v7 = v5 + 16 * (v6 - 1);
      v8 = (uint64_t *)(v7 + 32);
      v9 = (uint64_t *)(v7 + 40);
    }
    v10 = *v9;
    v11 = *v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_1D160DB14(0, v4[2] + 1, 1, v4);
    v13 = v4[2];
    v12 = v4[3];
    if (v13 >= v12 >> 1)
      v4 = sub_1D160DB14((_QWORD *)(v12 > 1), v13 + 1, 1, v4);
    v4[2] = v13 + 1;
    v14 = &v4[2 * v13];
    v14[4] = v11;
    v14[5] = v10;
LABEL_4:
    v3 += 16;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D160E79C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

void sub_1D160E890()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  if (qword_1EFC614D0 != -1)
    swift_once();
  v1 = sub_1D166D964();
  sub_1D141AC1C(v1, (uint64_t)qword_1EFC620E8);
  v2 = v0;
  v3 = sub_1D166D94C();
  v4 = sub_1D166DD6C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    sub_1D166DF28();

    _os_log_impl(&dword_1D1413000, v3, v4, "Finished processing batch %ld.", v5, 0xCu);
    MEMORY[0x1D17EB0AC](v5, -1, -1);

  }
  else
  {

  }
  v6 = v2;
  v7 = sub_1D166D94C();
  v8 = sub_1D166DD6C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315138;
    v15 = v10;
    swift_beginAccess();
    v11 = swift_bridgeObjectRetain();
    v12 = MEMORY[0x1D17E8B08](v11, MEMORY[0x1E0DEA968]);
    v14 = v13;
    swift_bridgeObjectRelease();
    sub_1D141BCB4(v12, v14, &v15);
    sub_1D166DF28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v7, v8, "Ignored %s live photo bundles or bundle components.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v10, -1, -1);
    MEMORY[0x1D17EB0AC](v9, -1, -1);

  }
  else
  {

  }
  sub_1D160D2D4();
  sub_1D160D5A0();
}

uint64_t sub_1D160EB34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1D141AC58((uint64_t *)&unk_1ED9356C8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D160EC3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D160ED2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for PlainTextEmojiTapbackParser.MatchingInfo() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D160EE44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1D141AC58(&qword_1EFC62150);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D160EF50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D160F040(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1D160F064(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1D15FC6A0(a2);
    result = MEMORY[0x1D17EAFE0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D160F0A4()
{
  unint64_t result;

  result = qword_1EFC62188;
  if (!qword_1EFC62188)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D1683DCC, &_s15ProcessingErrorON);
    atomic_store(result, (unint64_t *)&qword_1EFC62188);
  }
  return result;
}

void _s26LivePhotoDeletionErrorInfoVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s26LivePhotoDeletionErrorInfoVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  swift_bridgeObjectRetain();
  v5 = v4;
  a1[2] = v4;
  return a1;
}

_QWORD *_s26LivePhotoDeletionErrorInfoVwca(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  id v5;
  void *v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = v4;
  v6 = (void *)a1[2];
  a1[2] = v4;

  return a1;
}

__n128 _s26LivePhotoDeletionErrorInfoVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s26LivePhotoDeletionErrorInfoVwta(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t _s26LivePhotoDeletionErrorInfoVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s26LivePhotoDeletionErrorInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s26LivePhotoDeletionErrorInfoVMa()
{
  return &_s26LivePhotoDeletionErrorInfoVN;
}

uint64_t _s15ProcessingErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D160F2E4 + 4 * byte_1D1683D00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D160F304 + 4 * byte_1D1683D05[v4]))();
}

_BYTE *sub_1D160F2E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D160F304(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D160F30C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D160F314(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D160F31C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D160F324(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s15ProcessingErrorOMa()
{
  return &_s15ProcessingErrorON;
}

unint64_t sub_1D160F344()
{
  unint64_t result;

  result = qword_1EFC621A8;
  if (!qword_1EFC621A8)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D1683D7C, &_s15ProcessingErrorON);
    atomic_store(result, (unint64_t *)&qword_1EFC621A8);
  }
  return result;
}

unint64_t sub_1D160F388(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1D141AC58(&qword_1EFC62238);
  v2 = (_QWORD *)sub_1D166E180();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1D16162CC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D160F4A0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1D141AC58(&qword_1EFC62220);
  v2 = sub_1D166E180();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D141BABC(v6, (uint64_t)&v15, &qword_1EFC62228);
    v7 = v15;
    v8 = v16;
    result = sub_1D16162CC(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1D141B3E4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D160F5D4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1D141AC58((uint64_t *)&unk_1EFC62248);
  v2 = (_QWORD *)sub_1D166E180();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    v7 = (id)*(v4 - 2);
    swift_bridgeObjectRetain();
    result = sub_1D1616458((uint64_t)v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v7;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D160F6E8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1D141AC58(&qword_1EFC62230);
  v2 = (_QWORD *)sub_1D166E180();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D16162CC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D160F7F8(uint64_t a1)
{
  return sub_1D160F810(a1, &qword_1EFC62240);
}

unint64_t sub_1D160F804(uint64_t a1)
{
  return sub_1D160F810(a1, (uint64_t *)&unk_1ED935C18);
}

unint64_t sub_1D160F810(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1D141AC58(a2);
  v3 = (_QWORD *)sub_1D166E180();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_1D16162CC(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D160F924()
{
  sub_1D166E264();
  sub_1D166DB08();
  return sub_1D166E288();
}

uint64_t sub_1D160F980()
{
  return sub_1D166DB08();
}

uint64_t sub_1D160F9A4()
{
  sub_1D166E264();
  sub_1D166DB08();
  return sub_1D166E288();
}

uint64_t sub_1D160F9FC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D166E1B0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1D160FA4C(_QWORD *a1@<X8>)
{
  *a1 = 0x4449656E6F5A6F6ELL;
  a1[1] = 0xEF746E6573657250;
}

unint64_t IMDChatStore.batchOfRecordIDsToDelete(limit:)()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  unint64_t result;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;

  v1 = objc_msgSend(v0, sel_recordZoneID);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, sel_record1ZoneID);
    if (v3)
    {
      v4 = v3;
      v5 = IMDChatCopyChatRecordIDsAndGUIDsToDeleteWithLimit();
      if (v5)
      {
        v6 = (void *)v5;
        sub_1D141AC58(&qword_1ED935B90);
        sub_1D166DBE0();

      }
      if (qword_1ED935B68 != -1)
        swift_once();
      v18 = sub_1D166D964();
      sub_1D141AC1C(v18, (uint64_t)qword_1ED936590);
      v19 = sub_1D166D94C();
      v20 = sub_1D166DD84();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_1D1413000, v19, v20, "Received nil recordIDsByGUIDs from IMDPersistence returning nil for batchOfRecordIDsToDelete for DeletedChatStore.", v21, 2u);
        MEMORY[0x1D17EB0AC](v21, -1, -1);
      }

      v22 = sub_1D160F5D4(MEMORY[0x1E0DEE9D8]);
      return v22;
    }
    if (qword_1ED935B68 != -1)
      swift_once();
    v23 = sub_1D166D964();
    sub_1D141AC1C(v23, (uint64_t)qword_1ED936590);
    v24 = sub_1D166D94C();
    v25 = sub_1D166DD84();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1D1413000, v24, v25, "No chat1 record zone ID present!", v26, 2u);
      MEMORY[0x1D17EB0AC](v26, -1, -1);
    }

    v27 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    if (v27)
    {
      v28 = v27;
      v29 = (void *)sub_1D166DAA8();
      sub_1D16103E0();
      v30 = (void *)swift_allocError();
      v31 = (void *)sub_1D166D4A8();

      v32 = (void *)sub_1D166DAA8();
      objc_msgSend(v28, sel_forceAutoBugCaptureWithSubType_errorPayload_type_context_, v29, v31, v32, 0);

      v22 = sub_1D160F5D4(MEMORY[0x1E0DEE9D8]);
      return v22;
    }
  }
  else
  {
    if (qword_1ED935B68 != -1)
      swift_once();
    v7 = sub_1D166D964();
    sub_1D141AC1C(v7, (uint64_t)qword_1ED936590);
    v8 = sub_1D166D94C();
    v9 = sub_1D166DD84();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1D1413000, v8, v9, "No chat record zone ID present!", v10, 2u);
      MEMORY[0x1D17EB0AC](v10, -1, -1);
    }

    v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    if (v11)
    {
      v12 = v11;
      v13 = (void *)sub_1D166DAA8();
      sub_1D16103E0();
      v14 = (void *)swift_allocError();
      v15 = (void *)sub_1D166D4A8();

      v16 = (void *)sub_1D166DAA8();
      objc_msgSend(v12, sel_forceAutoBugCaptureWithSubType_errorPayload_type_context_, v13, v15, v16, 0);

      return sub_1D160F5D4(MEMORY[0x1E0DEE9D8]);
    }
    __break(1u);
  }
  __break(1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_1D1610054(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  char v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v19[5];
  __int128 v20;
  __int128 v21;

  v7 = *a2;
  sub_1D166E048();
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_1D141B48C((uint64_t)v19), (v9 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_1D1607C44((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
    goto LABEL_17;
  if ((swift_dynamicCast() & 1) == 0)
    return;
  sub_1D166E048();
  if (*(_QWORD *)(v7 + 16) && (v10 = sub_1D141B48C((uint64_t)v19), (v11 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(v7 + 56) + 32 * v10, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_1D1607C44((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
  {
    swift_bridgeObjectRelease();
LABEL_17:
    sub_1D1608CC4((uint64_t)&v20);
    return;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v12 = (void *)sub_1D1610424(1684632935, 0xE400000000000000, a3, a4);
    sub_1D16107C8();
    v13 = v12;
    v14 = sub_1D166DD48();
    v15 = (void *)v14;
    if (*(_QWORD *)(*(_QWORD *)a1 + 16))
    {
      sub_1D1616458(v14);
      if ((v16 & 1) != 0)
      {
        swift_bridgeObjectRelease();

        return;
      }
    }
    v17 = v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19[0] = *(_QWORD *)a1;
    *(_QWORD *)a1 = 0x8000000000000000;
    sub_1D164C900(1684632935, 0xE400000000000000, v17, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)a1 = v19[0];

  }
  swift_bridgeObjectRelease();
}

unint64_t sub_1D16103E0()
{
  unint64_t result;

  result = qword_1EFC621B0;
  if (!qword_1EFC621B0)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D1683EE8, &_s20CloudDeletionErrrorsON);
    atomic_store(result, (unint64_t *)&qword_1EFC621B0);
  }
  return result;
}

uint64_t sub_1D1610424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6;
  char v7;

  sub_1D166DACC();
  sub_1D15FD3F8();
  v6 = sub_1D166DF64();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    sub_1D166DACC();
    v7 = sub_1D166DF64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      return a4;
  }
  return a3;
}

uint64_t _sSo12IMDChatStoreC12IMDaemonCoreE15clearTombstones12forRecordIDsySaySo10CKRecordIDCG_tF_0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  if (qword_1ED935B68 != -1)
    swift_once();
  v0 = sub_1D166D964();
  sub_1D141AC1C(v0, (uint64_t)qword_1ED936590);
  swift_bridgeObjectRetain_n();
  v1 = sub_1D166D94C();
  v2 = sub_1D166DD9C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v11 = v4;
    *(_DWORD *)v3 = 136315138;
    v5 = sub_1D16107C8();
    v6 = swift_bridgeObjectRetain();
    v7 = MEMORY[0x1D17E8B08](v6, v5);
    v9 = v8;
    swift_bridgeObjectRelease();
    sub_1D141BCB4(v7, v9, &v11);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v1, v2, "Clearing chat tombstones for recordIDs: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v4, -1, -1);
    MEMORY[0x1D17EB0AC](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return IMDChatClearPendingDeleteChatsTable();
}

uint64_t _s20CloudDeletionErrrorsOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D1610724 + 4 * byte_1D1683E10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D1610744 + 4 * byte_1D1683E15[v4]))();
}

_BYTE *sub_1D1610724(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D1610744(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D161074C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D1610754(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D161075C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D1610764(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s20CloudDeletionErrrorsOMa()
{
  return &_s20CloudDeletionErrrorsON;
}

unint64_t sub_1D1610784()
{
  unint64_t result;

  result = qword_1EFC62218;
  if (!qword_1EFC62218)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D1683EC0, &_s20CloudDeletionErrrorsON);
    atomic_store(result, (unint64_t *)&qword_1EFC62218);
  }
  return result;
}

unint64_t sub_1D16107C8()
{
  unint64_t result;

  result = qword_1ED935BB0;
  if (!qword_1ED935BB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED935BB0);
  }
  return result;
}

unint64_t sub_1D1610804()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1ED935BB8;
  if (!qword_1ED935BB8)
  {
    v1 = sub_1D16107C8();
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED935BB8);
  }
  return result;
}

id ScheduledMessageStore.recordZoneID.getter()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_scheduledMessageRecordZoneID);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ScheduledMessageStore.messageRecordsToUploadToCloudKit(withLimit:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  id v9;
  unint64_t v10;
  uint64_t v11;

  v2 = v1;
  if (qword_1ED935888 != -1)
    swift_once();
  v4 = sub_1D166D964();
  sub_1D141AC1C(v4, (uint64_t)qword_1ED936578);
  v5 = sub_1D166D94C();
  v6 = sub_1D166DD9C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1D1413000, v5, v6, "Trying to Load Scheduled Message Records that need CK Sync", v7, 2u);
    MEMORY[0x1D17EB0AC](v7, -1, -1);
  }

  v8 = objc_msgSend(v2, sel_scheduledMessagesBatchFetcherForSyncState_, 0);
  objc_msgSend(v8, sel_setBatchSize_, a1);
  v9 = objc_msgSend(v8, sel_nextBatch);
  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED9355E0);
  v10 = sub_1D166DBEC();

  v11 = sub_1D1610BF4(v10, (unint64_t *)&unk_1ED9355E0);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1D1610AB4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1D164F740(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_bridgeObjectRetain();
      sub_1D141AC58(&qword_1EFC61E18);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D164F740(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1D164F740(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1D141B3E4(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1D1610BE0(unint64_t a1)
{
  return sub_1D1610BF4(a1, (unint64_t *)&qword_1EFC62000);
}

uint64_t sub_1D1610BF4(unint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  id *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v15 = MEMORY[0x1E0DEE9D8];
  result = sub_1D164F740(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        MEMORY[0x1D17E8FD0](i, a1);
        sub_1D15FD3C0(0, a2);
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D164F740(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v9 = *(_QWORD *)(v5 + 16);
        v8 = *(_QWORD *)(v5 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_1D164F740(v8 > 1, v9 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v9 + 1;
        sub_1D141B3E4(v14, (_OWORD *)(v5 + 32 * v9 + 32));
      }
    }
    else
    {
      v10 = (id *)(a1 + 32);
      sub_1D15FD3C0(0, a2);
      do
      {
        v11 = *v10;
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D164F740(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v13 = *(_QWORD *)(v5 + 16);
        v12 = *(_QWORD *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1D164F740(v12 > 1, v13 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v13 + 1;
        sub_1D141B3E4(v14, (_OWORD *)(v5 + 32 * v13 + 32));
        ++v10;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

id ScheduledMessageStore.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ScheduledMessageStore.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ScheduledMessageStore.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s12IMDaemonCore21ScheduledMessageStoreC25recordIDsAndGUIDsToDelete9withLimitSaySDys11AnyHashableVypGGs5Int64V_tF_0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  uint64_t v7;

  if (qword_1ED935888 != -1)
    swift_once();
  v2 = sub_1D166D964();
  sub_1D141AC1C(v2, (uint64_t)qword_1ED936578);
  v3 = sub_1D166D94C();
  v4 = sub_1D166DD9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1D1413000, v3, v4, "Trying to Get RecordIDs & GUIDs to Delete", v5, 2u);
    MEMORY[0x1D17EB0AC](v5, -1, -1);
  }

  v6 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_synchronousDatabase), sel_scheduledMessagesMetadataPendingCloudKitDeleteWithLimit_, a1);
  swift_unknownObjectRelease();
  sub_1D141AC58(&qword_1ED935B90);
  v7 = sub_1D166DBEC();

  return v7;
}

void _s12IMDaemonCore21ScheduledMessageStoreC15clearTombstones12forRecordIDsySaySo10CKRecordIDCG_tF_0(unint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;

  if (qword_1ED935B68 != -1)
    swift_once();
  v2 = sub_1D166D964();
  sub_1D141AC1C(v2, (uint64_t)qword_1ED936590);
  swift_bridgeObjectRetain_n();
  v3 = sub_1D166D94C();
  v4 = sub_1D166DD9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v27 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935BB0);
    v8 = swift_bridgeObjectRetain();
    v9 = MEMORY[0x1D17E8B08](v8, v7);
    v11 = v10;
    swift_bridgeObjectRelease();
    v26 = sub_1D141BCB4(v9, v11, &v27);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v3, v4, "Clearing message tombstones for recordIDs: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v6, -1, -1);
    MEMORY[0x1D17EB0AC](v5, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v12)
    goto LABEL_17;
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1D164F570(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    v13 = 0;
    v14 = v27;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v15 = (id)MEMORY[0x1D17E8FD0](v13, a1);
      else
        v15 = *(id *)(a1 + 8 * v13 + 32);
      v16 = v15;
      v17 = objc_msgSend(v15, sel_recordName, v26);
      v18 = sub_1D166DACC();
      v20 = v19;

      v27 = v14;
      v22 = *(_QWORD *)(v14 + 16);
      v21 = *(_QWORD *)(v14 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1D164F570(v21 > 1, v22 + 1, 1);
        v14 = v27;
      }
      ++v13;
      *(_QWORD *)(v14 + 16) = v22 + 1;
      v23 = v14 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v18;
      *(_QWORD *)(v23 + 40) = v20;
    }
    while (v12 != v13);
LABEL_17:
    v24 = objc_msgSend((id)objc_opt_self(), sel_synchronousDatabase);
    v25 = (void *)sub_1D166DBD4();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_deleteTombstonedScheduledMessagesWithRecordIDs_, v25);
    swift_unknownObjectRelease();

    return;
  }
  __break(1u);
}

uint64_t type metadata accessor for ScheduledMessageStore()
{
  return objc_opt_self();
}

uint64_t sub_1D16114C0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v15 = MEMORY[0x1E0DEE9D8];
    result = sub_1D164F570(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v15;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1D17E8FD0](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_internalName);
      v9 = sub_1D166DACC();
      v11 = v10;

      v13 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      if (v13 >= v12 >> 1)
        sub_1D164F570(v12 > 1, v13 + 1, 1);
      ++v5;
      *(_QWORD *)(v15 + 16) = v13 + 1;
      v14 = v15 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t IncomingClientConnectionListener.machServiceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IncomingClientConnectionListener.allowedEntitlements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D161166C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

id *IncomingClientConnectionListener.__allocating_init(machServiceName:allowedEntitlements:requestHandlers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  return IncomingClientConnectionListener.init(machServiceName:allowedEntitlements:requestHandlers:)(a1, a2, a3, a4);
}

id *IncomingClientConnectionListener.init(machServiceName:allowedEntitlements:requestHandlers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  void *v9;
  dispatch_workloop_t v10;
  id v11;
  void *v12;
  id v13;
  id *v14;
  objc_super v16;

  swift_defaultActor_initialize();
  v4[18] = MEMORY[0x1E0DEE9D8];
  swift_retain();
  v9 = (void *)sub_1D166DAA8();
  v10 = IMDCreateWorkloop(v9);

  v4[14] = a1;
  v4[15] = a2;
  v4[16] = a3;
  v4[19] = a4;
  v4[20] = v10;
  v11 = objc_allocWithZone(MEMORY[0x1E0CB3B58]);
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1D166DAA8();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithMachServiceName_, v12);

  v4[17] = v13;
  swift_release();
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for IncomingClientConnectionListener();
  v14 = (id *)objc_msgSendSuper2(&v16, sel_init);
  objc_msgSend(v14[17], sel_setDelegate_, v14);
  return v14;
}

uint64_t type metadata accessor for IncomingClientConnectionListener()
{
  return objc_opt_self();
}

uint64_t IncomingClientConnectionListener.deinit()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 136), sel_invalidate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t IncomingClientConnectionListener.__deallocating_deinit()
{
  IncomingClientConnectionListener.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1D16118A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1D16118B8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  if (qword_1ED935748 != -1)
    swift_once();
  v1 = sub_1D166D964();
  sub_1D141AC1C(v1, (uint64_t)qword_1ED936548);
  swift_retain();
  v2 = sub_1D166D94C();
  v3 = sub_1D166DD6C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 24);
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v11 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = *(_QWORD *)(v5 + 112);
    v9 = *(_QWORD *)(v5 + 120);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_1D141BCB4(v8, v9, &v11);
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_1D1413000, v2, v3, "Resuming XPC listener for %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v7, -1, -1);
    MEMORY[0x1D17EB0AC](v6, -1, -1);
  }
  else
  {
    swift_release();
  }

  objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24) + 136), sel_resume);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1D1611A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  if (qword_1ED935748 != -1)
    swift_once();
  v2 = sub_1D166D964();
  sub_1D141AC1C(v2, (uint64_t)qword_1ED936548);
  swift_retain();
  v3 = sub_1D166D94C();
  v4 = sub_1D166DD6C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = *(_QWORD *)(v1 + 112);
    v8 = *(_QWORD *)(v1 + 120);
    swift_bridgeObjectRetain();
    v10 = sub_1D141BCB4(v7, v8, &v11);
    sub_1D166DF28();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v3, v4, "Invalidating XPC listener for %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v6, -1, -1);
    MEMORY[0x1D17EB0AC](v5, -1, -1);

  }
  else
  {

    swift_release();
  }
  return objc_msgSend(*(id *)(v1 + 136), sel_invalidate, v10, v11);
}

uint64_t sub_1D1611C34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = v1;
  return swift_task_switch();
}

uint64_t sub_1D1611C4C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  if (qword_1ED935748 != -1)
    swift_once();
  v1 = (void *)v0[10];
  v2 = sub_1D166D964();
  v0[12] = sub_1D141AC1C(v2, (uint64_t)qword_1ED936548);
  swift_retain();
  v3 = v1;
  v4 = sub_1D166D94C();
  v5 = sub_1D166DD6C();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (void *)v0[10];
  v8 = v0[11];
  if (v6)
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v17 = v10;
    *(_DWORD *)v9 = 136315394;
    v12 = *(_QWORD *)(v8 + 112);
    v11 = *(_QWORD *)(v8 + 120);
    swift_bridgeObjectRetain();
    v0[2] = sub_1D141BCB4(v12, v11, &v17);
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v9 + 12) = 1024;
    *((_DWORD *)v0 + 4) = objc_msgSend(v7, sel_processIdentifier);
    sub_1D166DF28();

    _os_log_impl(&dword_1D1413000, v4, v5, "Configuring XPC connection for %s from PID %d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v10, -1, -1);
    MEMORY[0x1D17EB0AC](v9, -1, -1);
  }
  else
  {
    swift_release();

  }
  v13 = (void *)v0[10];
  v14 = v0[11];
  type metadata accessor for XPCClientConnectionRouteProvider();
  swift_allocObject();
  v15 = v13;
  v0[13] = sub_1D1608AC0(v15);

  v0[14] = *(_QWORD *)(v14 + 152);
  sub_1D166DCA0();
  swift_bridgeObjectRetain();
  v0[15] = sub_1D166DC94();
  sub_1D166DC64();
  return swift_task_switch();
}

uint64_t sub_1D1611EBC()
{
  uint64_t v0;
  id v1;
  id v2;
  unint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
  v2 = objc_msgSend(v1, sel_allServices);

  sub_1D15FD3C0(0, &qword_1ED935008);
  v3 = sub_1D166DBEC();

  v4 = sub_1D16114C0(v3);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 128) = sub_1D16308B0(v4);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D1611FAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  void *v26;
  uint8_t *v27;

  v1 = v0[16];
  v2 = v0[13];
  v3 = v0[14];
  v5 = (void *)v0[10];
  v4 = v0[11];
  type metadata accessor for ClientConnection();
  v6 = swift_allocObject();
  v7 = sub_1D16309E4(v2, 0, v3, v1, v6);
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel__setQueue_, *(_QWORD *)(v4 + 160));
  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED935790);
  v8 = (void *)sub_1D166DDA8();
  objc_msgSend(v5, sel_setExportedInterface_, v8);

  v9 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  v0[2] = MEMORY[0x1E0C809B0];
  v0[6] = sub_1D141C24C;
  v0[7] = v7;
  v0[3] = 1107296256;
  v0[4] = sub_1D1416674;
  v0[5] = &unk_1E9230810;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  v11 = objc_msgSend(v9, sel_initWithProtocol_forwardingHandler_, &unk_1EFCC90E8, v10);
  _Block_release(v10);
  swift_release();
  v0[9] = &unk_1EFCC90E8;
  objc_msgSend(v5, sel_setExportedObject_, swift_dynamicCastObjCProtocolUnconditional());

  v12 = (void *)sub_1D166DDB4();
  objc_msgSend(v5, sel_setRemoteObjectInterface_, v12);

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v5;
  v0[6] = sub_1D161329C;
  v0[7] = v13;
  v14 = MEMORY[0x1E0C809B0];
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_1D141BC88;
  v0[5] = &unk_1E9230860;
  v15 = _Block_copy(v0 + 2);
  v16 = v5;
  swift_release();
  objc_msgSend(v16, sel_setInterruptionHandler_, v15);
  _Block_release(v15);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16;
  v17[3] = v7;
  v17[4] = v4;
  v0[6] = sub_1D16132D8;
  v0[7] = v17;
  v0[2] = v14;
  v0[3] = 1107296256;
  v0[4] = sub_1D141BC88;
  v0[5] = &unk_1E92308B0;
  v18 = _Block_copy(v0 + 2);
  swift_retain();
  v19 = v16;
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_setInvalidationHandler_, v18);
  _Block_release(v18);
  swift_beginAccess();
  v20 = swift_retain();
  MEMORY[0x1D17E8AD8](v20);
  if (*(_QWORD *)((*(_QWORD *)(v4 + 144) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v4 + 144) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_1D166DC1C();
  v21 = (void *)v0[10];
  sub_1D166DC34();
  sub_1D166DC04();
  swift_endAccess();
  objc_msgSend(v21, sel_resume);
  v22 = v21;
  v23 = sub_1D166D94C();
  v24 = sub_1D166DD6C();
  v25 = os_log_type_enabled(v23, v24);
  v26 = (void *)v0[10];
  if (v25)
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v27 = 67109120;
    *((_DWORD *)v0 + 4) = objc_msgSend(v26, sel_processIdentifier);
    sub_1D166DF28();

    _os_log_impl(&dword_1D1413000, v23, v24, "Resumed connection for PID %d", v27, 8u);
    MEMORY[0x1D17EB0AC](v27, -1, -1);

    swift_release();
  }
  else
  {
    swift_release();

  }
  return ((uint64_t (*)(void))v0[1])();
}

void sub_1D16123D8(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;

  if (qword_1ED935748 != -1)
    swift_once();
  v2 = sub_1D166D964();
  sub_1D141AC1C(v2, (uint64_t)qword_1ED936548);
  v6 = a1;
  v3 = sub_1D166D94C();
  v4 = sub_1D166DD6C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67109120;
    objc_msgSend(v6, sel_processIdentifier);
    sub_1D166DF28();

    _os_log_impl(&dword_1D1413000, v3, v4, "Connection interrupted for PID %d", v5, 8u);
    MEMORY[0x1D17EB0AC](v5, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1D1612528(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _DWORD v18[4];

  v6 = sub_1D141AC58((uint64_t *)&unk_1ED935780);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED935748 != -1)
    swift_once();
  v9 = sub_1D166D964();
  sub_1D141AC1C(v9, (uint64_t)qword_1ED936548);
  v10 = a1;
  v11 = sub_1D166D94C();
  v12 = sub_1D166DD6C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v13 = 67109120;
    v18[3] = objc_msgSend(v10, sel_processIdentifier);
    sub_1D166DF28();

    _os_log_impl(&dword_1D1413000, v11, v12, "Connection invalidated for PID %d", v13, 8u);
    MEMORY[0x1D17EB0AC](v13, -1, -1);

  }
  else
  {

  }
  sub_1D166D7CC();
  v14 = sub_1D166DCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  v15 = sub_1D16132E4();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = v15;
  v16[4] = a3;
  v16[5] = a2;
  swift_retain_n();
  swift_retain();
  sub_1D1641B5C((uint64_t)v8, (uint64_t)&unk_1EFC62370, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1D161274C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_1D1607C7C;
  v8[5] = a5;
  v8[6] = a4;
  return swift_task_switch();
}

uint64_t sub_1D16127B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_1D16127C8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  if (qword_1ED935748 != -1)
    swift_once();
  v1 = sub_1D166D964();
  sub_1D141AC1C(v1, (uint64_t)qword_1ED936548);
  swift_retain_n();
  v2 = sub_1D166D94C();
  v3 = sub_1D166DD6C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136315138;
    v11 = v5;
    sub_1D166D7CC();
    *(_QWORD *)(v0 + 16) = sub_1D141BCB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &v11);
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D1413000, v2, v3, "Removing client %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v5, -1, -1);
    MEMORY[0x1D17EB0AC](v4, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v6 = *(_QWORD *)(v0 + 40);
  v7 = (unint64_t *)(*(_QWORD *)(v0 + 48) + 144);
  swift_beginAccess();
  swift_retain();
  v8 = sub_1D1612E10(v7, v6);
  result = swift_release();
  if (*v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D166E15C();
    result = swift_bridgeObjectRelease();
    if (v10 >= v8)
      goto LABEL_8;
  }
  else
  {
    v10 = *(_QWORD *)((*v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10 >= v8)
    {
LABEL_8:
      sub_1D1619800(v8, v10);
      swift_endAccess();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  __break(1u);
  return result;
}

void IncomingClientConnectionListener.__allocating_init()()
{
  swift_allocObject();
  swift_defaultActor_initialize();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void IncomingClientConnectionListener.init()()
{
  swift_defaultActor_initialize();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t IncomingClientConnectionListener.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D1612AF0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D1612AFC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D1607C7C;
  v3[3] = v2;
  return swift_task_switch();
}

Swift::Bool __swiftcall IncomingClientConnectionListener.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  return sub_1D141BE4C(shouldAcceptNewConnection.super.isa);
}

uint64_t sub_1D1612B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_1D1607C7C;
  v8[10] = a5;
  v8[11] = a4;
  return swift_task_switch();
}

void (*sub_1D1612BC8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1D1612C48(v6, a2, a3);
  return sub_1D1612C1C;
}

void sub_1D1612C1C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1D1612C48(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1D17E8FD0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1D1612CB4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D1612CB4()
{
  return swift_release();
}

void sub_1D1612CBC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1D17E8FDCLL);
}

uint64_t sub_1D1612D24(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1D17E8FD0](v5, a1);
        swift_unknownObjectRelease();
        if (v6 == a2)
          return v5;
      }
      else if (*(_QWORD *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1))
        break;
      if (++v5 == v4)
        return 0;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    v4 = sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1D1612E10(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  unint64_t i;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  int v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v5 = swift_bridgeObjectRetain();
  v6 = sub_1D1612D24(v5, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v2)
    return v6;
  if ((v8 & 1) == 0)
  {
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_54;
    if (*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      v22 = sub_1D166E15C();
      swift_bridgeObjectRelease();
      if (v9 != v22)
        goto LABEL_6;
    }
    else if (v9 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (i = v6 + 5; ; ++i)
      {
        v11 = i - 4;
        v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
          break;
        if ((v11 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        if (v11 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_45;
        if (*(_QWORD *)(v12 + 8 * i) != a2)
          goto LABEL_11;
LABEL_31:
        v9 = i - 3;
        if (__OFADD__(v11, 1))
          goto LABEL_46;
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v18 = sub_1D166E15C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v18 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v18)
          return v6;
      }
      v19 = MEMORY[0x1D17E8FD0](i - 4);
      swift_unknownObjectRelease();
      if (v19 == a2)
        goto LABEL_31;
LABEL_11:
      if (v11 == v6)
      {
LABEL_30:
        if (__OFADD__(v6++, 1))
          goto LABEL_47;
        goto LABEL_31;
      }
      v9 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v13 = MEMORY[0x1D17E8FD0](v6, *a1);
        v9 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_16:
          if ((v11 & 0x8000000000000000) != 0)
            goto LABEL_50;
          if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_51;
          v14 = *(_QWORD *)(v9 + 8 * i);
          swift_retain();
          goto LABEL_19;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0)
          goto LABEL_48;
        if (v6 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_49;
        v13 = *(_QWORD *)(v9 + 8 * v6 + 32);
        swift_retain();
        if ((v9 & 0xC000000000000001) == 0)
          goto LABEL_16;
      }
      v14 = MEMORY[0x1D17E8FD0](i - 4, v9);
      v9 = *a1;
LABEL_19:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v9 & 0x8000000000000000) != 0
        || (v9 & 0x4000000000000000) != 0)
      {
        sub_1D1612CBC(v9);
      }
      *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v14;
      swift_release();
      sub_1D166DC04();
      v9 = *a1;
      v16 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!v16 || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
        sub_1D1612CBC(v9);
      if ((v11 & 0x8000000000000000) != 0)
        goto LABEL_52;
      if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_53;
      *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v13;
      swift_release();
      sub_1D166DC04();
      goto LABEL_30;
    }
    return v6;
  }
  v20 = *a1;
  if (!(v20 >> 62))
    return *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v23 = sub_1D166E15C();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t method lookup function for IncomingClientConnectionListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IncomingClientConnectionListener.connectedClients.getter()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D161319C;
  return v5();
}

uint64_t sub_1D161319C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of IncomingClientConnectionListener.__allocating_init(machServiceName:allowedEntitlements:requestHandlers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of IncomingClientConnectionListener.resume()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D1607C7C;
  return v5();
}

uint64_t dispatch thunk of IncomingClientConnectionListener.invalidate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t sub_1D1613278()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1D161329C()
{
  uint64_t v0;

  sub_1D16123D8(*(void **)(v0 + 16));
}

uint64_t sub_1D16132A4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D16132D8()
{
  uint64_t v0;

  return sub_1D1612528(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

unint64_t sub_1D16132E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED935AF8;
  if (!qword_1ED935AF8)
  {
    v1 = type metadata accessor for IncomingClientConnectionListener();
    result = MEMORY[0x1D17EAFE0](&protocol conformance descriptor for IncomingClientConnectionListener, v1);
    atomic_store(result, (unint64_t *)&qword_1ED935AF8);
  }
  return result;
}

uint64_t sub_1D1613328()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D161335C()
{
  int8x16_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  int8x16_t v5;

  v2 = (_QWORD *)swift_task_alloc();
  v5 = v0[2];
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1D141C488;
  v3 = swift_task_alloc();
  v2[2] = v3;
  *(_QWORD *)v3 = v2;
  *(_QWORD *)(v3 + 8) = sub_1D1607C7C;
  *(int8x16_t *)(v3 + 40) = vextq_s8(v5, v5, 8uLL);
  return swift_task_switch();
}

uint64_t sub_1D16133F0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D1613424()
{
  int8x16_t *v0;
  uint64_t v1;
  _QWORD *v2;
  int8x16_t *v3;
  int8x16_t v5;

  v2 = (_QWORD *)swift_task_alloc();
  v5 = v0[2];
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1D1607C7C;
  v3 = (int8x16_t *)swift_task_alloc();
  v2[2] = v3;
  v3->i64[0] = (uint64_t)v2;
  v3->i64[1] = (uint64_t)sub_1D1607C7C;
  v3[5] = vextq_s8(v5, v5, 8uLL);
  return swift_task_switch();
}

void static IMDFilePurgeabilityMonitor.Constants.fileEventsMask.getter(_DWORD *a1@<X8>)
{
  *a1 = 4215552;
}

id sub_1D16134D8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)IMDFilePurgeabilityMonitor), sel_init);
  qword_1ED935638 = (uint64_t)result;
  return result;
}

id static IMDFilePurgeabilityMonitor.shared()()
{
  if (qword_1ED935648 != -1)
    swift_once();
  return (id)qword_1ED935638;
}

id sub_1D1613588()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  objc_super v17;

  v1 = v0;
  v2 = sub_1D166DDFC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D166D9F4();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1D166DDF0();
  MEMORY[0x1E0C80A78](v7);
  v8 = OBJC_IVAR___IMDFilePurgeabilityMonitor_purgeabilityQueue;
  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED9357D0);
  v9 = v1;
  sub_1D166DDE4();
  sub_1D166D9E8();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v2);
  *(_QWORD *)&v1[v8] = sub_1D166DE2C();

  v17.receiver = v9;
  v17.super_class = (Class)IMDFilePurgeabilityMonitor;
  v10 = objc_msgSendSuper2(&v17, sel_init);
  v11 = (void *)objc_opt_self();
  v12 = v10;
  v13 = objc_msgSend(v11, sel_defaultCenter);
  v14 = qword_1ED935608;
  v15 = v12;
  if (v14 != -1)
    swift_once();
  objc_msgSend(v13, sel_addObserver_selector_name_object_, v15, sel_observeFileEvents_, qword_1ED936500, 0);

  return v15;
}

void sub_1D16137DC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE v11[40];
  __int128 v12;
  __int128 v13;

  if (qword_1ED935000 != -1)
    swift_once();
  v0 = sub_1D166D964();
  sub_1D141AC1C(v0, (uint64_t)qword_1ED9364D0);
  v1 = sub_1D166D94C();
  v2 = sub_1D166DD9C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1D1413000, v1, v2, "Received notification", v3, 2u);
    MEMORY[0x1D17EB0AC](v3, -1, -1);
  }

  v4 = sub_1D166D454();
  if (v4)
  {
    v5 = v4;
    sub_1D166E048();
    if (*(_QWORD *)(v5 + 16) && (v6 = sub_1D141B48C((uint64_t)v11), (v7 & 1) != 0))
    {
      sub_1D141B3A8(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v12);
    }
    else
    {
      v12 = 0u;
      v13 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1D1607C44((uint64_t)v11);
    if (*((_QWORD *)&v13 + 1))
    {
      sub_1D141AC58(&qword_1ED935040);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1D1613A20(0x6E657645656C6966);
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      sub_1D141BA80((uint64_t)&v12, &qword_1ED935840);
    }
  }
  v8 = sub_1D166D94C();
  v9 = sub_1D166DD9C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1D1413000, v8, v9, "Received notification but no file events present", v10, 2u);
    MEMORY[0x1D17EB0AC](v10, -1, -1);
  }

}

uint64_t sub_1D1613A20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v2 = sub_1D166D9F4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D166D9C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D166D9B8();
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_1D1616450;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D141BC88;
  aBlock[3] = &unk_1E92309D8;
  v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D166D9E8();
  MEMORY[0x1D17E8D30](0, v5, v9, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  return swift_release();
}

void sub_1D1613C70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  uint64_t v9;
  unint64_t *v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  unint64_t v34;
  void *v35;
  unint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  void *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[3];
  uint64_t v74;
  int v75;
  uint64_t v76;

  v3 = a2 + 16;
  if (qword_1ED935000 != -1)
    swift_once();
  v4 = sub_1D166D964();
  sub_1D141AC1C(v4, (uint64_t)qword_1ED9364D0);
  swift_bridgeObjectRetain();
  v5 = sub_1D166D94C();
  v6 = sub_1D166DD9C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    v76 = *(_QWORD *)(a1 + 16);
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v5, v6, "Processing %ld file events", v7, 0xCu);
    MEMORY[0x1D17EB0AC](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v8 = (void *)MEMORY[0x1D17EB154](v3);
  if (!v8)
    return;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {

    return;
  }
  v66 = v8;
  swift_bridgeObjectRetain();
  v10 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v11 = *((_DWORD *)v10 - 4);
    if ((v11 & 0x20000) != 0)
      goto LABEL_11;
    v12 = *(v10 - 1);
    v13 = *v10;
    if ((~v11 & 0x300) != 0)
      v14 = v11 & 0x405300;
    else
      v14 = 512;
    v75 = v14;
    if ((v14 & 0x401000) == 0 || (v14 & 0x200) != 0)
    {
LABEL_35:

      swift_bridgeObjectRelease();
      return;
    }
    LODWORD(v73[0]) = v14;
    swift_bridgeObjectRetain();
    v16 = sub_1D1616874(v73);
    v18 = v17;
    v19 = sub_1D1616950(v12, v13);
    v20 = sub_1D16652D8();
    if (!v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44 = sub_1D166D94C();
      v45 = sub_1D166DD84();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = swift_slowAlloc();
        v47 = v19;
        v48 = swift_slowAlloc();
        v73[0] = v48;
        *(_DWORD *)v46 = 136315650;
        swift_bridgeObjectRetain();
        v74 = sub_1D141BCB4(v16, v18, v73);
        sub_1D166DF28();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v46 + 12) = 1024;
        LODWORD(v74) = v47 & 1;
        sub_1D166DF28();
        *(_WORD *)(v46 + 18) = 2080;
        swift_bridgeObjectRetain();
        v74 = sub_1D141BCB4(v12, v13, v73);
        sub_1D166DF28();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D1413000, v44, v45, "File [%s], isPurgeableOnDisk? %{BOOL}d. Could not find attachment guid for filePath: %s", (uint8_t *)v46, 0x1Cu);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v48, -1, -1);
        MEMORY[0x1D17EB0AC](v46, -1, -1);

        return;
      }

      swift_bridgeObjectRelease_n();
LABEL_50:
      swift_bridgeObjectRelease_n();

      return;
    }
    v22 = v20;
    v23 = v21;
    v69 = v19;
    v71 = v9;
    swift_bridgeObjectRelease();
    v24 = (void *)objc_opt_self();
    v25 = objc_msgSend(v24, sel_sharedInstance);
    if (!v25)
      break;
    v26 = v25;
    v27 = (void *)sub_1D166DAA8();
    v28 = objc_msgSend(v26, sel_attachmentWithGUID_, v27);

    if (!v28)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = v66;
      swift_bridgeObjectRetain();
      v50 = v49;
      v51 = sub_1D166D94C();
      v52 = sub_1D166DD84();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = swift_slowAlloc();
        v54 = swift_slowAlloc();
        v74 = v54;
        *(_DWORD *)v53 = 136315394;
        swift_beginAccess();
        LODWORD(v72) = v75;
        v55 = sub_1D1616874(&v72);
        v72 = sub_1D141BCB4(v55, v56, &v74);
        sub_1D166DF28();

        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 12) = 2080;
        swift_bridgeObjectRetain();
        v72 = sub_1D141BCB4(v12, v13, &v74);
        sub_1D166DF28();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D1413000, v51, v52, "FSEvents indicates we %s for filePath %s but we didn't find attachment in attachment store!", (uint8_t *)v53, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v54, -1, -1);
        MEMORY[0x1D17EB0AC](v53, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return;
    }
    v29 = (void *)sub_1D166DAA8();
    v30 = (void *)IMDAttachmentRecordCopyMessageForAttachmentGUID();

    if (!v30)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v57 = sub_1D166D94C();
      v58 = sub_1D166DD84();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc();
        v60 = swift_slowAlloc();
        v73[0] = v60;
        *(_DWORD *)v59 = 136315138;
        swift_bridgeObjectRetain();
        v74 = sub_1D141BCB4(v22, v23, v73);
        sub_1D166DF28();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D1413000, v57, v58, "Could not get IMDMessageRecordRef for attachment guid %s", v59, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v60, -1, -1);
        MEMORY[0x1D17EB0AC](v59, -1, -1);

        return;
      }

      goto LABEL_50;
    }
    v31 = IMDCreateIMMessageItemFromIMDMessageRecordRef((uint64_t)v30, 0);
    if (!v31)
    {
      swift_bridgeObjectRelease();
LABEL_44:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v61 = sub_1D166D94C();
      v62 = sub_1D166DD84();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc();
        v64 = swift_slowAlloc();
        v73[0] = v64;
        *(_DWORD *)v63 = 136315138;
        swift_bridgeObjectRetain();
        v74 = sub_1D141BCB4(v22, v23, v73);
        sub_1D166DF28();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D1413000, v61, v62, "Could not create IMMessageItem from IMDMessageRecordRef for attachment guid %s", v63, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v64, -1, -1);
        MEMORY[0x1D17EB0AC](v63, -1, -1);

        return;
      }

      goto LABEL_50;
    }
    v32 = (void *)v31;
    objc_opt_self();
    v33 = (void *)swift_dynamicCastObjCClass();
    if (!v33)
    {
      swift_bridgeObjectRelease();

      goto LABEL_44;
    }
    v67 = v24;
    v68 = v22;
    v70 = v23;
    v34 = sub_1D1616F34(v12, v13, v28, v33);
    LOBYTE(v65) = BYTE1(v34) & 1;
    if (!objc_msgSend((id)objc_opt_self(), sel_canMarkPurgeableWithCKSyncState_transferState_isAudio_isSticker_isGroupPhoto_isPluginPayload_isRichLink_, objc_msgSend(v28, sel_cloudKitSyncState), objc_msgSend(v28, sel_transferState), (v34 >> 24) & 1, v34 & 1, HIDWORD(v34) & 1, (v34 >> 16) & 1, v65)|| (v35 = v28, (v69 & 1) != 0))
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = v13;
      swift_bridgeObjectRetain_n();
      v37 = sub_1D166D94C();
      v38 = sub_1D166DD9C();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        v73[0] = v40;
        *(_DWORD *)v39 = 67109634;
        LODWORD(v74) = 1;
        sub_1D166DF28();
        *(_WORD *)(v39 + 8) = 1024;
        LODWORD(v74) = 0;
        sub_1D166DF28();
        *(_WORD *)(v39 + 14) = 2080;
        swift_bridgeObjectRetain();
        v74 = sub_1D141BCB4(v12, v36, v73);
        sub_1D166DF28();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D1413000, v37, v38, "Purgeability mismatch detected!\n    isPurgeableOnDatabase: %{BOOL}d\n    isPurgeableOnDisk: %{BOOL}d\n    filePath: %s", (uint8_t *)v39, 0x18u);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v40, -1, -1);
        MEMORY[0x1D17EB0AC](v39, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v41 = objc_msgSend(v67, sel_sharedInstance);
      if (!v41)
        goto LABEL_53;
      v42 = v41;
      v43 = (void *)sub_1D166DAA8();
      objc_msgSend(v42, sel_markAttachmentPurgeable_, v43);

      sub_1D1614894(v12, v36);
      sub_1D161744C(v68, v70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    v9 = v71;
LABEL_11:
    v10 += 4;
    if (!--v9)
      goto LABEL_35;
  }
  __break(1u);
LABEL_53:
  __break(1u);
}

void sub_1D1614894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  unsigned __int8 v17;
  id v18;
  void *v19;
  void *v20;
  unsigned int v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  id v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v50 = a1;
  v52 = a2;
  v2 = sub_1D141AC58((uint64_t *)&unk_1ED935780);
  MEMORY[0x1E0C80A78](v2);
  v51 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D166D628();
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v49 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v49 - v11;
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_messagesDomain);
  if (!v14)
    return;
  v15 = v14;
  v16 = (void *)sub_1D166DAA8();
  v17 = objc_msgSend(v15, sel_BOOLForKey_, v16);

  if ((v17 & 1) != 0)
    return;
  v18 = objc_msgSend(v13, sel_messagesDomain);
  if (!v18)
    return;
  v19 = v18;
  v20 = (void *)sub_1D166DAA8();
  v21 = objc_msgSend(v19, sel_BOOLForKey_, v20);

  if (!v21)
    return;
  v22 = objc_msgSend(v13, sel_messagesDomain);
  if (v22)
  {
    v23 = v22;
    v24 = (void *)sub_1D166DAA8();
    objc_msgSend(v23, sel_doubleForKey_, v24);

    v25 = (void *)sub_1D166DAA8();
    v26 = IMBagIntValueWithDefault();

    sub_1D166D5E0();
    sub_1D166D61C();
    if ((unsigned __int128)(v26 * (__int128)60) >> 64 == (60 * v26) >> 63)
    {
      v28 = v53;
      v27 = v54;
      if ((unsigned __int128)(60 * v26 * (__int128)60) >> 64 == (3600 * v26) >> 63)
      {
        sub_1D166D5A4();
        if (v29 > (double)(3600 * v26))
        {
          v30 = objc_msgSend(v13, sel_messagesDomain);
          if (v30)
          {
            v31 = v30;
            sub_1D166D61C();
            sub_1D166D5EC();
            (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v27);
            v32 = (void *)sub_1D166DCD0();
            v33 = (void *)sub_1D166DAA8();
            objc_msgSend(v31, sel_setValue_forKey_, v32, v33);

          }
          v34 = sub_1D166DCB8();
          v35 = (uint64_t)v51;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v51, 1, 1, v34);
          v36 = swift_allocObject();
          swift_unknownObjectWeakInit();
          v37 = (_QWORD *)swift_allocObject();
          v37[2] = 0;
          v37[3] = 0;
          v38 = v50;
          v37[4] = v36;
          v37[5] = v38;
          v37[6] = v52;
          swift_bridgeObjectRetain();
          sub_1D1641B5C(v35, (uint64_t)&unk_1EFC62B50, (uint64_t)v37);
          swift_release();
        }
        v39 = *(void (**)(char *, uint64_t))(v28 + 8);
        v39(v10, v27);
        v39(v12, v27);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  v40 = objc_msgSend(v13, sel_messagesDomain);
  if (v40)
  {
    v41 = v40;
    sub_1D166D61C();
    sub_1D166D5EC();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v54);
    v42 = (void *)sub_1D166DCD0();
    v43 = (void *)sub_1D166DAA8();
    objc_msgSend(v41, sel_setValue_forKey_, v42, v43);

  }
  v44 = sub_1D166DCB8();
  v45 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v51, 1, 1, v44);
  v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v47 = (_QWORD *)swift_allocObject();
  v47[2] = 0;
  v47[3] = 0;
  v48 = v50;
  v47[4] = v46;
  v47[5] = v48;
  v47[6] = v52;
  swift_bridgeObjectRetain();
  sub_1D1641B5C(v45, (uint64_t)&unk_1EFC62B40, (uint64_t)v47);
  swift_release();
}

uint64_t sub_1D1614DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return swift_task_switch();
}

uint64_t sub_1D1614DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1D17EB154](v1);
  *(_QWORD *)(v0 + 64) = v2;
  if (!v2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = sub_1D1614E60;
  return sub_1D1614EB4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1D1614E60()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D1614EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[52] = a2;
  v3[53] = v2;
  v3[51] = a1;
  v4 = sub_1D166D658();
  v3[54] = v4;
  v3[55] = *(_QWORD *)(v4 - 8);
  v3[56] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D1614F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t inited;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  void *v30;

  sub_1D15FD3C0(0, &qword_1EFC62B30);
  v1 = sub_1D1615868();
  *(_QWORD *)(v0 + 456) = v1;
  if (v1)
  {
    v30 = (void *)v1;
    v2 = *(_QWORD *)(v0 + 440);
    v3 = *(_QWORD *)(v0 + 448);
    v4 = *(_QWORD *)(v0 + 432);
    v5 = (void *)objc_opt_self();
    sub_1D166D64C();
    sub_1D166D634();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
    v6 = (void *)sub_1D166DAA8();
    swift_bridgeObjectRelease();
    v7 = (void *)sub_1D166DAA8();
    v8 = (void *)sub_1D166DAA8();
    v9 = (void *)sub_1D166DAA8();
    v10 = (void *)sub_1D166DAA8();
    v11 = (void *)sub_1D166DAA8();
    v12 = objc_msgSend(v5, sel_userNotificationWithIdentifier_title_message_defaultButton_alternateButton_otherButton_, v6, v7, v8, v9, v10, v11);

    if (v12)
    {
      sub_1D166DF70();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 320) = 0u;
      *(_OWORD *)(v0 + 336) = 0u;
    }
    sub_1D1617718(v0 + 320, v0 + 224, &qword_1ED935840);
    if (*(_QWORD *)(v0 + 248))
    {
      sub_1D15FD3C0(0, &qword_1EFC62B60);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v17 = *(_QWORD *)(v0 + 416);
        v29 = *(_QWORD *)(v0 + 424);
        v18 = *(_QWORD *)(v0 + 408);
        v19 = *(void **)(v0 + 384);
        *(_QWORD *)(v0 + 464) = v19;
        objc_msgSend(v19, sel_setShowInLockScreen_, 1);
        sub_1D141AC58(&qword_1ED9356C0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1D1683B20;
        *(_QWORD *)(v0 + 352) = 0x68746150656C6966;
        *(_QWORD *)(v0 + 360) = 0xE800000000000000;
        v21 = MEMORY[0x1E0DEA968];
        sub_1D166E048();
        *(_QWORD *)(inited + 96) = v21;
        *(_QWORD *)(inited + 72) = v18;
        *(_QWORD *)(inited + 80) = v17;
        swift_bridgeObjectRetain();
        sub_1D141BB00(inited);
        v22 = (void *)sub_1D166DA18();
        swift_bridgeObjectRelease();
        objc_msgSend(v19, sel_setUserInfo_, v22);

        *(_QWORD *)(v0 + 56) = v0 + 400;
        *(_QWORD *)(v0 + 16) = v0;
        *(_QWORD *)(v0 + 24) = sub_1D1615444;
        v23 = swift_continuation_init();
        *(_QWORD *)(v0 + 184) = MEMORY[0x1E0C809B0];
        v24 = (_QWORD *)(v0 + 184);
        v24[1] = 0x40000000;
        v24[2] = sub_1D1615940;
        v24[3] = &unk_1E9230A50;
        v24[4] = v23;
        objc_msgSend(v30, sel_addUserNotification_listener_completionHandler_, v19, v29, v24);
        return swift_continuation_await();
      }
    }
    else
    {
      sub_1D141BA80(v0 + 224, &qword_1ED935840);
    }
    if (qword_1ED935000 != -1)
      swift_once();
    v26 = sub_1D166D964();
    sub_1D141AC1C(v26, (uint64_t)qword_1ED9364D0);
    v14 = sub_1D166D94C();
    v27 = sub_1D166DD84();
    if (os_log_type_enabled(v14, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1D1413000, v14, v27, "Could not create a user notification for tap to radar", v28, 2u);
      MEMORY[0x1D17EB0AC](v28, -1, -1);
    }

  }
  else
  {
    if (qword_1ED935000 != -1)
      swift_once();
    v13 = sub_1D166D964();
    sub_1D141AC1C(v13, (uint64_t)qword_1ED9364D0);
    v14 = sub_1D166D94C();
    v15 = sub_1D166DD84();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1D1413000, v14, v15, "Tried to launch TapToRadarDraft but could not convert IMUserNotificationCenter.sharedInstance() to IMUserNotificationCenter!", v16, 2u);
      MEMORY[0x1D17EB0AC](v16, -1, -1);
    }
  }

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D1615444()
{
  return swift_task_switch();
}

uint64_t sub_1D1615490()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 400);

  if (qword_1ED935000 != -1)
    swift_once();
  v2 = sub_1D166D964();
  sub_1D141AC1C(v2, (uint64_t)qword_1ED9364D0);
  v3 = v1;
  v4 = sub_1D166D94C();
  v5 = sub_1D166DD9C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    if (v1)
    {
      if (objc_msgSend(v3, sel_identifier))
      {
        sub_1D166DF70();
        swift_unknownObjectRelease();
      }
      else
      {
        *(_OWORD *)(v0 + 288) = 0u;
        *(_OWORD *)(v0 + 304) = 0u;
      }
      sub_1D1617718(v0 + 288, v0 + 256, &qword_1ED935840);
      if (*(_QWORD *)(v0 + 280))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v10 = *(_QWORD *)(v0 + 368);
          v9 = *(_QWORD *)(v0 + 376);
LABEL_16:
          v11 = *(void **)(v0 + 456);
          v13 = *(void **)(v0 + 464);
          *(_QWORD *)(v0 + 392) = sub_1D141BCB4(v10, v9, &v14);
          sub_1D166DF28();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1D1413000, v4, v5, "Finished processing user notification: %s", v6, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D17EB0AC](v7, -1, -1);
          MEMORY[0x1D17EB0AC](v6, -1, -1);

          goto LABEL_17;
        }
        v10 = 0xD00000000000001CLL;
LABEL_15:
        v9 = 0x80000001D1695AC0;
        goto LABEL_16;
      }
    }
    else
    {
      *(_OWORD *)(v0 + 256) = 0u;
      *(_OWORD *)(v0 + 272) = 0u;
    }
    v10 = 0xD00000000000001CLL;
    sub_1D141BA80(v0 + 256, &qword_1ED935840);
    goto LABEL_15;
  }
  v8 = *(void **)(v0 + 456);

LABEL_17:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D1615738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return swift_task_switch();
}

uint64_t sub_1D1615754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1D17EB154](v1);
  *(_QWORD *)(v0 + 64) = v2;
  if (!v2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = sub_1D16157E4;
  return sub_1D1614EB4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1D16157E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D1615838()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D1615868()
{
  uint64_t v1;
  _OWORD v2[2];
  _BYTE v3[24];
  uint64_t v4;

  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sharedInstance))
  {
    sub_1D166DF70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_1D1617718((uint64_t)v2, (uint64_t)v3, &qword_1ED935840);
  if (v4)
  {
    sub_1D15FD3C0(0, &qword_1EFC62B30);
    if (swift_dynamicCast())
      return v1;
    else
      return 0;
  }
  else
  {
    sub_1D141BA80((uint64_t)v3, &qword_1ED935840);
    return 0;
  }
}

uint64_t sub_1D1615940(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v6;

  v2 = *(_QWORD *)(a1 + 32);
  v6 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40);
  v4 = a2;
  sub_1D1617718((uint64_t)&v6, v3, &qword_1EFC62B68);
  return swift_continuation_resume();
}

void IMDFilePurgeabilityMonitor.userNotificationDidFinish(_:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  NSObject *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38[5];
  __int128 v39;
  __int128 v40;

  v2 = v1;
  v4 = sub_1D141AC58((uint64_t *)&unk_1ED935780);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    if (qword_1ED935000 != -1)
      swift_once();
    v13 = sub_1D166D964();
    sub_1D141AC1C(v13, (uint64_t)qword_1ED9364D0);
    v35 = sub_1D166D94C();
    v14 = sub_1D166DD84();
    if (os_log_type_enabled(v35, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v38[0] = v16;
      *(_DWORD *)v15 = 136315138;
      *(_QWORD *)&v39 = sub_1D141BCB4(0xD00000000000001DLL, 0x80000001D1695860, v38);
      sub_1D166DF28();
      _os_log_impl(&dword_1D1413000, v35, v14, "%s invoked but no notification", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v16, -1, -1);
      MEMORY[0x1D17EB0AC](v15, -1, -1);
    }
    goto LABEL_26;
  }
  v35 = a1;
  v7 = -[NSObject response](v35, sel_response);
  if (v7 == (id)3)
  {
    if (qword_1ED935000 != -1)
      swift_once();
    v17 = sub_1D166D964();
    sub_1D141AC1C(v17, (uint64_t)qword_1ED9364D0);
    v18 = sub_1D166D94C();
    v19 = sub_1D166DD84();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v38[0] = v21;
      *(_DWORD *)v20 = 136315138;
      *(_QWORD *)&v39 = sub_1D141BCB4(0xD00000000000001DLL, 0x80000001D1695860, v38);
      sub_1D166DF28();
      _os_log_impl(&dword_1D1413000, v18, v19, "%s: user cancelled tap to radar", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v21, -1, -1);
      MEMORY[0x1D17EB0AC](v20, -1, -1);
    }

    goto LABEL_26;
  }
  if (v7 == (id)2)
  {
    if (qword_1ED935000 != -1)
      swift_once();
    v22 = sub_1D166D964();
    sub_1D141AC1C(v22, (uint64_t)qword_1ED9364D0);
    v23 = sub_1D166D94C();
    v24 = sub_1D166DD6C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v38[0] = v26;
      *(_DWORD *)v25 = 136315138;
      *(_QWORD *)&v39 = sub_1D141BCB4(0xD00000000000001DLL, 0x80000001D1695860, v38);
      sub_1D166DF28();
      _os_log_impl(&dword_1D1413000, v23, v24, "%s: user asked us to stop showing TTR prompts", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v26, -1, -1);
      MEMORY[0x1D17EB0AC](v25, -1, -1);
    }

    v27 = objc_msgSend((id)objc_opt_self(), sel_messagesDomain);
    if (v27)
    {
      v28 = v27;
      v29 = (void *)sub_1D166DAA8();
      objc_msgSend(v28, sel_setBool_forKey_, 1, v29);

      return;
    }
    goto LABEL_26;
  }
  if (v7 || (v8 = -[NSObject userInfo](v35, sel_userInfo)) == 0)
  {
LABEL_26:

    return;
  }
  v9 = v8;
  v10 = sub_1D166DA30();

  v36 = 0x68746150656C6966;
  v37 = 0xE800000000000000;
  sub_1D166E048();
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_1D141B48C((uint64_t)v38), (v12 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1D1607C44((uint64_t)v38);
  if (*((_QWORD *)&v40 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v30 = v36;
      v31 = v37;
      v32 = sub_1D166DCB8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v6, 1, 1, v32);
      v33 = (_QWORD *)swift_allocObject();
      v33[2] = 0;
      v33[3] = 0;
      v33[4] = v2;
      v33[5] = v30;
      v33[6] = v31;
      v34 = v2;
      sub_1D1616074((uint64_t)v6, (uint64_t)&unk_1EFC62AB8, (uint64_t)v33);

      swift_release();
      return;
    }
    goto LABEL_26;
  }

  sub_1D141BA80((uint64_t)&v39, &qword_1ED935840);
}

uint64_t sub_1D1616020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_1D141C488;
  return sub_1D161775C(a5, a6);
}

uint64_t sub_1D1616074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1D166DCB8();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1D166DCAC();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1D141BA80(a1, (uint64_t *)&unk_1ED935780);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D166DC64();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

unint64_t sub_1D16162CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D166E264();
  sub_1D166DB08();
  v4 = sub_1D166E288();
  return sub_1D1616508(a1, a2, v4);
}

uint64_t sub_1D1616330()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D1616364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1D141C488;
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_1D141C488;
  return sub_1D161775C(v2, v3);
}

ValueMetadata *type metadata accessor for IMDFilePurgeabilityMonitor.Constants()
{
  return &type metadata for IMDFilePurgeabilityMonitor.Constants;
}

uint64_t type metadata accessor for IMDFilePurgeabilityMonitor(uint64_t a1)
{
  return sub_1D15FD3C0(a1, &qword_1EFC62B28);
}

uint64_t sub_1D1616400()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D1616424()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1D1616450()
{
  uint64_t v0;

  sub_1D1613C70(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1D1616458(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D166DED4();
  return sub_1D16165E8(a1, v2);
}

unint64_t sub_1D1616488(uint64_t a1)
{
  uint64_t v2;

  sub_1D166DACC();
  sub_1D166E264();
  sub_1D166DB08();
  v2 = sub_1D166E288();
  swift_bridgeObjectRelease();
  return sub_1D1616700(a1, v2);
}

unint64_t sub_1D1616508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D166E1E0() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D166E1E0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1D16165E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935BB0);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1D166DEE0();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1D166DEE0();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1D1616700(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1D166DACC();
    v8 = v7;
    if (v6 == sub_1D166DACC() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1D166E1E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1D166DACC();
          v15 = v14;
          if (v13 == sub_1D166DACC() && v15 == v16)
            break;
          v18 = sub_1D166E1E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_1D1616874(_DWORD *a1)
{
  uint64_t v2;

  if ((*a1 & 0x100) != 0)
  {
    v2 = 0x657461657263;
  }
  else
  {
    if ((*a1 & 0x1200) == 0x1000)
      return 0x6465696669646F6DLL;
    if ((*a1 & 0x200) == 0)
    {
      sub_1D166E090();
      swift_bridgeObjectRelease();
      FileEventFlags.description.getter();
      sub_1D166DB5C();
      swift_bridgeObjectRelease();
      return 0xD000000000000014;
    }
    v2 = 0x65766F6D6572;
  }
  return v2 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
}

uint64_t sub_1D1616950(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t inited;
  void *v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = sub_1D166D4D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D141AC58(&qword_1ED9356E0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D166D580();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D166D49C();
  v35 = *(_QWORD *)(v15 - 8);
  v36 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CAFD78], v4);
  swift_bridgeObjectRetain();
  v37 = a1;
  v18 = a2;
  sub_1D166D574();
  sub_1D141AC58(&qword_1ED9356B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D1683B20;
  v20 = (void *)*MEMORY[0x1E0C99A08];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C99A08];
  v21 = v20;
  sub_1D160AB64(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  v22 = v17;
  swift_arrayDestroy();
  sub_1D166D4FC();
  v23 = v35;
  v24 = v36;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_bridgeObjectRelease();
  v25 = sub_1D166D490();
  if (v25 == 2)
  {
    if (qword_1ED935000 != -1)
      swift_once();
    v26 = sub_1D166D964();
    sub_1D141AC1C(v26, (uint64_t)qword_1ED9364D0);
    swift_bridgeObjectRetain_n();
    v27 = sub_1D166D94C();
    v28 = sub_1D166DD84();
    v29 = v23;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v39 = v31;
      *(_DWORD *)v30 = 136380675;
      swift_bridgeObjectRetain();
      v38 = sub_1D141BCB4(v37, v18, &v39);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D1413000, v27, v28, "NSURL did not contain isPurgeable despite requesting it for %{private}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v31, -1, -1);
      MEMORY[0x1D17EB0AC](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v24);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v24);
    }
    return 0;
  }
  else
  {
    v32 = v25 & 1;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v22, v24);
  }
  return v32;
}

unint64_t sub_1D1616F34(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;
  char v46;
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v7 = sub_1D141AC58(&qword_1ED9356E0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v49 - v11;
  v13 = sub_1D166D580();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v50 = (char *)&v49 - v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v49 - v20;
  v53 = objc_msgSend(a3, sel_isSticker);
  v22 = objc_msgSend(a4, sel_balloonBundleID);
  v51 = v17;
  if (!v22)
  {
    sub_1D166DACC();
LABEL_12:
    swift_bridgeObjectRelease();
    v52 = 0;
    goto LABEL_15;
  }
  v23 = v22;
  v49 = v14;
  v24 = sub_1D166DACC();
  v26 = v25;

  v27 = sub_1D166DACC();
  if (!v26)
  {
    v14 = v49;
    goto LABEL_12;
  }
  if (v24 == v27 && v26 == v28)
  {
    swift_bridgeObjectRelease_n();
    v31 = 256;
  }
  else
  {
    v30 = sub_1D166E1E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = 256;
    if ((v30 & 1) == 0)
      v31 = 0;
  }
  v52 = v31;
  v14 = v49;
LABEL_15:
  sub_1D166D568();
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v33 = v32(v12, 1, v13);
  v54 = a2;
  if (v33 == 1)
  {
    sub_1D141BA80((uint64_t)v12, &qword_1ED9356E0);
    v34 = 0;
    v35 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v21, v12, v13);
    sub_1D166D4E4();
    v36 = (void *)sub_1D166DAA8();
    swift_bridgeObjectRelease();
    LODWORD(v49) = objc_msgSend(v36, sel_im_isAudioMessageExtension);
    v57 = sub_1D166D514();
    v58 = v37;
    v55 = sub_1D166DACC();
    v56 = v38;
    sub_1D15FD3F8();
    v39 = sub_1D166DF58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    if ((v39 & 1) != 0)
      v34 = 0x100000000;
    else
      v34 = 0;
    if ((_DWORD)v49)
      v35 = 0x1000000;
    else
      v35 = 0;
  }
  sub_1D166D568();
  if (v32(v10, 1, v13) == 1)
  {
    sub_1D141BA80((uint64_t)v10, &qword_1ED9356E0);
    v40 = 0;
  }
  else
  {
    v41 = v50;
    (*(void (**)(void))(v14 + 32))();
    if (sub_1D166D4E4() == 0x61506E6967756C70 && v42 == 0xED000064616F6C79)
    {
      swift_bridgeObjectRelease();
      v43 = v51;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v51, v41, v13);
      v40 = 0x10000;
    }
    else
    {
      v44 = sub_1D166E1E0();
      swift_bridgeObjectRelease();
      v43 = v51;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v51, v41, v13);
      if ((v44 & 1) != 0)
      {
        v40 = 0x10000;
      }
      else if (sub_1D166D4E4() == 0xD000000000000017 && v45 == 0x80000001D1695AE0)
      {
        swift_bridgeObjectRelease();
        v40 = 0x10000;
      }
      else
      {
        v46 = sub_1D166E1E0();
        swift_bridgeObjectRelease();
        if ((v46 & 1) != 0)
          v40 = 0x10000;
        else
          v40 = 0;
      }
    }
    v47 = *(void (**)(char *, uint64_t))(v14 + 8);
    v47(v43, v13);
    v47(v41, v13);
  }
  return v52 | v34 | v40 | v53 | (unint64_t)v35;
}

void sub_1D161744C(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t inited;
  uint64_t v10;
  void *v11;

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v4)
  {
    v5 = v4;
    v6 = (void *)sub_1D166DAA8();
    v7 = (void *)sub_1D166DAA8();
    v8 = (void *)sub_1D166DAA8();
    sub_1D141AC58(&qword_1ED9356C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D1683B20;
    v10 = MEMORY[0x1E0DEA968];
    sub_1D166E048();
    *(_QWORD *)(inited + 96) = v10;
    *(_QWORD *)(inited + 72) = a1;
    *(_QWORD *)(inited + 80) = a2;
    swift_bridgeObjectRetain();
    sub_1D141BB00(inited);
    v11 = (void *)sub_1D166DA18();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_forceAutoBugCaptureWithSubType_errorPayload_type_context_metadata_, v6, 0, v7, v8, v11);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D1617600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1D141C488;
  *(_QWORD *)(v3 + 56) = v2;
  *(_OWORD *)(v3 + 40) = v5;
  return swift_task_switch();
}

uint64_t sub_1D1617674()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D16176A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1D1607C7C;
  *(_QWORD *)(v3 + 56) = v2;
  *(_OWORD *)(v3 + 40) = v5;
  return swift_task_switch();
}

uint64_t sub_1D1617718(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1D141AC58(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D161775C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_1D166D808();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v4 = sub_1D166D838();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v2[9] = swift_task_alloc();
  v5 = sub_1D166D7FC();
  v2[10] = v5;
  v2[11] = *(_QWORD *)(v5 - 8);
  v2[12] = swift_task_alloc();
  v6 = sub_1D166D844();
  v2[13] = v6;
  v2[14] = *(_QWORD *)(v6 - 8);
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D1617834()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, _QWORD, uint64_t);
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v0[11];
  v1 = v0[12];
  v4 = v0[9];
  v3 = v0[10];
  v15 = v3;
  v16 = v2;
  v19 = v0[8];
  v5 = v0[6];
  v20 = v0[7];
  v17 = v0[5];
  v18 = v0[4];
  sub_1D166E090();
  sub_1D166DB5C();
  sub_1D166DB5C();
  sub_1D166DB5C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0D371E8], v3);
  sub_1D141AC58(&qword_1EFC62B78);
  v6 = sub_1D166D7F0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D16832F0;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, _QWORD, uint64_t))(v7 + 104);
  v12(v11, *MEMORY[0x1E0D371D0], v6);
  v12(v11 + v8, *MEMORY[0x1E0D371C8], v6);
  sub_1D166D82C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v5, *MEMORY[0x1E0D37200], v18);
  sub_1D166D7E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v5, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v4, v20);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v15);
  v13 = (_QWORD *)swift_task_alloc();
  v0[16] = v13;
  *v13 = v0;
  v13[1] = sub_1D1617A90;
  return sub_1D166D814();
}

uint64_t sub_1D1617A90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D1617AF4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D1617B64()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D1617BD4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

void sub_1D1617C14(unint64_t a1)
{
  id v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1D164F570(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
      __break(1u);
LABEL_19:

LABEL_20:
      __break(1u);
      return;
    }
    v4 = 0;
    while (v3 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1D17E8FD0](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v1 = v5;
      v6 = objc_msgSend(v1, sel_ID);
      if (!v6)
        goto LABEL_19;
      v7 = v6;
      v8 = sub_1D166DACC();
      v10 = v9;

      if (!v10)
        goto LABEL_20;
      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      v1 = (id)(v12 + 1);
      if (v12 >= v11 >> 1)
        sub_1D164F570(v11 > 1, v12 + 1, 1);
      ++v4;
      *(_QWORD *)(v14 + 16) = v1;
      v13 = v14 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      if (v3 == v4)
        return;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v3 = sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D1617DA8()
{
  uint64_t v0;

  v0 = sub_1D166D964();
  sub_1D15FD440(v0, qword_1EFC62B80);
  sub_1D141AC1C(v0, (uint64_t)qword_1EFC62B80);
  sub_1D166D940();
  return sub_1D166D958();
}

void sub_1D1617F00()
{
  char *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  unsigned int v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t inited;
  id v70;
  void *v71;
  void *v72;
  void *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;

  v1 = objc_msgSend(v0, sel_messages);
  sub_1D15FD3C0(0, &qword_1EFC62BD8);
  v2 = sub_1D166DBEC();

  if (v2 >> 62)
  {
LABEL_58:
    swift_bridgeObjectRetain();
    v3 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_59:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1D1618C94();
    swift_endAccess();
    return;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
    goto LABEL_59;
LABEL_3:
  v74 = &v0[OBJC_IVAR___IMDBatchMessageSimulator_batch];
  v77 = v2 & 0xC000000000000001;
  v4 = 4;
  v5 = MEMORY[0x1E0DEA968];
  v75 = v3;
  v76 = v2;
  while (1)
  {
    if (v77)
      v6 = (id)MEMORY[0x1D17E8FD0](v4 - 4, v2);
    else
      v6 = *(id *)(v2 + 8 * v4);
    v7 = v6;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_58;
    }
    v8 = objc_msgSend(v6, sel_item);
    sub_1D1619ACC(v8);
    v10 = v9;

    if (!v10)
      break;
    v11 = objc_msgSend(v10, sel_session);
    if (!v11)
    {

      break;
    }
    v12 = v11;
    v13 = v7;
    v14 = sub_1D161A6E8(v12, v13, v13);

    if (!v14)
    {
      v53 = v12;
      if (qword_1EFC614E0 != -1)
        swift_once();
      v54 = sub_1D166D964();
      sub_1D141AC1C(v54, (uint64_t)qword_1EFC62B80);
      v55 = sub_1D166D94C();
      v56 = sub_1D166DD84();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v57 = 0;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D1413000, v55, v56, "Couldn't generate a chat for simulated message :(", v57, 2u);
        MEMORY[0x1D17EB0AC](v57, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease();
      }

      v63 = objc_msgSend(v13, sel_item);
      v64 = objc_msgSend(v63, sel_guid);

      v65 = v5;
      if (v64)
      {
        v66 = sub_1D166DACC();
        v68 = v67;

      }
      else
      {
        v66 = 0x3E6C696E3CLL;
        v68 = 0xE500000000000000;
      }
      sub_1D141AC58((uint64_t *)&unk_1EFC631D0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D16832F0;
      *(_QWORD *)(inited + 32) = 0x6567617373656DLL;
      *(_QWORD *)(inited + 40) = 0xE700000000000000;
      sub_1D166E090();
      swift_bridgeObjectRelease();
      sub_1D166DB5C();
      *(_QWORD *)(inited + 48) = 0xD000000000000021;
      *(_QWORD *)(inited + 56) = 0x80000001D1695CE0;
      *(_QWORD *)(inited + 72) = v65;
      *(_QWORD *)(inited + 80) = 0x476567617373656DLL;
      *(_QWORD *)(inited + 120) = v65;
      *(_QWORD *)(inited + 88) = 0xEB00000000444955;
      *(_QWORD *)(inited + 96) = v66;
      *(_QWORD *)(inited + 104) = v68;
      sub_1D160F4A0(inited);
      v70 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v71 = (void *)sub_1D166DAA8();
      v72 = (void *)sub_1D166DA18();
      swift_bridgeObjectRelease();
      objc_msgSend(v70, sel_initWithDomain_code_userInfo_, v71, 0, v72);

      swift_willThrow();
      return;
    }
    v79 = v4 - 3;
    v80 = v12;
    v15 = objc_msgSend(v13, sel_item);
    v16 = objc_msgSend(v14, sel_chatIdentifier);
    objc_msgSend(v15, sel_setRoomName_, v16);

    v17 = objc_msgSend(v13, sel_item);
    LODWORD(v16) = objc_msgSend(v17, sel_isFromMe);

    if ((_DWORD)v16 && objc_msgSend(v14, sel_style) == 45)
    {
      v18 = objc_msgSend(v14, sel_service);
      if (!v18)
      {
        __break(1u);
        return;
      }
      v19 = v18;
      v20 = objc_msgSend(v18, sel_supportsCapability_, *MEMORY[0x1E0D38DC0]);

      if (v20)
      {
        v21 = objc_msgSend(v13, sel_item);
        objc_msgSend(v21, sel_setFlags_, (unint64_t)objc_msgSend(v21, sel_flags) | 0x1000);

      }
    }
    v22 = objc_msgSend(v10, sel_aliases);
    v23 = sub_1D166DBEC();

    if (*(_QWORD *)(v23 + 16))
    {
      v24 = *(_QWORD *)(v23 + 40);
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = 0;
    }
    swift_bridgeObjectRelease();
    objc_opt_self();
    v25 = swift_dynamicCastObjCClass();
    if (v25)
    {
      v26 = (void *)v25;
      v78 = v4;
      v27 = v5;
      v28 = v10;
      v29 = objc_msgSend(v26, sel_idsAccount);
      if (v29)
      {
        v30 = v29;
        v73 = v28;
        v31 = objc_msgSend(v29, sel_displayName);
        if (v31)
        {
          v32 = v31;
          sub_1D166DACC();
          v34 = v33;

          swift_bridgeObjectRelease();
          v24 = v34;
          v5 = MEMORY[0x1E0DEA968];
          v4 = v78;
        }
        else
        {
          v35 = objc_msgSend(v30, sel_aliasStrings);
          v4 = v78;
          if (v35)
          {
            v36 = v35;
            v37 = sub_1D166DBEC();

            if (*(_QWORD *)(v37 + 16))
            {
              v38 = *(_QWORD *)(v37 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              v24 = v38;
            }
            else
            {
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              v24 = 0;
            }
          }
          else
          {

          }
          v5 = MEMORY[0x1E0DEA968];
        }
      }
      else
      {

        v5 = v27;
        v4 = v78;
      }
    }
    v39 = objc_msgSend(v13, sel_lastAddressedHandle);
    if (v39)
    {
      v40 = v39;
      sub_1D166DACC();

    }
    else
    {
      if (!v24)
      {
        v41 = 0;
        goto LABEL_35;
      }
      swift_bridgeObjectRetain();
    }
    v41 = (void *)sub_1D166DAA8();
    swift_bridgeObjectRelease();
LABEL_35:
    objc_msgSend(v14, sel_updateLastAddressedHandle_, v41);

    v42 = objc_msgSend(v13, sel_item);
    v0 = v74;
    swift_beginAccess();
    sub_1D1618B40(v14, v10, v42);
    swift_endAccess();

    swift_bridgeObjectRelease();
    ++v4;
    v2 = v76;
    if (v79 == v75)
      goto LABEL_59;
  }
  if (qword_1EFC614E0 != -1)
    swift_once();
  v43 = sub_1D166D964();
  sub_1D141AC1C(v43, (uint64_t)qword_1EFC62B80);
  v44 = sub_1D166D94C();
  v45 = sub_1D166DD84();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v44, v45, "Couldn't find an account/session for simulated message :(", v46, 2u);
    MEMORY[0x1D17EB0AC](v46, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v47 = objc_msgSend(v7, sel_item);
  v48 = objc_msgSend(v47, sel_guid);

  v49 = v5;
  if (v48)
  {
    v50 = sub_1D166DACC();
    v52 = v51;

  }
  else
  {
    v50 = 0x3E6C696E3CLL;
    v52 = 0xE500000000000000;
  }
  sub_1D141AC58((uint64_t *)&unk_1EFC631D0);
  v58 = swift_initStackObject();
  *(_OWORD *)(v58 + 16) = xmmword_1D16832F0;
  *(_QWORD *)(v58 + 32) = sub_1D166DACC();
  *(_QWORD *)(v58 + 40) = v59;
  sub_1D166E090();
  swift_bridgeObjectRelease();
  sub_1D166DB5C();
  *(_QWORD *)(v58 + 48) = 0xD000000000000025;
  *(_QWORD *)(v58 + 56) = 0x80000001D1695CB0;
  *(_QWORD *)(v58 + 72) = v49;
  *(_QWORD *)(v58 + 80) = 0x476567617373656DLL;
  *(_QWORD *)(v58 + 120) = v49;
  *(_QWORD *)(v58 + 88) = 0xEB00000000444955;
  *(_QWORD *)(v58 + 96) = v50;
  *(_QWORD *)(v58 + 104) = v52;
  sub_1D160F4A0(v58);
  v60 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v61 = (void *)sub_1D166DAA8();
  v62 = (void *)sub_1D166DA18();
  swift_bridgeObjectRelease();
  objc_msgSend(v60, sel_initWithDomain_code_userInfo_, v61, 0, v62);

  swift_willThrow();
}

uint64_t sub_1D16189D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v15;

  v4 = sub_1D166D628();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D141AC58(&qword_1ED9354E8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_item);
  v12 = objc_msgSend(v11, sel_time);

  if (v12)
  {
    sub_1D166D604();

    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v13(v10, v7, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
    if ((_DWORD)result != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a2, v10, v4);
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D1618B40(void *a1, void *a2, void *a3)
{
  void **v3;
  void **v4;
  void *v8;
  id v9;
  id v10;
  char v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;

  v4 = v3;
  v8 = *v3;
  if (!*v3)
    goto LABEL_5;
  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED9357F0);
  v9 = a1;
  v10 = v8;
  v11 = sub_1D166DEE0();

  if ((v11 & 1) == 0
    || (v12 = v4[1]) == 0
    || (sub_1D15FD3C0(0, &qword_1EFC62BE8),
        v13 = a2,
        v14 = v12,
        v15 = sub_1D166DEE0(),
        v13,
        v14,
        (v15 & 1) == 0))
  {
LABEL_5:
    sub_1D1618C94();
  }
  v16 = *v4;
  v17 = a1;

  *v4 = a1;
  v18 = v4[1];
  v19 = a2;

  v4[1] = a2;
  v20 = a3;
  MEMORY[0x1D17E8AD8]();
  if (*(_QWORD *)(((unint64_t)v4[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v4[2] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
    sub_1D166DC1C();
  sub_1D166DC34();
  return sub_1D166DC04();
}

void sub_1D1618C94()
{
  uint64_t v0;
  uint64_t v1;
  void (**v2)(char *, uint64_t, uint64_t);
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  int v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  unint64_t v25;
  char isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;
  void (**v32)(char *, uint64_t, uint64_t);
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;

  v1 = sub_1D166D964();
  v2 = *(void (***)(char *, uint64_t, uint64_t))(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)v0)
    return;
  v5 = *(void **)(v0 + 8);
  if (!v5)
    return;
  v6 = *(id *)v0;
  v34 = v5;
  v33 = objc_msgSend(v34, sel_session);
  if (!v33)
  {

    return;
  }

  v8 = (_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)v0 = 0;
  *(_QWORD *)(v0 + 8) = 0;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    if (v27)
      goto LABEL_6;
LABEL_27:

    return;
  }
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_27;
LABEL_6:
  if (*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (qword_1EFC614E0 != -1)
    swift_once();
  v10 = sub_1D141AC1C(v1, (uint64_t)qword_1EFC62B80);
  v2[2](v4, v10, v1);
  v11 = (void (**)(char *, uint64_t, uint64_t))v6;
  v12 = sub_1D166D94C();
  v13 = sub_1D166DD6C();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    v30 = v13;
    v31 = v8;
    v14 = swift_slowAlloc();
    v29 = swift_slowAlloc();
    v35 = v9;
    v36 = v29;
    *(_DWORD *)v14 = 134218242;
    sub_1D166DF28();
    *(_WORD *)(v14 + 12) = 2080;
    v15 = objc_msgSend(v11, sel_guid);
    v32 = v11;
    if (!v15)
    {
LABEL_36:

      __break(1u);
      goto LABEL_37;
    }
    v16 = v15;
    v17 = sub_1D166DACC();
    v19 = v18;

    v35 = sub_1D141BCB4(v17, v19, &v36);
    sub_1D166DF28();
    v11 = v32;

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v12, (os_log_type_t)v30, "Inserting %ld messages into %s", (uint8_t *)v14, 0x16u);
    v20 = v29;
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v20, -1, -1);
    MEMORY[0x1D17EB0AC](v14, -1, -1);

    ((void (*)(char *, uint64_t))v2[1])(v4, v1);
    v8 = v31;
  }
  else
  {

    ((void (*)(char *, uint64_t))v2[1])(v4, v1);
  }
  sub_1D15FD3C0(0, &qword_1EFC62BE0);
  v21 = (void *)sub_1D166DBD4();
  v22 = objc_msgSend(v11, sel_chatIdentifier);
  if (!v22)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v23 = v22;
  v24 = objc_msgSend(v11, sel_style);
  objc_msgSend(v33, sel_didReceiveMessages_forChat_style_account_fromIDSID_, v21, v23, v24, v34, 0);

  v25 = *v8;
  if ((*v8 & 0x8000000000000000) == 0 && (v25 & 0x4000000000000000) == 0)
  {
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    v25 = *v8;
    if ((isUniquelyReferenced_nonNull_bridgeObject & 1) != 0)
    {
      if (!(v25 >> 62))
      {
        v1 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
        sub_1D161AED0(0, v1);

        return;
      }
      goto LABEL_33;
    }
  }
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    v1 = sub_1D166E15C();
    if (sub_1D166E15C() < 0)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    v28 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    if (v1 < 0 || v28 < v1)
    {
      __break(1u);
LABEL_33:
      v2 = v11;
      swift_bridgeObjectRetain();
      v1 = sub_1D166E15C();
      swift_bridgeObjectRelease();
      if ((v1 & 0x8000000000000000) == 0)
      {
LABEL_38:
        v11 = v2;
        goto LABEL_21;
      }
      __break(1u);
      goto LABEL_35;
    }
  }
  else
  {
    v1 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1;
  }
  *v8 = sub_1D16195C0(0, v1);

  swift_bridgeObjectRelease();
}

void __swiftcall IMDBatchMessageSimulator.init()(IMDBatchMessageSimulator *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void IMDBatchMessageSimulator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for IMDBatchMessageSimulator(uint64_t a1)
{
  return sub_1D15FD3C0(a1, &qword_1EFC62BD0);
}

uint64_t sub_1D1619320(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_1D166E264();
    swift_bridgeObjectRetain();
    sub_1D166DB08();
    v18 = sub_1D166E288();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1D166E1E0() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1D166E1E0() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

_QWORD *sub_1D16195C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1D141AC58(&qword_1ED935880);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = a1;
  v4[3] = (2 * (v6 >> 3)) | 1;
  return v4;
}

void *sub_1D1619638(unint64_t a1, void *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  char v15;
  unint64_t v17;
  unint64_t v18;

  v3 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v4 = sub_1D166E15C();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v17 = v3;
      v18 = v3 & 0xC000000000000001;
      v5 = 4;
      while (1)
      {
        if (v18)
          v7 = (id)MEMORY[0x1D17E8FD0](v5 - 4, v3);
        else
          v7 = *(id *)(v3 + 8 * v5);
        v6 = v7;
        v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_19;
        }
        v9 = objc_msgSend(v7, sel_service);
        v10 = objc_msgSend(a2, sel_service);
        v11 = v10;
        if (!v9)
          break;
        if (!v10)
        {
          v11 = v9;
LABEL_5:

          v6 = v11;
          goto LABEL_6;
        }
        sub_1D15FD3C0(0, &qword_1ED935008);
        v12 = v4;
        v13 = a2;
        v14 = v9;
        v15 = sub_1D166DEE0();

        a2 = v13;
        v4 = v12;
        v3 = v17;

        if ((v15 & 1) != 0)
        {
LABEL_17:
          swift_bridgeObjectRelease();
          return v6;
        }
LABEL_6:

        ++v5;
        if (v8 == v4)
          goto LABEL_20;
      }
      if (!v10)
        goto LABEL_17;
      goto LABEL_5;
    }
  }
LABEL_20:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D1619800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_1D166E15C();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1D17E8FDC](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for ClientConnection();
  swift_arrayDestroy();
  if (!v6)
    return sub_1D166DC04();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_1D166E15C();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_1D166DC04();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

void sub_1D1619ACC(void *a1)
{
  id *v2;
  unint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;

  v2 = (id *)objc_msgSend(a1, sel_accountID);
  if (!v2)
    goto LABEL_4;
  v3 = (unint64_t)v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedAccountController);
  if (!v4)
  {
LABEL_31:

    __break(1u);
    goto LABEL_32;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_accountForAccountID_, v3);

  if (!v6)
  {
LABEL_4:
    v7 = objc_msgSend(a1, sel_service);
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
      v10 = (unint64_t)objc_msgSend(v9, sel_serviceWithName_, v8);

      if (v10)
      {
        v11 = objc_msgSend((id)objc_opt_self(), sel_sharedAccountController);
        if (!v11)
        {
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        v12 = v11;
        v13 = objc_msgSend(v11, sel_activeAccountsForService_, v10);

        if (!v13)
        {
LABEL_35:
          __break(1u);
          return;
        }
        sub_1D15FD3C0(0, &qword_1EFC62BE8);
        v3 = sub_1D166DBEC();

        if (v3 >> 62)
        {
          swift_bridgeObjectRetain();
          v15 = sub_1D166E15C();
          swift_bridgeObjectRelease();
          if (v15)
          {
LABEL_10:
            if ((v3 & 0xC000000000000001) == 0)
            {
              if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v14 = *(id *)(v3 + 32);
LABEL_13:
                swift_bridgeObjectRelease();

                return;
              }
              __break(1u);
              goto LABEL_31;
            }
LABEL_29:
            MEMORY[0x1D17E8FD0](0, v3);
            goto LABEL_13;
          }
        }
        else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_10;
        }
        swift_bridgeObjectRelease();

      }
    }
    v16 = objc_msgSend((id)objc_opt_self(), sel_sharedAccountController);
    if (!v16)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v17 = v16;
    v18 = objc_msgSend(v16, sel_activeAccounts);

    if (!v18)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    sub_1D15FD3C0(0, &qword_1EFC62BE8);
    v10 = sub_1D166DBEC();

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      v3 = sub_1D166E15C();
      swift_bridgeObjectRelease();
      if (v3)
      {
LABEL_20:
        if ((v10 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1D17E8FD0](0, v10);
        }
        else
        {
          if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_29;
          }
          v19 = *(id *)(v10 + 32);
        }
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      v3 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v3)
        goto LABEL_20;
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1D1619DE4(void *a1, char a2, id a3)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;

  v6 = objc_msgSend(a3, sel_chatGUID);
  if (v6)
  {
    v7 = v6;
    IMComponentsFromChatGUID();

  }
  if (a2 == 45)
  {
    v8 = objc_msgSend(a3, sel_handles);
    v9 = sub_1D166DBEC();

    if (!*(_QWORD *)(v9 + 16))
      __break(1u);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v11 = objc_msgSend(a1, sel_account);
    v12 = objc_msgSend(v10, sel_generateUnusedChatIdentifierForGroupChatWithAccount_, v11);

    if (v12)
    {
      sub_1D166DACC();

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1D1619F80(void *a1, id a2)
{
  id v4;
  char **v5;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  void *v64;
  unsigned int v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[2];
  uint64_t v70;

  v4 = objc_msgSend(a2, sel_groupID);
  v5 = &selRef_setUpdatedName_;
  if (v4)
  {
    v6 = v4;
    v7 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v8 = objc_msgSend(v7, sel_existingChatsWithGroupID_, v6);

    sub_1D15FD3C0(0, (unint64_t *)&unk_1ED9357F0);
    v9 = sub_1D166DBEC();

    v10 = a1;
    v11 = sub_1D1619638(v9, v10);
    swift_bridgeObjectRelease();

    if (v11)
      return;
  }
  v12 = objc_msgSend(a2, sel_chatGUID);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v15 = objc_msgSend(v14, sel_existingChatWithGUID_, v13);

    if (v15)
      return;
  }
  v16 = objc_msgSend(a2, sel_handles);
  v17 = sub_1D166DBEC();

  v18 = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRelease();
  if (v18 <= 1)
    v19 = 45;
  else
    v19 = 43;
  v66 = (id)objc_opt_self();
  v20 = objc_msgSend(v66, sel_sharedInstance);
  v21 = objc_msgSend(a2, sel_handles);
  if (!v21)
  {
    sub_1D166DBEC();
    v21 = (id)sub_1D166DBD4();
    swift_bridgeObjectRelease();
  }
  v22 = objc_msgSend(a1, sel_service);
  v23 = objc_msgSend(a2, sel_groupID);
  v24 = objc_msgSend(v20, sel_existingChatsForIDs_onService_displayName_groupID_style_, v21, v22, 0, v23, v19);

  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED9357F0);
  v25 = sub_1D166DBEC();

  if (!(v25 >> 62))
  {
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
LABEL_17:
    swift_bridgeObjectRelease();
    v65 = v19;
    sub_1D1619DE4(a1, v19, a2);
    v28 = objc_msgSend(a2, sel_handles);
    v29 = sub_1D166DBEC();

    v30 = *(_QWORD *)(v29 + 16);
    if (!v30)
    {
      swift_bridgeObjectRelease();
      v53 = MEMORY[0x1E0DEE9D8];
LABEL_30:
      v56 = (void *)sub_1D166DAA8();
      v57 = objc_msgSend(a2, sel_groupID);
      sub_1D1610AB4(v53);
      swift_bridgeObjectRelease();
      v58 = (void *)sub_1D166DBD4();
      swift_bridgeObjectRelease();
      v59 = objc_msgSend(a1, sel_account);
      LOBYTE(v63) = 0;
      objc_msgSend(a1, sel_didJoinChat_style_displayName_groupID_handleInfo_account_isBlackholed_, v56, v65, 0, v57, v58, v59, v63);

      v60 = objc_msgSend(v66, v5[47]);
      v61 = (void *)sub_1D166DAA8();
      swift_bridgeObjectRelease();
      v62 = objc_msgSend(a1, sel_account);
      objc_msgSend(v60, sel_existingChatWithIdentifier_account_, v61, v62);

      return;
    }
    v64 = a1;
    v70 = MEMORY[0x1E0DEE9D8];
    sub_1D164F75C(0, v30, 0);
    sub_1D141AC58(&qword_1EFC62220);
    v31 = (uint64_t *)(v29 + 40);
    while (1)
    {
      v32 = *(v31 - 1);
      v33 = *v31;
      sub_1D141AC58((uint64_t *)&unk_1EFC631D0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D16832F0;
      *(_QWORD *)(inited + 32) = sub_1D166DACC();
      *(_QWORD *)(inited + 40) = v35;
      type metadata accessor for FZChatMemberStatus(0);
      *(_QWORD *)(inited + 72) = v36;
      *(_DWORD *)(inited + 48) = 2;
      *(_QWORD *)(inited + 80) = sub_1D166DACC();
      *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 88) = v37;
      *(_QWORD *)(inited + 96) = v32;
      *(_QWORD *)(inited + 104) = v33;
      v25 = sub_1D166E180();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1D161B1AC(inited + 32, (uint64_t)&v67);
      v38 = v67;
      v39 = v68;
      v40 = sub_1D16162CC(v67, v68);
      if ((v41 & 1) != 0)
        break;
      *(_QWORD *)(v25 + 64 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v42 = (uint64_t *)(*(_QWORD *)(v25 + 48) + 16 * v40);
      *v42 = v38;
      v42[1] = v39;
      sub_1D141B3E4(v69, (_OWORD *)(*(_QWORD *)(v25 + 56) + 32 * v40));
      v43 = *(_QWORD *)(v25 + 16);
      v44 = __OFADD__(v43, 1);
      v45 = v43 + 1;
      if (v44)
        goto LABEL_33;
      *(_QWORD *)(v25 + 16) = v45;
      sub_1D161B1AC(inited + 80, (uint64_t)&v67);
      v46 = v67;
      v47 = v68;
      v48 = sub_1D16162CC(v67, v68);
      if ((v49 & 1) != 0)
        break;
      *(_QWORD *)(v25 + 64 + ((v48 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v48;
      v50 = (uint64_t *)(*(_QWORD *)(v25 + 48) + 16 * v48);
      *v50 = v46;
      v50[1] = v47;
      sub_1D141B3E4(v69, (_OWORD *)(*(_QWORD *)(v25 + 56) + 32 * v48));
      v51 = *(_QWORD *)(v25 + 16);
      v44 = __OFADD__(v51, 1);
      v52 = v51 + 1;
      if (v44)
        goto LABEL_33;
      *(_QWORD *)(v25 + 16) = v52;
      swift_release();
      swift_bridgeObjectRelease();
      v53 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D164F75C(0, *(_QWORD *)(v53 + 16) + 1, 1);
        v53 = v70;
      }
      v55 = *(_QWORD *)(v53 + 16);
      v54 = *(_QWORD *)(v53 + 24);
      if (v55 >= v54 >> 1)
      {
        sub_1D164F75C(v54 > 1, v55 + 1, 1);
        v53 = v70;
      }
      v31 += 2;
      *(_QWORD *)(v53 + 16) = v55 + 1;
      *(_QWORD *)(v53 + 8 * v55 + 32) = v25;
      if (!--v30)
      {
        swift_bridgeObjectRelease();
        a1 = v64;
        v5 = &selRef_setUpdatedName_;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    MEMORY[0x1D17E8FD0](0, v25);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v27 = sub_1D166E15C();
  swift_bridgeObjectRelease();
  if (!v27)
    goto LABEL_17;
LABEL_12:
  if ((v25 & 0xC000000000000001) != 0)
    goto LABEL_34;
  if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v26 = *(id *)(v25 + 32);
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

id sub_1D161A6E8(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  id result;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void *v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;

  v6 = sub_1D166D628();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v72 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D1619F80(a1, a2);
  v10 = v9;
  if (!v9)
    return v10;
  if (objc_msgSend(v9, sel_style) != 43)
    return v10;
  v11 = objc_msgSend(a2, sel_handles);
  v68 = v7;
  v70 = a3;
  v12 = v11;
  v13 = sub_1D166DBEC();

  v14 = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRelease();
  if (v14 < 2)
    return v10;
  v67 = v6;
  v71 = v10;
  result = objc_msgSend(v10, sel_participants);
  if (!result)
    goto LABEL_74;
  v16 = result;
  sub_1D15FD3C0(0, (unint64_t *)&qword_1EFC62000);
  v17 = sub_1D166DBEC();

  sub_1D1617C14(v17);
  v19 = v18;
  swift_bridgeObjectRelease();
  v20 = sub_1D16308B0(v19);
  swift_bridgeObjectRelease();
  v74 = v20;
  swift_bridgeObjectRetain();
  v21 = objc_msgSend(a2, sel_handles);
  v22 = sub_1D166DBEC();

  v23 = sub_1D16308B0(v22);
  swift_bridgeObjectRelease();
  v73 = v23;
  swift_bridgeObjectRetain();
  LOBYTE(v22) = sub_1D1619320(v20, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v71;
  }
  v24 = objc_msgSend(a2, sel_handles);
  v25 = sub_1D166DBEC();

  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v27 = (uint64_t *)(v25 + 40);
    do
    {
      v28 = *(v27 - 1);
      v29 = *v27;
      swift_bridgeObjectRetain();
      sub_1D162BBF4(v28, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 += 2;
      --v26;
    }
    while (v26);
  }
  swift_bridgeObjectRelease();
  result = objc_msgSend(v71, sel_participants);
  if (!result)
    goto LABEL_75;
  v30 = result;
  v31 = sub_1D166DBEC();

  if (v31 >> 62)
    goto LABEL_69;
  v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v32)
    goto LABEL_20;
LABEL_13:
  v33 = 4;
  while (1)
  {
    if ((v31 & 0xC000000000000001) != 0)
      v34 = (id)MEMORY[0x1D17E8FD0](v33 - 4, v31);
    else
      v34 = *(id *)(v31 + 8 * v33);
    v35 = v34;
    v36 = v33 - 3;
    if (__OFADD__(v33 - 4, 1))
    {
      __break(1u);
      goto LABEL_65;
    }
    result = objc_msgSend(v34, sel_ID);
    if (!result)
      break;
    v37 = result;
    v38 = sub_1D166DACC();
    v40 = v39;

    sub_1D162BBF4(v38, v40);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    ++v33;
    if (v36 == v32)
    {
      while (1)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        sub_1D16189D4(v70, v72);
        v41 = 0;
        v31 = v74;
        v42 = *(_QWORD *)(v74 + 56);
        v69 = v74 + 56;
        v43 = 1 << *(_BYTE *)(v74 + 32);
        v44 = -1;
        if (v43 < 64)
          v44 = ~(-1 << v43);
        v45 = v44 & v42;
        v70 = (void *)((unint64_t)(v43 + 63) >> 6);
        v10 = v71;
        if ((v44 & v42) != 0)
        {
LABEL_23:
          v45 &= v45 - 1;
          goto LABEL_38;
        }
        while (1)
        {
          v46 = v41 + 1;
          if (__OFADD__(v41, 1))
            break;
          if (v46 >= (uint64_t)v70)
            goto LABEL_41;
          v47 = *(_QWORD *)(v69 + 8 * v46);
          ++v41;
          if (!v47)
          {
            v41 = v46 + 1;
            if (v46 + 1 >= (uint64_t)v70)
              goto LABEL_41;
            v47 = *(_QWORD *)(v69 + 8 * v41);
            if (!v47)
            {
              v41 = v46 + 2;
              if (v46 + 2 >= (uint64_t)v70)
                goto LABEL_41;
              v47 = *(_QWORD *)(v69 + 8 * v41);
              if (!v47)
              {
                v48 = v46 + 3;
                if (v48 >= (uint64_t)v70)
                {
LABEL_41:
                  swift_release();
                  v54 = 0;
                  v31 = v73;
                  v55 = 1 << *(_BYTE *)(v73 + 32);
                  v56 = -1;
                  if (v55 < 64)
                    v56 = ~(-1 << v55);
                  v57 = v56 & *(_QWORD *)(v73 + 56);
                  v69 = v73 + 56;
                  v70 = (void *)((unint64_t)(v55 + 63) >> 6);
                  if (v57)
                  {
LABEL_44:
                    v57 &= v57 - 1;
                    goto LABEL_59;
                  }
                  while (1)
                  {
                    v58 = v54 + 1;
                    if (__OFADD__(v54, 1))
                      goto LABEL_66;
                    if (v58 >= (uint64_t)v70)
                      goto LABEL_62;
                    v59 = *(_QWORD *)(v69 + 8 * v58);
                    ++v54;
                    if (!v59)
                    {
                      v54 = v58 + 1;
                      if (v58 + 1 >= (uint64_t)v70)
                        goto LABEL_62;
                      v59 = *(_QWORD *)(v69 + 8 * v54);
                      if (!v59)
                      {
                        v54 = v58 + 2;
                        if (v58 + 2 >= (uint64_t)v70)
                          goto LABEL_62;
                        v59 = *(_QWORD *)(v69 + 8 * v54);
                        if (!v59)
                        {
                          v60 = v58 + 3;
                          if (v60 >= (uint64_t)v70)
                          {
LABEL_62:
                            swift_release();
                            (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v72, v67);
                            return v10;
                          }
                          v59 = *(_QWORD *)(v69 + 8 * v60);
                          if (!v59)
                          {
                            while (1)
                            {
                              v54 = v60 + 1;
                              if (__OFADD__(v60, 1))
                                goto LABEL_68;
                              if (v54 >= (uint64_t)v70)
                                goto LABEL_62;
                              v59 = *(_QWORD *)(v69 + 8 * v54);
                              ++v60;
                              if (v59)
                                goto LABEL_58;
                            }
                          }
                          v54 = v60;
                        }
                      }
                    }
LABEL_58:
                    v57 = (v59 - 1) & v59;
LABEL_59:
                    swift_bridgeObjectRetain();
                    v61 = (void *)sub_1D166DAA8();
                    result = objc_msgSend(v10, sel_chatIdentifier);
                    if (!result)
                      goto LABEL_72;
                    v62 = result;
                    v63 = objc_msgSend(a1, sel_account);
                    v64 = (void *)sub_1D166D5BC();
                    LOBYTE(v66) = 43;
                    v65 = objc_msgSend(a1, sel_didChangeMemberStatus_forHandle_fromHandle_unformattedNumber_countryCode_forChat_style_account_destinationCallerID_messageTime_, 2, v61, 0, 0, 0, v62, v66, v63, 0, v64);
                    swift_bridgeObjectRelease();

                    v10 = v71;
                    if (v57)
                      goto LABEL_44;
                  }
                }
                v47 = *(_QWORD *)(v69 + 8 * v48);
                if (!v47)
                {
                  while (1)
                  {
                    v41 = v48 + 1;
                    if (__OFADD__(v48, 1))
                      goto LABEL_67;
                    if (v41 >= (uint64_t)v70)
                      goto LABEL_41;
                    v47 = *(_QWORD *)(v69 + 8 * v41);
                    ++v48;
                    if (v47)
                      goto LABEL_37;
                  }
                }
                v41 = v48;
              }
            }
          }
LABEL_37:
          v45 = (v47 - 1) & v47;
LABEL_38:
          swift_bridgeObjectRetain();
          v49 = (void *)sub_1D166DAA8();
          result = objc_msgSend(v10, sel_chatIdentifier);
          if (!result)
          {
            __break(1u);
LABEL_72:
            __break(1u);
            goto LABEL_73;
          }
          v50 = result;
          v51 = objc_msgSend(a1, sel_account);
          v52 = (void *)sub_1D166D5BC();
          LOBYTE(v66) = 43;
          v53 = objc_msgSend(a1, sel_didChangeMemberStatus_forHandle_fromHandle_unformattedNumber_countryCode_forChat_style_account_destinationCallerID_messageTime_, 3, v49, 0, 0, 0, v50, v66, v51, 0, v52);
          swift_bridgeObjectRelease();

          v10 = v71;
          if (v45)
            goto LABEL_23;
        }
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        swift_bridgeObjectRetain();
        v32 = sub_1D166E15C();
        swift_bridgeObjectRelease();
        if (v32)
          goto LABEL_13;
      }
    }
  }
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
  return result;
}

uint64_t sub_1D161AED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_1D166E15C();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1D17E8FDC](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_1D15FD3C0(0, &qword_1EFC62BE0);
  swift_arrayDestroy();
  if (!v6)
    return sub_1D166DC04();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_1D166E15C();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_1D166DC04();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D161B1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D141AC58(&qword_1EFC62228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:updated:)(Swift::String _, Swift::OpaquePointer updated)
{
  sub_1D161CE68(0xD000000000000010, 0x80000001D1696C70);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:propertiesUpdated:)(Swift::String _, Swift::OpaquePointer propertiesUpdated)
{
  sub_1D161CE68(0xD00000000000001ALL, 0x80000001D1696C50);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:chatPersonCentricID:displayNameUpdated:)(Swift::String _, Swift::String_optional chatPersonCentricID, Swift::String displayNameUpdated)
{
  sub_1D161CE68(0xD00000000000002FLL, 0x80000001D1696C20);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:chatPersonCentricID:displayNameUpdated:sender:)(Swift::String _, Swift::String_optional chatPersonCentricID, Swift::String displayNameUpdated, Swift::String sender)
{
  sub_1D161CE68(0xD000000000000036, 0x80000001D1696BE0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:lastAddressedHandleUpdated:)(Swift::String _, Swift::String lastAddressedHandleUpdated)
{
  sub_1D161CE68(0xD000000000000023, 0x80000001D1696BB0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:lastAddressedSIMIDUpdated:)(Swift::String _, Swift::String lastAddressedSIMIDUpdated)
{
  sub_1D161CE68(0xD000000000000022, 0x80000001D1696B80);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:lastAddressedHandleUpdated:lastAddressedSIMIDUpdated:)(Swift::String _, Swift::String lastAddressedHandleUpdated, Swift::String lastAddressedSIMIDUpdated)
{
  sub_1D161CE68(0xD00000000000003DLL, 0x80000001D1696B40);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:isFilteredUpdated:)(Swift::String _, Swift::Int isFilteredUpdated)
{
  sub_1D161CE68(0xD00000000000001ALL, 0x80000001D1696B20);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:isRecoveredUpdated:)(Swift::String _, Swift::Bool isRecoveredUpdated)
{
  sub_1D161CE68(0xD00000000000001BLL, 0x80000001D1696B00);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:isDeletingIncomingMessagesUpdated:)(Swift::String _, Swift::Bool isDeletingIncomingMessagesUpdated)
{
  sub_1D161CE68(0xD00000000000002ALL, 0x80000001D1696AD0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:engramIDUpdated:)(Swift::String _, Swift::String engramIDUpdated)
{
  sub_1D161CE68(0xD000000000000018, 0x80000001D1696AB0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:nicknamesUpdated:)(Swift::String _, Swift::OpaquePointer nicknamesUpdated)
{
  sub_1D161CE68(0xD000000000000019, 0x80000001D1696A90);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:lastMessageTimeStampOnLoadUpdated:)(Swift::String _, Swift::Double lastMessageTimeStampOnLoadUpdated)
{
  sub_1D161CE68(0xD00000000000002ALL, 0x80000001D1696A60);
}

Swift::Void __swiftcall IntentsClientBroadcaster.serviceSwitchRequestReceivedForChat(withIdentifier:)(Swift::String withIdentifier)
{
  sub_1D161CE68(0xD000000000000034, 0x80000001D1696A20);
}

Swift::Void __swiftcall IntentsClientBroadcaster.capabilitiesUpdated(forHandle:)(Swift::String forHandle)
{
  sub_1D161CE68(0xD00000000000001FLL, 0x80000001D1696A00);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chat(_:uncachedAttachmentCountUpdated:)(Swift::String _, NSNumber uncachedAttachmentCountUpdated)
{
  sub_1D161CE68(0xD000000000000027, 0x80000001D16969D0);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:updateProperties:)()
{
  sub_1D161CE68(0xD000000000000036, 0x80000001D1696990);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:error:)()
{
  sub_1D161CE68(0xD00000000000002BLL, 0x80000001D1696960);
}

uint64_t sub_1D161B8A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  id v11;

  if (a6)
    sub_1D166DA30();
  v11 = a1;
  sub_1D161CE68(a8, a9);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall IntentsClientBroadcaster.leftChat(_:)(Swift::String a1)
{
  sub_1D161CE68(0x746168437466656CLL, 0xEC000000293A5F28);
}

Swift::Void __swiftcall IntentsClientBroadcaster.engroupParticipantsUpdated(forChat:)(Swift::String forChat)
{
  sub_1D161CE68(0xD000000000000024, 0x80000001D1696930);
}

Swift::Void __swiftcall IntentsClientBroadcaster.loadedChats(_:)(Swift::OpaquePointer a1)
{
  sub_1D161CE68(0x6843646564616F6CLL, 0xEF293A5F28737461);
}

Swift::Void __swiftcall IntentsClientBroadcaster.loadedChats(_:queryID:)(Swift::OpaquePointer _, Swift::String queryID)
{
  sub_1D161CE68(0xD000000000000017, 0x80000001D1696910);
}

Swift::Void __swiftcall IntentsClientBroadcaster.markedAsRead(forMessageGUID:success:queryID:)(Swift::String forMessageGUID, Swift::Bool success, Swift::String queryID)
{
  sub_1D161CE68(0xD00000000000002DLL, 0x80000001D16968E0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.forcedReloadingChatRegistry(withQueryID:)(Swift::String withQueryID)
{
  sub_1D161CE68(0xD000000000000029, 0x80000001D16968B0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.movedMessagesToRecentlyDeleted(withQueryID:)(Swift::String withQueryID)
{
  sub_1D161CE68(0xD00000000000002CLL, 0x80000001D1696880);
}

Swift::Void __swiftcall IntentsClientBroadcaster.movedMessagesToRecentlyDeletedForChats(withGUIDs:queryID:)(Swift::OpaquePointer withGUIDs, Swift::String_optional queryID)
{
  sub_1D161CE68(0xD00000000000003ALL, 0x80000001D1696840);
}

Swift::Void __swiftcall IntentsClientBroadcaster.recoveredMessages(withQueryID:)(Swift::String withQueryID)
{
  sub_1D161CE68(0xD00000000000001FLL, 0x80000001D1696820);
}

Swift::Void __swiftcall IntentsClientBroadcaster.loadedRecoverableMessagesMetadata(_:queryID:)(Swift::OpaquePointer _, Swift::String queryID)
{
  sub_1D161CE68(0xD00000000000002DLL, 0x80000001D16967F0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.permanentlyDeletedMessagesInChats(withDeletedChatGUIDs:)(Swift::OpaquePointer withDeletedChatGUIDs)
{
  sub_1D161CE68(0xD000000000000038, 0x80000001D16967B0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.permanentlyDeletedMessagesInChats(withDeletedChatGUIDs:queryID:)(Swift::OpaquePointer withDeletedChatGUIDs, Swift::String queryID)
{
  sub_1D161CE68(0xD000000000000040, 0x80000001D1696760);
}

Swift::Void __swiftcall IntentsClientBroadcaster.permanentlyDeletedRecoverableMessagesForChats(withGUIDs:deletedChatGUIDs:)(Swift::OpaquePointer withGUIDs, Swift::OpaquePointer deletedChatGUIDs)
{
  sub_1D161CE68(0xD00000000000004ALL, 0x80000001D1696710);
}

Swift::Void __swiftcall IntentsClientBroadcaster.recoveredMessagesFromRecentlyDeletedForChats(withGUIDs:)(Swift::OpaquePointer withGUIDs)
{
  sub_1D161CE68(0xD000000000000038, 0x80000001D16966D0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chatsNeedRemerging(_:groupedChats:)(Swift::OpaquePointer _, Swift::OpaquePointer groupedChats)
{
  sub_1D161CE68(0xD000000000000023, 0x80000001D16966A0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.chatLoaded(withChatIdentifier:chats:)(Swift::String withChatIdentifier, Swift::OpaquePointer chats)
{
  sub_1D161CE68(0xD000000000000025, 0x80000001D1696670);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:invitationReceived:)()
{
  sub_1D161CE68(0xD000000000000038, 0x80000001D1696630);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:groupID:chatPersonCentricID:messageSent:)()
{
  sub_1D161CE68(0xD00000000000004DLL, 0x80000001D16965E0);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:notifySentMessage:sendTime:isReplicating:)()
{
  sub_1D161CE68(0xD00000000000004ELL, 0x80000001D1696590);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:groupID:chatPersonCentricID:messageReceived:)()
{
  sub_1D161CE68(0xD000000000000051, 0x80000001D1696530);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:groupID:chatPersonCentricID:messagesReceived:removed:messagesComingFromStorage:)()
{
  sub_1D161CE68(0xD000000000000074, 0x80000001D16964B0);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:messageUpdated:)()
{
  sub_1D161CE68(0xD000000000000034, 0x80000001D1696470);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:messageUpdated:suppressNotification:)()
{
  sub_1D161CE68(0xD000000000000049, 0x80000001D1696420);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:messagesUpdated:)()
{
  sub_1D161CE68(0xD000000000000035, 0x80000001D16963E0);
}

void IntentsClientBroadcaster.service(_:chat:style:messagesUpdated:)()
{
  sub_1D161CE68(0xD000000000000026, 0x80000001D16963B0);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:groupID:chatPersonCentricID:statusChanged:handleInfo:)()
{
  sub_1D161CE68(0xD00000000000005ALL, 0x80000001D1696350);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:chatPersonCentricID:member:statusChanged:)()
{
  sub_1D161CE68(0xD00000000000004ELL, 0x80000001D1696300);
}

Swift::Void __swiftcall IntentsClientBroadcaster.downloadedPurgedAssetBatch(forChatIDs:completedTransferGUIDs:)(Swift::OpaquePointer forChatIDs, Swift::OpaquePointer completedTransferGUIDs)
{
  sub_1D161CE68(0xD00000000000003ELL, 0x80000001D16962C0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.finishedDownloadingPurgedAssets(forChatIDs:)(Swift::OpaquePointer forChatIDs)
{
  sub_1D161CE68(0xD00000000000002CLL, 0x80000001D1696290);
}

Swift::Void __swiftcall IntentsClientBroadcaster.historicalMessageGUIDsDeleted(_:chatGUIDs:queryID:)(Swift::OpaquePointer_optional _, Swift::OpaquePointer_optional chatGUIDs, Swift::String_optional queryID)
{
  sub_1D161CE68(0xD000000000000033, 0x80000001D1696250);
}

Swift::Void __swiftcall IntentsClientBroadcaster.previouslyBlackholedChatLoaded(withChatIdentifier:chats:)(Swift::String withChatIdentifier, Swift::OpaquePointer chats)
{
  sub_1D161CE68(0xD000000000000039, 0x80000001D1696210);
}

Swift::Void __swiftcall IntentsClientBroadcaster.previouslyBlackholedChatLoaded(withHandleIDs:chat:)(Swift::OpaquePointer withHandleIDs, Swift::OpaquePointer chat)
{
  sub_1D161CE68(0xD000000000000033, 0x80000001D16961D0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.blackholedChatsExist(_:)(Swift::Bool a1)
{
  sub_1D161CE68(0xD000000000000018, 0x80000001D16961B0);
}

void IntentsClientBroadcaster.groupPhotoUpdated(forChatIdentifier:style:account:userInfo:)()
{
  sub_1D161CE68(0xD00000000000003CLL, 0x80000001D1696170);
}

Swift::Void __swiftcall IntentsClientBroadcaster.displayPinCode(forAccount:pinCode:deviceName:deviceType:phoneNumber:)(Swift::String forAccount, NSNumber pinCode, Swift::String deviceName, Swift::String deviceType, Swift::String phoneNumber)
{
  sub_1D161CE68(0xD000000000000045, 0x80000001D1696120);
}

Swift::Void __swiftcall IntentsClientBroadcaster.pinCodeAlertCompleted(_:deviceName:deviceType:phoneNumber:responseFromDevice:wasCancelled:)(Swift::String _, Swift::String deviceName, Swift::String deviceType, Swift::String phoneNumber, Swift::Bool responseFromDevice, Swift::Bool wasCancelled)
{
  sub_1D161CE68(0xD00000000000005BLL, 0x80000001D16960C0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.screenTimeEnablementChanged(_:)(Swift::Bool a1)
{
  sub_1D161CE68(0xD00000000000001FLL, 0x80000001D16960A0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.collaborationNoticesDidChange(forChatGUIDs:)(Swift::OpaquePointer forChatGUIDs)
{
  sub_1D161CE68(0xD00000000000002CLL, 0x80000001D1696070);
}

void IntentsClientBroadcaster.account(_:chat:style:chatProperties:groupID:chatPersonCentricID:initialEmergencyQuestionnaireReceived:)()
{
  sub_1D161CE68(0xD000000000000067, 0x80000001D1696000);
}

uint64_t sub_1D161CD08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, unint64_t a11)
{
  id v13;
  id v14;

  if (!a6)
  {
    if (!a8)
      goto LABEL_4;
    goto LABEL_3;
  }
  sub_1D166DA30();
  if (a8)
LABEL_3:
    sub_1D166DACC();
LABEL_4:
  v13 = a9;
  v14 = a1;
  sub_1D161CE68(a10, a11);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall IntentsClientBroadcaster.qosClassWhileServicingRequestsResponse(_:identifier:)(qos_class_t _, Swift::String identifier)
{
  sub_1D161CE68(0xD000000000000035, 0x80000001D1695FC0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.updatedSummariesForChats(withGUIDsAndProperties:)(Swift::OpaquePointer withGUIDsAndProperties)
{
  sub_1D161CE68(0xD000000000000031, 0x80000001D1695F80);
}

void sub_1D161CE68(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *oslog;
  uint64_t v9;

  if (qword_1EFC61540 != -1)
    swift_once();
  v4 = sub_1D166D964();
  sub_1D141AC1C(v4, (uint64_t)qword_1EFC65E58);
  oslog = sub_1D166D94C();
  v5 = sub_1D166DD6C();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v9 = v7;
    *(_DWORD *)v6 = 136315138;
    sub_1D141BCB4(a1, a2, &v9);
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, oslog, v5, "Broadcasted method: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v7, -1, -1);
    MEMORY[0x1D17EB0AC](v6, -1, -1);

  }
  else
  {

  }
}

uint64_t dispatch thunk of IncomingClientConnectionListening.connectedClients.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D161319C;
  return v7(a1, a2);
}

uint64_t dispatch thunk of IncomingClientConnectionListening.resume()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D141C488;
  return v7(a1, a2);
}

void sub_1D161D0CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD aBlock[6];

  v2 = sub_1D141AC58(&qword_1ED935BA0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1D161FEA4;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D161D28C;
  aBlock[3] = &unk_1E9230BF0;
  v8 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v5, sel_fetchCloudKitAccountStatusAndUpdateEligibilityAndNeedsRepairStatusWithCompletion_, v8);
  _Block_release(v8);

}

uint64_t sub_1D161D220(int a1, id a2)
{
  id v2;

  if (a2)
  {
    v2 = a2;
    sub_1D141AC58(&qword_1ED935BA0);
    return sub_1D166DC70();
  }
  else
  {
    sub_1D141AC58(&qword_1ED935BA0);
    return sub_1D166DC7C();
  }
}

void sub_1D161D28C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1D161D2EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 56) = v0;
  *(_BYTE *)(v1 + 84) = 0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v2;
  type metadata accessor for IMDCKAccountStatus(0);
  *v2 = v1;
  v2[1] = sub_1D161D380;
  return sub_1D166E1EC();
}

uint64_t sub_1D161D380()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D161D3E4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t (*v6)(void);
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  void *v11;

  *(_BYTE *)(v0 + 84) = *(_QWORD *)(v0 + 40) == 4;
  swift_beginAccess();
  if ((*(_BYTE *)(v0 + 84) & 1) == 0)
  {
    v7 = sub_1D166D94C();
    v8 = sub_1D166DD9C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1D1413000, v7, v8, "Account does not support device to device encryption, aborting sync", v9, 2u);
      MEMORY[0x1D17EB0AC](v9, -1, -1);
    }

    goto LABEL_7;
  }
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_sharedInstance);
  v3 = *MEMORY[0x1E0D37950];
  objc_msgSend(v2, sel_setValue_forDomain_forKey_, 0, *MEMORY[0x1E0D37950], *MEMORY[0x1E0D379B8]);

  v4 = objc_msgSend(v1, sel_sharedInstance);
  objc_msgSend(v4, sel_setValue_forDomain_forKey_, 0, v3, *MEMORY[0x1E0D379C0]);

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  LODWORD(v2) = objc_msgSend(v5, sel_iCloudAccountMatchesiMessageAccount);

  if (!(_DWORD)v2)
  {
LABEL_7:
    sub_1D166DACC();
    v10 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v11 = (void *)sub_1D166DAA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_initWithDomain_code_userInfo_, v11, 2, 0);

    swift_willThrow();
    v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1D161D60C()
{
  uint64_t v0;
  void *v1;
  char **v2;
  id v3;
  id v4;
  unsigned int v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t (*v22)(void);
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  void *v27;
  unsigned int v29;

  v1 = *(void **)(v0 + 72);
  v2 = &selRef_setUpdatedName_;
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v4 = objc_msgSend(v3, sel_syncState);

  v5 = objc_msgSend(v4, sel_isEligibleForTruthZone);
  *(_BYTE *)(v0 + 84) = v5;
  v6 = v1;
  v7 = v1;
  v8 = sub_1D166D94C();
  v9 = sub_1D166DD9C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void **)(v0 + 72);
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412546;
    v13 = v10;
    v29 = v5;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v14;
    sub_1D166DF28();
    *v12 = v14;

    *(_WORD *)(v11 + 12) = 1024;
    *(_DWORD *)(v0 + 80) = v29;
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, v8, v9, "Account status check got error, %@, using cached value from Sync State %{BOOL}d", (uint8_t *)v11, 0x12u);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    v15 = v12;
    v2 = &selRef_setUpdatedName_;
    MEMORY[0x1D17EB0AC](v15, -1, -1);
    MEMORY[0x1D17EB0AC](v11, -1, -1);

  }
  else
  {
    v16 = *(void **)(v0 + 72);

  }
  swift_beginAccess();
  if ((*(_BYTE *)(v0 + 84) & 1) == 0)
  {
    v23 = sub_1D166D94C();
    v24 = sub_1D166DD9C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1D1413000, v23, v24, "Account does not support device to device encryption, aborting sync", v25, 2u);
      MEMORY[0x1D17EB0AC](v25, -1, -1);
    }

    goto LABEL_10;
  }
  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, v2[47]);
  v19 = *MEMORY[0x1E0D37950];
  objc_msgSend(v18, sel_setValue_forDomain_forKey_, 0, *MEMORY[0x1E0D37950], *MEMORY[0x1E0D379B8]);

  v20 = objc_msgSend(v17, v2[47]);
  objc_msgSend(v20, sel_setValue_forDomain_forKey_, 0, v19, *MEMORY[0x1E0D379C0]);

  v21 = objc_msgSend((id)objc_opt_self(), v2[47]);
  LODWORD(v18) = objc_msgSend(v21, sel_iCloudAccountMatchesiMessageAccount);

  if (!(_DWORD)v18)
  {
LABEL_10:
    sub_1D166DACC();
    v26 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v27 = (void *)sub_1D166DAA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_initWithDomain_code_userInfo_, v27, 2, 0);

    swift_willThrow();
    v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

void sub_1D161DA1C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v4 = sub_1D141AC58(&qword_1ED935BA8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v7)
  {
    v8 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_1D161FDA4;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D161E1CC;
    aBlock[3] = &unk_1E9230BA0;
    v11 = _Block_copy(aBlock);
    v12 = a2;
    swift_release();
    objc_msgSend(v8, sel_exitRecordDateWithCompletion_, v11);
    _Block_release(v11);

  }
  else
  {
    __break(1u);
  }
}

id sub_1D161DB88(uint64_t a1, void *a2, void (*a3)(char *, char *, uint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  char v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint8_t *v34;
  id result;
  void (*v36)(char *, char *, uint64_t);
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint8_t *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v8 = sub_1D141AC58(&qword_1ED9354E8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D166D628();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v53 - v16;
  if (a2)
  {
    v56 = a1;
    v18 = a2;
    v19 = sub_1D161FC3C();
    v57 = a3;
    v20 = a2;
    v21 = a2;
    v22 = sub_1D166D94C();
    v23 = sub_1D166DD9C();
    v24 = os_log_type_enabled(v22, v23);
    if ((v19 & 1) != 0)
    {
      if (v24)
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v26 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v25 = 138412290;
        v27 = a2;
        v28 = _swift_stdlib_bridgeErrorToNSError();
        v60 = v28;
        sub_1D166DF28();
        *v26 = v28;

        _os_log_impl(&dword_1D1413000, v22, v23, "Error fetching exit record %@, aborting", v25, 0xCu);
        sub_1D141AC58(&qword_1ED935810);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v26, -1, -1);
        MEMORY[0x1D17EB0AC](v25, -1, -1);

      }
      else
      {

      }
      v60 = (uint64_t)a2;
      sub_1D141AC58(&qword_1ED935BA8);
      return (id)sub_1D166DC70();
    }
    if (v24)
    {
      v55 = a4;
      v29 = swift_slowAlloc();
      v58 = v17;
      v30 = (uint8_t *)v29;
      v54 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v30 = 138412290;
      v53 = v30 + 4;
      v31 = a2;
      v32 = _swift_stdlib_bridgeErrorToNSError();
      v60 = v32;
      sub_1D166DF28();
      v33 = v54;
      *v54 = v32;
      a4 = v55;

      _os_log_impl(&dword_1D1413000, v22, v23, "Error fetching exit record %@, ignoring", v30, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v33, -1, -1);
      v34 = v30;
      v17 = v58;
      MEMORY[0x1D17EB0AC](v34, -1, -1);

    }
    else
    {

    }
    a1 = v56;
  }
  sub_1D161FDF8(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D141BA80((uint64_t)v10, &qword_1ED9354E8);
    sub_1D141AC58(&qword_1ED935BA8);
    return (id)sub_1D166DC7C();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v36 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v58 = v17;
    v36(v15, v17, v11);
    v37 = sub_1D166D94C();
    v38 = sub_1D166DD9C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v55 = a4;
      v40 = (uint8_t *)v39;
      v41 = swift_slowAlloc();
      v57 = v36;
      v42 = v41;
      v60 = v41;
      *(_DWORD *)v40 = 136315138;
      sub_1D15FC784((unint64_t *)&unk_1EFC63210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v43 = sub_1D166E1BC();
      v59 = sub_1D141BCB4(v43, v44, &v60);
      sub_1D166DF28();
      swift_bridgeObjectRelease();
      v45 = *(void (**)(char *, uint64_t))(v12 + 8);
      v45(v15, v11);
      _os_log_impl(&dword_1D1413000, v37, v38, "Entered exit state on %s. Aborting sync, downloading all attachments!", v40, 0xCu);
      swift_arrayDestroy();
      v46 = v42;
      v36 = v57;
      MEMORY[0x1D17EB0AC](v46, -1, -1);
      MEMORY[0x1D17EB0AC](v40, -1, -1);

    }
    else
    {

      v45 = *(void (**)(char *, uint64_t))(v12 + 8);
      v45(v15, v11);
    }
    result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    if (result)
    {
      v47 = result;
      objc_msgSend(result, sel_scheduleAttachmentAssetDownload);

      type metadata accessor for PreReqsError(0);
      sub_1D15FC784(&qword_1EFC62C10, type metadata accessor for PreReqsError, (uint64_t)&unk_1D16840B8);
      v48 = swift_allocError();
      v50 = v49;
      v51 = v58;
      v36(v49, v58, v11);
      v52 = sub_1D141AC58(&qword_1EFC62C18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v50, 0, 2, v52);
      v60 = v48;
      sub_1D141AC58(&qword_1ED935BA8);
      sub_1D166DC70();
      return (id)((uint64_t (*)(char *, uint64_t))v45)(v51, v11);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1D161E1CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, void *);
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v6 = sub_1D141AC58(&qword_1ED9354E8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_1D166D604();
    v10 = sub_1D166D628();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    v11 = sub_1D166D628();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_1D141BA80((uint64_t)v8, &qword_1ED9354E8);
}

void sub_1D161E2CC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v4 = sub_1D141AC58(&qword_1ED935BA8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v7)
  {
    v8 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_1D161FBE8;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D161D28C;
    aBlock[3] = &unk_1E9230B50;
    v11 = _Block_copy(aBlock);
    v12 = a2;
    swift_release();
    objc_msgSend(v8, sel_fetchLatestRecordKeyFromCKAndCreateIfKeyDoesNotExistWithCompletion_, v11);
    _Block_release(v11);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D161E438(char a1, id a2)
{
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((a1 & 1) != 0)
  {
    sub_1D141AC58(&qword_1ED935BA8);
    return sub_1D166DC7C();
  }
  if (a2)
  {
    v4 = a2;
    v5 = a2;
    v6 = a2;
    v7 = sub_1D166D94C();
    v8 = sub_1D166DD9C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      v11 = a2;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      sub_1D166DF28();
      *v10 = v18;

      _os_log_impl(&dword_1D1413000, v7, v8, "Error fetching salt record %@, aborting", v9, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v10, -1, -1);
      MEMORY[0x1D17EB0AC](v9, -1, -1);

    }
    else
    {

    }
    if ((sub_1D161FC3C() & 1) != 0)
      goto LABEL_13;

  }
  else
  {
    v12 = sub_1D166D94C();
    v13 = sub_1D166DD9C();
    if (os_log_type_enabled(v12, (os_log_type_t)v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1D1413000, v12, (os_log_type_t)v13, "No salt record fetched, aborting", v14, 2u);
      MEMORY[0x1D17EB0AC](v14, -1, -1);
    }

  }
  type metadata accessor for PreReqsError(0);
  sub_1D15FC784(&qword_1EFC62C10, type metadata accessor for PreReqsError, (uint64_t)&unk_1D16840B8);
  swift_allocError();
  v16 = v15;
  v17 = sub_1D141AC58(&qword_1EFC62C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 2, 2, v17);
LABEL_13:
  sub_1D141AC58(&qword_1ED935BA8);
  return sub_1D166DC70();
}

uint64_t sub_1D161E700(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = v1;
  if ((a1 & 1) != 0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1D161E888;
  return sub_1D161D2EC();
}

uint64_t sub_1D161E770()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_cloudKitSyncingEnabled);

  if ((v2 & 1) != 0)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 24) = v3;
    *v3 = v0;
    v3[1] = sub_1D161E888;
    return sub_1D161D2EC();
  }
  else
  {
    type metadata accessor for PreReqsError(0);
    sub_1D15FC784(&qword_1EFC62C10, type metadata accessor for PreReqsError, (uint64_t)&unk_1D16840B8);
    swift_allocError();
    v6 = v5;
    v7 = sub_1D141AC58(&qword_1EFC62C18);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 2, v7);
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D161E888()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1D161E8F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_1D161E98C;
  return sub_1D166E1EC();
}

uint64_t sub_1D161E98C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D161E9F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[7] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_1D161EA90;
  return sub_1D166E1EC();
}

uint64_t sub_1D161EA90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D161EAFC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D161EB30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D161EB3C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D161EB70(uint64_t a1)
{
  uint64_t v1;

  sub_1D161DA1C(a1, *(void **)(v1 + 16));
}

void sub_1D161EB78(uint64_t a1)
{
  uint64_t v1;

  sub_1D161E2CC(a1, *(void **)(v1 + 16));
}

uint64_t type metadata accessor for PreReqsError(uint64_t a1)
{
  return sub_1D161EE80(a1, (uint64_t *)&unk_1EFC62C98);
}

uint64_t sub_1D161ECC0(char a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  _QWORD *v6;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  a3;
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_1D161ED34;
  return sub_1D161E700(a1);
}

uint64_t sub_1D161ED34()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 16);
  v3 = *v1;
  swift_task_dealloc();

  v4 = *(_QWORD *)(v3 + 24);
  if (v0)
  {
    v5 = (void *)sub_1D166D4A8();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 24), 0);
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

id IMDPreReqsChecker.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id IMDPreReqsChecker.init()()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = v0;
  sub_1D166D940();
  sub_1D166D958();

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for IMDPreReqsChecker(0);
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for IMDPreReqsChecker(uint64_t a1)
{
  return sub_1D161EE80(a1, (uint64_t *)&unk_1ED935700);
}

uint64_t sub_1D161EE80(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

id IMDPreReqsChecker.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMDPreReqsChecker(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D161EF9C()
{
  return type metadata accessor for IMDPreReqsChecker(0);
}

uint64_t sub_1D161EFA4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D166D964();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for IMDPreReqsChecker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IMDPreReqsChecker.verifyAllPreReqs(requireEnablement:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x88);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D141C488;
  return v7(a1);
}

uint64_t *sub_1D161F090(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1D141AC58(&qword_1EFC62C18);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_1D166D628();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_1D161F168(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1D141AC58(&qword_1EFC62C18);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1D166D628();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1D161F1D0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D141AC58(&qword_1EFC62C18);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1D166D628();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1D161F284(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_1D141AC58(&qword_1EFC62C18);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_1D166D628();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1D141BA80((uint64_t)a1, &qword_1EFC62C18);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1D166D628();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_1D161F390(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D141AC58(&qword_1EFC62C18);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1D166D628();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1D161F444(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_1D141AC58(&qword_1EFC62C18);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_1D166D628();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1D141BA80((uint64_t)a1, &qword_1EFC62C18);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1D166D628();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1D161F550()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D161F55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1D141AC58(&qword_1EFC62C18);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_1D161F5AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D161F5B8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_1D141AC58(&qword_1EFC62C18);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1D161F610(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D141AC58(&qword_1EFC62C18);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_1D161F64C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D141AC58(&qword_1EFC62C18);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_1D161F690()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D166D628();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D161F6E4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_1D161F710()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = *(_BYTE *)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1D141C488;
  return ((uint64_t (*)(char, void *, void *))((char *)&dword_1EFC62CA8 + dword_1EFC62CA8))(v2, v4, v3);
}

uint64_t sub_1D161F77C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1D1607C7C;
  return v6();
}

uint64_t sub_1D161F7D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1D1607C7C;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EFC62CB8 + dword_1EFC62CB8))(v2, v3, v4);
}

uint64_t sub_1D161F84C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1D1607C7C;
  return v7();
}

uint64_t sub_1D161F8A4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D161F8D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1D1607C7C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EFC62CC8 + dword_1EFC62CC8))(a1, v4, v5, v6);
}

uint64_t sub_1D161F954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D166DCB8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D166DCAC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1D141BA80(a1, (uint64_t *)&unk_1ED935780);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D166DC64();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1D161FAA0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D161FB04;
  return v6(a1);
}

uint64_t sub_1D161FB04()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1D161FB50()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D161FB74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D1607C7C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFC62CD8 + dword_1EFC62CD8))(a1, v4);
}

uint64_t sub_1D161FBE8(char a1, void *a2)
{
  sub_1D141AC58(&qword_1ED935BA8);
  return sub_1D161E438(a1, a2);
}

uint64_t sub_1D161FC3C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  unint64_t v8;

  v0 = (void *)sub_1D166D4A8();
  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_1D166DACC();
  v4 = v3;

  if (v2 == sub_1D166DACC() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_1D166E1E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {

      return 0;
    }
  }
  v8 = (unint64_t)objc_msgSend(v0, sel_code);

  if (v8 < 0x1C)
    return (0x80002C8u >> v8) & 1;
  return 0;
}

uint64_t sub_1D161FD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D141AC58(&qword_1ED935BA8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

id sub_1D161FDA4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D141AC58(&qword_1ED935BA8) - 8) + 80);
  return sub_1D161DB88(a1, a2, *(void (**)(char *, char *, uint64_t))(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_1D161FDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D141AC58(&qword_1ED9354E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D161FE40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D141AC58(&qword_1ED935BA0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1D161FEA4(int a1, void *a2)
{
  sub_1D141AC58(&qword_1ED935BA0);
  return sub_1D161D220(a1, a2);
}

id sub_1D161FF04()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IntentsClientBroadcaster()), sel_init);
  qword_1EFC65DF0 = (uint64_t)result;
  return result;
}

id IntentsClientBroadcaster.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t IntentsClientBroadcaster.sentinelString.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12IMDaemonCore24IntentsClientBroadcaster_sentinelString);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t IntentsClientBroadcaster.sentinelString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC12IMDaemonCore24IntentsClientBroadcaster_sentinelString);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*IntentsClientBroadcaster.sentinelString.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall IntentsClientBroadcaster.pendingVCRequestComplete()()
{
  sub_1D1622B8C(0xD00000000000001ALL, 0x80000001D16982D0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.pendingACRequestComplete()()
{
  sub_1D1622B8C(0xD00000000000001ALL, 0x80000001D16982B0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.vcCapabilitiesChanged(_:)(Swift::UInt64 a1)
{
  sub_1D1622B8C(0xD000000000000019, 0x80000001D1698290);
}

Swift::Void __swiftcall IntentsClientBroadcaster.updateCloudKitState()()
{
  sub_1D1622B8C(0xD000000000000015, 0x80000001D1698270);
}

Swift::Void __swiftcall IntentsClientBroadcaster.didAttemptToSetEnabled(to:result:)(Swift::Bool to, Swift::Bool result)
{
  sub_1D1622B8C(0xD000000000000022, 0x80000001D1698240);
}

void IntentsClientBroadcaster.didPerformAdditionalStorageRequiredCheck(withSuccess:additionalStorageRequired:forAccountId:error:)()
{
  sub_1D1622B8C(0xD000000000000063, 0x80000001D16981D0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.didAttempt(toDisableAllDevicesResult:)(Swift::Bool toDisableAllDevicesResult)
{
  sub_1D1622B8C(0xD000000000000026, 0x80000001D16981A0);
}

void IntentsClientBroadcaster.nicknameRequestResponse(_:encodedNicknameData:)()
{
  sub_1D1622B8C(0xD00000000000002FLL, 0x80000001D1698170);
}

Swift::Void __swiftcall IntentsClientBroadcaster.updatePendingNicknameUpdates(_:handledNicknames:archivedNicknames:)(Swift::OpaquePointer _, Swift::OpaquePointer handledNicknames, Swift::OpaquePointer archivedNicknames)
{
  sub_1D1622B8C(0xD000000000000043, 0x80000001D1698120);
}

void IntentsClientBroadcaster.updateNicknameHandles(forSharing:blocked:)()
{
  sub_1D1622B8C(0xD00000000000002ALL, 0x80000001D16980F0);
}

void IntentsClientBroadcaster.updateTransitionedNicknameHandles(_:)()
{
  sub_1D1622B8C(0xD000000000000025, 0x80000001D16980C0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.updateActiveNicknameRecords(_:)(Swift::OpaquePointer a1)
{
  sub_1D1622B8C(0xD00000000000001FLL, 0x80000001D16980A0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.updateIgnoredNicknameRecords(_:)(Swift::OpaquePointer a1)
{
  sub_1D1622B8C(0xD000000000000020, 0x80000001D1698070);
}

void IntentsClientBroadcaster.updatePersonalNickname(_:)()
{
  sub_1D1622B8C(0xD00000000000001ALL, 0x80000001D1698050);
}

Swift::Void __swiftcall IntentsClientBroadcaster.simSubscriptionsDidChange()()
{
  sub_1D1622B8C(0xD00000000000001BLL, 0x80000001D1698030);
}

Swift::Void __swiftcall IntentsClientBroadcaster.newSetupInfoAvailable()()
{
  sub_1D1622B8C(0xD000000000000017, 0x80000001D1698010);
}

Swift::Void __swiftcall IntentsClientBroadcaster.networkDataAvailabilityChanged(_:)(Swift::Bool a1)
{
  sub_1D1622B8C(0xD000000000000022, 0x80000001D1697FE0);
}

void IntentsClientBroadcaster.property(_:changedTo:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D1622874(a3, a4, 0xD00000000000001BLL, 0x80000001D1697FC0);
}

void IntentsClientBroadcaster.persistentProperty(_:changedTo:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D1622874(a3, a4, 0xD000000000000025, 0x80000001D1697F90);
}

uint64_t sub_1D1620754(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  id v10;
  _BYTE v12[32];
  _BYTE v13[32];

  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v10 = a1;
  sub_1D166DF70();
  swift_unknownObjectRelease();
  sub_1D166DF70();
  swift_unknownObjectRelease();
  sub_1D1622874((uint64_t)v13, (uint64_t)v12, a6, a7);

  sub_1D141AC98((uint64_t)v12);
  return sub_1D141AC98((uint64_t)v13);
}

Swift::Void __swiftcall IntentsClientBroadcaster.stickerPackUpdated(_:)(Swift::OpaquePointer a1)
{
  sub_1D1622B8C(0xD000000000000016, 0x80000001D1697F70);
}

Swift::Void __swiftcall IntentsClientBroadcaster.stickerPackRemoved(_:)(Swift::OpaquePointer a1)
{
  sub_1D1622B8C(0xD000000000000016, 0x80000001D1697F50);
}

Swift::Void __swiftcall IntentsClientBroadcaster.oneTimeCodesDidChange(_:)(Swift::OpaquePointer a1)
{
  sub_1D1622B8C(0xD000000000000019, 0x80000001D1697F30);
}

Swift::Void __swiftcall IntentsClientBroadcaster.didFetchSyncStateStats(_:)(Swift::OpaquePointer a1)
{
  sub_1D1622B8C(0xD00000000000001ALL, 0x80000001D1697F10);
}

Swift::Void __swiftcall IntentsClientBroadcaster.didFetchRampState(_:)(Swift::OpaquePointer a1)
{
  sub_1D1622B8C(0xD000000000000015, 0x80000001D1697EF0);
}

void IntentsClientBroadcaster.didAttempt(toDisableiCloudBackups:error:)()
{
  sub_1D1622B8C(0xD000000000000029, 0x80000001D1697EC0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.didFetchCloudKitSyncDebuggingInfo(_:)(Swift::OpaquePointer a1)
{
  sub_1D1622B8C(0xD000000000000025, 0x80000001D1697E90);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:conference:receivedInvitationFrom:properties:)(Swift::String _, Swift::String conference, Swift::OpaquePointer receivedInvitationFrom, Swift::OpaquePointer properties)
{
  sub_1D1622B8C(0xD000000000000038, 0x80000001D1697E50);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:conference:receivedResponseToInvitationFrom:properties:)(Swift::String _, Swift::String conference, Swift::OpaquePointer receivedResponseToInvitationFrom, Swift::OpaquePointer properties)
{
  sub_1D1622B8C(0xD000000000000042, 0x80000001D1697E00);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:conference:receivedCancelInvitationFrom:properties:)(Swift::String _, Swift::String conference, Swift::OpaquePointer receivedCancelInvitationFrom, Swift::OpaquePointer properties)
{
  sub_1D1622B8C(0xD00000000000003ELL, 0x80000001D1697DC0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:conference:receivedCounterProposalFrom:properties:)(Swift::String _, Swift::String conference, Swift::OpaquePointer receivedCounterProposalFrom, Swift::OpaquePointer properties)
{
  sub_1D1622B8C(0xD00000000000003DLL, 0x80000001D1697D80);
}

void IntentsClientBroadcaster.account(_:conference:receivedUpdateFrom:data:)()
{
  sub_1D1622B8C(0xD00000000000002ELL, 0x80000001D1697D50);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:conference:receivedAVMessage:from:sessionID:userInfo:)(Swift::String _, Swift::String conference, Swift::UInt32 receivedAVMessage, Swift::OpaquePointer from, Swift::UInt32 sessionID, Swift::OpaquePointer_optional userInfo)
{
  sub_1D1622B8C(0xD000000000000040, 0x80000001D1697D00);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:conference:changedToNewConferenceID:)(Swift::String _, Swift::String conference, Swift::String changedToNewConferenceID)
{
  sub_1D1622B8C(0xD00000000000002FLL, 0x80000001D1697CD0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:conference:peerIDChangedFromID:toID:)(Swift::String _, Swift::String conference, Swift::String peerIDChangedFromID, Swift::String toID)
{
  sub_1D1622B8C(0xD00000000000002FLL, 0x80000001D1697CA0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:conference:peerID:propertiesUpdated:)(Swift::String _, Swift::String conference, Swift::String_optional peerID, Swift::OpaquePointer propertiesUpdated)
{
  sub_1D1622B8C(0xD00000000000002FLL, 0x80000001D1697C70);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:conference:invitationSentSuccessfully:)(Swift::String _, Swift::String conference, Swift::Bool invitationSentSuccessfully)
{
  sub_1D1622B8C(0xD000000000000031, 0x80000001D1697C30);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:avAction:withArguments:toAVChat:isVideo:)(Swift::String _, Swift::UInt32 avAction, Swift::OpaquePointer withArguments, Swift::String toAVChat, Swift::Bool isVideo)
{
  sub_1D1622B8C(0xD000000000000033, 0x80000001D1697BF0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:relay:handleInitate:fromPerson:)(Swift::String _, Swift::String relay, Swift::OpaquePointer handleInitate, Swift::OpaquePointer fromPerson)
{
  sub_1D1622B8C(0xD00000000000002ALL, 0x80000001D1697BC0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:relay:handleUpdate:fromPerson:)(Swift::String _, Swift::String relay, Swift::OpaquePointer handleUpdate, Swift::OpaquePointer fromPerson)
{
  sub_1D1622B8C(0xD000000000000029, 0x80000001D1697B90);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:relay:handleCancel:fromPerson:)(Swift::String _, Swift::String relay, Swift::OpaquePointer handleCancel, Swift::OpaquePointer fromPerson)
{
  sub_1D1622B8C(0xD000000000000029, 0x80000001D1697B60);
}

Swift::Void __swiftcall IntentsClientBroadcaster.unreadCountChanged(_:)(Swift::Int a1)
{
  sub_1D1622B8C(0xD000000000000016, 0x80000001D1697B40);
}

Swift::Void __swiftcall IntentsClientBroadcaster.lastFailedMessageDateChanged(_:)(Swift::Int64 a1)
{
  sub_1D1622B8C(0xD000000000000020, 0x80000001D1697B10);
}

Swift::Void __swiftcall IntentsClientBroadcaster.databaseUpdated()()
{
  sub_1D1622B8C(0xD000000000000011, 0x80000001D1697AF0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.databaseUpdated(_:)(Swift::String a1)
{
  sub_1D1622B8C(0xD000000000000013, 0x80000001D1697AD0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.databaseChatSpamUpdated(_:)(Swift::String a1)
{
  sub_1D1622B8C(0xD00000000000001BLL, 0x80000001D1697AB0);
}

void IntentsClientBroadcaster.messageQuery(_:finishedWithResult:chatGUIDs:)()
{
  sub_1D1622B8C(0xD00000000000002DLL, 0x80000001D1697A80);
}

void IntentsClientBroadcaster.messageItemQuery(_:finishedWithResult:chatGUIDs:)()
{
  sub_1D1622B8C(0xD000000000000031, 0x80000001D1697A40);
}

void IntentsClientBroadcaster.itemQuery(_:finishedWithResult:chatGUIDs:)()
{
  sub_1D1622B8C(0xD00000000000002ALL, 0x80000001D1697A10);
}

Swift::Void __swiftcall IntentsClientBroadcaster.historyQuery(_:chatID:services:finishedWithResult:limit:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, Swift::OpaquePointer_optional finishedWithResult, Swift::Int limit)
{
  sub_1D1622B8C(0xD000000000000039, 0x80000001D16979D0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.pagedHistoryQuery(_:chatID:services:numberOfMessagesBefore:numberOfMessagesAfter:finishedWithResult:hasMessagesBefore:hasMessagesAfter:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, Swift::Int numberOfMessagesBefore, Swift::Int numberOfMessagesAfter, Swift::OpaquePointer_optional finishedWithResult, Swift::Bool hasMessagesBefore, Swift::Bool hasMessagesAfter)
{
  sub_1D1622B8C(0xD000000000000088, 0x80000001D1697940);
}

Swift::Void __swiftcall IntentsClientBroadcaster.attachmentQuery(_:chatID:services:finishedWithResult:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, Swift::OpaquePointer_optional finishedWithResult)
{
  sub_1D1622B8C(0xD000000000000036, 0x80000001D1697900);
}

Swift::Void __swiftcall IntentsClientBroadcaster.uncachedAttachmentCountQuery(_:chatID:services:finishedWithResult:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, NSNumber_optional finishedWithResult)
{
  sub_1D1622B8C(0xD000000000000043, 0x80000001D16978B0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.isDownloadingQuery(_:chatID:services:finishedWithResult:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, Swift::Bool finishedWithResult)
{
  sub_1D1622B8C(0xD000000000000039, 0x80000001D1697870);
}

Swift::Void __swiftcall IntentsClientBroadcaster.mark(asSpamQuery:chatID:services:finishedWithResult:)(Swift::String asSpamQuery, Swift::String chatID, Swift::OpaquePointer services, NSNumber_optional finishedWithResult)
{
  sub_1D1622B8C(0xD000000000000035, 0x80000001D1697830);
}

Swift::Void __swiftcall IntentsClientBroadcaster.frequentRepliesQuery(_:chatID:services:finishedWithResult:limit:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, Swift::OpaquePointer_optional finishedWithResult, Swift::Int limit)
{
  sub_1D1622B8C(0xD000000000000041, 0x80000001D16977E0);
}

uint64_t sub_1D16215E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  id v11;

  if (a6)
    sub_1D166DBEC();
  v11 = a1;
  sub_1D1622B8C(a9, a10);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall IntentsClientBroadcaster._automation_mark(asReadQuery:finishedWithResult:)(Swift::String asReadQuery, Swift::Bool finishedWithResult)
{
  sub_1D1622B8C(0xD000000000000031, 0x80000001D16977A0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.updateCloudKitState(with:)(Swift::OpaquePointer with)
{
  sub_1D1622B8C(0xD00000000000001ALL, 0x80000001D1697780);
}

Swift::Void __swiftcall IntentsClientBroadcaster.updateCloudKitProgress(with:)(Swift::OpaquePointer with)
{
  sub_1D1622B8C(0xD00000000000001DLL, 0x80000001D1697760);
}

Swift::Void __swiftcall IntentsClientBroadcaster.fileTransfer(_:highQualityDownloadSucceededWithPath:)(Swift::String _, Swift::String highQualityDownloadSucceededWithPath)
{
  sub_1D1622B8C(0xD000000000000035, 0x80000001D1697720);
}

Swift::Void __swiftcall IntentsClientBroadcaster.fileTransfer(_:explicitDownloadSucceededWithPath:livePhotoBundlePath:)(Swift::String _, Swift::String explicitDownloadSucceededWithPath, Swift::String livePhotoBundlePath)
{
  sub_1D1622B8C(0xD000000000000046, 0x80000001D16976D0);
}

void IntentsClientBroadcaster.fileTransferExplicitDownloadFailed(_:suggestedRetryGUID:error:)()
{
  sub_1D1622B8C(0xD00000000000003FLL, 0x80000001D1697690);
}

Swift::Void __swiftcall IntentsClientBroadcaster.fileTransferHighQualityDownloadFailed(_:)(Swift::String a1)
{
  sub_1D1622B8C(0xD000000000000029, 0x80000001D1697660);
}

void IntentsClientBroadcaster.fileTransferDownloadedSucceeded(withLocalURL:)(uint64_t a1)
{
  sub_1D1622A00(a1, 0xD00000000000002ELL, 0x80000001D1697630);
}

void IntentsClientBroadcaster.fileTransferDownloadFailed(withLocalURL:error:)(uint64_t a1)
{
  sub_1D1622A00(a1, 0xD00000000000002FLL, 0x80000001D1697600);
}

Swift::Void __swiftcall IntentsClientBroadcaster.fileTransfer(_:createdWithProperties:)(Swift::String _, Swift::OpaquePointer createdWithProperties)
{
  sub_1D1622B8C(0xD000000000000026, 0x80000001D16975D0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.fileTransfer(_:updatedWithProperties:)(Swift::String _, Swift::OpaquePointer updatedWithProperties)
{
  sub_1D1622B8C(0xD000000000000026, 0x80000001D16975A0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.fileTransfers(_:createdWithLocalPaths:)(Swift::OpaquePointer _, Swift::OpaquePointer createdWithLocalPaths)
{
  sub_1D1622B8C(0xD000000000000027, 0x80000001D1697570);
}

Swift::Void __swiftcall IntentsClientBroadcaster.fileTransfer(_:updatedWithCurrentBytes:totalBytes:averageTransferRate:)(Swift::String _, Swift::UInt64 updatedWithCurrentBytes, Swift::UInt64 totalBytes, Swift::UInt64 averageTransferRate)
{
  sub_1D1622B8C(0xD000000000000047, 0x80000001D1697520);
}

Swift::Void __swiftcall IntentsClientBroadcaster.receivedUrgentRequest(forMessages:)(Swift::OpaquePointer forMessages)
{
  sub_1D1622B8C(0xD000000000000023, 0x80000001D16974F0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.defaultsChanged(_:forService:)(Swift::OpaquePointer _, Swift::String forService)
{
  sub_1D1622B8C(0xD00000000000001ELL, 0x80000001D16974D0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.showInvalidCertNotification(forAccount:)(Swift::String forAccount)
{
  sub_1D1622B8C(0xD000000000000028, 0x80000001D16974A0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.showForgotPasswordNotification(forAccount:)(Swift::String forAccount)
{
  sub_1D1622B8C(0xD00000000000002BLL, 0x80000001D1697470);
}

Swift::Void __swiftcall IntentsClientBroadcaster.activeAccountsChanged(_:forService:)(Swift::OpaquePointer _, Swift::String forService)
{
  sub_1D1622B8C(0xD000000000000024, 0x80000001D1697440);
}

void IntentsClientBroadcaster.account(_:defaults:blockList:allowList:blockingMode:blockIdleStatus:status:capabilities:serviceLoginStatus:loginStatusMessage:)()
{
  sub_1D1622B8C(0xD00000000000007FLL, 0x80000001D16973C0);
}

void IntentsClientBroadcaster.account(_:loginStatusChanged:message:reason:properties:)()
{
  sub_1D1622B8C(0xD000000000000038, 0x80000001D1697380);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:defaultsChanged:)(Swift::String _, Swift::OpaquePointer defaultsChanged)
{
  sub_1D1622B8C(0xD00000000000001BLL, 0x80000001D1697360);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:capabilitiesChanged:)(Swift::String _, Swift::UInt64 capabilitiesChanged)
{
  sub_1D1622B8C(0xD00000000000001FLL, 0x80000001D1697340);
}

Swift::Void __swiftcall IntentsClientBroadcaster.accountAdded(_:defaults:service:)(Swift::String _, Swift::OpaquePointer defaults, Swift::String service)
{
  sub_1D1622B8C(0xD000000000000021, 0x80000001D1697310);
}

Swift::Void __swiftcall IntentsClientBroadcaster.accountRemoved(_:)(Swift::String a1)
{
  sub_1D1622B8C(0xD000000000000012, 0x80000001D16972F0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:blockListChanged:)(Swift::String _, Swift::OpaquePointer blockListChanged)
{
  sub_1D1622B8C(0xD00000000000001CLL, 0x80000001D16972D0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:allowListChanged:)(Swift::String _, Swift::OpaquePointer allowListChanged)
{
  sub_1D1622B8C(0xD00000000000001CLL, 0x80000001D16972B0);
}

void IntentsClientBroadcaster.account(_:blockingModeChanged:)()
{
  sub_1D1622B8C(0xD00000000000001FLL, 0x80000001D1697290);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:blockIdleStatusChanged:)(Swift::String _, Swift::Bool blockIdleStatusChanged)
{
  sub_1D1622B8C(0xD000000000000022, 0x80000001D1697260);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:buddyPropertiesChanged:)(Swift::String _, Swift::OpaquePointer buddyPropertiesChanged)
{
  sub_1D1622B8C(0xD000000000000022, 0x80000001D1697230);
}

void IntentsClientBroadcaster.account(_:buddyPictureChanged:imageData:imageHash:)()
{
  sub_1D1622B8C(0xD000000000000033, 0x80000001D16971F0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:buddyProperties:buddyPictures:)(Swift::String _, Swift::OpaquePointer buddyProperties, Swift::OpaquePointer buddyPictures)
{
  sub_1D1622B8C(0xD000000000000029, 0x80000001D16971C0);
}

void IntentsClientBroadcaster.account(_:groupsChanged:error:)()
{
  sub_1D1622B8C(0xD00000000000001FLL, 0x80000001D16971A0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:handleSubscriptionRequestFrom:withMessage:)(Swift::String _, Swift::OpaquePointer handleSubscriptionRequestFrom, Swift::String withMessage)
{
  sub_1D1622B8C(0xD000000000000035, 0x80000001D1697160);
}

Swift::Void __swiftcall IntentsClientBroadcaster.account(_:statusChanged:)(Swift::String _, Swift::OpaquePointer statusChanged)
{
  sub_1D1622B8C(0xD000000000000019, 0x80000001D1697140);
}

void IntentsClientBroadcaster.account(_:postedError:)()
{
  sub_1D1622B8C(0xD000000000000017, 0x80000001D1697120);
}

void IntentsClientBroadcaster.updateNicknameData(_:)()
{
  sub_1D1622B8C(0xD000000000000016, 0x80000001D1697100);
}

Swift::Void __swiftcall IntentsClientBroadcaster.didUpdate(settingsKeys:)(Swift::OpaquePointer_optional settingsKeys)
{
  sub_1D1622B8C(0xD000000000000018, 0x80000001D16970E0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.setupComplete(_:info:)(Swift::Bool _, Swift::OpaquePointer info)
{
  sub_1D1622B8C(0xD000000000000016, 0x80000001D16970C0);
}

Swift::Void __swiftcall IntentsClientBroadcaster.setupComplete()()
{
  sub_1D1622B8C(0x6D6F437075746573, 0xEF29286574656C70);
}

void IntentsClientBroadcaster.didReceiveCollaborationMessage(_:inChat:style:account:)()
{
  sub_1D1622B8C(0xD000000000000037, 0x80000001D1697080);
}

Swift::Void __swiftcall IntentsClientBroadcaster.keyTransparencyOptInStateChanged(_:)(Swift::Bool a1)
{
  sub_1D1622B8C(0xD000000000000024, 0x80000001D1697050);
}

Swift::Void __swiftcall IntentsClientBroadcaster.refreshStatus(forKTPeerURI:)(Swift::String forKTPeerURI)
{
  sub_1D1622B8C(0xD00000000000001CLL, 0x80000001D1697030);
}

id IntentsClientBroadcaster.init()()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = &v0[OBJC_IVAR____TtC12IMDaemonCore24IntentsClientBroadcaster_sentinelString];
  *(_QWORD *)v2 = 0x736B726F77207449;
  *((_QWORD *)v2 + 1) = 0xE900000000000021;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

id IntentsClientBroadcaster.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D1622874(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *oslog;
  uint64_t v11;

  if (qword_1EFC61540 != -1)
    swift_once();
  v6 = sub_1D166D964();
  sub_1D141AC1C(v6, (uint64_t)qword_1EFC65E58);
  oslog = sub_1D166D94C();
  v7 = sub_1D166DD6C();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v11 = v9;
    *(_DWORD *)v8 = 136315138;
    sub_1D141BCB4(a3, a4, &v11);
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, oslog, v7, "Broadcast method called (currently a no-op): %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v9, -1, -1);
    MEMORY[0x1D17EB0AC](v8, -1, -1);

  }
  else
  {

  }
}

void sub_1D1622A00(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  NSObject *oslog;
  uint64_t v10;

  if (qword_1EFC61540 != -1)
    swift_once();
  v5 = sub_1D166D964();
  sub_1D141AC1C(v5, (uint64_t)qword_1EFC65E58);
  oslog = sub_1D166D94C();
  v6 = sub_1D166DD6C();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v10 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1D141BCB4(a2, a3, &v10);
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, oslog, v6, "Broadcast method called (currently a no-op): %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v8, -1, -1);
    MEMORY[0x1D17EB0AC](v7, -1, -1);

  }
  else
  {

  }
}

void sub_1D1622B8C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *oslog;
  uint64_t v9;

  if (qword_1EFC61540 != -1)
    swift_once();
  v4 = sub_1D166D964();
  sub_1D141AC1C(v4, (uint64_t)qword_1EFC65E58);
  oslog = sub_1D166D94C();
  v5 = sub_1D166DD6C();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v9 = v7;
    *(_DWORD *)v6 = 136315138;
    sub_1D141BCB4(a1, a2, &v9);
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, oslog, v5, "Broadcast method called (currently a no-op): %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v7, -1, -1);
    MEMORY[0x1D17EB0AC](v6, -1, -1);

  }
  else
  {

  }
}

uint64_t type metadata accessor for IntentsClientBroadcaster()
{
  return objc_opt_self();
}

uint64_t sub_1D1622D38(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1D15FF5B8(a1, a2);
  return a1;
}

uint64_t sub_1D1622D4C()
{
  uint64_t v0;

  v0 = sub_1D166D964();
  sub_1D15FD440(v0, qword_1ED935BD8);
  sub_1D141AC1C(v0, (uint64_t)qword_1ED935BD8);
  return sub_1D166D958();
}

id sub_1D1622DCC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)IMDAnalyticsBackgroundTaskMonitor), sel_init);
  qword_1ED935BF8 = (uint64_t)result;
  return result;
}

uint64_t sub_1D1622E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1D166DDFC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D166DDF0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1D166D9F4();
  MEMORY[0x1E0C80A78](v6);
  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED9357D0);
  sub_1D166D9DC();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1D15FC784((unint64_t *)&qword_1ED9357C0, v5, MEMORY[0x1E0DEF828]);
  sub_1D141AC58((uint64_t *)&unk_1ED935760);
  sub_1D162425C((unint64_t *)&qword_1ED935770, (uint64_t *)&unk_1ED935760);
  sub_1D166DF88();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1D166DE2C();
  qword_1ED935BC8 = result;
  return result;
}

id sub_1D1623008()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD aBlock[6];
  objc_super v23;

  v1 = sub_1D166D9C4();
  v19 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D166D9F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23.receiver = v0;
  v23.super_class = (Class)IMDAnalyticsBackgroundTaskMonitor;
  v8 = objc_msgSendSuper2(&v23, sel_init);
  v9 = qword_1ED935BD0;
  v10 = v8;
  if (v9 != -1)
    swift_once();
  v11 = swift_allocObject();
  v20 = v10;
  *(_QWORD *)(v11 + 16) = v10;
  aBlock[4] = sub_1D1623D18;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D141BC88;
  aBlock[3] = &unk_1E9230C78;
  v12 = _Block_copy(aBlock);
  sub_1D166D9E8();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1D15FC784((unint64_t *)&qword_1ED935580, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1D141AC58(&qword_1ED9355A8);
  sub_1D162425C((unint64_t *)&qword_1ED9355B0, &qword_1ED9355A8);
  sub_1D166DF88();
  MEMORY[0x1D17E8D30](0, v7, v3, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  if (qword_1ED935BF0 != -1)
    swift_once();
  v13 = sub_1D166D964();
  sub_1D141AC1C(v13, (uint64_t)qword_1ED935BD8);
  v14 = sub_1D166D94C();
  v15 = sub_1D166DD6C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1D1413000, v14, v15, "queued startTrackingRCSSwitchStates(). Heading back...", v16, 2u);
    MEMORY[0x1D17EB0AC](v16, -1, -1);
  }

  return v20;
}

uint64_t sub_1D16232E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1D166E12C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0BA0];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D166E120();
  v18 = a1;
  sub_1D15FC784(&qword_1EFC62D28, v3, MEMORY[0x1E0DF0BB0]);
  sub_1D166E228();
  if (qword_1ED935BF0 != -1)
    swift_once();
  v7 = sub_1D166D964();
  sub_1D141AC1C(v7, (uint64_t)qword_1ED935BD8);
  v8 = sub_1D166D94C();
  v9 = sub_1D166DD6C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v17 = v4;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v20 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = sub_1D166E294();
    v19 = sub_1D141BCB4(v13, v14, &v20);
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v8, v9, "startTrackingRCSSwitchStates() took %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v12, -1, -1);
    MEMORY[0x1D17EB0AC](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v6, v2);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  }
}

void sub_1D1623510()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  id v6;
  void *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  id v38;
  void *v39;
  id v40;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1ED935BF0 != -1)
    swift_once();
  v1 = sub_1D166D964();
  sub_1D141AC1C(v1, (uint64_t)qword_1ED935BD8);
  v2 = sub_1D166D94C();
  v3 = sub_1D166DD6C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D1413000, v2, v3, "Start tracking RCS Switch states", v4, 2u);
    MEMORY[0x1D17EB0AC](v4, -1, -1);
  }

  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_sharedScheduler);
  v7 = (void *)sub_1D166DAA8();
  v40 = objc_msgSend(v6, sel_taskRequestForIdentifier_, v7);

  if (v40)
  {
    v8 = sub_1D166D94C();
    v9 = sub_1D166DD6C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (void *)swift_slowAlloc();
      aBlock[0] = v11;
      *(_DWORD *)v10 = 136315138;
      sub_1D141BCB4(0xD000000000000022, 0x80000001D1698340, (uint64_t *)aBlock);
      sub_1D166DF28();
      _os_log_impl(&dword_1D1413000, v8, v9, "Task %s already registered", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v11, -1, -1);
      MEMORY[0x1D17EB0AC](v10, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v12 = objc_msgSend(v5, sel_sharedScheduler);
    v13 = (void *)sub_1D166DAA8();
    if (qword_1ED935BD0 != -1)
      swift_once();
    v14 = qword_1ED935BC8;
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v0;
    aBlock[4] = sub_1D1623DEC;
    aBlock[5] = v15;
    aBlock[0] = (id)MEMORY[0x1E0C809B0];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1D1623D74;
    aBlock[3] = &unk_1E9230CC8;
    v16 = _Block_copy(aBlock);
    v17 = v0;
    swift_release();
    objc_msgSend(v12, sel_registerForTaskWithIdentifier_usingQueue_launchHandler_, v13, v14, v16);
    _Block_release(v16);

    v18 = sub_1D166D94C();
    v19 = sub_1D166DD6C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = (void *)swift_slowAlloc();
      aBlock[0] = v21;
      *(_DWORD *)v20 = 136315138;
      sub_1D141BCB4(0xD000000000000022, 0x80000001D1698340, (uint64_t *)aBlock);
      sub_1D166DF28();
      _os_log_impl(&dword_1D1413000, v18, v19, "Successfully registered task %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v21, -1, -1);
      MEMORY[0x1D17EB0AC](v20, -1, -1);
    }

    v22 = objc_allocWithZone(MEMORY[0x1E0D00E50]);
    v23 = (void *)sub_1D166DAA8();
    v24 = objc_msgSend(v22, sel_initWithIdentifier_, v23);

    objc_msgSend(v24, sel_setInterval_, 86400.0);
    v25 = objc_msgSend(v5, sel_sharedScheduler);
    aBlock[0] = 0;
    LODWORD(v23) = objc_msgSend(v25, sel_submitTaskRequest_error_, v24, aBlock);

    if ((_DWORD)v23)
    {
      v26 = aBlock[0];
      v27 = sub_1D166D94C();
      v28 = sub_1D166DD6C();
      if (!os_log_type_enabled(v27, v28))
      {

        return;
      }
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = (void *)swift_slowAlloc();
      aBlock[0] = v30;
      *(_DWORD *)v29 = 136315138;
      sub_1D141BCB4(0xD000000000000022, 0x80000001D1698340, (uint64_t *)aBlock);
      sub_1D166DF28();
      _os_log_impl(&dword_1D1413000, v27, v28, "Successfully submitted task %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v30, -1, -1);
      MEMORY[0x1D17EB0AC](v29, -1, -1);

    }
    else
    {
      v31 = aBlock[0];
      v32 = (void *)sub_1D166D4B4();

      swift_willThrow();
      v33 = v32;
      v34 = v32;
      v27 = sub_1D166D94C();
      v35 = sub_1D166DD84();
      if (os_log_type_enabled(v27, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v37 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v36 = 138412290;
        v38 = v32;
        v39 = (void *)_swift_stdlib_bridgeErrorToNSError();
        aBlock[0] = v39;
        sub_1D166DF28();
        *v37 = v39;

        _os_log_impl(&dword_1D1413000, v27, v35, "Failed to submit task with error: %@", v36, 0xCu);
        sub_1D141AC58(&qword_1ED935810);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v37, -1, -1);
        MEMORY[0x1D17EB0AC](v36, -1, -1);

        return;
      }

    }
  }
}

uint64_t type metadata accessor for IMDAnalyticsBackgroundTaskMonitor(uint64_t a1)
{
  return sub_1D15FD3C0(a1, &qword_1EFC62D20);
}

uint64_t sub_1D1623CF4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D1623D18()
{
  uint64_t v0;

  return sub_1D16232E4(*(_QWORD *)(v0 + 16));
}

id sub_1D1623D20()
{
  void *v0;

  objc_opt_self();
  v0 = (void *)swift_dynamicCastObjCClassUnconditional();
  sub_1D1623ED4();
  return objc_msgSend(v0, sel_setTaskCompleted);
}

void sub_1D1623D74(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1D1623DC4()
{
  sub_1D1623510();
}

id sub_1D1623DEC()
{
  return sub_1D1623D20();
}

uint64_t sub_1D1623DF4()
{
  void *v0;
  void *v1;
  char v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v0 = (void *)sub_1D166DAA8();
  v1 = (void *)sub_1D166DAA8();
  v2 = IMGetDomainBoolForKey();

  if ((v2 & 1) != 0)
    return 1;
  v4 = (void *)sub_1D166DAA8();
  v5 = (void *)sub_1D166DAA8();
  v3 = IMGetDomainBoolForKey();

  return v3;
}

void sub_1D1623ED4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t inited;
  unint64_t v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;

  if (qword_1ED935BF0 != -1)
    swift_once();
  v0 = sub_1D166D964();
  sub_1D141AC1C(v0, (uint64_t)qword_1ED935BD8);
  v1 = sub_1D166D94C();
  v2 = sub_1D166DD6C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v21 = v4;
    *(_DWORD *)v3 = 136315138;
    sub_1D141BCB4(0xD000000000000022, 0x80000001D1698340, &v21);
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, v1, v2, "Performing task %s. Tracking current states of RCS related switches and sending to CoreAnalytics.", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v4, -1, -1);
    MEMORY[0x1D17EB0AC](v3, -1, -1);
  }

  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_sharedInstance);
  if (!v6)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_isRCSEnabled);

  v9 = objc_msgSend(v5, sel_sharedInstance);
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_isRBMEnabled);

  LOBYTE(v10) = sub_1D1623DF4();
  sub_1D141AC58(qword_1EFC62D30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D1683B10;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001D1698390;
  *(_BYTE *)(inited + 48) = v8;
  *(_QWORD *)(inited + 56) = 0xD000000000000018;
  *(_QWORD *)(inited + 64) = 0x80000001D16983B0;
  *(_BYTE *)(inited + 72) = v11;
  *(_QWORD *)(inited + 80) = 0xD000000000000012;
  *(_QWORD *)(inited + 88) = 0x80000001D16983D0;
  *(_BYTE *)(inited + 96) = v10 & 1;
  v13 = sub_1D160F6E8(inited);
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v14)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v15 = v14;
  v16 = (void *)sub_1D166DAA8();
  sub_1D16508BC(v13);
  swift_bridgeObjectRelease();
  v17 = (void *)sub_1D166DA18();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_trackEvent_withDictionary_, v16, v17);

  v18 = sub_1D166D94C();
  v19 = sub_1D166DD6C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1D1413000, v18, v19, "Sent current states of RCS related switches to analytics.", v20, 2u);
    MEMORY[0x1D17EB0AC](v20, -1, -1);
  }

}

uint64_t sub_1D162425C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1D15FC6A0(a2);
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D16242A8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 80) - 8);
  v47 = a3;
  v48 = v6;
  MEMORY[0x1E0C80A78](a1);
  v46 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v8;
  v49 = type metadata accessor for TextInfixParser.WrappingPair(0, v8, v9, v10);
  MEMORY[0x1E0C80A78](v49);
  v12 = (uint64_t *)((char *)&v45 - v11);
  if ((a2 & 0x2000000000000000) != 0)
    v13 = HIBYTE(a2) & 0xF;
  else
    v13 = a1 & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  if (v13)
  {
    v14 = 4 * v13;
    while (1)
    {
      swift_bridgeObjectRetain();
      v15 = sub_1D166DB98();
      v17 = v16;
      swift_bridgeObjectRelease();
      if (v15 == 37 && v17 == 0xE100000000000000)
        break;
      v18 = sub_1D166E1E0();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0 || v14 == (unint64_t)sub_1D166DB2C() >> 14)
        goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
LABEL_13:
  v19 = sub_1D166DBB0();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_1D166DF04();
  result = swift_bridgeObjectRelease();
  if (__OFADD__(v26, 2))
  {
    __break(1u);
  }
  else
  {
    v51 = a1;
    v52 = a2;
    sub_1D15FD3F8();
    swift_bridgeObjectRetain();
    v28 = sub_1D166DB14();
    v29 = sub_1D1624A54(v28, a1, a2);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    swift_bridgeObjectRelease();
    v36 = MEMORY[0x1D17E8A0C](v19, v21, v23, v25);
    v38 = v37;
    swift_bridgeObjectRelease();
    v39 = MEMORY[0x1D17E8A0C](v29, v31, v33, v35);
    v41 = v40;
    swift_bridgeObjectRelease();
    v42 = v48;
    v43 = v46;
    v44 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v46, v47, v50);
    *v12 = v36;
    v12[1] = v38;
    v12[2] = v39;
    v12[3] = v41;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))((char *)v12 + *(int *)(v49 + 32), v43, v44);
    swift_beginAccess();
    sub_1D166DC58();
    sub_1D166DC40();
    return swift_endAccess();
  }
  return result;
}

uint64_t type metadata accessor for TextInfixParser.WrappingPair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D1625300(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TextInfixParser.WrappingPair);
}

uint64_t sub_1D16245B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char v23;
  unint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char v29;
  char v30;
  uint64_t result;
  uint64_t TupleTypeMetadata2;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;

  v56 = a5;
  v55 = *(_QWORD *)(*v5 + 80);
  v8 = type metadata accessor for TextInfixParser.WrappingPair(0, v55, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v60 = (char *)&v53 - v14;
  v54 = v15;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v53 - v16;
  swift_beginAccess();
  v18 = v5[2];
  v19 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1D17E8B5C](v19, v8))
  {
LABEL_14:
    swift_bridgeObjectRelease();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v56, 1, 1, TupleTypeMetadata2);
  }
  v20 = 0;
  v57 = v17;
  v58 = v18;
  v59 = v9;
  while (1)
  {
    v23 = sub_1D166DC28();
    sub_1D166DC10();
    if ((v23 & 1) != 0)
    {
      v24 = v18
          + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
          + *(_QWORD *)(v9 + 72) * v20;
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      v25(v17, v24, v8);
      v26 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_13;
    }
    else
    {
      result = sub_1D166E0B4();
      if (v54 != 8)
        goto LABEL_24;
      v61 = result;
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      v25(v17, (unint64_t)&v61, v8);
      swift_unknownObjectRelease();
      v26 = v20 + 1;
      if (__OFADD__(v20, 1))
      {
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    v27 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v28 = v60;
    v27(v60, v17, v8);
    swift_bridgeObjectRetain();
    v29 = sub_1D166DB80();
    swift_bridgeObjectRelease();
    v25(v12, (unint64_t)v28, v8);
    if ((v29 & 1) != 0)
      break;
    v9 = v59;
    v21 = *(void (**)(char *, uint64_t))(v59 + 8);
    v21(v12, v8);
LABEL_4:
    v21(v60, v8);
    v18 = v58;
    v22 = MEMORY[0x1D17E8B5C](v58, v8);
    ++v20;
    v17 = v57;
    if (v26 == v22)
      goto LABEL_14;
  }
  v30 = sub_1D166DB8C();
  v9 = v59;
  v21 = *(void (**)(char *, uint64_t))(v59 + 8);
  v21(v12, v8);
  if ((v30 & 1) == 0)
    goto LABEL_4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = sub_1D166DB20();
  swift_bridgeObjectRelease();
  v34 = sub_1D1624AA0(v33, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v35 = sub_1D166DB20();
  result = swift_bridgeObjectRelease();
  if (v35 < 0)
  {
    __break(1u);
  }
  else
  {
    result = sub_1D166DEF8();
    if ((v36 & 1) != 0)
      v37 = v34;
    else
      v37 = result;
    if (v37 >> 14 >= v34 >> 14)
    {
      v38 = sub_1D166DF10();
      v40 = v39;
      v42 = v41;
      v44 = v43;
      swift_bridgeObjectRelease();
      v45 = v55;
      v46 = swift_getTupleTypeMetadata2();
      v47 = v56;
      v48 = (char *)v56 + *(int *)(v46 + 48);
      v49 = MEMORY[0x1D17E8A0C](v38, v40, v42, v44);
      v51 = v50;
      swift_bridgeObjectRelease();
      *v47 = v49;
      v47[1] = v51;
      v52 = v60;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v48, &v60[*(int *)(v8 + 32)], v45);
      v21(v52, v8);
      return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v47, 0, 1, v46);
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t TextInfixParser.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TextInfixParser.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1D1624A54(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_1D166DBB0();
  __break(1u);
  return result;
}

unint64_t sub_1D1624AA0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_1D166DB44();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_1D166DBB0();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D1624B40()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TextInfixParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D1625300(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TextInfixParser);
}

uint64_t method lookup function for TextInfixParser()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TextInfixParser.addPossibleMatch(localizedString:associatedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of TextInfixParser.result(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_1D1624BB4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D1624BBC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D1624C34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 32) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v11 = *v12;
    v11[1] = v12[1];
    v13 = ((unint64_t)v11 + v6 + 16) & ~v6;
    v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_1D1624D20(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1D1624D74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v11, v7);
  return a1;
}

_QWORD *sub_1D1624E0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_1D1624EBC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_1D1624F24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1D1624FB4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 32) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D1625088 + 4 * byte_1D1684130[(v9 - 1)]))();
}

void sub_1D1625100(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1D1625300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1D17EAF68](a1, v6, a5);
}

uint64_t sub_1D162532C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1D164F570(0, v1, 0);
  v2 = v27;
  result = sub_1D162ACB4(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v23 = v1;
  v24 = v5;
  v25 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v26 = v7;
    swift_bridgeObjectRetain();
    result = sub_1D166DBA4();
    v12 = result;
    v14 = v13;
    v16 = *(_QWORD *)(v27 + 16);
    v15 = *(_QWORD *)(v27 + 24);
    if (v16 >= v15 >> 1)
      result = sub_1D164F570(v15 > 1, v16 + 1, 1);
    *(_QWORD *)(v27 + 16) = v16 + 1;
    v17 = v27 + 16 * v16;
    *(_QWORD *)(v17 + 32) = v12;
    *(_QWORD *)(v17 + 40) = v14;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v18 = *(_QWORD *)(v25 + 8 * v11);
    if ((v18 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v24;
    if (*(_DWORD *)(a1 + 36) != v24)
      goto LABEL_27;
    v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v23;
    }
    else
    {
      v20 = v11 + 1;
      v21 = (unint64_t)(v9 + 63) >> 6;
      v10 = v23;
      if (v11 + 1 < v21)
      {
        v22 = *(_QWORD *)(v25 + 8 * v20);
        if (v22)
        {
LABEL_20:
          v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            v22 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v22)
            {
              v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v26 + 1;
    v6 = v9;
    if (v26 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1D162555C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3A38]);
  v1 = (void *)sub_1D166DAA8();
  v2 = objc_msgSend(v0, sel_initWithStoreIdentifier_type_, v1, 1);

  qword_1ED935720 = (uint64_t)v2;
}

id SyncedSettingsServiceManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *SyncedSettingsServiceManager.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  char *v16;
  char *v17;
  objc_class *v18;
  id v19;
  void *v20;
  char *v21;
  id v22;
  id v23;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  objc_super v28;
  uint64_t v29;

  v27 = sub_1D166DDFC();
  v1 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D166DDF0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1D166D9F4();
  MEMORY[0x1E0C80A78](v6);
  v26 = OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_ubiquitousStoreQueue;
  v25[1] = sub_1D15FD3C0(0, (unint64_t *)&qword_1ED9357D0);
  v7 = v0;
  sub_1D166D9E8();
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1D15FC784((unint64_t *)&qword_1ED9357C0, v5, MEMORY[0x1E0DEF828]);
  sub_1D141AC58((uint64_t *)&unk_1ED935760);
  sub_1D162425C((unint64_t *)&qword_1ED935770, (uint64_t *)&unk_1ED935760);
  sub_1D166DF88();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v27);
  *(_QWORD *)(v25[2] + v26) = sub_1D166DE2C();
  v8 = OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_sharedOTPDefaults;
  v9 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v10 = (void *)sub_1D166DAA8();
  v11 = objc_msgSend(v9, sel_initWithSuiteName_, v10);

  *(_QWORD *)&v7[v8] = v11;
  if (qword_1ED935728 != -1)
    swift_once();
  v12 = (void *)qword_1ED935720;
  *(_QWORD *)&v7[OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteStorageDelegate] = qword_1ED935720;
  v13 = (void *)objc_opt_self();
  v14 = v12;
  v15 = objc_msgSend(v13, sel_sharedInstance);
  *(_QWORD *)&v7[OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_localStorageDelegate] = v15;
  v16 = &v7[OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_localDomain];
  *(_QWORD *)v16 = 0xD000000000000013;
  *((_QWORD *)v16 + 1) = 0x80000001D1698540;
  v17 = &v7[OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteDomain];
  *(_QWORD *)v17 = 0xD000000000000021;
  *((_QWORD *)v17 + 1) = 0x80000001D1698560;

  v18 = (objc_class *)type metadata accessor for SyncedSettingsServiceManager();
  v28.receiver = v7;
  v28.super_class = v18;
  v19 = objc_msgSendSuper2(&v28, sel_init);
  v20 = (void *)objc_opt_self();
  v21 = (char *)v19;
  v22 = objc_msgSend(v20, sel_defaultCenter);
  objc_msgSend(v22, sel_addObserver_selector_name_object_, v21, sel_handleDidChangeWithNotification_, *MEMORY[0x1E0CB3368], *(_QWORD *)&v21[OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteStorageDelegate]);

  v23 = objc_msgSend(v20, sel_defaultCenter);
  objc_msgSend(v23, sel_addObserver_selector_name_object_, v21, sel_cloudkitStateEnabledReturnedWithNotification_, CFSTR("com.apple.IMDaemonCore.IMDCKUtilities.MiCEnabledStateReturned"), 0);

  sub_1D1625E90(0, 0);
  return v21;
}

uint64_t type metadata accessor for SyncedSettingsServiceManager()
{
  return objc_opt_self();
}

char *SyncedSettingsServiceManager.__allocating_init(localDomain:remoteDomain:localStorageDelegate:remoteStorageDelegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return SyncedSettingsServiceManager.init(localDomain:remoteDomain:localStorageDelegate:remoteStorageDelegate:)(a1, a2, a3, a4, a5, a6);
}

char *SyncedSettingsServiceManager.init(localDomain:remoteDomain:localStorageDelegate:remoteStorageDelegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  id v24;
  void *v25;
  char *v26;
  id v27;
  id v28;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;
  uint64_t v40;

  v37 = a5;
  v38 = a6;
  v35 = a3;
  v36 = a4;
  v33 = a1;
  v34 = a2;
  v32 = sub_1D166DDFC();
  v7 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D166DDF0();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v10);
  v12 = sub_1D166D9F4();
  MEMORY[0x1E0C80A78](v12);
  v31 = OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_ubiquitousStoreQueue;
  v30[1] = sub_1D15FD3C0(0, (unint64_t *)&qword_1ED9357D0);
  v13 = v6;
  sub_1D166D9E8();
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1D15FC784((unint64_t *)&qword_1ED9357C0, v11, MEMORY[0x1E0DEF828]);
  sub_1D141AC58((uint64_t *)&unk_1ED935760);
  sub_1D162425C((unint64_t *)&qword_1ED935770, (uint64_t *)&unk_1ED935760);
  sub_1D166DF88();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D0], v32);
  *(_QWORD *)(v30[2] + v31) = sub_1D166DE2C();
  v14 = OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_sharedOTPDefaults;
  v15 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v16 = (void *)sub_1D166DAA8();
  v17 = objc_msgSend(v15, sel_initWithSuiteName_, v16);

  *(_QWORD *)&v13[v14] = v17;
  v18 = &v13[OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_localDomain];
  v19 = v34;
  *(_QWORD *)v18 = v33;
  *((_QWORD *)v18 + 1) = v19;
  v20 = &v13[OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteDomain];
  v21 = v36;
  v22 = v37;
  *(_QWORD *)v20 = v35;
  *((_QWORD *)v20 + 1) = v21;
  *(_QWORD *)&v13[OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_localStorageDelegate] = v22;
  *(_QWORD *)&v13[OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteStorageDelegate] = v38;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();

  v23 = (objc_class *)type metadata accessor for SyncedSettingsServiceManager();
  v39.receiver = v13;
  v39.super_class = v23;
  v24 = objc_msgSendSuper2(&v39, sel_init);
  v25 = (void *)objc_opt_self();
  v26 = (char *)v24;
  v27 = objc_msgSend(v25, sel_defaultCenter);
  objc_msgSend(v27, sel_addObserver_selector_name_object_, v26, sel_handleDidChangeWithNotification_, *MEMORY[0x1E0CB3368], *(_QWORD *)&v26[OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteStorageDelegate]);

  v28 = objc_msgSend(v25, sel_defaultCenter);
  objc_msgSend(v28, sel_addObserver_selector_name_object_, v26, sel_cloudkitStateEnabledReturnedWithNotification_, CFSTR("com.apple.IMDaemonCore.IMDCKUtilities.MiCEnabledStateReturned"), 0);

  sub_1D1625E90(0, 0);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v26;
}

void sub_1D1625E90(uint64_t a1, uint64_t a2)
{
  id v4;
  unsigned int v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D1626348();
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_cloudKitSyncingEnabled);

  if (v5)
  {
    sub_1D1627E04(0);
    v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = v6;
    v7[3] = a1;
    v7[4] = a2;
    swift_retain();
    sub_1D16299D4(a1);
    sub_1D1629320((uint64_t)sub_1D16299C8, (uint64_t)v7);
    swift_release();
    swift_release();
  }
}

void sub_1D1625F90()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;

  if (qword_1ED934FF8 != -1)
    swift_once();
  v1 = sub_1D166D964();
  sub_1D141AC1C(v1, (uint64_t)qword_1ED9364B8);
  v2 = v0;
  v3 = sub_1D166D94C();
  v4 = sub_1D166DD9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67109120;
    v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    objc_msgSend(v6, sel_cloudKitSyncingEnabled);

    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, v3, v4, "cloudkitStateEnabledReturned [%{BOOL}d] setting up...", v5, 8u);
    MEMORY[0x1D17EB0AC](v5, -1, -1);

  }
  else
  {

  }
  sub_1D1625E90((uint64_t)sub_1D1626114, 0);
}

uint64_t sub_1D1626114()
{
  int64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v12;

  v0 = *(_QWORD *)(sub_1D166DE74() + 16);
  if (v0)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1D164F570(0, v0, 0);
    v1 = 0;
    do
    {
      v2 = sub_1D166DE50();
      v4 = v3;
      v6 = *(_QWORD *)(v12 + 16);
      v5 = *(_QWORD *)(v12 + 24);
      if (v6 >= v5 >> 1)
        sub_1D164F570(v5 > 1, v6 + 1, 1);
      ++v1;
      *(_QWORD *)(v12 + 16) = v6 + 1;
      v7 = v12 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v2;
      *(_QWORD *)(v7 + 40) = v4;
    }
    while (v0 != v1);
  }
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedProvider);
  if (!v8)
    return swift_bridgeObjectRelease();
  v9 = objc_msgSend(v8, sel_broadcasterForSyncedSettingsListeners);
  swift_unknownObjectRelease();
  v10 = (void *)sub_1D166DBD4();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_didUpdateSettingsKeys_, v10);

  return swift_unknownObjectRelease();
}

uint64_t sub_1D1626348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  _OWORD v25[2];
  __int128 v26;
  __int128 v27;

  v1 = v0;
  v2 = *(_QWORD *)(sub_1D166DE74() + 16);
  if (v2)
  {
    v3 = 0;
    v24 = OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_localStorageDelegate;
    while (1)
    {
      v4 = sub_1D166DE50();
      v6 = v5;
      swift_bridgeObjectRetain();
      sub_1D166DE44();
      if ((v7 & 1) != 0)
      {
        if (qword_1ED934FF8 != -1)
          swift_once();
        v12 = sub_1D166D964();
        sub_1D141AC1C(v12, (uint64_t)qword_1ED9364B8);
        swift_bridgeObjectRetain_n();
        v13 = sub_1D166D94C();
        v14 = sub_1D166DD84();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = swift_slowAlloc();
          v16 = v2;
          v17 = v1;
          v18 = swift_slowAlloc();
          *(_QWORD *)&v26 = v18;
          *(_DWORD *)v15 = 136315138;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v15 + 4) = sub_1D141BCB4(v4, v6, (uint64_t *)&v26);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1D1413000, v13, v14, "SyncedSettingsManager tried to get a local synced setting with an unknown key: %s", (uint8_t *)v15, 0xCu);
          swift_arrayDestroy();
          v19 = v18;
          v1 = v17;
          v2 = v16;
          MEMORY[0x1D17EB0AC](v19, -1, -1);
          MEMORY[0x1D17EB0AC](v15, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        v8 = *(void **)(v1 + v24);
        if (v8)
        {
          v9 = (void *)sub_1D166DAA8();
          v10 = (void *)sub_1D166DAA8();
          v11 = objc_msgSend(v8, sel_getValueFromDomain_forKey_, v9, v10);

          if (v11)
          {
            sub_1D166DF70();
            swift_unknownObjectRelease();
          }
          else
          {
            memset(v25, 0, sizeof(v25));
          }
          sub_1D1617718((uint64_t)v25, (uint64_t)&v26, &qword_1ED935840);
          goto LABEL_16;
        }
      }
      v26 = 0u;
      v27 = 0u;
LABEL_16:
      swift_bridgeObjectRelease();
      v20 = *((_QWORD *)&v27 + 1);
      sub_1D1608CC4((uint64_t)&v26);
      if (!v20)
      {
        sub_1D166DE5C();
        v21 = sub_1D166DE50();
        sub_1D16277D0(&v26, v21, v22);
        swift_bridgeObjectRelease();
        sub_1D141AC98((uint64_t)&v26);
      }
      if (v2 == ++v3)
        return swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D162667C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  int64_t v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  _QWORD v48[2];
  uint64_t (*v49)(uint64_t);
  int64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 aBlock;
  __int128 v62;
  void (*v63)();
  uint64_t v64;
  _OWORD v65[2];
  _OWORD v66[2];

  v57 = sub_1D166D9C4();
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v55 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1D166D9F4();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v52 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = a2;
  v59 = a2 + 16;
  v9 = *(_QWORD *)(sub_1D166DE74() + 16);
  v49 = a3;
  v48[1] = a4;
  if (v9)
  {
    *(_QWORD *)&aBlock = MEMORY[0x1E0DEE9D8];
    sub_1D164F570(0, v9, 0);
    v10 = 0;
    v11 = aBlock;
    do
    {
      v12 = sub_1D166DE50();
      v14 = v13;
      *(_QWORD *)&aBlock = v11;
      v16 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1D164F570(v15 > 1, v16 + 1, 1);
        v11 = aBlock;
      }
      ++v10;
      *(_QWORD *)(v11 + 16) = v16 + 1;
      v17 = v11 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v12;
      *(_QWORD *)(v17 + 40) = v14;
    }
    while (v9 != v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
  }
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1D162532C(v18);
  swift_bridgeObjectRelease();
  v20 = sub_1D16308B0(v11);
  swift_bridgeObjectRelease();
  v21 = sub_1D1629F1C(v19, v20);
  swift_bridgeObjectRelease();
  v22 = v21 + 56;
  v23 = 1 << *(_BYTE *)(v21 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & *(_QWORD *)(v21 + 56);
  swift_beginAccess();
  result = swift_beginAccess();
  v27 = 0;
  v28 = (unint64_t)(v23 + 63) >> 6;
  v51 = v21;
  v50 = v28;
  while (1)
  {
    if (v25)
    {
      v29 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v30 = v29 | (v27 << 6);
      goto LABEL_29;
    }
    v31 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v31 >= v28)
      goto LABEL_35;
    v32 = *(_QWORD *)(v22 + 8 * v31);
    ++v27;
    if (!v32)
    {
      v27 = v31 + 1;
      if (v31 + 1 >= v28)
        goto LABEL_35;
      v32 = *(_QWORD *)(v22 + 8 * v27);
      if (!v32)
      {
        v27 = v31 + 2;
        if (v31 + 2 >= v28)
          goto LABEL_35;
        v32 = *(_QWORD *)(v22 + 8 * v27);
        if (!v32)
          break;
      }
    }
LABEL_28:
    v25 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v27 << 6);
LABEL_29:
    v34 = (uint64_t *)(*(_QWORD *)(v21 + 48) + 16 * v30);
    v35 = *v34;
    v36 = v34[1];
    v37 = MEMORY[0x1D17EB154](v59);
    if (!v37)
    {
      v62 = 0u;
      aBlock = 0u;
      goto LABEL_12;
    }
    v38 = (void *)v37;
    swift_bridgeObjectRetain();
    sub_1D1627B9C(v35, v36, &aBlock);

    if (*((_QWORD *)&v62 + 1))
    {
      sub_1D141B3E4(&aBlock, v66);
      v39 = MEMORY[0x1D17EB154](v59);
      if (v39)
      {
        v40 = (void *)v39;
        v41 = *(id *)(v39 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_ubiquitousStoreQueue);

        sub_1D141B3A8((uint64_t)v66, (uint64_t)v65);
        v42 = swift_allocObject();
        *(_QWORD *)(v42 + 16) = v58;
        sub_1D141B3E4(v65, (_OWORD *)(v42 + 24));
        *(_QWORD *)(v42 + 56) = v35;
        *(_QWORD *)(v42 + 64) = v36;
        v63 = sub_1D162AD98;
        v64 = v42;
        *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v62 = sub_1D141BC88;
        *((_QWORD *)&v62 + 1) = &unk_1E9231008;
        v43 = _Block_copy(&aBlock);
        swift_retain();
        v44 = v52;
        sub_1D166D9E8();
        v60 = MEMORY[0x1E0DEE9D8];
        sub_1D15FC784((unint64_t *)&qword_1ED935580, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1D141AC58(&qword_1ED9355A8);
        sub_1D162425C((unint64_t *)&qword_1ED9355B0, &qword_1ED9355A8);
        v45 = v55;
        v46 = v57;
        sub_1D166DF88();
        MEMORY[0x1D17E8D30](0, v44, v45, v43);
        _Block_release(v43);

        v28 = v50;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v45, v46);
        v47 = v44;
        v21 = v51;
        (*(void (**)(char *, uint64_t))(v53 + 8))(v47, v54);
        sub_1D141AC98((uint64_t)v66);
        result = swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        result = sub_1D141AC98((uint64_t)v66);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_12:
      result = sub_1D1608CC4((uint64_t)&aBlock);
    }
  }
  v33 = v31 + 3;
  if (v33 < v28)
  {
    v32 = *(_QWORD *)(v22 + 8 * v33);
    if (!v32)
    {
      while (1)
      {
        v27 = v33 + 1;
        if (__OFADD__(v33, 1))
          goto LABEL_39;
        if (v27 >= v28)
          goto LABEL_35;
        v32 = *(_QWORD *)(v22 + 8 * v27);
        ++v33;
        if (v32)
          goto LABEL_28;
      }
    }
    v27 = v33;
    goto LABEL_28;
  }
LABEL_35:
  result = swift_release();
  if (v49)
    return v49(result);
  return result;
}

void sub_1D1626C5C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1D17EB154](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteStorageDelegate);
    swift_unknownObjectRetain();

    if (v6)
    {
      sub_1D141AC34(a2, a2[3]);
      v7 = sub_1D166E1D4();
      v8 = (void *)sub_1D166DAA8();
      objc_msgSend(v6, sel_setObject_forKey_, v7, v8);
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
    }
  }
}

id SyncedSettingsServiceManager.__deallocating_deinit()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  objc_super v5;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, v0, *MEMORY[0x1E0CB3368], *(_QWORD *)&v0[OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteStorageDelegate]);

  v3 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v3, sel_removeObserver_name_object_, v0, CFSTR("com.apple.IMDaemonCore.IMDCKUtilities.MiCEnabledStateReturned"), 0);

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for SyncedSettingsServiceManager();
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

double sub_1D1626EAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  unsigned int v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  double result;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  _OWORD v31[2];

  v3 = v2;
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v7 = objc_msgSend(v6, sel_cloudKitSyncingEnabled);

  if (v7)
  {
    v8 = *(void **)(v3 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteStorageDelegate);
    if (v8)
    {
      sub_1D166DE50();
      v9 = (void *)sub_1D166DAA8();
      swift_bridgeObjectRelease();
      v10 = objc_msgSend(v8, sel_objectForKey_, v9);

      if (v10)
      {
LABEL_4:
        sub_1D166DF70();
        swift_unknownObjectRelease();
LABEL_20:
        sub_1D1617718((uint64_t)v31, a2, &qword_1ED935840);
        return result;
      }
LABEL_19:
      memset(v31, 0, sizeof(v31));
      goto LABEL_20;
    }
LABEL_21:
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  if (a1 != 2)
  {
LABEL_17:
    v27 = *(void **)(v3 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_localStorageDelegate);
    if (v27)
    {
      v28 = (void *)sub_1D166DAA8();
      sub_1D166DE50();
      v29 = (void *)sub_1D166DAA8();
      swift_bridgeObjectRelease();
      v30 = objc_msgSend(v27, sel_getValueFromDomain_forKey_, v28, v29);

      if (v30)
        goto LABEL_4;
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  v11 = *(void **)(v3 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_sharedOTPDefaults);
  if (!v11)
  {
    if (qword_1ED934FF8 != -1)
      swift_once();
    v23 = sub_1D166D964();
    sub_1D141AC1C(v23, (uint64_t)qword_1ED9364B8);
    v24 = sub_1D166D94C();
    v25 = sub_1D166DD84();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1D1413000, v24, v25, "SyncedSettingsManager sharedOTPDefaults is unexpectedly nil", v26, 2u);
      MEMORY[0x1D17EB0AC](v26, -1, -1);
    }

    goto LABEL_17;
  }
  v12 = v11;
  sub_1D166DE50();
  v13 = (void *)sub_1D166DAA8();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_integerForKey_, v13);

  if (qword_1ED934FF8 != -1)
    swift_once();
  v15 = sub_1D166D964();
  sub_1D141AC1C(v15, (uint64_t)qword_1ED9364B8);
  v16 = sub_1D166D94C();
  v17 = sub_1D166DD9C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    *(_QWORD *)&v31[0] = v19;
    *(_DWORD *)v18 = 136315394;
    v20 = sub_1D166DE50();
    sub_1D141BCB4(v20, v21, (uint64_t *)v31);
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2048;
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, v16, v17, "SyncedSettingsManager processing request of OTP(%s) and returning: %ld", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v19, -1, -1);
    MEMORY[0x1D17EB0AC](v18, -1, -1);
  }

  *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEB418];
  *(_QWORD *)a2 = v14;
  return result;
}

void sub_1D1627384(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];
  _OWORD v23[2];

  v5 = sub_1D166D9C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1D166D9F4();
  v9 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D166DE50();
  sub_1D16277D0(a1, v12, v13);
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v15 = objc_msgSend(v14, sel_cloudKitSyncingEnabled);

  if (v15)
  {
    v19[1] = *(_QWORD *)(v2 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_ubiquitousStoreQueue);
    v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1D141B3A8((uint64_t)a1, (uint64_t)v23);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v16;
    sub_1D141B3E4(v23, (_OWORD *)(v17 + 24));
    *(_QWORD *)(v17 + 56) = a2;
    aBlock[4] = sub_1D1629868;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D141BC88;
    aBlock[3] = &unk_1E9230E78;
    v18 = _Block_copy(aBlock);
    swift_retain();
    sub_1D166D9E8();
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1D15FC784((unint64_t *)&qword_1ED935580, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1D141AC58(&qword_1ED9355A8);
    sub_1D162425C((unint64_t *)&qword_1ED9355B0, &qword_1ED9355A8);
    sub_1D166DF88();
    MEMORY[0x1D17E8D30](0, v11, v8, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v20);
    swift_release();
    swift_release();
  }
}

void sub_1D1627628(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1D17EB154](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteStorageDelegate);
    swift_unknownObjectRetain();

    if (v6)
    {
      sub_1D141AC34(a2, a2[3]);
      v7 = sub_1D166E1D4();
      sub_1D166DE50();
      v8 = (void *)sub_1D166DAA8();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setObject_forKey_, v7, v8);
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
    }
  }
  swift_beginAccess();
  v9 = MEMORY[0x1D17EB154](v3);
  if (v9)
  {
    v10 = (void *)v9;
    v11 = *(void **)(v9 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteStorageDelegate);
    swift_unknownObjectRetain();

    if (v11)
    {
      objc_msgSend(v11, sel_synchronize);
      swift_unknownObjectRelease();
    }
  }
}

void sub_1D16277D0(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  char v15;
  void *v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;

  v4 = v3;
  swift_bridgeObjectRetain();
  sub_1D166DE44();
  if ((v8 & 1) == 0)
  {
    if (sub_1D166DE50() == a2 && v9 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = sub_1D166E1E0();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
LABEL_18:
        v23 = *(void **)(v4 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_localStorageDelegate);
        if (v23)
        {
          sub_1D141AC34(a1, a1[3]);
          v24 = sub_1D166E1D4();
          v25 = (void *)sub_1D166DAA8();
          v26 = (id)sub_1D166DAA8();
          objc_msgSend(v23, sel_setValue_forDomain_forKey_, v24, v25, v26);
          swift_unknownObjectRelease();

        }
        return;
      }
    }
    v16 = *(void **)(v3 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_sharedOTPDefaults);
    if (v16)
    {
      sub_1D141AC34(a1, a1[3]);
      v17 = v16;
      v18 = sub_1D166E1D4();
      v19 = sub_1D166DAA8();
      objc_msgSend(v17, sel_setValue_forKey_, v18, v19);

      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_1ED934FF8 != -1)
        swift_once();
      v20 = sub_1D166D964();
      sub_1D141AC1C(v20, (uint64_t)qword_1ED9364B8);
      v19 = sub_1D166D94C();
      v21 = sub_1D166DD84();
      if (os_log_type_enabled(v19, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_1D1413000, v19, v21, "SyncedSettingsManager sharedOTPDefaults is unexpectedly nil", v22, 2u);
        MEMORY[0x1D17EB0AC](v22, -1, -1);
      }
    }

    goto LABEL_18;
  }
  if (qword_1ED934FF8 != -1)
    swift_once();
  v10 = sub_1D166D964();
  sub_1D141AC1C(v10, (uint64_t)qword_1ED9364B8);
  swift_bridgeObjectRetain_n();
  v11 = sub_1D166D94C();
  v12 = sub_1D166DD84();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v27 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a2, a3, &v27);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D1413000, v11, v12, "SyncedSettingsManager tried to update a local synced setting with an unknown key: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v14, -1, -1);
    MEMORY[0x1D17EB0AC](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1D1627B9C(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  char v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;

  swift_bridgeObjectRetain();
  sub_1D166DE44();
  if ((v7 & 1) != 0)
  {
    if (qword_1ED934FF8 != -1)
      swift_once();
    v12 = sub_1D166D964();
    sub_1D141AC1C(v12, (uint64_t)qword_1ED9364B8);
    swift_bridgeObjectRetain_n();
    v13 = sub_1D166D94C();
    v14 = sub_1D166DD84();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_QWORD *)&v17[0] = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain();
      v18 = sub_1D141BCB4(a1, a2, (uint64_t *)v17);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D1413000, v13, v14, "SyncedSettingsManager tried to get a local synced setting with an unknown key: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v16, -1, -1);
      MEMORY[0x1D17EB0AC](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_10;
  }
  v8 = *(void **)(v3 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_localStorageDelegate);
  if (!v8)
  {
LABEL_10:
    *a3 = 0u;
    a3[1] = 0u;
    return;
  }
  v9 = (void *)sub_1D166DAA8();
  v10 = (void *)sub_1D166DAA8();
  v11 = objc_msgSend(v8, sel_getValueFromDomain_forKey_, v9, v10);

  if (v11)
  {
    sub_1D166DF70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_1D1617718((uint64_t)v17, (uint64_t)a3, &qword_1ED935840);
}

uint64_t sub_1D1627E04(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1ED934FF8 != -1)
    swift_once();
  v2 = sub_1D166D964();
  sub_1D141AC1C(v2, (uint64_t)qword_1ED9364B8);
  v3 = sub_1D166D94C();
  v4 = sub_1D166DD9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1D1413000, v3, v4, "Syncronizing Local Store.", v5, 2u);
    MEMORY[0x1D17EB0AC](v5, -1, -1);
  }

  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D1629320((uint64_t)sub_1D162998C, v7);
  swift_release();
  return swift_release();
}

void sub_1D1627F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t inited;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  int64_t v56;
  char v57[32];
  uint64_t v58;
  _QWORD v59[4];
  __int128 v60;
  _OWORD v61[2];
  uint64_t v62;
  unint64_t v63;
  __int128 v64;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = (void *)MEMORY[0x1D17EB154](v5);

  if (!v6)
  {
    if (qword_1ED934FF8 != -1)
      swift_once();
    v44 = sub_1D166D964();
    sub_1D141AC1C(v44, (uint64_t)qword_1ED9364B8);
    v45 = sub_1D166D94C();
    v46 = sub_1D166DD84();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_1D1413000, v45, v46, "self is nil in fetchUbiqitousSettings completion handler.", v47, 2u);
      MEMORY[0x1D17EB0AC](v47, -1, -1);
    }

    return;
  }
  v51 = a3;
  v53 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  swift_beginAccess();
  v55 = (unint64_t)(v7 + 63) >> 6;
  v56 = 0;
  v52 = a1;
  v54 = v5;
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v56 << 6);
LABEL_8:
      v12 = *(_QWORD *)(a1 + 56);
      v13 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v14 = v13[1];
      *(_QWORD *)&v60 = *v13;
      *((_QWORD *)&v60 + 1) = v14;
      sub_1D141B3A8(v12 + 32 * v11, (uint64_t)v61);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v15 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
LABEL_53:
      swift_once();
LABEL_41:
      v36 = sub_1D166D964();
      sub_1D141AC1C(v36, (uint64_t)qword_1ED9364B8);
      swift_bridgeObjectRetain_n();
      v37 = sub_1D166D94C();
      v38 = sub_1D166DD78();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        v40 = swift_slowAlloc();
        v62 = v40;
        *(_DWORD *)v39 = 136315138;
        swift_bridgeObjectRetain();
        v41 = MEMORY[0x1D17E8B08](v51, MEMORY[0x1E0DEA968]);
        v43 = v42;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v60 = sub_1D141BCB4(v41, v43, &v62);
        sub_1D166DF28();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D1413000, v37, v38, "changedKeys: %s", v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v40, -1, -1);
        MEMORY[0x1D17EB0AC](v39, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v48 = objc_msgSend((id)objc_opt_self(), sel_sharedProvider);
      if (v48)
      {
        v49 = objc_msgSend(v48, sel_broadcasterForSyncedSettingsListeners);
        swift_unknownObjectRelease();
        v50 = (void *)sub_1D166DBD4();
        objc_msgSend(v49, sel_didUpdateSettingsKeys_, v50);

        swift_unknownObjectRelease();
      }
      return;
    }
    if (v15 < v55)
    {
      v16 = *(_QWORD *)(v53 + 8 * v15);
      if (v16)
        goto LABEL_12;
      v17 = v56 + 2;
      ++v56;
      if (v15 + 1 < v55)
      {
        v16 = *(_QWORD *)(v53 + 8 * v17);
        if (v16)
          goto LABEL_15;
        v56 = v15 + 1;
        if (v15 + 2 < v55)
        {
          v16 = *(_QWORD *)(v53 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
            goto LABEL_12;
          }
          v17 = v15 + 3;
          v56 = v15 + 2;
          if (v15 + 3 < v55)
            break;
        }
      }
    }
LABEL_26:
    v9 = 0;
    memset(v61, 0, sizeof(v61));
    v60 = 0u;
LABEL_27:
    sub_1D1617718((uint64_t)&v60, (uint64_t)&v62, &qword_1ED935B98);
    v18 = v63;
    if (!v63)
    {
      swift_release();
      if (!v51)
        return;
      if (qword_1ED934FF8 == -1)
        goto LABEL_41;
      goto LABEL_53;
    }
    v19 = v62;
    sub_1D141B3E4(&v64, &v60);
    swift_bridgeObjectRetain();
    sub_1D166DE44();
    if ((v20 & 1) != 0 || (v21 = (void *)MEMORY[0x1D17EB154](v5), v21, !v21))
    {
      sub_1D141AC98((uint64_t)&v60);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1ED934FF8 != -1)
        swift_once();
      v22 = sub_1D166D964();
      sub_1D141AC1C(v22, (uint64_t)qword_1ED9364B8);
      sub_1D141B3A8((uint64_t)&v60, (uint64_t)v59);
      swift_bridgeObjectRetain_n();
      v23 = sub_1D166D94C();
      v24 = sub_1D166DD78();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc();
        v26 = swift_slowAlloc();
        v58 = v26;
        *(_DWORD *)v25 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v25 + 4) = sub_1D141BCB4(v19, v18, &v58);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v25 + 12) = 2080;
        sub_1D141B3A8((uint64_t)v59, (uint64_t)v57);
        v27 = sub_1D166DAE4();
        *(_QWORD *)(v25 + 14) = sub_1D141BCB4(v27, v28, &v58);
        swift_bridgeObjectRelease();
        sub_1D141AC98((uint64_t)v59);
        _os_log_impl(&dword_1D1413000, v23, v24, "{%s : %s}", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v26, -1, -1);
        a1 = v52;
        MEMORY[0x1D17EB0AC](v25, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_1D141AC98((uint64_t)v59);
      }

      v5 = v54;
      v29 = MEMORY[0x1D17EB154](v54);
      if (v29)
      {
        v30 = (void *)v29;
        sub_1D16277D0(&v60, v19, v18);

      }
      swift_bridgeObjectRelease();
      v31 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      v32 = (void *)sub_1D166DE68();
      sub_1D141AC58(&qword_1ED9356C0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D1683B20;
      v59[0] = 0x6E6F73616572;
      v59[1] = 0xE600000000000000;
      v34 = MEMORY[0x1E0DEA968];
      sub_1D166E048();
      *(_QWORD *)(inited + 96) = v34;
      *(_QWORD *)(inited + 72) = 0x796C65746F6D6552;
      *(_QWORD *)(inited + 80) = 0xEB00000000746553;
      sub_1D141BB00(inited);
      v35 = (void *)sub_1D166DA18();
      swift_bridgeObjectRelease();
      objc_msgSend(v31, sel_postNotificationName_object_userInfo_, v32, 0, v35);

      sub_1D141AC98((uint64_t)&v60);
    }
  }
  v16 = *(_QWORD *)(v53 + 8 * v17);
  if (v16)
  {
LABEL_15:
    v15 = v17;
LABEL_12:
    v9 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v15 << 6);
    v56 = v15;
    goto LABEL_8;
  }
  while (1)
  {
    v15 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v15 >= v55)
    {
      v56 = v55 - 1;
      goto LABEL_26;
    }
    v16 = *(_QWORD *)(v53 + 8 * v15);
    ++v17;
    if (v16)
      goto LABEL_12;
  }
  __break(1u);
}

void sub_1D16287E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  uint8_t *v26;
  id v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  const char *v54;
  os_log_type_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint32_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  char *v65;
  _QWORD v66[2];
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t aBlock[6];
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;

  v2 = v1;
  v4 = sub_1D166D9C4();
  v72 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v71 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D166D9F4();
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  MEMORY[0x1E0C80A78](v6);
  v68 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D166D460();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v74 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v66 - v12;
  if (qword_1ED934FF8 != -1)
    swift_once();
  v14 = sub_1D166D964();
  v15 = sub_1D141AC1C(v14, (uint64_t)qword_1ED9364B8);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v75 = a1;
  v73 = v16;
  v16(v13, a1, v8);
  v76 = v15;
  v17 = sub_1D166D94C();
  v18 = sub_1D166DD9C();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v67 = v4;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc();
    v66[1] = v2;
    v22 = v21;
    aBlock[0] = v21;
    *(_DWORD *)v20 = 136315138;
    sub_1D15FC784((unint64_t *)&unk_1EFC62E80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE648], MEMORY[0x1E0CAE658]);
    v23 = sub_1D166E1BC();
    *(_QWORD *)&v80 = sub_1D141BCB4(v23, v24, aBlock);
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    v25 = *(void (**)(char *, uint64_t))(v9 + 8);
    v25(v13, v8);
    _os_log_impl(&dword_1D1413000, v17, v18, "Received NSUbiquitousKeyValueStoreDidChangeExternallyNotification {notification: %s}", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v22, -1, -1);
    v26 = v20;
    v4 = v67;
    MEMORY[0x1D17EB0AC](v26, -1, -1);
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t))(v9 + 8);
    v25(v13, v8);
  }

  v27 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v28 = objc_msgSend(v27, sel_cloudKitSyncingEnabled);

  if ((v28 & 1) == 0)
  {
    v35 = sub_1D166D94C();
    v36 = sub_1D166DD9C();
    if (!os_log_type_enabled(v35, v36))
    {
LABEL_30:

      return;
    }
    v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v37 = 0;
    v38 = "shouldSync == false. Ignoring NSUbiquitousKeyValueStoreDidChangeExternallyNotification.";
    goto LABEL_13;
  }
  v29 = v75;
  v30 = sub_1D166D454();
  if (!v30)
  {
    v80 = 0u;
    v81 = 0u;
LABEL_23:
    sub_1D1608CC4((uint64_t)&v80);
LABEL_26:
    v45 = v74;
    v73(v74, v29, v8);
    v35 = sub_1D166D94C();
    v46 = sub_1D166DD84();
    if (!os_log_type_enabled(v35, v46))
    {
      v25(v45, v8);
      goto LABEL_30;
    }
    v37 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    aBlock[0] = v47;
    *(_DWORD *)v37 = 136315138;
    *(_QWORD *)&v80 = sub_1D166D454();
    sub_1D141AC58((uint64_t *)&unk_1EFC62E70);
    v48 = sub_1D166DAE4();
    *(_QWORD *)&v80 = sub_1D141BCB4(v48, v49, aBlock);
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    v25(v45, v8);
    _os_log_impl(&dword_1D1413000, v35, v46, "Could not find changed keys on notification or changed keys was empty: %s", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v47, -1, -1);
    goto LABEL_28;
  }
  v31 = v30;
  v78 = sub_1D166DACC();
  v79 = v32;
  sub_1D166E048();
  if (*(_QWORD *)(v31 + 16) && (v33 = sub_1D141B48C((uint64_t)aBlock), (v34 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(v31 + 56) + 32 * v33, (uint64_t)&v80);
  }
  else
  {
    v80 = 0u;
    v81 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1D1607C44((uint64_t)aBlock);
  if (!*((_QWORD *)&v81 + 1))
    goto LABEL_23;
  sub_1D141AC58(&qword_1ED9355C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    v29 = v75;
    goto LABEL_26;
  }
  v39 = aBlock[0];
  if (!*(_QWORD *)(aBlock[0] + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v40 = sub_1D166D454();
  if (!v40)
  {
    v80 = 0u;
    v81 = 0u;
LABEL_38:
    swift_bridgeObjectRelease();
    sub_1D1608CC4((uint64_t)&v80);
LABEL_40:
    v35 = sub_1D166D94C();
    v36 = sub_1D166DD84();
    if (!os_log_type_enabled(v35, v36))
      goto LABEL_30;
    v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v37 = 0;
    v38 = "NSUbiquitousKeyValueStoreDidChangeExternallyNotification missing reason.";
LABEL_13:
    _os_log_impl(&dword_1D1413000, v35, v36, v38, v37, 2u);
LABEL_28:
    MEMORY[0x1D17EB0AC](v37, -1, -1);
    goto LABEL_30;
  }
  v41 = v40;
  v78 = sub_1D166DACC();
  v79 = v42;
  sub_1D166E048();
  if (*(_QWORD *)(v41 + 16) && (v43 = sub_1D141B48C((uint64_t)aBlock), (v44 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(v41 + 56) + 32 * v43, (uint64_t)&v80);
  }
  else
  {
    v80 = 0u;
    v81 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1D1607C44((uint64_t)aBlock);
  if (!*((_QWORD *)&v81 + 1))
    goto LABEL_38;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  v50 = aBlock[0];
  switch(aBlock[0])
  {
    case 0:
      v51 = sub_1D166D94C();
      v52 = sub_1D166DD9C();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v53 = 0;
        v54 = "handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification change reason is NSUbiquitousKeyValueStoreServerChange.";
        goto LABEL_50;
      }
      break;
    case 1:
      v51 = sub_1D166D94C();
      v52 = sub_1D166DD9C();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v53 = 0;
        v54 = "handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification change reason is NSUbiquitousKeyValueStoreI"
              "nitialSyncChange.";
        goto LABEL_50;
      }
      break;
    case 2:
      v51 = sub_1D166D94C();
      v52 = sub_1D166DD9C();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v53 = 0;
        v54 = "handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification change reason is NSUbiquitousKeyValueStoreQ"
              "uotaViolationChange.";
        goto LABEL_50;
      }
      break;
    case 3:
      v51 = sub_1D166D94C();
      v52 = sub_1D166DD9C();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v53 = 0;
        v54 = "handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification change reason is NSUbiquitousKeyValueStoreAccountChange.";
LABEL_50:
        v56 = v51;
        v57 = v52;
        v58 = v53;
        v59 = 2;
        goto LABEL_51;
      }
      break;
    default:
      v51 = sub_1D166D94C();
      v55 = sub_1D166DD84();
      if (os_log_type_enabled(v51, v55))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v53 = 134217984;
        aBlock[0] = v50;
        sub_1D166DF28();
        v54 = "handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification change reason is %ld";
        v56 = v51;
        v57 = v55;
        v58 = v53;
        v59 = 12;
LABEL_51:
        _os_log_impl(&dword_1D1413000, v56, v57, v54, v58, v59);
        MEMORY[0x1D17EB0AC](v53, -1, -1);
      }
      break;
  }

  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED9357D0);
  v60 = (void *)sub_1D166DE08();
  v61 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v62 = swift_allocObject();
  *(_QWORD *)(v62 + 16) = v61;
  *(_QWORD *)(v62 + 24) = v39;
  aBlock[4] = (uint64_t)sub_1D1629954;
  aBlock[5] = v62;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D141BC88;
  aBlock[3] = (uint64_t)&unk_1E9230F68;
  v63 = _Block_copy(aBlock);
  swift_release();
  v64 = v68;
  sub_1D166D9E8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1D15FC784((unint64_t *)&qword_1ED935580, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1D141AC58(&qword_1ED9355A8);
  sub_1D162425C((unint64_t *)&qword_1ED9355B0, &qword_1ED9355A8);
  v65 = v71;
  sub_1D166DF88();
  MEMORY[0x1D17E8D30](0, v64, v65, v63);
  _Block_release(v63);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v65, v4);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v64, v70);
}

void sub_1D162922C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1D17EB154](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1D1627E04(a2);

  }
}

uint64_t sub_1D1629320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1D166D9C4();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D166D9F4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v3 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_ubiquitousStoreQueue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_1D16298F0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D141BC88;
  aBlock[3] = &unk_1E9230EC8;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1D166D9E8();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1D15FC784((unint64_t *)&qword_1ED935580, v7, MEMORY[0x1E0DEF510]);
  sub_1D141AC58(&qword_1ED9355A8);
  sub_1D162425C((unint64_t *)&qword_1ED9355B0, &qword_1ED9355A8);
  sub_1D166DF88();
  MEMORY[0x1D17E8D30](0, v13, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  return swift_release();
}

uint64_t sub_1D1629558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  unint64_t v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  uint64_t v22;
  _QWORD aBlock[6];

  v6 = sub_1D166D9C4();
  v22 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D166D9F4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = MEMORY[0x1D17EB154](a1 + 16);
  if (v13
    && (v14 = (void *)v13,
        v15 = *(void **)(v13 + OBJC_IVAR___IMDSyncedSettingsServiceManager_Impl_remoteStorageDelegate),
        swift_unknownObjectRetain(),
        v14,
        v15))
  {
    v16 = objc_msgSend(v15, sel_dictionaryRepresentation);
    swift_unknownObjectRelease();
    v17 = sub_1D166DA30();

  }
  else
  {
    v17 = sub_1D160F4A0(MEMORY[0x1E0DEE9D8]);
  }
  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED9357D0);
  v18 = (void *)sub_1D166DE08();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = v17;
  aBlock[4] = sub_1D1629928;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D141BC88;
  aBlock[3] = &unk_1E9230F18;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1D166D9E8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1D15FC784((unint64_t *)&qword_1ED935580, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1D141AC58(&qword_1ED9355A8);
  sub_1D162425C((unint64_t *)&qword_1ED9355B0, &qword_1ED9355A8);
  sub_1D166DF88();
  MEMORY[0x1D17E8D30](0, v12, v8, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1D1629818()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D162983C()
{
  uint64_t v0;

  swift_release();
  sub_1D141AC98(v0 + 24);
  return swift_deallocObject();
}

void sub_1D1629868()
{
  uint64_t v0;

  sub_1D1627628(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t method lookup function for SyncedSettingsServiceManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SyncedSettingsServiceManager.__allocating_init(localDomain:remoteDomain:localStorageDelegate:remoteStorageDelegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of SyncedSettingsServiceManager.settingValue(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SyncedSettingsServiceManager.setSetting(value:key:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t sub_1D16298C4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D16298F0()
{
  uint64_t *v0;

  return sub_1D1629558(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D16298FC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D1629928()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

void sub_1D1629954()
{
  uint64_t v0;

  sub_1D162922C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D1629960()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D162998C(uint64_t a1)
{
  uint64_t v1;

  sub_1D1627F50(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D1629994()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D16299C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1D162667C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1D16299D4(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1D16299E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  uint64_t isStackAllocationSafe;
  char v31;
  unint64_t v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;

  v2 = a2;
  v51 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D166DFB8();
    sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC62E90);
    sub_1D162ADA8();
    sub_1D166DD0C();
    v3 = v46;
    v4 = v47;
    v6 = v48;
    v5 = v49;
    v7 = v50;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v4 = a1 + 56;
    v6 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v41 = v3;
  v42 = v4;
  v43 = v6;
  v44 = v5;
  v45 = v7;
  v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        v12 = (v7 - 1) & v7;
        v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        v14 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v15 = v14;
        goto LABEL_15;
      }
      v25 = v5 + 1;
      if (__OFADD__(v5, 1))
        __break(1u);
      v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        v14 = 0;
        v12 = 0;
        goto LABEL_15;
      }
      v27 = *(_QWORD *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        v12 = (v27 - 1) & v27;
        v13 = __clz(__rbit64(v27)) + (v25 << 6);
        v5 = v25;
        goto LABEL_14;
      }
      v28 = v5 + 2;
      if (v5 + 2 >= v26)
        goto LABEL_44;
      v27 = *(_QWORD *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        v27 = *(_QWORD *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          v25 = v5 + 3;
          goto LABEL_28;
        }
        v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          v14 = 0;
          v12 = 0;
          v5 += 3;
LABEL_15:
          v44 = v5;
          v45 = v12;
          if (!v14)
            goto LABEL_53;
          goto LABEL_19;
        }
        v27 = *(_QWORD *)(v42 + 8 * v28);
        if (v27)
          goto LABEL_32;
        v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          v27 = *(_QWORD *)(v42 + 8 * v25);
          if (v27)
            goto LABEL_28;
          v25 = v26 - 1;
          v29 = v5 + 6;
          while (v26 != v29)
          {
            v27 = *(_QWORD *)(v42 + 8 * v29++);
            if (v27)
            {
              v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          v14 = 0;
          v12 = 0;
          v5 = v25;
          goto LABEL_15;
        }
      }
      v14 = 0;
      v12 = 0;
      v5 = v28;
      goto LABEL_15;
    }
    v16 = sub_1D166E00C();
    if (!v16
      || (v39 = v16,
          sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC62E90),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_1D15FF5FC();
      return v2;
    }
LABEL_19:
    v17 = sub_1D166DED4();
    v18 = -1 << *(_BYTE *)(v2 + 32);
    v19 = v17 & ~v18;
    if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      goto LABEL_10;
    sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC62E90);
    v20 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v19);
    v21 = sub_1D166DEE0();

    if ((v21 & 1) != 0)
      break;
    v22 = ~v18;
    while (1)
    {
      v19 = (v19 + 1) & v22;
      if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        break;
      v23 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v19);
      v24 = sub_1D166DEE0();

      if ((v24 & 1) != 0)
        goto LABEL_47;
    }
LABEL_10:

    v3 = v41;
    v6 = v43;
    v5 = v44;
    v7 = v45;
  }
LABEL_47:

  v31 = *(_BYTE *)(v2 + 32);
  v32 = (unint64_t)((1 << v31) + 63) >> 6;
  v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_1D162A228((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    v35 = v34;
    swift_release();
    sub_1D15FF5FC();
  }
  else
  {
    v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_1D162A228((unint64_t *)v36, v32, v2, v19, &v41);
    v35 = v37;
    swift_release();
    sub_1D15FF5FC();
    MEMORY[0x1D17EB0AC](v36, -1, -1);
  }
  return v35;
}

uint64_t sub_1D1629F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t isStackAllocationSafe;
  char v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  void *v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = a2;
  v28 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v26 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = (uint64_t *)(v25[0] + 16 * v5);
      v8 = *v6;
      v7 = v6[1];
      ++v5;
      sub_1D166E264();
      swift_bridgeObjectRetain();
      sub_1D166DB08();
      v9 = sub_1D166E288();
      v10 = -1 << *(_BYTE *)(v2 + 32);
      v11 = v9 & ~v10;
      if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        v12 = *(_QWORD *)(v2 + 48);
        v13 = (_QWORD *)(v12 + 16 * v11);
        v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1D166E1E0() & 1) != 0)
        {
          isStackAllocationSafe = swift_bridgeObjectRelease();
          v27 = v5;
LABEL_19:
          v19 = *(_BYTE *)(v2 + 32);
          v20 = (unint64_t)((1 << v19) + 63) >> 6;
          v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            v22 = sub_1D162A59C((uint64_t)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            v22 = sub_1D162A59C((uint64_t)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1D17EB0AC](v23, -1, -1);
          }
          return v22;
        }
        v15 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v15;
          if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
            break;
          v16 = (_QWORD *)(v12 + 16 * v11);
          v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1D166E1E0() & 1) != 0)
          {
            v27 = v5;
            isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

void sub_1D162A228(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  unint64_t i;
  unint64_t v24;
  id v25;
  char v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v34;
  uint64_t v37;
  void *v38;

  v5 = a5;
  v7 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v37 = a3 + 56;
  while (2)
  {
    v34 = v8;
    do
    {
      while (1)
      {
        if ((*v5 & 0x8000000000000000) == 0)
        {
          v10 = v5[3];
          v9 = v5[4];
          if (v9)
          {
            v11 = (v9 - 1) & v9;
            v12 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_7:
            v13 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v12);
            v14 = v13;
            goto LABEL_8;
          }
          v27 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_47;
          }
          v28 = (unint64_t)(v5[2] + 64) >> 6;
          if (v27 >= v28)
          {
            v13 = 0;
            v11 = 0;
            goto LABEL_8;
          }
          v29 = v5[1];
          v30 = *(_QWORD *)(v29 + 8 * v27);
          if (v30)
          {
LABEL_22:
            v11 = (v30 - 1) & v30;
            v12 = __clz(__rbit64(v30)) + (v27 << 6);
            v10 = v27;
            goto LABEL_7;
          }
          if (v10 + 2 < v28)
          {
            v30 = *(_QWORD *)(v29 + 8 * (v10 + 2));
            if (v30)
            {
              v27 = v10 + 2;
              goto LABEL_22;
            }
            if (v10 + 3 >= v28)
            {
              v13 = 0;
              v11 = 0;
              v10 += 2;
              goto LABEL_8;
            }
            v30 = *(_QWORD *)(v29 + 8 * (v10 + 3));
            if (v30)
            {
              v27 = v10 + 3;
              goto LABEL_22;
            }
            v27 = v10 + 4;
            if (v10 + 4 >= v28)
            {
              v13 = 0;
              v11 = 0;
              v10 += 3;
LABEL_8:
              v5[3] = v10;
              v5[4] = v11;
              if (!v13)
                goto LABEL_45;
              goto LABEL_12;
            }
            v30 = *(_QWORD *)(v29 + 8 * v27);
            if (v30)
              goto LABEL_22;
            v27 = v28 - 1;
            v32 = v10 + 5;
            while (v28 != v32)
            {
              v30 = *(_QWORD *)(v29 + 8 * v32++);
              if (v30)
              {
                v27 = v32 - 1;
                goto LABEL_22;
              }
            }
          }
          v13 = 0;
          v11 = 0;
          v10 = v27;
          goto LABEL_8;
        }
        if (!sub_1D166E00C()
          || (sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC62E90),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              v13 = v38,
              swift_unknownObjectRelease(),
              !v38))
        {
LABEL_45:
          swift_retain();
          sub_1D162A7C4(a1, a2, v34, a3);
          return;
        }
LABEL_12:
        v15 = sub_1D166DED4();
        v16 = -1 << *(_BYTE *)(a3 + 32);
        v17 = v15 & ~v16;
        v18 = v17 >> 6;
        v19 = 1 << v17;
        if (((1 << v17) & *(_QWORD *)(v37 + 8 * (v17 >> 6))) == 0)
          goto LABEL_3;
        sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC62E90);
        v20 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v17);
        v21 = sub_1D166DEE0();

        if ((v21 & 1) != 0)
          break;
        v22 = ~v16;
        for (i = v17 + 1; ; i = v24 + 1)
        {
          v24 = i & v22;
          if (((*(_QWORD *)(v37 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0)
            break;
          v25 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v24);
          v26 = sub_1D166DEE0();

          if ((v26 & 1) != 0)
          {

            v18 = v24 >> 6;
            v19 = 1 << v24;
            goto LABEL_25;
          }
        }
LABEL_3:

        v5 = a5;
      }

LABEL_25:
      v5 = a5;
      v31 = a1[v18];
      a1[v18] = v31 & ~v19;
    }
    while ((v19 & v31) == 0);
    v8 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_47:
      __break(1u);
      return;
    }
    if (v34 != 1)
      continue;
    break;
  }
}

uint64_t sub_1D162A59C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  _QWORD *v27;
  BOOL v28;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v30 = (unint64_t *)result;
  v31 = v6 - 1;
  v8 = *a5;
  v7 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_1D162AA20(v30, a2, v31, a3);
  }
  v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9)
      goto LABEL_29;
    v11 = v8 + 16 * v7;
    v13 = *(_QWORD *)(v11 + 32);
    v12 = *(_QWORD *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1D166E264();
    swift_bridgeObjectRetain();
    sub_1D166DB08();
    v14 = sub_1D166E288();
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    v18 = 1 << v16;
    if (((1 << v16) & *(_QWORD *)(v32 + 8 * (v16 >> 6))) == 0)
      goto LABEL_4;
    v19 = *(_QWORD *)(a3 + 48);
    v20 = (_QWORD *)(v19 + 16 * v16);
    v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1D166E1E0() & 1) == 0)
    {
      v24 = ~v15;
      for (i = v16 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v19 + 16 * v26);
        v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1D166E1E0() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v17 = v26 >> 6;
          v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    result = swift_bridgeObjectRelease();
LABEL_15:
    v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      v23 = v31 - 1;
      if (__OFSUB__(v31, 1))
        goto LABEL_30;
      --v31;
      if (!v23)
        return MEMORY[0x1E0DEE9E8];
    }
LABEL_5:
    v8 = *a5;
    v7 = a5[1];
    v9 = *(_QWORD *)(*a5 + 16);
    if (v7 == v9)
      goto LABEL_2;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D162A7C4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1D141AC58((uint64_t *)&unk_1EFC62EA0);
  result = sub_1D166E084();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_1D166DED4();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1D162AA20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1D141AC58(&qword_1ED935848);
  result = sub_1D166E084();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1D166E264();
    swift_bridgeObjectRetain();
    sub_1D166DB08();
    result = sub_1D166E288();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1D162ACB4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1D162AD64()
{
  uint64_t v0;

  swift_release();
  sub_1D141AC98(v0 + 24);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D162AD98()
{
  uint64_t v0;

  sub_1D1626C5C(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

unint64_t sub_1D162ADA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC62010;
  if (!qword_1EFC62010)
  {
    v1 = sub_1D15FD3C0(255, (unint64_t *)&unk_1EFC62E90);
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC62010);
  }
  return result;
}

id sub_1D162AE18()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)IMDServiceReachabilityController), sel_init);
  qword_1EFC62EB0 = (uint64_t)result;
  return result;
}

void __swiftcall IMDServiceReachabilityController.init()(IMDServiceReachabilityController *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void sub_1D162AF6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  _QWORD v13[6];

  v8 = objc_msgSend(a1, sel_participantHandles);
  if (v8)
  {
    v9 = v8;
    sub_1D15FD3C0(0, &qword_1EFC62BE8);
    v10 = (void *)sub_1D166DBD4();
    v11 = objc_msgSend(v4, sel_reachabilityContextForChat_, a1);
    v13[4] = a3;
    v13[5] = a4;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_1D1623D74;
    v13[3] = &unk_1E9231120;
    v12 = _Block_copy(v13);
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_calculateServiceForSendingToHandles_accounts_context_completionBlock_, v9, v10, v11, v12);
    _Block_release(v12);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D162B160(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  id v24;
  char *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  _QWORD *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  _QWORD *v63;
  id v64;
  _QWORD aBlock[7];

  v55 = a1;
  v56 = a3;
  v9 = sub_1D166D658();
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v11;
  v12[3] = v5;
  v12[4] = a4;
  v12[5] = a5;
  v13 = objc_allocWithZone(MEMORY[0x1E0D39A28]);
  aBlock[4] = sub_1D162B9CC;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1623D74;
  aBlock[3] = &unk_1E92310A8;
  v14 = _Block_copy(aBlock);
  v49 = v11;
  swift_retain();
  v15 = v5;
  swift_retain();
  v16 = objc_msgSend(v13, sel_initWithDelegate_updateHandler_, v15, v14);
  _Block_release(v14);
  swift_release();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v57 = v16;
  sub_1D1661D28(&v64, v57);
  swift_endAccess();

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D166E15C();
    v17 = result;
    if (result)
      goto LABEL_3;
LABEL_16:
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_17;
  }
  v17 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v17)
    goto LABEL_16;
LABEL_3:
  if (v17 < 1)
  {
    __break(1u);
    return result;
  }
  v19 = 0;
  v58 = a2 & 0xC000000000000001;
  v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v51 = a2;
  v50 = v17;
  do
  {
    if (v58)
      v23 = (id)MEMORY[0x1D17E8FD0](v19, a2);
    else
      v23 = *(id *)(a2 + 8 * v19 + 32);
    v22 = v23;
    v24 = objc_msgSend(v23, sel_session);
    if (v24)
    {
      v25 = v52;
      v61 = v24;
      sub_1D166D64C();
      v60 = sub_1D166D634();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v25, v54);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = objc_msgSend(v22, sel_service);
      v27 = objc_msgSend(v26, sel_internalName);

      v59 = sub_1D166DACC();
      v62 = v22;
      v28 = objc_msgSend(v22, sel_accountID);
      sub_1D166DACC();
      v63 = v20;

      v29 = objc_allocWithZone(MEMORY[0x1E0D39A48]);
      v30 = v56;
      v31 = (void *)sub_1D166DBD4();
      swift_bridgeObjectRelease();
      v32 = (void *)sub_1D166DAA8();
      swift_bridgeObjectRelease();
      v33 = (void *)sub_1D166DAA8();
      swift_bridgeObjectRelease();
      v34 = (void *)sub_1D166DAA8();
      swift_bridgeObjectRelease();
      v35 = objc_msgSend(v29, sel_initWithHandleIDs_requestID_serviceName_accountID_context_, v31, v32, v33, v34, v30);

      v20 = v63;
      v36 = (void *)sub_1D166DAA8();
      swift_bridgeObjectRelease();
      v37 = v57;
      objc_msgSend(v57, sel_beganRequestWithID_, v36);

      v38 = (_QWORD *)swift_allocObject();
      v39 = v61;
      v38[2] = v61;
      v38[3] = v35;
      v38[4] = v37;
      v40 = v37;
      v41 = v39;
      v42 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1D160DDB0(0, v20[2] + 1, 1, v20);
      v44 = v20[2];
      v43 = v20[3];
      a2 = v51;
      if (v44 >= v43 >> 1)
        v20 = sub_1D160DDB0((_QWORD *)(v43 > 1), v44 + 1, 1, v20);
      v20[2] = v44 + 1;
      v21 = &v20[2 * v44];
      v21[4] = sub_1D162BA0C;
      v21[5] = v38;

      v22 = v41;
      v17 = v50;
    }
    ++v19;

  }
  while (v17 != v19);
LABEL_17:
  swift_bridgeObjectRelease();
  v45 = v20[2];
  if (v45)
  {
    v46 = v20 + 5;
    do
    {
      v47 = (void (*)(uint64_t))*(v46 - 1);
      v48 = swift_retain();
      v47(v48);
      swift_release();
      v46 += 2;
      --v45;
    }
    while (v45);
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_1D162B6E4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1D17EB154](v6);
  if (v7)
  {
    v8 = (void *)v7;
    if (objc_msgSend(a1, sel_isFinal))
    {
      swift_beginAccess();
      v9 = (void *)sub_1D162BD80(v8);
      swift_endAccess();

      a4(a1);
    }

  }
}

id IMDServiceReachabilityController.init()()
{
  uint64_t v0;
  objc_super v2;

  *(_QWORD *)(v0 + OBJC_IVAR___IMDServiceReachabilityController_tasks) = MEMORY[0x1E0DEE9E8];
  v2.super_class = (Class)IMDServiceReachabilityController;
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for IMDServiceReachabilityController(uint64_t a1)
{
  return sub_1D15FD3C0(a1, &qword_1EFC62F48);
}

uint64_t sub_1D162B940()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1D162B964()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1D162B974()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D162B998()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1D162B9CC(void *a1)
{
  uint64_t v1;

  sub_1D162B6E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void *))(v1 + 32));
}

uint64_t sub_1D162B9D8()
{
  id *v0;

  return swift_deallocObject();
}

id sub_1D162BA0C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_calculateReachabilityWithRequest_responseHandler_, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1D162BA20(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_1D166E018();

    if ((v5 & 1) != 0)
    {
      v6 = sub_1D162BF44();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1D166DED4();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC62E90);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_1D166DEE0();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_1D166DEE0();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D1663D60();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_1D162C428(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D162BBF4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1D166E264();
  swift_bridgeObjectRetain();
  sub_1D166DB08();
  v6 = sub_1D166E288();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1D166E1E0() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1D166E1E0() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D1663D6C();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1D162C264(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1D162BD80(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_1D166E018();

    if ((v5 & 1) != 0)
    {
      v6 = sub_1D162C0DC();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1D166DED4();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_1D166DEB0();
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_1D166DEE0();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_1D166DEE0();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D16640C8();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_1D162C428(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D162BF44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_1D166DFE8();
  v3 = swift_unknownObjectRetain();
  v4 = sub_1D1662264(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_1D166DED4();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC62E90);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_1D166DEE0();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_1D162C428(v7);
      if ((sub_1D166DEE0() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_1D166DEE0();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D162C0DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_1D166DFE8();
  v3 = swift_unknownObjectRetain();
  v4 = sub_1D1662480(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_1D166DED4();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_1D166DEB0();
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_1D166DEE0();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_1D162C428(v7);
      if ((sub_1D166DEE0() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_1D166DEE0();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1D162C264(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1D166DF94();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1D166E264();
        swift_bridgeObjectRetain();
        sub_1D166DB08();
        v10 = sub_1D166E288();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1D162C428(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1D166DF94();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_1D166DED4();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1D162C5C8()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[40];
  __int128 v15;
  __int128 v16;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
  v1 = (void *)sub_1D166DAA8();
  v2 = objc_msgSend(v0, sel_serviceWithName_, v1);

  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, sel_serviceProperties);
  v4 = sub_1D166DA30();

  v13 = sub_1D166DACC();
  sub_1D166E048();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1D141B48C((uint64_t)v14), (v6 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v15);
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1D1607C44((uint64_t)v14);
  if (!*((_QWORD *)&v16 + 1))
  {

    sub_1D1608CC4((uint64_t)&v15);
    return 0;
  }
  sub_1D141AC58(&qword_1EFC62F50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:

    return 0;
  }
  v7 = sub_1D166DACC();
  if (!*(_QWORD *)(v13 + 16) || (v9 = sub_1D16162CC(v7, v8), (v10 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v11;
}

id sub_1D162C7B4(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id result;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D39A30]), sel_init);
  if (!a1)
    return v2;
  v3 = a1;
  v4 = objc_msgSend(v3, sel_lastAddressedLocalHandle);
  objc_msgSend(v2, sel_setSenderLastAddressedHandle_, v4);

  v5 = objc_msgSend(v3, sel_lastAddressedSIMID);
  objc_msgSend(v2, sel_setSenderLastAddressedSIMID_, v5);

  v6 = objc_msgSend(v3, sel_chatIdentifier);
  objc_msgSend(v2, sel_setChatIdentifier_, v6);

  objc_msgSend(v2, sel_setChatStyle_, objc_msgSend(v3, sel_style));
  result = objc_msgSend(v3, sel_account);
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend(result, sel_service);

    v10 = objc_msgSend(v9, sel_internalName);
    if (!v10)
    {
      sub_1D166DACC();
      v10 = (id)sub_1D166DAA8();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setLastUsedServiceName_, v10);

    v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v12 = objc_msgSend(v11, sel_lastMessageForChatWithRowID_, objc_msgSend(v3, sel_rowID));

    if (v12)
    {
      v13 = objc_msgSend(v12, sel_service);
      objc_msgSend(v2, sel_setServiceOfLastMessage_, v13);

    }
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t FileEventStream.__allocating_init(paths:streamEventID:latency:createFlags:pathFilter:callback:)(uint64_t a1, FSEventStreamEventId a2, _DWORD *a3, _OWORD *a4, uint64_t a5, uint64_t a6, CFTimeInterval a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  FileEventStream.init(paths:streamEventID:latency:createFlags:pathFilter:callback:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t FileEventStream.init(paths:streamEventID:latency:createFlags:pathFilter:callback:)(uint64_t a1, FSEventStreamEventId a2, _DWORD *a3, _OWORD *a4, uint64_t a5, uint64_t a6, CFTimeInterval a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  const __CFAllocator *v20;
  const __CFArray *v21;
  __FSEventStream *v22;
  NSObject *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  FSEventStreamContext context;
  uint64_t v30;

  v8 = v7;
  v30 = *MEMORY[0x1E0C80C00];
  v16 = sub_1D166D9D0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&context - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a3) = *a3;
  *(_QWORD *)(v8 + 72) = a6;
  *(_QWORD *)(v8 + 80) = 0;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(CFTimeInterval *)(v8 + 32) = a7;
  *(_DWORD *)(v8 + 40) = (_DWORD)a3;
  *(_OWORD *)(v8 + 48) = *a4;
  *(_QWORD *)(v8 + 64) = a5;
  context.info = (void *)v8;
  memset(&context.retain, 0, 24);
  context.version = 0;
  v20 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  swift_bridgeObjectRetain();
  swift_retain();
  v21 = (const __CFArray *)sub_1D166DBD4();
  swift_bridgeObjectRelease();
  v22 = FSEventStreamCreate(v20, (FSEventStreamCallback)sub_1D162CD0C, &context, v21, a2, a7, (FSEventStreamCreateFlags)a3);

  if (v22)
  {
    *(_QWORD *)(v8 + 80) = v22;
    sub_1D162CF48();
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DEF548], v16);
    v23 = sub_1D166DE38();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    FSEventStreamSetDispatchQueue(v22, v23);

    FSEventStreamStart(v22);
  }
  else
  {
    if (qword_1ED935568 != -1)
      swift_once();
    v24 = sub_1D166D964();
    sub_1D141AC1C(v24, (uint64_t)qword_1ED9364A0);
    v25 = sub_1D166D94C();
    v26 = sub_1D166DD9C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1D1413000, v25, v26, "Could not create FSEventStream", v27, 2u);
      MEMORY[0x1D17EB0AC](v27, -1, -1);
    }

  }
  swift_release();
  return v8;
}

void sub_1D162CD0C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1D162D148(a2, a3, a4);
}

Swift::Void __swiftcall FileEventStream.stop()()
{
  uint64_t v0;
  __FSEventStream *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;

  v1 = *(__FSEventStream **)(v0 + 80);
  if (v1)
  {
    v2 = v0;
    if (qword_1ED935568 != -1)
      swift_once();
    v3 = sub_1D166D964();
    sub_1D141AC1C(v3, (uint64_t)qword_1ED9364A0);
    v4 = sub_1D166D94C();
    v5 = sub_1D166DD9C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1D1413000, v4, v5, "Stopping observation for event stream, setting dispatch queue to nil", v6, 2u);
      MEMORY[0x1D17EB0AC](v6, -1, -1);
    }

    FSEventStreamSetDispatchQueue(v1, 0);
    FSEventStreamStop(v1);
    *(_QWORD *)(v2 + 80) = 0;
  }
  else
  {
    if (qword_1ED935568 != -1)
      swift_once();
    v7 = sub_1D166D964();
    sub_1D141AC1C(v7, (uint64_t)qword_1ED9364A0);
    oslog = sub_1D166D94C();
    v8 = sub_1D166DD84();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1D1413000, oslog, v8, "No file event stream to stop returning early", v9, 2u);
      MEMORY[0x1D17EB0AC](v9, -1, -1);
    }

  }
}

uint64_t FileEventStream.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FileEventStream.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1D162CF48()
{
  unint64_t result;

  result = qword_1ED9357D0;
  if (!qword_1ED9357D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9357D0);
  }
  return result;
}

uint64_t type metadata accessor for FileEventStream()
{
  return objc_opt_self();
}

uint64_t method lookup function for FileEventStream()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FileEventStream.__allocating_init(paths:streamEventID:latency:createFlags:pathFilter:callback:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

_QWORD *initializeBufferWithCopyOfBuffer for FileEventStream.PathFilter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FileEventStream.PathFilter()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for FileEventStream.PathFilter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FileEventStream.PathFilter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FileEventStream.PathFilter(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FileEventStream.PathFilter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1D162D100(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1D162D118(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileEventStream.PathFilter()
{
  return &type metadata for FileEventStream.PathFilter;
}

void sub_1D162D148(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;

  if (qword_1ED935568 != -1)
    swift_once();
  v4 = sub_1D166D964();
  sub_1D141AC1C(v4, (uint64_t)qword_1ED9364A0);
  v5 = sub_1D166D94C();
  v6 = sub_1D166DD9C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1D1413000, v5, v6, "FSEventStreamCallback invoked", v7, 2u);
    MEMORY[0x1D17EB0AC](v7, -1, -1);
  }

  swift_retain();
  v8 = a3;
  sub_1D166DBE0();

  swift_release();
}

uint64_t sub_1D162D3E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1D166E0FC();
    result = sub_1D162EAE4(a1);
    v4 = result;
    v6 = v5;
    v7 = 0;
    v8 = a1 + 64;
    v17 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      v10 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_23;
      v18 = v7;
      v11 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v4);
      sub_1D166E0E4();
      sub_1D166E108();
      sub_1D166E114();
      result = sub_1D166E0F0();
      v9 = 1 << *(_BYTE *)(a1 + 32);
      if (v4 >= v9)
        goto LABEL_24;
      v12 = *(_QWORD *)(v8 + 8 * v10);
      if ((v12 & (1 << v4)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_26;
      v13 = v12 & (-2 << (v4 & 0x3F));
      if (v13)
      {
        v9 = __clz(__rbit64(v13)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v14 = v10 + 1;
        v15 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v15)
        {
          v16 = *(_QWORD *)(v8 + 8 * v14);
          if (v16)
          {
LABEL_18:
            v9 = __clz(__rbit64(v16)) + (v14 << 6);
          }
          else
          {
            while (v15 - 2 != v10)
            {
              v16 = *(_QWORD *)(a1 + 80 + 8 * v10++);
              if (v16)
              {
                v14 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v7 = v18 + 1;
      v4 = v9;
      if (v18 + 1 == v17)
        return v19;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

void IMDAttachmentStore.batchOfRecordIDsToDelete(limit:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  void *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  void *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  _QWORD v49[10];
  id v50;
  uint64_t v51;

  v3 = v2;
  v51 = *MEMORY[0x1E0C80C00];
  v5 = sub_1D162ECAC();
  if (v5)
  {
    v7 = (uint64_t)v5;
    v8 = v6;
    v46 = v1;
    if (qword_1ED935B68 != -1)
      swift_once();
    v45 = a1;
    v9 = sub_1D166D964();
    sub_1D141AC1C(v9, (uint64_t)qword_1ED936590);
    v10 = v8;
    v11 = sub_1D166D94C();
    v12 = sub_1D166DD9C();
    if (os_log_type_enabled(v11, v12))
    {
      v44 = v7;
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v13 = 138412290;
      if (v8)
      {
        v50 = v10;
        v15 = v10;
      }
      else
      {
        v50 = 0;
      }
      sub_1D166DF28();
      *v14 = v8;

      _os_log_impl(&dword_1D1413000, v11, v12, "Found new afterRow %@", v13, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v14, -1, -1);
      MEMORY[0x1D17EB0AC](v13, -1, -1);

      v3 = v2;
      v7 = v44;
    }
    else
    {

    }
    v20 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v21 = (id)*MEMORY[0x1E0D37950];
    v22 = (void *)sub_1D166DAA8();
    objc_msgSend(v20, sel_setValue_forDomain_forKey_, v10, v21, v22);

    if (*(_QWORD *)(v7 + 16))
    {
      v48 = MEMORY[0x1E0DEE9E0];
      v49[0] = MEMORY[0x1E0DEE9E0];
      v23 = (void *)MEMORY[0x1D17EA62C]();
      sub_1D162DDF4(v7, &v48, v49);
      if (v3)
      {
        objc_autoreleasePoolPop(v23);
        __break(1u);
      }
      else
      {
        objc_autoreleasePoolPop(v23);
        swift_bridgeObjectRetain();
        v24 = sub_1D166D94C();
        v25 = sub_1D166DD9C();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = swift_slowAlloc();
          *(_DWORD *)v26 = 134218496;
          v27 = *(void **)(v7 + 16);
          swift_bridgeObjectRelease();
          v50 = v27;
          sub_1D166DF28();
          swift_bridgeObjectRelease();
          *(_WORD *)(v26 + 12) = 2048;
          swift_beginAccess();
          v50 = *(id *)(v48 + 16);
          sub_1D166DF28();
          *(_WORD *)(v26 + 22) = 2048;
          swift_beginAccess();
          v50 = *(id *)(v49[0] + 16);
          sub_1D166DF28();
          _os_log_impl(&dword_1D1413000, v24, v25, "Got %ld records queued for delete processing which split %ld to not delete and %ld to delete", (uint8_t *)v26, 0x20u);
          MEMORY[0x1D17EB0AC](v26, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        swift_beginAccess();
        if (*(_QWORD *)(v48 + 16))
        {
          v31 = sub_1D166D94C();
          v32 = sub_1D166DD9C();
          if (os_log_type_enabled(v31, v32))
          {
            v33 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v33 = 134217984;
            v49[7] = *(_QWORD *)(v48 + 16);
            sub_1D166DF28();
            _os_log_impl(&dword_1D1413000, v31, v32, "Clearing delete tombstones for %ld attachments still being referenced", v33, 0xCu);
            MEMORY[0x1D17EB0AC](v33, -1, -1);
          }

          v34 = swift_bridgeObjectRetain();
          sub_1D162D3E8(v34);
          swift_bridgeObjectRelease();
          sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935BB0);
          v35 = (void *)sub_1D166DBD4();
          swift_bridgeObjectRelease();
          objc_msgSend(v1, sel_clearTombstonesForRecordIDs_, v35);

        }
        swift_beginAccess();
        if (*(_QWORD *)(v49[0] + 16))
        {
          swift_bridgeObjectRelease();

        }
        else
        {
          v36 = sub_1D166D94C();
          v37 = sub_1D166DD9C();
          if (os_log_type_enabled(v36, v37))
          {
            v38 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v38 = 0;
            _os_log_impl(&dword_1D1413000, v36, v37, "All attachments pending delete from CloudKit were still being referenced, querying again", v38, 2u);
            MEMORY[0x1D17EB0AC](v38, -1, -1);
          }

          v47 = 0;
          v39 = objc_msgSend(v46, sel_batchOfRecordIDsToDeleteWithLimit_error_, v45, &v47);
          v40 = v47;
          if (v39)
          {
            v41 = v39;
            sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935BB0);
            sub_1D1610804();
            sub_1D166DA30();
            v42 = v40;

          }
          else
          {
            v43 = v47;
            sub_1D166D4B4();

            swift_willThrow();
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v28 = sub_1D166D94C();
      v29 = sub_1D166DD9C();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_1D1413000, v28, v29, "No pending messages to delete/fetch from CloudKit", v30, 2u);
        MEMORY[0x1D17EB0AC](v30, -1, -1);
      }

      sub_1D160F5D4(MEMORY[0x1E0DEE9D8]);
    }
  }
  else
  {
    if (qword_1ED935B68 != -1)
      swift_once();
    v16 = sub_1D166D964();
    sub_1D141AC1C(v16, (uint64_t)qword_1ED936590);
    v17 = sub_1D166D94C();
    v18 = sub_1D166DD84();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1D1413000, v17, v18, "Did not generate any records to delete for attachments returning nil", v19, 2u);
      MEMORY[0x1D17EB0AC](v19, -1, -1);
    }

    sub_1D160F5D4(MEMORY[0x1E0DEE9D8]);
  }
}

uint64_t sub_1D162DDF4(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  void *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  unsigned __int8 v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  id v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t *v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t result;
  uint64_t v64;
  int64_t v65;
  _QWORD *v69;

  v64 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v65 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  if (v5)
    goto LABEL_6;
LABEL_7:
  v9 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v9 < v65)
    {
      v10 = *(_QWORD *)(v64 + 8 * v9);
      ++v6;
      if (v10)
        goto LABEL_20;
      v6 = v9 + 1;
      if (v9 + 1 >= v65)
        return swift_release();
      v10 = *(_QWORD *)(v64 + 8 * v6);
      if (v10)
        goto LABEL_20;
      v6 = v9 + 2;
      if (v9 + 2 >= v65)
        return swift_release();
      v10 = *(_QWORD *)(v64 + 8 * v6);
      if (v10)
      {
LABEL_20:
        v5 = (v10 - 1) & v10;
        for (i = __clz(__rbit64(v10)) + (v6 << 6); ; i = v7 | (v6 << 6))
        {
          v12 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * i);
          v13 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * i);
          v15 = *v13;
          v14 = v13[1];
          v16 = (void *)objc_opt_self();
          v17 = v12;
          swift_bridgeObjectRetain();
          v18 = objc_msgSend(v16, sel_sharedInstance);
          v19 = (void *)sub_1D166DAA8();
          v20 = objc_msgSend(v18, sel_isAttachmentReferencedByMessage_, v19);

          if ((v20 & 1) == 0)
          {
            if (*(_QWORD *)(*a3 + 16))
            {
              v26 = v17;
              sub_1D1616458((uint64_t)v26);
              if ((v27 & 1) != 0)
                goto LABEL_5;

            }
            v28 = v17;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v69 = (_QWORD *)*a3;
            v30 = (uint64_t)v69;
            *a3 = 0x8000000000000000;
            v32 = sub_1D1616458((uint64_t)v28);
            v33 = *(_QWORD *)(v30 + 16);
            v34 = (v31 & 1) == 0;
            v35 = v33 + v34;
            if (__OFADD__(v33, v34))
              goto LABEL_61;
            v36 = v31;
            if (*(_QWORD *)(v30 + 24) >= v35)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v39 = v69;
                if ((v31 & 1) == 0)
                  goto LABEL_33;
              }
              else
              {
                sub_1D164D0E4();
                v39 = v69;
                if ((v36 & 1) == 0)
                  goto LABEL_33;
              }
            }
            else
            {
              sub_1D164BB48(v35, isUniquelyReferenced_nonNull_native);
              v37 = sub_1D1616458((uint64_t)v28);
              if ((v36 & 1) != (v38 & 1))
                goto LABEL_66;
              v32 = v37;
              v39 = v69;
              if ((v36 & 1) == 0)
              {
LABEL_33:
                v39[(v32 >> 6) + 8] |= 1 << v32;
                *(_QWORD *)(v39[6] + 8 * v32) = v28;
                v40 = (uint64_t *)(v39[7] + 16 * v32);
                *v40 = v15;
                v40[1] = v14;
                v41 = v39[2];
                v42 = __OFADD__(v41, 1);
                v43 = v41 + 1;
                if (v42)
                  goto LABEL_63;
                v39[2] = v43;
                v44 = v28;
                goto LABEL_48;
              }
            }
            v60 = (uint64_t *)(v39[7] + 16 * v32);
            swift_bridgeObjectRelease();
            *v60 = v15;
            v60[1] = v14;
LABEL_48:
            v61 = a3;
            goto LABEL_53;
          }
          if (qword_1ED935B68 != -1)
            swift_once();
          v21 = sub_1D166D964();
          sub_1D141AC1C(v21, (uint64_t)qword_1ED936590);
          swift_bridgeObjectRetain_n();
          v22 = sub_1D166D94C();
          v23 = sub_1D166DD9C();
          if (os_log_type_enabled(v22, v23))
          {
            v24 = swift_slowAlloc();
            v25 = swift_slowAlloc();
            v69 = (_QWORD *)v25;
            *(_DWORD *)v24 = 136315138;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v24 + 4) = sub_1D141BCB4(v15, v14, (uint64_t *)&v69);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1D1413000, v22, v23, "Attachment %s was to be deleted, but is still being referenced. Fetching instead.", (uint8_t *)v24, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D17EB0AC](v25, -1, -1);
            MEMORY[0x1D17EB0AC](v24, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          if (*(_QWORD *)(*a2 + 16))
          {
            v26 = v17;
            sub_1D1616458((uint64_t)v26);
            if ((v45 & 1) != 0)
            {
LABEL_5:
              swift_bridgeObjectRelease();

              if (!v5)
                goto LABEL_7;
              goto LABEL_6;
            }

          }
          v28 = v17;
          v46 = swift_isUniquelyReferenced_nonNull_native();
          v69 = (_QWORD *)*a2;
          v47 = (uint64_t)v69;
          *a2 = 0x8000000000000000;
          v49 = sub_1D1616458((uint64_t)v28);
          v50 = *(_QWORD *)(v47 + 16);
          v51 = (v48 & 1) == 0;
          v52 = v50 + v51;
          if (__OFADD__(v50, v51))
            goto LABEL_62;
          v53 = v48;
          if (*(_QWORD *)(v47 + 24) >= v52)
          {
            if ((v46 & 1) != 0)
            {
              v39 = v69;
              if ((v48 & 1) == 0)
                goto LABEL_43;
            }
            else
            {
              sub_1D164D0E4();
              v39 = v69;
              if ((v53 & 1) == 0)
                goto LABEL_43;
            }
          }
          else
          {
            sub_1D164BB48(v52, v46);
            v54 = sub_1D1616458((uint64_t)v28);
            if ((v53 & 1) != (v55 & 1))
              goto LABEL_66;
            v49 = v54;
            v39 = v69;
            if ((v53 & 1) == 0)
            {
LABEL_43:
              v39[(v49 >> 6) + 8] |= 1 << v49;
              *(_QWORD *)(v39[6] + 8 * v49) = v28;
              v56 = (uint64_t *)(v39[7] + 16 * v49);
              *v56 = v15;
              v56[1] = v14;
              v57 = v39[2];
              v42 = __OFADD__(v57, 1);
              v58 = v57 + 1;
              if (v42)
                goto LABEL_64;
              v39[2] = v58;
              v59 = v28;
              goto LABEL_52;
            }
          }
          v62 = (uint64_t *)(v39[7] + 16 * v49);
          swift_bridgeObjectRelease();
          *v62 = v15;
          v62[1] = v14;
LABEL_52:
          v61 = a2;
LABEL_53:
          *v61 = v39;

          swift_bridgeObjectRelease();
          if (!v5)
            goto LABEL_7;
LABEL_6:
          v7 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      v11 = v9 + 3;
      if (v11 < v65)
      {
        v10 = *(_QWORD *)(v64 + 8 * v11);
        if (v10)
        {
          v6 = v11;
          goto LABEL_20;
        }
        while (1)
        {
          v6 = v11 + 1;
          if (__OFADD__(v11, 1))
            goto LABEL_65;
          if (v6 >= v65)
            return swift_release();
          v10 = *(_QWORD *)(v64 + 8 * v6);
          ++v11;
          if (v10)
            goto LABEL_20;
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935BB0);
  result = sub_1D166E21C();
  __break(1u);
  return result;
}

uint64_t sub_1D162E538(uint64_t result, void *a2, uint64_t a3, id *a4)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  void *v13;
  char v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[5];
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v32 = *(_QWORD *)(result + 16);
  v33 = result;
  if (v32)
  {
    swift_bridgeObjectRetain();
    v37 = 0;
    while (1)
    {
      v4 = *(_QWORD *)(v33 + 8 * v37 + 32);
      swift_bridgeObjectRetain();
      sub_1D166E048();
      if (*(_QWORD *)(v4 + 16) && (v5 = sub_1D141B48C((uint64_t)v34), (v6 & 1) != 0))
      {
        sub_1D141B3A8(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v35);
      }
      else
      {
        v35 = 0u;
        v36 = 0u;
      }
      sub_1D1607C44((uint64_t)v34);
      if (!*((_QWORD *)&v36 + 1))
        goto LABEL_28;
      sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935800);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_29;
      sub_1D166E048();
      if (*(_QWORD *)(v4 + 16) && (v7 = sub_1D141B48C((uint64_t)v34), (v8 & 1) != 0))
      {
        sub_1D141B3A8(*(_QWORD *)(v4 + 56) + 32 * v7, (uint64_t)&v35);
      }
      else
      {
        v35 = 0u;
        v36 = 0u;
      }
      sub_1D1607C44((uint64_t)v34);
      if (!*((_QWORD *)&v36 + 1))
        goto LABEL_27;
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_34;
      sub_1D166E048();
      if (*(_QWORD *)(v4 + 16) && (v9 = sub_1D141B48C((uint64_t)v34), (v10 & 1) != 0))
      {
        sub_1D141B3A8(*(_QWORD *)(v4 + 56) + 32 * v9, (uint64_t)&v35);
      }
      else
      {
        v35 = 0u;
        v36 = 0u;
      }
      sub_1D1607C44((uint64_t)v34);
      if (!*((_QWORD *)&v36 + 1))
      {
        swift_bridgeObjectRelease();
LABEL_27:

LABEL_28:
        sub_1D1608CC4((uint64_t)&v35);
LABEL_29:
        if (qword_1ED935B68 != -1)
          swift_once();
        v15 = sub_1D166D964();
        sub_1D141AC1C(v15, (uint64_t)qword_1ED936590);
        swift_bridgeObjectRetain();
        v16 = sub_1D166D94C();
        v17 = sub_1D166DD84();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = swift_slowAlloc();
          v19 = swift_slowAlloc();
          v34[0] = v19;
          *(_DWORD *)v18 = 136315138;
          swift_bridgeObjectRetain();
          v20 = sub_1D166DA3C();
          v22 = v21;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v18 + 4) = sub_1D141BCB4(v20, v22, v34);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D1413000, v16, v17, "Could not create CKRecord for attachment delete, missing properties: %s", (uint8_t *)v18, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D17EB0AC](v19, -1, -1);
          MEMORY[0x1D17EB0AC](v18, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        goto LABEL_4;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_34:

        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935BB0);
      v11 = objc_msgSend(a2, sel_zoneID);
      v12 = sub_1D166DD48();
      v13 = (void *)v12;
      if (!*(_QWORD *)(*(_QWORD *)a3 + 16) || (sub_1D1616458(v12), (v14 & 1) == 0))
      {
        v23 = v13;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v34[0] = *(_QWORD *)a3;
        *(_QWORD *)a3 = 0x8000000000000000;
        sub_1D164C900(1684632935, 0xE400000000000000, v23, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)a3 = v34[0];

      }
      swift_bridgeObjectRelease();
      if (*a4)
      {
        v25 = *a4;
        v26 = objc_msgSend((id)0x4449574F52, sel_longLongValue);
        v27 = objc_msgSend(v25, sel_longLongValue);

        if ((uint64_t)v27 >= (uint64_t)v26)
        {

          goto LABEL_4;
        }
        v28 = *a4;
        *a4 = (id)0x4449574F52;
      }
      else
      {

        v28 = *a4;
        *a4 = (id)0x4449574F52;
      }

LABEL_4:
      if (v32 == ++v37)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1D162EAE4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1D162EB6C()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = (id)*MEMORY[0x1E0D37950];
  v2 = (void *)sub_1D166DAA8();
  v3 = objc_msgSend(v0, sel_getValueFromDomain_forKey_, v1, v2);

  if (v3)
  {
    sub_1D166DF70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1D141B3F4((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935800);
    if ((swift_dynamicCast() & 1) != 0)
      return v5;
  }
  else
  {
    sub_1D1608CC4((uint64_t)v7);
  }
  return 0;
}

id sub_1D162ECAC()
{
  id result;
  void *v1;
  id v2;
  NSObject *v3;
  void *v4;
  id v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_attachmentRecordZone);

    if (v2)
    {
      v3 = sub_1D162EB6C();
      v4 = (void *)IMDAttachmentCopyRecordIDsToDeleteAfterRowWithLimit();
      if (v4)
      {
        v5 = v4;
        sub_1D141AC58(&qword_1ED935B90);
        sub_1D166DBE0();

        if (qword_1ED935B68 != -1)
          swift_once();
        v9 = sub_1D166D964();
        sub_1D141AC1C(v9, (uint64_t)qword_1ED936590);
        v10 = sub_1D166D94C();
        v11 = sub_1D166DD84();
        if (!os_log_type_enabled(v10, v11))
        {

          return 0;
        }
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_1D1413000, v10, v11, "Could not bridge CFArray to [[AnyHashable: Any]]", v12, 2u);
        MEMORY[0x1D17EB0AC](v12, -1, -1);

      }
    }
    else
    {
      if (qword_1ED935B68 != -1)
        swift_once();
      v6 = sub_1D166D964();
      sub_1D141AC1C(v6, (uint64_t)qword_1ED936590);
      v3 = sub_1D166D94C();
      v7 = sub_1D166DD84();
      if (os_log_type_enabled(v3, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_1D1413000, v3, v7, "No message record zone initialized in IMDRecordZoneManager.", v8, 2u);
        MEMORY[0x1D17EB0AC](v8, -1, -1);
      }
    }

    return 0;
  }
  __break(1u);
  return result;
}

void _sSo18IMDAttachmentStoreC12IMDaemonCoreE15clearTombstones12forRecordIDsySaySo10CKRecordIDCG_tF_0(unint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;

  if (qword_1ED935B68 != -1)
    swift_once();
  v2 = sub_1D166D964();
  sub_1D141AC1C(v2, (uint64_t)qword_1ED936590);
  swift_bridgeObjectRetain_n();
  v3 = sub_1D166D94C();
  v4 = sub_1D166DD9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v26 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935BB0);
    v8 = swift_bridgeObjectRetain();
    v9 = MEMORY[0x1D17E8B08](v8, v7);
    v11 = v10;
    swift_bridgeObjectRelease();
    v25 = sub_1D141BCB4(v9, v11, &v26);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v3, v4, "Clearing attachment tombstones for recordIDs: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v6, -1, -1);
    MEMORY[0x1D17EB0AC](v5, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v12)
    goto LABEL_17;
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1D164F570(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    v13 = 0;
    v14 = v26;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v15 = (id)MEMORY[0x1D17E8FD0](v13, a1);
      else
        v15 = *(id *)(a1 + 8 * v13 + 32);
      v16 = v15;
      v17 = objc_msgSend(v15, sel_recordName, v25);
      v18 = sub_1D166DACC();
      v20 = v19;

      v26 = v14;
      v22 = *(_QWORD *)(v14 + 16);
      v21 = *(_QWORD *)(v14 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1D164F570(v21 > 1, v22 + 1, 1);
        v14 = v26;
      }
      ++v13;
      *(_QWORD *)(v14 + 16) = v22 + 1;
      v23 = v14 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v18;
      *(_QWORD *)(v23 + 40) = v20;
    }
    while (v12 != v13);
LABEL_17:
    v24 = (void *)sub_1D166DBD4();
    swift_bridgeObjectRelease();
    IMDAttachmentRecordDeleteTombStonedAttachmentsWithRecordIDs();

    return;
  }
  __break(1u);
}

uint64_t sub_1D162F260()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1D162F280();
  qword_1ED936508 = result;
  unk_1ED936510 = v1;
  return result;
}

uint64_t sub_1D162F280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t inited;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;

  v0 = sub_1D166D49C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D166D580();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  v10 = (id)IMAttachmentsDirectoryURL();
  sub_1D166D550();

  sub_1D141AC58(&qword_1ED9356B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D1683B20;
  v12 = (void *)*MEMORY[0x1E0C998C8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C998C8];
  v13 = v12;
  sub_1D160AB64(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1D166D4FC();
  swift_bridgeObjectRelease();
  v14 = sub_1D166D484();
  if (*(_QWORD *)(v14 + 16))
  {
    v15 = v13;
    v16 = sub_1D1616488((uint64_t)v15);
    v17 = v29;
    if ((v18 & 1) != 0)
    {
      sub_1D141B3A8(*(_QWORD *)(v14 + 56) + 32 * v16, (uint64_t)&v31);
    }
    else
    {
      v31 = 0u;
      v32 = 0u;
    }

    v19 = v28;
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
    v19 = v28;
    v17 = v29;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v32 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v20 = v30;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v17);
      return v20;
    }
  }
  else
  {
    sub_1D1608CC4((uint64_t)&v31);
  }
  sub_1D162FCC4();
  v21 = (void *)swift_allocError();
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1ED935568 != -1)
    swift_once();
  v22 = sub_1D166D964();
  sub_1D141AC1C(v22, (uint64_t)qword_1ED9364A0);
  v23 = sub_1D166D94C();
  v24 = sub_1D166DD84();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_1D1413000, v23, v24, "Could not retrieve canonical path key to get full path to attachments with \"/private\" in path, falling back to .resolvingSymLinksInPath", v25, 2u);
    MEMORY[0x1D17EB0AC](v25, -1, -1);
  }

  sub_1D166D538();
  v20 = sub_1D166D55C();

  v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  v26(v7, v17);
  v26(v9, v17);
  return v20;
}

id sub_1D162F5F0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)IMDFileEventBroadcaster), sel_init);
  qword_1ED935620 = (uint64_t)result;
  return result;
}

void __swiftcall IMDFileEventBroadcaster.init()(IMDFileEventBroadcaster *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id static IMDFileEventBroadcaster.shared()()
{
  if (qword_1ED935630 != -1)
    swift_once();
  return (id)qword_1ED935620;
}

Swift::Void __swiftcall IMDFileEventBroadcaster.observeChanges(in:)(Swift::String in)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v2 = v1;
  object = in._object;
  countAndFlagsBits = in._countAndFlagsBits;
  if (qword_1ED935568 != -1)
    swift_once();
  v5 = sub_1D166D964();
  sub_1D141AC1C(v5, (uint64_t)qword_1ED9364A0);
  swift_bridgeObjectRetain_n();
  v6 = sub_1D166D94C();
  v7 = sub_1D166DD9C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_QWORD *)&v14 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    v13 = sub_1D141BCB4(countAndFlagsBits, (unint64_t)object, (uint64_t *)&v14);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D1413000, v6, v7, "Observing file changes for %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v9, -1, -1);
    MEMORY[0x1D17EB0AC](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1D141AC58(&qword_1ED935820);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D1683B20;
  *(_QWORD *)(v10 + 32) = countAndFlagsBits;
  *(_QWORD *)(v10 + 40) = object;
  LODWORD(v13) = 17;
  v11 = qword_1ED935618;
  swift_bridgeObjectRetain();
  if (v11 != -1)
    swift_once();
  v14 = xmmword_1ED936508;
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for FileEventStream();
  swift_allocObject();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + OBJC_IVAR___IMDFileEventBroadcaster_fileEventStream) = FileEventStream.init(paths:streamEventID:latency:createFlags:pathFilter:callback:)(v10, 0xFFFFFFFFFFFFFFFFLL, &v13, &v14, (uint64_t)sub_1D162FC80, v12, 2.0);
  swift_release();
}

void sub_1D162F964(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t inited;
  void *v8;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1D17EB154](v3);

  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (qword_1ED935608 != -1)
      swift_once();
    v6 = qword_1ED936500;
    sub_1D141AC58(&qword_1ED9356C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D1683B20;
    sub_1D166E048();
    *(_QWORD *)(inited + 96) = sub_1D141AC58(&qword_1ED935040);
    *(_QWORD *)(inited + 72) = a1;
    swift_bridgeObjectRetain();
    sub_1D141BB00(inited);
    v8 = (void *)sub_1D166DA18();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_postNotificationName_object_userInfo_, v6, 0, v8, 0x6E657645656C6966, 0xEA00000000007374);

  }
}

Swift::Void __swiftcall IMDFileEventBroadcaster.stopObserving()()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR___IMDFileEventBroadcaster_fileEventStream))
  {
    swift_retain();
    FileEventStream.stop()();
    swift_release();
  }
}

id IMDFileEventBroadcaster.init()()
{
  uint64_t v0;
  objc_super v2;

  *(_QWORD *)(v0 + OBJC_IVAR___IMDFileEventBroadcaster_fileEventStream) = 0;
  v2.super_class = (Class)IMDFileEventBroadcaster;
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_1D162FC5C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1D162FC80(uint64_t a1)
{
  uint64_t v1;

  sub_1D162F964(a1, v1);
}

unint64_t type metadata accessor for IMDFileEventBroadcaster()
{
  unint64_t result;

  result = qword_1EFC62F60;
  if (!qword_1EFC62F60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFC62F60);
  }
  return result;
}

unint64_t sub_1D162FCC4()
{
  unint64_t result;

  result = qword_1EFC62F68;
  if (!qword_1EFC62F68)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D16842F0, &_s6ErrorsON);
    atomic_store(result, (unint64_t *)&qword_1EFC62F68);
  }
  return result;
}

uint64_t _s6ErrorsOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D162FD48 + 4 * byte_1D1684274[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D162FD68 + 4 * byte_1D1684279[v4]))();
}

_BYTE *sub_1D162FD48(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D162FD68(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D162FD70(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D162FD78(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D162FD80(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D162FD88(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s6ErrorsOMa()
{
  return &_s6ErrorsON;
}

unint64_t sub_1D162FDA8()
{
  unint64_t result;

  result = qword_1EFC62F70;
  if (!qword_1EFC62F70)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D16842C8, &_s6ErrorsON);
    atomic_store(result, (unint64_t *)&qword_1EFC62F70);
  }
  return result;
}

uint64_t sub_1D162FDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  return swift_task_switch();
}

uint64_t sub_1D162FE08()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = v0[11];
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  v0[6] = sub_1D1630108;
  v0[7] = v1;
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_1D1416674;
  v0[5] = &unk_1E92312F0;
  v3 = _Block_copy(v0 + 2);
  swift_retain();
  v0[12] = objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCC90E8, v3);
  _Block_release(v3);
  swift_release();
  v0[8] = &unk_1EFCC90E8;
  v4 = swift_dynamicCastObjCProtocolUnconditional();
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EFC63368 + dword_1EFC63368);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_1D162FF3C;
  return v7(v0[9], v0[10], v4);
}

uint64_t sub_1D162FF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 112) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_1D162FFCC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D1630000()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  return swift_task_switch();
}

uint64_t sub_1D1630018()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = v0[9];
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  v0[6] = sub_1D1631128;
  v0[7] = v1;
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_1D1416674;
  v0[5] = &unk_1E9231318;
  v3 = _Block_copy(v0 + 2);
  swift_retain();
  objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCC90E8, v3);
  _Block_release(v3);
  swift_release();
  v0[8] = &unk_1EFCC90E8;
  v4 = swift_dynamicCastObjCProtocolUnconditional();
  return ((uint64_t (*)(uint64_t))v0[1])(v4);
}

void sub_1D1630108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D1416798(a1, a2, a3);
}

uint64_t sub_1D1630128()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1D1630140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1D141AC58(&qword_1ED935880);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D1683310;
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v1 + 120);
  v5 = v2;
  sub_1D166DC04();
  v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  swift_retain();
  return v4(v5);
}

uint64_t sub_1D16301C4()
{
  uint64_t v0;

  return sub_1D1630A00(*(uint64_t (**)(void))(v0 + 8));
}

id IncomingIntentsClientConnectionListener.__allocating_init(requestHandlers:)(uint64_t a1)
{
  objc_class *v1;
  _QWORD *v3;
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v14;

  v3 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  v4 = (void *)objc_opt_self();
  swift_retain();
  v5 = objc_msgSend(v4, sel_sharedController);
  v6 = objc_msgSend(v5, sel_allServices);

  sub_1D15FD3C0(0, &qword_1ED935008);
  v7 = sub_1D166DBEC();

  v8 = sub_1D16114C0(v7);
  swift_bridgeObjectRelease();
  v9 = sub_1D16308B0(v8);
  swift_bridgeObjectRelease();
  v3[14] = a1;
  type metadata accessor for IntentsClientConnectionRouteProvider();
  v10 = swift_allocObject();
  type metadata accessor for ClientConnection();
  v11 = swift_allocObject();
  swift_bridgeObjectRetain();
  v12 = sub_1D1630A08(v10, 41476, a1, v9, v11, (uint64_t (*)(_QWORD))type metadata accessor for IntentsClientConnectionRouteProvider, (uint64_t)&off_1E9233228, (uint64_t)sub_1D1631130);
  swift_bridgeObjectRelease();
  v3[15] = v12;
  swift_release();
  v14.receiver = v3;
  v14.super_class = v1;
  return objc_msgSendSuper2(&v14, sel_init);
}

id IncomingIntentsClientConnectionListener.init(requestHandlers:)(uint64_t a1)
{
  _QWORD *v1;
  void *v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v13;

  swift_defaultActor_initialize();
  v3 = (void *)objc_opt_self();
  swift_retain();
  v4 = objc_msgSend(v3, sel_sharedController);
  v5 = objc_msgSend(v4, sel_allServices);

  sub_1D15FD3C0(0, &qword_1ED935008);
  v6 = sub_1D166DBEC();

  v7 = sub_1D16114C0(v6);
  swift_bridgeObjectRelease();
  v8 = sub_1D16308B0(v7);
  swift_bridgeObjectRelease();
  v1[14] = a1;
  type metadata accessor for IntentsClientConnectionRouteProvider();
  v9 = swift_allocObject();
  type metadata accessor for ClientConnection();
  v10 = swift_allocObject();
  swift_bridgeObjectRetain();
  v11 = sub_1D1630A08(v9, 41476, a1, v8, v10, (uint64_t (*)(_QWORD))type metadata accessor for IntentsClientConnectionRouteProvider, (uint64_t)&off_1E9233228, (uint64_t)sub_1D1631130);
  swift_bridgeObjectRelease();
  v1[15] = v11;
  swift_release();
  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for IncomingIntentsClientConnectionListener();
  return objc_msgSendSuper2(&v13, sel_init);
}

void IncomingIntentsClientConnectionListener.__allocating_init()()
{
  swift_allocObject();
  swift_defaultActor_initialize();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void IncomingIntentsClientConnectionListener.init()()
{
  swift_defaultActor_initialize();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t IncomingIntentsClientConnectionListener.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t IncomingIntentsClientConnectionListener.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t IncomingIntentsClientConnectionListener.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D16305FC()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_1D1630614(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1D1630688;
  v7[10] = a2;
  v7[11] = v6;
  v7[9] = a1;
  return swift_task_switch();
}

uint64_t sub_1D1630688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_1D16306EC(unint64_t a1)
{
  return sub_1D1630734(a1, &qword_1EFC61FA8, 0x1E0DBD2A0, &qword_1EFC61FB0, (void (*)(id *, uint64_t))sub_1D16616B4);
}

uint64_t sub_1D1630710(unint64_t a1)
{
  return sub_1D1630734(a1, (unint64_t *)&unk_1EFC62E90, 0x1E0DBD2F8, (unint64_t *)&qword_1EFC62010, (void (*)(id *, uint64_t))sub_1D16616D0);
}

uint64_t sub_1D1630734(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  uint64_t v17;

  v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  sub_1D15FD3C0(0, a2);
  sub_1D1607A20(a4, a2);
  result = sub_1D166DD00();
  v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1D166E15C();
    result = swift_bridgeObjectRelease();
    if (!v11)
      return v17;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      return v17;
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = MEMORY[0x1D17E8FD0](i, a1);
        a5(&v16, v13);

      }
    }
    else
    {
      v14 = (void **)(a1 + 32);
      do
      {
        v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D16308B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1D166DD00();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1D16619B4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1D1630944(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1D141AC58(&qword_1EFC61FE0);
  sub_1D16310C0();
  result = sub_1D166DD00();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1D1661B60(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1D16309E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D1630A08(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))type metadata accessor for XPCClientConnectionRouteProvider, (uint64_t)&off_1E9230490, (uint64_t)sub_1D1631060);
}

uint64_t sub_1D1630A00(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D1630A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37[5];
  _BYTE v38[40];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];

  v33 = a8;
  v32 = a5;
  v28 = a4;
  v31 = a3;
  v27 = a2;
  v30 = sub_1D166DDFC();
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D166DDF0();
  MEMORY[0x1E0C80A78](v13);
  v14 = sub_1D166D9F4();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1D166D658();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[3] = a6(0);
  v44[4] = a7;
  v44[0] = a1;
  sub_1D1630FC8((uint64_t)v44, (uint64_t)v37);
  sub_1D166D64C();
  v19 = sub_1D166D634();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_1D163100C(v37, (uint64_t)v38);
  v39 = v27;
  v40 = v19;
  v41 = v21;
  v42 = v28;
  v22 = MEMORY[0x1E0DEE9D8];
  v43 = MEMORY[0x1E0DEE9D8];
  sub_1D1631024((uint64_t)v38, (uint64_t)v37);
  sub_1D166D9E8();
  v36 = v22;
  sub_1D1608C74();
  sub_1D141AC58((uint64_t *)&unk_1ED935760);
  sub_1D1607B10();
  sub_1D166DF88();
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v12, *MEMORY[0x1E0DEF8D0], v30);
  sub_1D141AC58(&qword_1ED935530);
  swift_allocObject();
  v23 = sub_1D166D7D8();
  v24 = v32;
  *(_QWORD *)(v32 + 16) = v23;
  v34 = v31;
  v35 = v24;
  sub_1D166D7CC();
  sub_1D141AC98((uint64_t)v44);
  sub_1D1631068((uint64_t)v38);
  return v24;
}

uint64_t type metadata accessor for IncomingIntentsClientConnectionListener()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of IntentProcessing.processIncomingRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1D1630D9C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1D1630D9C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t method lookup function for IncomingIntentsClientConnectionListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IncomingIntentsClientConnectionListener.processIncomingRequest(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x68);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1D163111C;
  return v9(a1, a2);
}

uint64_t dispatch thunk of IncomingIntentsClientConnectionListener.proxyForIntentRequest()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D1631120;
  return v5();
}

uint64_t dispatch thunk of IncomingIntentsClientConnectionListener.connectedClients.getter()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D161319C;
  return v5();
}

uint64_t dispatch thunk of IncomingIntentsClientConnectionListener.resume()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D141C488;
  return v5();
}

uint64_t dispatch thunk of IncomingIntentsClientConnectionListener.__allocating_init(requestHandlers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1D1630FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D163100C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1D1631024(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ClientConnection.State(a2, a1);
  return a2;
}

uint64_t sub_1D1631060(uint64_t a1)
{
  uint64_t v1;

  return sub_1D165EE4C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D1631068(uint64_t a1)
{
  destroy for ClientConnection.State(a1);
  return a1;
}

uint64_t sub_1D163109C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1D16310C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFC63020;
  if (!qword_1EFC63020)
  {
    v1 = sub_1D15FC6A0(&qword_1EFC61FE0);
    v2 = MEMORY[0x1E0DEA978];
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0DEE990], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFC63020);
  }
  return result;
}

uint64_t sub_1D1631134(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED9355E0);
  v2 = sub_1D166DBEC();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D16311A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  sub_1D166DB38();
  return sub_1D166DB98();
}

uint64_t sub_1D1631218()
{
  uint64_t v0;

  v0 = sub_1D166D964();
  sub_1D15FD440(v0, qword_1EFC63028);
  sub_1D141AC1C(v0, (uint64_t)qword_1EFC63028);
  sub_1D166D940();
  return sub_1D166D958();
}

void sub_1D1631280()
{
  off_1EFC63040 = &unk_1E922FB20;
}

void sub_1D1631294()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  objc_super v67;

  sub_1D141AC58(&qword_1EFC63088);
  v1 = swift_allocObject();
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  type metadata accessor for PlainTextEmojiTapbackParser();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  v4 = (uint64_t *)&v0[OBJC_IVAR___IMDPlainTextTapbackInterpreter_state];
  *v4 = v1;
  v4[1] = v3;
  v67.receiver = v0;
  v67.super_class = (Class)IMDPlainTextTapbackInterpreter;
  v5 = (char *)objc_msgSendSuper2(&v67, sel_init);
  v6 = (id)IMSharedUtilitiesFrameworkBundle();
  if (!v6)
    goto LABEL_37;
  v7 = v6;
  v8 = objc_msgSend(v6, sel_localizations);
  v9 = sub_1D166DBEC();

  v58 = *(_QWORD *)(v9 + 16);
  if (!v58)
  {
LABEL_34:

    swift_bridgeObjectRelease();
    return;
  }
  v10 = 0;
  v11 = &v5[OBJC_IVAR___IMDPlainTextTapbackInterpreter_state];
  v57 = v5;
  v60 = &v5[OBJC_IVAR___IMDPlainTextTapbackInterpreter_state];
  v61 = v7;
  v56 = v9;
  while (1)
  {
    if (v10 >= *(_QWORD *)(v9 + 16))
      goto LABEL_36;
    v12 = qword_1EFC61500;
    swift_bridgeObjectRetain();
    if (v12 != -1)
      swift_once();
    v66 = *((_QWORD *)off_1EFC63040 + 2);
    if (v66)
      break;
LABEL_5:
    ++v10;
    swift_bridgeObjectRelease();
    if (v10 == v58)
      goto LABEL_34;
  }
  v59 = v10;
  v65 = (char *)off_1EFC63040 + 32;
  swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    v14 = *(_QWORD *)&v65[24 * v13 + 16];
    swift_bridgeObjectRetain();
    v15 = v14;
    v16 = (void *)sub_1D166DAA8();
    v17 = (void *)sub_1D166DAA8();
    v18 = (void *)sub_1D166DAA8();
    v19 = objc_msgSend(v7, sel_localizedStringForKey_value_table_localization_, v16, 0, v17, v18);

    v20 = sub_1D166DACC();
    v22 = v21;

    if (v15 != 3006 && v15 != 2006)
      break;
    swift_retain();
    sub_1D1648044(v20, v22);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    if (++v13 == v66)
    {
      swift_bridgeObjectRelease();
      v9 = v56;
      v5 = v57;
      v10 = v59;
      goto LABEL_5;
    }
  }
  v63 = v15;
  if ((v22 & 0x2000000000000000) != 0)
    v23 = HIBYTE(v22) & 0xF;
  else
    v23 = v20 & 0xFFFFFFFFFFFFLL;
  v64 = *(_QWORD *)v11;
  swift_retain();
  swift_bridgeObjectRetain();
  if (v23)
  {
    v24 = 4 * v23;
    while (1)
    {
      swift_bridgeObjectRetain();
      v25 = sub_1D166DB98();
      v27 = v26;
      swift_bridgeObjectRelease();
      if (v25 == 37 && v27 == 0xE100000000000000)
        break;
      v28 = sub_1D166E1E0();
      swift_bridgeObjectRelease();
      if ((v28 & 1) != 0 || v24 == (unint64_t)sub_1D166DB2C() >> 14)
        goto LABEL_27;
    }
    swift_bridgeObjectRelease();
  }
LABEL_27:
  v29 = sub_1D166DBB0();
  v31 = v30;
  v33 = v32;
  v35 = v34;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = sub_1D166DF04();
  swift_bridgeObjectRelease();
  if (!__OFADD__(v36, 2))
  {
    sub_1D15FD3F8();
    swift_bridgeObjectRetain();
    v37 = sub_1D166DB14();
    v38 = sub_1D1624A54(v37, v20, v22);
    v40 = v39;
    v42 = v41;
    v44 = v43;
    swift_bridgeObjectRelease();
    v62 = MEMORY[0x1D17E8A0C](v29, v31, v33, v35);
    v46 = v45;
    swift_bridgeObjectRelease();
    v47 = MEMORY[0x1D17E8A0C](v38, v40, v42, v44);
    v49 = v48;
    swift_bridgeObjectRelease();
    v50 = (_QWORD *)(v64 + 16);
    swift_beginAccess();
    v51 = *(_QWORD **)(v64 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v64 + 16) = v51;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v51 = sub_1D160E1D0(0, v51[2] + 1, 1, v51);
      *v50 = v51;
    }
    v54 = v51[2];
    v53 = v51[3];
    if (v54 >= v53 >> 1)
    {
      v51 = sub_1D160E1D0((_QWORD *)(v53 > 1), v54 + 1, 1, v51);
      *v50 = v51;
    }
    v7 = v61;
    v51[2] = v54 + 1;
    v55 = &v51[5 * v54];
    v55[4] = v62;
    v55[5] = v46;
    v55[6] = v47;
    v55[7] = v49;
    v55[8] = v63;
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v11 = v60;
    goto LABEL_12;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void IMDPlainTextTapbackInterpreter.interpretMessageItem(_:in:)(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  id v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  uint64_t v78;
  char *v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  NSObject *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  id v98;
  void *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  _BOOL4 v117;
  uint64_t v118;
  uint64_t v119;
  uint8_t *v120;
  uint64_t v121;
  id v122;
  void *v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  void (*v127)(char *, uint64_t);
  char *v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150[5];
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;

  v147 = a1;
  v144 = sub_1D166D964();
  v3 = *(_QWORD *)(v144 - 8);
  v4 = MEMORY[0x1E0C80A78](v144);
  v6 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v131 - v8;
  MEMORY[0x1E0C80A78](v7);
  v140 = (char *)&v131 - v10;
  v11 = sub_1D141AC58(&qword_1ED9354E8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D166D628();
  v146 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v134 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v139 = (char *)&v131 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v131 - v19;
  sub_1D166D610();
  v21 = objc_msgSend(v147, sel_plainBody);
  v145 = v14;
  v143 = v20;
  if (!v21)
  {
    v22 = objc_msgSend(v147, sel_body);
    if (!v22)
    {
      if (qword_1EFC614F8 != -1)
        swift_once();
      v113 = v144;
      v114 = sub_1D141AC1C(v144, (uint64_t)qword_1EFC63028);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v114, v113);
      v147 = v147;
      v115 = sub_1D166D94C();
      v116 = sub_1D166DD6C();
      v117 = os_log_type_enabled(v115, v116);
      v118 = v146;
      if (!v117)
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v113);
        v127 = *(void (**)(char *, uint64_t))(v118 + 8);
        v128 = v20;
        v129 = v14;
        goto LABEL_52;
      }
      v119 = v3;
      v120 = (uint8_t *)swift_slowAlloc();
      v121 = swift_slowAlloc();
      v151 = v121;
      *(_DWORD *)v120 = 136315138;
      v122 = objc_msgSend(v147, sel_guid);
      if (!v122)
      {
LABEL_56:

        __break(1u);
        return;
      }
      v123 = v122;
      v124 = sub_1D166DACC();
      v126 = v125;

      v150[0] = sub_1D141BCB4(v124, v126, &v151);
      sub_1D166DF28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D1413000, v115, v116, "No plain body found for message %s", v120, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v121, -1, -1);
      MEMORY[0x1D17EB0AC](v120, -1, -1);

      (*(void (**)(char *, uint64_t))(v119 + 8))(v6, v144);
      goto LABEL_47;
    }
    v23 = v22;
    v21 = objc_msgSend(v22, sel_string);

  }
  v142 = v3;
  v24 = sub_1D166DACC();
  v26 = v25;

  swift_retain();
  v27 = sub_1D15FB890(v24, v26);
  v29 = v28;
  v141 = v30;
  swift_release();
  if (v29)
  {
    swift_bridgeObjectRelease();
    v31 = 0;
    v32 = 0;
    v33 = v145;
    goto LABEL_6;
  }
  v42 = objc_msgSend((id)objc_opt_self(), sel_sharedFeatureFlags);
  v43 = objc_msgSend(v42, sel_isEmojiTapbacksEnabled);

  if (!v43)
  {
    swift_bridgeObjectRelease();
    v33 = v145;
    v44 = v142;
    goto LABEL_17;
  }
  swift_retain();
  sub_1D16488C0(v24, v26, v150);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1D16334D4((uint64_t)v150, (uint64_t)&v151);
  v32 = v152;
  v33 = v145;
  v44 = v142;
  if (!v152)
  {
LABEL_17:
    if (qword_1EFC614F8 != -1)
      swift_once();
    v52 = v144;
    v53 = sub_1D141AC1C(v144, (uint64_t)qword_1EFC63028);
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v9, v53, v52);
    v147 = v147;
    v54 = sub_1D166D94C();
    v55 = sub_1D166DD6C();
    v56 = os_log_type_enabled(v54, v55);
    v57 = v146;
    if (!v56)
    {

      (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v52);
      v127 = *(void (**)(char *, uint64_t))(v57 + 8);
LABEL_50:
      v128 = v143;
      v129 = v33;
LABEL_52:
      v127(v128, v129);
      goto LABEL_53;
    }
    v58 = (uint8_t *)swift_slowAlloc();
    v59 = swift_slowAlloc();
    v149 = v59;
    *(_DWORD *)v58 = 136315138;
    v60 = objc_msgSend(v147, sel_guid);
    if (!v60)
    {
LABEL_55:

      __break(1u);
      goto LABEL_56;
    }
    v61 = v60;
    v62 = sub_1D166DACC();
    v64 = v63;

    v148 = sub_1D141BCB4(v62, v64, &v149);
    sub_1D166DF28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v54, v55, "No plain text tapback found for message %s", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v59, -1, -1);
    MEMORY[0x1D17EB0AC](v58, -1, -1);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v144);
LABEL_47:
    (*(void (**)(char *, uint64_t))(v146 + 8))(v143, v145);
    goto LABEL_53;
  }
  v31 = v151;
  v27 = v153;
  v29 = v154;
  v141 = v155;
LABEL_6:
  v135 = sub_1D16327A8(v27, v29, a2);
  v137 = v35;
  v136 = v36;
  if (!v34)
  {
    v45 = v144;
    if (qword_1EFC614F8 != -1)
      swift_once();
    sub_1D141AC1C(v45, (uint64_t)qword_1EFC63028);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46 = sub_1D166D94C();
    v47 = sub_1D166DD6C();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      *(_DWORD *)v48 = 136315138;
      v148 = v141;
      v149 = v49;
      type metadata accessor for IMAssociatedMessageType(0);
      v50 = sub_1D166DAF0();
      v148 = sub_1D141BCB4(v50, v51, &v149);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D1413000, v46, v47, "Interpreted plain text tapback %s but could not find original message using infix string", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v49, -1, -1);
      MEMORY[0x1D17EB0AC](v48, -1, -1);

      goto LABEL_47;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    v127 = *(void (**)(char *, uint64_t))(v146 + 8);
    goto LABEL_50;
  }
  v37 = v34;
  v38 = objc_msgSend(v147, sel_sender);
  v39 = v146;
  if (v38)
  {
    v40 = v38;
    v132 = sub_1D166DACC();
    v131 = v41;

  }
  else
  {
    v132 = 0;
    v131 = 0;
  }
  v65 = objc_msgSend(v147, sel_time, v131);
  v138 = v32;
  v133 = v31;
  if (v65)
  {
    v66 = v65;
    sub_1D166D604();

    v67 = 0;
  }
  else
  {
    v67 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v13, v67, 1, v33);
  v68 = objc_msgSend(v147, sel_body);
  v69 = sub_1D141BB00(MEMORY[0x1E0DEE9D8]);
  v70 = objc_msgSend(v147, sel_flags);
  v71 = objc_msgSend(v147, sel_guid);
  if (v71)
  {
    v72 = v71;
    v73 = sub_1D166DACC();
    v75 = v74;

  }
  else
  {
    v73 = 0;
    v75 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v76 = objc_msgSend(v147, sel_messageSummaryInfo);
  if (v76)
  {
    v77 = v76;
    v78 = sub_1D166DA30();

  }
  else
  {
    v78 = 0;
  }
  v79 = v143;
  v80 = objc_allocWithZone(MEMORY[0x1E0D396C8]);
  v81 = sub_1D1633208(v132, v131, (uint64_t)v13, v68, v69, 0, (uint64_t)v70, 0, v73, v75, (uint64_t)v135, v37, v141, v137, v136, v133, v138, v78, 0,
          0);
  v82 = (uint64_t)v81;
  v83 = v145;
  if (v81)
  {
    v84 = v81;
    v85 = objc_msgSend(v147, sel_fallbackHash);
    objc_msgSend(v84, sel_setFallbackHash_, v85);

  }
  v133 = v82;
  v86 = v146;
  v87 = v144;
  v88 = v140;
  v89 = v139;
  if (qword_1EFC614F8 != -1)
    swift_once();
  v90 = sub_1D141AC1C(v87, (uint64_t)qword_1EFC63028);
  v91 = v142;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v88, v90, v87);
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v89, v79, v83);
  swift_bridgeObjectRetain_n();
  v92 = v147;
  swift_bridgeObjectRetain();
  v147 = v92;
  swift_bridgeObjectRetain();
  v93 = sub_1D166D94C();
  LODWORD(v132) = sub_1D166DD6C();
  if (os_log_type_enabled(v93, (os_log_type_t)v132))
  {
    v94 = swift_slowAlloc();
    v95 = swift_slowAlloc();
    v131 = v95;
    *(_DWORD *)v94 = 136316162;
    v148 = v141;
    v149 = v95;
    type metadata accessor for IMAssociatedMessageType(0);
    v96 = sub_1D166DAF0();
    v148 = sub_1D141BCB4(v96, v97, &v149);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v94 + 12) = 2080;
    v98 = objc_msgSend(v147, sel_guid);
    if (v98)
    {
      v99 = v98;
      v100 = sub_1D166DACC();
      v102 = v101;

      v148 = sub_1D141BCB4(v100, v102, &v149);
      sub_1D166DF28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 22) = 2080;
      swift_bridgeObjectRetain();
      v148 = sub_1D141BCB4((uint64_t)v135, v37, &v149);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v94 + 32) = 2080;
      v103 = sub_1D166DEEC();
      v148 = sub_1D141BCB4(v103, v104, &v149);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 42) = 2048;
      v105 = v134;
      sub_1D166D610();
      v106 = v139;
      sub_1D166D5A4();
      v108 = v107;
      v109 = v145;
      v110 = *(void (**)(char *, uint64_t))(v146 + 8);
      v110(v105, v145);
      v148 = v108;
      sub_1D166DF28();
      v110(v106, v109);
      _os_log_impl(&dword_1D1413000, v93, (os_log_type_t)v132, "Interpreted plain text tapback %s for %s, attaching to %s with range %s, took %fs", (uint8_t *)v94, 0x34u);
      v111 = v131;
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v111, -1, -1);
      MEMORY[0x1D17EB0AC](v94, -1, -1);

      (*(void (**)(char *, uint64_t))(v142 + 8))(v140, v144);
      v110(v143, v109);
      goto LABEL_40;
    }

    swift_bridgeObjectRelease_n();
    __break(1u);
    goto LABEL_55;
  }

  v112 = *(void (**)(char *, uint64_t))(v86 + 8);
  v112(v89, v83);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v88, v87);
  v112(v143, v83);
LABEL_40:
  if (!v133)
LABEL_53:
    v130 = v147;
}

id sub_1D16327A8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id result;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v21;
  _QWORD v22[6];

  v4 = v3;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  sub_1D166DACC();
  v9 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v10 = (void *)sub_1D166DAA8();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithKey_ascending_, v10, 0);

  v12 = objc_msgSend((id)objc_opt_self(), sel_synchronousDatabase);
  result = objc_msgSend(a3, sel_guid);
  if (result)
  {
    v14 = result;
    sub_1D141AC58(&qword_1ED935880);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1D1683310;
    *(_QWORD *)(v15 + 32) = v11;
    sub_1D166DC04();
    sub_1D15FD3C0(0, &qword_1EFC61710);
    v16 = v11;
    v17 = (void *)sub_1D166DBD4();
    swift_bridgeObjectRelease();
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v8;
    v18[3] = v4;
    v18[4] = a1;
    v18[5] = a2;
    v22[4] = sub_1D1633588;
    v22[5] = v18;
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 1107296256;
    v22[2] = sub_1D1631134;
    v22[3] = &unk_1E92313F8;
    v19 = _Block_copy(v22);
    swift_retain();
    v20 = v4;
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v12, sel_fetchMessageRecordsForChatRecordWithGUID_filteredUsingPredicate_sortedUsingDescriptors_limit_completionHandler_, v14, 0, v17, 50, v19);

    _Block_release(v19);
    swift_unknownObjectRelease();

    swift_beginAccess();
    v21 = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return (id)v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D1632A98(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD aBlock[6];

  aBlock[0] = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D166E15C();
    v3 = result;
    if (result)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
    goto LABEL_16;
  }
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_15;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v3; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x1D17E8FD0](i, a1);
    else
      v6 = *(id *)(a1 + 8 * i + 32);
    v7 = v6;
    if (objc_msgSend(v6, sel_itemType) || (objc_msgSend(v7, sel_isAssociatedMessage) & 1) != 0)
    {

    }
    else
    {
      sub_1D166E0E4();
      sub_1D166E108();
      sub_1D166E114();
      sub_1D166E0F0();
    }
  }
  swift_bridgeObjectRelease();
  v8 = aBlock[0];
LABEL_16:
  v31 = sub_1D1632ED8();
  v32 = v9;
  v10 = sub_1D16311A0(v31, v9);
  if (v11)
  {
    if (v10 == 10911970 && v11 == 0xA300000000000000)
      LOBYTE(v12) = 1;
    else
      LOBYTE(v12) = sub_1D166E1E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v12) = 0;
  }
  if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
    goto LABEL_38;
  v13 = *(_QWORD *)(v8 + 16);
  swift_retain();
  for (; v13; v13 = sub_1D166E15C())
  {
    v30 = v12 & 1;
    v14 = 4;
    while (1)
    {
      v16 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D17E8FD0](v14 - 4, v8) : *(id *)(v8 + 8 * v14);
      v17 = v16;
      v18 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      v19 = objc_msgSend(v16, sel_attributedBodyText);
      if (v19)
      {
        v15 = v19;
        v20 = swift_allocObject();
        *(_QWORD *)(v20 + 24) = 0;
        *(_QWORD *)(v20 + 16) = 0;
        *(_BYTE *)(v20 + 32) = 1;
        v21 = swift_allocObject();
        *(_BYTE *)(v21 + 16) = 1;
        *(_QWORD *)(v21 + 24) = v31;
        *(_QWORD *)(v21 + 32) = v32;
        *(_BYTE *)(v21 + 40) = v30;
        *(_QWORD *)(v21 + 48) = v20;
        aBlock[4] = sub_1D16335D0;
        aBlock[5] = v21;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1D163319C;
        aBlock[3] = &unk_1E9231470;
        v22 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        objc_msgSend(v15, sel___im_visitMessageParts_, v22);
        _Block_release(v22);
        swift_beginAccess();
        v12 = *(_QWORD *)(v20 + 16);
        v23 = *(_QWORD *)(v20 + 24);
        v24 = *(_BYTE *)(v20 + 32);
        swift_release();
        if ((v24 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_release();
          v25 = objc_msgSend(v17, sel_guid);
          v26 = sub_1D166DACC();
          v28 = v27;
          swift_release();

          goto LABEL_40;
        }

      }
      else
      {
        v15 = v17;
      }

      ++v14;
      if (v18 == v13)
        goto LABEL_39;
    }
    __break(1u);
LABEL_38:
    swift_retain();
  }
LABEL_39:
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v26 = 0;
  v28 = 0;
  v12 = 0;
  v23 = 0;
LABEL_40:
  swift_beginAccess();
  a2[2] = v26;
  a2[3] = v28;
  a2[4] = v12;
  a2[5] = v23;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D1632ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRetain();
  v0 = sub_1D166DB68();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      if ((sub_1D166DA54() & 1) == 0)
        MEMORY[0x1D17E8A60](v2, v3);
      swift_bridgeObjectRelease();
      v2 = sub_1D166DB68();
      v3 = v4;
    }
    while (v4);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D1632FCC(void *a1, uint64_t a2, _BYTE *a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v23;
  uint64_t result;
  id v25;
  uint64_t v26;
  uint64_t v27;

  v14 = objc_msgSend(a1, sel_messagePartBody);
  v15 = objc_msgSend(v14, sel_string);

  v16 = sub_1D166DACC();
  v18 = v17;

  if ((a4 & 1) != 0)
  {
    v16 = sub_1D1632ED8();
    v20 = v19;
    swift_bridgeObjectRelease();
    v18 = v20;
  }
  if ((a7 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D16335E4(1);
    swift_bridgeObjectRelease();
    sub_1D163369C();
    sub_1D16336E0();
    v21 = sub_1D166DA6C();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
      goto LABEL_11;
  }
  if (v16 == a5 && v18 == a6)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v23 = sub_1D166E1E0();
  result = swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
  {
LABEL_12:
    v25 = objc_msgSend(a1, sel_messagePartRange);
    v27 = v26;
    result = swift_beginAccess();
    *(_QWORD *)(a8 + 16) = v25;
    *(_QWORD *)(a8 + 24) = v27;
    *(_BYTE *)(a8 + 32) = 0;
    *a3 = 1;
  }
  return result;
}

void sub_1D163319C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

id sub_1D1633208(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v44;

  if (a2)
  {
    v41 = (void *)sub_1D166DAA8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v41 = 0;
  }
  v24 = sub_1D166D628();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(a3, 1, v24) != 1)
  {
    v26 = (void *)sub_1D166D5BC();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a3, v24);
  }
  if (a5)
  {
    v40 = (void *)sub_1D166DA18();
    swift_bridgeObjectRelease();
    if (a6)
      goto LABEL_8;
  }
  else
  {
    v40 = 0;
    if (a6)
    {
LABEL_8:
      v39 = (void *)sub_1D166DBD4();
      swift_bridgeObjectRelease();
      v27 = a10;
      if (a8)
        goto LABEL_9;
      goto LABEL_16;
    }
  }
  v39 = 0;
  v27 = a10;
  if (a8)
  {
LABEL_9:
    v38 = (void *)sub_1D166D4A8();

    v28 = a12;
    if (v27)
      goto LABEL_10;
    goto LABEL_17;
  }
LABEL_16:
  v38 = 0;
  v28 = a12;
  if (v27)
  {
LABEL_10:
    v29 = (void *)sub_1D166DAA8();
    swift_bridgeObjectRelease();
    v30 = a17;
    if (v28)
      goto LABEL_11;
    goto LABEL_18;
  }
LABEL_17:
  v29 = 0;
  v30 = a17;
  if (v28)
  {
LABEL_11:
    v31 = (void *)sub_1D166DAA8();
    swift_bridgeObjectRelease();
    v32 = a18;
    if (v30)
      goto LABEL_12;
LABEL_19:
    v33 = 0;
    v34 = a20;
    if (v32)
      goto LABEL_13;
    goto LABEL_20;
  }
LABEL_18:
  v31 = 0;
  v32 = a18;
  if (!v30)
    goto LABEL_19;
LABEL_12:
  v33 = (void *)sub_1D166DAA8();
  swift_bridgeObjectRelease();
  v34 = a20;
  if (v32)
  {
LABEL_13:
    v35 = (void *)sub_1D166DA18();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_20:
  v35 = 0;
LABEL_21:
  if (v34)
  {
    v36 = (void *)sub_1D166DAA8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = 0;
  }
  v44 = objc_msgSend(v42, sel_initWithSender_time_body_attributes_fileTransferGUIDs_flags_error_guid_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_, v41, v26, a4, v40, v39, a7, v38, v29, v31, a13, a14, a15, v33, v35, v36);

  return v44;
}

uint64_t sub_1D16334D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D141AC58(&qword_1EFC63050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for IMDPlainTextTapbackInterpreter(uint64_t a1)
{
  return sub_1D15FD3C0(a1, &qword_1EFC63080);
}

uint64_t sub_1D1633530()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D1633554()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D1633588(unint64_t a1)
{
  uint64_t v1;

  return sub_1D1632A98(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1D1633594()
{
  return swift_deallocObject();
}

uint64_t sub_1D16335A4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D16335D0(void *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  return sub_1D1632FCC(a1, a2, a3, *(_BYTE *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_BYTE *)(v3 + 40), *(_QWORD *)(v3 + 48));
}

uint64_t sub_1D16335E4(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    result = sub_1D166DB20();
    if (!__OFSUB__(result, v1))
    {
      sub_1D166DB44();
      return sub_1D166DBB0();
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1D163369C()
{
  unint64_t result;

  result = qword_1EFC63090;
  if (!qword_1EFC63090)
  {
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EFC63090);
  }
  return result;
}

unint64_t sub_1D16336E0()
{
  unint64_t result;

  result = qword_1EFC63098;
  if (!qword_1EFC63098)
  {
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0DEFF50], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EFC63098);
  }
  return result;
}

uint64_t sub_1D163372C(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1ED936548);
}

uint64_t sub_1D1633750(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1ED936560);
}

uint64_t sub_1D1633774(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1ED9364B8);
}

uint64_t sub_1D1633798(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1ED936530);
}

uint64_t sub_1D16337BC(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1ED936590);
}

uint64_t sub_1D16337DC(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1EFC65DF8);
}

uint64_t sub_1D1633800(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1ED9364E8);
}

uint64_t sub_1D1633824(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1EFC65E10);
}

uint64_t sub_1D1633848(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1ED936578);
}

uint64_t sub_1D163386C(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1EFC65E28);
}

uint64_t sub_1D1633884(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1EFC65E40);
}

uint64_t sub_1D16338A8(uint64_t a1)
{
  return sub_1D16338CC(a1, qword_1EFC65E58);
}

uint64_t sub_1D16338CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1D166D964();
  sub_1D15FD440(v3, a2);
  sub_1D141AC1C(v3, (uint64_t)a2);
  sub_1D166D940();
  return sub_1D166D958();
}

id sub_1D1633930(void *a1, uint64_t a2)
{
  id result;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  void *v20;

  result = objc_msgSend(a1, sel_participants);
  if (result)
  {
    v5 = result;
    sub_1D15FD3C0(0, (unint64_t *)&qword_1EFC62000);
    v6 = sub_1D166DBEC();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      result = (id)sub_1D166E15C();
      v7 = (uint64_t)result;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain();
    }
    v20 = a1;
    if (!v7)
    {
      v9 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_19:
      swift_bridgeObjectRelease_n();
      sub_1D163866C(v20, v9, a2);
      return (id)swift_bridgeObjectRelease();
    }
    if (v7 >= 1)
    {
      v8 = 0;
      v9 = (char *)MEMORY[0x1E0DEE9D8];
      do
      {
        if ((v6 & 0xC000000000000001) != 0)
          v10 = (id)MEMORY[0x1D17E8FD0](v8, v6);
        else
          v10 = *(id *)(v6 + 8 * v8 + 32);
        v11 = v10;
        v12 = objc_msgSend(v10, sel_ID);
        if (v12)
        {
          v13 = v12;
          v14 = sub_1D166DACC();
          v16 = v15;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = (char *)sub_1D160DB14(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
          v18 = *((_QWORD *)v9 + 2);
          v17 = *((_QWORD *)v9 + 3);
          if (v18 >= v17 >> 1)
            v9 = (char *)sub_1D160DB14((_QWORD *)(v17 > 1), v18 + 1, 1, v9);
          *((_QWORD *)v9 + 2) = v18 + 1;
          v19 = &v9[16 * v18];
          *((_QWORD *)v19 + 4) = v14;
          *((_QWORD *)v19 + 5) = v16;
        }
        else
        {

        }
        ++v8;
      }
      while (v7 != v8);
      goto LABEL_19;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_1D1633B24(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D1633B38()
{
  sub_1D166E264();
  sub_1D166E270();
  return sub_1D166E288();
}

uint64_t sub_1D1633B7C()
{
  return sub_1D166E270();
}

uint64_t sub_1D1633BA4()
{
  sub_1D166E264();
  sub_1D166E270();
  return sub_1D166E288();
}

void sub_1D1633BE4(void *a1)
{
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  void *v8;
  id v9;
  id v10;

  objc_msgSend(a1, sel_invalidate);
  if (qword_1ED935578 != -1)
    swift_once();
  v2 = sub_1D166D964();
  sub_1D141AC1C(v2, (uint64_t)qword_1ED9364E8);
  v10 = v1;
  v3 = sub_1D166D94C();
  v4 = sub_1D166DD9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412546;
    v7 = (char *)v10;
    sub_1D166DF28();
    *v6 = v10;

    *(_WORD *)(v5 + 12) = 2112;
    v8 = *(void **)&v7[OBJC_IVAR___IMDScheduledMessageCoordinator_timer];
    if (v8)
      v9 = v8;
    sub_1D166DF28();
    v6[1] = v8;

    _os_log_impl(&dword_1D1413000, v3, v4, "%@ Updated timer to %@", (uint8_t *)v5, 0x16u);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v6, -1, -1);
    MEMORY[0x1D17EB0AC](v5, -1, -1);

  }
  else
  {

  }
}

NSObject *sub_1D1633F54(void *a1, void *a2, void *a3, void *a4)
{
  _BYTE *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  objc_class *v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  char *v32;
  id v33;
  NSObject *v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  NSObject *v42;
  id v43;
  NSObject *v44;
  id v45;
  _QWORD v47[2];
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  objc_super v54;
  objc_super v55;
  unint64_t v56;
  unint64_t v57;

  v53 = a4;
  v8 = sub_1D166DDFC();
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D166DDF0();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1D166D9F4();
  MEMORY[0x1E0C80A78](v12);
  *(_QWORD *)&v4[OBJC_IVAR___IMDScheduledMessageCoordinator_membershipObserver] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___IMDScheduledMessageCoordinator_blocklistObserver] = 0;
  v4[OBJC_IVAR___IMDScheduledMessageCoordinator_isFirstFire] = 1;
  *(_QWORD *)&v4[OBJC_IVAR___IMDScheduledMessageCoordinator_timer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession] = a1;
  *(_QWORD *)&v4[OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore] = a2;
  *(_QWORD *)&v4[OBJC_IVAR___IMDScheduledMessageCoordinator_chatRegistry] = a3;
  v47[1] = sub_1D15FD3C0(0, (unint64_t *)&qword_1ED9357D0);
  v56 = 0;
  v57 = 0xE000000000000000;
  v13 = v4;
  v14 = a1;
  v52 = a2;
  v48 = a3;
  sub_1D166E090();
  swift_bridgeObjectRelease();
  v56 = 0xD00000000000001CLL;
  v57 = 0x80000001D1698DE0;
  v51 = v14;
  v15 = objc_msgSend(v14, sel_displayName);
  sub_1D166DACC();

  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  sub_1D166D9E8();
  v56 = MEMORY[0x1E0DEE9D8];
  sub_1D15FC784((unint64_t *)&qword_1ED9357C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1D141AC58((uint64_t *)&unk_1ED935760);
  sub_1D160F064((unint64_t *)&qword_1ED935770, (uint64_t *)&unk_1ED935760, MEMORY[0x1E0DEAF38]);
  sub_1D166DF88();
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v10, *MEMORY[0x1E0DEF8D0], v50);
  *(_QWORD *)&v13[OBJC_IVAR___IMDScheduledMessageCoordinator_queue] = sub_1D166DE2C();

  v55.receiver = v13;
  v55.super_class = (Class)IMDScheduledMessageCoordinator;
  v16 = objc_msgSendSuper2(&v55, sel_init);
  v17 = (objc_class *)type metadata accessor for ScheduledMessageMembershipObserver();
  v18 = (char *)objc_allocWithZone(v17);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v19 = v48;
  *(_QWORD *)&v18[OBJC_IVAR____TtC12IMDaemonCore34ScheduledMessageMembershipObserver_chatRegistry] = v48;
  v54.receiver = v18;
  v54.super_class = v17;
  v20 = v19;
  v21 = v16;
  v22 = v20;
  v23 = (char *)v21;
  v24 = objc_msgSendSuper2(&v54, sel_init);
  v25 = (void *)objc_opt_self();
  v26 = v24;
  v27 = objc_msgSend(v25, sel_defaultCenter);
  v28 = v26;
  objc_msgSend(v27, sel_addObserver_selector_name_object_, v28, sel_handleChatParticipantsDidChange_, CFSTR("__kIMDChatParticipantsDidChangeNotification"), 0);

  v29 = *(void **)&v23[OBJC_IVAR___IMDScheduledMessageCoordinator_membershipObserver];
  *(_QWORD *)&v23[OBJC_IVAR___IMDScheduledMessageCoordinator_membershipObserver] = v28;

  if (qword_1ED935578 != -1)
    swift_once();
  v30 = sub_1D166D964();
  sub_1D141AC1C(v30, (uint64_t)qword_1ED9364E8);
  v31 = v51;
  v32 = v23;
  v33 = v31;
  v34 = v32;
  v35 = sub_1D166D94C();
  v36 = sub_1D166DD9C();
  v37 = v36;
  if (os_log_type_enabled(v35, v36))
  {
    v38 = swift_slowAlloc();
    LODWORD(v50) = v37;
    v39 = v38;
    v40 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v39 = 138412546;
    v56 = (unint64_t)v34;
    v51 = v22;
    v41 = v16;
    v42 = v34;
    sub_1D166DF28();
    *v40 = v41;

    *(_WORD *)(v39 + 12) = 2112;
    v56 = (unint64_t)v33;
    v43 = v33;
    v22 = v51;
    sub_1D166DF28();
    v40[1] = v33;

    _os_log_impl(&dword_1D1413000, v35, (os_log_type_t)v50, "Init %@ serviceSession: %@", (uint8_t *)v39, 0x16u);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v40, -1, -1);
    MEMORY[0x1D17EB0AC](v39, -1, -1);
  }
  else
  {

    v35 = v34;
  }

  objc_msgSend(v33, sel_addDelegate_, v34);
  v44 = v34;
  v45 = v53;
  objc_msgSend(v53, sel_addListener_, v44);

  return v44;
}

id sub_1D1634564()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  void *v8;
  objc_super v10;

  if (qword_1ED935578 != -1)
    swift_once();
  v1 = sub_1D166D964();
  sub_1D141AC1C(v1, (uint64_t)qword_1ED9364E8);
  v2 = v0;
  v3 = sub_1D166D94C();
  v4 = sub_1D166DD9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v7 = v2;
    sub_1D166DF28();
    *v6 = v2;

    _os_log_impl(&dword_1D1413000, v3, v4, "Deinit %@", v5, 0xCu);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v6, -1, -1);
    MEMORY[0x1D17EB0AC](v5, -1, -1);

  }
  else
  {

  }
  v8 = *(void **)&v2[OBJC_IVAR___IMDScheduledMessageCoordinator_timer];
  *(_QWORD *)&v2[OBJC_IVAR___IMDScheduledMessageCoordinator_timer] = 0;

  v10.receiver = v2;
  v10.super_class = (Class)IMDScheduledMessageCoordinator;
  return objc_msgSendSuper2(&v10, sel_dealloc);
}

uint64_t sub_1D16347D0(double a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v16[6];

  v2 = v1;
  ObjectType = swift_getObjectType();
  if (qword_1ED935578 != -1)
    swift_once();
  v5 = sub_1D166D964();
  sub_1D141AC1C(v5, (uint64_t)qword_1ED9364E8);
  v6 = sub_1D166D94C();
  v7 = sub_1D166DD9C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    *(double *)v16 = a1;
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, v6, v7, "Received request to update timer to %f", v8, 0xCu);
    MEMORY[0x1D17EB0AC](v8, -1, -1);
  }

  v9 = *(NSObject **)&v2[OBJC_IVAR___IMDScheduledMessageCoordinator_queue];
  v10 = swift_allocObject();
  *(double *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v2;
  *(_QWORD *)(v10 + 32) = ObjectType;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1D163FA20;
  *(_QWORD *)(v11 + 24) = v10;
  v16[4] = sub_1D141BC40;
  v16[5] = v11;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1D141BC68;
  v16[3] = &unk_1E9231510;
  v12 = _Block_copy(v16);
  v13 = v2;
  swift_retain();
  swift_release();
  dispatch_sync(v9, v12);
  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_1D16349EC(NSObject *a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  _QWORD *v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  void *v34;
  objc_class *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  void (*v46)(char *, char *, uint64_t);
  id v47;
  uint64_t v48;
  NSObject *v49;
  _OWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = sub_1D166D964();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = ((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1D166D628();
  v9 = *(_QWORD **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D141AC58(&qword_1ED9354E8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v44 - v16;
  if (a2 >= 0.0)
  {
    v49 = v7;
    v20 = OBJC_IVAR___IMDScheduledMessageCoordinator_timer;
    v21 = *(Class *)((char *)&a1->isa + OBJC_IVAR___IMDScheduledMessageCoordinator_timer);
    if (!v21)
    {
LABEL_12:
      v51 = sub_1D166E2A0();
      v52 = v28;
      sub_1D166DB5C();
      v29 = objc_msgSend(*(id *)((char *)&a1->isa + OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession), sel_displayName);
      sub_1D166DACC();

      sub_1D166DB5C();
      v30 = swift_bridgeObjectRelease();
      v31 = v51;
      v32 = v52;
      v53 = type metadata accessor for IMDScheduledMessageCoordinator(v30);
      v51 = (uint64_t)a1;
      memset(v50, 0, sizeof(v50));
      objc_allocWithZone(MEMORY[0x1E0D36AE0]);
      a1;
      v33 = (objc_class *)sub_1D163B0BC(a2, v31, v32, 1, &v51, (uint64_t)sel_timerDidFire, v50);
      v34 = *(Class *)((char *)&a1->isa + v20);
      *(Class *)((char *)&a1->isa + v20) = v33;
      v35 = v33;
      sub_1D1633BE4(v34);

      return;
    }
    v48 = v5;
    v47 = v21;
    v22 = objc_msgSend(v47, sel_fireDate);
    if (v22)
    {
      v23 = v22;
      sub_1D166D604();

      v46 = (void (*)(char *, char *, uint64_t))v9[4];
      v46(v17, v11, v8);
      v24 = (_QWORD *)v9[7];
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v17, 0, 1, v8);
      v45 = (unsigned int (*)(char *, uint64_t, uint64_t))v9[6];
      if (v45(v17, 1, v8) != 1)
      {
        sub_1D166D5D4();
        v26 = v25;
        v44 = (void (*)(char *, uint64_t))v9[1];
        v44(v17, v8);
        v27 = v48;
        if (v26 > a2)
        {

          goto LABEL_12;
        }
        if (qword_1ED935578 != -1)
          swift_once();
        v36 = sub_1D141AC1C(v4, (uint64_t)qword_1ED9364E8);
        (*(void (**)(NSObject *, uint64_t, uint64_t))(v27 + 16))(v49, v36, v4);
        a1 = v47;
        v37 = sub_1D166D94C();
        v38 = sub_1D166DD9C();
        if (!os_log_type_enabled(v37, v38))
        {

          v37 = a1;
          goto LABEL_20;
        }
        v9 = v24;
        v39 = swift_slowAlloc();
        *(_DWORD *)v39 = 134218240;
        v40 = -[NSObject fireDate](a1, sel_fireDate);
        if (v40)
        {
          v41 = v40;
          sub_1D166D604();

          v46(v15, v11, v8);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v9)(v15, 0, 1, v8);
          if (v45(v15, 1, v8) != 1)
          {
            sub_1D166D5D4();
            v43 = v42;
            v44(v15, v8);
            v51 = v43;
            sub_1D166DF28();

            *(_WORD *)(v39 + 12) = 2048;
            v51 = *(_QWORD *)&a2;
            sub_1D166DF28();
            _os_log_impl(&dword_1D1413000, v37, v38, "Not updating timer since existing timer interval is sooner. Existing: %f vs requested: %f", (uint8_t *)v39, 0x16u);
            MEMORY[0x1D17EB0AC](v39, -1, -1);
            v27 = v48;
LABEL_20:

            (*(void (**)(NSObject *, uint64_t))(v27 + 8))(v49, v4);
            return;
          }
LABEL_24:

          __break(1u);
          return;
        }
LABEL_23:

        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v9)(v15, 1, 1, v8);
        __break(1u);
        goto LABEL_24;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v9[7])(v17, 1, 1, v8);
    }
    __break(1u);
    goto LABEL_23;
  }
  if (qword_1ED935578 != -1)
    swift_once();
  sub_1D141AC1C(v4, (uint64_t)qword_1ED9364E8);
  v49 = sub_1D166D94C();
  v18 = sub_1D166DD84();
  if (os_log_type_enabled(v49, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_1D1413000, v49, v18, "Invalid update time requested, not updating timer.", v19, 2u);
    MEMORY[0x1D17EB0AC](v19, -1, -1);
  }

}

void sub_1D1634FE8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;

  v4 = sub_1D166D6DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D141AC58((uint64_t *)&unk_1ED9354F0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a2, sel_body);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel___im_messagePartIndexes);

    sub_1D166D6B8();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    {
      v14 = 0;
    }
    else
    {
      v14 = (void *)sub_1D166D6AC();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
    v14 = 0;
  }
  objc_msgSend(a1, sel_setFailedRetractPartIndexes_, v14);

}

id sub_1D1635188(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  id v6;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE *v26;
  _BYTE *v27;
  _QWORD *v28;

  v6 = a1;
  sub_1D1634FE8(a1, a3);
  if (v3)
  {

  }
  else
  {
    v8 = *(void **)(a2 + OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore);
    v6 = objc_msgSend(v8, sel_storeMessage_forceReplace_modifyError_modifyFlags_flagMask_, v6, 1, 1, 1, objc_msgSend(v6, sel_flags));
    v9 = objc_msgSend(v8, sel_chatForMessage_, v6);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v6, sel_accountID);
      if (v11)
      {
        v12 = v11;
        v13 = objc_msgSend(*(id *)(a2 + OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession), sel_broadcasterForChatListeners);
        v14 = objc_msgSend(v10, sel_chatIdentifier);
        v15 = (unint64_t)objc_msgSend(v10, sel_style);
        v16 = objc_msgSend(v10, sel_chatProperties);
        if (v16)
        {
          sub_1D166DA30();

          v15 = v15;
          v16 = (id)sub_1D166DA18();
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v13, sel_account_chat_style_chatProperties_messageUpdated_, v12, v14, v15, v16, v6);

        swift_unknownObjectRelease();
      }
      else
      {
        if (qword_1ED935578 != -1)
          swift_once();
        v22 = sub_1D166D964();
        sub_1D141AC1C(v22, (uint64_t)qword_1ED9364E8);
        v23 = sub_1D166D94C();
        v24 = sub_1D166DD84();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v25 = 0;
          _os_log_impl(&dword_1D1413000, v23, v24, "Failed to find accountID from message.", v25, 2u);
          MEMORY[0x1D17EB0AC](v25, -1, -1);
        }

        sub_1D163F8F8();
        swift_allocError();
        *v26 = 0;
        swift_willThrow();

      }
    }
    else
    {
      if (qword_1ED935578 != -1)
        swift_once();
      v17 = sub_1D166D964();
      sub_1D141AC1C(v17, (uint64_t)qword_1ED9364E8);
      v6 = v6;
      v18 = sub_1D166D94C();
      v19 = sub_1D166DD84();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v28 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v20 = 138412290;
        v21 = v6;
        sub_1D166DF28();
        *v28 = v6;

        _os_log_impl(&dword_1D1413000, v18, v19, "Failed to find chat for message: %@", v20, 0xCu);
        sub_1D141AC58(&qword_1ED935810);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v28, -1, -1);
        MEMORY[0x1D17EB0AC](v20, -1, -1);

      }
      else
      {

      }
      sub_1D163F8F8();
      swift_allocError();
      *v27 = 2;
      swift_willThrow();

    }
  }
  return v6;
}

id sub_1D1635620(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _BYTE *v23;
  _BYTE *v24;
  id v26;

  objc_msgSend(a1, sel_setScheduleState_, 2);
  v4 = *(void **)(a2 + OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore);
  v26 = objc_msgSend(v4, sel_storeMessage_forceReplace_modifyError_modifyFlags_flagMask_, a1, 1, 1, 1, objc_msgSend(a1, sel_flags));
  v5 = objc_msgSend(v4, sel_chatForMessage_);
  if (!v5)
  {
    if (qword_1ED935578 != -1)
      swift_once();
    v13 = sub_1D166D964();
    sub_1D141AC1C(v13, (uint64_t)qword_1ED9364E8);
    v6 = v26;
    v14 = sub_1D166D94C();
    v15 = sub_1D166DD84();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      v18 = v6;
      sub_1D166DF28();
      *v17 = v6;

      _os_log_impl(&dword_1D1413000, v14, v15, "Failed to find chat for message: %@", v16, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v17, -1, -1);
      MEMORY[0x1D17EB0AC](v16, -1, -1);

    }
    else
    {

    }
    sub_1D163F8F8();
    swift_allocError();
    *v24 = 2;
    swift_willThrow();
    goto LABEL_17;
  }
  v6 = v5;
  v7 = objc_msgSend(v26, sel_accountID);
  if (!v7)
  {
    if (qword_1ED935578 != -1)
      swift_once();
    v19 = sub_1D166D964();
    sub_1D141AC1C(v19, (uint64_t)qword_1ED9364E8);
    v20 = sub_1D166D94C();
    v21 = sub_1D166DD84();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1D1413000, v20, v21, "Failed to find accountID from message.", v22, 2u);
      MEMORY[0x1D17EB0AC](v22, -1, -1);
    }

    sub_1D163F8F8();
    swift_allocError();
    *v23 = 0;
    swift_willThrow();

LABEL_17:
    return v26;
  }
  v8 = v7;
  v9 = objc_msgSend(*(id *)(a2 + OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession), sel_broadcasterForChatListeners);
  v10 = objc_msgSend(v6, sel_chatIdentifier);
  v11 = objc_msgSend(v6, sel_style);
  v12 = objc_msgSend(v6, sel_chatProperties);
  if (v12)
  {
    sub_1D166DA30();

    v12 = (id)sub_1D166DA18();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v9, sel_account_chat_style_chatProperties_messageUpdated_, v8, v10, v11, v12, v26);

  swift_unknownObjectRelease();
  return v26;
}

uint64_t sub_1D1635A94(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1D164F570(0, v2, 0);
  v3 = v12;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_1D141B3A8(i, (uint64_t)v11);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D164F570(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v12;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1D164F570(v5 > 1, v6 + 1, 1);
        v3 = v12;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      v7 = v3 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void sub_1D1635C60(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  char v19;
  uint64_t v20;
  char *v21;
  id v22;
  NSObject *v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  _BOOL4 v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  NSObject *v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void (**v39)(char *, uint64_t, uint64_t, uint64_t);
  id v40;
  void *v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  char v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  NSObject *v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  NSObject *v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  NSObject *v51;
  int v52;
  uint64_t v53;
  _QWORD *v54;
  NSObject *v55;
  id v56;
  void *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  NSObject *v70;
  _QWORD *v71;
  uint64_t v72;
  NSObject *v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  void *v75;
  id v76;
  id v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  _QWORD *v82;
  id v83;
  uint64_t v84;
  _BYTE *v85;
  char *v86;
  _QWORD *v87;
  void (*v88)(char *, uint64_t, uint64_t, uint64_t);
  char *v89;
  char *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  void (**v95)(char *, uint64_t, uint64_t, uint64_t);
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;

  v3 = sub_1D166D964();
  v97 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v96 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1D166D628();
  v95 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v99 - 8);
  v5 = MEMORY[0x1E0C80A78](v99);
  v89 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v98 = (char *)&v86 - v7;
  v8 = sub_1D141AC58(&qword_1ED9354E8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v90 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v86 - v11;
  v13 = sub_1D166DA00();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char **)((char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)&v1[OBJC_IVAR___IMDScheduledMessageCoordinator_queue];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v18 = v17;
  v19 = sub_1D166DA0C();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v19 & 1) != 0)
  {
    if (qword_1ED935578 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v20 = sub_1D141AC1C(v3, (uint64_t)qword_1ED9364E8);
  v21 = v1;
  v22 = a1;
  v23 = v21;
  v24 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v22;
  v93 = v20;
  v25 = sub_1D166D94C();
  v26 = sub_1D166DD9C();
  v27 = v26;
  v28 = os_log_type_enabled(v25, v26);
  v100 = v24;
  v92 = v3;
  v94 = v23;
  if (v28)
  {
    v29 = swift_slowAlloc();
    v30 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v29 = 138412546;
    LODWORD(v88) = v27;
    v102 = (uint64_t)v23;
    v31 = v12;
    v32 = v23;
    sub_1D166DF28();
    *v30 = v23;

    v12 = v31;
    *(_WORD *)(v29 + 12) = 2112;
    v102 = (uint64_t)v100;
    v33 = v100;
    sub_1D166DF28();
    v30[1] = v100;

    _os_log_impl(&dword_1D1413000, v25, (os_log_type_t)v88, "%@ Handling message %@", (uint8_t *)v29, 0x16u);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v30, -1, -1);
    v34 = v29;
    v24 = v100;
    MEMORY[0x1D17EB0AC](v34, -1, -1);
  }
  else
  {

    v25 = v23;
  }
  v36 = v96;
  v35 = v97;
  v38 = v98;
  v37 = v99;
  v39 = v95;

  v40 = objc_msgSend(v24, sel_time);
  if (!v40)
  {
    v39[7](v12, 1, 1, v37);
    goto LABEL_25;
  }
  v41 = v40;
  sub_1D166D604();

  v88 = v39[4];
  ((void (*)(char *, char *, uint64_t))v88)(v12, v38, v37);
  v95 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v39[7];
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v95)(v12, 0, 1, v37);
  v42 = v39[6];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v42)(v12, 1, v37) == 1)
  {
LABEL_25:
    __break(1u);
LABEL_26:

    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v95)(v90, 1, 1, v99);
    __break(1u);
    goto LABEL_27;
  }
  sub_1D166D610();
  sub_1D15FC784((unint64_t *)&unk_1EFC631A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v43 = sub_1D166DA84();
  v44 = v39[1];
  ((void (*)(char *, uint64_t))v44)(v38, v37);
  ((void (*)(char *, uint64_t))v44)(v12, v37);
  if ((v43 & 1) == 0)
  {
    v73 = v94;
    v74 = v100;
    v75 = v91;
    v76 = sub_1D163C580(v74, (uint64_t)v73, v74, v73);
    if (!v75)
    {

      sub_1D16368E8(v74);
      sub_1D1636A48(v74);
      return;
    }

    v77 = v75;
    v78 = v75;
    v79 = sub_1D166D94C();
    v80 = sub_1D166DD84();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = (uint8_t *)swift_slowAlloc();
      v82 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v81 = 138412290;
      v83 = v75;
      v84 = _swift_stdlib_bridgeErrorToNSError();
      v102 = v84;
      sub_1D166DF28();
      *v82 = v84;

      _os_log_impl(&dword_1D1413000, v79, v80, "Could not mark the message state as TimeElapsed. Error: %@", v81, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v82, -1, -1);
      MEMORY[0x1D17EB0AC](v81, -1, -1);
    }
    else
    {

    }
    goto LABEL_21;
  }
  v45 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v36, v93, v92);
  v46 = v100;
  v47 = v94;
  v48 = v46;
  v49 = v47;
  v50 = v48;
  v51 = sub_1D166D94C();
  v52 = sub_1D166DD84();
  if (!os_log_type_enabled(v51, (os_log_type_t)v52))
  {

    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v45);
    goto LABEL_17;
  }
  v100 = v42;
  LODWORD(v91) = v52;
  v94 = v51;
  v53 = swift_slowAlloc();
  v54 = (_QWORD *)swift_slowAlloc();
  v93 = swift_slowAlloc();
  v102 = v93;
  *(_DWORD *)v53 = 138413058;
  v101 = (uint64_t)v49;
  v55 = v49;
  sub_1D166DF28();
  *v54 = v49;

  *(_WORD *)(v53 + 12) = 2112;
  v101 = (uint64_t)v50;
  v36 = v50;
  sub_1D166DF28();
  v87 = v54;
  v54[1] = v50;

  *(_WORD *)(v53 + 22) = 2080;
  v56 = objc_msgSend(v36, sel_time);
  if (!v56)
    goto LABEL_26;
  v57 = v56;
  v86 = v36;
  v58 = v98;
  sub_1D166D604();

  v59 = v90;
  v60 = v99;
  v61 = v88;
  ((void (*)(char *, char *, uint64_t))v88)(v90, v58, v99);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v95)(v59, 0, 1, v60);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v100)(v59, 1, v60) != 1)
  {
    v62 = v89;
    ((void (*)(char *, char *, uint64_t))v61)(v89, v59, v60);
    sub_1D15FC784((unint64_t *)&unk_1EFC63210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v63 = sub_1D166E1BC();
    v65 = v64;
    ((void (*)(char *, uint64_t))v44)(v62, v60);
    v101 = sub_1D141BCB4(v63, v65, &v102);
    sub_1D166DF28();
    v66 = v86;

    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 32) = 2080;
    sub_1D166D610();
    v67 = sub_1D166E1BC();
    v69 = v68;
    ((void (*)(char *, uint64_t))v44)(v58, v60);
    v101 = sub_1D141BCB4(v67, v69, &v102);
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    v70 = v94;
    _os_log_impl(&dword_1D1413000, v94, (os_log_type_t)v91, "%@ not handling message: %@ because it is scheduled for the future. %s vs now %s", (uint8_t *)v53, 0x2Au);
    sub_1D141AC58(&qword_1ED935810);
    v71 = v87;
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v71, -1, -1);
    v72 = v93;
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v72, -1, -1);
    MEMORY[0x1D17EB0AC](v53, -1, -1);

    (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v92);
LABEL_17:
    sub_1D163F8F8();
    swift_allocError();
    *v85 = 0;
LABEL_21:
    swift_willThrow();
    return;
  }
LABEL_27:

  __break(1u);
}

id sub_1D163667C(void *a1, id a2, void *a3)
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  _BYTE *v15;
  id v17;

  v6 = objc_msgSend(a2, sel_scheduleState);
  if ((unint64_t)v6 > 5)
  {
LABEL_8:
    sub_1D163F8F8();
    swift_allocError();
    *v15 = 3;
    return (id)swift_willThrow();
  }
  if (v6 != (id)2)
  {
    if (qword_1ED935578 != -1)
      swift_once();
    v7 = sub_1D166D964();
    sub_1D141AC1C(v7, (uint64_t)qword_1ED9364E8);
    v8 = a3;
    v9 = a2;
    v10 = sub_1D166D94C();
    v11 = sub_1D166DD84();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v17 = v9;
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 138412546;
      v14 = v8;
      sub_1D166DF28();
      *v13 = v8;

      *(_WORD *)(v12 + 12) = 2048;
      objc_msgSend(v17, sel_scheduleState);
      sub_1D166DF28();

      _os_log_impl(&dword_1D1413000, v10, v11, "%@ can't modify message to timeElapsed since it's in an invalid state. %lu", (uint8_t *)v12, 0x16u);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v13, -1, -1);
      MEMORY[0x1D17EB0AC](v12, -1, -1);

    }
    else
    {

    }
    goto LABEL_8;
  }
  objc_msgSend(a1, sel_setScheduleState_, 3);
  return objc_msgSend(a3, sel_removeFailedEditsFrom_, a2);
}

id sub_1D16368E8(void *a1)
{
  uint64_t v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  id v11;

  result = objc_msgSend(a1, sel_fileTransferGUIDs);
  if (result)
  {
    v3 = result;
    v4 = sub_1D166DBEC();

    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v6 = (void *)objc_opt_self();
      v7 = OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession;
      for (i = v4 + 40; ; i += 16)
      {
        swift_bridgeObjectRetain();
        result = objc_msgSend(v6, sel_sharedInstance);
        if (!result)
          break;
        v9 = result;
        v10 = (void *)sub_1D166DAA8();
        swift_bridgeObjectRelease();
        v11 = objc_msgSend(v9, sel_transferForGUID_, v10);

        if (v11)
        {
          objc_msgSend(*(id *)(v1 + v7), sel_renewTTLForScheduledAttachmentTransfer_, v11);

        }
        if (!--v5)
          return (id)swift_bridgeObjectRelease();
      }
      __break(1u);
    }
    else
    {
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1D1636A48(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  id v10;

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore), sel_chatForMessage_, a1));
  if (v3)
  {
    v10 = v3;
    sub_1D1638FA4(v3);
  }
  else
  {
    if (qword_1ED935578 != -1)
      swift_once();
    v4 = sub_1D166D964();
    sub_1D141AC1C(v4, (uint64_t)qword_1ED9364E8);
    v10 = a1;
    v5 = sub_1D166D94C();
    v6 = sub_1D166DD84();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v9 = v10;
      sub_1D166DF28();
      *v8 = v10;

      _os_log_impl(&dword_1D1413000, v5, v6, "Failed to find chat for scheduled message: %@", v7, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v8, -1, -1);
      MEMORY[0x1D17EB0AC](v7, -1, -1);

      return;
    }

  }
}

void sub_1D1636C70()
{
  char *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  _BOOL4 v26;
  uint64_t v27;
  uint8_t *v28;
  _QWORD *v29;
  NSObject *v30;
  _QWORD *v31;
  void *v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  char *v43;
  id v44;
  void *v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  _QWORD *v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  id v50;
  void *v51;
  char *v52;
  char *v53;
  char *v54;
  char v55;
  char *v56;
  char v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  NSObject *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  _QWORD *v64;
  NSObject *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  void *v69;
  objc_class *v70;
  id v71;
  char *v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  char *v83;
  uint8_t *v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  _QWORD v96[6];
  void *v97;

  v1 = v0;
  v2 = sub_1D166D628();
  v3 = *(_QWORD **)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v95 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D141AC58(&qword_1ED9354E8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v90 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v94 = (char *)&v84 - v8;
  v9 = sub_1D141AC58((uint64_t *)&unk_1ED935540);
  v91 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = (_QWORD *)sub_1D141AC58((uint64_t *)&unk_1ED935558);
  v89 = *(v87 - 1);
  v12 = MEMORY[0x1E0C80A78](v87);
  v88 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v93 = (char *)&v84 - v14;
  v15 = sub_1D166DA00();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED9357D0);
  *v18 = sub_1D166DE08();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
  v19 = sub_1D166DA0C();
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
    goto LABEL_44;
  if (qword_1ED935578 != -1)
LABEL_45:
    swift_once();
  v20 = sub_1D166D964();
  v21 = sub_1D141AC1C(v20, (uint64_t)qword_1ED9364E8);
  v22 = v1;
  v86 = v21;
  v23 = sub_1D166D94C();
  v24 = sub_1D166DD9C();
  v25 = v24;
  v26 = os_log_type_enabled(v23, v24);
  v92 = (unint64_t)v22;
  if (v26)
  {
    v27 = swift_slowAlloc();
    LODWORD(v85) = v25;
    v28 = (uint8_t *)v27;
    v29 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v28 = 138412290;
    v84 = v28 + 4;
    v96[0] = v22;
    v30 = v22;
    sub_1D166DF28();
    *v29 = v92;

    v22 = v92;
    _os_log_impl(&dword_1D1413000, v23, (os_log_type_t)v85, "%@ Timer fired", v28, 0xCu);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v29, -1, -1);
    MEMORY[0x1D17EB0AC](v28, -1, -1);
  }
  else
  {

    v23 = v22;
  }
  v31 = v87;

  v32 = *(Class *)((char *)&v22->isa + OBJC_IVAR___IMDScheduledMessageCoordinator_timer);
  *(Class *)((char *)&v22->isa + OBJC_IVAR___IMDScheduledMessageCoordinator_timer) = 0;
  sub_1D1633BE4(v32);

  v33 = objc_msgSend(*(id *)((char *)&v22->isa + OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore), sel_scheduledMessagesBatchFetcher);
  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED9355E0);
  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED935668);
  v1 = v93;
  v87 = v33;
  sub_1D166DDCC();
  v34 = MEMORY[0x1E0DEE9D8];
  v96[0] = MEMORY[0x1E0DEE9D8];
  v35 = v89;
  (*(void (**)(char *, char *, _QWORD *))(v89 + 16))(v88, v1, v31);
  sub_1D160F064(&qword_1ED935550, (uint64_t *)&unk_1ED935558, MEMORY[0x1E0D372A0]);
  sub_1D166DBBC();
  sub_1D160F064(&qword_1ED935538, (uint64_t *)&unk_1ED935540, MEMORY[0x1E0D37268]);
  sub_1D166DF1C();
  v36 = v97;
  if (v97)
  {
    do
    {
      v37 = sub_1D1637770();

      if (v37)
      {
        MEMORY[0x1D17E8AD8]();
        v1 = *(char **)((v96[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        if ((unint64_t)v1 >= *(_QWORD *)((v96[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D166DC1C();
        sub_1D166DC34();
        sub_1D166DC04();
      }
      sub_1D166DF1C();
      v36 = v97;
    }
    while (v97);
    v34 = v96[0];
  }
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v11, v9);
  (*(void (**)(char *, _QWORD *))(v35 + 8))(v93, v31);
  v38 = (char *)(id)v92;
  v9 = 0;
  v39 = sub_1D163B410(v34, v38);
  swift_bridgeObjectRelease();

  v92 = v39;
  if (!(v39 >> 62))
  {
    v40 = *(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v91 = v40;
    if (v40)
      goto LABEL_16;
LABEL_47:
    swift_bridgeObjectRelease_n();
    v60 = sub_1D166D94C();
    v67 = sub_1D166DD9C();
    if (os_log_type_enabled(v60, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v68 = 0;
      _os_log_impl(&dword_1D1413000, v60, v67, "No future scheduled messages found. Not re-setting up timer.", v68, 2u);
      MEMORY[0x1D17EB0AC](v68, -1, -1);
    }
    v66 = 0;
LABEL_50:

    if (v38[OBJC_IVAR___IMDScheduledMessageCoordinator_isFirstFire] == 1)
    {
      v38[OBJC_IVAR___IMDScheduledMessageCoordinator_isFirstFire] = 0;
      v69 = *(void **)&v38[OBJC_IVAR___IMDScheduledMessageCoordinator_chatRegistry];
      v70 = (objc_class *)type metadata accessor for ScheduledMessageBlocklistController();
      v71 = objc_allocWithZone(v70);
      v72 = v38;
      v73 = v69;
      v74 = objc_msgSend(v71, sel_init);
      v96[3] = v70;
      v96[4] = &off_1E9233250;
      v96[0] = v74;
      type metadata accessor for ScheduledMessageBlocklistObserver();
      v75 = swift_allocObject();
      v76 = sub_1D163F93C((uint64_t)v96, (uint64_t)v70);
      MEMORY[0x1E0C80A78](v76);
      v78 = (uint64_t *)((char *)&v84 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v79 + 16))(v78);
      v80 = *v78;
      v81 = v74;
      v82 = sub_1D163B29C(v72, v73, v80, v75);
      sub_1D141AC98((uint64_t)v96);

      *(_QWORD *)&v72[OBJC_IVAR___IMDScheduledMessageCoordinator_blocklistObserver] = v82;
      swift_release();
    }
    else
    {

    }
    return;
  }
  swift_bridgeObjectRetain_n();
  v9 = sub_1D166E15C();
  swift_bridgeObjectRelease();
  v91 = v9;
  if (!v9)
    goto LABEL_47;
LABEL_16:
  v89 = v92 & 0xC000000000000001;
  if ((v92 & 0xC000000000000001) != 0)
  {
    v83 = (char *)MEMORY[0x1D17E8FD0](0, v92);
LABEL_20:
    v41 = v83;
    v85 = v38;
    if (v91 != 1)
    {
      v88 = (char *)(v92 & 0xFFFFFFFFFFFFFF8);
      v11 = 5;
      do
      {
        v42 = v11 - 4;
        if (v89)
        {
          v43 = (char *)MEMORY[0x1D17E8FD0](v11 - 4, v92);
          v1 = (char *)(v11 - 3);
          if (__OFADD__(v42, 1))
            goto LABEL_42;
        }
        else
        {
          if (v42 >= *((_QWORD *)v88 + 2))
            goto LABEL_43;
          v43 = (char *)*(id *)(v92 + 8 * v11);
          v1 = (char *)(v11 - 3);
          if (__OFADD__(v42, 1))
          {
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
LABEL_44:
            __break(1u);
            goto LABEL_45;
          }
        }
        v93 = v1;
        v1 = v43;
        v44 = objc_msgSend(v43, sel_time);
        if (!v44)
          goto LABEL_54;
        v45 = v44;
        v46 = v95;
        sub_1D166D604();

        v47 = (void (*)(char *, char *, uint64_t))v3[4];
        v9 = (uint64_t)v94;
        v47(v94, v46, v2);
        v38 = (char *)v3[7];
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v38)(v9, 0, 1, v2);
        v48 = v3;
        v49 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v3[6];
        if (v49(v9, 1, v2) == 1)
          goto LABEL_55;
        v9 = v2;
        v50 = objc_msgSend(v41, sel_time);
        if (!v50)
          goto LABEL_56;
        v51 = v50;
        v52 = v95;
        sub_1D166D604();

        v53 = v90;
        v54 = v52;
        v2 = v9;
        v47(v90, v54, v9);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v38)(v53, 0, 1, v9);
        if (v49((uint64_t)v53, 1, v9) == 1)
          goto LABEL_57;
        v9 = (uint64_t)v94;
        v55 = sub_1D166D5C8();
        v56 = v53;
        v57 = v55;
        v3 = v48;
        v58 = (void (*)(char *, uint64_t))v48[1];
        v58(v56, v2);
        v58((char *)v9, v2);
        if ((v57 & 1) != 0)
          v59 = v41;
        else
          v59 = v1;
        if ((v57 & 1) != 0)
          v41 = v1;

        ++v11;
      }
      while (v93 != (char *)v91);
    }
    swift_bridgeObjectRelease_n();
    v60 = v41;
    v61 = sub_1D166D94C();
    v62 = sub_1D166DD9C();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      v64 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v63 = 138412290;
      v96[0] = v60;
      v65 = v60;
      sub_1D166DF28();
      *v64 = v60;

      _os_log_impl(&dword_1D1413000, v61, v62, "Found message scheduled for the future: %@. Updating timer.", v63, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v64, -1, -1);
      MEMORY[0x1D17EB0AC](v63, -1, -1);
    }
    else
    {

      v61 = v60;
    }
    v38 = v85;

    sub_1D1638264(v60);
    v66 = v60;
    goto LABEL_50;
  }
  if (*(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v83 = (char *)*(id *)(v92 + 32);
    goto LABEL_20;
  }
  __break(1u);
LABEL_54:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v3[7])(v94, 1, 1, v2);
LABEL_55:
  __break(1u);
LABEL_56:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v38)(v90, 1, 1, v9);
LABEL_57:
  __break(1u);
}

uint64_t sub_1D1637770()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;

  if (objc_msgSend(v0, sel_itemType))
  {
    if (qword_1ED935578 != -1)
      swift_once();
    v1 = sub_1D166D964();
    sub_1D141AC1C(v1, (uint64_t)qword_1ED9364E8);
    v2 = v0;
    v3 = sub_1D166D94C();
    v4 = sub_1D166DD90();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 134217984;
      objc_msgSend(v2, sel_itemType);
      sub_1D166DF28();

      _os_log_impl(&dword_1D1413000, v3, v4, "Received invalid message type: %lld when fetching message types.", v5, 0xCu);
      MEMORY[0x1D17EB0AC](v5, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v6 = v0;
  v7 = IMDCreateIMMessageItemFromIMDMessageRecordRef((uint64_t)v6, 0);
  if (!v7)
  {
LABEL_11:
    if (qword_1ED935578 != -1)
      swift_once();
    v11 = sub_1D166D964();
    sub_1D141AC1C(v11, (uint64_t)qword_1ED9364E8);
    v12 = v6;
    v13 = sub_1D166D94C();
    v14 = sub_1D166DD90();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412546;
      v17 = v12;
      sub_1D166DF28();
      *v16 = v12;

      *(_WORD *)(v15 + 12) = 2048;
      objc_msgSend(v17, sel_itemType, v12);

      sub_1D166DF28();
      _os_log_impl(&dword_1D1413000, v13, v14, "Failed to create IMMessageItem from fetched message record. %@, type: %lld", (uint8_t *)v15, 0x16u);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v16, -1, -1);
      MEMORY[0x1D17EB0AC](v15, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v8 = (void *)v7;
  objc_opt_self();
  v9 = swift_dynamicCastObjCClass();
  if (!v9)
  {

    goto LABEL_11;
  }
  v10 = v9;

  return v10;
}

void sub_1D1637AE4(void **a1@<X0>, char *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  void *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  uint8_t *v31;
  id v32;
  void *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  unsigned int v36;
  char *v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  os_log_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  os_log_t v47;
  id v48;
  NSObject *v49;
  id v50;
  NSObject *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  id v57;
  _QWORD *v58;
  NSObject *v59;
  uint64_t v60;
  unint64_t v61;
  os_log_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  os_log_t v67;
  int v68;
  char *v69;
  void (*v70)(char *, char *, uint64_t);
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  char *v72;
  char *v73;
  uint64_t v74;
  os_log_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v76 = a3;
  v73 = a2;
  v77 = sub_1D166D964();
  v74 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D166D628();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v65 - v10;
  v12 = sub_1D141AC58(&qword_1ED9354E8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v65 - v16;
  v18 = *a1;
  v19 = objc_msgSend(v18, sel_time);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v17, 1, 1, v6);
    goto LABEL_20;
  }
  v20 = v19;
  sub_1D166D604();

  v70 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v70(v17, v11, v6);
  v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v71(v17, 0, 1, v6);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v21(v17, 1, v6) == 1)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_1D166D610();
  sub_1D15FC784((unint64_t *)&unk_1EFC631A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v22 = sub_1D166DA84();
  v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  v23(v11, v6);
  v24 = ((uint64_t (*)(char *, uint64_t))v23)(v17, v6);
  if ((v22 & 1) != 0)
  {
    v69 = v15;
    v73 = v5;
    if (qword_1ED935578 != -1)
      swift_once();
    v25 = v77;
    v26 = sub_1D141AC1C(v77, (uint64_t)qword_1ED9364E8);
    v27 = v73;
    v28 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v26, v25);
    v29 = v18;
    v30 = sub_1D166D94C();
    v68 = sub_1D166DD9C();
    if (!os_log_type_enabled(v30, (os_log_type_t)v68))
    {

      (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v25);
      v45 = v76;
      v42 = v29;
      goto LABEL_16;
    }
    v67 = v30;
    v31 = (uint8_t *)swift_slowAlloc();
    v66 = swift_slowAlloc();
    v79 = v66;
    *(_DWORD *)v31 = 136315138;
    v18 = v29;
    v32 = objc_msgSend(v29, sel_time);
    if (v32)
    {
      v33 = v32;
      sub_1D166D604();

      v35 = v69;
      v34 = v70;
      v70(v69, v11, v6);
      v71(v35, 0, 1, v6);
      v36 = v21(v35, 1, v6);
      v37 = v73;
      if (v36 != 1)
      {
        v38 = v72;
        v34(v72, v35, v6);
        sub_1D15FC784((unint64_t *)&unk_1EFC63210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
        v39 = sub_1D166E1BC();
        v41 = v40;
        v23(v38, v6);
        v78 = sub_1D141BCB4(v39, v41, &v79);
        sub_1D166DF28();
        v42 = v18;

        swift_bridgeObjectRelease();
        v43 = v67;
        _os_log_impl(&dword_1D1413000, v67, (os_log_type_t)v68, "Found message scheduled for the future: %s.", v31, 0xCu);
        v44 = v66;
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v44, -1, -1);
        MEMORY[0x1D17EB0AC](v31, -1, -1);

        (*(void (**)(char *, uint64_t))(v74 + 8))(v37, v77);
        v45 = v76;
LABEL_16:
        *v45 = v42;
        v64 = v42;
        return;
      }
      goto LABEL_22;
    }
LABEL_21:

    v71(v69, 1, 1, v6);
    __break(1u);
LABEL_22:

    __break(1u);
    return;
  }
  MEMORY[0x1E0C80A78](v24);
  *(&v65 - 2) = v46;
  *(&v65 - 1) = (uint64_t)v18;
  v47 = v75;
  sub_1D166DE14();
  if (v47)
  {
    if (qword_1ED935578 != -1)
      swift_once();
    sub_1D141AC1C(v77, (uint64_t)qword_1ED9364E8);
    v48 = v18;
    v49 = v47;
    v50 = v48;
    v51 = v47;
    v52 = sub_1D166D94C();
    v53 = sub_1D166DD84();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v75 = v52;
      v56 = (_QWORD *)v55;
      v77 = swift_slowAlloc();
      v78 = (uint64_t)v50;
      v79 = v77;
      *(_DWORD *)v54 = 138412546;
      v57 = v50;
      sub_1D166DF28();
      v58 = v56;
      *v56 = v50;

      *(_WORD *)(v54 + 12) = 2080;
      v78 = (uint64_t)v47;
      v59 = v47;
      sub_1D141AC58(&qword_1ED935C28);
      v60 = sub_1D166DAE4();
      v78 = sub_1D141BCB4(v60, v61, &v79);
      sub_1D166DF28();
      swift_bridgeObjectRelease();

      v62 = v75;
      _os_log_impl(&dword_1D1413000, v75, v53, "Failed to handle message: %@, error: %s", (uint8_t *)v54, 0x16u);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v58, -1, -1);
      v63 = v77;
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v63, -1, -1);
      MEMORY[0x1D17EB0AC](v54, -1, -1);

    }
    else
    {

    }
  }
  *v76 = 0;
}

id sub_1D1638264(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id result;
  double v14;
  double v15;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1D166D628();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D141AC58(&qword_1ED9354E8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_time);
  if (v11)
  {
    v12 = v11;
    sub_1D166D604();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
    if ((_DWORD)result != 1)
    {
      sub_1D166D5D4();
      v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return objc_msgSend(v2, sel_updateTimerForTimeInterval_, v15);
    }
  }
  else
  {
    result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D1638400()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  uint64_t v5;

  sub_1D166E090();
  sub_1D166DB5C();
  v5 = v0;
  sub_1D166E138();
  sub_1D166DB5C();
  v1 = *(id *)(v0 + OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession);
  v2 = objc_msgSend(v1, sel_description);
  sub_1D166DACC();

  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  sub_1D166DB5C();
  v3 = *(id *)(v5 + OBJC_IVAR___IMDScheduledMessageCoordinator_timer);
  sub_1D141AC58(&qword_1ED935688);
  sub_1D166DAE4();
  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  sub_1D166DB5C();
  return 0;
}

void __swiftcall IMDScheduledMessageCoordinator.init()(IMDScheduledMessageCoordinator *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void IMDScheduledMessageCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for IMDScheduledMessageCoordinator(uint64_t a1)
{
  return sub_1D15FD3C0(a1, (unint64_t *)&unk_1ED935678);
}

void sub_1D163866C(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, unint64_t);
  id v21;
  char *v22;
  _QWORD *v23;
  unint64_t v24;
  char *v25;
  NSObject *v26;
  _BOOL4 v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  os_log_t v38;
  void (*v39)(char *, unint64_t);
  void *v40;
  id v41;
  id v42;
  char *v43;
  unint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  unint64_t v60;
  char *v61;
  _QWORD *v62;
  id v64;
  void *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  os_log_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, unint64_t);
  id v74;
  char *v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  unint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;

  v84 = a3;
  v5 = sub_1D141AC58((uint64_t *)&unk_1ED935540);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)sub_1D141AC58((uint64_t *)&unk_1ED935558);
  v10 = (_QWORD *)*(v9 - 1);
  v11 = MEMORY[0x1E0C80A78](v9);
  v78 = (unint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v82 = (char *)&v69 - v13;
  v14 = (_QWORD *)sub_1D166D964();
  v15 = (_QWORD *)*(v14 - 1);
  v16 = MEMORY[0x1E0C80A78](v14);
  v75 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v83 = (char *)&v69 - v18;
  if (qword_1ED935578 != -1)
LABEL_34:
    swift_once();
  v19 = sub_1D141AC1C((uint64_t)v14, (uint64_t)qword_1ED9364E8);
  v20 = (void (*)(char *, uint64_t, unint64_t))v15[2];
  v72 = v19;
  v73 = v20;
  ((void (*)(char *))v20)(v83);
  v21 = a1;
  swift_bridgeObjectRetain_n();
  v22 = (char *)v21;
  v23 = v15;
  v24 = (unint64_t)v14;
  v25 = v22;
  v26 = sub_1D166D94C();
  LODWORD(v74) = sub_1D166DD9C();
  v27 = os_log_type_enabled(v26, (os_log_type_t)v74);
  v77 = (char *)v6;
  v79 = v10;
  v80 = v9;
  v81 = v24;
  if (v27)
  {
    v69 = v26;
    v70 = v23;
    v71 = a2;
    v6 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v85 = v28;
    *(_DWORD *)v6 = 136315650;
    v29 = objc_msgSend(v25, sel_guid);
    a1 = v25;
    if (!v29)
    {
LABEL_38:

      swift_bridgeObjectRelease_n();
      __break(1u);
      goto LABEL_39;
    }
    v30 = v29;
    v31 = sub_1D166DACC();
    v33 = v32;

    v86 = sub_1D141BCB4(v31, v33, (uint64_t *)&v85);
    sub_1D166DF28();

    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v9 = v71;
    v34 = swift_bridgeObjectRetain();
    v35 = MEMORY[0x1D17E8B08](v34, MEMORY[0x1E0DEA968]);
    v37 = v36;
    swift_bridgeObjectRelease();
    v86 = sub_1D141BCB4(v35, v37, (uint64_t *)&v85);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2048;
    v86 = v84;
    sub_1D166DF28();
    v38 = v69;
    _os_log_impl(&dword_1D1413000, v69, (os_log_type_t)v74, "Received request to cancel messages on chat: %s to destinations: %s with the reason: %lu", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v28, -1, -1);
    MEMORY[0x1D17EB0AC](v6, -1, -1);

    v39 = (void (*)(char *, unint64_t))v70[1];
    v39(v83, v81);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v39 = (void (*)(char *, unint64_t))v23[1];
    v39(v83, v24);
    v9 = a2;
  }
  v83 = (char *)v9[2];
  if (v83)
  {
    v40 = *(void **)(v76 + OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore);
    v75 = v25;
    v41 = objc_msgSend(v25, sel_guid);
    v42 = objc_msgSend(v40, sel_scheduledMessagesBatchFetcherForChat_, v41);

    sub_1D15FD3C0(0, (unint64_t *)&unk_1ED9355E0);
    sub_1D15FD3C0(0, (unint64_t *)&unk_1ED935668);
    v43 = v82;
    v74 = v42;
    sub_1D166DDCC();
    v44 = MEMORY[0x1E0DEE9D8];
    v85 = MEMORY[0x1E0DEE9D8];
    v10 = v79;
    v15 = v80;
    ((void (*)(unint64_t, char *, id))v79[2])(v78, v43, v80);
    sub_1D160F064(&qword_1ED935550, (uint64_t *)&unk_1ED935558, MEMORY[0x1E0D372A0]);
    sub_1D166DBBC();
    a2 = (char *)sub_1D160F064(&qword_1ED935538, (uint64_t *)&unk_1ED935540, MEMORY[0x1E0D37268]);
    sub_1D166DF1C();
    v45 = (void *)v86;
    if (v86)
    {
      v46 = v77;
      do
      {
        v47 = sub_1D1637770();

        if (v47)
        {
          MEMORY[0x1D17E8AD8]();
          v6 = *(_QWORD *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v6 >= *(_QWORD *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1D166DC1C();
          sub_1D166DC34();
          sub_1D166DC04();
        }
        sub_1D166DF1C();
        v45 = (void *)v86;
      }
      while (v86);
      v44 = v85;
    }
    else
    {
      v46 = v77;
    }
    (*((void (**)(char *, uint64_t))v46 + 1))(v8, v5);
    ((void (*)(char *, id))v10[1])(v82, v15);
    v78 = v44;
    if (v44 >> 62)
    {
      swift_bridgeObjectRetain();
      v82 = (char *)sub_1D166E15C();
      if (v82)
      {
LABEL_21:
        v8 = 0;
        v80 = *(_QWORD **)(v76 + OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession);
        v81 = v78 & 0xC000000000000001;
        v77 = (char *)(v78 + 32);
        v79 = v9 + 5;
        a1 = (void *)MEMORY[0x1E0DEA968];
        while (1)
        {
          if (v81)
            v62 = (_QWORD *)MEMORY[0x1D17E8FD0](v8, v78);
          else
            v62 = *(id *)&v77[8 * (_QWORD)v8];
          v14 = v62;
          if (__OFADD__(v8++, 1))
          {
            __break(1u);
            goto LABEL_34;
          }
          v64 = objc_msgSend(v62, sel_guid);
          if (!v64)
            break;
          v65 = v64;
          sub_1D166DACC();

          a2 = (char *)sub_1D166DAA8();
          swift_bridgeObjectRelease();
          v6 = (unint64_t)v9;
          swift_bridgeObjectRetain();
          v5 = (uint64_t)v83;
          v15 = a1;
          v86 = sub_1D166DD00();
          v66 = v79;
          do
          {
            v68 = *(v66 - 1);
            v67 = *v66;
            swift_bridgeObjectRetain();
            sub_1D16619B4((uint64_t *)&v85, v68, v67);
            swift_bridgeObjectRelease();
            v66 += 2;
            --v5;
          }
          while (v5);
          v9 = (_QWORD *)v6;
          swift_bridgeObjectRelease();
          a1 = v15;
          v10 = (_QWORD *)sub_1D166DCDC();
          swift_bridgeObjectRelease();
          objc_msgSend(v80, sel_cancelScheduledMessageWithGUID_destinations_cancelType_, a2, v10, v84);

          if (v8 == v82)
            goto LABEL_30;
        }
        __break(1u);
        goto LABEL_38;
      }
    }
    else
    {
      v61 = *(char **)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v82 = v61;
      if (v61)
        goto LABEL_21;
    }
LABEL_30:
    swift_bridgeObjectRelease_n();
    sub_1D1638FA4(v75);

    return;
  }
  v48 = v75;
  v49 = v81;
  v73(v75, v72, v81);
  a2 = v25;
  v50 = sub_1D166D94C();
  v51 = sub_1D166DD84();
  if (!os_log_type_enabled(v50, v51))
  {

    v59 = v48;
    v60 = v49;
    goto LABEL_32;
  }
  v52 = (uint8_t *)swift_slowAlloc();
  v53 = swift_slowAlloc();
  v85 = v53;
  *(_DWORD *)v52 = 136315138;
  v54 = objc_msgSend(a2, sel_guid);
  if (v54)
  {
    v55 = v54;
    v56 = sub_1D166DACC();
    v58 = v57;

    v86 = sub_1D141BCB4(v56, v58, (uint64_t *)&v85);
    sub_1D166DF28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v50, v51, "Not attempting to cancel scheduled messages for chat %s. Found no destinations to cancel to", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v53, -1, -1);
    MEMORY[0x1D17EB0AC](v52, -1, -1);

    v59 = v75;
    v60 = v81;
LABEL_32:
    v39(v59, v60);
    return;
  }
LABEL_39:

  __break(1u);
}

void sub_1D1638FA4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  id v29;
  unint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  void *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  id v62;
  void *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char v68;
  unint64_t v69;
  void (*v70)(char *, uint64_t);
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  char *v77;
  id v78;
  uint64_t v79;
  id v80;
  char *v81;
  char *v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  unint64_t v87;
  void *v88;
  unint64_t v89;

  v3 = sub_1D141AC58(&qword_1ED9354E8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v76 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v79 = (uint64_t)&v76 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v81 = (char *)&v76 - v9;
  MEMORY[0x1E0C80A78](v8);
  v86 = (char *)&v76 - v10;
  v11 = sub_1D166D628();
  v87 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v77 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v83 = (char *)&v76 - v15;
  MEMORY[0x1E0C80A78](v14);
  v82 = (char *)&v76 - v16;
  v17 = sub_1D141AC58((uint64_t *)&unk_1ED935540);
  v84 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1D141AC58((uint64_t *)&unk_1ED935558);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v76 - v25;
  v27 = *(void **)(v1 + OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore);
  v80 = a1;
  v28 = objc_msgSend(a1, sel_guid);
  v29 = objc_msgSend(v27, sel_scheduledMessagesBatchFetcherForChat_, v28);

  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED9355E0);
  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED935668);
  v78 = v29;
  sub_1D166DDCC();
  v30 = MEMORY[0x1E0DEE9D8];
  v89 = MEMORY[0x1E0DEE9D8];
  v31 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v85 = (unint64_t)v26;
  v31(v24, v26, v20);
  sub_1D160F064(&qword_1ED935550, (uint64_t *)&unk_1ED935558, MEMORY[0x1E0D372A0]);
  sub_1D166DBBC();
  sub_1D160F064(&qword_1ED935538, (uint64_t *)&unk_1ED935540, MEMORY[0x1E0D37268]);
  sub_1D166DF1C();
  v32 = v88;
  if (v88)
  {
    v33 = v84;
    do
    {
      v34 = sub_1D1637770();

      if (v34)
      {
        MEMORY[0x1D17E8AD8]();
        if (*(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D166DC1C();
        sub_1D166DC34();
        sub_1D166DC04();
      }
      sub_1D166DF1C();
      v32 = v88;
    }
    while (v88);
    v35 = v89;
    v30 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v35 = v30;
    v33 = v84;
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v17);
  (*(void (**)(unint64_t, uint64_t))(v21 + 8))(v85, v20);
  v89 = v30;
  v36 = v87;
  if (v35 >> 62)
    goto LABEL_25;
  v37 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v37)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    v42 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_62;
LABEL_27:
    if ((v42 & 0x4000000000000000) != 0)
      goto LABEL_62;
    v43 = *(_QWORD *)(v42 + 16);
    swift_retain();
    if (v43)
      goto LABEL_29;
LABEL_63:
    swift_release_n();
    v46 = v80;
    objc_msgSend(v80, sel_updateHasCancellableScheduledMessage_, 0);
    goto LABEL_64;
  }
LABEL_12:
  v36 = v35 & 0xC000000000000001;
  v38 = 4;
  v85 = v35 & 0xC000000000000001;
  do
  {
    if (v36)
      v39 = (id)MEMORY[0x1D17E8FD0](v38 - 4, v35);
    else
      v39 = *(id *)(v35 + 8 * v38);
    v40 = v39;
    v41 = v38 - 3;
    if (__OFADD__(v38 - 4, 1))
    {
      __break(1u);
LABEL_25:
      swift_bridgeObjectRetain();
      v37 = sub_1D166E15C();
      swift_bridgeObjectRelease();
      if (!v37)
        goto LABEL_26;
      goto LABEL_12;
    }
    if (objc_msgSend(v39, sel_scheduleType) == (id)2)
    {
      switch((unint64_t)objc_msgSend(v40, sel_scheduleState))
      {
        case 0uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
          break;
        case 1uLL:
        case 2uLL:
          sub_1D166E0E4();
          sub_1D166E108();
          v36 = v85;
          sub_1D166E114();
          sub_1D166E0F0();
          goto LABEL_14;
        default:
          goto LABEL_71;
      }
    }

LABEL_14:
    ++v38;
  }
  while (v41 != v37);
  swift_bridgeObjectRelease();
  v42 = v89;
  v36 = v87;
  if ((v89 & 0x8000000000000000) == 0)
    goto LABEL_27;
LABEL_62:
  swift_retain();
  v43 = sub_1D166E15C();
  if (!v43)
    goto LABEL_63;
LABEL_29:
  v85 = v42 & 0xC000000000000001;
  if ((v42 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(v42 + 16))
    {
      v44 = *(id *)(v42 + 32);
      goto LABEL_32;
    }
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v44 = (id)MEMORY[0x1D17E8FD0](0, v42);
LABEL_32:
  v45 = v44;
  v84 = v43 - 1;
  if (v43 != 1)
  {
    if (v43 < 2)
      goto LABEL_69;
    if (!v85)
    {
      v51 = *(_QWORD *)(v42 + 16);
      if (v51 < 2 || v84 >= v51)
      {
LABEL_70:
        __break(1u);
LABEL_71:
        sub_1D166E150();
        __break(1u);
        JUMPOUT(0x1D163991CLL);
      }
    }
    v52 = 0;
    while (1)
    {
      v54 = v85 ? (id)MEMORY[0x1D17E8FD0](v52 + 1, v42) : *(id *)(v42 + 8 * v52 + 40);
      v55 = v54;
      v56 = objc_msgSend(v45, sel_scheduledMessageLastModifiedTime);
      if (!v56)
        break;
      v57 = v56;
      v58 = v83;
      sub_1D166D604();

      v59 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v53 = (uint64_t)v86;
      v59(v86, v58, v11);
      v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
      v60(v53, 0, 1, v11);
      v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
      if (v61(v53, 1, v11) == 1)
        goto LABEL_42;
      v59(v82, (char *)v53, v11);
      v62 = objc_msgSend(v55, sel_scheduledMessageLastModifiedTime);
      if (v62)
      {
        v63 = v62;
        v64 = v83;
        sub_1D166D604();

        v65 = (uint64_t)v81;
        v59(v81, v64, v11);
        v60(v65, 0, 1, v11);
        if (v61(v65, 1, v11) != 1)
        {
          v66 = v77;
          v59(v77, (char *)v65, v11);
          v67 = v82;
          v68 = sub_1D166D5C8();
          v69 = v87;
          v70 = *(void (**)(char *, uint64_t))(v87 + 8);
          v70(v66, v11);
          v70(v67, v11);
          v36 = v69;
          if ((v68 & 1) != 0)
            v71 = v45;
          else
            v71 = v55;
          if ((v68 & 1) != 0)
            v45 = v55;
          v55 = v71;
          goto LABEL_43;
        }
      }
      else
      {
        v65 = (uint64_t)v81;
        v60((uint64_t)v81, 1, 1, v11);
      }
      v36 = v87;
      (*(void (**)(char *, uint64_t))(v87 + 8))(v82, v11);
      sub_1D141BA80(v65, &qword_1ED9354E8);
LABEL_43:

      if (v84 == ++v52)
        goto LABEL_33;
    }
    v53 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v86, 1, 1, v11);
LABEL_42:
    sub_1D141BA80(v53, &qword_1ED9354E8);
    v36 = v87;
    goto LABEL_43;
  }
LABEL_33:
  swift_release_n();
  v46 = v80;
  objc_msgSend(v80, sel_updateHasCancellableScheduledMessage_, 1);
  if (!v45)
  {
LABEL_64:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v79, 1, 1, v11);
    v45 = 0;
LABEL_65:
    v75 = 0;
    goto LABEL_66;
  }
  v47 = objc_msgSend(v45, sel_scheduledMessageLastModifiedTime);
  if (v47)
  {
    v48 = v47;
    v49 = (uint64_t)v76;
    sub_1D166D604();

    v50 = 0;
  }
  else
  {
    v50 = 1;
    v49 = (uint64_t)v76;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v49, v50, 1, v11);
  v72 = v79;
  sub_1D1617718(v49, v79, &qword_1ED9354E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v72, 1, v11) == 1)
    goto LABEL_65;
  v73 = sub_1D166D5BC();
  v46 = v80;
  v74 = v72;
  v75 = (void *)v73;
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v74, v11);
LABEL_66:
  objc_msgSend(v46, sel_setLastScheduledMessageCreatedDate_, v75);

}

uint64_t sub_1D1639934(void *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char **v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char **v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char **v17;
  char *v18;
  NSObject *v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  void *v29;
  id v30;
  id v31;
  char *v32;
  char *v33;
  void *v34;
  char **v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  void *v47;
  void *v48;
  uint8_t *v50;
  char **v51;
  uint64_t v52;
  char *v53;
  char **v54;
  id v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  unsigned int v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v60 = a2;
  v3 = sub_1D141AC58((uint64_t *)&unk_1ED935540);
  v58 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1D141AC58((uint64_t *)&unk_1ED935558);
  v6 = *(char ***)(v56 - 8);
  v7 = MEMORY[0x1E0C80A78](v56);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v61 = (char *)&v50 - v10;
  v11 = (char **)sub_1D166D964();
  v12 = (uint64_t)*(v11 - 1);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = objc_msgSend(a1, sel_style);
  if (qword_1ED935578 != -1)
LABEL_30:
    swift_once();
  v15 = sub_1D141AC1C((uint64_t)v11, (uint64_t)qword_1ED9364E8);
  (*(void (**)(char *, uint64_t, char **))(v12 + 16))(v14, v15, v11);
  v16 = a1;
  v17 = v11;
  v18 = v16;
  v19 = sub_1D166D94C();
  LODWORD(v55) = sub_1D166DD9C();
  if (os_log_type_enabled(v19, (os_log_type_t)v55))
  {
    v51 = v17;
    v52 = v12;
    v53 = v9;
    v54 = v6;
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v63 = v21;
    *(_DWORD *)v20 = 136315138;
    v12 = (uint64_t)v18;
    v22 = objc_msgSend(v18, sel_guid);
    if (!v22)
    {
LABEL_47:

      __break(1u);
LABEL_48:
      sub_1D166E150();
      __break(1u);
      JUMPOUT(0x1D163A120);
    }
    v23 = v22;
    v50 = v20 + 4;
    v24 = sub_1D166DACC();
    v26 = v25;

    v62 = sub_1D141BCB4(v24, v26, &v63);
    sub_1D166DF28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v19, (os_log_type_t)v55, "Updating Participants for scheduled messages in chat %s if necessary", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v21, -1, -1);
    MEMORY[0x1D17EB0AC](v20, -1, -1);

    (*(void (**)(char *, char **))(v52 + 8))(v14, v51);
    v27 = v57;
    v9 = v53;
    v6 = v54;
    v28 = (char *)v12;
  }
  else
  {

    (*(void (**)(char *, char **))(v12 + 8))(v14, v17);
    v27 = v57;
    v28 = v18;
  }
  v29 = *(void **)&v27[OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore];
  v30 = objc_msgSend(v28, sel_guid);
  v31 = objc_msgSend(v29, sel_scheduledMessagesBatchFetcherForChat_, v30);

  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED9355E0);
  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED935668);
  v32 = v61;
  v55 = v31;
  sub_1D166DDCC();
  v12 = MEMORY[0x1E0DEE9D8];
  v63 = MEMORY[0x1E0DEE9D8];
  v33 = v32;
  a1 = (void *)v56;
  ((void (*)(char *, char *, uint64_t))v6[2])(v9, v33, v56);
  sub_1D160F064(&qword_1ED935550, (uint64_t *)&unk_1ED935558, MEMORY[0x1E0D372A0]);
  sub_1D166DBBC();
  sub_1D160F064(&qword_1ED935538, (uint64_t *)&unk_1ED935540, MEMORY[0x1E0D37268]);
  sub_1D166DF1C();
  v34 = (void *)v62;
  if (v62)
  {
    v35 = v6;
    do
    {
      v36 = sub_1D1637770();

      if (v36)
      {
        MEMORY[0x1D17E8AD8]();
        if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D166DC1C();
        sub_1D166DC34();
        sub_1D166DC04();
      }
      sub_1D166DF1C();
      v34 = (void *)v62;
    }
    while (v62);
    v37 = v63;
    v6 = v35;
    v12 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v37 = v12;
  }
  (*(void (**)(char *, uint64_t))(v58 + 8))(v5, v3);
  ((void (*)(char *, void *))v6[1])(v61, a1);
  v63 = v12;
  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    v61 = v28;
    if (v3)
    {
LABEL_17:
      v12 = v37 & 0xC000000000000001;
      v38 = 4;
      v11 = &selRef_presentApprovalSheetWithRequestIdentifier_completion_;
      v6 = &selRef_presentApprovalSheetWithRequestIdentifier_completion_;
      v58 = v37 & 0xC000000000000001;
      do
      {
        v14 = (char *)(v38 - 4);
        if (v12)
          v39 = (char *)MEMORY[0x1D17E8FD0](v38 - 4, v37);
        else
          v39 = (char *)*(id *)(v37 + 8 * v38);
        v5 = v39;
        v9 = (char *)(v38 - 3);
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (objc_msgSend(v39, sel_scheduleType) == (id)2)
        {
          switch((unint64_t)objc_msgSend(v5, sel_scheduleState))
          {
            case 0uLL:
            case 3uLL:
            case 4uLL:
            case 5uLL:
              break;
            case 1uLL:
            case 2uLL:
              sub_1D166E0E4();
              sub_1D166E108();
              v12 = v58;
              sub_1D166E114();
              sub_1D166E0F0();
              goto LABEL_19;
            default:
              goto LABEL_48;
          }
        }

LABEL_19:
        ++v38;
      }
      while (v9 != (char *)v3);
      swift_bridgeObjectRelease();
      v40 = v63;
      v27 = v57;
      if ((v63 & 0x8000000000000000) == 0)
        goto LABEL_33;
      goto LABEL_44;
    }
  }
  else
  {
    v3 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    v61 = v28;
    if (v3)
      goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  v40 = MEMORY[0x1E0DEE9D8];
  if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) == 0)
  {
LABEL_33:
    if ((v40 & 0x4000000000000000) == 0)
    {
      v12 = *(_QWORD *)(v40 + 16);
      swift_retain();
      v58 = v12;
      if (v12)
        goto LABEL_35;
      goto LABEL_42;
    }
  }
LABEL_44:
  while (1)
  {
    swift_retain();
    v58 = sub_1D166E15C();
    if (!v58)
      break;
LABEL_35:
    v41 = *(void **)&v27[OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession];
    v42 = 4;
    while (1)
    {
      v43 = (v40 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1D17E8FD0](v42 - 4, v40)
          : *(id *)(v40 + 8 * v42);
      v44 = v43;
      v45 = v42 - 3;
      if (__OFADD__(v42 - 4, 1))
        break;
      v46 = objc_msgSend(v61, sel_chatIdentifier);
      if (!v46)
      {
        __break(1u);
        goto LABEL_47;
      }
      v47 = v46;
      sub_1D166DACC();

      v27 = (char *)sub_1D166DAA8();
      swift_bridgeObjectRelease();
      v12 = sub_1D1610BE0(v60);
      v48 = (void *)sub_1D166DBD4();
      swift_bridgeObjectRelease();
      objc_msgSend(v41, sel_sendMessage_toChat_style_destinationHandles_, v44, v27, v59, v48);

      ++v42;
      if (v45 == v58)
        goto LABEL_42;
    }
    __break(1u);
  }
LABEL_42:

  return swift_release_n();
}

void sub_1D163A138(void *a1, void *a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  os_log_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  NSObject *v32;
  os_log_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  NSObject *v42;

  v40 = a2;
  v4 = sub_1D166D964();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED935578 != -1)
    swift_once();
  v8 = sub_1D141AC1C(v4, (uint64_t)qword_1ED9364E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = v2;
  v10 = a1;
  v11 = v9;
  v12 = v10;
  v13 = sub_1D166D94C();
  v14 = sub_1D166DD9C();
  if (os_log_type_enabled(v13, v14))
  {
    v33 = v13;
    v36 = v4;
    v37 = v5;
    v38 = v8;
    v15 = swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v41 = (uint64_t)v11;
    v42 = v35;
    *(_DWORD *)v15 = 138412546;
    v17 = v11;
    sub_1D166DF28();
    v39 = v11;
    v34 = v16;
    *v16 = v11;

    *(_WORD *)(v15 + 12) = 2080;
    v18 = objc_msgSend(v12, sel_guid);
    if (!v18)
    {

      __break(1u);
      goto LABEL_16;
    }
    v19 = v18;
    v20 = sub_1D166DACC();
    v22 = v21;

    v41 = sub_1D141BCB4(v20, v22, (uint64_t *)&v42);
    sub_1D166DF28();

    swift_bridgeObjectRelease();
    v23 = v33;
    _os_log_impl(&dword_1D1413000, v33, v14, "%@ handling message replacement of message: %s", (uint8_t *)v15, 0x16u);
    sub_1D141AC58(&qword_1ED935810);
    v24 = v34;
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v24, -1, -1);
    v25 = v35;
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v25, -1, -1);
    MEMORY[0x1D17EB0AC](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (objc_msgSend(v40, sel_scheduleType) == (id)2)
  {
    v26 = (unint64_t)objc_msgSend(v40, sel_scheduleState);
    if (v26 <= 5)
    {
      if (((1 << v26) & 0x39) == 0)
        return;
      goto LABEL_10;
    }
LABEL_16:
    sub_1D166E150();
    __break(1u);
    return;
  }
LABEL_10:
  v27 = v12;
  v28 = sub_1D166D94C();
  v29 = sub_1D166DD9C();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v30 = 138412290;
    v42 = v27;
    v32 = v27;
    sub_1D166DF28();
    *v31 = v27;

    _os_log_impl(&dword_1D1413000, v28, v29, "%@ No longer a cancellable scheduled message, invalidating chat's scheduled states.", v30, 0xCu);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v31, -1, -1);
    MEMORY[0x1D17EB0AC](v30, -1, -1);
  }
  else
  {

    v28 = v27;
  }

  sub_1D1636A48(v40);
}

uint64_t sub_1D163A654(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1D141AC58((uint64_t *)&unk_1EFC63200);
    v2 = sub_1D166E084();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E8];
  }
  v3 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(63 - v4) >> 6;
  v8 = v2 + 56;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_28;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v7)
      goto LABEL_37;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    v15 = v10 + 1;
    if (!v14)
    {
      v15 = v10 + 2;
      if (v10 + 2 >= v7)
        goto LABEL_37;
      v14 = *(_QWORD *)(v3 + 8 * v15);
      if (!v14)
      {
        v15 = v10 + 3;
        if (v10 + 3 >= v7)
          goto LABEL_37;
        v14 = *(_QWORD *)(v3 + 8 * v15);
        if (!v14)
        {
          v15 = v10 + 4;
          if (v10 + 4 >= v7)
            goto LABEL_37;
          v14 = *(_QWORD *)(v3 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v10 = v15;
LABEL_28:
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    result = sub_1D166E030();
    v17 = -1 << *(_BYTE *)(v2 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v8 + 8 * (v18 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v8 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v8 + 8 * v19);
      }
      while (v23 == -1);
      v11 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v2 + 48) + 40 * v11;
    *(_OWORD *)v12 = v24;
    *(_OWORD *)(v12 + 16) = v25;
    *(_QWORD *)(v12 + 32) = v26;
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v10 + 5;
  if (v10 + 5 >= v7)
  {
LABEL_37:
    swift_release();
    sub_1D15FF5FC();
    return v2;
  }
  v14 = *(_QWORD *)(v3 + 8 * v16);
  if (v14)
  {
    v15 = v10 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v7)
      goto LABEL_37;
    v14 = *(_QWORD *)(v3 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void *sub_1D163AB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v27;

  sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC616E0);
  sub_1D141AC58((uint64_t *)&unk_1EFC631B0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D16832F0;
  v1 = sub_1D166DACC();
  v3 = v2;
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v5 = sub_1D15FD2D0();
  *(_QWORD *)(v0 + 64) = v5;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v3;
  v6 = sub_1D166D5BC();
  v7 = sub_1D15FD3C0(0, &qword_1EFC631C0);
  *(_QWORD *)(v0 + 96) = v7;
  v8 = sub_1D15FD314();
  *(_QWORD *)(v0 + 104) = v8;
  *(_QWORD *)(v0 + 72) = v6;
  v9 = (void *)sub_1D166DD54();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D16832F0;
  v11 = sub_1D166DACC();
  *(_QWORD *)(v10 + 56) = v4;
  *(_QWORD *)(v10 + 64) = v5;
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v12;
  sub_1D141AC58(&qword_1ED9355A0);
  v13 = sub_1D166D5BC();
  *(_QWORD *)(v10 + 96) = v7;
  *(_QWORD *)(v10 + 104) = v8;
  *(_QWORD *)(v10 + 72) = v13;
  v14 = (void *)sub_1D166DD54();
  v15 = objc_msgSend(v27, sel_predicate);
  sub_1D141AC58(&qword_1ED935880);
  v16 = swift_allocObject();
  if (v15)
  {
    *(_OWORD *)(v16 + 16) = xmmword_1D1683300;
    *(_QWORD *)(v16 + 32) = v15;
    *(_QWORD *)(v16 + 40) = v9;
    *(_QWORD *)(v16 + 48) = v14;
    sub_1D166DC04();
    v17 = v15;
    v18 = v9;
    v19 = v14;
    v20 = (void *)sub_1D166DBD4();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v20);

    objc_msgSend(v27, sel_setPredicate_, v21);
    v22 = v27;

  }
  else
  {
    *(_OWORD *)(v16 + 16) = xmmword_1D1684400;
    *(_QWORD *)(v16 + 32) = v9;
    *(_QWORD *)(v16 + 40) = v14;
    sub_1D166DC04();
    v19 = v9;
    v17 = v14;
    v23 = (void *)sub_1D166DBD4();
    swift_bridgeObjectRelease();
    v24 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v23);

    objc_msgSend(v27, sel_setPredicate_, v24);
    v25 = v27;
  }

  return v27;
}

id sub_1D163B0BC(double a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5, uint64_t a6, _QWORD *a7)
{
  void *v7;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v27;
  uint64_t v28;

  v28 = a6;
  if (a3)
  {
    v12 = (void *)sub_1D166DAA8();
    swift_bridgeObjectRelease();
    v13 = a5[3];
    if (v13)
      goto LABEL_3;
LABEL_6:
    v18 = 0;
    v19 = a7[3];
    if (v19)
      goto LABEL_4;
LABEL_7:
    v24 = 0;
    goto LABEL_8;
  }
  v12 = 0;
  v13 = a5[3];
  if (!v13)
    goto LABEL_6;
LABEL_3:
  v14 = sub_1D141AC34(a5, v13);
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v17);
  v18 = sub_1D166E1D4();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
  sub_1D141AC98((uint64_t)a5);
  v19 = a7[3];
  if (!v19)
    goto LABEL_7;
LABEL_4:
  v20 = sub_1D141AC34(a7, v19);
  v21 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v23);
  v24 = sub_1D166E1D4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
  sub_1D141AC98((uint64_t)a7);
LABEL_8:
  v25 = objc_msgSend(v7, sel_initWithTimeInterval_name_shouldWake_target_selector_userInfo_, v12, a4 & 1, v18, v28, v24, a1);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v25;
}

uint64_t sub_1D163B29C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8;
  _QWORD v10[3];
  uint64_t v11;
  _UNKNOWN **v12;

  v11 = type metadata accessor for ScheduledMessageBlocklistController();
  v12 = &off_1E9233250;
  v10[0] = a3;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a4 + 72) = MEMORY[0x1E0DEE9E8];
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(a4 + 24) = a2;
  sub_1D1630FC8((uint64_t)v10, a4 + 32);
  sub_1D141AC34(v10, v11);
  v8 = a2;
  sub_1D1660E48();
  swift_allocObject();
  swift_weakInit();
  sub_1D141AC58(&qword_1ED935B88);
  sub_1D160F064(&qword_1ED935B80, &qword_1ED935B88, MEMORY[0x1E0C95FB8]);
  sub_1D166D9AC();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1D166D970();
  swift_endAccess();
  swift_release();

  sub_1D141AC98((uint64_t)v10);
  return a4;
}

uint64_t sub_1D163B410(unint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1D166E15C())
  {
    for (i = 4; ; ++i)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D17E8FD0](i - 4, a1) : *(id *)(a1 + 8 * i);
      v7 = v6;
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v12 = v6;
      sub_1D1637AE4(&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v11)
      {
        MEMORY[0x1D17E8AD8]();
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D166DC1C();
        sub_1D166DC34();
        sub_1D166DC04();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

id sub_1D163B5A8(void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _BYTE *v25;
  _BYTE *v26;
  id v28;

  objc_msgSend(a1, sel_setScheduleState_, 5);
  objc_msgSend(a1, sel_setCloudKitSyncState_, 0);
  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_1D166DAA8();
  objc_msgSend(v4, sel_notifyPeersWithScheduledMessageUpdate_scheduleState_, v5, 5);

  v6 = *(void **)(a2 + OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore);
  v28 = objc_msgSend(v6, sel_storeMessage_forceReplace_modifyError_modifyFlags_flagMask_, a1, 1, 1, 1, objc_msgSend(a1, sel_flags));
  v7 = objc_msgSend(v6, sel_chatForMessage_);
  if (!v7)
  {
    if (qword_1ED935578 != -1)
      swift_once();
    v15 = sub_1D166D964();
    sub_1D141AC1C(v15, (uint64_t)qword_1ED9364E8);
    v8 = v28;
    v16 = sub_1D166D94C();
    v17 = sub_1D166DD84();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v18 = 138412290;
      v20 = v8;
      sub_1D166DF28();
      *v19 = v8;

      _os_log_impl(&dword_1D1413000, v16, v17, "Failed to find chat for message: %@", v18, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v19, -1, -1);
      MEMORY[0x1D17EB0AC](v18, -1, -1);

    }
    else
    {

    }
    sub_1D163F8F8();
    swift_allocError();
    *v26 = 2;
    swift_willThrow();
    goto LABEL_17;
  }
  v8 = v7;
  v9 = objc_msgSend(v28, sel_accountID);
  if (!v9)
  {
    if (qword_1ED935578 != -1)
      swift_once();
    v21 = sub_1D166D964();
    sub_1D141AC1C(v21, (uint64_t)qword_1ED9364E8);
    v22 = sub_1D166D94C();
    v23 = sub_1D166DD84();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1D1413000, v22, v23, "Failed to find accountID from message.", v24, 2u);
      MEMORY[0x1D17EB0AC](v24, -1, -1);
    }

    sub_1D163F8F8();
    swift_allocError();
    *v25 = 0;
    swift_willThrow();

LABEL_17:
    return v28;
  }
  v10 = v9;
  v11 = objc_msgSend(*(id *)(a2 + OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession), sel_broadcasterForChatListeners);
  v12 = objc_msgSend(v8, sel_chatIdentifier);
  v13 = objc_msgSend(v8, sel_style);
  v14 = objc_msgSend(v8, sel_chatProperties);
  if (v14)
  {
    sub_1D166DA30();

    v14 = (id)sub_1D166DA18();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v11, sel_account_chat_style_chatProperties_messageUpdated_, v10, v12, v13, v14, v28);

  swift_unknownObjectRelease();
  return v28;
}

void sub_1D163BA84(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  uint64_t inited;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  uint64_t v59;
  _QWORD *v60;
  id v61;
  id v62;
  id v63;
  id v64[3];

  v5 = v4;
  v10 = *(void **)(v4 + OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore);
  v11 = (void *)sub_1D166DAA8();
  v62 = objc_msgSend(v10, sel_messageWithGUID_, v11);

  v12 = (void *)sub_1D166DAA8();
  v63 = objc_msgSend(v10, sel_chatForMessageGUID_, v12);

  v13 = v62;
  if (!v62)
  {
    v13 = v63;
    goto LABEL_10;
  }
  if (!v63)
  {
LABEL_10:

    return;
  }
  if ((a3 & 1) == 0)
  {
    if (a4 == 1)
    {
      v23 = v62;
      v24 = v63;
      v25 = v23;

      goto LABEL_29;
    }
LABEL_19:
    v40 = v63;
    v41 = v62;
    goto LABEL_29;
  }
  if ((unint64_t)(a4 - 3) < 2)
  {
    v14 = qword_1ED935578;
    v15 = v63;
    v16 = v62;
    if (v14 != -1)
      swift_once();
    v17 = sub_1D166D964();
    sub_1D141AC1C(v17, (uint64_t)qword_1ED9364E8);
    v18 = v16;
    v19 = sub_1D166D94C();
    v20 = sub_1D166DD9C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v60 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v21 = 138412290;
      v64[0] = v18;
      v22 = v18;
      sub_1D166DF28();
      *v60 = v62;

      _os_log_impl(&dword_1D1413000, v19, v20, "Cancelled scheduled message: %@", v21, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v60, -1, -1);
      MEMORY[0x1D17EB0AC](v21, -1, -1);

    }
    else
    {

    }
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (a4 != 1)
    goto LABEL_19;
  sub_1D141AC58(&qword_1ED935838);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1D1683B20;
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v26 + 32) = a1;
  *(_QWORD *)(v26 + 40) = a2;
  swift_bridgeObjectRetain();
  v61 = v63;
  v27 = v62;
  v28 = (void *)sub_1D166DBD4();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v10, sel_deleteMessageGUIDs_, v28);

  v30 = sub_1D166DBEC();
  v31 = sub_1D1635A94(v30);
  swift_bridgeObjectRelease();
  if (!v31)
  {
    sub_1D1638FA4(v61);

    return;
  }
  if (qword_1ED935578 != -1)
    swift_once();
  v32 = sub_1D166D964();
  sub_1D141AC1C(v32, (uint64_t)qword_1ED9364E8);
  swift_bridgeObjectRetain_n();
  v33 = sub_1D166D94C();
  v34 = sub_1D166DD9C();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v59 = swift_slowAlloc();
    v64[0] = (id)v59;
    *(_DWORD *)v35 = 136315138;
    v36 = swift_bridgeObjectRetain();
    v37 = MEMORY[0x1D17E8B08](v36, MEMORY[0x1E0DEA968]);
    v39 = v38;
    swift_bridgeObjectRelease();
    sub_1D141BCB4(v37, v39, (uint64_t *)v64);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v33, v34, "Cancelled & deleted Scheduled message: %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v59, -1, -1);
    MEMORY[0x1D17EB0AC](v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v42 = objc_msgSend((id)objc_opt_self(), sel_sharedProvider);
  if (v42)
  {
    v43 = objc_msgSend(v42, sel_broadcasterForChatListeners);
    swift_unknownObjectRelease();
    v44 = (void *)sub_1D166DBD4();
    swift_bridgeObjectRelease();
    objc_msgSend(v43, sel_historicalMessageGUIDsDeleted_chatGUIDs_queryID_, v44, 0, 0);

    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1D141AC58((uint64_t *)&unk_1EFC631D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D1683B10;
  *(_QWORD *)(inited + 32) = sub_1D166DACC();
  *(_QWORD *)(inited + 40) = v46;
  sub_1D141AC58(&qword_1ED935820);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1D1683B20;
  *(_QWORD *)(v47 + 32) = a1;
  *(_QWORD *)(v47 + 40) = a2;
  *(_QWORD *)(inited + 72) = sub_1D141AC58(&qword_1ED9355C0);
  *(_QWORD *)(inited + 48) = v47;
  *(_QWORD *)(inited + 80) = sub_1D166DACC();
  *(_QWORD *)(inited + 88) = v48;
  v49 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 96) = 1;
  *(_QWORD *)(inited + 128) = sub_1D166DACC();
  *(_QWORD *)(inited + 136) = v50;
  *(_QWORD *)(inited + 168) = v49;
  *(_BYTE *)(inited + 144) = 1;
  swift_bridgeObjectRetain();
  v51 = sub_1D160F4A0(inited);
  v52 = *(void **)(v5 + OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession);
  sub_1D16504F8(v51);
  swift_bridgeObjectRelease();
  v53 = (void *)sub_1D166DA18();
  swift_bridgeObjectRelease();
  v54 = objc_msgSend(v61, sel_guid);
  objc_msgSend(v52, sel_sendDeleteCommand_forChatGUID_, v53, v54);

  v55 = objc_msgSend(v27, sel_cloudKitRecordID);
  if (v55)
  {
    v56 = v55;
    v57 = objc_msgSend((id)objc_opt_self(), sel_synchronousDatabase);
    v58 = (void *)sub_1D166DAA8();
    objc_msgSend(v57, sel_addScheduledMessageGUIDandCKRecordToDeleteFromCloudKit_recordID_, v58, v56);
    swift_unknownObjectRelease();

  }
LABEL_29:
  sub_1D1638FA4(v63);

}

id sub_1D163C580(void *a1, uint64_t a2, id a3, void *a4)
{
  uint64_t v4;
  id v7;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _BYTE *v27;
  _BYTE *v28;
  _QWORD *v29;

  v7 = a1;
  sub_1D163667C(a1, a3, a4);
  if (v4)
  {

  }
  else
  {
    v9 = *(void **)(a2 + OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore);
    v7 = objc_msgSend(v9, sel_storeMessage_forceReplace_modifyError_modifyFlags_flagMask_, v7, 1, 1, 1, objc_msgSend(v7, sel_flags));
    v10 = objc_msgSend(v9, sel_chatForMessage_, v7);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v7, sel_accountID);
      if (v12)
      {
        v13 = v12;
        v14 = objc_msgSend(*(id *)(a2 + OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession), sel_broadcasterForChatListeners);
        v15 = objc_msgSend(v11, sel_chatIdentifier);
        v16 = (unint64_t)objc_msgSend(v11, sel_style);
        v17 = objc_msgSend(v11, sel_chatProperties);
        if (v17)
        {
          sub_1D166DA30();

          v16 = v16;
          v17 = (id)sub_1D166DA18();
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v14, sel_account_chat_style_chatProperties_messageUpdated_, v13, v15, v16, v17, v7);

        swift_unknownObjectRelease();
      }
      else
      {
        if (qword_1ED935578 != -1)
          swift_once();
        v23 = sub_1D166D964();
        sub_1D141AC1C(v23, (uint64_t)qword_1ED9364E8);
        v24 = sub_1D166D94C();
        v25 = sub_1D166DD84();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v26 = 0;
          _os_log_impl(&dword_1D1413000, v24, v25, "Failed to find accountID from message.", v26, 2u);
          MEMORY[0x1D17EB0AC](v26, -1, -1);
        }

        sub_1D163F8F8();
        swift_allocError();
        *v27 = 0;
        swift_willThrow();

      }
    }
    else
    {
      if (qword_1ED935578 != -1)
        swift_once();
      v18 = sub_1D166D964();
      sub_1D141AC1C(v18, (uint64_t)qword_1ED9364E8);
      v7 = v7;
      v19 = sub_1D166D94C();
      v20 = sub_1D166DD84();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v29 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v21 = 138412290;
        v22 = v7;
        sub_1D166DF28();
        *v29 = v7;

        _os_log_impl(&dword_1D1413000, v19, v20, "Failed to find chat for message: %@", v21, 0xCu);
        sub_1D141AC58(&qword_1ED935810);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v29, -1, -1);
        MEMORY[0x1D17EB0AC](v21, -1, -1);

      }
      else
      {

      }
      sub_1D163F8F8();
      swift_allocError();
      *v28 = 2;
      swift_willThrow();

    }
  }
  return v7;
}

void sub_1D163CA1C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, _QWORD);
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  unint64_t v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  void *v48;
  void (*v49)(char *, uint64_t);
  id v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  char v62[32];

  v2 = sub_1D166D694();
  v59 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v58 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v54 - v5;
  v7 = sub_1D141AC58(&qword_1EFC61718);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D166D6DC();
  v60 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v54 - v14;
  v16 = sub_1D141AC58((uint64_t *)&unk_1ED9354F0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v54 - v21;
  MEMORY[0x1E0C80A78](v20);
  v56 = (char *)&v54 - v23;
  v61 = a1;
  v24 = objc_msgSend(a1, sel_editedPartIndexes);
  v57 = v7;
  if (v24)
  {
    v25 = v24;
    sub_1D166D6B8();

    v26 = 0;
  }
  else
  {
    v26 = 1;
  }
  v27 = (uint64_t)v56;
  v28 = v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v22, v26, 1, v10);
  sub_1D1617718((uint64_t)v22, v27, (uint64_t *)&unk_1ED9354F0);
  sub_1D163F9B4(v27, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v19, 1, v10) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v15, v19, v10);
    v55 = v15;
    sub_1D166D6A0();
    v29 = &v9[*(int *)(v57 + 36)];
    v57 = *(_QWORD *)(v59 + 16);
    ((void (*)(char *, char *, uint64_t))v57)(v6, v29, v2);
    while (1)
    {
      sub_1D15FC784((unint64_t *)&unk_1EFC63220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB13A0], MEMORY[0x1E0CB13E0]);
      v30 = v58;
      sub_1D166DD24();
      sub_1D15FC784(&qword_1EFC61720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1248], MEMORY[0x1E0CB1260]);
      v31 = sub_1D166DA9C();
      v32 = *(void (**)(char *, uint64_t))(v59 + 8);
      v32(v30, v2);
      v32(v6, v2);
      if ((v31 & 1) != 0)
      {
        sub_1D141BA80((uint64_t)v9, &qword_1EFC61718);
        v28 = v60;
        (*(void (**)(char *, uint64_t))(v60 + 8))(v55, v10);
        v27 = (uint64_t)v56;
        goto LABEL_25;
      }
      v33 = (void (*)(char *, _QWORD))sub_1D166DD3C();
      v35 = *v34;
      v33(v62, 0);
      v36 = v60;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v13, v9, v10);
      sub_1D166DD30();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v10);
      v37 = objc_msgSend(v61, sel_historyForMessagePart_, v35);
      if (v37)
      {
        v38 = v37;
        sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC63230);
        v39 = sub_1D166DBEC();

        if (v39 >> 62)
        {
          swift_bridgeObjectRetain();
          v47 = sub_1D166E15C();
          swift_bridgeObjectRelease();
          if (!v47)
          {
LABEL_7:
            swift_bridgeObjectRelease();
            goto LABEL_8;
          }
        }
        else if (!*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_7;
        }
        if ((v39 & 0xC000000000000001) != 0)
        {
          v40 = (id)MEMORY[0x1D17E8FD0](0, v39);
        }
        else
        {
          if (!*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v40 = *(id *)(v39 + 32);
        }
        v41 = v40;
        swift_bridgeObjectRelease();
        v42 = objc_msgSend(v41, sel_messagePartText);

        if (v42)
        {
          v43 = v42;
          v44 = objc_msgSend(v61, sel_body);
          if (v44)
          {
            v45 = v44;
            v46 = objc_msgSend(v44, sel___im_messageTextByReplacingMessagePartIndex_withNewPartText_, v35, v43);

          }
          else
          {
            v46 = 0;
          }
          objc_msgSend(v61, sel_setBody_, v46);

        }
      }
LABEL_8:
      ((void (*)(char *, char *, uint64_t))v57)(v6, v29, v2);
    }
  }
  sub_1D141BA80((uint64_t)v19, (uint64_t *)&unk_1ED9354F0);
LABEL_25:
  sub_1D166D6D0();
  v48 = (void *)sub_1D166D6AC();
  v49 = *(void (**)(char *, uint64_t))(v28 + 8);
  v49(v13, v10);
  v50 = v61;
  objc_msgSend(v61, sel_setEditedPartIndexes_, v48);

  sub_1D166D6D0();
  v51 = (void *)sub_1D166D6AC();
  v49(v13, v10);
  objc_msgSend(v50, sel_setRetractedPartIndexes_, v51);

  sub_1D166D6D0();
  v52 = (void *)sub_1D166D6AC();
  v49(v13, v10);
  objc_msgSend(v50, sel_setFailedRetractPartIndexes_, v52);

  sub_1D166D6D0();
  v53 = (void *)sub_1D166D6AC();
  v49(v13, v10);
  objc_msgSend(v50, sel_setFailedEditPartIndexes_, v53);

  sub_1D141BA80(v27, (uint64_t *)&unk_1ED9354F0);
}

void sub_1D163D048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t inited;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t i;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  void *v62;
  unsigned int v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  os_log_type_t v67;
  uint8_t *v68;
  id v69;
  void *v70;
  uint64_t v71;
  id v72;
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  _QWORD *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  _OWORD v82[2];
  __int128 v83;
  uint64_t v84;
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  sub_1D160F4A0(MEMORY[0x1E0DEE9D8]);
  v84 = MEMORY[0x1E0DEBB98];
  *(_QWORD *)&v83 = a3;
  sub_1D141B3E4(&v83, v82);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D164CA70(v82, 29555, 0xE200000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v5 = swift_bridgeObjectRetain();
  sub_1D16504F8(v5);
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1D166DA18();
  swift_bridgeObjectRelease();
  v7 = (id)JWEncodeDictionary();

  if (!v7)
  {
    __break(1u);
LABEL_42:
    __break(1u);
  }
  v8 = objc_msgSend(v7, sel__FTCopyGzippedData);
  if (!v8)
    goto LABEL_42;
  v9 = v8;
  v80 = sub_1D166D598();
  v81 = v10;

  sub_1D141AC58((uint64_t *)&unk_1EFC631D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D1684410;
  *(_QWORD *)(inited + 32) = sub_1D166DACC();
  *(_QWORD *)(inited + 40) = v12;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 134);
  *(_QWORD *)(inited + 72) = sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935800);
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 80) = sub_1D166DACC();
  *(_QWORD *)(inited + 88) = v14;
  v15 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 96) = 1;
  *(_QWORD *)(inited + 128) = sub_1D166DACC();
  *(_QWORD *)(inited + 136) = v16;
  *(_QWORD *)(inited + 168) = v15;
  *(_BYTE *)(inited + 144) = 1;
  *(_QWORD *)(inited + 176) = sub_1D166DACC();
  *(_QWORD *)(inited + 184) = v17;
  *(_QWORD *)(inited + 216) = v15;
  *(_BYTE *)(inited + 192) = 1;
  *(_QWORD *)(inited + 224) = sub_1D166DACC();
  *(_QWORD *)(inited + 232) = v18;
  v19 = (void *)sub_1D166DAA8();
  v20 = (id)IDSGetUUIDData();

  if (v20)
  {
    v21 = sub_1D166D598();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0xF000000000000000;
  }
  *(_QWORD *)(inited + 264) = sub_1D141AC58((uint64_t *)&unk_1EFC631E0);
  *(_QWORD *)(inited + 240) = v21;
  *(_QWORD *)(inited + 248) = v23;
  *(_QWORD *)(inited + 272) = sub_1D166DACC();
  *(_QWORD *)(inited + 280) = v24;
  *(_QWORD *)(inited + 312) = MEMORY[0x1E0CB0338];
  *(_QWORD *)(inited + 288) = v80;
  *(_QWORD *)(inited + 296) = v81;
  *(_QWORD *)(inited + 320) = sub_1D166DACC();
  *(_QWORD *)(inited + 328) = v25;
  v26 = *MEMORY[0x1E0D348E0];
  *(_QWORD *)(inited + 360) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 336) = v26;
  *(_QWORD *)(inited + 368) = sub_1D166DACC();
  *(_QWORD *)(inited + 376) = v27;
  *(_QWORD *)(inited + 408) = v15;
  *(_BYTE *)(inited + 384) = 0;
  sub_1D15FF574(v80, v81);
  v28 = sub_1D160F4A0(inited);
  sub_1D141AC58(&qword_1ED935820);
  v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_1D1683B20;
  *(_QWORD *)(v29 + 32) = sub_1D166DACC();
  *(_QWORD *)(v29 + 40) = v30;
  v31 = sub_1D160AD90(v29);
  swift_setDeallocating();
  swift_arrayDestroy();
  v32 = sub_1D166DACC();
  v34 = v33;
  v84 = sub_1D141AC58(&qword_1EFC631F0);
  *(_QWORD *)&v83 = v31;
  sub_1D141B3E4(&v83, v82);
  v35 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D164CA70(v82, v32, v34, v35);
  v36 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D166DACC();
  v37 = objc_allocWithZone(MEMORY[0x1E0D34358]);
  v38 = (void *)sub_1D166DAA8();
  swift_bridgeObjectRelease();
  v39 = objc_msgSend(v37, sel_initWithService_, v38);

  if (!v39)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED935578 == -1)
    {
LABEL_20:
      v53 = sub_1D166D964();
      sub_1D141AC1C(v53, (uint64_t)qword_1ED9364E8);
      v54 = sub_1D166D94C();
      v55 = sub_1D166DD84();
      if (!os_log_type_enabled(v54, v55))
      {
        sub_1D15FF5B8(v80, v81);

        return;
      }
      v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_1D1413000, v54, v55, "Could not get IDSService for iMessage", v56, 2u);
      MEMORY[0x1D17EB0AC](v56, -1, -1);
      goto LABEL_30;
    }
LABEL_40:
    swift_once();
    goto LABEL_20;
  }
  *(_QWORD *)&v82[0] = MEMORY[0x1E0DEE9E8];
  v40 = v39;
  v41 = objc_msgSend(v40, sel_devices);
  if (!v41)
  {
    __break(1u);
    return;
  }
  v42 = v41;
  sub_1D15FD3C0(0, &qword_1EFC631F8);
  v43 = sub_1D166DBEC();
  swift_bridgeObjectRelease();

  if (v43 >> 62)
  {
    swift_bridgeObjectRetain();
    v44 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    if (!v44)
      goto LABEL_24;
  }
  else
  {
    v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v44)
      goto LABEL_24;
  }
  if (v44 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  for (i = 0; i != v44; ++i)
  {
    if ((v43 & 0xC000000000000001) != 0)
      v50 = (id)MEMORY[0x1D17E8FD0](i, v43);
    else
      v50 = *(id *)(v43 + 8 * i + 32);
    v51 = v50;
    v52 = IDSCopyIDForDevice();
    if (v52)
    {
      v46 = (void *)v52;
      v47 = sub_1D166DACC();
      v49 = v48;

      sub_1D16619B4((uint64_t *)&v83, v47, v49);
      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
LABEL_24:
  swift_bridgeObjectRelease();
  v57 = *(_QWORD *)&v82[0];
  if (!*(_QWORD *)(*(_QWORD *)&v82[0] + 16))
  {

    sub_1D15FF5B8(v80, v81);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v58 = (void *)objc_opt_self();
  v59 = v40;
  v60 = (void *)sub_1D166DA18();
  sub_1D163A654(v57);
  swift_bridgeObjectRelease();
  v61 = (void *)sub_1D166DCDC();
  swift_bridgeObjectRelease();
  sub_1D16504F8(v36);
  swift_bridgeObjectRelease();
  v62 = (void *)sub_1D166DA18();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v83 = 0;
  v63 = objc_msgSend(v58, sel_service_sendMessage_toDestinations_priority_options_identifier_error_, v59, v60, v61, 300, v62, 0, &v83);

  if (v63)
  {
    v64 = qword_1ED935578;
    v65 = (id)v83;
    if (v64 != -1)
      swift_once();
    v66 = sub_1D166D964();
    sub_1D141AC1C(v66, (uint64_t)qword_1ED9364E8);
    v54 = sub_1D166D94C();
    v67 = sub_1D166DD9C();
    if (os_log_type_enabled(v54, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v68 = 0;
      _os_log_impl(&dword_1D1413000, v54, v67, "IDS successfully sent scheduleState Update to peer devices", v68, 2u);
      MEMORY[0x1D17EB0AC](v68, -1, -1);

LABEL_30:
LABEL_36:
      sub_1D15FF5B8(v80, v81);
      return;
    }
    sub_1D15FF5B8(v80, v81);

  }
  else
  {
    v69 = (id)v83;
    v70 = (void *)sub_1D166D4B4();

    swift_willThrow();
    if (qword_1ED935578 != -1)
      swift_once();
    v71 = sub_1D166D964();
    sub_1D141AC1C(v71, (uint64_t)qword_1ED9364E8);
    v72 = v70;
    v73 = v70;
    v74 = sub_1D166D94C();
    v75 = sub_1D166DD84();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      v77 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v76 = 138412290;
      v78 = v70;
      v79 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v83 = v79;
      sub_1D166DF28();
      *v77 = v79;

      _os_log_impl(&dword_1D1413000, v74, v75, "IDS failed to send scheduleState Update to peer devices, error %@", v76, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v77, -1, -1);
      MEMORY[0x1D17EB0AC](v76, -1, -1);

      goto LABEL_36;
    }
    sub_1D15FF5B8(v80, v81);

  }
}

void sub_1D163DAA4(void *a1, uint64_t a2, unint64_t a3, unsigned __int8 a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  uint8_t *v15;
  void *v16;
  void *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v26[2];

  v5 = v4;
  if (objc_msgSend(a1, sel_scheduleType) == (id)2
    && (objc_msgSend(a1, sel_scheduleState) == (id)1 || objc_msgSend(a1, sel_scheduleState) == (id)2))
  {
    if (qword_1ED935578 != -1)
      swift_once();
    v9 = sub_1D166D964();
    sub_1D141AC1C(v9, (uint64_t)qword_1ED9364E8);
    v10 = a1;
    v11 = sub_1D166D94C();
    v12 = sub_1D166DD9C();
    if (os_log_type_enabled(v11, v12))
    {
      v24 = v5;
      v13 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v13 = 138412290;
      v26[0] = v10;
      v14 = v10;
      sub_1D166DF28();
      *v23 = v10;

      _os_log_impl(&dword_1D1413000, v11, v12, "Received sending message %@", v13, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v23, -1, -1);
      v15 = v13;
      v5 = v24;
      MEMORY[0x1D17EB0AC](v15, -1, -1);

    }
    else
    {

    }
    sub_1D1638264(v10);

    v16 = *(void **)(v5 + OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession);
    v17 = (void *)sub_1D166DAA8();
    v18 = objc_msgSend(v16, sel_chatForChatIdentifier_style_, v17, a4);

    if (v18)
    {
      sub_1D1638FA4(v18);

    }
    else
    {
      swift_bridgeObjectRetain_n();
      v19 = sub_1D166D94C();
      v20 = sub_1D166DD84();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v26[0] = (id)v22;
        *(_DWORD *)v21 = 136315138;
        swift_bridgeObjectRetain();
        sub_1D141BCB4(a2, a3, (uint64_t *)v26);
        sub_1D166DF28();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D1413000, v19, v20, "Failed to find chat with identifier: %s when trying to update hasCancellableScheduledMessage", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v22, -1, -1);
        MEMORY[0x1D17EB0AC](v21, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void sub_1D163DFB0(int a1, uint64_t a2, unint64_t a3, unsigned __int8 a4)
{
  uint64_t v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  uint64_t v21[2];

  v21[1] = *MEMORY[0x1E0C80C00];
  if (qword_1ED935578 != -1)
    swift_once();
  v8 = sub_1D166D964();
  sub_1D141AC1C(v8, (uint64_t)qword_1ED9364E8);
  swift_bridgeObjectRetain_n();
  v9 = sub_1D166D94C();
  v10 = sub_1D166DD9C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v21[0] = v12;
    *(_DWORD *)v11 = 67109378;
    sub_1D166DF28();
    *(_WORD *)(v11 + 8) = 2080;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a2, a3, v21);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D1413000, v9, v10, "Received updated chatStatus: %d for chatIdentifier: %s", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v12, -1, -1);
    MEMORY[0x1D17EB0AC](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if ((a1 + 1) <= 6 && ((1 << (a1 + 1)) & 0x73) != 0)
  {
    v13 = *(void **)(v4 + OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession);
    v14 = (void *)sub_1D166DAA8();
    v15 = objc_msgSend(v13, sel_chatForChatIdentifier_style_, v14, a4);

    if (v15)
    {
      v16 = v15;
      sub_1D1633930(v16, 3);

    }
    else
    {
      v16 = sub_1D166D94C();
      v17 = sub_1D166DD84();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v18 = 138412290;
        v21[0] = 0;
        sub_1D166DF28();
        *v19 = 0;
        _os_log_impl(&dword_1D1413000, v16, v17, "Could not get chat for identifier %@", v18, 0xCu);
        sub_1D141AC58(&qword_1ED935810);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v19, -1, -1);
        MEMORY[0x1D17EB0AC](v18, -1, -1);
      }
    }

  }
}

void sub_1D163E300(void *a1, NSObject *a2, unsigned int (*a3)(uint64_t, uint64_t, uint64_t), int a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  id v54;
  void *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  id v60;
  void *v61;
  void (*v62)(char *, char *, uint64_t);
  char v63;
  uint64_t v64;
  void *v65;
  void *v66;
  id v67;
  unint64_t v68;
  id v69;
  void *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  void (**v76)(uint64_t, unint64_t);
  void *v77;
  id v78;
  void (**v79)(uint64_t, unint64_t);
  uint64_t v80;
  char *v81;
  char *v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  os_log_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  char v95;
  char *v96;
  char *v97;
  char *v98;
  BOOL v99;
  id v100;
  void *v101;
  char *v102;
  id v103;
  void *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  void (**v108)(uint64_t, unint64_t);
  id v109;
  void *v110;
  char *v111;
  char *v112;
  unsigned int v113;
  void *v114;
  uint64_t v115;
  id v116;
  char *v117;
  id v118;
  char *v119;
  id v120;
  char *v121;
  void (*v122)(char *, char *, uint64_t);
  char *v123;
  NSObject *v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  id v132;
  void (*v133)(char *, char *, uint64_t);
  void *v134;
  char *v135;
  char *v136;
  void *v137;
  char *v138;
  id v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  void (*v143)(char *, char *, uint64_t);
  void *v144;
  id v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  os_log_t v149;
  uint64_t v150;
  char *v151;
  void *v152;
  id v153;
  char *v154;
  char *v155;
  char *v156;
  id v157;
  void (*v158)(char *, char *, uint64_t);
  char *v159;
  char *v160;
  char *v161;
  void (*v162)(char *, char *, uint64_t);
  char *v163;
  char *v164;
  void (**v165)(uint64_t, unint64_t);
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  void (**v170)(uint64_t, unint64_t);
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  void (**v179)(uint64_t, unint64_t);
  char *v180;
  uint64_t v181;
  os_log_t v182;
  char *v183;
  unsigned int (*v184)(uint64_t, uint64_t, uint64_t);
  void (*v185)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  id v190;
  uint64_t v191;
  unint64_t v192;

  v184 = a3;
  LODWORD(v185) = a4;
  v182 = a2;
  v190 = a1;
  v4 = (char *)sub_1D166D964();
  v165 = (void (**)(uint64_t, unint64_t))*((_QWORD *)v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v164 = (char *)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D141AC58((uint64_t *)&unk_1ED935540);
  v173 = *(_QWORD *)(v6 - 8);
  v174 = v6;
  MEMORY[0x1E0C80A78](v6);
  v188 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D141AC58((uint64_t *)&unk_1ED935558);
  v176 = *(_QWORD *)(v8 - 8);
  v177 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v172 = (char *)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v175 = (char *)&v158 - v11;
  v169 = sub_1D141AC58((uint64_t *)&unk_1ED934FE8);
  v12 = MEMORY[0x1E0C80A78](v169);
  v171 = (char *)&v158 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v166 = (char *)&v158 - v14;
  v167 = sub_1D141AC58(&qword_1ED9355A0);
  v15 = MEMORY[0x1E0C80A78](v167);
  v168 = (char *)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v170 = (void (**)(uint64_t, unint64_t))((char *)&v158 - v17);
  v18 = sub_1D141AC58(&qword_1ED9354E8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v160 = (char *)&v158 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v186 = (char *)&v158 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v187 = (char *)&v158 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v161 = (char *)&v158 - v26;
  MEMORY[0x1E0C80A78](v25);
  v180 = (char *)&v158 - v27;
  v28 = sub_1D166D628();
  v181 = *(_QWORD *)(v28 - 8);
  v29 = MEMORY[0x1E0C80A78](v28);
  v162 = (void (*)(char *, char *, uint64_t))((char *)&v158 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = MEMORY[0x1E0C80A78](v29);
  v163 = (char *)&v158 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v179 = (void (**)(uint64_t, unint64_t))((char *)&v158 - v34);
  v35 = MEMORY[0x1E0C80A78](v33);
  v189 = (char *)&v158 - v36;
  MEMORY[0x1E0C80A78](v35);
  v178 = (char *)&v158 - v37;
  v38 = sub_1D141AC58((uint64_t *)&unk_1ED9354F0);
  v39 = MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v158 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v43 = (char *)&v158 - v42;
  v44 = sub_1D166D6DC();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = MEMORY[0x1E0C80A78](v44);
  v48 = (char *)&v158 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x1E0C80A78](v46);
  v51 = (char *)&v158 - v50;
  MEMORY[0x1E0C80A78](v49);
  v53 = (char *)&v158 - v52;
  if (objc_msgSend(v190, sel_scheduleType) != (id)2)
    goto LABEL_72;
  v54 = objc_msgSend(v190, sel_editedPartIndexes);
  if (!v54)
  {
    v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
    v58(v43, 1, 1, v44);
    goto LABEL_6;
  }
  v55 = v54;
  v159 = v4;
  v56 = v28;
  sub_1D166D6B8();

  v57 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
  v57(v43, v51, v44);
  v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
  v58(v43, 0, 1, v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44) == 1)
  {
    v28 = v56;
    v4 = v159;
LABEL_6:
    sub_1D141BA80((uint64_t)v43, (uint64_t *)&unk_1ED9354F0);
    goto LABEL_7;
  }
  v57(v53, v43, v44);
  v95 = sub_1D166D6C4();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v53, v44);
  v28 = v56;
  v4 = v159;
  if ((v95 & 1) == 0)
    goto LABEL_72;
LABEL_7:
  v59 = v28;
  v60 = objc_msgSend(v190, sel_retractedPartIndexes);
  if (!v60)
  {
    v58(v41, 1, 1, v44);
    goto LABEL_12;
  }
  v61 = v60;
  sub_1D166D6B8();

  v62 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
  v62(v41, v51, v44);
  v58(v41, 0, 1, v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v41, 1, v44) == 1)
  {
LABEL_12:
    sub_1D141BA80((uint64_t)v41, (uint64_t *)&unk_1ED9354F0);
    v64 = v59;
    goto LABEL_13;
  }
  v62(v48, v41, v44);
  v63 = sub_1D166D6C4();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v44);
  v64 = v59;
  if ((v63 & 1) == 0)
    goto LABEL_72;
LABEL_13:
  v65 = *(void **)&v183[OBJC_IVAR___IMDScheduledMessageCoordinator_serviceSession];
  v66 = (void *)sub_1D166DAA8();
  v67 = objc_msgSend(v65, sel_chatForChatIdentifier_style_, v66, v185);

  if (!v67)
  {
LABEL_72:
    v157 = v190;
    return;
  }
  v68 = (unint64_t)v67;
  v69 = objc_msgSend(v190, sel_time);
  if (!v69)
  {
    v72 = (uint64_t)v180;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v181 + 56))(v180, 1, 1, v64);
    goto LABEL_27;
  }
  v70 = v69;
  v71 = v189;
  sub_1D166D604();

  v72 = (uint64_t)v180;
  v73 = (char *)v181;
  v74 = *(void (**)(char *, char *, uint64_t))(v181 + 32);
  v74(v180, v71, v64);
  v185 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)v73 + 7);
  v185(v72, 0, 1, v64);
  v184 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v73 + 6);
  if (v184(v72, 1, v64) == 1)
  {
LABEL_27:

    sub_1D141BA80(v72, &qword_1ED9354E8);
    goto LABEL_72;
  }
  v75 = v178;
  v74(v178, (char *)v72, v64);
  v76 = v179;
  sub_1D166D5B0();
  v77 = *(void **)&v183[OBJC_IVAR___IMDScheduledMessageCoordinator_messageStore];
  v180 = (char *)v68;
  v78 = objc_msgSend((id)v68, sel_guid);
  v182 = (os_log_t)objc_msgSend(v77, sel_scheduledMessagesBatchFetcherForChat_, v78);

  v79 = v76;
  sub_1D15FC784((unint64_t *)&unk_1EFC631A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  if ((sub_1D166DA90() & 1) != 0)
  {
    v80 = v169;
    v81 = v166;
    v82 = &v166[*(int *)(v169 + 48)];
    v83 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v73 + 2);
    v83(v166, v75, v64);
    v83(v82, (char *)v79, v64);
    v75 = v171;
    v84 = &v171[*(int *)(v80 + 48)];
    v83(v171, v81, v64);
    v158 = v83;
    v83(v84, v82, v64);
    v85 = v168;
    v74(v168, v75, v64);
    v73 = (char *)*((_QWORD *)v73 + 1);
    ((void (*)(char *, uint64_t))v73)(v84, v64);
    v86 = &v75[*(int *)(v80 + 48)];
    v74(v75, v81, v64);
    v74(v86, v82, v64);
    v87 = &v85[*(int *)(v167 + 36)];
    v183 = (char *)v74;
    v74(v87, v86, v64);
    ((void (*)(char *, uint64_t))v73)(v75, v64);
    v88 = (uint64_t)v85;
    v76 = v170;
    sub_1D1617718(v88, (uint64_t)v170, &qword_1ED9355A0);
    v89 = v182;
    v90 = (char *)sub_1D163AB34();

    sub_1D141BA80((uint64_t)v76, &qword_1ED9355A0);
    sub_1D15FD3C0(0, (unint64_t *)&unk_1ED9355E0);
    sub_1D15FD3C0(0, (unint64_t *)&unk_1ED935668);
    v91 = v175;
    v171 = v90;
    sub_1D166DDCC();
    v68 = MEMORY[0x1E0DEE9D8];
    v192 = MEMORY[0x1E0DEE9D8];
    (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v172, v91, v177);
    sub_1D160F064(&qword_1ED935550, (uint64_t *)&unk_1ED935558, MEMORY[0x1E0D372A0]);
    sub_1D166DBBC();
    v74 = (void (*)(char *, char *, uint64_t))sub_1D160F064(&qword_1ED935538, (uint64_t *)&unk_1ED935540, MEMORY[0x1E0D37268]);
    v92 = v174;
    sub_1D166DF1C();
    v93 = (void *)v191;
    if (v191)
    {
      v45 = (uint64_t)v178;
      do
      {
        v94 = sub_1D1637770();

        if (v94)
        {
          MEMORY[0x1D17E8AD8]();
          v76 = *(void (***)(uint64_t, unint64_t))((v192 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if ((unint64_t)v76 >= *(_QWORD *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1D166DC1C();
          sub_1D166DC34();
          sub_1D166DC04();
        }
        sub_1D166DF1C();
        v93 = (void *)v191;
      }
      while (v191);
      v68 = v192;
    }
    else
    {
      v45 = (uint64_t)v178;
    }
    (*(void (**)(char *, uint64_t))(v173 + 8))(v188, v92);
    (*(void (**)(char *, uint64_t))(v176 + 8))(v175, v177);
    if (!(v68 >> 62))
    {
      v96 = *(char **)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v97 = (char *)v179;
      if (v96)
        goto LABEL_32;
LABEL_70:
      v156 = v180;

      swift_bridgeObjectRelease_n();
      ((void (*)(char *, uint64_t))v73)(v97, v64);
      v155 = (char *)v45;
      goto LABEL_71;
    }
  }
  else
  {
LABEL_68:
    __break(1u);
  }
  swift_bridgeObjectRetain_n();
  v96 = (char *)sub_1D166E15C();
  swift_bridgeObjectRelease();
  v97 = (char *)v179;
  if (!v96)
    goto LABEL_70;
LABEL_32:
  v159 = v4;
  v182 = (os_log_t)(v68 & 0xC000000000000001);
  if ((v68 & 0xC000000000000001) != 0)
  {
    v98 = (char *)MEMORY[0x1D17E8FD0](0, v68);
  }
  else
  {
    if (!*(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_75:
      swift_once();
      goto LABEL_57;
    }
    v98 = (char *)*(id *)(v68 + 32);
  }
  v74 = (void (*)(char *, char *, uint64_t))v98;
  v188 = v73;
  if (v96 != (char *)1)
  {
    v181 = v68 & 0xFFFFFFFFFFFFFF8;
    v45 = 5;
    while (1)
    {
      v75 = (char *)(v45 - 4);
      if (v182)
      {
        v76 = (void (**)(uint64_t, unint64_t))MEMORY[0x1D17E8FD0](v45 - 4, v68);
        v4 = v183;
        v99 = __OFADD__(v75, 1);
        v75 = (char *)(v45 - 3);
        if (v99)
          goto LABEL_66;
      }
      else
      {
        v4 = v183;
        if ((unint64_t)v75 >= *(_QWORD *)(v181 + 16))
          goto LABEL_67;
        v76 = (void (**)(uint64_t, unint64_t))*(id *)(v68 + 8 * v45);
        v99 = __OFADD__(v75, 1);
        v75 = (char *)(v45 - 3);
        if (v99)
        {
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
      }
      v100 = objc_msgSend(v74, sel_time);
      if (!v100)
        break;
      v101 = v100;
      v102 = v189;
      sub_1D166D604();

      v97 = v187;
      ((void (*)(char *, char *, uint64_t))v4)(v187, v102, v64);
      v185((uint64_t)v97, 0, 1, v64);
      if (v184((uint64_t)v97, 1, v64) == 1)
        goto LABEL_77;
      v103 = objc_msgSend(v76, sel_time);
      if (!v103)
        goto LABEL_78;
      v104 = v103;
      v105 = v189;
      sub_1D166D604();

      v97 = v186;
      ((void (*)(char *, char *, uint64_t))v4)(v186, v105, v64);
      v185((uint64_t)v97, 0, 1, v64);
      if (v184((uint64_t)v97, 1, v64) == 1)
        goto LABEL_79;
      v4 = v187;
      v106 = sub_1D166D5C8();
      v107 = v97;
      v97 = (char *)v106;
      v73 = v188;
      ((void (*)(char *, uint64_t))v188)(v107, v64);
      ((void (*)(char *, uint64_t))v73)(v4, v64);
      if ((v97 & 1) != 0)
        v108 = (void (**)(uint64_t, unint64_t))v74;
      else
        v108 = v76;
      if ((v97 & 1) != 0)
        v74 = (void (*)(char *, char *, uint64_t))v76;

      ++v45;
      if (v75 == v96)
        goto LABEL_53;
    }
    v185((uint64_t)v187, 1, 1, v64);
LABEL_77:
    __break(1u);
LABEL_78:
    v185((uint64_t)v186, 1, 1, v64);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
LABEL_53:
  swift_bridgeObjectRelease_n();
  v97 = v74;
  v109 = objc_msgSend(v97, sel_time);
  if (!v109)
  {
LABEL_80:
    v185((uint64_t)v161, 1, 1, v64);
    goto LABEL_81;
  }
  v110 = v109;
  v111 = v189;
  sub_1D166D604();

  v112 = v161;
  ((void (*)(char *, char *, uint64_t))v183)(v161, v111, v64);
  v185((uint64_t)v112, 0, 1, v64);
  v113 = v184((uint64_t)v112, 1, v64);
  v68 = (unint64_t)v159;
  v76 = v165;
  v45 = (uint64_t)v164;
  v75 = (char *)v179;
  v4 = v163;
  v74 = v162;
  if (v113 == 1)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  sub_1D166D5B0();
  ((void (*)(char *, uint64_t))v73)(v112, v64);
  if ((sub_1D166D5C8() & 1) == 0)
  {

    v151 = v180;
LABEL_65:
    ((void (*)(char *, uint64_t))v73)(v4, v64);
    ((void (*)(char *, uint64_t))v73)(v75, v64);
    v155 = v178;
LABEL_71:
    ((void (*)(char *, uint64_t))v73)(v155, v64);
    goto LABEL_72;
  }
  v187 = v97;
  v96 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v114 = (void *)sub_1D166DAA8();
  objc_msgSend(v96, sel_setDateFormat_, v114);

  if (qword_1ED935578 != -1)
    goto LABEL_75;
LABEL_57:
  v115 = sub_1D141AC1C(v68, (uint64_t)qword_1ED9364E8);
  ((void (*)(uint64_t, uint64_t, unint64_t))v76[2])(v45, v115, v68);
  v158((char *)v74, v4, v64);
  v116 = v190;
  v117 = v96;
  v118 = v116;
  v119 = v117;
  v120 = v118;
  v121 = v119;
  v122 = v74;
  v97 = (char *)v120;
  v123 = v121;
  v124 = sub_1D166D94C();
  LODWORD(v186) = sub_1D166DD84();
  if (!os_log_type_enabled(v124, (os_log_type_t)v186))
  {

    ((void (*)(void (*)(char *, char *, uint64_t), uint64_t))v73)(v122, v64);
    v165[1](v45, v68);
    goto LABEL_64;
  }
  v182 = v124;
  v4 = v123;
  v125 = swift_slowAlloc();
  v126 = swift_slowAlloc();
  v192 = v126;
  *(_DWORD *)v125 = 136315650;
  v127 = objc_msgSend(v97, sel_guid);
  if (!v127)
  {
LABEL_82:

    __break(1u);
    goto LABEL_83;
  }
  v128 = v127;
  v181 = v126;
  v129 = sub_1D166DACC();
  v131 = v130;

  v191 = sub_1D141BCB4(v129, v131, (uint64_t *)&v192);
  sub_1D166DF28();

  swift_bridgeObjectRelease();
  *(_WORD *)(v125 + 12) = 2080;
  v132 = objc_msgSend(v97, sel_time);
  v133 = (void (*)(char *, char *, uint64_t))v183;
  if (!v132)
  {
LABEL_83:

    v185((uint64_t)v160, 1, 1, v64);
    __break(1u);
    goto LABEL_84;
  }
  v134 = v132;
  v135 = v189;
  sub_1D166D604();

  v136 = v160;
  v133(v160, v135, v64);
  v185((uint64_t)v136, 0, 1, v64);
  if (v184((uint64_t)v136, 1, v64) != 1)
  {
    v137 = (void *)sub_1D166D5BC();
    ((void (*)(char *, uint64_t))v73)(v136, v64);
    v138 = v4;
    v139 = objc_msgSend(v4, sel_stringFromDate_, v137);

    v140 = sub_1D166DACC();
    v142 = v141;

    v191 = sub_1D141BCB4(v140, v142, (uint64_t *)&v192);
    sub_1D166DF28();

    swift_bridgeObjectRelease();
    *(_WORD *)(v125 + 22) = 2080;
    v143 = v162;
    v144 = (void *)sub_1D166D5BC();
    v123 = v138;
    v145 = objc_msgSend(v138, sel_stringFromDate_, v144);

    v146 = sub_1D166DACC();
    v148 = v147;

    v191 = sub_1D141BCB4(v146, v148, (uint64_t *)&v192);
    sub_1D166DF28();

    v73 = v188;
    swift_bridgeObjectRelease();
    ((void (*)(void (*)(char *, char *, uint64_t), uint64_t))v73)(v143, v64);
    v149 = v182;
    _os_log_impl(&dword_1D1413000, v182, (os_log_type_t)v186, "Updating time of scheduled message: %s from %s to %s to maintain ordering", (uint8_t *)v125, 0x20u);
    v150 = v181;
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v150, -1, -1);
    MEMORY[0x1D17EB0AC](v125, -1, -1);

    v165[1]((uint64_t)v164, (unint64_t)v159);
    v75 = (char *)v179;
    v4 = v163;
LABEL_64:
    v152 = (void *)sub_1D166D5BC();
    objc_msgSend(v97, sel_setTime_, v152);
    v153 = v187;

    v154 = v180;
    goto LABEL_65;
  }
LABEL_84:

  __break(1u);
}

id sub_1D163F6FC(void *a1, char *a2)
{
  void *v2;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  id v15;
  char *format;

  if (qword_1ED935578 != -1)
    swift_once();
  v5 = sub_1D166D964();
  sub_1D141AC1C(v5, (uint64_t)qword_1ED9364E8);
  v6 = v2;
  v7 = a1;
  v8 = v6;
  v9 = v7;
  v10 = sub_1D166D94C();
  v11 = sub_1D166DD9C();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412546;
    format = a2;
    v14 = v8;
    sub_1D166DF28();
    *v13 = v8;

    *(_WORD *)(v12 + 12) = 2112;
    v15 = v9;
    sub_1D166DF28();
    v13[1] = v9;

    _os_log_impl(&dword_1D1413000, v10, v11, format, (uint8_t *)v12, 0x16u);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v13, -1, -1);
    MEMORY[0x1D17EB0AC](v12, -1, -1);

  }
  else
  {

  }
  return sub_1D1633930(v9, 1);
}

unint64_t sub_1D163F8F8()
{
  unint64_t result;

  result = qword_1EFC631C8;
  if (!qword_1EFC631C8)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D16844CC, &_s6ErrorsON_0);
    atomic_store(result, (unint64_t *)&qword_1EFC631C8);
  }
  return result;
}

uint64_t sub_1D163F93C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1D163F964()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D163F988(uint64_t *a1)
{
  return sub_1D1607C88(a1);
}

void sub_1D163F990()
{
  uint64_t v0;

  sub_1D1635C60(*(void **)(v0 + 24));
}

uint64_t sub_1D163F9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D141AC58((uint64_t *)&unk_1ED9354F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D163F9FC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1D163FA20()
{
  uint64_t v0;

  sub_1D16349EC(*(NSObject **)(v0 + 24), *(double *)(v0 + 16));
}

uint64_t sub_1D163FA2C()
{
  return swift_deallocObject();
}

_BYTE *_s6ErrorsOwCP(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s6ErrorsOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s6ErrorsOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D163FB24 + 4 * byte_1D1684425[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D163FB58 + 4 * byte_1D1684420[v4]))();
}

uint64_t sub_1D163FB58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D163FB60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D163FB68);
  return result;
}

uint64_t sub_1D163FB74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D163FB7CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D163FB80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D163FB88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D163FB94(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D163FB9C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s6ErrorsOMa_0()
{
  return &_s6ErrorsON_0;
}

unint64_t sub_1D163FBB8()
{
  unint64_t result;

  result = qword_1EFC63240;
  if (!qword_1EFC63240)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D16844A4, &_s6ErrorsON_0);
    atomic_store(result, (unint64_t *)&qword_1EFC63240);
  }
  return result;
}

id ScheduledMessageMembershipObserver.__deallocating_deinit()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_name_object_, v0, CFSTR("__kIMDChatParticipantsDidChangeNotification"), 0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ScheduledMessageMembershipObserver();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for ScheduledMessageMembershipObserver()
{
  return objc_opt_self();
}

void sub_1D163FD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  NSObject *v23;
  int v24;
  _BOOL4 v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  NSObject *v62;
  void *v63;
  NSObject *v64;
  uint64_t v65;
  os_log_type_t v66;
  uint8_t *v67;
  NSObject *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  os_log_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[5];
  __int128 v81;
  __int128 v82;

  v1 = v0;
  v2 = sub_1D166D964();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D166D448();
  if (!v80[3])
  {
    sub_1D1608CC4((uint64_t)v80);
    return;
  }
  sub_1D15FD3C0(0, (unint64_t *)&unk_1ED9357F0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v6 = (id)v81;
    v7 = sub_1D166D454();
    if (v7)
    {
      v8 = v7;
      v78 = sub_1D166DACC();
      v79 = v9;
      sub_1D166E048();
      if (*(_QWORD *)(v8 + 16) && (v10 = sub_1D141B48C((uint64_t)v80), (v11 & 1) != 0))
      {
        sub_1D141B3A8(*(_QWORD *)(v8 + 56) + 32 * v10, (uint64_t)&v81);
      }
      else
      {
        v81 = 0u;
        v82 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1D1607C44((uint64_t)v80);
      if (*((_QWORD *)&v82 + 1))
      {
        sub_1D141AC58((uint64_t *)&unk_1EFC63260);
        if (swift_dynamicCast())
        {
          v12 = v80[0];
          goto LABEL_15;
        }
LABEL_14:
        v12 = MEMORY[0x1E0DEE9D8];
LABEL_15:
        v77 = v12;
        v13 = sub_1D166D454();
        v75 = v1;
        if (v13)
        {
          v14 = v13;
          v78 = sub_1D166DACC();
          v79 = v15;
          sub_1D166E048();
          if (*(_QWORD *)(v14 + 16) && (v16 = sub_1D141B48C((uint64_t)v80), (v17 & 1) != 0))
          {
            sub_1D141B3A8(*(_QWORD *)(v14 + 56) + 32 * v16, (uint64_t)&v81);
          }
          else
          {
            v81 = 0u;
            v82 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_1D1607C44((uint64_t)v80);
          if (*((_QWORD *)&v82 + 1))
          {
            sub_1D141AC58((uint64_t *)&unk_1EFC63260);
            if (swift_dynamicCast())
            {
              v18 = v80[0];
              goto LABEL_26;
            }
LABEL_25:
            v18 = MEMORY[0x1E0DEE9D8];
LABEL_26:
            v19 = v77;
            if (qword_1ED935578 != -1)
              swift_once();
            v20 = sub_1D141AC1C(v2, (uint64_t)qword_1ED9364E8);
            (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v20, v2);
            v21 = v6;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            v22 = v21;
            v23 = sub_1D166D94C();
            v24 = sub_1D166DD9C();
            v25 = os_log_type_enabled(v23, (os_log_type_t)v24);
            v76 = v22;
            if (v25)
            {
              v71 = v24;
              v72 = v23;
              v73 = v20;
              v74 = v3;
              v26 = swift_slowAlloc();
              v70 = swift_slowAlloc();
              v80[0] = v70;
              *(_DWORD *)v26 = 136315650;
              v27 = -[NSObject guid](v22, sel_guid);
              if (!v27)
              {

                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                __break(1u);
                return;
              }
              v28 = v27;
              v29 = sub_1D166DACC();
              v31 = v30;

              *(_QWORD *)&v81 = sub_1D141BCB4(v29, v31, v80);
              sub_1D166DF28();

              swift_bridgeObjectRelease();
              *(_WORD *)(v26 + 12) = 2080;
              v32 = sub_1D15FD3C0(0, (unint64_t *)&qword_1EFC62000);
              v19 = v77;
              v33 = swift_bridgeObjectRetain();
              v34 = MEMORY[0x1D17E8B08](v33, v32);
              v36 = v35;
              swift_bridgeObjectRelease();
              *(_QWORD *)&v81 = sub_1D141BCB4(v34, v36, v80);
              sub_1D166DF28();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v26 + 22) = 2080;
              v37 = swift_bridgeObjectRetain();
              v38 = MEMORY[0x1D17E8B08](v37, v32);
              v40 = v39;
              swift_bridgeObjectRelease();
              *(_QWORD *)&v81 = sub_1D141BCB4(v38, v40, v80);
              sub_1D166DF28();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              v41 = v72;
              _os_log_impl(&dword_1D1413000, v72, (os_log_type_t)v71, "Participants for Chat %s changed. Added:  %s Removed: %s. Updating scheduled messages accordingly", (uint8_t *)v26, 0x20u);
              v42 = v70;
              swift_arrayDestroy();
              MEMORY[0x1D17EB0AC](v42, -1, -1);
              MEMORY[0x1D17EB0AC](v26, -1, -1);

              (*(void (**)(char *, uint64_t))(v74 + 8))(v5, v2);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();

              (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
            }
            if (v19 >> 62)
            {
              swift_bridgeObjectRetain();
              v43 = sub_1D166E15C();
              swift_bridgeObjectRelease();
              v44 = v18 >> 62;
              if (v43)
                goto LABEL_36;
            }
            else
            {
              v43 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
              v44 = v18 >> 62;
              if (v43)
                goto LABEL_36;
            }
            if (v44)
              goto LABEL_68;
            if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              while (1)
              {
LABEL_36:
                if (v44)
                {
                  swift_bridgeObjectRetain();
                  v44 = sub_1D166E15C();
                  swift_bridgeObjectRelease();
                  v45 = &async function pointer to dispatch thunk of IncomingIntentsClientConnectionListener.proxyForIntentRequest();
                  if (!v44)
                  {
LABEL_57:
                    v58 = v75;
                    goto LABEL_58;
                  }
                }
                else
                {
                  v44 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
                  v45 = (_QWORD *)&async function pointer to dispatch thunk of IncomingIntentsClientConnectionListener.proxyForIntentRequest();
                  if (!v44)
                    goto LABEL_57;
                }
                v74 = v43;
                if (v44 >= 1)
                  break;
                __break(1u);
LABEL_68:
                swift_bridgeObjectRetain();
                v65 = sub_1D166E15C();
                swift_bridgeObjectRelease();
                if (!v65)
                  goto LABEL_69;
              }
              swift_bridgeObjectRetain();
              v46 = 0;
              v47 = (char *)MEMORY[0x1E0DEE9D8];
              do
              {
                if ((v18 & 0xC000000000000001) != 0)
                  v48 = (id)MEMORY[0x1D17E8FD0](v46, v18);
                else
                  v48 = *(id *)(v18 + 8 * v46 + 32);
                v49 = v48;
                v50 = objc_msgSend(v48, sel_ID);
                if (v50)
                {
                  v51 = v50;
                  v52 = sub_1D166DACC();
                  v54 = v53;

                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v47 = (char *)sub_1D160DB14(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
                  v56 = *((_QWORD *)v47 + 2);
                  v55 = *((_QWORD *)v47 + 3);
                  if (v56 >= v55 >> 1)
                    v47 = (char *)sub_1D160DB14((_QWORD *)(v55 > 1), v56 + 1, 1, v47);
                  *((_QWORD *)v47 + 2) = v56 + 1;
                  v57 = &v47[16 * v56];
                  *((_QWORD *)v57 + 4) = v52;
                  *((_QWORD *)v57 + 5) = v54;
                }
                else
                {

                }
                ++v46;
              }
              while (v44 != v46);
              swift_bridgeObjectRelease_n();
              v45 = &async function pointer to dispatch thunk of IncomingIntentsClientConnectionListener.proxyForIntentRequest();
              v58 = v75;
              v59 = MEMORY[0x1D17EB154](v75 + OBJC_IVAR____TtC12IMDaemonCore34ScheduledMessageMembershipObserver_coordinator);
              if (v59)
              {
                v60 = (void *)v59;
                sub_1D163866C(v76, v47, 2);

              }
              v43 = v74;
LABEL_58:
              swift_bridgeObjectRelease();
              if (v43)
              {
                v61 = MEMORY[0x1D17EB154](v58 + v45[74]);
                v62 = v76;
                if (v61)
                {
                  v63 = (void *)v61;
                  v64 = v76;
                  sub_1D1639934(v76, v77);

                  swift_bridgeObjectRelease();
                  return;
                }
                swift_bridgeObjectRelease();
                goto LABEL_64;
              }
              swift_bridgeObjectRelease();
            }
            else
            {
LABEL_69:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v62 = sub_1D166D94C();
              v66 = sub_1D166DD84();
              if (os_log_type_enabled(v62, v66))
              {
                v67 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v67 = 0;
                _os_log_impl(&dword_1D1413000, v62, v66, "Bailing. Both addedParticipants & removedParticipants are empty", v67, 2u);
                MEMORY[0x1D17EB0AC](v67, -1, -1);
                v68 = v76;

                goto LABEL_65;
              }

            }
            v62 = v76;
LABEL_64:

LABEL_65:
            return;
          }
        }
        else
        {
          v81 = 0u;
          v82 = 0u;
        }
        sub_1D1608CC4((uint64_t)&v81);
        goto LABEL_25;
      }
    }
    else
    {
      v81 = 0u;
      v82 = 0u;
    }
    sub_1D1608CC4((uint64_t)&v81);
    goto LABEL_14;
  }
}

id ScheduledMessageMembershipObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ScheduledMessageMembershipObserver.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t method lookup function for ScheduledMessageMembershipObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D1640754()
{
  return MEMORY[0x1E0DEE9D8];
}

BOOL sub_1D1640760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  return sub_1D141C574(a1, a3, a4);
}

uint64_t dispatch thunk of ClientRequestHandling.requiredCapabilities.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ClientRequestHandling.requiredEntitlements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ClientRequestHandling.requirementsMet(by:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ClientRequestHandling.client.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ClientRequestHandling.init(client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1D1640794@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1D165F3A0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

id sub_1D164079C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IMDWatchSatelliteSyncController()), sel_init);
  qword_1ED935AE0 = (uint64_t)result;
  return result;
}

id IMDWatchSatelliteSyncController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static IMDWatchSatelliteSyncController.shared.getter()
{
  if (qword_1ED935AE8 != -1)
    swift_once();
  return (id)qword_1ED935AE0;
}

id sub_1D1640828(void *a1)
{
  uint64_t v1;

  objc_msgSend(a1, sel_addObserver_, v1);
  return objc_msgSend((id)objc_opt_self(), sel_synchronizeSatelliteStatus_, objc_msgSend(a1, sel_isSatelliteConnectionActive));
}

id sub_1D1640884(char a1)
{
  return objc_msgSend((id)objc_opt_self(), sel_synchronizeSatelliteStatus_, a1 & 1);
}

id IMDWatchSatelliteSyncController.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMDWatchSatelliteSyncController();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for IMDWatchSatelliteSyncController()
{
  return objc_opt_self();
}

id IMDWatchSatelliteSyncController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMDWatchSatelliteSyncController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for IMDWatchSatelliteSyncController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IMDWatchSatelliteSyncController.configure(withChorosController:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of IMDWatchSatelliteSyncController.satelliteStateDidChange(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t sub_1D16409F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v1 = *(_QWORD *)(a1 + 32);
  sub_1D141AC58(&qword_1ED935B90);
  v2 = sub_1D166DBEC();
  v3 = sub_1D166DBEC();
  v4 = *(uint64_t **)(*(_QWORD *)(v1 + 64) + 40);
  *v4 = v2;
  v4[1] = v3;
  return swift_continuation_resume();
}

uint64_t sub_1D1640A58(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  sub_1D141AC58(&qword_1ED935B90);
  **(_QWORD **)(*(_QWORD *)(v1 + 64) + 40) = sub_1D166DBEC();
  return swift_continuation_resume();
}

uint64_t IntentsClientRequestAdapter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t IntentsClientRequestAdapter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IntentsClientRequestAdapter()
{
  return objc_opt_self();
}

uint64_t method lookup function for IntentsClientRequestAdapter()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D1640AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[33] = a2;
  v3[34] = a3;
  v3[32] = a1;
  v4 = sub_1D166D7C0();
  v3[35] = v4;
  v3[36] = *(_QWORD *)(v4 - 8);
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D1640B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;

  sub_1D15FF574(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
  sub_1D166D7B4();
  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v1, *(_QWORD *)(v0 + 304), v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v4 == *MEMORY[0x1E0D37158])
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 96))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
    if (qword_1EFC61538 != -1)
      swift_once();
    v5 = sub_1D166D964();
    sub_1D141AC1C(v5, (uint64_t)qword_1EFC65E40);
    v6 = sub_1D166D94C();
    v7 = sub_1D166DD9C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1D1413000, v6, v7, "AgentRequestIntent calling loadAnyChatsContainingHandleIDs on IMAgent.", v8, 2u);
      MEMORY[0x1D17EB0AC](v8, -1, -1);
    }
    v9 = *(void **)(v0 + 272);

    v10 = sub_1D166DBD4();
    *(_QWORD *)(v0 + 360) = v10;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = v0 + 240;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1D16414AC;
    v11 = swift_continuation_init();
    *(_QWORD *)(v0 + 184) = MEMORY[0x1E0C809B0];
    v12 = (_QWORD *)(v0 + 184);
    v12[1] = 0x40000000;
    v12[2] = sub_1D1640A58;
    v12[3] = &unk_1E9231628;
    v12[4] = v11;
    objc_msgSend(v9, sel_loadAnyChatsContainingHandleIDsIn_reply_, v10, v12);
    return swift_continuation_await();
  }
  if (v4 == *MEMORY[0x1E0D37150])
  {
    v13 = *(_QWORD *)(v0 + 296);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 288) + 96))(v13, *(_QWORD *)(v0 + 280));
    v41 = *(unsigned __int8 *)(v13 + 24);
    v14 = *(_QWORD *)(v13 + 56);
    v15 = *(_QWORD *)(v13 + 72);
    v39 = *(_QWORD *)(v13 + 88);
    v40 = *(_QWORD *)(v13 + 40);
    if (qword_1EFC61538 != -1)
      swift_once();
    v16 = sub_1D166D964();
    sub_1D141AC1C(v16, (uint64_t)qword_1EFC65E40);
    v17 = sub_1D166D94C();
    v18 = sub_1D166DD9C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1D1413000, v17, v18, "AgentRequestIntent processing loadHistoryForChat.", v19, 2u);
      MEMORY[0x1D17EB0AC](v19, -1, -1);
    }

    v20 = sub_1D166DAA8();
    *(_QWORD *)(v0 + 312) = v20;
    swift_bridgeObjectRelease();
    v21 = sub_1D166DBD4();
    *(_QWORD *)(v0 + 320) = v21;
    swift_bridgeObjectRelease();
    v22 = sub_1D166DBD4();
    *(_QWORD *)(v0 + 328) = v22;
    swift_bridgeObjectRelease();
    if (v14)
    {
      v23 = sub_1D166DAA8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = 0;
    }
    *(_QWORD *)(v0 + 336) = v23;
    if (v15)
    {
      v34 = sub_1D166DAA8();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 344) = v34;
      if (v39)
      {
LABEL_22:
        v35 = sub_1D166DAA8();
        swift_bridgeObjectRelease();
LABEL_25:
        *(_QWORD *)(v0 + 352) = v35;
        v36 = *(void **)(v0 + 272);
        *(_QWORD *)(v0 + 120) = v0 + 224;
        *(_QWORD *)(v0 + 80) = v0;
        *(_QWORD *)(v0 + 88) = sub_1D16411B4;
        v37 = swift_continuation_init();
        *(_QWORD *)(v0 + 144) = MEMORY[0x1E0C809B0];
        v38 = (_QWORD *)(v0 + 144);
        v38[1] = 0x40000000;
        v38[2] = sub_1D16409F0;
        v38[3] = &unk_1E9231640;
        v38[4] = v37;
        objc_msgSend(v36, sel_loadHistoryForChatWithGUID_chatIdentifiers_style_services_limit_beforeGUID_afterGUID_threadIdentifier_reply_, v20, v21, v41, v22, v40, v23, v34, v35, v38);
        return swift_continuation_await();
      }
    }
    else
    {
      v34 = 0;
      *(_QWORD *)(v0 + 344) = 0;
      if (v39)
        goto LABEL_22;
    }
    v35 = 0;
    goto LABEL_25;
  }
  if (qword_1EFC61538 != -1)
    swift_once();
  v24 = sub_1D166D964();
  sub_1D141AC1C(v24, (uint64_t)qword_1EFC65E40);
  v25 = sub_1D166D94C();
  v26 = sub_1D166DD84();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_1D1413000, v25, v26, "Unimplemented AgentRequest received by AgentRequestIntent.", v27, 2u);
    MEMORY[0x1D17EB0AC](v27, -1, -1);
  }
  v29 = *(_QWORD *)(v0 + 296);
  v28 = *(_QWORD *)(v0 + 304);
  v30 = *(_QWORD *)(v0 + 280);
  v31 = *(_QWORD *)(v0 + 288);

  v32 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v32(v28, v30);
  v32(v29, v30);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
}

uint64_t sub_1D16411B4()
{
  return swift_task_switch();
}

uint64_t sub_1D164122C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v22;

  v1 = *(void **)(v0 + 344);
  v3 = *(void **)(v0 + 328);
  v2 = *(void **)(v0 + 336);
  v5 = *(void **)(v0 + 312);
  v4 = *(void **)(v0 + 320);

  v6 = objc_allocWithZone((Class)sub_1D166D898());
  v7 = sub_1D166D88C();
  if (qword_1EFC61538 != -1)
    swift_once();
  v8 = sub_1D166D964();
  sub_1D141AC1C(v8, (uint64_t)qword_1EFC65E40);
  v9 = sub_1D166D94C();
  v10 = sub_1D166DD9C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_1D1413000, v9, v10, "AgentRequestIntent returning with the serialized result.", v11, 2u);
    MEMORY[0x1D17EB0AC](v11, -1, -1);
  }

  v12 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 248) = 0;
  v13 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v7, 1, v0 + 248);
  v14 = *(id *)(v0 + 248);
  v15 = *(_QWORD *)(v0 + 304);
  v16 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 288);
  if (v13)
  {
    v18 = sub_1D166D598();
    v20 = v19;

    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v18, v20);
  }
  else
  {
    v22 = v14;
    sub_1D166D4B4();

    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D16414AC()
{
  return swift_task_switch();
}

uint64_t sub_1D1641524()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;

  v1 = objc_allocWithZone((Class)sub_1D166D880());
  v2 = sub_1D166D874();
  if (qword_1EFC61538 != -1)
    swift_once();
  v3 = sub_1D166D964();
  sub_1D141AC1C(v3, (uint64_t)qword_1EFC65E40);
  v4 = sub_1D166D94C();
  v5 = sub_1D166DD9C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1D1413000, v4, v5, "AgentRequestIntent returning with the serialized result.", v6, 2u);
    MEMORY[0x1D17EB0AC](v6, -1, -1);
  }

  v7 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 248) = 0;
  v8 = objc_msgSend(v7, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v2, 1, v0 + 248);
  v9 = *(id *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 280);
  v12 = *(_QWORD *)(v0 + 288);
  if (v8)
  {
    v13 = sub_1D166D598();
    v15 = v14;

    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v13, v15);
  }
  else
  {
    v17 = v9;
    sub_1D166D4B4();

    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t FileEvent.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void FileEvent.flags.getter(_DWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_DWORD *)(v1 + 8);
}

uint64_t FileEvent.path.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FileEvent.description.getter()
{
  sub_1D166E090();
  swift_bridgeObjectRelease();
  sub_1D166E1BC();
  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  sub_1D166DB5C();
  FileEventFlags.description.getter();
  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  sub_1D166DB5C();
  swift_bridgeObjectRetain();
  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  return 0x5B4449746E657665;
}

uint64_t sub_1D16418E0()
{
  return MEMORY[0x1E0DEE1A0];
}

uint64_t destroy for FileEvent()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FileEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FileEvent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FileEvent(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for FileEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FileEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FileEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FileEvent()
{
  return &type metadata for FileEvent;
}

uint64_t sub_1D1641A68(uint64_t a1)
{
  return sub_1D1641A90(a1, MEMORY[0x1E0D032D8], &qword_1EFC65E70);
}

uint64_t sub_1D1641A7C(uint64_t a1)
{
  return sub_1D1641A90(a1, MEMORY[0x1E0D032E0], &qword_1EFC65E78);
}

uint64_t sub_1D1641A90(uint64_t a1, void **a2, uint64_t *a3)
{
  void *v4;
  id v5;
  id v6;
  uint64_t result;

  v4 = *a2;
  v5 = objc_allocWithZone((Class)sub_1D166D934());
  v6 = v4;
  result = sub_1D166D928();
  *a3 = result;
  return result;
}

id static MessagesBlastDoorInterface.blastdoorInterface(for:)(void *a1)
{
  uint64_t *v1;

  if (objc_msgSend(a1, sel_isTrustedSender))
  {
    if (qword_1EFC61550 != -1)
      swift_once();
    v1 = &qword_1EFC65E70;
  }
  else
  {
    if (qword_1EFC61558 != -1)
      swift_once();
    v1 = &qword_1EFC65E78;
  }
  return (id)*v1;
}

uint64_t sub_1D1641B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D166DCB8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D166DCAC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1D141BA80(a1, (uint64_t *)&unk_1ED935780);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D166DC64();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

id sub_1D1641CA8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)IMDMessageFromStorageMonitor), sel_init);
  qword_1EFC63370 = (uint64_t)result;
  return result;
}

id sub_1D1641D18()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  objc_super v9;

  *(_QWORD *)(v0 + OBJC_IVAR___IMDMessageFromStorageMonitor_messageCount) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR___IMDMessageFromStorageMonitor_totalElapsedTimeSec) = 0;
  v9.super_class = (Class)IMDMessageFromStorageMonitor;
  v1 = objc_msgSendSuper2(&v9, sel_init);
  v2 = qword_1EFC61510;
  v3 = v1;
  if (v2 != -1)
    swift_once();
  v4 = sub_1D166D964();
  sub_1D141AC1C(v4, (uint64_t)qword_1EFC65DF8);
  v5 = sub_1D166D94C();
  v6 = sub_1D166DD9C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1D1413000, v5, v6, "Initialized MesasgesFromStorageMonitor", v7, 2u);
    MEMORY[0x1D17EB0AC](v7, -1, -1);
  }

  return v3;
}

void sub_1D1641E50(double a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  const char *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  NSObject *oslog;

  v2 = v1;
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_messagesDomain);
  if (v5)
  {
    v6 = v5;
    v7 = (void *)sub_1D166DAA8();
    v8 = (uint64_t)objc_msgSend(v6, sel_integerForKey_, v7);

    if (v8 >= 2)
    {
      if (qword_1EFC61510 != -1)
        swift_once();
      v9 = sub_1D166D964();
      sub_1D141AC1C(v9, (uint64_t)qword_1EFC65DF8);
      oslog = sub_1D166D94C();
      v10 = sub_1D166DD9C();
      if (!os_log_type_enabled(oslog, v10))
        goto LABEL_19;
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      v12 = "FromStorageMonitor version default > target version, this should never happen";
      goto LABEL_13;
    }
  }
  v13 = objc_msgSend(v4, sel_messagesDomain);
  if (v13)
  {
    v14 = v13;
    v15 = (void *)sub_1D166DAA8();
    v16 = objc_msgSend(v14, sel_integerForKey_, v15);

    if (v16 == (id)1)
    {
      if (qword_1EFC61510 != -1)
        swift_once();
      v17 = sub_1D166D964();
      sub_1D141AC1C(v17, (uint64_t)qword_1EFC65DF8);
      oslog = sub_1D166D94C();
      v10 = sub_1D166DD9C();
      if (!os_log_type_enabled(oslog, v10))
        goto LABEL_19;
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      v12 = "We've already spawned TTR for this version, don't do it anymore";
LABEL_13:
      _os_log_impl(&dword_1D1413000, oslog, v10, v12, v11, 2u);
      MEMORY[0x1D17EB0AC](v11, -1, -1);
      goto LABEL_19;
    }
  }
  v18 = *(_QWORD *)&v2[OBJC_IVAR___IMDMessageFromStorageMonitor_messageCount];
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
    goto LABEL_21;
  }
  *(_QWORD *)&v2[OBJC_IVAR___IMDMessageFromStorageMonitor_messageCount] = v20;
  *(double *)&v2[OBJC_IVAR___IMDMessageFromStorageMonitor_totalElapsedTimeSec] = *(double *)&v2[OBJC_IVAR___IMDMessageFromStorageMonitor_totalElapsedTimeSec]
                                                                               + a1;
  if (qword_1EFC61510 != -1)
LABEL_21:
    swift_once();
  v21 = sub_1D166D964();
  sub_1D141AC1C(v21, (uint64_t)qword_1EFC65DF8);
  oslog = v2;
  v22 = sub_1D166D94C();
  v23 = sub_1D166DD9C();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    *(_DWORD *)v24 = 134218240;
    sub_1D166DF28();
    *(_WORD *)(v24 + 12) = 2048;
    sub_1D166DF28();

    _os_log_impl(&dword_1D1413000, v22, v23, "Message count: %ld, total elapsed: %f", (uint8_t *)v24, 0x16u);
    MEMORY[0x1D17EB0AC](v24, -1, -1);

    return;
  }

LABEL_19:
}

void sub_1D1642240()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  if (qword_1EFC61510 != -1)
    swift_once();
  v0 = sub_1D166D964();
  sub_1D141AC1C(v0, (uint64_t)qword_1EFC65DF8);
  v1 = sub_1D166D94C();
  v2 = sub_1D166DD9C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1D1413000, v1, v2, "App launched, spawn TTR if needed", v3, 2u);
    MEMORY[0x1D17EB0AC](v3, -1, -1);
  }

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_messagesDomain);
  if (!v5
    || (v6 = v5,
        v7 = (void *)sub_1D166DAA8(),
        v8 = objc_msgSend(v6, sel_integerForKey_, v7),
        v6,
        v7,
        (uint64_t)v8 <= 0))
  {
    if (sub_1D1642498())
    {
      v9 = sub_1D166D94C();
      v10 = sub_1D166DD9C();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_1D1413000, v9, v10, "Slow delivery detected! Update version and spawn TTR", v11, 2u);
        MEMORY[0x1D17EB0AC](v11, -1, -1);
      }

      v12 = objc_msgSend(v4, sel_messagesDomain);
      if (v12)
      {
        v13 = v12;
        v14 = (void *)sub_1D166DD18();
        v15 = (void *)sub_1D166DAA8();
        objc_msgSend(v13, sel_setValue_forKey_, v14, v15);

      }
      sub_1D164262C();
    }
  }
}

BOOL sub_1D1642498()
{
  char *v0;
  uint64_t v1;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)&v0[OBJC_IVAR___IMDMessageFromStorageMonitor_messageCount];
  if (v1 < 100)
    return 0;
  v3 = fabs(*(double *)&v0[OBJC_IVAR___IMDMessageFromStorageMonitor_totalElapsedTimeSec]);
  v4 = (double)v1;
  if (qword_1EFC61510 != -1)
    swift_once();
  v5 = v3 / v4;
  v6 = sub_1D166D964();
  sub_1D141AC1C(v6, (uint64_t)qword_1EFC65DF8);
  v7 = v0;
  v8 = sub_1D166D94C();
  v9 = sub_1D166DD6C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    *(_DWORD *)v10 = 134218240;
    sub_1D166DF28();
    *(_WORD *)(v10 + 12) = 2048;
    sub_1D166DF28();

    _os_log_impl(&dword_1D1413000, v8, v9, "Current average: %f, number of messages: %ld", (uint8_t *)v10, 0x16u);
    MEMORY[0x1D17EB0AC](v10, -1, -1);

  }
  else
  {

  }
  return v5 > 1.0;
}

uint64_t sub_1D164262C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v0 = sub_1D166D9C4();
  v16 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D166D9F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D166D9D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED9357D0);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF540], v7);
  v11 = (void *)sub_1D166DE38();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1D16433C8;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D141BC88;
  aBlock[3] = &unk_1E9231738;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1D166D9E8();
  v17 = MEMORY[0x1E0DEE9D8];
  sub_1D16433D0();
  sub_1D141AC58(&qword_1ED9355A8);
  sub_1D1643418();
  sub_1D166DF88();
  MEMORY[0x1D17E8D30](0, v6, v2, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  return swift_release();
}

void sub_1D16428C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;

  v2 = sub_1D141AC58((uint64_t *)&unk_1ED935780);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1 + 16;
  if (qword_1EFC61510 != -1)
    swift_once();
  v6 = sub_1D166D964();
  sub_1D141AC1C(v6, (uint64_t)qword_1EFC65DF8);
  v7 = sub_1D166D94C();
  v8 = sub_1D166DD9C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D1413000, v7, v8, "Async spawning TTR alert", v9, 2u);
    MEMORY[0x1D17EB0AC](v9, -1, -1);
  }

  swift_beginAccess();
  v10 = MEMORY[0x1D17EB154](v5);
  if (v10)
  {
    v11 = v10;
    sub_1D15FD3C0(0, &qword_1EFC62B30);
    v12 = sub_1D1642B3C();
    if (v12)
    {
      v13 = (void *)v12;
      v14 = sub_1D166DCB8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
      v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v16 = (_QWORD *)swift_allocObject();
      v16[2] = 0;
      v16[3] = 0;
      v16[4] = v15;
      v16[5] = v13;
      v17 = v13;
      sub_1D1641B5C((uint64_t)v4, (uint64_t)&unk_1EFC633C0, (uint64_t)v16);
      swift_release();
    }
    else
    {
      v18 = sub_1D166D94C();
      v19 = sub_1D166DD84();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_1D1413000, v18, v19, "Tried to launch TapToRadarDraft but could not convert IMUserNotificationCenter.sharedInstance() to IMUserNotificationCenter!", v20, 2u);
        MEMORY[0x1D17EB0AC](v20, -1, -1);
        v17 = v11;
        v11 = v18;
      }
      else
      {
        v17 = v18;
      }
    }

  }
}

uint64_t sub_1D1642B3C()
{
  uint64_t v1;
  _OWORD v2[2];
  _BYTE v3[24];
  uint64_t v4;

  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sharedInstance))
  {
    sub_1D166DF70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_1D141B3F4((uint64_t)v2, (uint64_t)v3);
  if (v4)
  {
    sub_1D15FD3C0(0, &qword_1EFC62B30);
    if (swift_dynamicCast())
      return v1;
    else
      return 0;
  }
  else
  {
    sub_1D141BA80((uint64_t)v3, &qword_1ED935840);
    return 0;
  }
}

uint64_t sub_1D1642C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 88) = a4;
  *(_QWORD *)(v5 + 96) = a5;
  return swift_task_switch();
}

uint64_t sub_1D1642C24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v1 = v0[11] + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1D17EB154](v1);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1D164358C();
    if (v4)
    {
      v5 = (void *)v4;
      v6 = (void *)v0[12];
      v7 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v0[6] = sub_1D164379C;
      v0[7] = v7;
      v0[2] = MEMORY[0x1E0C809B0];
      v0[3] = 1107296256;
      v0[4] = sub_1D1643338;
      v0[5] = &unk_1E92317B0;
      v8 = _Block_copy(v0 + 2);
      v9 = v5;
      swift_release();
      objc_msgSend(v6, sel_addUserNotification_listener_completionHandler_, v9, 0, v8);
      _Block_release(v8);

    }
    else
    {
      if (qword_1EFC61510 != -1)
        swift_once();
      v10 = sub_1D166D964();
      sub_1D141AC1C(v10, (uint64_t)qword_1EFC65DF8);
      v11 = sub_1D166D94C();
      v12 = sub_1D166DD84();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_1D1413000, v11, v12, "Could not create a user notification for tap to radar", v13, 2u);
        MEMORY[0x1D17EB0AC](v13, -1, -1);
        v9 = v11;
      }
      else
      {
        v9 = v3;
        v3 = v11;
      }
    }

  }
  return ((uint64_t (*)(void))v0[1])();
}

void sub_1D1642E04(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD v29[2];
  _OWORD v30[2];
  uint64_t v31[4];
  uint64_t v32;

  v4 = sub_1D141AC58((uint64_t *)&unk_1ED935780);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1 || (swift_beginAccess(), (v7 = MEMORY[0x1D17EB154](a2 + 16)) == 0))
  {
    if (qword_1EFC61510 != -1)
      swift_once();
    v17 = sub_1D166D964();
    sub_1D141AC1C(v17, (uint64_t)qword_1EFC65DF8);
    v8 = sub_1D166D94C();
    v18 = sub_1D166DD84();
    if (os_log_type_enabled(v8, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1D1413000, v8, v18, "Error processing the tap to radar notification callback", v19, 2u);
      MEMORY[0x1D17EB0AC](v19, -1, -1);
    }
    goto LABEL_26;
  }
  v8 = v7;
  v9 = qword_1EFC61510;
  v10 = a1;
  if (v9 != -1)
    swift_once();
  v11 = sub_1D166D964();
  sub_1D141AC1C(v11, (uint64_t)qword_1EFC65DF8);
  v12 = v10;
  v13 = sub_1D166D94C();
  v14 = sub_1D166DD9C();
  if (!os_log_type_enabled(v13, v14))
  {

    goto LABEL_20;
  }
  v15 = (uint8_t *)swift_slowAlloc();
  v16 = swift_slowAlloc();
  v32 = v16;
  *(_DWORD *)v15 = 136315138;
  if (objc_msgSend(v12, sel_identifier))
  {
    sub_1D166DF70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v30, 0, sizeof(v30));
  }
  sub_1D141B3F4((uint64_t)v30, (uint64_t)v31);
  if (!v31[3])
  {
    sub_1D141BA80((uint64_t)v31, &qword_1ED935840);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    v20 = 0xD00000000000001CLL;
    v21 = 0x80000001D1695AC0;
    goto LABEL_19;
  }
  v20 = v29[0];
  v21 = v29[1];
LABEL_19:
  v31[0] = sub_1D141BCB4(v20, v21, &v32);
  sub_1D166DF28();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1D1413000, v13, v14, "Finished processing user notification: %s", v15, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1D17EB0AC](v16, -1, -1);
  MEMORY[0x1D17EB0AC](v15, -1, -1);

LABEL_20:
  v22 = objc_msgSend(v12, sel_response);
  if (v22 == (id)3)
  {
    v25 = sub_1D166D94C();
    v26 = sub_1D166DD6C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v31[0] = v28;
      *(_DWORD *)v27 = 136315138;
      *(_QWORD *)&v30[0] = sub_1D141BCB4(0xD000000000000016, 0x80000001D1698FE0, v31);
      sub_1D166DF28();
      _os_log_impl(&dword_1D1413000, v25, v26, "%s: user cancelled tap to radar", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v28, -1, -1);
      MEMORY[0x1D17EB0AC](v27, -1, -1);

      return;
    }

    goto LABEL_28;
  }
  if (v22)
  {

LABEL_26:
    return;
  }
  v23 = sub_1D166DCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = 0;
  v24[3] = 0;
  v24[4] = v8;
  v8 = v8;
  sub_1D1616074((uint64_t)v6, (uint64_t)&unk_1EFC633E0, (uint64_t)v24);
  swift_release();
LABEL_28:

}

uint64_t sub_1D16432F4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D141C488;
  return sub_1D1643834();
}

void sub_1D1643338(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t type metadata accessor for IMDMessageFromStorageMonitor(uint64_t a1)
{
  return sub_1D15FD3C0(a1, &qword_1EFC633B0);
}

uint64_t sub_1D16433A4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1D16433C8()
{
  uint64_t v0;

  sub_1D16428C0(v0);
}

unint64_t sub_1D16433D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED935580;
  if (!qword_1ED935580)
  {
    v1 = sub_1D166D9C4();
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED935580);
  }
  return result;
}

unint64_t sub_1D1643418()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED9355B0;
  if (!qword_1ED9355B0)
  {
    v1 = sub_1D15FC6A0(&qword_1ED9355A8);
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED9355B0);
  }
  return result;
}

uint64_t sub_1D1643464()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D1643498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1D141C488;
  *(_OWORD *)(v2 + 88) = v3;
  return swift_task_switch();
}

uint64_t sub_1D16434F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D164351C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D1607C7C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFC633C8 + dword_1EFC633C8))(a1, v4);
}

uint64_t sub_1D164358C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD v12[2];
  _OWORD v13[2];
  _BYTE v14[24];
  uint64_t v15;

  v0 = sub_1D166D658();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  sub_1D166D64C();
  sub_1D166D634();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v5 = (void *)sub_1D166DAA8();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1D166DAA8();
  v7 = (void *)sub_1D166DAA8();
  v8 = (void *)sub_1D166DAA8();
  v9 = (void *)sub_1D166DAA8();
  v10 = objc_msgSend(v4, sel_userNotificationWithIdentifier_title_message_defaultButton_alternateButton_otherButton_, v5, v6, v7, v8, v9, 0);

  if (v10)
  {
    sub_1D166DF70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_1D141B3F4((uint64_t)v13, (uint64_t)v14);
  if (v15)
  {
    sub_1D15FD3C0(0, &qword_1EFC62B60);
    if (swift_dynamicCast())
      return v12[1];
    else
      return 0;
  }
  else
  {
    sub_1D141BA80((uint64_t)v14, &qword_1ED935840);
    return 0;
  }
}

void sub_1D164379C(void *a1)
{
  uint64_t v1;

  sub_1D1642E04(a1, v1);
}

uint64_t sub_1D16437A4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1D16437D0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D141C488;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1D141C488;
  return sub_1D1643834();
}

uint64_t sub_1D1643834()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_1D166D808();
  v0[2] = v1;
  v0[3] = *(_QWORD *)(v1 - 8);
  v0[4] = swift_task_alloc();
  v2 = sub_1D166D7FC();
  v0[5] = v2;
  v0[6] = *(_QWORD *)(v2 - 8);
  v0[7] = swift_task_alloc();
  v3 = sub_1D166D838();
  v0[8] = v3;
  v0[9] = *(_QWORD *)(v3 - 8);
  v0[10] = swift_task_alloc();
  v4 = sub_1D166D844();
  v0[11] = v4;
  v0[12] = *(_QWORD *)(v4 - 8);
  v0[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D1643908()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[7];
  v11 = v0[8];
  v4 = v0[5];
  v5 = v0[6];
  v6 = v0[3];
  v7 = v0[4];
  v8 = v0[2];
  sub_1D166D820();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, *MEMORY[0x1E0D371F0], v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v7, *MEMORY[0x1E0D37200], v8);
  sub_1D166D7E4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v11);
  v9 = (_QWORD *)swift_task_alloc();
  v0[14] = v9;
  *v9 = v0;
  v9[1] = sub_1D1643A54;
  return sub_1D166D814();
}

uint64_t sub_1D1643A54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D1643AB8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D1643B28()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FileCreateFlags.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t FileCreateFlags.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t FileCreateFlags.init(rawValue:)@<X0>(unint64_t result@<X0>, _DWORD *a2@<X8>)
{
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    result = sub_1D166E144();
    __break(1u);
  }
  else
  {
    *a2 = result;
  }
  return result;
}

void static FileCreateFlags.none.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static FileCreateFlags.cfTypes.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static FileCreateFlags.noDefer.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

void static FileCreateFlags.watchRoot.getter(_DWORD *a1@<X8>)
{
  *a1 = 4;
}

void static FileCreateFlags.ignoreSelf.getter(_DWORD *a1@<X8>)
{
  *a1 = 8;
}

void static FileCreateFlags.fileEvents.getter(_DWORD *a1@<X8>)
{
  *a1 = 16;
}

void static FileCreateFlags.markSelf.getter(_DWORD *a1@<X8>)
{
  *a1 = 32;
}

unint64_t sub_1D1643CB0()
{
  unint64_t result;

  result = qword_1EFC633F0;
  if (!qword_1EFC633F0)
  {
    result = MEMORY[0x1D17EAFE0](&protocol conformance descriptor for FileCreateFlags, &type metadata for FileCreateFlags);
    atomic_store(result, (unint64_t *)&qword_1EFC633F0);
  }
  return result;
}

unint64_t sub_1D1643CF8()
{
  unint64_t result;

  result = qword_1EFC633F8;
  if (!qword_1EFC633F8)
  {
    result = MEMORY[0x1D17EAFE0](&protocol conformance descriptor for FileCreateFlags, &type metadata for FileCreateFlags);
    atomic_store(result, (unint64_t *)&qword_1EFC633F8);
  }
  return result;
}

_DWORD *sub_1D1643D3C@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1D1643D4C()
{
  unint64_t result;

  result = qword_1EFC63400;
  if (!qword_1EFC63400)
  {
    result = MEMORY[0x1D17EAFE0](&protocol conformance descriptor for FileCreateFlags, &type metadata for FileCreateFlags);
    atomic_store(result, (unint64_t *)&qword_1EFC63400);
  }
  return result;
}

unint64_t sub_1D1643D94()
{
  unint64_t result;

  result = qword_1EFC63408;
  if (!qword_1EFC63408)
  {
    result = MEMORY[0x1D17EAFE0](&protocol conformance descriptor for FileCreateFlags, &type metadata for FileCreateFlags);
    atomic_store(result, (unint64_t *)&qword_1EFC63408);
  }
  return result;
}

void sub_1D1643DD8(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1D1643DE0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1D1643DF4@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1D1643E08@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1D1643E1C(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1D1643E4C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1D1643E78@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1D1643E9C(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_1D1643EB0(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_1D1643EC4(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_1D1643ED8@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1D1643EEC(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1D1643F00(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1D1643F14(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1D1643F28()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_1D1643F38(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

_DWORD *sub_1D1643F4C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_1D1643F5C(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_1D1643F68(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

ValueMetadata *type metadata accessor for FileCreateFlags()
{
  return &type metadata for FileCreateFlags;
}

uint64_t sub_1D1643F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = sub_1D141AC58(&qword_1EFC63410);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1D141BA80(a1, &qword_1EFC63410);
    sub_1D15FD8AC(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1D141BA80((uint64_t)v10, &qword_1EFC63410);
  }
  else
  {
    sub_1D15FF604(a1, (uint64_t)v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_1D164CBA0((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

unint64_t RecoverableMessageStore.batchOfRecordsToWrite(filter:limit:)(uint64_t a1, uint64_t a2)
{
  return sub_1D1646414(a2);
}

id sub_1D1644118(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id result;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  id v47;
  uint8_t *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  char *v64;
  uint64_t v65;
  uint8_t *v66;
  id v67;
  uint64_t v68;
  uint64_t v69[2];

  v66 = (uint8_t *)a2;
  v67 = a1;
  v4 = sub_1D141AC58(&qword_1EFC63410);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v63 - v8;
  v10 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (id *)((char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v15 = result;
    v16 = objc_msgSend(result, sel_recoverableMessageRecordZone);

    if (!v16)
    {
      if (qword_1ED935B68 != -1)
        swift_once();
      v23 = sub_1D166D964();
      sub_1D141AC1C(v23, (uint64_t)qword_1ED936590);
      v24 = sub_1D166D94C();
      v25 = sub_1D166DD84();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_1D1413000, v24, v25, "Recoverable Message Zone is nil in IMDRecordZoneManager", v26, 2u);
        MEMORY[0x1D17EB0AC](v26, -1, -1);
      }

      return 0;
    }
    v64 = v7;
    v65 = a3;
    v17 = objc_msgSend(v16, sel_zoneID);
    v18 = v16;
    v19 = objc_msgSend(v17, sel_zoneName);

    v20 = sub_1D166DACC();
    v22 = v21;

    sub_1D16455F4(v20, v22, (uint64_t)v67, (uint64_t)v9);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {

      sub_1D141BA80((uint64_t)v9, &qword_1EFC63410);
      return 0;
    }
    v63 = v18;
    sub_1D15FF604((uint64_t)v9, (uint64_t)v13);
    result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    if (result)
    {
      v27 = result;
      v28 = objc_msgSend(result, sel_cachedSalt);

      if (v28)
      {
        v29 = (void *)objc_opt_self();
        v30 = v13[3];
        v69[0] = v13[2];
        v69[1] = v30;
        swift_bridgeObjectRetain();
        sub_1D166DB5C();
        swift_bridgeObjectRetain();
        sub_1D166DB5C();
        swift_bridgeObjectRelease();
        sub_1D166DB5C();
        v68 = v13[7];
        sub_1D166E1BC();
        sub_1D166DB5C();
        swift_bridgeObjectRelease();
        v31 = (void *)sub_1D166DAA8();
        swift_bridgeObjectRelease();
        v32 = objc_msgSend(v29, sel_recordIDUsingSalt_zoneID_guid_, v28, v66, v31);

        if (v32)
        {
          sub_1D15FD3C0(0, (unint64_t *)&unk_1ED935890);
          v33 = v32;
          v34 = (void *)sub_1D166DEBC();
          swift_bridgeObjectRetain();
          v35 = (void *)sub_1D166DAA8();
          objc_msgSend(v34, sel__setCKRecordString_forKey_, v35, CFSTR("guid"));

          v36 = (void *)sub_1D166D5BC();
          objc_msgSend(v34, sel__setCKRecordDate_forKey_, v36, CFSTR("deleteDate"));

          v37 = (void *)v13[5];
          if (v37)
          {
            v38 = v37;
            v39 = (id)JWEncodeCodableObject();
            v67 = v38;
            if (v39)
            {
              v40 = sub_1D166D598();
              v42 = v41;

              sub_1D15FF574(v40, v42);
              v39 = (id)sub_1D166D58C();
              v66 = (uint8_t *)v40;
              sub_1D15FF5B8(v40, v42);
            }
            else
            {
              v66 = 0;
              v42 = 0xF000000000000000;
            }
            v57 = (void *)sub_1D166DAA8();
            objc_msgSend(v34, sel__setCKRecordData_forKey_, v39, v57);

            sub_1D1622D38((uint64_t)v66, v42);
          }
          v58 = objc_msgSend(v33, sel_recordName);
          v59 = sub_1D166DACC();
          v61 = v60;

          v62 = (uint64_t)v64;
          sub_1D1646AE8((uint64_t)v13, (uint64_t)v64);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v62, 0, 1, v10);
          sub_1D1643F94(v62, v59, v61);

          sub_1D1646AAC((uint64_t)v13);
          return v34;
        }
        if (qword_1ED935B68 != -1)
          swift_once();
        v49 = sub_1D166D964();
        sub_1D141AC1C(v49, (uint64_t)qword_1ED936590);
        swift_bridgeObjectRetain_n();
        v50 = sub_1D166D94C();
        v51 = sub_1D166DD84();
        if (os_log_type_enabled(v50, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc();
          v53 = swift_slowAlloc();
          v69[0] = v53;
          *(_DWORD *)v52 = 136315138;
          v66 = v52 + 4;
          swift_bridgeObjectRetain();
          v54 = sub_1D166DA3C();
          v56 = v55;
          swift_bridgeObjectRelease();
          v68 = sub_1D141BCB4(v54, v56, v69);
          sub_1D166DF28();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D1413000, v50, v51, "Recently Deleted: returning nil record. recordID nil for metadata: %s", v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D17EB0AC](v53, -1, -1);
          MEMORY[0x1D17EB0AC](v52, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

      }
      else
      {
        if (qword_1ED935B68 != -1)
          swift_once();
        v43 = sub_1D166D964();
        sub_1D141AC1C(v43, (uint64_t)qword_1ED936590);
        v44 = sub_1D166D94C();
        v45 = sub_1D166DD84();
        v46 = os_log_type_enabled(v44, v45);
        v47 = v63;
        if (v46)
        {
          v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v48 = 0;
          _os_log_impl(&dword_1D1413000, v44, v45, "No cached salt available from IMDCKRecordSaltManager could not create CKRecord!", v48, 2u);
          MEMORY[0x1D17EB0AC](v48, -1, -1);
        }

      }
      sub_1D1646AAC((uint64_t)v13);
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall RecoverableMessageStore.recordUpdateSucceeded(forRecord:)(CKRecord forRecord)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v3 = sub_1D141AC58(&qword_1EFC63410);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v32[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -[objc_class recordID](forRecord.super.isa, sel_recordID);
  v11 = objc_msgSend(v10, sel_recordName);

  v12 = sub_1D166DACC();
  v14 = v13;

  v15 = (uint64_t *)(v1 + OBJC_IVAR___IMDRecoverableMessageStore_metadataByRecordNameMap);
  swift_beginAccess();
  v16 = *v15;
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_1D16162CC(v12, v14), (v18 & 1) != 0))
  {
    sub_1D1646AE8(*(_QWORD *)(v16 + 56) + *(_QWORD *)(v7 + 72) * v17, (uint64_t)v5);
    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v19, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D141BA80((uint64_t)v5, &qword_1EFC63410);
    swift_endAccess();
    if (qword_1ED935B68 != -1)
      swift_once();
    v20 = sub_1D166D964();
    sub_1D141AC1C(v20, (uint64_t)qword_1ED936590);
    v21 = forRecord.super.isa;
    v22 = sub_1D166D94C();
    v23 = sub_1D166DD84();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v32[0] = v25;
      *(_DWORD *)v24 = 136315138;
      v26 = -[objc_class recordID](v21, sel_recordID);
      v27 = objc_msgSend(v26, sel_recordName);

      v28 = sub_1D166DACC();
      v30 = v29;

      v31 = sub_1D141BCB4(v28, v30, v32);
      sub_1D166DF28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D1413000, v22, v23, "Record update succeeded, but could not find metadata in map for %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v25, -1, -1);
      MEMORY[0x1D17EB0AC](v24, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1D15FF604((uint64_t)v5, (uint64_t)v9);
    swift_endAccess();
    objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_database), sel_updateRecoverableMessageSyncState_forMessageRowID_onPartIndex_, 1, *((_QWORD *)v9 + 4), *((_QWORD *)v9 + 7));
    swift_unknownObjectRelease();
    sub_1D1646AAC((uint64_t)v9);
  }
}

void RecoverableMessageStore.recordUpdateFailed(forID:localGUID:error:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1D1646B2C(a1, a4);
}

void RecoverableMessageStore.batchOfRecordIDsToDelete(limit:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9E0];
  v3 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_synchronousDatabase), sel_recoverableMessagesMetadataPendingCloudKitDeleteWithLimit_, a1);
  swift_unknownObjectRelease();
  sub_1D141AC58(&qword_1ED935B90);
  v4 = sub_1D166DBEC();

  v5 = (void *)MEMORY[0x1D17EA62C]();
  sub_1D1644F80(v4, v1, (uint64_t)&v6);
  objc_autoreleasePoolPop(v5);
  if (v2)
    __break(1u);
  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1D1644F80(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  id v47;
  uint64_t v49;
  _QWORD *v50;

  v49 = *(_QWORD *)(result + 16);
  if (!v49)
    return result;
  v3 = 0;
  swift_bridgeObjectRetain();
  while (1)
  {
    v4 = swift_bridgeObjectRetain();
    v5 = sub_1D1647004(v4);
    if (!v5)
    {
      if (qword_1ED935B68 != -1)
        swift_once();
      v14 = sub_1D166D964();
      sub_1D141AC1C(v14, (uint64_t)qword_1ED936590);
      swift_bridgeObjectRetain();
      v15 = sub_1D166D94C();
      v16 = sub_1D166DD84();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v18 = swift_slowAlloc();
        v50 = (_QWORD *)v18;
        *(_DWORD *)v17 = 136315138;
        swift_bridgeObjectRetain();
        v19 = sub_1D166DA3C();
        v21 = v20;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 4) = sub_1D141BCB4(v19, v21, (uint64_t *)&v50);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D1413000, v15, v16, "Could not create delete sync CKRecord for %s", (uint8_t *)v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v18, -1, -1);
        MEMORY[0x1D17EB0AC](v17, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_4;
    }
    v8 = v5;
    v9 = v6;
    v10 = v7;
    v11 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v11 = v6 & 0xFFFFFFFFFFFFLL;
    if (!v11)
    {
      swift_bridgeObjectRelease();
      if (qword_1ED935B68 != -1)
        swift_once();
      v22 = sub_1D166D964();
      sub_1D141AC1C(v22, (uint64_t)qword_1ED936590);
      swift_bridgeObjectRetain();
      v23 = sub_1D166D94C();
      v24 = sub_1D166DD84();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc();
        v26 = swift_slowAlloc();
        v50 = (_QWORD *)v26;
        *(_DWORD *)v25 = 136315138;
        swift_bridgeObjectRetain();
        v27 = sub_1D166DA3C();
        v29 = v28;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v25 + 4) = sub_1D141BCB4(v27, v29, (uint64_t *)&v50);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D1413000, v23, v24, "messageGUID is empty or nil for recoverableMessage %s", (uint8_t *)v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v26, -1, -1);
        MEMORY[0x1D17EB0AC](v25, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(*(_QWORD *)a3 + 16))
    {
      v12 = v8;
      sub_1D1616458((uint64_t)v12);
      if ((v13 & 1) != 0)
      {
        swift_bridgeObjectRelease();

        goto LABEL_4;
      }

    }
    v30 = v8;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v50 = *(_QWORD **)a3;
    v32 = (uint64_t)v50;
    *(_QWORD *)a3 = 0x8000000000000000;
    v34 = sub_1D1616458((uint64_t)v30);
    v35 = *(_QWORD *)(v32 + 16);
    v36 = (v33 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
      break;
    v38 = v33;
    if (*(_QWORD *)(v32 + 24) >= v37)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1D164D0E4();
    }
    else
    {
      sub_1D164BB48(v37, isUniquelyReferenced_nonNull_native);
      v39 = sub_1D1616458((uint64_t)v30);
      if ((v38 & 1) != (v40 & 1))
        goto LABEL_37;
      v34 = v39;
    }
    v41 = v50;
    if ((v38 & 1) != 0)
    {
      v42 = (_QWORD *)(v50[7] + 16 * v34);
      swift_bridgeObjectRelease();
      *v42 = v9;
      v42[1] = v10;
    }
    else
    {
      v50[(v34 >> 6) + 8] |= 1 << v34;
      *(_QWORD *)(v41[6] + 8 * v34) = v30;
      v43 = (_QWORD *)(v41[7] + 16 * v34);
      *v43 = v9;
      v43[1] = v10;
      v44 = v41[2];
      v45 = __OFADD__(v44, 1);
      v46 = v44 + 1;
      if (v45)
        goto LABEL_36;
      v41[2] = v46;
      v47 = v30;
    }
    *(_QWORD *)a3 = v41;

    swift_bridgeObjectRelease();
LABEL_4:
    if (v49 == ++v3)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935BB0);
  result = sub_1D166E21C();
  __break(1u);
  return result;
}

uint64_t sub_1D16455F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  id v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  double v26;
  id v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  void *v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v53;
  id v54;
  char v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81[2];
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;

  v80 = a4;
  v7 = sub_1D141AC58(&qword_1ED9354E8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v71 - v11;
  v13 = sub_1D166D628();
  v14 = *(_QWORD **)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v81, "messageRowID");
  BYTE5(v81[1]) = 0;
  HIWORD(v81[1]) = -5120;
  sub_1D166E048();
  if (*(_QWORD *)(a3 + 16) && (v17 = sub_1D141B48C((uint64_t)&v82), (v18 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(a3 + 56) + 32 * v17, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  sub_1D1607C44((uint64_t)&v82);
  if (!*((_QWORD *)&v85 + 1))
    goto LABEL_36;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_37;
  v79 = v81[0];
  strcpy((char *)v81, "messageGUID");
  HIDWORD(v81[1]) = -352321536;
  sub_1D166E048();
  if (*(_QWORD *)(a3 + 16) && (v19 = sub_1D141B48C((uint64_t)&v82), (v20 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(a3 + 56) + 32 * v19, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  sub_1D1607C44((uint64_t)&v82);
  if (!*((_QWORD *)&v85 + 1))
    goto LABEL_36;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_37:
    if (qword_1ED935B68 != -1)
      swift_once();
    v40 = sub_1D166D964();
    sub_1D141AC1C(v40, (uint64_t)qword_1ED936590);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v41 = sub_1D166D94C();
    v42 = sub_1D166DD84();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      *(_QWORD *)&v82 = v44;
      *(_DWORD *)v43 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v84 = sub_1D141BCB4(a1, a2, (uint64_t *)&v82);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2080;
      swift_bridgeObjectRetain();
      v45 = sub_1D166DA3C();
      v47 = v46;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v84 = sub_1D141BCB4(v45, v47, (uint64_t *)&v82);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D1413000, v41, v42, "Could not create CKRecord in zone %s for metadata dictionary %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v44, -1, -1);
      MEMORY[0x1D17EB0AC](v43, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_42;
  }
  v21 = v81[1];
  v78 = v81[0];
  strcpy((char *)v81, "chatGUID");
  BYTE1(v81[1]) = 0;
  WORD1(v81[1]) = 0;
  HIDWORD(v81[1]) = -402653184;
  sub_1D166E048();
  if (*(_QWORD *)(a3 + 16))
  {
    v22 = sub_1D141B48C((uint64_t)&v82);
    if ((v23 & 1) != 0)
    {
      sub_1D141B3A8(*(_QWORD *)(a3 + 56) + 32 * v22, (uint64_t)&v84);
    }
    else
    {
      v84 = 0u;
      v85 = 0u;
    }
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  sub_1D1607C44((uint64_t)&v82);
  if (!*((_QWORD *)&v85 + 1))
  {
LABEL_35:
    swift_bridgeObjectRelease();
LABEL_36:
    sub_1D141BA80((uint64_t)&v84, &qword_1ED935840);
    goto LABEL_37;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  v76 = v81[0];
  v77 = v81[1];
  v81[0] = (id)0xD000000000000012;
  v81[1] = (id)0x80000001D1699240;
  sub_1D166E048();
  if (*(_QWORD *)(a3 + 16))
  {
    v24 = sub_1D141B48C((uint64_t)&v82);
    if ((v25 & 1) != 0)
    {
      sub_1D141B3A8(*(_QWORD *)(a3 + 56) + 32 * v24, (uint64_t)&v84);
    }
    else
    {
      v84 = 0u;
      v85 = 0u;
    }
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  sub_1D1607C44((uint64_t)&v82);
  if (!*((_QWORD *)&v85 + 1))
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935800);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  v75 = v21;
  v74 = v81[0];
  objc_msgSend(v81[0], sel_doubleValue);
  v27 = objc_msgSend((id)objc_opt_self(), sel___im_dateWithNanosecondTimeIntervalSinceReferenceDate_, v26);
  v28 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v14[7];
  if (!v27)
    goto LABEL_29;
  v29 = v27;
  v73 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v14[7];
  v28(v10, 1, 1, v13);
  sub_1D15FC784(&qword_1EFC634C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08E8]);
  v72 = v29;
  sub_1D166E1A4();

  v30 = (uint64_t (*)(char *, uint64_t, uint64_t))v14[6];
  v31 = v30(v10, 1, v13);
  v28 = v73;
  if (v31 == 1)
  {
LABEL_29:
    v28(v12, 1, 1, v13);
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D141BA80((uint64_t)v12, &qword_1ED9354E8);
    if (qword_1ED935B68 != -1)
      swift_once();
    v32 = sub_1D166D964();
    sub_1D141AC1C(v32, (uint64_t)qword_1ED936590);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v33 = sub_1D166D94C();
    v34 = sub_1D166DD84();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v79 = (id)swift_slowAlloc();
      *(_QWORD *)&v82 = v79;
      *(_DWORD *)v35 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v84 = sub_1D141BCB4(a1, a2, (uint64_t *)&v82);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      v36 = sub_1D166DA3C();
      v38 = v37;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v84 = sub_1D141BCB4(v36, v38, (uint64_t *)&v82);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D1413000, v33, v34, "Could not create CKRecord in zone %s due to missing date for metadata dictionary %s", (uint8_t *)v35, 0x16u);
      v39 = v79;
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v39, -1, -1);
      MEMORY[0x1D17EB0AC](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

LABEL_42:
    v48 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v80, 1, 1, v48);
  }
  v50 = (void (*)(char *, char *, uint64_t))v14[4];
  v51 = v10;
  v52 = v73;
  v50(v12, v51, v13);
  v52(v12, 0, 1, v13);
  if (v30(v12, 1, v13) == 1)
    goto LABEL_30;
  v50(v16, v12, v13);
  strcpy((char *)v81, "partBody");
  BYTE1(v81[1]) = 0;
  WORD1(v81[1]) = 0;
  HIDWORD(v81[1]) = -402653184;
  sub_1D166E048();
  if (*(_QWORD *)(a3 + 16))
  {
    v53 = sub_1D141B48C((uint64_t)&v82);
    v54 = v79;
    if ((v55 & 1) != 0)
    {
      sub_1D141B3A8(*(_QWORD *)(a3 + 56) + 32 * v53, (uint64_t)&v84);
    }
    else
    {
      v84 = 0u;
      v85 = 0u;
    }
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
    v54 = v79;
  }
  sub_1D1607C44((uint64_t)&v82);
  if (*((_QWORD *)&v85 + 1))
  {
    sub_1D15FD3C0(0, &qword_1EFC61E10);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v79 = v50;
      v56 = v81[0];
      v57 = (void *)*MEMORY[0x1E0D366B8];
      v58 = v81[0];
      v59 = v57;
      v60 = objc_msgSend(v58, sel_attributesAtIndex_effectiveRange_, 0, 0);
      type metadata accessor for Key(0);
      sub_1D15FC784(&qword_1EFC61790, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D1683ABC);
      v61 = sub_1D166DA30();

      if (*(_QWORD *)(v61 + 16))
      {
        v62 = sub_1D1616488((uint64_t)v59);
        if ((v63 & 1) != 0)
        {
          sub_1D141B3A8(*(_QWORD *)(v61 + 56) + 32 * v62, (uint64_t)&v82);
        }
        else
        {
          v82 = 0u;
          v83 = 0u;
        }
      }
      else
      {
        v82 = 0u;
        v83 = 0u;
        v66 = v59;
      }
      v50 = (void (*)(char *, char *, uint64_t))v79;
      swift_bridgeObjectRelease();

      if (*((_QWORD *)&v83 + 1))
      {
        if (swift_dynamicCast())
        {
          v65 = v84;
LABEL_67:
          v64 = 1;
          goto LABEL_68;
        }
      }
      else
      {
        sub_1D141BA80((uint64_t)&v82, &qword_1ED935840);
      }
      v65 = -1;
      goto LABEL_67;
    }
  }
  else
  {
    sub_1D141BA80((uint64_t)&v84, &qword_1ED935840);
  }

  v64 = 0;
  v56 = 0;
  v65 = -1;
LABEL_68:
  v67 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
  v68 = v80;
  v50((char *)(v80 + *(int *)(v67 + 40)), v16, v13);
  v69 = v77;
  *(_QWORD *)v68 = v76;
  *(_QWORD *)(v68 + 8) = v69;
  v70 = v75;
  *(_QWORD *)(v68 + 16) = v78;
  *(_QWORD *)(v68 + 24) = v70;
  *(_QWORD *)(v68 + 32) = v54;
  *(_QWORD *)(v68 + 40) = v56;
  *(_BYTE *)(v68 + 48) = v64;
  *(_QWORD *)(v68 + 56) = v65;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v68, 0, 1, v67);
}

id RecoverableMessageStore.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id RecoverableMessageStore.init()()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR___IMDRecoverableMessageStore_metadataByRecordNameMap] = MEMORY[0x1E0DEE9E0];
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

id RecoverableMessageStore.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D16462E8(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  BOOL v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (!v4 && (sub_1D166E1E0() & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (!v5 && (sub_1D166E1E0() & 1) == 0 || *(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
    return 0;
  v6 = *(void **)(a1 + 40);
  v7 = *(void **)(a2 + 40);
  if (v6)
  {
    if (!v7)
      return 0;
    sub_1D15FD3C0(0, &qword_1EFC61E10);
    v8 = v7;
    v9 = v6;
    v10 = sub_1D166DEE0();

    if ((v10 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56))
  {
    type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
    return sub_1D166D5F8();
  }
  return 0;
}

unint64_t sub_1D1646414(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  unint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];
  id v53;

  v2 = v1;
  v3 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_synchronousDatabase), sel_recoverableMessagesMetadataPendingCloudKitSaveWithLimit_, a1);
  swift_unknownObjectRelease();
  sub_1D141AC58(&qword_1ED935B90);
  v4 = sub_1D166DBEC();

  v5 = (_QWORD *)(v2 + OBJC_IVAR___IMDRecoverableMessageStore_metadataByRecordNameMap);
  swift_beginAccess();
  v51 = (uint64_t)v5;
  *v5 = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  v50 = *(_QWORD *)(v4 + 16);
  if (!v50)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED935B68 != -1)
      goto LABEL_40;
    goto LABEL_29;
  }
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v6)
  {
    __break(1u);
LABEL_42:
    result = sub_1D166E21C();
    __break(1u);
    return result;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_recoverableMessageRecordZoneID);

  v53 = v8;
  if (!v8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED935B68 != -1)
      swift_once();
    v44 = sub_1D166D964();
    sub_1D141AC1C(v44, (uint64_t)qword_1ED936590);
    v45 = sub_1D166D94C();
    v46 = sub_1D166DD84();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_1D1413000, v45, v46, "There is no zone in IMDRecordZoneManager for recoverableMessages", v47, 2u);
      MEMORY[0x1D17EB0AC](v47, -1, -1);
    }

    return sub_1D160F7F8(MEMORY[0x1E0DEE9D8]);
  }
  v9 = 0;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    swift_beginAccess();
    v11 = (void *)swift_bridgeObjectRetain();
    v12 = sub_1D1644118(v11, (uint64_t)v53, v51);
    v14 = v13;
    v16 = v15;
    swift_endAccess();
    if (!v12)
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0)
      v17 = v14 & 0xFFFFFFFFFFFFLL;
    if (!v17)
    {
      swift_bridgeObjectRelease();
      if (qword_1ED935B68 != -1)
        swift_once();
      v28 = sub_1D166D964();
      sub_1D141AC1C(v28, (uint64_t)qword_1ED936590);
      swift_bridgeObjectRetain();
      v29 = sub_1D166D94C();
      v30 = sub_1D166DD84();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = swift_slowAlloc();
        v49 = swift_slowAlloc();
        v52[0] = v49;
        *(_DWORD *)v31 = 136315138;
        swift_bridgeObjectRetain();
        v32 = sub_1D166DA3C();
        v34 = v33;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v31 + 4) = sub_1D141BCB4(v32, v34, v52);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D1413000, v29, v30, "messageGUID is empty or nil for recoverableMessage %s", (uint8_t *)v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v49, -1, -1);
        MEMORY[0x1D17EB0AC](v31, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    v18 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52[0] = (uint64_t)v10;
    v21 = sub_1D16162CC(v14, v16);
    v22 = v10[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (v10[3] >= v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1D164D6A8();
    }
    else
    {
      sub_1D164C490(v24, isUniquelyReferenced_nonNull_native);
      v26 = sub_1D16162CC(v14, v16);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_42;
      v21 = v26;
    }
    v10 = (_QWORD *)v52[0];
    if ((v25 & 1) != 0)
    {
      v35 = *(_QWORD *)(v52[0] + 56);

      *(_QWORD *)(v35 + 8 * v21) = v18;
    }
    else
    {
      *(_QWORD *)(v52[0] + 8 * (v21 >> 6) + 64) |= 1 << v21;
      v36 = (uint64_t *)(v10[6] + 16 * v21);
      *v36 = v14;
      v36[1] = v16;
      *(_QWORD *)(v10[7] + 8 * v21) = v18;
      v37 = v10[2];
      v38 = __OFADD__(v37, 1);
      v39 = v37 + 1;
      if (v38)
        goto LABEL_39;
      v10[2] = v39;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    if (v50 == ++v9)
    {

      swift_bridgeObjectRelease();
      return (unint64_t)v10;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  swift_once();
LABEL_29:
  v40 = sub_1D166D964();
  sub_1D141AC1C(v40, (uint64_t)qword_1ED936590);
  v41 = sub_1D166D94C();
  v42 = sub_1D166DD84();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    _os_log_impl(&dword_1D1413000, v41, v42, "Recently Deleted | No recoverable messages data to sync", v43, 2u);
    MEMORY[0x1D17EB0AC](v43, -1, -1);
  }

  return MEMORY[0x1E0DEE9E0];
}

uint64_t type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata()
{
  uint64_t result;

  result = qword_1EFC63478;
  if (!qword_1EFC63478)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D1646AAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D1646AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1D1646B2C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];

  v5 = sub_1D141AC58(&qword_1EFC63410);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v41[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_recordName);
  v13 = sub_1D166DACC();
  v15 = v14;

  v16 = (uint64_t *)(v2 + OBJC_IVAR___IMDRecoverableMessageStore_metadataByRecordNameMap);
  swift_beginAccess();
  v17 = *v16;
  if (*(_QWORD *)(v17 + 16) && (v18 = sub_1D16162CC(v13, v15), (v19 & 1) != 0))
  {
    sub_1D1646AE8(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v9 + 72) * v18, (uint64_t)v7);
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v20, 1, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1D141BA80((uint64_t)v7, &qword_1EFC63410);
    swift_endAccess();
    if (qword_1ED935B68 != -1)
      swift_once();
    v21 = sub_1D166D964();
    sub_1D141AC1C(v21, (uint64_t)qword_1ED936590);
    v22 = a1;
    v23 = sub_1D166D94C();
    v24 = sub_1D166DD84();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v41[0] = v26;
      *(_DWORD *)v25 = 136315138;
      v27 = objc_msgSend(v22, sel_recordName);
      v28 = sub_1D166DACC();
      v30 = v29;

      v40 = sub_1D141BCB4(v28, v30, v41);
      sub_1D166DF28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D1413000, v23, v24, "No record metadata for recordName: %s!", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v26, -1, -1);
      MEMORY[0x1D17EB0AC](v25, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1D15FF604((uint64_t)v7, (uint64_t)v11);
    swift_endAccess();
    if (qword_1ED935B68 != -1)
      swift_once();
    v31 = sub_1D166D964();
    sub_1D141AC1C(v31, (uint64_t)qword_1ED936590);
    v32 = a2;
    v33 = a2;
    v34 = sub_1D166D94C();
    v35 = sub_1D166DD84();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v36 = 138412290;
      v38 = a2;
      v39 = _swift_stdlib_bridgeErrorToNSError();
      v41[0] = v39;
      sub_1D166DF28();
      *v37 = v39;

      _os_log_impl(&dword_1D1413000, v34, v35, "Encountered error during recoverableMessage write %@, updating status to synced", v36, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v37, -1, -1);
      MEMORY[0x1D17EB0AC](v36, -1, -1);
    }
    else
    {

    }
    objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_database), sel_updateRecoverableMessageSyncState_forMessageRowID_onPartIndex_, 1, *((_QWORD *)v11 + 4), *((_QWORD *)v11 + 7));
    swift_unknownObjectRelease();
    sub_1D1646AAC((uint64_t)v11);
  }
}

id sub_1D1647004(uint64_t a1)
{
  id result;
  void *v3;
  id v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  unint64_t v13;
  char v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44[5];
  __int128 v45;
  __int128 v46;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!result)
  {
    __break(1u);
    goto LABEL_49;
  }
  v3 = result;
  v4 = objc_msgSend(result, sel_recoverableMessageRecordZone);

  if (!v4)
  {
    if (qword_1ED935B68 != -1)
      swift_once();
    v9 = sub_1D166D964();
    sub_1D141AC1C(v9, (uint64_t)qword_1ED936590);
    v10 = sub_1D166D94C();
    v11 = sub_1D166DD84();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1D1413000, v10, v11, "Recoverable Message Zone is nil in IMDRecordZoneManager", v12, 2u);
      MEMORY[0x1D17EB0AC](v12, -1, -1);
    }

    return 0;
  }
  sub_1D166E048();
  if (*(_QWORD *)(a1 + 16) && (v5 = sub_1D141B48C((uint64_t)v44), (v6 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(a1 + 56) + 32 * v5, (uint64_t)&v45);
  }
  else
  {
    v45 = 0u;
    v46 = 0u;
  }
  sub_1D1607C44((uint64_t)v44);
  if (!*((_QWORD *)&v46 + 1))
  {
LABEL_32:
    sub_1D141BA80((uint64_t)&v45, &qword_1ED935840);
    goto LABEL_33;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_33;
  sub_1D166E048();
  if (*(_QWORD *)(a1 + 16) && (v7 = sub_1D141B48C((uint64_t)v44), (v8 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v45);
  }
  else
  {
    v45 = 0u;
    v46 = 0u;
  }
  sub_1D1607C44((uint64_t)v44);
  if (!*((_QWORD *)&v46 + 1))
  {
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  sub_1D166E048();
  if (*(_QWORD *)(a1 + 16) && (v13 = sub_1D141B48C((uint64_t)v44), (v14 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)&v45);
  }
  else
  {
    v45 = 0u;
    v46 = 0u;
  }
  sub_1D1607C44((uint64_t)v44);
  if (!*((_QWORD *)&v46 + 1))
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v15 = result;
    v16 = objc_msgSend(result, sel_cachedSalt);

    if (v16)
    {
      v44[0] = 0x476567617373656DLL;
      v44[1] = 0xEB00000000444955;
      swift_bridgeObjectRetain();
      sub_1D166DB5C();
      sub_1D166DB5C();
      swift_bridgeObjectRelease();
      sub_1D166DB5C();
      *(_QWORD *)&v45 = 0x65646E4974726170;
      sub_1D166E1BC();
      sub_1D166DB5C();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v4, sel_zoneID);
      v18 = (void *)objc_opt_self();
      v19 = v17;
      v20 = (void *)sub_1D166DAA8();
      swift_bridgeObjectRelease();
      v21 = objc_msgSend(v18, sel_recordIDUsingSalt_zoneID_guid_, v16, v19, v20);

      if (v21)
      {

        return v21;
      }
      swift_bridgeObjectRelease();
      if (qword_1ED935B68 != -1)
        swift_once();
      v35 = sub_1D166D964();
      sub_1D141AC1C(v35, (uint64_t)qword_1ED936590);
      swift_bridgeObjectRetain_n();
      v36 = sub_1D166D94C();
      v37 = sub_1D166DD84();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        v39 = swift_slowAlloc();
        v44[0] = v39;
        *(_DWORD *)v38 = 136315138;
        swift_bridgeObjectRetain();
        v40 = sub_1D166DA3C();
        v42 = v41;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v45 = sub_1D141BCB4(v40, v42, v44);
        sub_1D166DF28();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D1413000, v36, v37, "Recently deleted: returning nil record. recordID nil for metadata: %s", v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v39, -1, -1);
        MEMORY[0x1D17EB0AC](v38, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_33:
    if (qword_1ED935B68 != -1)
      swift_once();
    v22 = sub_1D166D964();
    sub_1D141AC1C(v22, (uint64_t)qword_1ED936590);
    swift_bridgeObjectRetain_n();
    v23 = v4;
    v24 = sub_1D166D94C();
    v25 = sub_1D166DD84();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v43 = swift_slowAlloc();
      v44[0] = v43;
      *(_DWORD *)v26 = 136315394;
      v27 = objc_msgSend(v23, sel_zoneID);
      v28 = objc_msgSend(v27, sel_zoneName);

      v29 = sub_1D166DACC();
      v31 = v30;

      *(_QWORD *)&v45 = sub_1D141BCB4(v29, v31, v44);
      sub_1D166DF28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v32 = sub_1D166DA3C();
      v34 = v33;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v45 = sub_1D141BCB4(v32, v34, v44);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D1413000, v24, v25, "Could not create CKRecord in zone %s for tombstone dictionary %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v43, -1, -1);
      MEMORY[0x1D17EB0AC](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t _s12IMDaemonCore23RecoverableMessageStoreC15clearTombstones12forRecordIDsySaySo10CKRecordIDCG_tF_0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  if (qword_1ED935B68 != -1)
    swift_once();
  v0 = sub_1D166D964();
  sub_1D141AC1C(v0, (uint64_t)qword_1ED936590);
  swift_bridgeObjectRetain_n();
  v1 = sub_1D166D94C();
  v2 = sub_1D166DD9C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v11 = v4;
    *(_DWORD *)v3 = 136315138;
    v5 = sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935BB0);
    v6 = swift_bridgeObjectRetain();
    v7 = MEMORY[0x1D17E8B08](v6, v5);
    v9 = v8;
    swift_bridgeObjectRelease();
    sub_1D141BCB4(v7, v9, &v11);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v1, v2, "Clearing recoverable message tombstones for recordIDs: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v4, -1, -1);
    MEMORY[0x1D17EB0AC](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_synchronousDatabase), sel_clearRecoverableMessageTombStones);
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for RecoverableMessageStore()
{
  return objc_opt_self();
}

_QWORD *sub_1D1647B00(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = (void *)a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v8 = *(int *)(a3 + 40);
    v9 = (uint64_t)a2 + v8;
    v10 = a1 + v8;
    *(_QWORD *)(a1 + 56) = a2[7];
    v11 = sub_1D166D628();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = v7;
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t sub_1D1647BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1D166D628();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1D1647C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(int *)(a3 + 40);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = sub_1D166D628();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = v6;
  v11(v9, v8, v10);
  return a1;
}

uint64_t sub_1D1647CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(void **)(a1 + 40);
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = v7;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v9 = *(int *)(a3 + 40);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1D166D628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_1D1647D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(int *)(a3 + 40);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v9 = sub_1D166D628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t sub_1D1647E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 40);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v9;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(int *)(a3 + 40);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1D166D628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_1D1647EA4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D1647EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D166D628();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_1D1647F2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D1647F38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D166D628();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D1647FAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D166D628();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D1648044(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v41 = type metadata accessor for PlainTextEmojiTapbackParser.MatchingInfo();
  v45 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1D141AC58(&qword_1EFC634D0);
  v40 = *(_QWORD *)(v44 - 8);
  v5 = MEMORY[0x1E0C80A78](v44);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v46 = (char *)&v38 - v8;
  v9 = sub_1D166D8D4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D141AC58(&qword_1EFC634D8);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v15);
  v21 = (char *)&v38 - v20;
  if (v19 == 2006 || v19 == 3006)
  {
    v39 = v19;
    v47 = a1;
    v48 = a2;
    sub_1D141AC58(&qword_1EFC634E0);
    sub_1D166D8E0();
    sub_1D166D8C8();
    sub_1D166D8F8();
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v23 = *(void (**)(char *, uint64_t))(v14 + 8);
    v23(v17, v13);
    sub_1D163369C();
    sub_1D160F064(&qword_1EFC634E8, &qword_1EFC634D8, MEMORY[0x1E0DF1F60]);
    v24 = sub_1D166DA60();
    v25 = ((uint64_t (*)(char *, uint64_t))v23)(v21, v13);
    if (*(_QWORD *)(v24 + 16) == 3)
    {
      MEMORY[0x1E0C80A78](v25);
      *(&v38 - 2) = v24;
      sub_1D160F064(&qword_1EFC634F0, &qword_1EFC634D0, MEMORY[0x1E0DF1F60]);
      v26 = v44;
      sub_1D166D8EC();
      sub_1D166D8C8();
      v27 = v46;
      sub_1D166D8F8();
      v22(v12, v9);
      v28 = v40;
      v29 = *(void (**)(char *, uint64_t))(v40 + 8);
      v29(v7, v26);
      v30 = (uint64_t)v43;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v43, v27, v26);
      v31 = v41;
      v32 = v42;
      *(_QWORD *)(v30 + *(int *)(v41 + 20)) = v24;
      *(_QWORD *)(v30 + *(int *)(v31 + 24)) = v39;
      v33 = (unint64_t *)(v32 + 16);
      swift_beginAccess();
      v34 = *(_QWORD *)(v32 + 16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v32 + 16) = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v34 = sub_1D160DFC8(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
        *v33 = v34;
      }
      v37 = *(_QWORD *)(v34 + 16);
      v36 = *(_QWORD *)(v34 + 24);
      if (v37 >= v36 >> 1)
      {
        v34 = sub_1D160DFC8(v36 > 1, v37 + 1, 1, v34);
        *v33 = v34;
      }
      *(_QWORD *)(v34 + 16) = v37 + 1;
      sub_1D1648BB8(v30, v34+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v37);
      swift_endAccess();
      return ((uint64_t (*)(char *, uint64_t))v29)(v46, v26);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t type metadata accessor for PlainTextEmojiTapbackParser.MatchingInfo()
{
  uint64_t result;

  result = qword_1EFC63618;
  if (!qword_1EFC63618)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D16484A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  void (*v9)(_BYTE *, uint64_t);
  _BYTE v11[16];
  uint64_t v12;

  v2 = sub_1D141AC58(&qword_1EFC63660);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v11[-v7];
  v12 = a1;
  sub_1D166D730();
  sub_1D160F064(&qword_1EFC63668, &qword_1EFC63660, MEMORY[0x1E0DEFED0]);
  sub_1D166D6E8();
  v9 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v9(v6, v2);
  sub_1D166D70C();
  return ((uint64_t (*)(_BYTE *, uint64_t))v9)(v8, v2);
}

uint64_t sub_1D16485BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v33 = a2;
  v3 = sub_1D141AC58(&qword_1EFC634D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1D166D8BC();
  v6 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D141AC58(&qword_1EFC63660);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v28 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    __break(1u);
    goto LABEL_6;
  }
  v31 = v6;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v40 = *(_OWORD *)(a1 + 32);
  v41 = v18;
  v42 = v19;
  sub_1D16336E0();
  result = sub_1D166D6E8();
  if (v17 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(_QWORD *)(a1 + 88);
  v37 = *(_OWORD *)(a1 + 64);
  v38 = v20;
  v39 = v21;
  result = sub_1D166D6E8();
  if (v17 >= 3)
  {
    v22 = *(_QWORD *)(a1 + 112);
    v23 = *(_QWORD *)(a1 + 120);
    v34 = *(_OWORD *)(a1 + 96);
    v35 = v22;
    v36 = v23;
    v24 = MEMORY[0x1E0DEBAF0];
    sub_1D166D6E8();
    v34 = v43;
    v35 = v44;
    v36 = v45;
    v30 = v16;
    sub_1D166D6F4();
    swift_bridgeObjectRelease();
    v34 = v40;
    v35 = v41;
    v36 = v42;
    sub_1D166D718();
    sub_1D160F064(&qword_1EFC63668, &qword_1EFC63660, MEMORY[0x1E0DEFED0]);
    sub_1D166D8B0();
    v25 = v32;
    v29 = v10;
    v26 = *(void (**)(char *, uint64_t))(v31 + 8);
    v26(v8, v32);
    MEMORY[0x1D17E8634](v5, v24);
    swift_bridgeObjectRelease();
    v34 = v37;
    v35 = v38;
    v36 = v39;
    sub_1D166D718();
    sub_1D166D8B0();
    v26(v8, v25);
    MEMORY[0x1D17E8634](v5, v24);
    swift_bridgeObjectRelease();
    v27 = *(void (**)(char *, uint64_t))(v29 + 8);
    v27(v13, v9);
    return ((uint64_t (*)(char *, uint64_t))v27)(v30, v9);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D16488C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a1;
  v42 = a2;
  v5 = type metadata accessor for PlainTextEmojiTapbackParser.MatchingInfo();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(result + 16);
  if (!v10)
  {
    v24 = 0;
    v26 = 0;
    v29 = 0;
    v30 = 0;
LABEL_13:
    *a3 = v24;
    a3[1] = v26;
    a3[2] = v29;
    a3[3] = v30;
    a3[4] = v10;
    return result;
  }
  v37 = v5;
  v38 = a3;
  v11 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v12 = *(_QWORD *)(v6 + 72);
  v39 = result;
  swift_bridgeObjectRetain();
  v13 = &qword_1EFC634D0;
  v14 = MEMORY[0x1E0DF1F60];
  v40 = v8;
  while (1)
  {
    sub_1D1648BFC(v11, (uint64_t)v8);
    v43 = v41;
    v44 = v42;
    sub_1D141AC58(v13);
    sub_1D163369C();
    sub_1D160F064(&qword_1EFC634F0, v13, v14);
    v15 = (_QWORD *)sub_1D166DA60();
    v16 = v15;
    if (v15[2] == 2)
      break;
    sub_1D1648C40((uint64_t)v8);
    swift_bridgeObjectRelease();
LABEL_4:
    v11 += v12;
    if (!--v10)
    {
      result = swift_bridgeObjectRelease();
      v24 = 0;
      v26 = 0;
      v29 = 0;
      v30 = 0;
LABEL_12:
      a3 = v38;
      goto LABEL_13;
    }
  }
  v17 = v13;
  v18 = v12;
  v19 = v14;
  v20 = v15[4];
  v21 = v15[5];
  v23 = v15[6];
  v22 = v15[7];
  swift_bridgeObjectRetain();
  v24 = MEMORY[0x1D17E8A0C](v20, v21, v23, v22);
  v26 = v25;
  swift_bridgeObjectRelease();
  v27 = (void *)sub_1D166DAA8();
  LODWORD(v23) = CEMStringIsSingleEmoji();

  if (!(_DWORD)v23)
  {
    v28 = (uint64_t)v40;
    sub_1D1648C40((uint64_t)v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v19;
    v12 = v18;
    v13 = v17;
    v8 = (char *)v28;
    goto LABEL_4;
  }
  result = swift_bridgeObjectRelease();
  if (v16[2] >= 2uLL)
  {
    v31 = v16[8];
    v32 = v16[9];
    v33 = v16[10];
    v34 = v16[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1D17E8A0C](v31, v32, v33, v34);
    v30 = v35;
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)&v40[*(int *)(v37 + 24)];
    result = sub_1D1648C40((uint64_t)v40);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t PlainTextEmojiTapbackParser.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PlainTextEmojiTapbackParser.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D1648BB0()
{
  uint64_t v0;

  return sub_1D16484A0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D1648BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlainTextEmojiTapbackParser.MatchingInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D1648BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlainTextEmojiTapbackParser.MatchingInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D1648C40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlainTextEmojiTapbackParser.MatchingInfo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PlainTextEmojiTapbackParser()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlainTextEmojiTapbackParser()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlainTextEmojiTapbackParser.addPossibleMatch(localizedString:associatedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PlainTextEmojiTapbackParser.result(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t *sub_1D1648CC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D141AC58(&qword_1EFC634D0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1D1648D58(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D141AC58(&qword_1EFC634D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D1648DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D141AC58(&qword_1EFC634D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D1648E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D141AC58(&qword_1EFC634D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1D1648E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D141AC58(&qword_1EFC634D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1D1648EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D141AC58(&qword_1EFC634D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1D1648F64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D1648F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D141AC58(&qword_1EFC634D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1D1648FF0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D1648FFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D141AC58(&qword_1EFC634D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_1D1649078()
{
  unint64_t v0;

  sub_1D16490FC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1D16490FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFC63628[0])
  {
    v0 = sub_1D166D904();
    if (!v1)
      atomic_store(v0, qword_1EFC63628);
  }
}

uint64_t sub_1D1649150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D16485BC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D1649158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1D166E264();
    sub_1D166DB08();
    v6 = sub_1D166E288();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1D166E1E0() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1D166E1E0() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1D164928C()
{
  uint64_t v0;

  v0 = sub_1D166D964();
  sub_1D15FD440(v0, qword_1ED935B28);
  sub_1D141AC1C(v0, (uint64_t)qword_1ED935B28);
  sub_1D166D940();
  return sub_1D166D958();
}

uint64_t sub_1D16492F8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  _QWORD v25[2];

  v1 = sub_1D141AC58(&qword_1ED9356E0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v25 - v5;
  sub_1D141AC58((uint64_t *)&unk_1EFC631B0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1D1683B10;
  *(_QWORD *)(v7 + 56) = sub_1D15FD3C0(0, &qword_1EFC637C0);
  *(_QWORD *)(v7 + 64) = sub_1D164EFA4();
  *(_QWORD *)(v7 + 32) = v0;
  v8 = v0;
  v9 = objc_msgSend(v8, sel_url);
  if (v9)
  {
    v10 = v9;
    sub_1D166D550();

    v11 = sub_1D166D580();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 0, 1, v11);
  }
  else
  {
    v11 = sub_1D166D580();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  }
  sub_1D164EFFC((uint64_t)v4, (uint64_t)v6);
  sub_1D166D580();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    sub_1D164F044((uint64_t)v6);
    v13 = 0;
    v14 = 0;
  }
  else
  {
    v13 = sub_1D166D4F0();
    v14 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
  }
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 96) = MEMORY[0x1E0DEA968];
  v17 = sub_1D15FD2D0();
  *(_QWORD *)(v7 + 104) = v17;
  if (v14)
    v18 = v13;
  else
    v18 = 0x296C6C756E28;
  v19 = 0xE600000000000000;
  if (v14)
    v19 = v14;
  *(_QWORD *)(v7 + 72) = v18;
  *(_QWORD *)(v7 + 80) = v19;
  v20 = objc_msgSend(v8, sel_error);
  if (!v20)
  {
    v23 = (uint64_t *)(v7 + 112);
    *(_QWORD *)(v7 + 136) = v16;
    *(_QWORD *)(v7 + 144) = v17;
    goto LABEL_16;
  }
  v25[1] = v20;
  sub_1D141AC58(&qword_1ED935C28);
  v21 = sub_1D166DAF0();
  v23 = (uint64_t *)(v7 + 112);
  *(_QWORD *)(v7 + 136) = v16;
  *(_QWORD *)(v7 + 144) = v17;
  if (!v22)
  {
LABEL_16:
    *v23 = 0x296C6C756E28;
    v22 = 0xE600000000000000;
    goto LABEL_17;
  }
  *v23 = v21;
LABEL_17:
  *(_QWORD *)(v7 + 120) = v22;
  return sub_1D166DAD8();
}

void sub_1D1649568()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_super v20;
  uint64_t v21;

  v1 = sub_1D166DDFC();
  v18 = *(_QWORD *)(v1 - 8);
  v19 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D166DDF0();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1D166D9F4();
  MEMORY[0x1E0C80A78](v5);
  v6 = OBJC_IVAR___IMDSpotlightDaemonClient_indexes;
  v7 = v0;
  v8 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[v6] = sub_1D160F804(MEMORY[0x1E0DEE9D8]);
  v9 = OBJC_IVAR___IMDSpotlightDaemonClient_interestingProtectionClasses;
  sub_1D141AC58(&qword_1ED935820);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D1683B20;
  *(_QWORD *)(inited + 32) = sub_1D166DACC();
  *(_QWORD *)(inited + 40) = v11;
  v12 = sub_1D160AD90(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  *(_QWORD *)&v7[v9] = v12;
  v13 = OBJC_IVAR___IMDSpotlightDaemonClient_queue;
  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED9357D0);
  sub_1D166D9E8();
  v21 = v8;
  sub_1D15FC784((unint64_t *)&qword_1ED9357C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1D141AC58((uint64_t *)&unk_1ED935760);
  sub_1D162425C((unint64_t *)&qword_1ED935770, (uint64_t *)&unk_1ED935760);
  sub_1D166DF88();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v3, *MEMORY[0x1E0DEF8D0], v19);
  *(_QWORD *)&v7[v13] = sub_1D166DE2C();
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedFeatureFlags);
  LODWORD(v3) = objc_msgSend(v14, sel_isSpotlightDaemonDelegateEnabled);

  if ((_DWORD)v3)
  {
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D360D8]), sel_init);
    *(_QWORD *)&v7[OBJC_IVAR___IMDSpotlightDaemonClient_importer] = v15;

    v20.receiver = v7;
    v20.super_class = (Class)IMDSpotlightDaemonClient;
    v16 = (char *)objc_msgSendSuper2(&v20, sel_init);
    objc_msgSend(*(id *)&v16[OBJC_IVAR___IMDSpotlightDaemonClient_importer], sel_setDelegate_, v16);
  }
  else
  {
    __break(1u);
  }
}

id sub_1D1649888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  id v10;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;

  v5 = (uint64_t *)(v2 + OBJC_IVAR___IMDSpotlightDaemonClient_indexes);
  swift_beginAccess();
  v6 = *v5;
  if (*(_QWORD *)(*v5 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D16162CC(a1, a2);
    if ((v8 & 1) != 0)
    {
      v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7);
      swift_endAccess();
      v10 = v9;
      swift_bridgeObjectRelease();
      return v10;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v12 = objc_allocWithZone(MEMORY[0x1E0CA6B38]);
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1D166DAA8();
  v14 = (void *)sub_1D166DAA8();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v12, sel_initWithName_bundleIdentifier_, v13, v14);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v16 = v15;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *v5;
  *v5 = 0x8000000000000000;
  sub_1D164CCD4((uint64_t)v16, a1, a2, isUniquelyReferenced_nonNull_native);
  *v5 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v16;
}

void sub_1D1649A1C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  void *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t aBlock[6];

  v7 = v6;
  if (qword_1ED935B48 != -1)
    swift_once();
  v11 = sub_1D166D964();
  sub_1D141AC1C(v11, (uint64_t)qword_1ED935B28);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v12 = sub_1D166D94C();
  v13 = sub_1D166DD6C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    aBlock[0] = v15;
    *(_DWORD *)v14 = 136446722;
    sub_1D141BCB4(0xD000000000000044, 0x80000001D1699600, aBlock);
    sub_1D166DF28();
    *(_WORD *)(v14 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a1, a2, aBlock);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2082;
    swift_bridgeObjectRetain();
    v16 = a3;
    sub_1D141BCB4(a3, a4, aBlock);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D1413000, v12, v13, "%{public}s bundleID: %{public}s protectionClass: %{public}s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    v17 = v15;
    v7 = v6;
    MEMORY[0x1D17EB0AC](v17, -1, -1);
    MEMORY[0x1D17EB0AC](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v16 = a3;
  }
  if ((sub_1D1649158(v16, a4, *(_QWORD *)(v7 + OBJC_IVAR___IMDSpotlightDaemonClient_interestingProtectionClasses)) & 1) != 0)
  {
    v18 = *(void **)(v7 + OBJC_IVAR___IMDSpotlightDaemonClient_importer);
    v19 = sub_1D1649888(a1, a2);
    aBlock[4] = a5;
    aBlock[5] = a6;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D141BC88;
    aBlock[3] = (uint64_t)&unk_1E9231AE0;
    v20 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v18, sel_searchableIndex_reindexAllSearchableItemsWithAcknowledgementHandler_, v19, v20);
    _Block_release(v20);
  }
  else
  {
    v19 = sub_1D166D94C();
    v21 = sub_1D166DD6C();
    if (os_log_type_enabled(v19, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1D1413000, v19, v21, "Ignoring reindex request for uninteresting protection class", v22, 2u);
      MEMORY[0x1D17EB0AC](v22, -1, -1);
    }
  }

}

void sub_1D1649E74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  NSObject *v26;
  void *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock[6];

  v8 = v7;
  if (qword_1ED935B48 != -1)
    swift_once();
  v13 = sub_1D166D964();
  sub_1D141AC1C(v13, (uint64_t)qword_1ED935B28);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v14 = sub_1D166D94C();
  v15 = sub_1D166DD6C();
  if (os_log_type_enabled(v14, v15))
  {
    v31 = a5;
    v16 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    aBlock[0] = v30;
    *(_DWORD *)v16 = 136446978;
    sub_1D141BCB4(0xD00000000000004ELL, 0x80000001D16995B0, aBlock);
    sub_1D166DF28();
    *(_WORD *)(v16 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a2, a3, aBlock);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 22) = 2050;
    swift_bridgeObjectRelease();
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 32) = 2080;
    v17 = swift_bridgeObjectRetain();
    v18 = MEMORY[0x1D17E8B08](v17, MEMORY[0x1E0DEA968]);
    v19 = a7;
    v21 = v20;
    swift_bridgeObjectRelease();
    v22 = v18;
    v8 = v7;
    sub_1D141BCB4(v22, v21, aBlock);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    a7 = v19;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v14, v15, "%{public}s bundleID: %{public}s identifiersCount: %{public}ld identifiers: %s", (uint8_t *)v16, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v30, -1, -1);
    v23 = v16;
    a5 = v31;
    MEMORY[0x1D17EB0AC](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if ((sub_1D1649158(a4, a5, *(_QWORD *)(v8 + OBJC_IVAR___IMDSpotlightDaemonClient_interestingProtectionClasses)) & 1) != 0)
  {
    v24 = *(void **)(v8 + OBJC_IVAR___IMDSpotlightDaemonClient_importer);
    v25 = sub_1D1649888(a2, a3);
    v26 = sub_1D166DBD4();
    aBlock[4] = a6;
    aBlock[5] = a7;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D141BC88;
    aBlock[3] = (uint64_t)&unk_1E9231A90;
    v27 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_searchableIndex_reindexSearchableItemsWithIdentifiers_acknowledgementHandler_, v25, v26, v27);
    _Block_release(v27);

  }
  else
  {
    v26 = sub_1D166D94C();
    v28 = sub_1D166DD6C();
    if (os_log_type_enabled(v26, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_1D1413000, v26, v28, "Ignoring reindex request for uninteresting protection class", v29, 2u);
      MEMORY[0x1D17EB0AC](v29, -1, -1);
    }
  }

}

uint64_t sub_1D164A3D4(void *a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7, void *aBlock, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id, void *))
{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;

  v10 = _Block_copy(aBlock);
  v11 = sub_1D166DACC();
  v13 = v12;
  v14 = sub_1D166DACC();
  v16 = v15;
  v17 = sub_1D166DACC();
  v19 = v18;
  v20 = sub_1D166DACC();
  v22 = v21;
  _Block_copy(v10);
  v23 = a1;
  a9(v11, v13, v14, v16, v17, v19, v20, v22, a7, v23, v10);
  _Block_release(v10);
  _Block_release(v10);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D164A604(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  NSObject *log;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  if (qword_1ED935B48 != -1)
    swift_once();
  v6 = sub_1D166D964();
  sub_1D141AC1C(v6, (uint64_t)qword_1ED935B28);
  swift_bridgeObjectRetain_n();
  v7 = sub_1D166D94C();
  v8 = sub_1D166DD6C();
  if (!os_log_type_enabled(v7, v8))
  {

    swift_bridgeObjectRelease_n();
LABEL_18:
    v25 = *(void **)(v3 + OBJC_IVAR___IMDSpotlightDaemonClient_importer);
    sub_1D15FD3C0(0, &qword_1EFC637B8);
    v26 = (void *)sub_1D166DBD4();
    objc_msgSend(v25, sel_searchableItemsDidUpdate_mask_, v26, a2);

    return;
  }
  v28 = v8;
  v9 = swift_slowAlloc();
  v27 = swift_slowAlloc();
  v32 = v27;
  *(_DWORD *)v9 = 136446978;
  sub_1D141BCB4(0xD000000000000021, 0x80000001D1699400, &v32);
  sub_1D166DF28();
  *(_WORD *)(v9 + 12) = 2050;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_1D166DF28();
  swift_bridgeObjectRelease();
  *(_WORD *)(v9 + 22) = 2050;
  sub_1D166DF28();
  v29 = (uint8_t *)v9;
  *(_WORD *)(v9 + 32) = 2080;
  v11 = MEMORY[0x1E0DEE9D8];
  log = v7;
  if (!v10)
  {
LABEL_17:
    v22 = MEMORY[0x1D17E8B08](v11, MEMORY[0x1E0DEA968]);
    v24 = v23;
    swift_bridgeObjectRelease();
    sub_1D141BCB4(v22, v24, &v32);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, log, v28, "%{public}s itemCount: %{public}ld mask: %{public}ld itemIdentifiers: %s", v29, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v27, -1, -1);
    MEMORY[0x1D17EB0AC](v29, -1, -1);

    goto LABEL_18;
  }
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1D164F570(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v12 = 0;
    v11 = v31;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1D17E8FD0](v12, a1);
      else
        v13 = *(id *)(a1 + 8 * v12 + 32);
      v14 = v13;
      v15 = objc_msgSend(v14, sel_uniqueIdentifier);
      v16 = sub_1D166DACC();
      v18 = v17;

      v20 = *(_QWORD *)(v31 + 16);
      v19 = *(_QWORD *)(v31 + 24);
      if (v20 >= v19 >> 1)
        sub_1D164F570(v19 > 1, v20 + 1, 1);
      ++v12;
      *(_QWORD *)(v31 + 16) = v20 + 1;
      v21 = v31 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v18;
    }
    while (v10 != v12);
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t type metadata accessor for IMDSpotlightDaemonClient(uint64_t a1)
{
  return sub_1D15FD3C0(a1, &qword_1EFC63750);
}

uint64_t sub_1D164ABC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  void *v34;
  void *v35;
  id v36;
  _BYTE v38[4];
  int v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t aBlock[6];

  v8 = sub_1D166D9C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1D166D9F4();
  v46 = *(_QWORD *)(v12 - 8);
  v47 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED935B48 != -1)
    swift_once();
  v15 = sub_1D166D964();
  sub_1D141AC1C(v15, (uint64_t)qword_1ED935B28);
  swift_bridgeObjectRetain_n();
  v16 = sub_1D166D94C();
  v17 = sub_1D166DD6C();
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = swift_slowAlloc();
    v42 = v9;
    v20 = v19;
    v40 = swift_slowAlloc();
    v41 = v11;
    aBlock[0] = v40;
    *(_DWORD *)v20 = 136446978;
    v43 = v8;
    v48 = sub_1D141BCB4(0xD000000000000042, 0x80000001D1699360, aBlock);
    v44 = a2;
    sub_1D166DF28();
    *(_WORD *)(v20 + 12) = 2050;
    v48 = *(_QWORD *)(a1 + 16);
    sub_1D166DF28();
    *(_WORD *)(v20 + 22) = 2080;
    v21 = swift_bridgeObjectRetain();
    v22 = MEMORY[0x1D17E8B08](v21, MEMORY[0x1E0DEA968]);
    v39 = v18;
    v23 = a3;
    v24 = v22;
    v25 = v14;
    v26 = a4;
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = v24;
    a3 = v23;
    v48 = sub_1D141BCB4(v29, v28, aBlock);
    v8 = v43;
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    a4 = v26;
    v14 = v25;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 32) = 2048;
    v48 = v44;
    a2 = v44;
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, v16, (os_log_type_t)v39, "%{public}s guidsCount: %{public}ld guids: %s options: %ld", (uint8_t *)v20, 0x2Au);
    v30 = v40;
    swift_arrayDestroy();
    v11 = v41;
    MEMORY[0x1D17EB0AC](v30, -1, -1);
    v31 = v20;
    v9 = v42;
    MEMORY[0x1D17EB0AC](v31, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED9357D0);
  v32 = (void *)sub_1D166DE08();
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = a1;
  v33[3] = a2;
  v34 = v45;
  v33[4] = v45;
  v33[5] = a3;
  v33[6] = a4;
  aBlock[4] = (uint64_t)sub_1D164B730;
  aBlock[5] = (uint64_t)v33;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D141BC88;
  aBlock[3] = (uint64_t)&unk_1E92319A0;
  v35 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v36 = v34;
  swift_retain();
  swift_release();
  sub_1D166D9E8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1D15FC784((unint64_t *)&qword_1ED935580, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1D141AC58(&qword_1ED9355A8);
  sub_1D162425C((unint64_t *)&qword_1ED9355B0, &qword_1ED9355A8);
  sub_1D166DF88();
  MEMORY[0x1D17E8D30](0, v14, v11, v35);
  _Block_release(v35);

  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v46 + 8))(v14, v47);
}

void sub_1D164B030(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v9;
  void *v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD v15[6];

  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v9)
  {
    v10 = v9;
    v11 = (void *)sub_1D166DBD4();
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = a3;
    v12[3] = a4;
    v12[4] = a5;
    v15[4] = sub_1D164B76C;
    v15[5] = v12;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 1107296256;
    v15[2] = sub_1D164B3C0;
    v15[3] = &unk_1E92319F0;
    v13 = _Block_copy(v15);
    v14 = a3;
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_retrieveLocalFileURLForFileTransferWithGUIDs_options_completion_, v11, a2, v13);
    _Block_release(v13);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D164B160(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[7];

  v32 = a7;
  v33 = a8;
  v28 = a2;
  v29 = a4;
  v30 = a10;
  v31 = a6;
  v16 = sub_1D166D9C4();
  v37 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D166D9F4();
  v35 = *(_QWORD *)(v19 - 8);
  v36 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(_QWORD *)(a11 + OBJC_IVAR___IMDSpotlightDaemonClient_queue);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a12;
  *(_QWORD *)(v22 + 24) = a13;
  *(_BYTE *)(v22 + 32) = a1;
  *(_QWORD *)(v22 + 40) = v28;
  *(_QWORD *)(v22 + 48) = a3;
  v23 = v30;
  *(_QWORD *)(v22 + 56) = v29;
  *(_QWORD *)(v22 + 64) = a5;
  v24 = v32;
  *(_QWORD *)(v22 + 72) = v31;
  *(_QWORD *)(v22 + 80) = v24;
  *(_QWORD *)(v22 + 88) = v33;
  *(_QWORD *)(v22 + 96) = a9;
  *(_QWORD *)(v22 + 104) = v23;
  aBlock[4] = sub_1D164B7EC;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D141BC88;
  aBlock[3] = &unk_1E9231A40;
  v25 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v23;
  sub_1D166D9E8();
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1D15FC784((unint64_t *)&qword_1ED935580, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1D141AC58(&qword_1ED9355A8);
  sub_1D162425C((unint64_t *)&qword_1ED9355B0, &qword_1ED9355A8);
  sub_1D166DF88();
  MEMORY[0x1D17E8D30](0, v21, v18, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v16);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v36);
  return swift_release();
}

uint64_t sub_1D164B3C0(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  void (*v24)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *);

  v24 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    v22 = sub_1D166DACC();
    v12 = v11;
    if (a4)
      goto LABEL_3;
  }
  else
  {
    v22 = 0;
    v12 = 0;
    if (a4)
    {
LABEL_3:
      v13 = sub_1D166DACC();
      v15 = v14;
      if (a5)
        goto LABEL_4;
LABEL_8:
      v16 = 0;
      if (a6)
        goto LABEL_5;
LABEL_9:
      v18 = 0;
      goto LABEL_10;
    }
  }
  v13 = 0;
  v15 = 0;
  if (!a5)
    goto LABEL_8;
LABEL_4:
  v16 = sub_1D166DACC();
  a5 = v17;
  if (!a6)
    goto LABEL_9;
LABEL_5:
  v18 = sub_1D166DACC();
  a6 = v19;
LABEL_10:
  swift_retain();
  v20 = a7;
  v24(a2, v22, v12, v13, v15, v16, a5, v18, a6, a7);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D164B598(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void *v12;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;

  v12 = a5;
  if (a3)
  {
    v14 = (void *)sub_1D166DAA8();
    if (!v12)
      goto LABEL_4;
    goto LABEL_3;
  }
  v14 = 0;
  if (a5)
LABEL_3:
    v12 = (void *)sub_1D166DAA8();
LABEL_4:
  if (a7)
    a7 = (void *)sub_1D166DAA8();
  if (!a9)
  {
    v15 = 0;
    if (a10)
      goto LABEL_8;
LABEL_12:
    v16 = 0;
    goto LABEL_13;
  }
  v15 = (void *)sub_1D166DAA8();
  if (!a10)
    goto LABEL_12;
LABEL_8:
  v16 = sub_1D166D4A8();
LABEL_13:
  v17 = (id)v16;
  (*(void (**)(uint64_t, _QWORD, void *, void *, void *, void *))(a11 + 16))(a11, a1 & 1, v14, v12, a7, v15);

}

uint64_t sub_1D164B6AC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1D164B6D0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  sub_1D164B598(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, *(_QWORD *)(v10 + 16));
}

uint64_t sub_1D164B6FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1D164B730()
{
  uint64_t v0;

  sub_1D164B030(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1D164B740()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D164B76C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t *v10;

  return sub_1D164B160(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v10[2], v10[3], v10[4]);
}

uint64_t sub_1D164B7A0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1D164B7EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v0 + 16))(*(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
}

uint64_t sub_1D164B834(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1D141AC58(&qword_1EFC62238);
  v36 = a2;
  v6 = sub_1D166E174();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D166E264();
    sub_1D166DB08();
    result = sub_1D166E288();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D164BB48(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_1D141AC58((uint64_t *)&unk_1EFC62248);
  v38 = a2;
  v6 = sub_1D166E174();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v21);
    v32 = *v31;
    v33 = v31[1];
    if ((v38 & 1) == 0)
    {
      v34 = v30;
      swift_bridgeObjectRetain();
    }
    result = sub_1D166DED4();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v30;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18);
    *v19 = v32;
    v19[1] = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D164BE2C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  sub_1D141AC58(&qword_1EFC62220);
  v6 = sub_1D166E174();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1D141B3E4(v24, v35);
      }
      else
      {
        sub_1D141B3A8((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1D166E264();
      sub_1D166DB08();
      result = sub_1D166E288();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1D141B3E4(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D164C128(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1D141AC58(&qword_1EFC637D0);
  v43 = a2;
  v9 = sub_1D166E174();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_1D15FF604(v30, (uint64_t)v7);
    }
    else
    {
      sub_1D1646AE8(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_1D166E264();
    sub_1D166DB08();
    result = sub_1D166E288();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_1D15FF604((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1D164C490(uint64_t a1, char a2)
{
  return sub_1D164C49C(a1, a2, &qword_1EFC62240);
}

uint64_t sub_1D164C49C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  sub_1D141AC58(a3);
  v39 = a2;
  v7 = sub_1D166E174();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_1D166E264();
    sub_1D166DB08();
    result = sub_1D166E288();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1D164C7A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1D16162CC(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1D164CF30();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1D164B834(v15, a4 & 1);
  v21 = sub_1D16162CC(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D166E21C();
  __break(1u);
  return result;
}

id sub_1D164C900(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  id result;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v9 = *v4;
  v11 = sub_1D1616458((uint64_t)a3);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v10;
  v16 = *(_QWORD *)(v9 + 24);
  if (v16 >= v14 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_1D164D0E4();
LABEL_7:
    v17 = (_QWORD *)*v5;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      v18 = (_QWORD *)(v17[7] + 16 * v11);
      result = (id)swift_bridgeObjectRelease();
      *v18 = a1;
      v18[1] = a2;
      return result;
    }
LABEL_11:
    v17[(v11 >> 6) + 8] |= 1 << v11;
    *(_QWORD *)(v17[6] + 8 * v11) = a3;
    v22 = (_QWORD *)(v17[7] + 16 * v11);
    *v22 = a1;
    v22[1] = a2;
    v23 = v17[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v17[2] = v25;
      return a3;
    }
    goto LABEL_14;
  }
  sub_1D164BB48(v14, a4 & 1);
  v20 = sub_1D1616458((uint64_t)a3);
  if ((v15 & 1) == (v21 & 1))
  {
    v11 = v20;
    v17 = (_QWORD *)*v5;
    if ((v15 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1D15FD3C0(0, (unint64_t *)&qword_1ED935BB0);
  result = (id)sub_1D166E21C();
  __break(1u);
  return result;
}

_OWORD *sub_1D164CA70(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1D16162CC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        sub_1D141AC98((uint64_t)v19);
        return sub_1D141B3E4(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D164D298();
      goto LABEL_7;
    }
    sub_1D164BE2C(v15, a4 & 1);
    v21 = sub_1D16162CC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D164CE40(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1D166E21C();
  __break(1u);
  return result;
}

uint64_t sub_1D164CBA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1D16162CC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = v19
            + *(_QWORD *)(*(_QWORD *)(type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata() - 8)
                        + 72)
            * v12;
        return sub_1D164F0D8(a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D164D47C();
      goto LABEL_7;
    }
    sub_1D164C128(v15, a4 & 1);
    v22 = sub_1D16162CC(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D164CEA8(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1D166E21C();
  __break(1u);
  return result;
}

void sub_1D164CCD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1D16162CC(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1D164D6B4((uint64_t *)&unk_1ED935C18);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1D164C49C(v15, a4 & 1, (uint64_t *)&unk_1ED935C18);
  v20 = sub_1D16162CC(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1D166E21C();
  __break(1u);
}

_OWORD *sub_1D164CE40(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1D141B3E4(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1D164CEA8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
  result = sub_1D15FF604(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

void *sub_1D164CF30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1D141AC58(&qword_1EFC62238);
  v2 = *v0;
  v3 = sub_1D166E168();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D164D0E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1D141AC58((uint64_t *)&unk_1EFC62248);
  v2 = *v0;
  v3 = sub_1D166E168();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v20 = *v19;
    v21 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v20;
    v22[1] = v21;
    v23 = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D164D298()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_1D141AC58(&qword_1EFC62220);
  v2 = *v0;
  v3 = sub_1D166E168();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1D141B3A8(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1D141B3E4(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D164D47C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D141AC58(&qword_1EFC637D0);
  v5 = *v0;
  v6 = sub_1D166E168();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v28 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v29 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_1D1646AE8(*(_QWORD *)(v5 + 56) + v22, (uint64_t)v4);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v21;
    v23[1] = v20;
    sub_1D15FF604((uint64_t)v4, *(_QWORD *)(v7 + 56) + v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1D164D6A8()
{
  return sub_1D164D6B4(&qword_1EFC62240);
}

id sub_1D164D6B4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  sub_1D141AC58(a1);
  v3 = *v1;
  v4 = sub_1D166E168();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1D164D85C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  os_log_type_t type;
  void *v37;
  id v39[2];

  v39[1] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1ED935B48 != -1)
    swift_once();
  v18 = sub_1D166D964();
  sub_1D141AC1C(v18, (uint64_t)qword_1ED935B28);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v19 = sub_1D166D94C();
  v20 = sub_1D166DD6C();
  if (os_log_type_enabled(v19, v20))
  {
    type = v20;
    v21 = swift_slowAlloc();
    v37 = (void *)swift_slowAlloc();
    v39[0] = v37;
    *(_DWORD *)v21 = 136447490;
    sub_1D141BCB4(0xD000000000000061, 0x80000001D1699540, (uint64_t *)v39);
    sub_1D166DF28();
    *(_WORD *)(v21 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a1, a2, (uint64_t *)v39);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 22) = 2082;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a3, a4, (uint64_t *)v39);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 32) = 2080;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a5, a6, (uint64_t *)v39);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 42) = 2080;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a7, a8, (uint64_t *)v39);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 52) = 2048;
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, v19, type, "%{public}s bundleID: %{public}s protectionClass: %{public}s itemIdentifier: %s typeIdentifier: %s options: %ld", (uint8_t *)v21, 0x3Eu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v37, -1, -1);
    MEMORY[0x1D17EB0AC](v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v22 = *(void **)(a10 + OBJC_IVAR___IMDSpotlightDaemonClient_importer);
  v23 = sub_1D1649888(a1, a2);
  v24 = (void *)sub_1D166DAA8();
  v25 = (void *)sub_1D166DAA8();
  v39[0] = 0;
  v26 = objc_msgSend(v22, sel_dataForSearchableIndex_itemIdentifier_typeIdentifier_error_, v23, v24, v25, v39);

  v27 = v39[0];
  if (v26)
  {
    v28 = sub_1D166D598();
    v30 = v29;

    sub_1D15FF574(v28, v30);
    v31 = (void *)sub_1D166D58C();
    (*(void (**)(uint64_t, void *, _QWORD))(a11 + 16))(a11, v31, 0);

    sub_1D15FF5B8(v28, v30);
    sub_1D15FF5B8(v28, v30);
  }
  else
  {
    v32 = v27;
    v33 = (void *)sub_1D166D4B4();

    swift_willThrow();
    v34 = v33;
    v35 = (void *)sub_1D166D4A8();
    (*(void (**)(uint64_t, _QWORD, void *))(a11 + 16))(a11, 0, v35);

  }
}

uint64_t sub_1D164DD34(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  _BYTE *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  void *v58;
  _BYTE v59[4];
  int v60;
  void *v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76[3];

  v65 = a3;
  v69 = a10;
  v70 = a7;
  v76[1] = *(id *)MEMORY[0x1E0C80C00];
  v17 = sub_1D141AC58(&qword_1ED9356E0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = &v59[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = &v59[-v22];
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = &v59[-v25];
  MEMORY[0x1E0C80A78](v24);
  v68 = &v59[-v27];
  v28 = sub_1D166D580();
  v74 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v67 = &v59[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED935B48 != -1)
    swift_once();
  v66 = v26;
  v63 = v20;
  v71 = a11;
  v72 = a9;
  v73 = a1;
  v30 = sub_1D166D964();
  sub_1D141AC1C(v30, (uint64_t)qword_1ED935B28);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v31 = sub_1D166D94C();
  v32 = sub_1D166DD6C();
  v33 = v32;
  v34 = os_log_type_enabled(v31, v32);
  v64 = v23;
  if (v34)
  {
    v35 = swift_slowAlloc();
    v60 = v33;
    v36 = v35;
    v61 = (void *)swift_slowAlloc();
    v76[0] = v61;
    *(_DWORD *)v36 = 136447490;
    v75 = sub_1D141BCB4(0xD000000000000064, 0x80000001D16994D0, (uint64_t *)v76);
    sub_1D166DF28();
    v62 = v28;
    *(_WORD *)(v36 + 12) = 2082;
    swift_bridgeObjectRetain();
    v75 = sub_1D141BCB4(v73, a2, (uint64_t *)v76);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v36 + 22) = 2082;
    swift_bridgeObjectRetain();
    v75 = sub_1D141BCB4(v65, a4, (uint64_t *)v76);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v36 + 32) = 2080;
    swift_bridgeObjectRetain();
    v75 = sub_1D141BCB4(a5, a6, (uint64_t *)v76);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v36 + 42) = 2080;
    v28 = v62;
    swift_bridgeObjectRetain();
    v75 = sub_1D141BCB4(v70, a8, (uint64_t *)v76);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v36 + 52) = 2048;
    v75 = v72;
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, v31, (os_log_type_t)v60, "%{public}s bundleID: %{public}s protectionClass: %{public}s itemIdentifier: %s typeIdentifier: %s options: %ld", (uint8_t *)v36, 0x3Eu);
    v37 = v61;
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v37, -1, -1);
    MEMORY[0x1D17EB0AC](v36, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v38 = *(void **)(v69 + OBJC_IVAR___IMDSpotlightDaemonClient_importer);
  v39 = sub_1D1649888(v73, a2);
  v40 = (void *)sub_1D166DAA8();
  v41 = (void *)sub_1D166DAA8();
  v76[0] = 0;
  v42 = objc_msgSend(v38, sel_fileURLForSearchableIndex_itemIdentifier_typeIdentifier_options_error_, v39, v40, v41, v72, v76);

  v43 = v76[0];
  if (v42)
  {
    v44 = v67;
    sub_1D166D550();
    v45 = v43;

    v46 = v74;
    v47 = (uint64_t)v68;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v74 + 16))(v68, v44, v28);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v28);
    v48 = (uint64_t)v66;
    sub_1D164F084(v47, (uint64_t)v66);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v48, 1, v28) == 1)
    {
      v49 = 0;
    }
    else
    {
      v49 = (void *)sub_1D166D520();
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v48, v28);
    }
    (*(void (**)(uint64_t, void *, _QWORD))(v71 + 16))(v71, v49, 0);

    sub_1D164F044(v47);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v74 + 8))(v44, v28);
  }
  else
  {
    v50 = v76[0];
    v51 = (void *)sub_1D166D4B4();

    swift_willThrow();
    v52 = v74;
    v53 = (uint64_t)v64;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v64, 1, 1, v28);
    v54 = (uint64_t)v63;
    sub_1D164F084(v53, (uint64_t)v63);
    LODWORD(v52) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v54, 1, v28);
    v55 = v51;
    if ((_DWORD)v52 == 1)
    {
      v56 = 0;
    }
    else
    {
      v56 = (void *)sub_1D166D520();
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v54, v28);
    }
    v58 = (void *)sub_1D166D4A8();
    (*(void (**)(uint64_t, void *, void *))(v71 + 16))(v71, v56, v58);

    return sub_1D164F044(v53);
  }
}

void sub_1D164E3F0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  unint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  _QWORD *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  id v73;
  void *v74;
  os_log_type_t type;
  void *v76;
  void *v77;
  uint64_t v78;
  os_log_t v79;
  NSObject *v80;
  uint8_t *v81;
  os_log_type_t v82;
  void *v84;
  uint64_t v85;
  id v86[2];

  v86[1] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1ED935B48 != -1)
    swift_once();
  v17 = a10;
  v18 = sub_1D166D964();
  sub_1D141AC1C(v18, (uint64_t)qword_1ED935B28);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v19 = sub_1D166D94C();
  v20 = sub_1D166DD6C();
  v79 = (os_log_t)a1;
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v76 = (void *)swift_slowAlloc();
    v86[0] = v76;
    *(_DWORD *)v21 = 136447746;
    sub_1D141BCB4(0xD000000000000066, 0x80000001D1699430, (uint64_t *)v86);
    sub_1D166DF28();
    type = v20;
    *(_WORD *)(v21 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a1, a2, (uint64_t *)v86);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 22) = 2082;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a3, a4, (uint64_t *)v86);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 32) = 2050;
    swift_bridgeObjectRelease();
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 42) = 2080;
    v22 = swift_bridgeObjectRetain();
    v23 = MEMORY[0x1D17E8B08](v22, MEMORY[0x1E0DEA968]);
    v25 = v24;
    swift_bridgeObjectRelease();
    sub_1D141BCB4(v23, v25, (uint64_t *)v86);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 52) = 2080;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a6, a7, (uint64_t *)v86);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 62) = 2048;
    v26 = a8;
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, v19, type, "%{public}s bundleID: %{public}s protectionClass: %{public}s itemIdentifiersCount: %{public}ld itemIdentifiers: %s typeIdentifier: %s options: %ld", (uint8_t *)v21, 0x48u);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v76, -1, -1);
    v27 = v21;
    v17 = a10;
    MEMORY[0x1D17EB0AC](v27, -1, -1);

    if (*(_QWORD *)(a5 + 16))
      goto LABEL_5;
LABEL_20:
    v50 = sub_1D166D94C();
    v51 = sub_1D166DD6C();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_1D1413000, v50, v51, "Bailing on request for an empty array of item identifiers", v52, 2u);
      MEMORY[0x1D17EB0AC](v52, -1, -1);
    }

    sub_1D15FD3C0(0, &qword_1EFC637C0);
    v53 = (void *)sub_1D166DBD4();
    (*(void (**)(uint64_t, void *, _QWORD))(v17 + 16))(v17, v53, 0);
    goto LABEL_28;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v26 = a8;
  if (!*(_QWORD *)(a5 + 16))
    goto LABEL_20;
LABEL_5:
  v28 = *(void **)(a9 + OBJC_IVAR___IMDSpotlightDaemonClient_importer);
  v29 = sub_1D1649888((uint64_t)v79, a2);
  v30 = (void *)sub_1D166DBD4();
  v31 = (void *)sub_1D166DAA8();
  v86[0] = 0;
  v32 = objc_msgSend(v28, sel_fileURLsForSearchableIndex_itemIdentifiers_typeIdentifier_options_error_, v29, v30, v31, v26, v86);

  v33 = v86[0];
  if (v32)
  {
    sub_1D15FD3C0(0, &qword_1EFC637C0);
    v34 = sub_1D166DBEC();
    v35 = v33;

    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v36 = sub_1D166D94C();
    v37 = sub_1D166DD6C();
    if (os_log_type_enabled(v36, v37))
    {
      v78 = v17;
      v38 = swift_slowAlloc();
      v77 = (void *)swift_slowAlloc();
      v86[0] = v77;
      *(_DWORD *)v38 = 136446978;
      sub_1D141BCB4(0xD000000000000066, 0x80000001D1699430, (uint64_t *)v86);
      sub_1D166DF28();
      v81 = (uint8_t *)v38;
      *(_WORD *)(v38 + 12) = 2050;
      if (v34 >> 62)
      {
        swift_bridgeObjectRetain();
        v39 = sub_1D166E15C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v39 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v80 = v36;
      swift_bridgeObjectRelease();
      sub_1D166DF28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 22) = 2050;
      swift_bridgeObjectRelease();
      sub_1D166DF28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 32) = 2080;
      v40 = MEMORY[0x1E0DEE9D8];
      if (v39)
      {
        v85 = MEMORY[0x1E0DEE9D8];
        sub_1D164F570(0, v39 & ~(v39 >> 63), 0);
        if (v39 < 0)
          __break(1u);
        v41 = 0;
        v40 = v85;
        do
        {
          if ((v34 & 0xC000000000000001) != 0)
            v42 = (id)MEMORY[0x1D17E8FD0](v41, v34);
          else
            v42 = *(id *)(v34 + 8 * v41 + 32);
          v43 = v42;
          v44 = sub_1D16492F8();
          v46 = v45;

          v48 = *(_QWORD *)(v85 + 16);
          v47 = *(_QWORD *)(v85 + 24);
          if (v48 >= v47 >> 1)
            sub_1D164F570(v47 > 1, v48 + 1, 1);
          ++v41;
          *(_QWORD *)(v85 + 16) = v48 + 1;
          v49 = v85 + 16 * v48;
          *(_QWORD *)(v49 + 32) = v44;
          *(_QWORD *)(v49 + 40) = v46;
        }
        while (v39 != v41);
      }
      v70 = MEMORY[0x1D17E8B08](v40, MEMORY[0x1E0DEA968]);
      v72 = v71;
      swift_bridgeObjectRelease();
      sub_1D141BCB4(v70, v72, (uint64_t *)v86);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D1413000, v80, v37, "%{public}s got %{public}ld results for %{public}ld items: %s", v81, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v77, -1, -1);
      MEMORY[0x1D17EB0AC](v81, -1, -1);

      v17 = v78;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v53 = (void *)sub_1D166DBD4();
    (*(void (**)(uint64_t, void *, _QWORD))(v17 + 16))(v17, v53, 0);
    swift_bridgeObjectRelease();
LABEL_28:

    return;
  }
  v54 = v86[0];
  v55 = (void *)sub_1D166D4B4();

  swift_willThrow();
  swift_bridgeObjectRetain_n();
  v56 = v55;
  swift_bridgeObjectRetain();
  v57 = v55;
  v58 = sub_1D166D94C();
  v59 = sub_1D166DD84();
  if (os_log_type_enabled(v58, v59))
  {
    v82 = v59;
    v60 = swift_slowAlloc();
    v61 = (_QWORD *)swift_slowAlloc();
    v84 = (void *)swift_slowAlloc();
    v86[0] = v84;
    *(_DWORD *)v60 = 136446978;
    sub_1D141BCB4(0xD000000000000066, 0x80000001D1699430, (uint64_t *)v86);
    sub_1D166DF28();
    *(_WORD *)(v60 + 12) = 2050;
    swift_bridgeObjectRelease();
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 22) = 2112;
    v62 = v55;
    v63 = v17;
    v64 = _swift_stdlib_bridgeErrorToNSError();
    sub_1D166DF28();
    *v61 = v64;

    *(_WORD *)(v60 + 32) = 2080;
    v65 = swift_bridgeObjectRetain();
    v66 = MEMORY[0x1D17E8B08](v65, MEMORY[0x1E0DEA968]);
    v68 = v67;
    swift_bridgeObjectRelease();
    v69 = v66;
    v17 = v63;
    sub_1D141BCB4(v69, v68, (uint64_t *)v86);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v58, v82, "%{public}s failed to retrieve file URLs for %{public}ld items: %@ - item identifiers: %s", (uint8_t *)v60, 0x2Au);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v61, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v84, -1, -1);
    MEMORY[0x1D17EB0AC](v60, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
  }
  v73 = v55;
  v74 = (void *)sub_1D166D4A8();
  (*(void (**)(uint64_t, _QWORD, void *))(v17 + 16))(v17, 0, v74);

}

unint64_t sub_1D164EFA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC637C8;
  if (!qword_1EFC637C8)
  {
    v1 = sub_1D15FD3C0(255, &qword_1EFC637C0);
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC637C8);
  }
  return result;
}

uint64_t sub_1D164EFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D141AC58(&qword_1ED9356E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D164F044(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D141AC58(&qword_1ED9356E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D164F084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D141AC58(&qword_1ED9356E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D164F0CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1D164F0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecoverableMessageStore.RecoverableMessageMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t FileEventFlags.description.getter()
{
  int *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = *v0;
  if (qword_1ED935500 != -1)
    swift_once();
  v2 = *(_QWORD *)(qword_1ED936498 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v12)
      goto LABEL_19;
    goto LABEL_13;
  }
  v4 = (_QWORD *)(swift_bridgeObjectRetain() + 48);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v9 = *((_DWORD *)v4 - 4);
    if ((v9 & ~v1) == 0)
    {
      v10 = *(v4 - 1);
      v11 = *v4;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D164F5D8(0, v5[2] + 1, 1);
      v7 = v5[2];
      v6 = v5[3];
      if (v7 >= v6 >> 1)
        sub_1D164F5D8(v6 > 1, v7 + 1, 1);
      v5[2] = v7 + 1;
      v8 = &v5[3 * v7];
      *((_DWORD *)v8 + 8) = v9;
      v8[5] = v10;
      v8[6] = v11;
    }
    v4 += 3;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  v3 = MEMORY[0x1E0DEE9D8];
  v12 = v5[2];
  if (v12)
  {
LABEL_13:
    v21 = v3;
    sub_1D164F570(0, v12, 0);
    v13 = v5 + 6;
    do
    {
      v15 = *(v13 - 1);
      v14 = *v13;
      v17 = *(_QWORD *)(v21 + 16);
      v16 = *(_QWORD *)(v21 + 24);
      swift_bridgeObjectRetain();
      if (v17 >= v16 >> 1)
        sub_1D164F570(v16 > 1, v17 + 1, 1);
      *(_QWORD *)(v21 + 16) = v17 + 1;
      v18 = v21 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v15;
      *(_QWORD *)(v18 + 40) = v14;
      v13 += 3;
      --v12;
    }
    while (v12);
  }
LABEL_19:
  swift_release();
  sub_1D141AC58(&qword_1ED9355C0);
  sub_1D164F58C();
  v19 = sub_1D166DA78();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t FileEventFlags.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t FileEventFlags.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

unint64_t FileEventFlags.init(rawValue:)@<X0>(unint64_t result@<X0>, _DWORD *a2@<X8>)
{
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    result = sub_1D166E144();
    __break(1u);
  }
  else
  {
    *a2 = result;
  }
  return result;
}

void static FileEventFlags.none.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static FileEventFlags.mustScanSubDirs.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static FileEventFlags.userDropped.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

void static FileEventFlags.kernelDropped.getter(_DWORD *a1@<X8>)
{
  *a1 = 4;
}

void static FileEventFlags.flagEventIdsWrapped.getter(_DWORD *a1@<X8>)
{
  *a1 = 8;
}

void static FileEventFlags.historyDone.getter(_DWORD *a1@<X8>)
{
  *a1 = 16;
}

void static FileEventFlags.rootChanged.getter(_DWORD *a1@<X8>)
{
  *a1 = 32;
}

void static FileEventFlags.mount.getter(_DWORD *a1@<X8>)
{
  *a1 = 64;
}

void static FileEventFlags.unmount.getter(_DWORD *a1@<X8>)
{
  *a1 = 128;
}

void static FileEventFlags.changedOwner.getter(_DWORD *a1@<X8>)
{
  *a1 = 0x4000;
}

void static FileEventFlags.created.getter(_DWORD *a1@<X8>)
{
  *a1 = 256;
}

void static FileEventFlags.finderInfoModified.getter(_DWORD *a1@<X8>)
{
  *a1 = 0x2000;
}

void static FileEventFlags.inodeMetadataModified.getter(_DWORD *a1@<X8>)
{
  *a1 = 1024;
}

void static FileEventFlags.isDirectory.getter(_DWORD *a1@<X8>)
{
  *a1 = 0x20000;
}

void static FileEventFlags.isFile.getter(_DWORD *a1@<X8>)
{
  *a1 = 0x10000;
}

void static FileEventFlags.isHardlink.getter(_DWORD *a1@<X8>)
{
  *a1 = 0x100000;
}

void static FileEventFlags.isLastHardlink.getter(_DWORD *a1@<X8>)
{
  *a1 = 0x200000;
}

void static FileEventFlags.isSymlink.getter(_DWORD *a1@<X8>)
{
  *a1 = 0x40000;
}

void static FileEventFlags.modified.getter(_DWORD *a1@<X8>)
{
  *a1 = 4096;
}

void static FileEventFlags.removed.getter(_DWORD *a1@<X8>)
{
  *a1 = 512;
}

void static FileEventFlags.renamed.getter(_DWORD *a1@<X8>)
{
  *a1 = 2048;
}

void static FileEventFlags.xAttributesModified.getter(_DWORD *a1@<X8>)
{
  *a1 = 0x8000;
}

void static FileEventFlags.ownEvent.getter(_DWORD *a1@<X8>)
{
  *a1 = 0x80000;
}

void static FileEventFlags.cloned.getter(_DWORD *a1@<X8>)
{
  *a1 = 0x400000;
}

void sub_1D164F558()
{
  qword_1ED936498 = (uint64_t)&unk_1E922F890;
}

uint64_t sub_1D164F570(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1D164F794(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

unint64_t sub_1D164F58C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED9355C8;
  if (!qword_1ED9355C8)
  {
    v1 = sub_1D15FC6A0(&qword_1ED9355C0);
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED9355C8);
  }
  return result;
}

uint64_t sub_1D164F5D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D164F8FC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

unint64_t sub_1D164F5F8()
{
  unint64_t result;

  result = qword_1EFC637D8;
  if (!qword_1EFC637D8)
  {
    result = MEMORY[0x1D17EAFE0](&protocol conformance descriptor for FileEventFlags, &type metadata for FileEventFlags);
    atomic_store(result, (unint64_t *)&qword_1EFC637D8);
  }
  return result;
}

unint64_t sub_1D164F640()
{
  unint64_t result;

  result = qword_1EFC637E0;
  if (!qword_1EFC637E0)
  {
    result = MEMORY[0x1D17EAFE0](&protocol conformance descriptor for FileEventFlags, &type metadata for FileEventFlags);
    atomic_store(result, (unint64_t *)&qword_1EFC637E0);
  }
  return result;
}

unint64_t sub_1D164F688()
{
  unint64_t result;

  result = qword_1EFC637E8;
  if (!qword_1EFC637E8)
  {
    result = MEMORY[0x1D17EAFE0](&protocol conformance descriptor for FileEventFlags, &type metadata for FileEventFlags);
    atomic_store(result, (unint64_t *)&qword_1EFC637E8);
  }
  return result;
}

unint64_t sub_1D164F6D0()
{
  unint64_t result;

  result = qword_1EFC637F0;
  if (!qword_1EFC637F0)
  {
    result = MEMORY[0x1D17EAFE0](&protocol conformance descriptor for FileEventFlags, &type metadata for FileEventFlags);
    atomic_store(result, (unint64_t *)&qword_1EFC637F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileEventFlags()
{
  return &type metadata for FileEventFlags;
}

uint64_t sub_1D164F724(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D164FAA0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1D164F740(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1D164FC28(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1D164F75C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D164FD94(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1D164F778(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D164FF1C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1D164F794(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D141AC58(&qword_1ED935820);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D164F8FC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1D141AC58(&qword_1ED9356B0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1D141AC58(&qword_1ED935508);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D164FAA0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1D141AC58(&qword_1EFC63800);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1D141AC58(&qword_1EFC61FE0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D164FC28(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D141AC58(&qword_1ED935838);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D164FD94(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1D141AC58(&qword_1EFC637F8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1D141AC58(&qword_1EFC61E18);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D164FF1C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1D141AC58(&qword_1ED935818);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1D141AC58((uint64_t *)&unk_1ED935710);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D16500A4()
{
  uint64_t result;

  sub_1D166DCA0();
  result = sub_1D166DC94();
  qword_1ED9356F0 = result;
  return result;
}

uint64_t static DaemonWorkActor.shared.getter()
{
  if (qword_1ED9356F8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t DaemonWorkActor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DaemonWorkActor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D165012C()
{
  if (qword_1ED9356F8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1D165016C()
{
  return sub_1D166E054();
}

id IMDInternalWorkQueue.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id IMDInternalWorkQueue.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMDInternalWorkQueue();
  return objc_msgSendSuper2(&v2, sel_init);
}

id IMDInternalWorkQueue.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMDInternalWorkQueue();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s12IMDaemonCore20IMDInternalWorkQueueC07enqueueD5BlockyyyyYbcFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v4 = sub_1D166D9C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D166D9F4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D162CF48();
  v12 = (void *)sub_1D166DE08();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  aBlock[4] = sub_1D141B388;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D141BC88;
  aBlock[3] = &unk_1E9231CA8;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1D166D9E8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1D16433D0();
  sub_1D141AC58(&qword_1ED9355A8);
  sub_1D1643418();
  sub_1D166DF88();
  MEMORY[0x1D17E8D30](0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t type metadata accessor for IMDInternalWorkQueue()
{
  return objc_opt_self();
}

uint64_t sub_1D1650478()
{
  return MEMORY[0x1E0DF06E8];
}

uint64_t type metadata accessor for DaemonWorkActor()
{
  return objc_opt_self();
}

uint64_t method lookup function for DaemonWorkActor()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D16504B0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1D16504D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D16504F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1D141AC58(&qword_1ED9356A8);
    v2 = sub_1D166E180();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1D141B3A8(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1D141B3E4(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1D141B3E4(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1D141B3E4(v36, v37);
    sub_1D141B3E4(v37, &v33);
    result = sub_1D166E030();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1D141B3E4(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1D15FF5FC();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1D16508BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[3];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1D141AC58(&qword_1ED9356A8);
    v2 = sub_1D166E180();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_1D141B3E4(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_1D141B3E4(v35, v36);
    sub_1D141B3E4(v36, &v32);
    result = sub_1D166E030();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_1D141B3E4(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1D15FF5FC();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

id static IMDaemonCoreBridgeDelegate.updateChat(usingSyncData:)(uint64_t a1)
{
  return sub_1D16515B8(a1, (SEL *)&selRef_updateChatUsingSyncData_);
}

BOOL static IMDaemonCoreBridgeDelegate.supportsService(withName:)()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
  v1 = (void *)sub_1D166DAA8();
  v2 = objc_msgSend(v0, sel_serviceWithName_, v1);

  if (v2)
  return v2 != 0;
}

id static IMDaemonCoreBridgeDelegate.shouldStoreMessage(item:)(uint64_t a1)
{
  return sub_1D1650D1C(a1, (SEL *)&selRef_shouldStoreMessageForItem_);
}

id static IMDaemonCoreBridgeDelegate.isCompatibleWithMiC(item:)(uint64_t a1)
{
  return sub_1D1650D1C(a1, (SEL *)&selRef_isCompatibleWithMiCForItem_);
}

id sub_1D1650D1C(uint64_t a1, SEL *a2)
{
  return objc_msgSend((id)objc_opt_self(), *a2, a1);
}

id static IMDaemonCoreBridgeDelegate.isBackwardCompatibility(item:parentChatID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D1650E08(a1, a2, a3, (SEL *)&selRef_isBackwardCompatibilityForItem_parentChatID_);
}

uint64_t static IMDaemonCoreBridgeDelegate.chatIdentities(forMessageGUIDs:)()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1D166DBD4();
  v2 = objc_msgSend(v0, sel_chatIdentitiesForMessageWithGUIDs_, v1);

  if (!v2)
    return 0;
  sub_1D141AC58(&qword_1ED935B90);
  v3 = sub_1D166DBEC();

  return v3;
}

id static IMDaemonCoreBridgeDelegate.isExpectedChatID(item:chatID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D1650E08(a1, a2, a3, (SEL *)&selRef_isExpectedChatIDForItem_chatID_);
}

id sub_1D1650E08(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)objc_opt_self();
  v7 = (void *)sub_1D166DAA8();
  v8 = objc_msgSend(v6, *a4, a1, v7);

  return v8;
}

void static IMDaemonCoreBridgeDelegate.setSortID(item:parentChatID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D16511D8(a1, a2, a3, (SEL *)&selRef_setSortIDForItem_parentChatID_);
}

void static IMDaemonCoreBridgeDelegate.add(item:toParentChat:updatedLastMessageCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  id v7;

  v6 = (void *)objc_opt_self();
  v7 = (id)sub_1D166DAA8();
  objc_msgSend(v6, sel_addItem_toParentChatID_updatedLastMessageCount_, a1, v7, a4);

}

id static IMDaemonCoreBridgeDelegate.decompress(data:)()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;

  v0 = (void *)sub_1D166D58C();
  result = objc_msgSend(v0, sel__FTOptionallyDecompressData);
  if (result)
  {
    v2 = result;
    v3 = sub_1D166D598();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void static IMDaemonCoreBridgeDelegate.removeTransferFromBackup(guid:)(uint64_t a1, uint64_t a2)
{
  sub_1D165125C(a1, a2, (SEL *)&selRef_removeTransferFromBackup_);
}

id static IMDaemonCoreBridgeDelegate.updateTemporaryTransferGUIDS(forItem:)(uint64_t a1)
{
  return objc_msgSend((id)objc_opt_self(), sel_updateTemporaryTransferGUIDsIfNeeded_, a1);
}

id static IMDaemonCoreBridgeDelegate.fileTransfer(guid:)(uint64_t a1, uint64_t a2)
{
  return sub_1D165115C(a1, a2, (SEL *)&selRef_fileTransferWithGUID_);
}

void static IMDaemonCoreBridgeDelegate.storeAttachment(transfer:withMessageGUID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;

  if (a3)
    v4 = (id)sub_1D166DAA8();
  else
    v4 = 0;
  objc_msgSend((id)objc_opt_self(), sel_storeAttachmentWithTransfer_withMessageGUID_, a1, v4);

}

id static IMDaemonCoreBridgeDelegate.storeAttachment(transfer:withChatGUID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;

  if (a3)
    v4 = (void *)sub_1D166DAA8();
  else
    v4 = 0;
  v5 = objc_msgSend((id)objc_opt_self(), sel_storeAttachmentWithTransfer_withChatGUID_, a1, v4);

  return v5;
}

id static IMDaemonCoreBridgeDelegate.reloadDatabase()()
{
  return objc_msgSend((id)objc_opt_self(), sel_reloadDatabase);
}

id static IMDaemonCoreBridgeDelegate.storeAttachments(forMessage:)(uint64_t a1)
{
  return sub_1D16515B8(a1, (SEL *)&selRef_storeAttachmentsForMessage_);
}

id static IMDaemonCoreBridgeDelegate.createMessageItem(recordRef:handle:)(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_1D166DAA8();
  v4 = objc_msgSend(v2, sel_createMessageItemWithRecordRef_handle_, a1, v3);

  return v4;
}

id static IMDaemonCoreBridgeDelegate.updateStamp()()
{
  return objc_msgSend((id)objc_opt_self(), sel_updateStamp);
}

id static IMDaemonCoreBridgeDelegate.transfer(forGUID:)(uint64_t a1, uint64_t a2)
{
  return sub_1D165115C(a1, a2, (SEL *)&selRef_fileTransferForGUID_);
}

id sub_1D165115C(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v4;
  void *v5;
  id v6;

  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_1D166DAA8();
  v6 = objc_msgSend(v4, *a3, v5);

  return v6;
}

void static IMDaemonCoreBridgeDelegate.add(transfer:forGuid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D16511D8(a1, a2, a3, (SEL *)&selRef_addTransfer_forGUID_);
}

void sub_1D16511D8(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v6;
  id v7;

  v6 = (void *)objc_opt_self();
  v7 = (id)sub_1D166DAA8();
  objc_msgSend(v6, *a4, a1, v7);

}

void static IMDaemonCoreBridgeDelegate.updateTransfer(guid:)(uint64_t a1, uint64_t a2)
{
  sub_1D165125C(a1, a2, (SEL *)&selRef_updateTransfer_);
}

void sub_1D165125C(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v4;
  id v5;

  v4 = (void *)objc_opt_self();
  v5 = (id)sub_1D166DAA8();
  objc_msgSend(v4, *a3, v5);

}

id static IMDaemonCoreBridgeDelegate.register(guid:localURL:)()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1D166DAA8();
  v2 = (void *)sub_1D166D520();
  v3 = objc_msgSend(v0, sel_registerGuid_forLocalURL_, v1, v2);

  return v3;
}

void static IMDaemonCoreBridgeDelegate.moveMessages(forGUIDs:deleteDate:)()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = (void *)sub_1D166DBD4();
  v2 = (id)sub_1D166D5BC();
  objc_msgSend(v0, sel_moveMessagesWithGUIDsToRecentlyDeleted_deleteDate_, v1, v2);

}

void static IMDaemonCoreBridgeDelegate.moveMessagePart(forGUID:deleteDate:partBody:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  id v7;

  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1D166DAA8();
  v7 = (id)sub_1D166D5BC();
  objc_msgSend(v5, sel_moveMessagePartForGUID_deleteDate_partBody_, v6, v7, a4);

}

id static IMDaemonCoreBridgeDelegate.hasFinishedAssetDownloadSync()()
{
  return objc_msgSend((id)objc_opt_self(), sel_hasFinishedAssetDownloadSync);
}

uint64_t static IMDaemonCoreBridgeDelegate.primaryAccountCountryCode()()
{
  id v0;
  void *v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_primaryAccountCountryCode);
  if (!v0)
    return 0;
  v1 = v0;
  v2 = sub_1D166DACC();

  return v2;
}

id static IMDaemonCoreBridgeDelegate.ckRecord(withT1Info:)(uint64_t a1)
{
  return sub_1D1651518(a1, (SEL *)&selRef_ckRecordWithT1Info_);
}

id static IMDaemonCoreBridgeDelegate.ckRecord(withT2Info:)(uint64_t a1)
{
  return sub_1D1651518(a1, (SEL *)&selRef_ckRecordWithT2Info_);
}

id static IMDaemonCoreBridgeDelegate.ckRecord(withT3Info:)(uint64_t a1)
{
  return sub_1D1651518(a1, (SEL *)&selRef_ckRecordWithT3Info_);
}

id sub_1D1651518(uint64_t a1, SEL *a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = (void *)objc_opt_self();
  sub_1D16504F8(a1);
  v5 = (void *)sub_1D166DA18();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, *a2, v5);

  return v6;
}

id static IMDaemonCoreBridgeDelegate.handleMessageUpdate(withRecord:)(uint64_t a1)
{
  return sub_1D16515B8(a1, (SEL *)&selRef_handleMessageUpdateWithCKRecord_);
}

id sub_1D16515B8(uint64_t a1, SEL *a2)
{
  return objc_msgSend((id)objc_opt_self(), *a2, a1);
}

uint64_t static IMDaemonCoreBridgeDelegate.deviceActiveString()()
{
  id v0;
  id v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_deviceActiveString);

  v2 = sub_1D166DACC();
  return v2;
}

id static IMDaemonCoreBridgeDelegate.shouldReportToRTC()()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_shouldReportToRTC);

  return v1;
}

unint64_t static IMDaemonCoreBridgeDelegate.syncDatesDictionary()()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_syncState);

  v2 = objc_msgSend(v1, sel_analyticSyncDatesDictionary);
  if (!v2)
    return 0;
  v3 = sub_1D166DA30();

  v4 = sub_1D1651784(v3);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1D1651784(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  __int128 v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[2];
  _OWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1D141AC58(&qword_1EFC62220);
    v2 = (_QWORD *)sub_1D166E180();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v23 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_37;
      if (v13 >= v22)
      {
LABEL_33:
        sub_1D15FF5FC();
        return (unint64_t)v2;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v22)
          goto LABEL_33;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v22)
            goto LABEL_33;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v22)
              goto LABEL_33;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v22)
                goto LABEL_33;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_38;
                  if (v12 >= v22)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_1D1617BD4(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_1D141B3A8(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_1D1617BD4((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_1D1652E54((uint64_t)v30);
      swift_bridgeObjectRelease();
      sub_1D15FF5FC();
      swift_release();
      return 0;
    }
    sub_1D141B3A8((uint64_t)v31 + 8, (uint64_t)v25);
    sub_1D1652E54((uint64_t)v30);
    sub_1D141B3E4(v25, v26);
    v27 = v24;
    sub_1D141B3E4(v26, v28);
    v16 = v27;
    sub_1D141B3E4(v28, v29);
    sub_1D141B3E4(v29, &v27);
    result = sub_1D16162CC(v16, *((uint64_t *)&v16 + 1));
    v17 = result;
    if ((v18 & 1) != 0)
    {
      v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v16;
      v9 = (_OWORD *)(v2[7] + 32 * v17);
      sub_1D141AC98((uint64_t)v9);
      result = (unint64_t)sub_1D141B3E4(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    result = (unint64_t)sub_1D141B3E4(&v27, (_OWORD *)(v2[7] + 32 * result));
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_36;
    v2[2] = v21;
LABEL_8:
    v7 = v12;
    v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t static IMDaemonCoreBridgeDelegate.syncReportDictionary()()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_syncState);

  v2 = objc_msgSend(v1, sel_syncReportDictionary);
  sub_1D166DA24();

  return 0;
}

uint64_t static IMDaemonCoreBridgeDelegate.syncReportDictionary(attemptCount:wasSuccessful:duration:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, double);

  v9 = (uint64_t (*)(uint64_t, uint64_t, double))((char *)&dword_1EFC63838 + dword_1EFC63838);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1D1631120;
  return v9(a1, a2, a3);
}

uint64_t sub_1D1651C6C(uint64_t a1, void *a2)
{
  id v2;

  **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  v2 = a2;
  return swift_continuation_resume();
}

void static IMDaemonCoreBridgeDelegate.setSyncDate(_:forKey:shouldOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = objc_msgSend(v5, sel_syncState);

  v7 = (void *)sub_1D166D5BC();
  v8 = (id)sub_1D166DAA8();
  objc_msgSend(v6, sel_setAnalyticSyncDatesDictionaryObject_forKey_shouldOverrideIfExists_, v7, v8, a4 & 1);

}

void static IMDaemonCoreBridgeDelegate.postSyncState(withStep:category:reportDictionary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  void *v6;
  uint64_t v7;
  id v8;

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = (void *)sub_1D166DAA8();
  v7 = sub_1D166D8A4();
  sub_1D16504F8(a4);
  v8 = (id)sub_1D166DA18();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_postSyncStateToRTC_category_reportDictionary_, v6, v7, v8);

}

uint64_t IMDaemonCoreBridgeDelegate.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t IMDaemonCoreBridgeDelegate.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1D1651E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D1652934(a1, a2, a3, (SEL *)&selRef_updateChatUsingSyncData_);
}

BOOL sub_1D1651E64()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
  v1 = (void *)sub_1D166DAA8();
  v2 = objc_msgSend(v0, sel_serviceWithName_, v1);

  if (v2)
  return v2 != 0;
}

id sub_1D1651EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D1651F10(a1, a2, a3, (SEL *)&selRef_shouldStoreMessageForItem_);
}

id sub_1D1651F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D1651F10(a1, a2, a3, (SEL *)&selRef_isCompatibleWithMiCForItem_);
}

id sub_1D1651F10(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  return objc_msgSend((id)objc_opt_self(), *a4, a1);
}

id sub_1D1651F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D1651FFC(a1, a2, a3, a4, a5, (SEL *)&selRef_isBackwardCompatibilityForItem_parentChatID_);
}

uint64_t sub_1D1651F54()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1D166DBD4();
  v2 = objc_msgSend(v0, sel_chatIdentitiesForMessageWithGUIDs_, v1);

  if (!v2)
    return 0;
  sub_1D141AC58(&qword_1ED935B90);
  v3 = sub_1D166DBEC();

  return v3;
}

id sub_1D1651FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D1651FFC(a1, a2, a3, a4, a5, (SEL *)&selRef_isExpectedChatIDForItem_chatID_);
}

id sub_1D1651FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  void *v8;
  void *v9;
  id v10;

  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_1D166DAA8();
  v10 = objc_msgSend(v8, *a6, a1, v9);

  return v10;
}

void sub_1D1652074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1D16523CC(a1, a2, a3, a4, a5, (SEL *)&selRef_setSortIDForItem_parentChatID_);
}

void sub_1D1652080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  id v7;

  v6 = (void *)objc_opt_self();
  v7 = (id)sub_1D166DAA8();
  objc_msgSend(v6, sel_addItem_toParentChatID_updatedLastMessageCount_, a1, v7, a4);

}

id sub_1D1652100()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;

  v0 = (void *)sub_1D166D58C();
  result = objc_msgSend(v0, sel__FTOptionallyDecompressData);
  if (result)
  {
    v2 = result;
    v3 = sub_1D166D598();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D1652164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D1652450(a1, a2, a3, a4, (SEL *)&selRef_removeTransferFromBackup_);
}

id sub_1D1652170(uint64_t a1)
{
  return objc_msgSend((id)objc_opt_self(), sel_updateTemporaryTransferGUIDsIfNeeded_, a1);
}

id sub_1D16521A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D1652350(a1, a2, a3, a4, (SEL *)&selRef_fileTransferWithGUID_);
}

void sub_1D16521B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;

  if (a3)
    v4 = (id)sub_1D166DAA8();
  else
    v4 = 0;
  objc_msgSend((id)objc_opt_self(), sel_storeAttachmentWithTransfer_withMessageGUID_, a1, v4);

}

id sub_1D1652214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;

  if (a3)
    v4 = (void *)sub_1D166DAA8();
  else
    v4 = 0;
  v5 = objc_msgSend((id)objc_opt_self(), sel_storeAttachmentWithTransfer_withChatGUID_, a1, v4);

  return v5;
}

id sub_1D1652278()
{
  return objc_msgSend((id)objc_opt_self(), sel_reloadDatabase);
}

id sub_1D165229C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D1652934(a1, a2, a3, (SEL *)&selRef_storeAttachmentsForMessage_);
}

id sub_1D16522A8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_1D166DAA8();
  v4 = objc_msgSend(v2, sel_createMessageItemWithRecordRef_handle_, a1, v3);

  return v4;
}

id sub_1D1652320()
{
  return objc_msgSend((id)objc_opt_self(), sel_updateStamp);
}

id sub_1D1652344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D1652350(a1, a2, a3, a4, (SEL *)&selRef_fileTransferForGUID_);
}

id sub_1D1652350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)objc_opt_self();
  v7 = (void *)sub_1D166DAA8();
  v8 = objc_msgSend(v6, *a5, v7);

  return v8;
}

void sub_1D16523C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1D16523CC(a1, a2, a3, a4, a5, (SEL *)&selRef_addTransfer_forGUID_);
}

void sub_1D16523CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  void *v8;
  id v9;

  v8 = (void *)objc_opt_self();
  v9 = (id)sub_1D166DAA8();
  objc_msgSend(v8, *a6, a1, v9);

}

void sub_1D1652444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D1652450(a1, a2, a3, a4, (SEL *)&selRef_updateTransfer_);
}

void sub_1D1652450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  id v7;

  v6 = (void *)objc_opt_self();
  v7 = (id)sub_1D166DAA8();
  objc_msgSend(v6, *a5, v7);

}

id sub_1D16524B8()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1D166DAA8();
  v2 = (void *)sub_1D166D520();
  v3 = objc_msgSend(v0, sel_registerGuid_forLocalURL_, v1, v2);

  return v3;
}

unint64_t sub_1D1652534()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_syncState);

  v2 = objc_msgSend(v1, sel_analyticSyncDatesDictionary);
  if (!v2)
    return 0;
  v3 = sub_1D166DA30();

  v4 = sub_1D1651784(v3);
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1D16525FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = objc_msgSend(v5, sel_syncState);

  v7 = (void *)sub_1D166D5BC();
  v8 = (id)sub_1D166DAA8();
  objc_msgSend(v6, sel_setAnalyticSyncDatesDictionaryObject_forKey_shouldOverrideIfExists_, v7, v8, a4 & 1);

}

id sub_1D16526BC()
{
  return objc_msgSend((id)objc_opt_self(), sel_hasFinishedAssetDownloadSync);
}

uint64_t sub_1D16526E4()
{
  id v0;
  void *v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_primaryAccountCountryCode);
  if (!v0)
    return 0;
  v1 = v0;
  v2 = sub_1D166DACC();

  return v2;
}

void sub_1D1652750()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = (void *)sub_1D166DBD4();
  v2 = (id)sub_1D166D5BC();
  objc_msgSend(v0, sel_moveMessagesWithGUIDsToRecentlyDeleted_deleteDate_, v1, v2);

}

void sub_1D16527E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  id v7;

  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1D166DAA8();
  v7 = (id)sub_1D166D5BC();
  objc_msgSend(v5, sel_moveMessagePartForGUID_deleteDate_partBody_, v6, v7, a4);

}

id sub_1D1652870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D1652894(a1, a2, a3, (SEL *)&selRef_ckRecordWithT1Info_);
}

id sub_1D165287C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D1652894(a1, a2, a3, (SEL *)&selRef_ckRecordWithT2Info_);
}

id sub_1D1652888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D1652894(a1, a2, a3, (SEL *)&selRef_ckRecordWithT3Info_);
}

id sub_1D1652894(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)objc_opt_self();
  sub_1D16504F8(a1);
  v7 = (void *)sub_1D166DA18();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, *a4, v7);

  return v8;
}

id sub_1D1652928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D1652934(a1, a2, a3, (SEL *)&selRef_handleMessageUpdateWithCKRecord_);
}

id sub_1D1652934(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  return objc_msgSend((id)objc_opt_self(), *a4, a1);
}

uint64_t sub_1D1652968()
{
  id v0;
  id v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_deviceActiveString);

  v2 = sub_1D166DACC();
  return v2;
}

id sub_1D16529E4()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_shouldReportToRTC);

  return v1;
}

uint64_t sub_1D1652A38()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_syncState);

  v2 = objc_msgSend(v1, sel_syncReportDictionary);
  sub_1D166DA24();

  return 0;
}

uint64_t sub_1D1652AEC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, double);

  v9 = (uint64_t (*)(uint64_t, uint64_t, double))((char *)&dword_1EFC63838 + dword_1EFC63838);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1D161319C;
  return v9(a1, a2, a3);
}

void sub_1D1652B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  void *v6;
  uint64_t v7;
  id v8;

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = (void *)sub_1D166DAA8();
  v7 = sub_1D166D8A4();
  sub_1D16504F8(a4);
  v8 = (id)sub_1D166DA18();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_postSyncStateToRTC_category_reportDictionary_, v6, v7, v8);

}

uint64_t sub_1D1652C44(uint64_t a1, char a2, double a3)
{
  uint64_t v3;

  *(double *)(v3 + 136) = a3;
  *(_BYTE *)(v3 + 152) = a2;
  *(_QWORD *)(v3 + 128) = a1;
  return swift_task_switch();
}

uint64_t sub_1D1652C64()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(double *)(v0 + 136);
  v2 = *(unsigned __int8 *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_syncState);
  *(_QWORD *)(v0 + 144) = v5;

  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1D1652D68;
  v6 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v7 = (_QWORD *)(v0 + 80);
  v7[1] = 0x40000000;
  v7[2] = sub_1D1651C6C;
  v7[3] = &unk_1E9231CF8;
  v7[4] = v6;
  objc_msgSend(v5, sel_syncReportDictionaryForAttempt_withSuccess_duration_completion_, v3, v2, v7, v1);
  return swift_continuation_await();
}

uint64_t sub_1D1652D68()
{
  return swift_task_switch();
}

uint64_t sub_1D1652DB4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 144);
  v2 = *(void **)(v0 + 120);
  sub_1D166DA24();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t type metadata accessor for IMDaemonCoreBridgeDelegate()
{
  return objc_opt_self();
}

uint64_t method lookup function for IMDaemonCoreBridgeDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D1652E54(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D141AC58((uint64_t *)&unk_1EFC63848);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D1652E94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return swift_task_switch();
}

uint64_t sub_1D1652EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEE9D8];
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR___IMDClientConnectionManager_connectionListeners);
  *(_QWORD *)(v0 + 72) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 80) = v2;
  if (!v2)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v0 + 88) = 0;
  v3 = v1 + 32;
  swift_bridgeObjectRetain();
  sub_1D1630FC8(v3, v0 + 16);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  sub_1D141AC34((_QWORD *)(v0 + 16), v4);
  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v5 + 8) + *(_QWORD *)(v5 + 8));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v6;
  *v6 = v0;
  v6[1] = sub_1D1652F90;
  return v8(v4, v5);
}

uint64_t sub_1D1652F90(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D1652FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88) + 1;
  sub_1D16571CC(*(_QWORD *)(v0 + 104));
  sub_1D141AC98(v0 + 16);
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 56));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 88) + 1;
    *(_QWORD *)(v0 + 88) = v4;
    sub_1D1630FC8(*(_QWORD *)(v0 + 72) + 40 * v4 + 32, v0 + 16);
    v5 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    sub_1D141AC34((_QWORD *)(v0 + 16), v5);
    v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v7;
    *v7 = v0;
    v7[1] = sub_1D1652F90;
    return v8(v5, v6);
  }
}

id ClientConnectionManager.__allocating_init(connectionListeners:)(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  char *v12;
  objc_super v14;

  v3 = sub_1D141AC58((uint64_t *)&unk_1ED9355D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D141AC58((uint64_t *)&unk_1ED935780);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_allocWithZone(v1);
  v11 = sub_1D166DCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DF07B8], v3);
  v12 = (char *)v10;
  sub_1D166D85C();
  *(_QWORD *)&v12[OBJC_IVAR___IMDClientConnectionManager_connectionListeners] = a1;

  v14.receiver = v12;
  v14.super_class = v1;
  return objc_msgSendSuper2(&v14, sel_init);
}

id ClientConnectionManager.init(connectionListeners:)(uint64_t a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  objc_super v15;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_1D141AC58((uint64_t *)&unk_1ED9355D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D141AC58((uint64_t *)&unk_1ED935780);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D166DCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DF07B8], v5);
  v13 = v2;
  sub_1D166D85C();
  *(_QWORD *)&v13[OBJC_IVAR___IMDClientConnectionManager_connectionListeners] = a1;

  v15.receiver = v13;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t ClientConnectionManager.startAcceptingIncomingConnections()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_1D1653380()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);

  if (qword_1ED935748 != -1)
    swift_once();
  v1 = sub_1D166D964();
  sub_1D141AC1C(v1, (uint64_t)qword_1ED936548);
  v2 = sub_1D166D94C();
  v3 = sub_1D166DD6C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D1413000, v2, v3, "Starting to accept incoming connections", v4, 2u);
    MEMORY[0x1D17EB0AC](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 56);

  objc_msgSend((id)objc_opt_self(), sel_registerSharedProvider_, v5);
  v6 = *(_QWORD *)(v5 + OBJC_IVAR___IMDClientConnectionManager_connectionListeners);
  *(_QWORD *)(v0 + 64) = v6;
  v7 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v0 + 72) = v7;
  if (!v7)
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_QWORD *)(v0 + 80) = 0;
  v8 = v6 + 32;
  swift_bridgeObjectRetain();
  sub_1D1630FC8(v8, v0 + 16);
  v9 = *(_QWORD *)(v0 + 40);
  v10 = *(_QWORD *)(v0 + 48);
  sub_1D141AC34((_QWORD *)(v0 + 16), v9);
  v13 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v10 + 16) + *(_QWORD *)(v10 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v11;
  *v11 = v0;
  v11[1] = sub_1D1653514;
  return v13(v9, v10);
}

uint64_t sub_1D1653514()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D1653568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80) + 1;
  sub_1D141AC98(v0 + 16);
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 80) + 1;
    *(_QWORD *)(v0 + 80) = v4;
    sub_1D1630FC8(*(_QWORD *)(v0 + 64) + 40 * v4 + 32, v0 + 16);
    v5 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    sub_1D141AC34((_QWORD *)(v0 + 16), v5);
    v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v6 + 16) + *(_QWORD *)(v6 + 16));
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v7;
    *v7 = v0;
    v7[1] = sub_1D1653514;
    return v8(v5, v6);
  }
}

void ClientConnectionManager.notifyClientsNewSetupInfoAvailable(requiredCapabilities:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  _QWORD aBlock[6];

  v2 = v1;
  if (qword_1ED935748 != -1)
    swift_once();
  v4 = sub_1D166D964();
  sub_1D141AC1C(v4, (uint64_t)qword_1ED936548);
  v5 = sub_1D166D94C();
  v6 = sub_1D166DD6C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1D1413000, v5, v6, "Notifying clients they need to re-request setup", v7, 2u);
    MEMORY[0x1D17EB0AC](v7, -1, -1);
  }

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = v2;
  v8[4] = a1;
  v8[5] = 0;
  v9 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D141C55C;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9231E70;
  v10 = _Block_copy(aBlock);
  v11 = v2;
  v12 = objc_msgSend(v9, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v10);
  _Block_release(v10);
  swift_release();
  objc_msgSend((id)swift_dynamicCastObjCProtocolUnconditional(), sel_newSetupInfoAvailable);

}

id ClientConnectionManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ClientConnectionManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ClientConnectionManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D1653900()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D1607C7C;
  v3[7] = v2;
  return swift_task_switch();
}

void sub_1D1653960(uint64_t a1)
{
  ClientConnectionManager.notifyClientsNewSetupInfoAvailable(requiredCapabilities:)(a1);
}

uint64_t sub_1D1653980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v10;

  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[6] = a2;
  v10 = (_QWORD *)swift_task_alloc();
  v8[13] = v10;
  *v10 = v8;
  v10[1] = sub_1D16539F0;
  v10[8] = a1;
  return swift_task_switch();
}

uint64_t sub_1D16539F0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D1653A4C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  const char *v6;
  uint64_t v7;
  NSString *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  NSObject *v26;
  uint64_t *v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  swift_retain();
  v2 = sub_1D141B580(v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ED935748 != -1)
    swift_once();
  v3 = sub_1D166D964();
  sub_1D141AC1C(v3, (uint64_t)qword_1ED936548);
  swift_bridgeObjectRetain();
  v4 = sub_1D166D94C();
  v5 = sub_1D166DD78();
  if (!os_log_type_enabled(v4, v5))
  {
    swift_bridgeObjectRelease_n();
LABEL_18:

    return (*(uint64_t (**)(void))(v30 + 8))();
  }
  v6 = *(const char **)(v30 + 96);
  v7 = swift_slowAlloc();
  v28 = swift_slowAlloc();
  v31 = v28;
  *(_DWORD *)v7 = 136315394;
  v8 = NSStringFromSelector(v6);
  v9 = sub_1D166DACC();
  v11 = v10;

  *(_QWORD *)(v30 + 32) = sub_1D141BCB4(v9, v11, &v31);
  v27 = (uint64_t *)(v0 + 40);
  sub_1D166DF28();
  swift_bridgeObjectRelease();
  v29 = (uint8_t *)v7;
  *(_WORD *)(v7 + 12) = 2080;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v13 = MEMORY[0x1E0DEE9D8];
  if (!v12)
  {
LABEL_17:
    v23 = MEMORY[0x1D17E8B08](v13, MEMORY[0x1E0DEA968]);
    v25 = v24;
    swift_bridgeObjectRelease();
    *v27 = sub_1D141BCB4(v23, v25, &v31);
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D1413000, v4, v5, "Broadcasting %s to: %s", v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v28, -1, -1);
    MEMORY[0x1D17EB0AC](v29, -1, -1);
    goto LABEL_18;
  }
  v32 = MEMORY[0x1E0DEE9D8];
  result = sub_1D164F570(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    v15 = 0;
    v26 = v4;
    v13 = v32;
    v16 = v2 & 0xC000000000000001;
    v17 = v2;
    do
    {
      if (v16)
        MEMORY[0x1D17E8FD0](v15, v2);
      else
        swift_retain();
      sub_1D166D7CC();
      swift_release();
      v18 = *(_QWORD *)(v30 + 16);
      v19 = *(_QWORD *)(v30 + 24);
      v32 = v13;
      v21 = *(_QWORD *)(v13 + 16);
      v20 = *(_QWORD *)(v13 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1D164F570(v20 > 1, v21 + 1, 1);
        v13 = v32;
      }
      ++v15;
      *(_QWORD *)(v13 + 16) = v21 + 1;
      v22 = v13 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v19;
      v2 = v17;
    }
    while (v12 != v15);
    v4 = v26;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t ClientConnectionManager.broadcasterForAllListeners.getter()
{
  void *v0;
  _QWORD *v1;
  id v2;
  void *v3;
  id v4;
  _QWORD aBlock[6];

  v1 = (_QWORD *)swift_allocObject();
  v1[2] = 0;
  v1[3] = v0;
  v1[4] = 0;
  v1[5] = 0;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9231EC0;
  v3 = _Block_copy(aBlock);
  v4 = v0;
  objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v3);
  _Block_release(v3);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForAccountListeners.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  _QWORD aBlock[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_OWORD *)(v1 + 32) = xmmword_1D1684D70;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9231F10;
  v3 = _Block_copy(aBlock);
  v4 = v0;
  objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v3);
  _Block_release(v3);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForCloudSyncListeners.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  _QWORD aBlock[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_OWORD *)(v1 + 32) = xmmword_1D1684D80;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9231F60;
  v3 = _Block_copy(aBlock);
  v4 = v0;
  objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v3);
  _Block_release(v3);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForFileTransferListeners.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  _QWORD aBlock[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_OWORD *)(v1 + 32) = xmmword_1D1684D90;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9231FB0;
  v3 = _Block_copy(aBlock);
  v4 = v0;
  objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v3);
  _Block_release(v3);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForListeners(supporting:)(void *a1)
{
  void *v1;
  _QWORD *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD aBlock[6];

  v3 = (_QWORD *)swift_allocObject();
  v3[2] = a1;
  v3[3] = v1;
  v3[4] = 0;
  v3[5] = 0;
  v4 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9232000;
  v5 = _Block_copy(aBlock);
  v6 = a1;
  v7 = v1;
  objc_msgSend(v4, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v5);
  _Block_release(v5);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForKeyTransparencyListeners.getter()
{
  return sub_1D1654854((uint64_t)&unk_1E9232038, (uint64_t)sub_1D16575DC, (uint64_t)&unk_1E9232050);
}

id sub_1D165471C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  _QWORD aBlock[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = a1;
  *(_OWORD *)(v8 + 32) = xmmword_1D1684DA0;
  v9 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = a4;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = a5;
  v10 = _Block_copy(aBlock);
  v11 = a1;
  objc_msgSend(v9, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v10);
  _Block_release(v10);
  swift_release();
  v12 = (void *)swift_dynamicCastObjCProtocolUnconditional();

  return v12;
}

uint64_t ClientConnectionManager.broadcasterForChatListeners.getter()
{
  return sub_1D1654854((uint64_t)&unk_1E9232088, (uint64_t)sub_1D16575DC, (uint64_t)&unk_1E92320A0);
}

uint64_t sub_1D1654854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  _QWORD aBlock[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = v3;
  *(_OWORD *)(v6 + 32) = xmmword_1D1684DA0;
  v7 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = a2;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = a3;
  v8 = _Block_copy(aBlock);
  v9 = v3;
  objc_msgSend(v7, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v8);
  _Block_release(v8);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForChatListeners(supporting:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD aBlock[6];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = xmmword_1D1684DA0;
  v4 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E92320F0;
  v5 = _Block_copy(aBlock);
  v6 = a1;
  v7 = v1;
  objc_msgSend(v4, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v5);
  _Block_release(v5);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForSentMessageListeners(supporting:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD aBlock[6];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = xmmword_1D1684DB0;
  v4 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9232140;
  v5 = _Block_copy(aBlock);
  v6 = a1;
  v7 = v1;
  objc_msgSend(v4, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v5);
  _Block_release(v5);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForBlackholeChatListeners.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  _QWORD aBlock[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_OWORD *)(v1 + 32) = xmmword_1D1684DC0;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9232190;
  v3 = _Block_copy(aBlock);
  v4 = v0;
  objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v3);
  _Block_release(v3);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForBlackholeChatListeners(supporting:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD aBlock[6];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = xmmword_1D1684DC0;
  v4 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E92321E0;
  v5 = _Block_copy(aBlock);
  v6 = a1;
  v7 = v1;
  objc_msgSend(v4, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v5);
  _Block_release(v5);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForChatListeners(usingBlackholeRegistry:)(char a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t aBlock;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, void *);
  void *v11;
  uint64_t (*v12)();
  uint64_t v13;

  if ((a1 & 1) != 0)
  {
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)(v2 + 24) = v1;
    *(_OWORD *)(v2 + 32) = xmmword_1D1684DC0;
    v3 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
    v12 = sub_1D16575DC;
    v13 = v2;
    aBlock = MEMORY[0x1E0C809B0];
    v9 = 1107296256;
    v10 = sub_1D1416674;
    v11 = &unk_1E9232280;
  }
  else
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = 0;
    *(_QWORD *)(v6 + 24) = v1;
    *(_OWORD *)(v6 + 32) = xmmword_1D1684DA0;
    v3 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
    v12 = sub_1D16575DC;
    v13 = v6;
    aBlock = MEMORY[0x1E0C809B0];
    v9 = 1107296256;
    v10 = sub_1D1416674;
    v11 = &unk_1E9232230;
  }
  v4 = _Block_copy(&aBlock);
  v5 = v1;
  objc_msgSend(v3, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v4);
  _Block_release(v4);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForChatDatabaseListeners.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t aBlock;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, void *);
  void *v23;
  uint64_t (*v24)();
  uint64_t v25;

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_OWORD *)(v1 + 32) = xmmword_1D1684DA0;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  v24 = sub_1D16575DC;
  v25 = v1;
  v3 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v21 = 1107296256;
  v22 = sub_1D1416674;
  v23 = &unk_1E92322D0;
  v4 = _Block_copy(&aBlock);
  v5 = v0;
  v6 = objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v4);
  _Block_release(v4);
  swift_release();
  v7 = swift_dynamicCastObjCProtocolUnconditional();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = v5;
  *(_OWORD *)(v8 + 32) = xmmword_1D1684DD0;
  v9 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  v24 = sub_1D16575DC;
  v25 = v8;
  aBlock = v3;
  v21 = 1107296256;
  v22 = sub_1D1416674;
  v23 = &unk_1E9232320;
  v10 = _Block_copy(&aBlock);
  v11 = v5;
  v12 = objc_msgSend(v9, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v10);
  _Block_release(v10);
  swift_release();
  v13 = swift_dynamicCastObjCProtocolUnconditional();
  sub_1D141AC58(&qword_1ED935838);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1D16832F0;
  *(_QWORD *)(v14 + 56) = swift_getObjectType();
  *(_QWORD *)(v14 + 32) = v7;
  *(_QWORD *)(v14 + 88) = swift_getObjectType();
  *(_QWORD *)(v14 + 64) = v13;
  v15 = objc_allocWithZone(MEMORY[0x1E0D39818]);
  v16 = v6;
  v17 = v12;
  v18 = (void *)sub_1D166DBD4();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_initWithTargets_, v18);

  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForChatCountsListeners.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t aBlock;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, void *);
  void *v23;
  uint64_t (*v24)();
  uint64_t v25;

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_OWORD *)(v1 + 32) = xmmword_1D1684DA0;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  v24 = sub_1D16575DC;
  v25 = v1;
  v3 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v21 = 1107296256;
  v22 = sub_1D1416674;
  v23 = &unk_1E9232370;
  v4 = _Block_copy(&aBlock);
  v5 = v0;
  v6 = objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v4);
  _Block_release(v4);
  swift_release();
  v7 = swift_dynamicCastObjCProtocolUnconditional();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = v5;
  *(_OWORD *)(v8 + 32) = xmmword_1D1684DE0;
  v9 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  v24 = sub_1D16575DC;
  v25 = v8;
  aBlock = v3;
  v21 = 1107296256;
  v22 = sub_1D1416674;
  v23 = &unk_1E92323C0;
  v10 = _Block_copy(&aBlock);
  v11 = v5;
  v12 = objc_msgSend(v9, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v10);
  _Block_release(v10);
  swift_release();
  v13 = swift_dynamicCastObjCProtocolUnconditional();
  sub_1D141AC58(&qword_1ED935838);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1D16832F0;
  *(_QWORD *)(v14 + 56) = swift_getObjectType();
  *(_QWORD *)(v14 + 32) = v7;
  *(_QWORD *)(v14 + 88) = swift_getObjectType();
  *(_QWORD *)(v14 + 64) = v13;
  v15 = objc_allocWithZone(MEMORY[0x1E0D39818]);
  v16 = v6;
  v17 = v12;
  v18 = (void *)sub_1D166DBD4();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_initWithTargets_, v18);

  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForFileProviderListeners.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  _QWORD aBlock[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_OWORD *)(v1 + 32) = xmmword_1D1684DF0;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9232410;
  v3 = _Block_copy(aBlock);
  v4 = v0;
  objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v3);
  _Block_release(v3);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForNotificationListeners(supporting:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD aBlock[6];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = xmmword_1D1684D70;
  v4 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9232460;
  v5 = _Block_copy(aBlock);
  v6 = a1;
  v7 = v1;
  objc_msgSend(v4, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v5);
  _Block_release(v5);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForAVConferenceListeners(supporting:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD aBlock[6];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = xmmword_1D1684E00;
  v4 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E92324B0;
  v5 = _Block_copy(aBlock);
  v6 = a1;
  v7 = v1;
  objc_msgSend(v4, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v5);
  _Block_release(v5);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForACConferenceListeners(supporting:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD aBlock[6];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = xmmword_1D1684E10;
  v4 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9232500;
  v5 = _Block_copy(aBlock);
  v6 = a1;
  v7 = v1;
  objc_msgSend(v4, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v5);
  _Block_release(v5);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForVCConferenceListeners(supporting:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD aBlock[6];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = xmmword_1D1684E20;
  v4 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9232550;
  v5 = _Block_copy(aBlock);
  v6 = a1;
  v7 = v1;
  objc_msgSend(v4, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v5);
  _Block_release(v5);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForAVConferenceListeners.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  _QWORD aBlock[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_OWORD *)(v1 + 32) = xmmword_1D1684E00;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E92325A0;
  v3 = _Block_copy(aBlock);
  v4 = v0;
  objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v3);
  _Block_release(v3);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForACConferenceListeners.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  _QWORD aBlock[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_OWORD *)(v1 + 32) = xmmword_1D1684E10;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E92325F0;
  v3 = _Block_copy(aBlock);
  v4 = v0;
  objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v3);
  _Block_release(v3);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForSyncedSettingsListeners.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  _QWORD aBlock[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_OWORD *)(v1 + 32) = xmmword_1D1684E30;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9232640;
  v3 = _Block_copy(aBlock);
  v4 = v0;
  objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v3);
  _Block_release(v3);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForCollaborationListeners(supporting:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD aBlock[6];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = xmmword_1D1684E40;
  v4 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E9232690;
  v5 = _Block_copy(aBlock);
  v6 = a1;
  v7 = v1;
  objc_msgSend(v4, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v5);
  _Block_release(v5);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t ClientConnectionManager.broadcasterForCollaborationListeners.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  _QWORD aBlock[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_OWORD *)(v1 + 32) = xmmword_1D1684E40;
  v2 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  aBlock[4] = sub_1D16575DC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D1416674;
  aBlock[3] = &unk_1E92326E0;
  v3 = _Block_copy(aBlock);
  v4 = v0;
  objc_msgSend(v2, sel_initWithProtocol_forwardingHandler_, &unk_1EFCA58A0, v3);
  _Block_release(v3);
  swift_release();
  return swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t sub_1D1657074()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D16570A0()
{
  return type metadata accessor for ClientConnectionManager();
}

uint64_t type metadata accessor for ClientConnectionManager()
{
  uint64_t result;

  result = qword_1ED935520;
  if (!qword_1ED935520)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D16570E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D166D868();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ClientConnectionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClientConnectionManager.__allocating_init(connectionListeners:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D1657174()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D1657198()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D16571CC(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1D17E8FDC](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1D1657384(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1D166E15C();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1D166DC04();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D1657384(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D166E15C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D1657590();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_1D141AC58(&qword_1EFC638F8);
          v12 = sub_1D1612BC8(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for ClientConnection();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1D166E18C();
  __break(1u);
  return result;
}

uint64_t sub_1D165757C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1D165EF54(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void (**)(_QWORD *))(v2 + 56), a2);
}

unint64_t sub_1D1657590()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC63900;
  if (!qword_1EFC63900)
  {
    v1 = sub_1D15FC6A0(&qword_1EFC638F8);
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC63900);
  }
  return result;
}

unint64_t IMDMessageStore.batchOfRecordIDsToDelete(limit:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  unint64_t result;
  uint64_t v20;
  unint64_t v21;

  v3 = v2;
  v4 = v1;
  v6 = objc_msgSend(v1, sel_recordZoneID);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v4, sel_recordIDsAndGUIDsToDeleteWithLimit_, a1);
    sub_1D141AC58(&qword_1ED935B90);
    v9 = sub_1D166DBEC();

    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v21 = MEMORY[0x1E0DEE9E0];
      swift_bridgeObjectRetain();
      v11 = 0;
      while (1)
      {
        v20 = *(_QWORD *)(v9 + 8 * v11 + 32);
        swift_bridgeObjectRetain();
        sub_1D1657AE4((uint64_t)&v21, &v20, v7);
        if (v3)
          break;
        v3 = 0;
        ++v11;
        swift_bridgeObjectRelease();
        if (v10 == v11)
        {
          swift_bridgeObjectRelease_n();
          v12 = v21;
          v13 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
          v14 = objc_msgSend(v13, sel_syncState);

          objc_msgSend(v14, sel_setSyncControllerSyncState_withRecordType_, 3, 1);
          return v12;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      v12 = sub_1D160F5D4(MEMORY[0x1E0DEE9D8]);

      return v12;
    }
  }
  else
  {
    if (qword_1ED935B68 != -1)
      swift_once();
    v15 = sub_1D166D964();
    sub_1D141AC1C(v15, (uint64_t)qword_1ED936590);
    v16 = sub_1D166D94C();
    v17 = sub_1D166DD84();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1D1413000, v16, v17, "No record zone initialized in IMDRecordZoneManager.", v18, 2u);
      MEMORY[0x1D17EB0AC](v18, -1, -1);
    }

    return sub_1D160F5D4(MEMORY[0x1E0DEE9D8]);
  }
  return result;
}

void sub_1D1657AE4(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  void *v12;
  char v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v16[5];
  __int128 v17;
  __int128 v18;

  v5 = *a2;
  sub_1D166E048();
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_1D141B48C((uint64_t)v16), (v7 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  sub_1D1607C44((uint64_t)v16);
  if (!*((_QWORD *)&v18 + 1))
    goto LABEL_18;
  if ((swift_dynamicCast() & 1) == 0)
    return;
  sub_1D166E048();
  if (*(_QWORD *)(v5 + 16) && (v8 = sub_1D141B48C((uint64_t)v16), (v9 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(v5 + 56) + 32 * v8, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  sub_1D1607C44((uint64_t)v16);
  if (!*((_QWORD *)&v18 + 1))
  {
    swift_bridgeObjectRelease();
LABEL_18:
    sub_1D1608CC4((uint64_t)&v17);
    return;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1D16107C8();
    v10 = a3;
    v11 = sub_1D166DD48();
    v12 = (void *)v11;
    if (*(_QWORD *)(*(_QWORD *)a1 + 16))
    {
      sub_1D1616458(v11);
      if ((v13 & 1) != 0)
      {
        swift_bridgeObjectRelease();

        return;
      }
    }
    v14 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16[0] = *(_QWORD *)a1;
    *(_QWORD *)a1 = 0x8000000000000000;
    sub_1D164C900(1684632935, 0xE400000000000000, v14, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)a1 = v16[0];

  }
  swift_bridgeObjectRelease();
}

uint64_t _sSo15IMDMessageStoreC12IMDaemonCoreE25recordIDsAndGUIDsToDelete9withLimitSaySDys11AnyHashableVypGGs5Int64V_tF_0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v0 = IMDMessageRecordCopyRecordIDsAndGUIDsToDeleteWithLimit();
  if (v0)
  {
    v1 = (void *)v0;
    sub_1D141AC58(&qword_1ED935B90);
    sub_1D166DBE0();

  }
  if (qword_1ED935B68 != -1)
    swift_once();
  v2 = sub_1D166D964();
  sub_1D141AC1C(v2, (uint64_t)qword_1ED936590);
  v3 = sub_1D166D94C();
  v4 = sub_1D166DD84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1D1413000, v3, v4, "Could not retrieve messages metadatas from IMDPersistence, returning nil from DeletedMessageStore.", v5, 2u);
    MEMORY[0x1D17EB0AC](v5, -1, -1);
  }

  return MEMORY[0x1E0DEE9D8];
}

uint64_t _sSo15IMDMessageStoreC12IMDaemonCoreE15clearTombstones12forRecordIDsySaySo10CKRecordIDCG_tF_0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  if (qword_1ED935B68 != -1)
    swift_once();
  v0 = sub_1D166D964();
  sub_1D141AC1C(v0, (uint64_t)qword_1ED936590);
  swift_bridgeObjectRetain_n();
  v1 = sub_1D166D94C();
  v2 = sub_1D166DD9C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v11 = v4;
    *(_DWORD *)v3 = 136315138;
    v5 = sub_1D16107C8();
    v6 = swift_bridgeObjectRetain();
    v7 = MEMORY[0x1D17E8B08](v6, v5);
    v9 = v8;
    swift_bridgeObjectRelease();
    sub_1D141BCB4(v7, v9, &v11);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v1, v2, "Clearing message tombstones for recordIDs: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v4, -1, -1);
    MEMORY[0x1D17EB0AC](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return IMDMessageRecordClearDeleteTombStones();
}

uint64_t sub_1D1658130()
{
  uint64_t v0;

  v0 = sub_1D166D964();
  sub_1D15FD440(v0, qword_1ED935B00);
  sub_1D141AC1C(v0, (uint64_t)qword_1ED935B00);
  sub_1D166D940();
  return sub_1D166D958();
}

id sub_1D1658198()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)IMDKeyTransparencyController), sel_init);
  qword_1ED935650 = (uint64_t)result;
  return result;
}

uint64_t sub_1D16581C8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  char v2;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___IMDKeyTransparencyController_state);
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v1 + 5);
  v2 = sub_1D1658D54();
  os_unfair_lock_unlock(v1 + 5);
  swift_release();
  swift_release_n();
  return v2 & 1;
}

id sub_1D1658260()
{
  void *v0;
  id v1;
  char *v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  objc_super v9;

  sub_1D166DACC();
  v1 = objc_allocWithZone(MEMORY[0x1E0DC0940]);
  v2 = v0;
  v3 = (void *)sub_1D166DAA8();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_initWithApplication_, v3);

  *(_QWORD *)&v2[OBJC_IVAR___IMDKeyTransparencyController_app] = v4;
  sub_1D141AC58(&qword_1ED9356A0);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 20) = 0;
  *(_WORD *)(v5 + 16) = 0;
  *(_QWORD *)&v2[OBJC_IVAR___IMDKeyTransparencyController_state] = v5;

  v9.receiver = v2;
  v9.super_class = (Class)IMDKeyTransparencyController;
  v6 = objc_msgSendSuper2(&v9, sel_init);
  sub_1D16583B0();
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v7, sel_addObserver_selector_name_object_, v6, sel_optInStateChanged_, *MEMORY[0x1E0DC0970], 0);

  return v6;
}

void sub_1D16583B0()
{
  char *v0;
  char *v1;
  os_unfair_lock_s *v2;
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  _QWORD v12[6];

  v1 = v0;
  v2 = *(os_unfair_lock_s **)&v0[OBJC_IVAR___IMDKeyTransparencyController_state];
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2 + 5);
  v3 = sub_1D1658D54();
  os_unfair_lock_unlock(v2 + 5);
  swift_release();
  swift_release_n();
  if (qword_1ED935B20 != -1)
    swift_once();
  v4 = sub_1D166D964();
  sub_1D141AC1C(v4, (uint64_t)qword_1ED935B00);
  v5 = sub_1D166D94C();
  v6 = sub_1D166DD78();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 67240192;
    LODWORD(v12[0]) = (v3 & 1) == 0;
    sub_1D166DF28();
    _os_log_impl(&dword_1D1413000, v5, v6, "Refreshing opt-in state. initial load: %{BOOL,public}d", v7, 8u);
    MEMORY[0x1D17EB0AC](v7, -1, -1);
  }

  v8 = *(void **)&v1[OBJC_IVAR___IMDKeyTransparencyController_app];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v1;
  v12[4] = sub_1D1658D34;
  v12[5] = v9;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1D1658934;
  v12[3] = &unk_1E9232E80;
  v10 = _Block_copy(v12);
  v11 = v1;
  swift_release();
  objc_msgSend(v8, sel_getOptInState_completionBlock_, 0, v10);
  _Block_release(v10);
}

id sub_1D16585EC(char a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  id result;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];
  unsigned __int8 v28;

  v2 = v1;
  v4 = sub_1D166D9C4();
  v25 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D166D9F4();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)&v1[OBJC_IVAR___IMDKeyTransparencyController_state];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 20));
  v11 = *(unsigned __int8 *)(v10 + 17);
  v12 = a1 & 1;
  *(_BYTE *)(v10 + 17) = a1;
  v13 = *(_BYTE *)(v10 + 16) ^ 1;
  v28 = v13 & 1;
  *(_BYTE *)(v10 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 20));
  result = (id)swift_release();
  if (v11 != (a1 & 1) || (v13 & 1) != 0)
  {
    if (qword_1ED935B20 != -1)
      swift_once();
    v15 = sub_1D166D964();
    sub_1D141AC1C(v15, (uint64_t)qword_1ED935B00);
    v16 = sub_1D166D94C();
    v17 = sub_1D166DD6C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      *(_DWORD *)v18 = 67174913;
      LODWORD(aBlock[0]) = a1 & 1;
      sub_1D166DF28();
      *(_WORD *)(v18 + 8) = 1026;
      swift_beginAccess();
      LODWORD(aBlock[0]) = v28;
      sub_1D166DF28();
      _os_log_impl(&dword_1D1413000, v16, v17, "Updated KT opt in state: %{BOOL,private}d. initial load? %{BOOL,public}d", (uint8_t *)v18, 0xEu);
      MEMORY[0x1D17EB0AC](v18, -1, -1);
    }

    result = (id)im_primary_queue();
    if (result)
    {
      v19 = result;
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v2;
      *(_BYTE *)(v20 + 24) = v12;
      aBlock[4] = sub_1D1658D04;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1D141BC88;
      aBlock[3] = &unk_1E9232E30;
      v21 = _Block_copy(aBlock);
      v22 = v2;
      sub_1D166D9E8();
      v26 = MEMORY[0x1E0DEE9D8];
      sub_1D16433D0();
      sub_1D141AC58(&qword_1ED9355A8);
      sub_1D1643418();
      sub_1D166DF88();
      MEMORY[0x1D17E8D30](0, v9, v6, v21);
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
      return (id)swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1D1658934(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t, char *, void *);
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v8 = sub_1D141AC58(&qword_1ED9354E8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(uint64_t, char *, void *))(a1 + 32);
  if (a3)
  {
    sub_1D166D604();
    v12 = sub_1D166D628();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    v13 = sub_1D166D628();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  swift_retain();
  v14 = a4;
  v11(a2, v10, a4);
  swift_release();

  return sub_1D141BA80((uint64_t)v10, &qword_1ED9354E8);
}

uint64_t sub_1D1658A40()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  char v5[40];
  __int128 v6;
  __int128 v7;

  v0 = sub_1D166D454();
  if (!v0)
  {
    v6 = 0u;
    v7 = 0u;
    return sub_1D141BA80((uint64_t)&v6, &qword_1ED935840);
  }
  v1 = v0;
  sub_1D166DACC();
  sub_1D166E048();
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_1D141B48C((uint64_t)v5), (v3 & 1) != 0))
  {
    sub_1D141B3A8(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v6);
  }
  else
  {
    v6 = 0u;
    v7 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1D1607C44((uint64_t)v5);
  if (!*((_QWORD *)&v7 + 1))
    return sub_1D141BA80((uint64_t)&v6, &qword_1ED935840);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
    return (uint64_t)sub_1D16585EC(v5[0]);
  return result;
}

id sub_1D1658BD8(uint64_t a1, char a2)
{
  id result;
  id v4;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedProvider);
  if (result)
  {
    v4 = objc_msgSend(result, sel_broadcasterForKeyTransparencyListeners);
    swift_unknownObjectRelease();
    objc_msgSend(v4, sel_keyTransparencyOptInStateChanged_, a2 & 1);
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

unint64_t type metadata accessor for IMDKeyTransparencyController()
{
  unint64_t result;

  result = qword_1EFC63920;
  if (!qword_1EFC63920)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFC63920);
  }
  return result;
}

uint64_t sub_1D1658CE0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1D1658D04()
{
  uint64_t v0;

  return sub_1D1658BD8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1D1658D10()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1D1658D34(char a1)
{
  return sub_1D16585EC(a1);
}

uint64_t sub_1D1658D54()
{
  unsigned __int8 v1;

  swift_getAtKeyPath();
  return v1;
}

_WORD *_s5StateVwCP(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s5StateVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s5StateVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D1658E8C + 4 * byte_1D1684EBD[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1D1658EC0 + 4 * byte_1D1684EB8[v4]))();
}

uint64_t sub_1D1658EC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D1658EC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1D1658ED0);
  return result;
}

uint64_t sub_1D1658EDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1D1658EE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D1658EE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D1658EF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

id sub_1D1658F14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR___IMDCollaborationNoticeStore____lazy_storage___persistenceContainer;
  v2 = *(void **)(v0 + OBJC_IVAR___IMDCollaborationNoticeStore____lazy_storage___persistenceContainer);
  v3 = v2;
  if (v2 == (void *)1)
  {
    v3 = sub_1D1658F80();
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;
    sub_1D165DD9C(v4);
  }
  sub_1D165DDF4(v2);
  return v3;
}

id sub_1D1658F80()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  os_log_type_t v42;
  void (*v43)(char *, uint64_t);
  id v44;
  _QWORD *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  void *v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  id v69;
  char *v70;
  char *v71;
  id v72;
  uint64_t aBlock[6];
  uint64_t v74;

  v0 = sub_1D141AC58(&qword_1ED9356E0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v66 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D166D580();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v70 = (char *)&v66 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v66 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v66 - v14;
  MEMORY[0x1E0C80A78](v13);
  v71 = (char *)&v66 - v16;
  swift_getObjectType();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v18 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v19 = (void *)sub_1D166DAA8();
  v20 = (void *)sub_1D166DAA8();
  v72 = v18;
  v21 = objc_msgSend(v18, sel_URLForResource_withExtension_, v19, v20);

  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_10;
  }
  sub_1D166D550();

  v22 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v22(v2, v15, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_10:
    sub_1D141BA80((uint64_t)v2, &qword_1ED9356E0);
LABEL_11:
    if (qword_1ED935750 != -1)
      swift_once();
    v48 = sub_1D166D964();
    sub_1D141AC1C(v48, (uint64_t)qword_1ED936560);
    v49 = sub_1D166D94C();
    v50 = sub_1D166DD84();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_1D1413000, v49, v50, "Unable to generate objectModelURL, aborting.", v51, 2u);
      MEMORY[0x1D17EB0AC](v51, -1, -1);
    }

    return 0;
  }
  v23 = v71;
  v22(v71, v2, v3);
  v24 = objc_allocWithZone(MEMORY[0x1E0C97B98]);
  v25 = (void *)sub_1D166D520();
  v26 = objc_msgSend(v24, sel_initWithContentsOfURL_, v25);

  if (!v26)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v23, v3);
    goto LABEL_11;
  }
  v27 = objc_allocWithZone(MEMORY[0x1E0C97BC8]);
  v28 = v26;
  v29 = (void *)sub_1D166DAA8();
  v30 = objc_msgSend(v27, sel_initWithName_managedObjectModel_, v29, v28);

  v69 = v28;
  v31 = objc_msgSend((id)*MEMORY[0x1E0D37C20], sel_stringByResolvingAndStandardizingPath);
  if (!v31)
  {
    if (qword_1ED935750 != -1)
      swift_once();
    v53 = sub_1D166D964();
    sub_1D141AC1C(v53, (uint64_t)qword_1ED936560);
    v54 = sub_1D166D94C();
    v55 = sub_1D166DD84();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      aBlock[0] = v57;
      *(_DWORD *)v56 = 136315138;
      v58 = sub_1D166DACC();
      v74 = sub_1D141BCB4(v58, v59, aBlock);
      sub_1D166DF28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D1413000, v54, v55, "Unable to resolve collaboration notice directory path %s", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v57, -1, -1);
      MEMORY[0x1D17EB0AC](v56, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v71, v3);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v23, v3);
    }
    return 0;
  }
  v32 = v31;
  sub_1D166DACC();
  IMSharedHelperEnsureDirectoryExistsAtPath();

  v33 = v12;
  sub_1D166D508();
  swift_bridgeObjectRelease();
  v34 = v70;
  v68 = v33;
  sub_1D166D52C();
  if (qword_1ED935750 != -1)
    swift_once();
  v35 = sub_1D166D964();
  sub_1D141AC1C(v35, (uint64_t)qword_1ED936560);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v34, v3);
  v36 = v30;
  v37 = sub_1D166D94C();
  v38 = sub_1D166DD9C();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc();
    v66 = (_QWORD *)swift_slowAlloc();
    v67 = swift_slowAlloc();
    aBlock[0] = v67;
    *(_DWORD *)v39 = 136315394;
    sub_1D15FC784(&qword_1EFC63950, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v40 = sub_1D166E1BC();
    v74 = sub_1D141BCB4(v40, v41, aBlock);
    v42 = v38;
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    v43 = *(void (**)(char *, uint64_t))(v4 + 8);
    v43(v7, v3);
    *(_WORD *)(v39 + 12) = 2112;
    v74 = (uint64_t)v36;
    v44 = v36;
    sub_1D166DF28();
    v45 = v66;
    *v66 = v36;

    v46 = v42;
    v34 = v70;
    v23 = v71;
    _os_log_impl(&dword_1D1413000, v37, v46, "Loading store at storeURL: %s with persistenceContainer:%@", (uint8_t *)v39, 0x16u);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v45, -1, -1);
    v47 = v67;
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v47, -1, -1);
    MEMORY[0x1D17EB0AC](v39, -1, -1);

  }
  else
  {
    v43 = *(void (**)(char *, uint64_t))(v4 + 8);
    v43(v7, v3);

  }
  sub_1D141AC58(&qword_1ED935880);
  v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_1D1683310;
  v61 = objc_allocWithZone(MEMORY[0x1E0C97C08]);
  v62 = (void *)sub_1D166D520();
  v63 = objc_msgSend(v61, sel_initWithURL_, v62);

  *(_QWORD *)(v60 + 32) = v63;
  aBlock[0] = v60;
  sub_1D166DC04();
  sub_1D15FD3C0(0, &qword_1EFC63948);
  v64 = (void *)sub_1D166DBD4();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_setPersistentStoreDescriptions_, v64);

  aBlock[4] = (uint64_t)sub_1D16598D0;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D1659C4C;
  aBlock[3] = (uint64_t)&unk_1E9232F28;
  v65 = _Block_copy(aBlock);
  objc_msgSend(v36, sel_loadPersistentStoresWithCompletionHandler_, v65);
  _Block_release(v65);

  v43(v34, v3);
  v43(v68, v3);
  v43(v23, v3);
  return v36;
}

void sub_1D16598D0(void *a1, void *a2)
{
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  NSObject *oslog;
  uint64_t v24;

  if (a2)
  {
    if (qword_1ED935750 != -1)
      swift_once();
    v3 = sub_1D166D964();
    sub_1D141AC1C(v3, (uint64_t)qword_1ED936560);
    v4 = a2;
    v5 = a2;
    oslog = sub_1D166D94C();
    v6 = sub_1D166DD84();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v24 = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = a2;
      sub_1D141AC58(&qword_1EFC63958);
      v10 = sub_1D166DAE4();
      sub_1D141BCB4(v10, v11, &v24);
      sub_1D166DF28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D1413000, oslog, v6, "Error loading store: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v8, -1, -1);
      MEMORY[0x1D17EB0AC](v7, -1, -1);

      return;
    }

  }
  else
  {
    if (qword_1ED935750 != -1)
      swift_once();
    v13 = sub_1D166D964();
    sub_1D141AC1C(v13, (uint64_t)qword_1ED936560);
    oslog = a1;
    v14 = sub_1D166D94C();
    v15 = sub_1D166DD9C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v24 = v17;
      *(_DWORD *)v16 = 136315138;
      v18 = oslog;
      v19 = -[NSObject description](v18, sel_description);
      v20 = sub_1D166DACC();
      v22 = v21;

      sub_1D141BCB4(v20, v22, &v24);
      sub_1D166DF28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D1413000, v14, v15, "Successfully loaded store: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v17, -1, -1);
      MEMORY[0x1D17EB0AC](v16, -1, -1);

      return;
    }

  }
}

void sub_1D1659C4C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

void sub_1D1659CC0(void *a1)
{
  uint64_t v2;
  void (**v3)(_QWORD, _QWORD);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  NSObject *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  id v22;
  id v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  NSObject *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  _QWORD *v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  id v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  void *v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (**v67)(_QWORD, _QWORD);
  NSObject *v68;
  uint64_t v69;
  id v70[2];

  v70[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1D166D580();
  v3 = *(void (***)(_QWORD, _QWORD))(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D141AC58(&qword_1ED9354E8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D166D628();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D1658F14();
  if (v13
    && (v14 = v13,
        v15 = objc_msgSend(v13, sel_viewContext),
        v14,
        v15))
  {
    v66 = v2;
    v67 = v3;
    type metadata accessor for PersistedCollaborationNotice();
    v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v68 = v15;
    v17 = objc_msgSend(v16, sel_initWithContext_, v15);
    v18 = objc_msgSend(a1, sel_guidString);
    if (!v18)
    {
      sub_1D166DACC();
      v18 = (id)sub_1D166DAA8();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v17, sel_setGuidString_, v18);

    v19 = objc_msgSend(a1, sel_date);
    sub_1D166D604();

    v20 = (void *)sub_1D166D5BC();
    v21 = *(void (**)(char *, uint64_t))(v10 + 8);
    v21(v12, v9);
    v22 = v17;
    objc_msgSend(v17, sel_setDate_, v20);

    v23 = objc_msgSend(a1, sel_dateViewed);
    if (v23)
    {
      sub_1D166D604();

      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v12, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
      v25 = v66;
      if (v24 == 1)
      {
        v23 = 0;
      }
      else
      {
        v23 = (id)sub_1D166D5BC();
        v21(v8, v9);
      }
      v29 = v68;
      v30 = v22;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      v29 = v68;
      v30 = v17;
      v25 = v66;
    }
    objc_msgSend(v30, sel_setDateViewed_, v23);

    v31 = objc_msgSend(a1, sel_metadata);
    v32 = objc_msgSend(v31, sel_contentURL);

    sub_1D166D550();
    sub_1D166D4F0();
    ((void (**)(char *, uint64_t))v67)[1](v5, v25);
    v33 = (void *)sub_1D166DAA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v30, sel_setUrl_, v33);

    v34 = objc_msgSend(a1, sel_senderHandle);
    if (!v34)
    {
      sub_1D166DACC();
      v34 = (id)sub_1D166DAA8();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v30, sel_setSenderHandle_, v34);

    v35 = (void *)objc_opt_self();
    v36 = objc_msgSend(a1, sel_metadata);
    v70[0] = 0;
    v37 = objc_msgSend(v35, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v36, 1, v70);

    v38 = v70[0];
    if (v37)
    {
      v39 = sub_1D166D598();
      v41 = v40;

      v37 = (id)sub_1D166D58C();
      sub_1D15FF5B8(v39, v41);
    }
    else
    {
      v42 = v38;
      v43 = (void *)sub_1D166D4B4();

      swift_willThrow();
    }
    objc_msgSend(v30, sel_setMetadata_, v37);

    v70[0] = 0;
    if (-[NSObject save:](v29, sel_save_, v70))
    {
      v44 = qword_1ED935750;
      v45 = v70[0];
      if (v44 != -1)
        swift_once();
      v46 = sub_1D166D964();
      sub_1D141AC1C(v46, (uint64_t)qword_1ED936560);
      v47 = a1;
      v48 = sub_1D166D94C();
      v49 = sub_1D166DD9C();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        v51 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v50 = 138412290;
        v67 = (void (**)(_QWORD, _QWORD))v30;
        v70[0] = v47;
        v52 = v47;
        sub_1D166DF28();
        *v51 = v47;

        _os_log_impl(&dword_1D1413000, v48, v49, "Saved notice: %@", v50, 0xCu);
        sub_1D141AC58(&qword_1ED935810);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v51, -1, -1);
        MEMORY[0x1D17EB0AC](v50, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      v53 = v70[0];
      v54 = (void *)sub_1D166D4B4();

      swift_willThrow();
      if (qword_1ED935750 != -1)
        swift_once();
      v55 = sub_1D166D964();
      sub_1D141AC1C(v55, (uint64_t)qword_1ED936560);
      v56 = v54;
      v57 = v54;
      v58 = sub_1D166D94C();
      v59 = sub_1D166DD84();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        v61 = (void *)swift_slowAlloc();
        v70[0] = v61;
        *(_DWORD *)v60 = 136315138;
        v69 = (uint64_t)v54;
        v62 = v54;
        sub_1D141AC58(&qword_1ED935C28);
        v63 = sub_1D166DAE4();
        v69 = sub_1D141BCB4(v63, v64, (uint64_t *)v70);
        sub_1D166DF28();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D1413000, v58, v59, "Unable to save notice, error: %s", v60, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17EB0AC](v61, -1, -1);
        MEMORY[0x1D17EB0AC](v60, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    if (qword_1ED935750 != -1)
      swift_once();
    v26 = sub_1D166D964();
    sub_1D141AC1C(v26, (uint64_t)qword_1ED936560);
    v68 = sub_1D166D94C();
    v27 = sub_1D166DD84();
    if (os_log_type_enabled(v68, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1D1413000, v68, v27, "Unable to save notice, can't retrieve object context", v28, 2u);
      MEMORY[0x1D17EB0AC](v28, -1, -1);
    }

  }
}

uint64_t sub_1D165A618(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  id v7;
  void *v8;
  NSObject *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  id v30;
  NSObject *v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t i;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = sub_1D166D580();
  v3 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  v48 = v3;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    if (qword_1ED935750 != -1)
      swift_once();
    v27 = sub_1D166D964();
    sub_1D141AC1C(v27, (uint64_t)qword_1ED936560);
    v23 = sub_1D166D94C();
    v24 = sub_1D166DD9C();
    if (!os_log_type_enabled(v23, v24))
      goto LABEL_20;
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    v26 = "No URLs provided, unable to retrieve any notices";
    goto LABEL_19;
  }
  v7 = sub_1D1658F14();
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_viewContext);

    if (v9)
    {
      v46 = v9;
      v50 = MEMORY[0x1E0DEE9D8];
      sub_1D164F570(0, v6, 0);
      v10 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
      v45[0] = v6;
      v45[1] = a1;
      v11 = a1 + v10;
      v12 = *(_QWORD *)(v48 + 72);
      v13 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
      do
      {
        v14 = v47;
        v13(v5, v11, v47);
        v15 = sub_1D166D4F0();
        v17 = v16;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v14);
        v18 = v50;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D164F570(0, *(_QWORD *)(v18 + 16) + 1, 1);
          v18 = v50;
        }
        v20 = *(_QWORD *)(v18 + 16);
        v19 = *(_QWORD *)(v18 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1D164F570(v19 > 1, v20 + 1, 1);
          v18 = v50;
        }
        *(_QWORD *)(v18 + 16) = v20 + 1;
        v21 = v18 + 16 * v20;
        *(_QWORD *)(v21 + 32) = v15;
        *(_QWORD *)(v21 + 40) = v17;
        v11 += v12;
        --v6;
      }
      while (v6);
      v30 = sub_1D165D968(v18);
      swift_release();
      type metadata accessor for PersistedCollaborationNotice();
      v31 = v46;
      v32 = v46;
      v33 = sub_1D166DEA4();

      v50 = MEMORY[0x1E0DEE9D8];
      if ((unint64_t)v33 >> 62)
      {
        if (v33 < 0)
          v32 = v33;
        else
          v32 = (v33 & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain();
        v28 = sub_1D166E15C();
        if (v28)
          goto LABEL_24;
      }
      else
      {
        v28 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v28)
        {
LABEL_24:
          if (v28 < 1)
          {
            __break(1u);
            goto LABEL_48;
          }
          for (i = 0; i != v28; ++i)
          {
            if ((v33 & 0xC000000000000001) != 0)
              v35 = (id)MEMORY[0x1D17E8FD0](i, v33);
            else
              v35 = *(id *)(v33 + 8 * i + 32);
            v36 = v35;
            v37 = sub_1D165AE40();

            if (v37)
            {
              MEMORY[0x1D17E8AD8]();
              if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1D166DC1C();
              sub_1D166DC34();
              sub_1D166DC04();
            }
          }
          swift_bridgeObjectRelease();
          v28 = v50;
LABEL_40:
          swift_bridgeObjectRelease();
          if (qword_1ED935750 != -1)
            swift_once();
          v38 = sub_1D166D964();
          sub_1D141AC1C(v38, (uint64_t)qword_1ED936560);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v32 = sub_1D166D94C();
          LOBYTE(v30) = sub_1D166DD9C();
          if (!os_log_type_enabled(v32, (os_log_type_t)v30))
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            return v28;
          }
          v33 = swift_slowAlloc();
          v48 = swift_slowAlloc();
          v50 = v48;
          *(_DWORD *)v33 = 134218498;
          if (!((unint64_t)v28 >> 62))
          {
            v39 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_45:
            swift_bridgeObjectRelease();
            v49 = v39;
            sub_1D166DF28();
            swift_bridgeObjectRelease();
            *(_WORD *)(v33 + 12) = 2048;
            swift_bridgeObjectRelease();
            v49 = v45[0];
            sub_1D166DF28();
            swift_bridgeObjectRelease();
            *(_WORD *)(v33 + 22) = 2080;
            v40 = swift_bridgeObjectRetain();
            v41 = MEMORY[0x1D17E8B08](v40, v47);
            v43 = v42;
            swift_bridgeObjectRelease();
            v49 = sub_1D141BCB4(v41, v43, &v50);
            sub_1D166DF28();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D1413000, v32, (os_log_type_t)v30, "Retrieved %ld notices for urls (%ld: %s", (uint8_t *)v33, 0x20u);
            v44 = v48;
            swift_arrayDestroy();
            MEMORY[0x1D17EB0AC](v44, -1, -1);
            MEMORY[0x1D17EB0AC](v33, -1, -1);

            return v28;
          }
LABEL_48:
          swift_bridgeObjectRetain();
          v39 = sub_1D166E15C();
          swift_bridgeObjectRelease();
          goto LABEL_45;
        }
      }
      swift_bridgeObjectRelease();
      v28 = MEMORY[0x1E0DEE9D8];
      goto LABEL_40;
    }
  }
  if (qword_1ED935750 != -1)
    swift_once();
  v22 = sub_1D166D964();
  sub_1D141AC1C(v22, (uint64_t)qword_1ED936560);
  v23 = sub_1D166D94C();
  v24 = sub_1D166DD84();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    v26 = "Unable to get notices, can't retrieve object context";
LABEL_19:
    _os_log_impl(&dword_1D1413000, v23, v24, v26, v25, 2u);
    MEMORY[0x1D17EB0AC](v25, -1, -1);
  }
LABEL_20:

  return 0;
}

id sub_1D165AE40()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27;
  id v28;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD *v39;
  id v40;
  char *v41;
  id v42;
  void *v43;
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  id v46;
  unint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  unint64_t v61;
  char *v62;
  id v63;

  v1 = v0;
  v2 = sub_1D141AC58(&qword_1ED9354E8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v57 - v6;
  v8 = sub_1D166D628();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v57 - v13;
  v15 = objc_msgSend(v0, sel_metadata);
  if (!v15)
    goto LABEL_3;
  v16 = v15;
  v62 = v14;
  v17 = sub_1D166D598();
  v19 = v18;

  sub_1D15FD3C0(0, &qword_1EFC63938);
  sub_1D15FD3C0(0, &qword_1EFC63940);
  v20 = (void *)sub_1D166DDD8();
  v61 = v19;
  if (!v20)
  {
    sub_1D15FF5B8(v17, v61);
LABEL_3:
    if (qword_1ED935750 != -1)
      swift_once();
    v21 = sub_1D166D964();
    sub_1D141AC1C(v21, (uint64_t)qword_1ED936560);
    v22 = v1;
    v23 = sub_1D166D94C();
    v24 = sub_1D166DD84();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v25 = 138412290;
      v63 = v22;
      v27 = v22;
      sub_1D166DF28();
      *v26 = v22;

      _os_log_impl(&dword_1D1413000, v23, v24, "Unable to get metadata from PersistedCollaborationNotice, %@", v25, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v26, -1, -1);
      MEMORY[0x1D17EB0AC](v25, -1, -1);

      return 0;
    }

LABEL_8:
    return 0;
  }
  v60 = v20;
  v30 = objc_msgSend(v1, sel_guidString);
  v31 = v17;
  if (!v30)
  {
    if (qword_1ED935750 != -1)
      swift_once();
    v35 = sub_1D166D964();
    sub_1D141AC1C(v35, (uint64_t)qword_1ED936560);
    v22 = v1;
    v36 = sub_1D166D94C();
    v37 = sub_1D166DD84();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v38 = 138412290;
      v63 = v22;
      v40 = v22;
      sub_1D166DF28();
      *v39 = v22;

      _os_log_impl(&dword_1D1413000, v36, v37, "Unable to get guidString from PersistedCollaborationNotice, %@", v38, 0xCu);
      sub_1D141AC58(&qword_1ED935810);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v39, -1, -1);
      MEMORY[0x1D17EB0AC](v38, -1, -1);
      sub_1D15FF5B8(v31, v61);

      return 0;
    }
    sub_1D15FF5B8(v17, v61);

    goto LABEL_8;
  }
  v32 = v30;
  v58 = v17;
  v57 = sub_1D166DACC();

  v33 = objc_msgSend(v1, sel_senderHandle);
  if (v33)
  {
    v34 = v33;
    v59 = sub_1D166DACC();

  }
  else
  {
    v59 = 0;
  }
  v41 = v62;
  v42 = objc_msgSend(v1, sel_date);
  if (!v42)
  {
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v45(v7, 1, 1, v8);
    goto LABEL_25;
  }
  v43 = v42;
  sub_1D166D604();

  v44 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v44(v7, v12, v8);
  v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v45(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_25:
    sub_1D166D61C();
    sub_1D141BA80((uint64_t)v7, &qword_1ED9354E8);
    goto LABEL_26;
  }
  v44(v41, v7, v8);
LABEL_26:
  v46 = objc_msgSend(v1, sel_dateViewed);
  v47 = v61;
  if (v46)
  {
    v48 = v46;
    sub_1D166D604();

    v49 = 0;
  }
  else
  {
    v49 = 1;
  }
  v45(v5, v49, 1, v8);
  v50 = (void *)sub_1D166DAA8();
  swift_bridgeObjectRelease();
  v51 = (void *)sub_1D166DAA8();
  swift_bridgeObjectRelease();
  v52 = (void *)sub_1D166D5BC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
  {
    v53 = 0;
  }
  else
  {
    v53 = (void *)sub_1D166D5BC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v8);
  }
  v54 = v58;
  v55 = objc_allocWithZone(MEMORY[0x1E0D39780]);
  v56 = v60;
  v28 = objc_msgSend(v55, sel_initWithGUIDString_sender_metadata_date_dateViewed_, v50, v51, v60, v52, v53);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v62, v8);
  sub_1D15FF5B8(v54, v47);
  return v28;
}

uint64_t sub_1D165B5A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = objc_msgSend(a1, sel_guidString);
  v4 = sub_1D166DACC();
  v6 = v5;

  sub_1D165B720(v4, v6, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D165B720@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  os_log_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  void *v52;
  uint64_t v53;
  os_log_t v54;
  int v55;
  void *v56;
  void *v57;
  uint64_t v58;
  void *v59[2];

  v59[1] = *(void **)MEMORY[0x1E0C80C00];
  v6 = sub_1D141AC58(&qword_1ED9356E0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D1658F14();
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_viewContext);

    if (v11)
    {
      v12 = sub_1D165DBAC(a1, a2);
      type metadata accessor for PersistedCollaborationNotice();
      v57 = v11;
      v29 = sub_1D166DEA4();

      if (v29 >> 62)
      {
        swift_bridgeObjectRetain();
        v30 = sub_1D166E15C();
        swift_bridgeObjectRelease();
        if (v30)
        {
          swift_bridgeObjectRetain();
          v31 = sub_1D166E15C();
          swift_bridgeObjectRelease();
          if (v31 > 1)
            goto LABEL_16;
          goto LABEL_22;
        }
      }
      else
      {
        v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
        v31 = v30;
        if (v30)
        {
          if (v30 > 1)
          {
LABEL_16:
            if (qword_1ED935750 != -1)
              swift_once();
            v32 = sub_1D166D964();
            sub_1D141AC1C(v32, (uint64_t)qword_1ED936560);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            v33 = sub_1D166D94C();
            v34 = sub_1D166DD9C();
            v35 = v34;
            if (os_log_type_enabled(v33, v34))
            {
              v36 = swift_slowAlloc();
              v55 = v35;
              v37 = v36;
              v56 = (void *)swift_slowAlloc();
              v59[0] = v56;
              *(_DWORD *)v37 = 134218242;
              swift_bridgeObjectRelease();
              v58 = v31;
              v54 = v33;
              sub_1D166DF28();
              swift_bridgeObjectRelease();
              *(_WORD *)(v37 + 12) = 2080;
              swift_bridgeObjectRetain();
              v58 = sub_1D141BCB4(a1, a2, (uint64_t *)v59);
              sub_1D166DF28();
              swift_bridgeObjectRelease_n();
              v38 = v54;
              _os_log_impl(&dword_1D1413000, v54, (os_log_type_t)v55, "Found %ld notices for guidString: %s", (uint8_t *)v37, 0x16u);
              v39 = v56;
              swift_arrayDestroy();
              MEMORY[0x1D17EB0AC](v39, -1, -1);
              MEMORY[0x1D17EB0AC](v37, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }
          }
LABEL_22:
          v56 = a3;
          v40 = sub_1D166D580();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v8, 1, 1, v40);
          if (v30 >= 1)
          {
            swift_bridgeObjectRetain();
            v41 = 0;
            do
            {
              if ((v29 & 0xC000000000000001) != 0)
                v42 = (id)MEMORY[0x1D17E8FD0](v41, v29);
              else
                v42 = *(id *)(v29 + 8 * v41 + 32);
              v43 = v42;
              ++v41;
              v59[0] = v42;
              sub_1D165BFE8(v59, (uint64_t)v8, v57, a1, a2);

            }
            while (v30 != v41);
            swift_bridgeObjectRelease_n();
            v59[0] = 0;
            v44 = v57;
            if ((objc_msgSend(v57, sel_save_, v59) & 1) != 0)
            {
              v45 = v59[0];

              return sub_1D164EFFC((uint64_t)v8, (uint64_t)v56);
            }
            v46 = v59[0];
            v47 = (void *)sub_1D166D4B4();

            swift_willThrow();
            sub_1D141BA80((uint64_t)v8, &qword_1ED9356E0);
            a3 = v56;
            if (qword_1ED935750 != -1)
              swift_once();
            v13 = sub_1D166D964();
            sub_1D141AC1C(v13, (uint64_t)qword_1ED936560);
            v14 = v47;
            v15 = v47;
            v16 = sub_1D166D94C();
            v17 = sub_1D166DD84();
            if (os_log_type_enabled(v16, v17))
            {
              v18 = (uint8_t *)swift_slowAlloc();
              v19 = (void *)swift_slowAlloc();
              v59[0] = v19;
              *(_DWORD *)v18 = 136315138;
              v58 = (uint64_t)v47;
              v20 = v47;
              sub_1D141AC58(&qword_1ED935C28);
              v21 = sub_1D166DAE4();
              v58 = sub_1D141BCB4(v21, v22, (uint64_t *)v59);
              sub_1D166DF28();
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_1D1413000, v16, v17, "Failed to delete notice, error: %s", v18, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1D17EB0AC](v19, -1, -1);
              MEMORY[0x1D17EB0AC](v18, -1, -1);

            }
            else
            {

            }
            goto LABEL_39;
          }
          __break(1u);
          goto LABEL_41;
        }
      }
      swift_bridgeObjectRelease();
      if (qword_1ED935750 == -1)
      {
LABEL_35:
        v48 = sub_1D166D964();
        sub_1D141AC1C(v48, (uint64_t)qword_1ED936560);
        swift_bridgeObjectRetain_n();
        v49 = sub_1D166D94C();
        v50 = sub_1D166DD9C();
        if (os_log_type_enabled(v49, v50))
        {
          v51 = (uint8_t *)swift_slowAlloc();
          v52 = (void *)swift_slowAlloc();
          v59[0] = v52;
          *(_DWORD *)v51 = 136315138;
          swift_bridgeObjectRetain();
          v58 = sub_1D141BCB4(a1, a2, (uint64_t *)v59);
          sub_1D166DF28();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1D1413000, v49, v50, "No notices to delete for guidString: %s", v51, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D17EB0AC](v52, -1, -1);
          MEMORY[0x1D17EB0AC](v51, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }

LABEL_39:
        v53 = sub_1D166D580();
        return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(a3, 1, 1, v53);
      }
LABEL_41:
      swift_once();
      goto LABEL_35;
    }
  }
  if (qword_1ED935750 != -1)
    swift_once();
  v23 = sub_1D166D964();
  sub_1D141AC1C(v23, (uint64_t)qword_1ED936560);
  v24 = sub_1D166D94C();
  v25 = sub_1D166DD84();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_1D1413000, v24, v25, "Unable to delete notice, can't retrieve object context", v26, 2u);
    MEMORY[0x1D17EB0AC](v26, -1, -1);
  }

  v27 = sub_1D166D580();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a3, 1, 1, v27);
}

void sub_1D165BFE8(void **a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v10 = sub_1D141AC58(&qword_1ED9356E0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = objc_msgSend(v13, sel_url);
  if (v14)
  {
    v15 = v14;
    sub_1D166DACC();

    sub_1D166D568();
    swift_bridgeObjectRelease();
    sub_1D165DDAC((uint64_t)v12, a2);
  }
  objc_msgSend(a3, sel_deleteObject_, v13);
  if (qword_1ED935750 != -1)
    swift_once();
  v16 = sub_1D166D964();
  sub_1D141AC1C(v16, (uint64_t)qword_1ED936560);
  swift_bridgeObjectRetain_n();
  v17 = v13;
  v18 = sub_1D166D94C();
  v19 = sub_1D166DD9C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v20 = 136315394;
    swift_bridgeObjectRetain();
    v26 = sub_1D141BCB4(a4, a5, &v27);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2112;
    v26 = (uint64_t)v17;
    v22 = v17;
    sub_1D166DF28();
    *v21 = v17;

    _os_log_impl(&dword_1D1413000, v18, v19, "Successfully deleted notice with guidString: %s, %@", (uint8_t *)v20, 0x16u);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v21, -1, -1);
    v23 = v25;
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v23, -1, -1);
    MEMORY[0x1D17EB0AC](v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

_QWORD *sub_1D165C3C0(uint64_t a1, unint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  void *v49;
  uint64_t v50;
  unint64_t v52;
  id v53[2];

  v53[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1D1658F14();
  if (!v3
    || (v4 = v3, v5 = objc_msgSend(v3, sel_viewContext), v4, !v5))
  {
    if (qword_1ED935750 != -1)
      swift_once();
    v17 = sub_1D166D964();
    sub_1D141AC1C(v17, (uint64_t)qword_1ED936560);
    v18 = sub_1D166D94C();
    v19 = sub_1D166DD84();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1D1413000, v18, v19, "Unable to delete notices, can't retrieve object context", v20, 2u);
      MEMORY[0x1D17EB0AC](v20, -1, -1);
    }

    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v6 = sub_1D165DBAC(a1, a2);
  type metadata accessor for PersistedCollaborationNotice();
  v21 = sub_1D166DEA4();

  if (!(v21 >> 62))
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    v23 = a2;
    if (v22)
      goto LABEL_15;
LABEL_41:
    swift_bridgeObjectRelease();
    if (qword_1ED935750 == -1)
      goto LABEL_42;
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  v22 = sub_1D166E15C();
  swift_bridgeObjectRelease();
  v23 = a2;
  if (!v22)
    goto LABEL_41;
LABEL_15:
  if (v22 < 1)
  {
    __break(1u);
LABEL_46:
    swift_once();
LABEL_42:
    v45 = sub_1D166D964();
    sub_1D141AC1C(v45, (uint64_t)qword_1ED936560);
    swift_bridgeObjectRetain_n();
    v46 = sub_1D166D94C();
    v47 = sub_1D166DD9C();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = (void *)swift_slowAlloc();
      v53[0] = v49;
      *(_DWORD *)v48 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D141BCB4(a1, a2, (uint64_t *)v53);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D1413000, v46, v47, "No notices to delete for collaborationIdentifier: %s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v49, -1, -1);
      MEMORY[0x1D17EB0AC](v48, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v24 = v21 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  v25 = 0;
  v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v50 = a1;
  v52 = v21;
  do
  {
    if (v24)
      v27 = (id)MEMORY[0x1D17E8FD0](v25, v21);
    else
      v27 = *(id *)(v21 + 8 * v25 + 32);
    v28 = v27;
    v29 = objc_msgSend(v27, sel_guidString);
    if (v29)
    {
      v30 = v29;
      v31 = v5;
      v32 = sub_1D166DACC();
      v34 = v33;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_1D160DB14(0, v26[2] + 1, 1, v26);
      v36 = v26[2];
      v35 = v26[3];
      if (v36 >= v35 >> 1)
        v26 = sub_1D160DB14((_QWORD *)(v35 > 1), v36 + 1, 1, v26);
      v26[2] = v36 + 1;
      v37 = &v26[2 * v36];
      v37[4] = v32;
      v37[5] = v34;
      v5 = v31;
      v23 = a2;
      v21 = v52;
    }
    else
    {

    }
    ++v25;
  }
  while (v22 != v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v39 = 0;
  do
  {
    if (v24)
      v40 = (id)MEMORY[0x1D17E8FD0](v39, v52);
    else
      v40 = *(id *)(v52 + 8 * v39 + 32);
    v41 = v40;
    ++v39;
    v53[0] = v40;
    sub_1D165CAA8(v53, v5, v50, v23);

  }
  while (v22 != v39);
  swift_bridgeObjectRelease_n();
  v53[0] = 0;
  if ((objc_msgSend(v5, sel_save_, v53) & 1) != 0)
  {
    v42 = v53[0];

    return v26;
  }
  v43 = v53[0];
  swift_bridgeObjectRelease();
  v44 = (void *)sub_1D166D4B4();

  swift_willThrow();
  if (qword_1ED935750 != -1)
    swift_once();
  v7 = sub_1D166D964();
  sub_1D141AC1C(v7, (uint64_t)qword_1ED936560);
  v8 = v44;
  v9 = v44;
  v10 = sub_1D166D94C();
  v11 = sub_1D166DD84();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = (void *)swift_slowAlloc();
    v53[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = v44;
    sub_1D141AC58(&qword_1ED935C28);
    v15 = sub_1D166DAE4();
    sub_1D141BCB4(v15, v16, (uint64_t *)v53);
    sub_1D166DF28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D1413000, v10, v11, "Failed to delete notices, error: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v13, -1, -1);
    MEMORY[0x1D17EB0AC](v12, -1, -1);
  }
  else
  {

  }
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

void sub_1D165CAA8(_QWORD *a1, id a2, uint64_t a3, unint64_t a4)
{
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v6 = (void *)*a1;
  objc_msgSend(a2, sel_deleteObject_, *a1);
  if (qword_1ED935750 != -1)
    swift_once();
  v7 = sub_1D166D964();
  sub_1D141AC1C(v7, (uint64_t)qword_1ED936560);
  swift_bridgeObjectRetain_n();
  v8 = v6;
  v9 = sub_1D166D94C();
  v10 = sub_1D166DD9C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v15 = v14;
    *(_DWORD *)v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a3, a4, &v15);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2112;
    v13 = v8;
    sub_1D166DF28();
    *v12 = v8;

    _os_log_impl(&dword_1D1413000, v9, v10, "Successfully deleted notice with collaborationIdentifier: %s, %@", (uint8_t *)v11, 0x16u);
    sub_1D141AC58(&qword_1ED935810);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v14, -1, -1);
    MEMORY[0x1D17EB0AC](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1D165CD84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  id v17;
  void *v18;
  NSObject *v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t i;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  const char *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint32_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  os_log_type_t v53;
  _QWORD v54[2];
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60[4];

  v60[3] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1D166D580();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v54[1] = v1;
    v60[0] = (id)MEMORY[0x1E0DEE9D8];
    sub_1D164F570(0, v7, 0);
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    v55 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v56 = v10;
    v57 = v4;
    do
    {
      v55(v6, v9, v3);
      v11 = sub_1D166D4F0();
      v13 = v12;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v8 = v60[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D164F570(0, v8[2] + 1, 1);
        v8 = v60[0];
      }
      v15 = v8[2];
      v14 = v8[3];
      if (v15 >= v14 >> 1)
      {
        sub_1D164F570(v14 > 1, v15 + 1, 1);
        v8 = v60[0];
      }
      v8[2] = v15 + 1;
      v16 = (char *)&v8[2 * v15];
      *((_QWORD *)v16 + 4) = v11;
      *((_QWORD *)v16 + 5) = v13;
      v4 = v57;
      v9 += v56;
      --v7;
    }
    while (v7);
  }
  v17 = sub_1D1658F14();
  if (!v17
    || (v18 = v17,
        v19 = objc_msgSend(v17, sel_viewContext),
        v18,
        !v19))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED935750 != -1)
      swift_once();
    v31 = sub_1D166D964();
    sub_1D141AC1C(v31, (uint64_t)qword_1ED936560);
    v19 = sub_1D166D94C();
    v32 = sub_1D166DD84();
    if (os_log_type_enabled(v19, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1D1413000, v19, v32, "Unable to delete notices, can't retrieve object context", v33, 2u);
      MEMORY[0x1D17EB0AC](v33, -1, -1);
    }
    goto LABEL_40;
  }
  v20 = sub_1D165D968((uint64_t)v8);
  swift_bridgeObjectRelease();
  type metadata accessor for PersistedCollaborationNotice();
  v34 = sub_1D166DEA4();

  if (!(v34 >> 62))
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v35)
      goto LABEL_21;
LABEL_35:
    swift_bridgeObjectRelease();
    if (qword_1ED935750 == -1)
    {
LABEL_36:
      v52 = sub_1D166D964();
      sub_1D141AC1C(v52, (uint64_t)qword_1ED936560);
      v42 = sub_1D166D94C();
      v53 = sub_1D166DD9C();
      if (!os_log_type_enabled(v42, v53))
      {
LABEL_39:

LABEL_40:
        return;
      }
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      v45 = "No notices to delete";
      v46 = v42;
      v47 = v53;
      v48 = v44;
      v49 = 2;
LABEL_38:
      _os_log_impl(&dword_1D1413000, v46, v47, v45, v48, v49);
      MEMORY[0x1D17EB0AC](v44, -1, -1);
      goto LABEL_39;
    }
LABEL_42:
    swift_once();
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  v35 = sub_1D166E15C();
  swift_bridgeObjectRelease();
  if (!v35)
    goto LABEL_35;
LABEL_21:
  if (v35 < 1)
  {
    __break(1u);
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  for (i = 0; i != v35; ++i)
  {
    if ((v34 & 0xC000000000000001) != 0)
      v37 = (id)MEMORY[0x1D17E8FD0](i, v34);
    else
      v37 = *(id *)(v34 + 8 * i + 32);
    v38 = v37;
    -[NSObject deleteObject:](v19, sel_deleteObject_, v37);

  }
  swift_bridgeObjectRelease();
  v59 = v35;
  swift_bridgeObjectRelease();
  v60[0] = 0;
  if ((-[NSObject save:](v19, sel_save_, v60) & 1) != 0)
  {
    v39 = qword_1ED935750;
    v40 = v60[0];
    if (v39 != -1)
      swift_once();
    v41 = sub_1D166D964();
    sub_1D141AC1C(v41, (uint64_t)qword_1ED936560);
    v42 = sub_1D166D94C();
    v43 = sub_1D166DD9C();
    if (!os_log_type_enabled(v42, v43))
      goto LABEL_39;
    v44 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v44 = 134217984;
    swift_beginAccess();
    v58 = v59;
    sub_1D166DF28();
    v45 = "Successfully deleted %ld notices";
    v46 = v42;
    v47 = v43;
    v48 = v44;
    v49 = 12;
    goto LABEL_38;
  }
  v50 = v60[0];
  v51 = (void *)sub_1D166D4B4();

  swift_willThrow();
  if (qword_1ED935750 != -1)
    swift_once();
  v21 = sub_1D166D964();
  sub_1D141AC1C(v21, (uint64_t)qword_1ED936560);
  v22 = v51;
  v23 = v51;
  v24 = sub_1D166D94C();
  v25 = sub_1D166DD84();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = (void *)swift_slowAlloc();
    v60[0] = v27;
    *(_DWORD *)v26 = 136315138;
    v59 = (uint64_t)v51;
    v28 = v51;
    sub_1D141AC58(&qword_1ED935C28);
    v29 = sub_1D166DAE4();
    v59 = sub_1D141BCB4(v29, v30, (uint64_t *)v60);
    sub_1D166DF28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D1413000, v24, v25, "Failed to delete notices, error: %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v27, -1, -1);
    MEMORY[0x1D17EB0AC](v26, -1, -1);

  }
  else
  {

  }
}

id CollaborationNoticeStore.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CollaborationNoticeStore.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___IMDCollaborationNoticeStore____lazy_storage___persistenceContainer] = 1;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollaborationNoticeStore();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CollaborationNoticeStore.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollaborationNoticeStore();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D165D5CC(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  IMCollaborationNotice.description.getter();

  v2 = (void *)sub_1D166DAA8();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t IMCollaborationNotice.description.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  _QWORD v19[2];

  v1 = v0;
  v2 = sub_1D141AC58(&qword_1ED9354E8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D166D628();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  sub_1D166E090();
  sub_1D166DB5C();
  v10 = objc_msgSend(v0, sel_guidString);
  sub_1D166DACC();

  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  sub_1D166DB5C();
  v11 = objc_msgSend(v1, sel_senderHandle);
  sub_1D166DACC();

  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  sub_1D166DB5C();
  v12 = objc_msgSend(v1, sel_date);
  sub_1D166D604();

  sub_1D15FC784((unint64_t *)&unk_1EFC63210, v6, MEMORY[0x1E0CB08F0]);
  sub_1D166E1BC();
  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  sub_1D166DB5C();
  v13 = objc_msgSend(v1, sel_dateViewed);
  if (v13)
  {
    v14 = v13;
    sub_1D166D604();

    v15 = 0;
  }
  else
  {
    v15 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, v15, 1, v5);
  sub_1D166DAE4();
  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  sub_1D166DB5C();
  v16 = objc_msgSend(v1, sel_metadata);
  v17 = objc_msgSend(v16, sel_description);

  sub_1D166DACC();
  sub_1D166DB5C();
  swift_bridgeObjectRelease();
  return v19[0];
}

id sub_1D165D968(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9D8];
  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC616E0);
    swift_bridgeObjectRetain();
    v3 = (uint64_t *)(a1 + 40);
    v4 = MEMORY[0x1E0DEA968];
    do
    {
      v6 = *(v3 - 1);
      v5 = *v3;
      sub_1D141AC58((uint64_t *)&unk_1EFC631B0);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1D1683B20;
      *(_QWORD *)(v7 + 56) = v4;
      *(_QWORD *)(v7 + 64) = sub_1D15FD2D0();
      *(_QWORD *)(v7 + 32) = v6;
      *(_QWORD *)(v7 + 40) = v5;
      swift_bridgeObjectRetain_n();
      sub_1D166DD54();
      MEMORY[0x1D17E8AD8]();
      if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1D166DC1C();
      v3 += 2;
      sub_1D166DC34();
      sub_1D166DC04();
      swift_bridgeObjectRelease();
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  v8 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v9 = (void *)sub_1D166DAA8();
  v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC616E0);
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1D166DBD4();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v11);

  objc_msgSend(v10, sel_setPredicate_, v12);
  swift_bridgeObjectRelease();

  return v10;
}

id sub_1D165DBAC(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;

  v4 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v5 = (void *)sub_1D166DAA8();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_1D15FD3C0(0, (unint64_t *)&unk_1EFC616E0);
  sub_1D141AC58((uint64_t *)&unk_1EFC631B0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1D1683B20;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1D15FD2D0();
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1D166DD54();
  objc_msgSend(v6, sel_setPredicate_, v8);

  return v6;
}

uint64_t type metadata accessor for CollaborationNoticeStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for CollaborationNoticeStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CollaborationNoticeStore.save(notice:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CollaborationNoticeStore.notices(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CollaborationNoticeStore.delete(notice:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CollaborationNoticeStore.delete(guidString:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CollaborationNoticeStore.deleteNotices(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CollaborationNoticeStore.deleteNotices(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

void sub_1D165DD9C(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_1D165DDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D141AC58(&qword_1ED9356E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1D165DDF4(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

unint64_t sub_1D165DE08()
{
  unint64_t result;

  result = qword_1EFC63960;
  if (!qword_1EFC63960)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D1684FEC, &type metadata for AgentRequestIntent);
    atomic_store(result, (unint64_t *)&qword_1EFC63960);
  }
  return result;
}

unint64_t sub_1D165DE50()
{
  unint64_t result;

  result = qword_1EFC63968;
  if (!qword_1EFC63968)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D1685014, &type metadata for AgentRequestIntent);
    atomic_store(result, (unint64_t *)&qword_1EFC63968);
  }
  return result;
}

uint64_t sub_1D165DE94()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1D165DEB8()
{
  sub_1D165DEF8();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1D165DEF8()
{
  unint64_t result;

  result = qword_1EFC63970;
  if (!qword_1EFC63970)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D1684F5C, &type metadata for AgentRequestIntent);
    atomic_store(result, (unint64_t *)&qword_1EFC63970);
  }
  return result;
}

uint64_t sub_1D165DF3C()
{
  uint64_t v0;

  v0 = sub_1D166D4CC();
  sub_1D15FD440(v0, qword_1EFC65E80);
  sub_1D141AC1C(v0, (uint64_t)qword_1EFC65E80);
  return sub_1D166D4C0();
}

uint64_t sub_1D165DF9C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[20] = a1;
  v2[21] = a2;
  sub_1D141AC58(&qword_1EFC639C0);
  v2[22] = swift_task_alloc();
  v3 = sub_1D166D658();
  v2[23] = v3;
  v2[24] = *(_QWORD *)(v3 - 8);
  v2[25] = swift_task_alloc();
  v4 = sub_1D166D3F4();
  v2[26] = v4;
  v2[27] = *(_QWORD *)(v4 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D165E058()
{
  uint64_t v0;
  id v1;
  unsigned int v2;
  id v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  _QWORD *v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  char v24;
  uint64_t v25;
  os_log_type_t v26;
  char *v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedFeatureFlags);
  v2 = objc_msgSend(v1, sel_isRockNRollEnabled);

  if (!v2)
  {
    if (qword_1EFC61538 != -1)
      swift_once();
    v20 = sub_1D166D964();
    sub_1D141AC1C(v20, (uint64_t)qword_1EFC65E40);
    v21 = sub_1D166D94C();
    v22 = sub_1D166DD84();
    if (!os_log_type_enabled(v21, v22))
    {
      v24 = 0;
      goto LABEL_23;
    }
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1D1413000, v21, v22, "AgentRequestIntent dropping intent because the feature is not enabled.", v23, 2u);
    v24 = 0;
LABEL_20:
    MEMORY[0x1D17EB0AC](v23, -1, -1);
LABEL_23:

    sub_1D165EB18();
    swift_allocError();
    *v27 = v24;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedDaemon);
  if ((objc_msgSend(v3, sel_respondsToSelector_, sel_intentProcessor) & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  v4 = objc_msgSend(v3, sel_intentProcessor);
  sub_1D166DF70();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1D141AC58(&qword_1EFC639D8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    goto LABEL_16;
  }
  if (!*(_QWORD *)(v0 + 80))
  {
LABEL_16:
    sub_1D165EB5C(v0 + 56);
    if (qword_1EFC61538 != -1)
      swift_once();
    v25 = sub_1D166D964();
    sub_1D141AC1C(v25, (uint64_t)qword_1EFC65E40);
    v21 = sub_1D166D94C();
    v26 = sub_1D166DD84();
    if (!os_log_type_enabled(v21, v26))
    {
      v24 = 1;
      goto LABEL_23;
    }
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1D1413000, v21, v26, "AgentRequestIntent dropping intent because there is no object to process the request.", v23, 2u);
    v24 = 1;
    goto LABEL_20;
  }
  sub_1D163100C((__int128 *)(v0 + 56), v0 + 16);
  if (qword_1EFC61538 != -1)
    swift_once();
  v5 = sub_1D166D964();
  sub_1D141AC1C(v5, (uint64_t)qword_1EFC65E40);
  v6 = sub_1D166D94C();
  v7 = sub_1D166DD9C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1D1413000, v6, v7, "AgentRequestIntent handling incoming request.", v8, 2u);
    MEMORY[0x1D17EB0AC](v8, -1, -1);
  }
  v9 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 216);

  v12 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 48);
  sub_1D141AC34((_QWORD *)(v0 + 16), v12);
  sub_1D166D418();
  v14 = sub_1D166D3DC();
  v16 = v15;
  *(_QWORD *)(v0 + 240) = v14;
  *(_QWORD *)(v0 + 248) = v15;
  v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  *(_QWORD *)(v0 + 256) = v17;
  v17(v9, v10);
  v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v13 + 8) + *(_QWORD *)(v13 + 8));
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v18;
  *v18 = v0;
  v18[1] = sub_1D165E4C8;
  return v28(v14, v16, v12, v13);
}

uint64_t sub_1D165E4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[16] = v3;
  v4[17] = a1;
  v4[18] = a2;
  v4[19] = v2;
  v4[34] = a2;
  v4[35] = v2;
  swift_task_dealloc();
  if (!v2)
    sub_1D15FF5B8(v4[30], v4[31]);
  return swift_task_switch();
}

uint64_t sub_1D165E53C()
{
  uint64_t v0;
  unint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 272);
  if (v1 >> 60 == 15)
  {
    sub_1D165EB18();
    swift_allocError();
    *v2 = 2;
    swift_willThrow();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 224);
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v5 = *(_QWORD *)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 208);
    v7 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 176);
    sub_1D15FF574(v3, v1);
    sub_1D166D64C();
    sub_1D166D634();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v9 = sub_1D166D91C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    sub_1D166D3E8();
    sub_1D165EB9C();
    sub_1D166D40C();
    sub_1D1622D38(v3, v1);
    v12(v4, v11);
  }
  sub_1D141AC98(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D165E700()
{
  uint64_t v0;

  sub_1D15FF5B8(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
  sub_1D141AC98(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D165E770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EFC61570 != -1)
    swift_once();
  v2 = sub_1D166D4CC();
  v3 = sub_1D141AC1C(v2, (uint64_t)qword_1EFC65E80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1D165E7F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D141C488;
  return sub_1D165DF9C(a1, v4);
}

uint64_t sub_1D165E848@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D165E8F4();
  *a1 = result;
  return result;
}

uint64_t sub_1D165E86C()
{
  sub_1D165DEF8();
  return sub_1D166D3D0();
}

ValueMetadata *type metadata accessor for AgentRequestIntent()
{
  return &type metadata for AgentRequestIntent;
}

unint64_t sub_1D165E8A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC63980;
  if (!qword_1EFC63980)
  {
    v1 = sub_1D15FC6A0(&qword_1EFC63988);
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0C915A0], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC63980);
  }
  return result;
}

uint64_t sub_1D165E8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v0 = sub_1D166D430();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D141AC58(&qword_1EFC63990);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D141AC58(&qword_1EFC63998);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D141AC58(&qword_1EFC639A0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D141AC58(&qword_1EFC639A8);
  v13 = sub_1D166D4CC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = sub_1D166D3F4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  v15 = sub_1D166D400();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  sub_1D141AC58(&qword_1EFC639B0);
  sub_1D166D91C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D1683B20;
  sub_1D166D910();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0C91738], v0);
  return sub_1D166D424();
}

unint64_t sub_1D165EB18()
{
  unint64_t result;

  result = qword_1EFC639C8;
  if (!qword_1EFC639C8)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D16850D0, &type metadata for AgentRequestIntentError);
    atomic_store(result, (unint64_t *)&qword_1EFC639C8);
  }
  return result;
}

uint64_t sub_1D165EB5C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D141AC58(&qword_1EFC639D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D165EB9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC639E0;
  if (!qword_1EFC639E0)
  {
    v1 = sub_1D166D3F4();
    result = MEMORY[0x1D17EAFE0](MEMORY[0x1E0C90708], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC639E0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AgentRequestIntentError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AgentRequestIntentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D165ECC0 + 4 * byte_1D1684F55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D165ECF4 + 4 * byte_1D1684F50[v4]))();
}

uint64_t sub_1D165ECF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D165ECFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D165ED04);
  return result;
}

uint64_t sub_1D165ED10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D165ED18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D165ED1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D165ED24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AgentRequestIntentError()
{
  return &type metadata for AgentRequestIntentError;
}

unint64_t sub_1D165ED44()
{
  unint64_t result;

  result = qword_1EFC639E8;
  if (!qword_1EFC639E8)
  {
    result = MEMORY[0x1D17EAFE0](&unk_1D16850A8, &type metadata for AgentRequestIntentError);
    atomic_store(result, (unint64_t *)&qword_1EFC639E8);
  }
  return result;
}

Swift::Void __swiftcall ClientConnection.disconnect()()
{
  sub_1D166D7CC();
}

uint64_t ClientConnection.id.getter()
{
  uint64_t v1;

  sub_1D166D7CC();
  return v1;
}

Swift::Bool __swiftcall ClientConnection.hasEntitlement(_:)(Swift::String a1)
{
  Swift::Bool v2;

  sub_1D166D7CC();
  return v2;
}

uint64_t sub_1D165EE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  swift_retain();
  v4 = sub_1D165F9C0(a2);
  swift_release();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = v4;
  return result;
}

uint64_t ClientConnection.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ClientConnection.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D165EEF4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t ClientConnection.supports(serviceNamed:requiredCapabilities:excludedCapabilities:)()
{
  unsigned __int8 v1;

  sub_1D166D7CC();
  return v1;
}

uint64_t sub_1D165EF54@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void (*a6)(_QWORD *)@<X6>, char *a7@<X8>)
{
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];

  v10 = (_QWORD *)result;
  if ((!a3 || (result = sub_1D1649158(a2, a3, *(_QWORD *)(result + 64)), (result & 1) != 0))
    && ((v12 = v10[5], v13 = a4 & ~v12, v14 = v12 & a5, !v13) ? (v15 = v14 == 0) : (v15 = 0), v15))
  {
    v17 = v10[3];
    v18 = v10[4];
    sub_1D141AC34(v10, v17);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
    v20[3] = swift_getObjectType();
    v20[0] = v19;
    a6(v20);
    result = sub_1D141AC98((uint64_t)v20);
    v16 = 1;
  }
  else
  {
    v16 = 0;
  }
  *a7 = v16;
  return result;
}

uint64_t sub_1D165F028(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, const char *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSString *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v38;

  v14 = a1[3];
  v15 = a1[4];
  sub_1D141AC34(a1, v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  v18 = v17;
  swift_beginAccess();
  *(_QWORD *)(a2 + 16) = v16;
  *(_QWORD *)(a2 + 24) = v18;
  swift_bridgeObjectRelease();
  if (qword_1ED935748 != -1)
    swift_once();
  v19 = sub_1D166D964();
  sub_1D141AC1C(v19, (uint64_t)qword_1ED936548);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v20 = sub_1D166D94C();
  v21 = sub_1D166DD6C();
  if (os_log_type_enabled(v20, v21))
  {
    v34 = a7;
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v38 = v23;
    *(_DWORD *)v22 = 136315650;
    swift_beginAccess();
    v35 = a8;
    v25 = *(_QWORD *)(a2 + 16);
    v24 = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    sub_1D141BCB4(v25, v24, &v38);
    sub_1D166DF28();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a3, a4, &v38);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 22) = 2080;
    v26 = NSStringFromSelector(a5);
    v27 = sub_1D166DACC();
    v29 = v28;

    a8 = v35;
    sub_1D141BCB4(v27, v29, &v38);
    sub_1D166DF28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v20, v21, "Receiving message from client with route: %s id: %s selector: %s", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v23, -1, -1);
    v30 = v22;
    a7 = v34;
    MEMORY[0x1D17EB0AC](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  *a6 = a1[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a7 = a1[5];
  v31 = a1[3];
  v32 = a1[4];
  sub_1D141AC34(a1, v31);
  *a8 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 24))(v31, v32);
  return swift_unknownObjectRelease();
}

uint64_t sub_1D165F370(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_1D165F3A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v7 = a1[3];
  v8 = a1[4];
  sub_1D141AC34(a1, v7);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a3, v7, v8);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1D165F408@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v6 = a1[3];
  v7 = a1[4];
  sub_1D141AC34(a1, v6);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6, v7);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1D165F46C@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v3 = result;
  v5 = v2[4];
  v6 = v2[5];
  v7 = v2[6];
  if (v5 && (result = sub_1D1649158(v2[3], v5, *(_QWORD *)(result + 64)), (result & 1) == 0))
  {
    v9 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v3 + 40);
    v9 = (v6 & ~v8) == 0 && (v8 & v7) == 0;
  }
  *a2 = v9;
  return result;
}

uint64_t sub_1D165F4D8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = v1[2];
  v3 = v1[3];
  v5 = v1[4];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  a1[6] = v4;
  a1[7] = v3;
  a1[5] = v5;
  return result;
}

uint64_t sub_1D165F528()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t sub_1D165F534@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1D166D7CC();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t method lookup function for ClientConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for ClientConnection.State(uint64_t a1)
{
  sub_1D141AC98(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClientConnection.State(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ClientConnection.State(uint64_t *a1, uint64_t *a2)
{
  sub_1D165F6BC(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_1D165F6BC(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for ClientConnection.State(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ClientConnection.State(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  sub_1D141AC98(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientConnection.State(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientConnection.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientConnection.State()
{
  return &type metadata for ClientConnection.State;
}

uint64_t sub_1D165F95C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D165F988()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D165F9AC(_QWORD *a1)
{
  uint64_t v1;

  return sub_1D165F028(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(const char **)(v1 + 40), *(_QWORD **)(v1 + 48), *(_QWORD **)(v1 + 56), *(_QWORD **)(v1 + 64));
}

uint64_t sub_1D165F9C0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1D164F778(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*v4 + 40);
      v8 = swift_retain();
      v9 = v7(v8, v5, v6);
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1D164F778(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v9;
      *(_QWORD *)(v12 + 40) = v6;
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t dispatch thunk of ClientConnectionManaging.startAcceptingIncomingConnections()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D141C488;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ClientConnectionManaging.notifyClientsNewSetupInfoAvailable(requiredCapabilities:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1D165FB28()
{
  uint64_t v0;

  v0 = sub_1D166D964();
  sub_1D15FD440(v0, qword_1ED9364A0);
  sub_1D141AC1C(v0, (uint64_t)qword_1ED9364A0);
  return sub_1D166D958();
}

uint64_t IntentsClientConnectionRouteProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t IntentsClientConnectionRouteProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D165FBBC()
{
  return 0x2073746E65746E49;
}

id sub_1D165FBE0()
{
  if (qword_1EFC614E8 != -1)
    swift_once();
  return (id)qword_1EFC65DF0;
}

uint64_t type metadata accessor for IntentsClientConnectionRouteProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for IntentsClientConnectionRouteProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D165FC4C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v12;
  _BYTE v13[40];
  __int128 v14;
  __int128 v15;
  unint64_t v16;

  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v2 = sub_1D166E15C();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v16 = a1 & 0xC000000000000001;
      v3 = 4;
      while (1)
      {
        if (v16)
          v4 = (id)MEMORY[0x1D17E8FD0](v3 - 4, a1);
        else
          v4 = *(id *)(a1 + 8 * v3);
        v5 = v4;
        v6 = v3 - 3;
        if (__OFADD__(v3 - 4, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        v7 = objc_msgSend(v4, sel_accountDefaults);
        v8 = sub_1D166DA30();

        v12 = sub_1D166DACC();
        sub_1D166E048();
        if (*(_QWORD *)(v8 + 16) && (v9 = sub_1D141B48C((uint64_t)v13), (v10 & 1) != 0))
        {
          sub_1D141B3A8(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v14);
        }
        else
        {
          v14 = 0u;
          v15 = 0u;
        }
        sub_1D1607C44((uint64_t)v13);
        if (!*((_QWORD *)&v15 + 1))
          break;
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_5;

        swift_bridgeObjectRelease();
        if ((v12 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
LABEL_6:
        ++v3;
        if (v6 == v2)
          goto LABEL_22;
      }
      sub_1D1608CC4((uint64_t)&v14);
LABEL_5:

      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D165FE6C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1D166E1E0();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1D166E1E0() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D165FF30()
{
  uint64_t v0;

  v0 = sub_1D166D964();
  sub_1D15FD440(v0, qword_1EFC63A90);
  sub_1D141AC1C(v0, (uint64_t)qword_1EFC63A90);
  sub_1D166D940();
  return sub_1D166D958();
}

void __swiftcall IMDServiceReachabilityBaseDelegate.init()(IMDServiceReachabilityBaseDelegate *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void IMDServiceReachabilityBaseDelegate.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for IMDServiceReachabilityBaseDelegate(uint64_t a1)
{
  return sub_1D15FD3C0(a1, &qword_1EFC63B10);
}

id sub_1D1660614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v5;
  void *v6;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  id v18;

  v6 = v5;
  v8 = (void *)sub_1D166DAA8();
  v9 = (void *)sub_1D166DAA8();
  v10 = objc_msgSend(v6, sel_isSMSEnabledForContext_, a5);
  if ((objc_msgSend(a5, sel_conversationWasDowngraded) & 1) != 0)
    goto LABEL_10;
  v11 = objc_msgSend(a5, sel_serviceOfLastMessage);
  if (!v11)
  {
    v17 = 0;
    goto LABEL_11;
  }
  v12 = v11;
  v13 = sub_1D166DACC();
  v15 = v14;

  if (v13 == 5459283 && v15 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    v17 = 1;
    goto LABEL_11;
  }
  v17 = sub_1D166E1E0();
  swift_bridgeObjectRelease();
LABEL_11:
  v18 = objc_msgSend((id)objc_opt_self(), sel_shouldDowngradeToRecipient_fromSender_ifCapableOfSMS_withConversationDowngradeState_andConversationHistoryState_, v8, v9, v10, v17 & 1, objc_msgSend(a5, sel_hasConversationHistory));

  return v18;
}

void sub_1D1660838()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_ctSubscriptionInfo);

  if (v1
    && (v2 = (void *)sub_1D166DAA8(),
        v3 = objc_msgSend(v1, sel___im_subscriptionContextForForSimID_, v2),
        v1,
        v2,
        v3)
    && (v4 = objc_msgSend(v3, sel_phoneNumber), v3, v4))
  {
    sub_1D166DACC();

  }
  else
  {
    v5 = objc_allocWithZone(MEMORY[0x1E0D34358]);
    v6 = (void *)sub_1D166DAA8();
    v7 = objc_msgSend(v5, sel_initWithService_, v6);

    if (v7)
    {
      v8 = (void *)sub_1D166DAA8();
      v9 = objc_msgSend(v7, sel_accountMatchingSimIdentifier_, v8);

      if (v9)
      {
        v10 = objc_msgSend(v9, sel_aliasStrings);

        if (v10)
        {
          v11 = sub_1D166DBEC();

          if (*(_QWORD *)(v11 + 16))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          __break(1u);
        }
      }
    }
  }
}

uint64_t sub_1D1660A28(uint64_t a1, unint64_t a2)
{
  id v4;
  id v5;
  id v6;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_ctSubscriptionInfo);

  if (v5)
  {
    v6 = objc_msgSend(v5, sel_phoneNumbersOfActiveSubscriptions);

    v7 = (_QWORD *)sub_1D166DBEC();
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v8 = sub_1D165FE6C(a1, a2, v7);
  if (qword_1EFC61580 != -1)
    swift_once();
  v9 = sub_1D166D964();
  sub_1D141AC1C(v9, (uint64_t)qword_1EFC63A90);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v10 = sub_1D166D94C();
  v11 = sub_1D166DD6C();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v19 = v13;
    *(_DWORD *)v12 = 136315650;
    swift_bridgeObjectRetain();
    sub_1D141BCB4(a1, a2, &v19);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 1024;
    sub_1D166DF28();
    *(_WORD *)(v12 + 18) = 2080;
    v14 = swift_bridgeObjectRetain();
    v15 = MEMORY[0x1D17E8B08](v14, MEMORY[0x1E0DEA968]);
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_1D141BCB4(v15, v17, &v19);
    sub_1D166DF28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D1413000, v10, v11, "Has CT subscription with phone number %s: %{BOOL}d - activePhoneNumbers=%s", (uint8_t *)v12, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1D17EB0AC](v13, -1, -1);
    MEMORY[0x1D17EB0AC](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v8 & 1;
}

id sub_1D1660D0C()
{
  id v0;
  void *v1;
  id v2;
  id result;
  void *v4;
  id v5;
  unint64_t v6;
  char v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
  v1 = (void *)sub_1D166DAA8();
  v2 = objc_msgSend(v0, sel_serviceWithName_, v1);

  if (!v2)
  {
    v7 = 0;
    return (id)(v7 & 1);
  }
  result = objc_msgSend((id)objc_opt_self(), sel_sharedAccountController);
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(result, sel_accountsForService_, v2);

    if (v5)
    {
      sub_1D15FD3C0(0, &qword_1EFC62BE8);
      v6 = sub_1D166DBEC();

    }
    else
    {
      v6 = MEMORY[0x1E0DEE9D8];
    }
    v7 = sub_1D165FC4C(v6);
    swift_bridgeObjectRelease();

    return (id)(v7 & 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D1660E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC12IMDaemonCore35ScheduledMessageBlocklistController____lazy_storage___blockedHandles;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC12IMDaemonCore35ScheduledMessageBlocklistController____lazy_storage___blockedHandles))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC12IMDaemonCore35ScheduledMessageBlocklistController____lazy_storage___blockedHandles);
  }
  else
  {
    v3 = v0;
    sub_1D141AC58(&qword_1ED935B88);
    swift_allocObject();
    v2 = sub_1D166D9A0();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1D1660EE0()
{
  char *v0;
  id v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD aBlock[6];
  objc_super v21;

  *(_QWORD *)&v0[OBJC_IVAR____TtC12IMDaemonCore35ScheduledMessageBlocklistController____lazy_storage___blockedHandles] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12IMDaemonCore35ScheduledMessageBlocklistController_cancellables] = MEMORY[0x1E0DEE9E8];
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for ScheduledMessageBlocklistController();
  v1 = objc_msgSendSuper2(&v21, sel_init);
  sub_1D1660E48();
  v2 = sub_1D1664EEC();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v18 = v1;
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1D164F570(0, v3, 0);
    v4 = aBlock[0];
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v7 = *(v5 - 1);
      v6 = *v5;
      aBlock[0] = v4;
      v8 = *(_QWORD *)(v4 + 16);
      v9 = *(_QWORD *)(v4 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
      {
        sub_1D164F570(v9 > 1, v8 + 1, 1);
        v4 = aBlock[0];
      }
      v5 += 2;
      *(_QWORD *)(v4 + 16) = v8 + 1;
      v10 = v4 + 16 * v8;
      *(_QWORD *)(v10 + 32) = v7;
      *(_QWORD *)(v10 + 40) = v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v1 = v18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
  }
  aBlock[0] = v4;
  sub_1D166D994();
  swift_bridgeObjectRelease();
  swift_release();
  result = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v12 = (void *)*MEMORY[0x1E0D13278];
  if (*MEMORY[0x1E0D13278])
  {
    v13 = result;
    v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_1D1665198;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D166150C;
    aBlock[3] = &unk_1E9233288;
    v15 = _Block_copy(aBlock);
    swift_release();
    v16 = objc_msgSend(v13, sel_addObserverForName_object_queue_usingBlock_, v12, 0, 0, v15);
    _Block_release(v15);

    *(_QWORD *)(swift_allocObject() + 16) = v16;
    sub_1D166D97C();
    swift_allocObject();
    swift_unknownObjectRetain();
    v17 = sub_1D166D988();
    swift_beginAccess();
    sub_1D1661FAC(&v19, v17);
    swift_endAccess();
    swift_unknownObjectRelease();

    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D16611CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;

  v2 = a2 + 16;
  if (qword_1EFC61520 != -1)
    swift_once();
  v3 = sub_1D166D964();
  sub_1D141AC1C(v3, (uint64_t)qword_1EFC65E10);
  v4 = sub_1D166D94C();
  v5 = sub_1D166DD9C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1D1413000, v4, v5, "Received signal that blocklist updated", v6, 2u);
    MEMORY[0x1D17EB0AC](v6, -1, -1);
  }

  swift_beginAccess();
  result = MEMORY[0x1D17EB154](v2);
  if (result)
  {
    v8 = (void *)result;
    v9 = sub_1D1664EEC();
    swift_bridgeObjectRetain_n();
    v10 = sub_1D166D94C();
    v11 = sub_1D166DD9C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v27 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = swift_bridgeObjectRetain();
      v15 = MEMORY[0x1D17E8B08](v14, &type metadata for ScheduledMessageBlocklistController.BlockedItem);
      v17 = v16;
      swift_bridgeObjectRelease();
      sub_1D141BCB4(v15, v17, &v27);
      sub_1D166DF28();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D1413000, v10, v11, "BlockedItems: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17EB0AC](v13, -1, -1);
      MEMORY[0x1D17EB0AC](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1D1660E48();
    v18 = *(_QWORD *)(v9 + 16);
    if (v18)
    {
      v26 = v8;
      v27 = MEMORY[0x1E0DEE9D8];
      sub_1D164F570(0, v18, 0);
      v19 = v27;
      v20 = (uint64_t *)(v9 + 40);
      do
      {
        v22 = *(v20 - 1);
        v21 = *v20;
        v27 = v19;
        v23 = *(_QWORD *)(v19 + 16);
        v24 = *(_QWORD *)(v19 + 24);
        swift_bridgeObjectRetain();
        if (v23 >= v24 >> 1)
        {
          sub_1D164F570(v24 > 1, v23 + 1, 1);
          v19 = v27;
        }
        v20 += 2;
        *(_QWORD *)(v19 + 16) = v23 + 1;
        v25 = v19 + 16 * v23;
        *(_QWORD *)(v25 + 32) = v22;
        *(_QWORD *)(v25 + 40) = v21;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      v8 = v26;
    }
    else
    {
      swift_bridgeObjectRelease();
      v19 = MEMORY[0x1E0DEE9D8];
    }
    v27 = v19;
    sub_1D166D994();
    swift_bridgeObjectRelease();

    return swift_release();
  }
  return result;
}

uint64_t sub_1D166150C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_1D166D460();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_1D166D43C();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1D16615B0(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_, a1);

}

id sub_1D166162C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduledMessageBlocklistController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ScheduledMessageBlocklistController()
{
  return objc_opt_self();
}

uint64_t sub_1D16616B4(_QWORD *a1, void *a2)
{
  return sub_1D16616EC(a1, a2, &qword_1EFC61FA8, 0x1E0DBD2A0, &qword_1EFC63BA0);
}

uint64_t sub_1D16616D0(_QWORD *a1, void *a2)
{
  return sub_1D16616EC(a1, a2, (unint64_t *)&unk_1EFC62E90, 0x1E0DBD2F8, (uint64_t *)&unk_1EFC62EA0);
}

uint64_t sub_1D16616EC(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = v5;
  v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v12 = *v5;
    else
      v12 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = a2;
    v14 = sub_1D166DFF4();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_1D15FD3C0(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1D166DFE8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_1D1662280(v12, result + 1, a5, a3);
    v37 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v32 = v27 + 1;
      v33 = v13;
      sub_1D1662E74(v32, a5);
      v28 = v37;
    }
    else
    {
      v28 = v26;
      v29 = v13;
    }
    sub_1D1663414((uint64_t)v13, v28);
    *v8 = v28;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    v16 = sub_1D166DED4();
    v17 = -1 << *(_BYTE *)(v11 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      sub_1D15FD3C0(0, a3);
      v19 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
      v20 = sub_1D166DEE0();

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v24 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v18);
        *a1 = v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
        v23 = sub_1D166DEE0();

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *v5;
    *v5 = 0x8000000000000000;
    v31 = a2;
    sub_1D1663558((uint64_t)v31, v18, isUniquelyReferenced_nonNull_native, a5, a3);
    *v5 = v38;
    swift_bridgeObjectRelease();
    *a1 = v31;
  }
  return 1;
}

uint64_t sub_1D16619B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1D166E264();
  swift_bridgeObjectRetain();
  sub_1D166DB08();
  v8 = sub_1D166E288();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1D166E1E0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1D166E1E0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1D16636E8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1D1661B60(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;

  v7 = *v3;
  sub_1D166E264();
  sub_1D166E27C();
  swift_bridgeObjectRetain();
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_1D166DB08();
    swift_bridgeObjectRelease();
  }
  v8 = sub_1D166E288();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v3;
    *v3 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_1D1663880(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v20;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  v11 = ~v9;
  v12 = *(_QWORD *)(v7 + 48);
  while (1)
  {
    v13 = (_QWORD *)(v12 + 16 * v10);
    v14 = v13[1];
    if (v14)
      break;
    if (!a3)
      goto LABEL_15;
LABEL_6:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_16;
  }
  if (!a3)
    goto LABEL_6;
  v15 = *v13 == a2 && v14 == a3;
  if (!v15 && (sub_1D166E1E0() & 1) == 0)
    goto LABEL_6;
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  v16 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
  v17 = v16[1];
  *a1 = *v16;
  a1[1] = v17;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_1D1661D28(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1D166DFF4();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1D166DEB0();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1D166DFE8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1D1662480(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1D1662E74(v26, &qword_1EFC63B90);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1D1663414((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1D166DED4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1D166DEB0();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1D166DEE0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1D166DEE0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1D1663A34((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1D1661FAC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_1D166DFF4();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1D166D97C();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1D166DFE8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_1D1662678(v7, result + 1);
    v20 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_1D166310C();
      v17 = v20;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_1D1663494(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  sub_1D166D97C();
  sub_1D16651CC((unint64_t *)&unk_1ED935B70, MEMORY[0x1E0C95E18]);
  swift_bridgeObjectRetain();
  v10 = sub_1D166DA48();
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v2;
    *v2 = 0x8000000000000000;
    v15 = swift_retain();
    sub_1D1663BC8(v15, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v13 = ~v11;
  sub_1D16651CC(&qword_1EFC63B88, MEMORY[0x1E0C95E20]);
  while ((sub_1D166DA9C() & 1) == 0)
  {
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_11;
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_1D1662264(uint64_t a1, uint64_t a2)
{
  return sub_1D1662280(a1, a2, (uint64_t *)&unk_1EFC62EA0, (unint64_t *)&unk_1EFC62E90);
}

uint64_t sub_1D1662280(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    sub_1D141AC58(a3);
    v6 = sub_1D166E078();
    v19 = v6;
    sub_1D166DFB8();
    if (sub_1D166E00C())
    {
      sub_1D15FD3C0(0, a4);
      do
      {
        swift_dynamicCast();
        v6 = v19;
        v13 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v13)
        {
          sub_1D1662E74(v13 + 1, a3);
          v6 = v19;
        }
        result = sub_1D166DED4();
        v8 = v6 + 56;
        v9 = -1 << *(_BYTE *)(v6 + 32);
        v10 = result & ~v9;
        v11 = v10 >> 6;
        if (((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v11 == v15;
            if (v11 == v15)
              v11 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_1D166E00C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v6;
}

uint64_t sub_1D1662480(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    sub_1D141AC58(&qword_1EFC63B90);
    v2 = sub_1D166E078();
    v15 = v2;
    sub_1D166DFB8();
    if (sub_1D166E00C())
    {
      sub_1D166DEB0();
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_1D1662E74(v9 + 1, &qword_1EFC63B90);
          v2 = v15;
        }
        result = sub_1D166DED4();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1D166E00C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1D1662678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    sub_1D141AC58(&qword_1ED935C10);
    v2 = sub_1D166E078();
    v15 = v2;
    sub_1D166DFB8();
    if (sub_1D166E00C())
    {
      sub_1D166D97C();
      v3 = MEMORY[0x1E0C95E18];
      do
      {
        swift_dynamicCast();
        v2 = v15;
        if (*(_QWORD *)(v15 + 24) <= *(_QWORD *)(v15 + 16))
        {
          sub_1D166310C();
          v2 = v15;
        }
        sub_1D16651CC((unint64_t *)&unk_1ED935B70, v3);
        result = sub_1D166DA48();
        v5 = v2 + 56;
        v6 = -1 << *(_BYTE *)(v2 + 32);
        v7 = result & ~v6;
        v8 = v7 >> 6;
        if (((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          v9 = __clz(__rbit64((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v8 == v11;
            if (v8 == v11)
              v8 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(_QWORD *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1D166E00C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1D1662890()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1D141AC58(&qword_1ED935848);
  v3 = sub_1D166E06C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1D166E264();
      sub_1D166DB08();
      result = sub_1D166E288();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D1662B6C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1D141AC58(&qword_1EFC63B98);
  v3 = sub_1D166E06C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_35;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_35;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_35;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_35:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_41;
                  if (v11 >= v8)
                    goto LABEL_35;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v21 = *v19;
      v20 = v19[1];
      sub_1D166E264();
      sub_1D166E27C();
      if (v20)
      {
        swift_bridgeObjectRetain();
        sub_1D166DB08();
        swift_bridgeObjectRelease();
      }
      result = sub_1D166E288();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v21;
      v13[1] = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D1662E74(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  sub_1D141AC58(a2);
  v5 = sub_1D166E06C();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_1D166DED4();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1D166310C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;

  v1 = *v0;
  sub_1D141AC58(&qword_1ED935C10);
  v2 = sub_1D166E06C();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v26 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v25 = (unint64_t)(v4 + 63) >> 6;
    v7 = v2 + 56;
    result = swift_retain();
    v9 = 0;
    while (1)
    {
      if (v6)
      {
        v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v12 = v11 | (v9 << 6);
      }
      else
      {
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v25)
          goto LABEL_33;
        v14 = v26[v13];
        ++v9;
        if (!v14)
        {
          v9 = v13 + 1;
          if (v13 + 1 >= v25)
            goto LABEL_33;
          v14 = v26[v9];
          if (!v14)
          {
            v9 = v13 + 2;
            if (v13 + 2 >= v25)
              goto LABEL_33;
            v14 = v26[v9];
            if (!v14)
            {
              v15 = v13 + 3;
              if (v15 >= v25)
              {
LABEL_33:
                swift_release();
                v24 = 1 << *(_BYTE *)(v1 + 32);
                if (v24 > 63)
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v24;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v14 = v26[v15];
              if (!v14)
              {
                while (1)
                {
                  v9 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_39;
                  if (v9 >= v25)
                    goto LABEL_33;
                  v14 = v26[v9];
                  ++v15;
                  if (v14)
                    goto LABEL_23;
                }
              }
              v9 = v15;
            }
          }
        }
LABEL_23:
        v6 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v9 << 6);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
      sub_1D166D97C();
      sub_1D16651CC((unint64_t *)&unk_1ED935B70, MEMORY[0x1E0C95E18]);
      result = sub_1D166DA48();
      v17 = -1 << *(_BYTE *)(v3 + 32);
      v18 = result & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v20 = 0;
        v21 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v22 = v19 == v21;
          if (v19 == v21)
            v19 = 0;
          v20 |= v22;
          v23 = *(_QWORD *)(v7 + 8 * v19);
        }
        while (v23 == -1);
        v10 = __clz(__rbit64(~v23)) + (v19 << 6);
      }
      *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

unint64_t sub_1D1663414(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1D166DED4();
  result = sub_1D166DFA0();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1D1663494(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1D166D97C();
  sub_1D16651CC((unint64_t *)&unk_1ED935B70, MEMORY[0x1E0C95E18]);
  sub_1D166DA48();
  result = sub_1D166DFA0();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_1D1663558(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1D1662E74(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1D16640D4(a4);
      goto LABEL_14;
    }
    sub_1D166499C(v11, a4);
  }
  v12 = *v5;
  v13 = sub_1D166DED4();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1D15FD3C0(0, a5);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_1D166DEE0();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_1D166E210();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_1D166DEE0();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

uint64_t sub_1D16636E8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1D1662890();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1D1663D6C();
      goto LABEL_22;
    }
    sub_1D166441C();
  }
  v11 = *v4;
  sub_1D166E264();
  sub_1D166DB08();
  result = sub_1D166E288();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1D166E1E0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1D166E210();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1D166E1E0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1D1663880(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1D1662B6C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1D1663F1C();
      goto LABEL_22;
    }
    sub_1D16646C8();
  }
  v11 = *v4;
  sub_1D166E264();
  sub_1D166E27C();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1D166DB08();
    swift_bridgeObjectRelease();
  }
  result = sub_1D166E288();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v11 + 48);
    do
    {
      v16 = (_QWORD *)(v15 + 16 * a3);
      v17 = v16[1];
      if (v17)
      {
        if (a2)
        {
          v18 = *v16 == v8 && v17 == a2;
          if (v18 || (result = sub_1D166E1E0(), (result & 1) != 0))
          {
LABEL_21:
            sub_1D141AC58(&qword_1EFC61FE0);
            result = sub_1D166E210();
            __break(1u);
            break;
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_21;
      }
      a3 = (a3 + 1) & v14;
    }
    while (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_22:
  v19 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v20 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 16 * a3);
  *v20 = v8;
  v20[1] = a2;
  v21 = *(_QWORD *)(v19 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v23;
  return result;
}

void sub_1D1663A34(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1D1662E74(v8, &qword_1EFC63B90);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1D16640D4(&qword_1EFC63B90);
      goto LABEL_14;
    }
    sub_1D166499C(v8, &qword_1EFC63B90);
  }
  v9 = *v3;
  v10 = sub_1D166DED4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1D166DEB0();
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1D166DEE0();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1D166E210();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1D166DEE0();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1D1663BC8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1D166310C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1D1664274();
      goto LABEL_12;
    }
    sub_1D1664C10();
  }
  v8 = *v3;
  sub_1D166D97C();
  sub_1D16651CC((unint64_t *)&unk_1ED935B70, MEMORY[0x1E0C95E18]);
  result = sub_1D166DA48();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    sub_1D16651CC(&qword_1EFC63B88, MEMORY[0x1E0C95E20]);
    do
    {
      result = sub_1D166DA9C();
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1D166E210();
  __break(1u);
  return result;
}

id sub_1D1663D60()
{
  return sub_1D16640D4((uint64_t *)&unk_1EFC62EA0);
}

void *sub_1D1663D6C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1D141AC58(&qword_1ED935848);
  v2 = *v0;
  v3 = sub_1D166E060();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D1663F1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1D141AC58(&qword_1EFC63B98);
  v2 = *v0;
  v3 = sub_1D166E060();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1D16640C8()
{
  return sub_1D16640D4(&qword_1EFC63B90);
}

id sub_1D16640D4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  sub_1D141AC58(a1);
  v3 = *v1;
  v4 = sub_1D166E060();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D1664274()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1D141AC58(&qword_1ED935C10);
  v2 = *v0;
  v3 = sub_1D166E060();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D166441C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1D141AC58(&qword_1ED935848);
  v3 = sub_1D166E06C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1D166E264();
    swift_bridgeObjectRetain();
    sub_1D166DB08();
    result = sub_1D166E288();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D16646C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1D141AC58(&qword_1EFC63B98);
  v3 = sub_1D166E06C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v29)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_35;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_35;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v21 = *v19;
    v20 = v19[1];
    sub_1D166E264();
    sub_1D166E27C();
    if (v20)
    {
      swift_bridgeObjectRetain_n();
      sub_1D166DB08();
      swift_bridgeObjectRelease();
    }
    result = sub_1D166E288();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v21;
    v13[1] = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_35:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_37;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1D166499C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  sub_1D141AC58(a2);
  v5 = sub_1D166E06C();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_1D166DED4();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D1664C10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_1D141AC58(&qword_1ED935C10);
  v3 = sub_1D166E06C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v25 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v26 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v26)
      goto LABEL_33;
    v15 = *(_QWORD *)(v25 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v26)
        goto LABEL_33;
      v15 = *(_QWORD *)(v25 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v26)
          goto LABEL_33;
        v15 = *(_QWORD *)(v25 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
    sub_1D166D97C();
    sub_1D16651CC((unint64_t *)&unk_1ED935B70, MEMORY[0x1E0C95E18]);
    swift_retain();
    result = sub_1D166DA48();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v21 = 0;
      v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v23 = v20 == v22;
        if (v20 == v22)
          v20 = 0;
        v21 |= v23;
        v24 = *(_QWORD *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v17;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v26)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v25 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v26)
      goto LABEL_33;
    v15 = *(_QWORD *)(v25 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D1664EEC()
{
  CMFBlockListCopyItemsForAllServicesService();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1D1665174()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D1665198(uint64_t a1)
{
  uint64_t v1;

  return sub_1D16611CC(a1, v1);
}

uint64_t sub_1D16651A0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1D16651C4()
{
  uint64_t v0;

  sub_1D16615B0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D16651CC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1D166D97C();
    result = MEMORY[0x1D17EAFE0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScheduledMessageBlocklistController.BlockedItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledMessageBlocklistController.BlockedItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledMessageBlocklistController.BlockedItem()
{
  return &type metadata for ScheduledMessageBlocklistController.BlockedItem;
}

uint64_t sub_1D16652A0()
{
  uint64_t result;

  result = sub_1D166DAA8();
  qword_1ED936500 = result;
  return result;
}

uint64_t sub_1D16652D8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v0 = sub_1D141AC58(&qword_1ED9356E0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D166D580();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  sub_1D166D568();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
    while (1)
    {
      v12 = sub_1D166D4E4();
      v14 = v13;
      swift_bridgeObjectRelease();
      v15 = HIBYTE(v14) & 0xF;
      if ((v14 & 0x2000000000000000) == 0)
        v15 = v12 & 0xFFFFFFFFFFFFLL;
      if (!v15)
      {
        if (sub_1D166D514() == 0x6F685070756F7247 && v16 == 0xEF6567616D496F74)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v11 = sub_1D166E1E0();
          swift_bridgeObjectRelease();
          if ((v11 & 1) == 0)
          {
            v10 = sub_1D166D514();
            (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
            return v10;
          }
        }
      }
      sub_1D166D544();
      (*(void (**)(char *, char *, uint64_t))(v4 + 40))(v9, v7, v3);
    }
  }
  sub_1D164F044((uint64_t)v2);
  return 0;
}

id PersistedCollaborationNotice.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id PersistedCollaborationNotice.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for PersistedCollaborationNotice();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for PersistedCollaborationNotice()
{
  return objc_opt_self();
}

id PersistedCollaborationNotice.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PersistedCollaborationNotice();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static PersistedCollaborationNotice.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1D166DAA8();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D166569C()
{
  return MEMORY[0x1E0DEA528];
}

uint64_t sub_1D16656A8@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    sub_1D166D604();

    v6 = sub_1D166D628();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 0;
  }
  else
  {
    v6 = sub_1D166D628();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

void sub_1D1665728(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v8 = sub_1D141AC58(&qword_1ED9354E8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D161FDF8(a1, (uint64_t)v10);
  v11 = *a2;
  v12 = sub_1D166D628();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    v14 = (void *)sub_1D166D5BC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, v14);

}

void sub_1D1665804(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_metadata);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1D166D598();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D1665868(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_1D166D58C();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setMetadata_);

}

void sub_1D16658CC(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1D166DACC();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_1D166592C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  uint64_t v7;
  id v8;

  v6 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v7 = sub_1D166DAA8();
  else
    v7 = 0;
  v8 = (id)v7;
  objc_msgSend(v6, *a5);

}

uint64_t sub_1D1665988@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PersistedCollaborationNotice();
  result = sub_1D166E0A8();
  *a1 = result;
  return result;
}

char *sub_1D16659C8()
{
  return sel_date;
}

uint64_t sub_1D16659D4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D16656A8(a1, (SEL *)&selRef_date, a2);
}

void sub_1D16659F0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1D1665728(a1, a2, a3, a4, (SEL *)&selRef_setDate_);
}

char *sub_1D1665A0C()
{
  return sel_dateViewed;
}

uint64_t sub_1D1665A18@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D16656A8(a1, (SEL *)&selRef_dateViewed, a2);
}

void sub_1D1665A34(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1D1665728(a1, a2, a3, a4, (SEL *)&selRef_setDateViewed_);
}

char *sub_1D1665A50()
{
  return sel_guidString;
}

void sub_1D1665A5C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1D16658CC(a1, (SEL *)&selRef_guidString, a2);
}

void sub_1D1665A78(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1D166592C(a1, a2, a3, a4, (SEL *)&selRef_setGuidString_);
}

char *sub_1D1665A94()
{
  return sel_metadata;
}

char *sub_1D1665AA8()
{
  return sel_senderHandle;
}

void sub_1D1665AB4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1D16658CC(a1, (SEL *)&selRef_senderHandle, a2);
}

void sub_1D1665AD0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1D166592C(a1, a2, a3, a4, (SEL *)&selRef_setSenderHandle_);
}

char *sub_1D1665AEC()
{
  return sel_url;
}

void sub_1D1665AF8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1D16658CC(a1, (SEL *)&selRef_url, a2);
}

void sub_1D1665B14(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1D166592C(a1, a2, a3, a4, (SEL *)&selRef_setUrl_);
}

char *sub_1D1665B30()
{
  return sel_version;
}

id sub_1D1665B3C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_version);
  *a2 = (_WORD)result;
  return result;
}

id sub_1D1665B6C(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVersion_, *a1);
}

void sub_1D1665B80(void *a1)
{

  objc_end_catch();
}

void sub_1D1665BA0(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "No account or ID set: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1D1665C14(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl(&dword_1D1413000, log, OS_LOG_TYPE_DEBUG, "Created IMDCKSyncState in IMDCKUtilities", v1, 2u);
}

void sub_1D1665C54(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "description");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D14357A0(&dword_1D1413000, v2, v3, "will update sync state: %@", v4, v5, v6, v7, 2u);

  sub_1D14357B4();
}

void sub_1D1665CD4(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "description");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D14357A0(&dword_1D1413000, v2, v3, "broadcasting current sync state: %@", v4, v5, v6, v7, 2u);

  sub_1D14357B4();
}

void sub_1D1665D50(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "description");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D14357A0(&dword_1D1413000, v2, v3, "broadcasting final requested update: %@", v4, v5, v6, v7, 2u);

  sub_1D14357B4();
}

void sub_1D1665DD0(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl(&dword_1D1413000, a2, OS_LOG_TYPE_DEBUG, "   => Disabling: %@", (uint8_t *)&v2, 0xCu);
  sub_1D143BF48();
}

void sub_1D1665E40(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "%@: Load failed! Disabling any active accounts  (Error: %@)", (uint8_t *)&v3, 0x16u);
  sub_1D143BF48();
}

void sub_1D1665EC0(uint64_t a1, uint64_t *a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v3 = *a2;
  v4 = 138412546;
  v5 = a1;
  v6 = 2112;
  v7 = v3;
  _os_log_debug_impl(&dword_1D1413000, log, OS_LOG_TYPE_DEBUG, "%@: Service properties: %@", (uint8_t *)&v4, 0x16u);
  sub_1D143BF48();
}

void sub_1D1665F44(uint64_t a1, Class *a2)
{
  void *v2;
  os_log_t v3;
  os_log_type_t v4;
  const char *v5;
  uint8_t *v6;
  void *v7;

  NSStringFromClass(*a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D143BF38();
  _os_log_debug_impl(v2, v3, v4, v5, v6, 0x16u);

}

void sub_1D1665FEC(uint64_t a1, id *a2)
{
  void *v3;
  os_log_t v4;
  os_log_type_t v5;
  const char *v6;
  uint8_t *v7;
  void *v8;

  objc_msgSend(*a2, "isLoaded");
  objc_msgSend(*a2, "bundleIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D143BF38();
  _os_log_debug_impl(v3, v4, v5, v6, v7, 0x2Au);

}

void sub_1D16660D4(uint64_t a1)
{
  void *v1;
  os_log_t v2;
  os_log_type_t v3;
  const char *v4;
  uint8_t *v5;

  objc_msgSend(*(id *)(a1 + 8), "isLoaded");
  sub_1D143BF38();
  _os_log_debug_impl(v1, v2, v3, v4, v5, 0x20u);
}

void sub_1D1666194(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Latest item time is nil, can't update chat's lastTUConversationCreatedDate! item: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1D1666208(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Failed to respond to ST request payloadURL == nil", a5, a6, a7, a8, 0);
}

void sub_1D166623C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Failed to respond to ST request requestID == nil", a5, a6, a7, a8, 0);
}

void sub_1D1666270(uint64_t a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = 138412546;
  v7 = v5;
  v8 = 2112;
  v9 = a2;
  _os_log_error_impl(&dword_1D1413000, a3, OS_LOG_TYPE_ERROR, "Failed to respond to ST request with answer: %@ error: %@", (uint8_t *)&v6, 0x16u);

}

void sub_1D166632C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "failed to generate passwords icon.", v1, 2u);
}

void sub_1D166636C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "cancelScheduledMessage called on the wrong session", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D1666398()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "sendEditedScheduledMessage called on the wrong session", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D16663C4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "sendEditedScheduledMessage:retractingPartIndexes: called on the wrong session", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D16663F0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "renewTTLForScheduledAttachmentTransfer called on the wrong session", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166641C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Request to mark item as failed but it does not carry error codes or is not a transcript item.", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D1666448(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "BlastDoor could not init stickerInfoDictionary", a5, a6, a7, a8, 0);
  sub_1D144ED68();
}

void sub_1D1666478(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "<Sticker> Missing IMFileTransfer", a5, a6, a7, a8, 0);
  sub_1D144ED68();
}

void sub_1D16664A8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Could not get From Display ID", a5, a6, a7, a8, 0);
  sub_1D144ED68();
}

void sub_1D16664D8(uint8_t *a1, void *a2, _QWORD *a3, NSObject *a4)
{
  void *v7;

  objc_msgSend(a2, "guid");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_error_impl(&dword_1D1413000, a4, OS_LOG_TYPE_ERROR, "Failed to find rowID for guid %@ to mark transfer as failed", a1, 0xCu);

}

void sub_1D166654C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "IMSyndicationActionPipelineParameter unable to determine recipient for 1 on 1 chat", a5, a6, a7, a8, 0);
  sub_1D144ED68();
}

void sub_1D166657C(unsigned __int8 *a1, unsigned __int16 a2, os_log_t log)
{
  int v3;
  _DWORD v4[2];
  __int16 v5;
  int v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = *a1;
  v4[0] = 67109376;
  v4[1] = v3;
  v5 = 1024;
  v6 = a2;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "IMSyndicationActionPipelineParameter received wrong version of SyndicationAction. Got: %d, expected: %d", (uint8_t *)v4, 0xEu);
}

void sub_1D1666608(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "IMSyndicationActionPipelineParameter failed to find chat", a5, a6, a7, a8, 0);
  sub_1D144ED68();
}

void sub_1D1666638(unsigned __int8 a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 134217984;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "IMSyndicationActionPipelineParameter invalid SyndicationItemType: %ld", (uint8_t *)&v2, 0xCu);
}

void sub_1D16666B0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "IMSyndicationActionPipelineParameter Failed to create SyndicationAction from BlastDoorSyndicationAction data", a5, a6, a7, a8, 0);
  sub_1D144ED68();
}

void sub_1D16666E0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Cache miss for subscription validation token, not including token on this message", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166670C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Forward declared API is not available, subscriptionValidationTokenForHandle:completion:", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D1666738()
{
  NSObject *v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  sub_1D1469774();
  sub_1D1469768(&dword_1D1413000, v0, (uint64_t)v0, "Error fetching subscription validation tokens for handle handleID: %@ Error: %@", v1);
  sub_1D143BF48();
}

void sub_1D16667A4()
{
  NSObject *v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  sub_1D1469774();
  sub_1D1469768(&dword_1D1413000, v0, (uint64_t)v0, "Error fetching subscription validation token for handle handleID: %@ Error: %@", v1);
  sub_1D143BF48();
}

void sub_1D1666810()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Forward declared API is not available, validatePersonalStatusSubscriptionMatchesSubscriptionValidationToken:fromSender:completion:", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166683C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Received an unknown validity response, ignoring.", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D1666868(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = 138412546;
  v6 = v3;
  v7 = 2112;
  v8 = v4;
  sub_1D1469768(&dword_1D1413000, a2, a3, "Received an invalid validity response, attempting to fix by potentially re-inviting senderHandleID: %@ fromHandleID: %@", (uint8_t *)&v5);
  sub_1D143BF48();
}

void sub_1D16668E0(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Error validating subscription validation token: %@", (uint8_t *)&v2, 0xCu);
  sub_1D143BF48();
}

void sub_1D1666950(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a2, a3, "Failed to clear index state due to restore from backup: %@", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D16669B4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a2, a3, "Failed to fetch client state: %@", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D1666A18(os_log_t log)
{
  _DWORD v1[2];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  v1[0] = 67109120;
  v1[1] = 5;
  _os_log_fault_impl(&dword_1D1413000, log, OS_LOG_TYPE_FAULT, "Failed to inspect client state %d times - giving up", (uint8_t *)v1, 8u);
}

void sub_1D1666A94(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_fault_impl(&dword_1D1413000, a2, OS_LOG_TYPE_FAULT, "Failed to inspect client state: %@", (uint8_t *)&v2, 0xCu);
  sub_1D143BF48();
}

void sub_1D1666B04(void *a1, const char *a2)
{
  unint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1D147C9E0(a1, a2);
  sub_1D142304C(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D142304C(1uLL);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C978();
  sub_1D147C948(&dword_1D1413000, v5, v6, "Invalid state transition attempted %@ -> %@", v7, v8, v9, v10, 2u);

  sub_1D147C95C();
}

void sub_1D1666B9C(void *a1, const char *a2)
{
  unint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1D147C9E0(a1, a2);
  sub_1D142304C(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D142304C(2uLL);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C978();
  sub_1D147C948(&dword_1D1413000, v5, v6, "Invalid state transition attempted %@ -> %@", v7, v8, v9, v10, 2u);

  sub_1D147C95C();
}

void sub_1D1666C34(void *a1, char *a2)
{
  unint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  int v7;
  void *v8;

  v3 = sub_1D147C9E0(a1, a2);
  sub_1D142304C(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D142304C(3uLL);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412546;
  v8 = v4;
  sub_1D147C978();
  sub_1D1469768(&dword_1D1413000, a2, v6, "Invalid state transition attempted %@ -> %@", (uint8_t *)&v7);

  sub_1D147C95C();
}

void sub_1D1666CD8(void *a1, char *a2)
{
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint8_t v6[24];

  v3 = sub_1D147C9E0(a1, a2);
  sub_1D142304C(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, a2, v5, "Invalid state transition attempted %@ -> Complete", v6);

  sub_1D14357B4();
}

void sub_1D1666D5C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(a1 + 40);
  v4 = 138412546;
  v5 = v3;
  v6 = 2112;
  v7 = a2;
  sub_1D1469768(&dword_1D1413000, a3, (uint64_t)a3, "Error fetching moment share from %@. Error: %@", (uint8_t *)&v4);
  sub_1D143BF48();
}

void sub_1D1666DD8(uint64_t a1, NSObject *a2)
{
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  const __CFString *v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  const __CFString *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v4 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 32), "guid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(*(id *)(a1 + 32), "getCMMState");
  if (v6 > 4)
    v8 = CFSTR("invalid CMM state");
  else
    v8 = off_1E9229D98[v6];
  v9 = 138412802;
  v10 = v4;
  v11 = 2112;
  v12 = v5;
  v13 = 2112;
  v14 = v8;
  sub_1D147C9C8(&dword_1D1413000, a2, v7, "Failed to fetch moment share from %@ for message %@ with CMMstate %@", (uint8_t *)&v9);

  sub_1D147C9B8();
}

void sub_1D1666EA8()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D147C9D4();
  objc_msgSend(v1, "momentShare");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "guid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C978();
  sub_1D147C948(&dword_1D1413000, v4, v5, "Encountered indefinite failure for moment share %@. Clearing ingestion state state and setting CMMState back to registered for message %@", v6, v7, v8, v9, 2u);

  sub_1D147C95C();
}

void sub_1D1666F40(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D142304C(objc_msgSend(a2, "state"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C978();
  sub_1D147C948(&dword_1D1413000, v3, v4, "Moment share %@ has a context in state %@ and needs to reset transfers", v5, v6, v7, v8, 2u);

  sub_1D147C95C();
}

void sub_1D1666FD4()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "Attempted to accept a moment share that is in an unknown state %@", v2);
  sub_1D143BF48();
}

void sub_1D1667038()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "Scheduling retry of moment share fetch after %{public}@ seconds", v2);
  sub_1D143BF48();
}

void sub_1D166709C(uint64_t a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "uuid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, a2, v4, "Accept failed too many times for moment share %@. Giving up", v5);

  sub_1D14357B4();
}

void sub_1D1667124(uint64_t a1, uint64_t a2, NSObject *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "shareURL");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "guid");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = 138412802;
  v10 = v6;
  v11 = 2112;
  v12 = a2;
  v13 = 2112;
  v14 = v7;
  sub_1D147C9C8(&dword_1D1413000, a3, v8, "Failed to accept the share at url: %@, error: %@ for message %@", (uint8_t *)&v9);

  sub_1D147C9B8();
}

void sub_1D16671E4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl(&dword_1D1413000, log, OS_LOG_TYPE_FAULT, "Regenerating transfers for a moment share is not supported", v1, 2u);
}

void sub_1D1667224()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6[12];
  __int16 v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  sub_1D147C9D4();
  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(v2 + 32), "guid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  v7 = 2112;
  v8 = v4;
  v9 = 2112;
  v10 = v1;
  sub_1D147C9C8(&dword_1D1413000, v0, v5, "Error setting syndication identifier to %@ on asset with UUID %@: %@", v6);

  sub_1D147C9B8();
}

void sub_1D16672C8()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "Failed to copy item to temporary directory: %@", v2);
  sub_1D143BF48();
}

void sub_1D166732C()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "Failed to remove existing item from temporary directory: %@", v2);
  sub_1D143BF48();
}

void sub_1D1667390()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "Failed to create temporary directory: %@", v2);
  sub_1D143BF48();
}

void sub_1D16673F4()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "%@", v2);
  sub_1D143BF48();
}

void sub_1D1667458()
{
  NSObject *v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  sub_1D147C988();
  sub_1D1469768(&dword_1D1413000, v0, (uint64_t)v0, "Failed copy of video complement URL: %@, error: %@", v1);
  sub_1D143BF48();
}

void sub_1D16674C0()
{
  NSObject *v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  sub_1D147C988();
  sub_1D1469768(&dword_1D1413000, v0, (uint64_t)v0, "Failed copy photo/video URL: %@, error: %@", v1);
  sub_1D143BF48();
}

void sub_1D1667528()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  sub_1D147C9D4();
  objc_msgSend(v0, "uuid");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C9A0();
  sub_1D147C948(&dword_1D1413000, v2, v3, "Failed to create export request for asset: %@, error: %@", v4, v5, v6, v7, v8);

  sub_1D147C95C();
}

void sub_1D16675A4()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  sub_1D147C9D4();
  objc_msgSend(v0, "uuid");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C9A0();
  sub_1D147C948(&dword_1D1413000, v2, v3, "Failed fetch for resources to share for asset: %@, error: %@", v4, v5, v6, v7, v8);

  sub_1D147C95C();
}

void sub_1D1667620()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  sub_1D147C9D4();
  objc_msgSend(*(id *)(v0 + 48), "uuid");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C9A0();
  sub_1D147C948(&dword_1D1413000, v2, v3, "Failed export for asset: %@, error: %@", v4, v5, v6, v7, v8);

  sub_1D147C95C();
}

void sub_1D16676A0()
{
  NSObject *v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  sub_1D147C988();
  sub_1D1469768(&dword_1D1413000, v0, (uint64_t)v0, "Failed copy of file URLs: %@, error: %@", v1);
  sub_1D143BF48();
}

void sub_1D1667708()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "Missing transfer map for message %@", v2);
  sub_1D143BF48();
}

void sub_1D166776C()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "Unable to mark message %@ as completed when it should be", v2);
  sub_1D143BF48();
}

void sub_1D16677D0(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "uuid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, a2, v4, "Unexpected number of curated assets for moment share: %{public}@", v5);

  sub_1D14357B4();
}

void sub_1D1667850(void *a1, NSObject *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint8_t v6[24];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "message");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "guid");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, a2, v5, "Target count requested before a moment share has been fetched for message %@", v6);

  sub_1D147C95C();
}

void sub_1D16678E4(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "uuid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, a2, v4, "Unknown fetch type for moment share %@. This may lead to issues ingesting the moment share", v5);

  sub_1D14357B4();
}

void sub_1D1667964(void *a1)
{
  void *v1;
  int v2;
  void *v3;
  __int16 v4;
  const char *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "uniqueID");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = 138412546;
  v3 = v1;
  v4 = 2080;
  v5 = "_pendingCodesToDevicesForApproval";
  _os_log_error_impl(&dword_1D1413000, MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", (uint8_t *)&v2, 0x16u);

}

void sub_1D1667A10(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "Failed to get the actionIdentifier from the Notification", v1, 2u);
}

void sub_1D1667A50(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "description");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = 138412290;
  v5 = v3;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Updating SafetyMonitor on Notification response failed with error %@", (uint8_t *)&v4, 0xCu);

}

void sub_1D1667AE8(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl(&dword_1D1413000, log, OS_LOG_TYPE_DEBUG, "Ignoring message timeout because it was successfully sent on another service", v1, 2u);
}

void sub_1D1667B28(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a2, a3, "Message not found to update SyndicationAction: %@", a5, a6, a7, a8, 2u);
}

void sub_1D1667B90(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a2, a3, "Error processing SyndicationAction: %@", a5, a6, a7, a8, 2u);
}

void sub_1D1667BF8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D149FE8C(&dword_1D1413000, a2, a3, "Key value store will update: %@", a5, a6, a7, a8, 2u);
}

void sub_1D1667C60(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D149FE8C(&dword_1D1413000, a2, a3, "Key value store did update value: %@", a5, a6, a7, a8, 2u);
}

void sub_1D1667CC8()
{
  uint64_t v0;
  os_log_t v1;

  sub_1D147C988();
  sub_1D14A5668(&dword_1D1413000, v0, v1, "Temporary file URL was nil for transferName (%@) and transfer: %@");
  sub_1D143BF48();
}

void sub_1D1667D28()
{
  uint64_t v0;
  os_log_t v1;

  sub_1D147C988();
  sub_1D14A5668(&dword_1D1413000, v0, v1, "Failing tap to download for transferID %@ due to default com.apple.imessage FailTapToDownload transfer %@");
  sub_1D143BF48();
}

void sub_1D1667D88()
{
  uint64_t v0;
  os_log_t v1;

  sub_1D147C988();
  sub_1D14A5668(&dword_1D1413000, v0, v1, "Receive file URL was nil for transferName (%@) and transfer: %@");
  sub_1D143BF48();
}

void sub_1D1667DE8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Failed to respond to Family invite payloadURL == nil", a5, a6, a7, a8, 0);
}

void sub_1D1667E1C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Failed to respond to Family invite inviteUrl == nil", a5, a6, a7, a8, 0);
}

void sub_1D1667E50(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a2, a3, "Attachments - Failed to update transfer preview size for %@, transfer not found", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D1667EB4()
{
  uint64_t v0;
  os_log_t v1;

  sub_1D147C988();
  sub_1D14A5668(&dword_1D1413000, v0, v1, "Failed to consume sandbox token, %@ token:%@");
  sub_1D143BF48();
}

void sub_1D1667F14()
{
  uint64_t v0;
  os_log_t v1;

  sub_1D147C988();
  sub_1D14A5668(&dword_1D1413000, v0, v1, "Failed to release sandbox token, %@ token:%@");
  sub_1D143BF48();
}

void sub_1D1667F74(uint8_t *a1, _BYTE *a2, NSObject *a3)
{
  *a1 = 0;
  *a2 = 0;
  sub_1D14AD2CC(&dword_1D1413000, (int)a2, a3, "Writing image plugin payload attachment to disk.", a1);
}

void sub_1D1667FA4(uint8_t *a1, _BYTE *a2, NSObject *a3)
{
  *a1 = 0;
  *a2 = 0;
  sub_1D14AD2CC(&dword_1D1413000, (int)a2, a3, "Writing other plugin payload attachment to disk.", a1);
}

void sub_1D1667FD4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a1, a3, "%s was given no transfer guids", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D1668044(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(a1 + 32);
  v4 = 138412546;
  v5 = v3;
  v6 = 2112;
  v7 = a2;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "Error fetching off grid subscription validation tokens for handle handleID: %@ Error: %@", (uint8_t *)&v4, 0x16u);
}

void sub_1D16680CC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Cache miss for subscription validation token for handleID %@", (uint8_t *)&v2, 0xCu);
}

void sub_1D1668140(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "Received an unknown validity response, ignoring.", v1, 2u);
}

void sub_1D1668180(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a1, a3, "%s: Bailing due to empty handle set. This could mean we attempted to send a notice to ourselves.", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D16681F0(void *a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  objc_msgSend(v2, "numberWithUnsignedInteger:", sub_1D14B7108(a1, a2));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(v3 + 2024), "numberWithUnsignedInteger:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D14B70EC();
  sub_1D14B709C(&dword_1D1413000, v7, v8, "%s: Bailing because collaboration membership (%@) exceeds the fanout threshold (%@).", v9, v10, v11, v12, 2u);

  sub_1D147C9B8();
}

void sub_1D16682A0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Unable to create noticeMessage to send, aborting.", a5, a6, a7, a8, 0);
}

void sub_1D16682D4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a2, a3, "Failed to send Collaboration Notice with error: %@", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D1668338(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a1, a3, "%s: Bailing due to empty handle set. This could mean we attempted to send a notice to ourselves.", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D16683A8(void *a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  objc_msgSend(v2, "numberWithUnsignedInteger:", sub_1D14B7108(a1, a2));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(v3 + 2024), "numberWithUnsignedInteger:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D14B70EC();
  sub_1D14B709C(&dword_1D1413000, v7, v8, "%s: Bailing because collaboration membership (%@) exceeds the fanout threshold (%@).", v9, v10, v11, v12, 2u);

  sub_1D147C9B8();
}

void sub_1D1668458(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Unable to create noticeClearMessage to send, aborting.", a5, a6, a7, a8, 0);
}

void sub_1D166848C(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", objc_msgSend(a1, "version"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D14B70D4();
  sub_1D14B709C(&dword_1D1413000, v2, v3, "%s Received notice version: %@ is newer than expected version: %@. Dropping notice.", v4, v5, v6, v7, 2u);

  sub_1D14B7118();
}

void sub_1D1668534()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D14B70B0();
  sub_1D14B70C4(&dword_1D1413000, v0, v1, "%s Blastdoor encountered an error unpacking Clear Collaboration Notice, error: %@", v2, v3, v4, v5, 2u);
  sub_1D143BF48();
}

void sub_1D16685A0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a1, a3, "%s: Bailing receive notice. Zero length fromHandle. Dropping message", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D1668610()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D14B70B0();
  sub_1D14B70C4(&dword_1D1413000, v0, v1, "%s: Bailing receive notice for highlightEvent generated by self (%@). Dropping message", v2, v3, v4, v5, 2u);
  sub_1D143BF48();
}

void sub_1D166867C(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(a1, "version"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D14B70D4();
  sub_1D14B709C(&dword_1D1413000, v2, v3, "%s Received notice version: %@ is newer than expected version: %@. Dropping notice.", v4, v5, v6, v7, 2u);

  sub_1D14B7118();
}

void sub_1D1668724()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D14B70B0();
  sub_1D14B70C4(&dword_1D1413000, v0, v1, "%s Blastdoor encountered an error unpacking Collaboration Notice, error: %@", v2, v3, v4, v5, 2u);
  sub_1D143BF48();
}

void sub_1D1668790(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a1, a3, "%s: Bailing receive notice. Zero length fromHandle. Dropping message", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D1668800(uint64_t a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = 138412290;
  v5 = v3;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Invalid actionType for incomingMessage: %@. Dropping message", (uint8_t *)&v4, 0xCu);

  sub_1D14B7124();
}

void sub_1D16688A0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D14B70B0();
  sub_1D14B70C4(&dword_1D1413000, v0, v1, "%s Blastdoor encountered an error unpacking Collaboration Notice Action, error: %@", v2, v3, v4, v5, 2u);
  sub_1D143BF48();
}

void sub_1D166890C(void *a1, NSObject *a2)
{
  void *v3;
  int v4[6];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(a1, "eventType"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4[0] = 136315394;
  sub_1D14B70B0();
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "%s: Bailing receive notice. Could not find an expected event class for type: %@", (uint8_t *)v4, 0x16u);

  sub_1D14B7124();
}

void sub_1D16689B8()
{
  uint64_t v0;
  os_log_t v1;
  int v2[6];
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2[0] = 136315650;
  sub_1D14B70D4();
  v3 = v0;
  _os_log_error_impl(&dword_1D1413000, v1, OS_LOG_TYPE_ERROR, "%s: Bailing receive notice. Could not unarchive event with expected type '%@' error: %@", (uint8_t *)v2, 0x20u);
  sub_1D14B7124();
}

void sub_1D1668A38(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SharedWithYouLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("IMDCollaborationNoticeDispatcher.m"), 34, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_1D1668AB4()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class get_SWHighlightEventAllowListClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMDCollaborationNoticeDispatcher.m"), 35, CFSTR("Unable to find class %s"), "_SWHighlightEventAllowList");

  __break(1u);
}

void sub_1D1668B2C(void *a1, void *a2, NSObject *a3)
{
  void *v5;
  void *v6;
  int v7;
  void *v8;
  __int16 v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "service");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a2, "actualService");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412546;
  v8 = v5;
  v9 = 2112;
  v10 = v6;
  _os_log_debug_impl(&dword_1D1413000, a3, OS_LOG_TYPE_DEBUG, "Protobuf4 will override messages' service (current %@, override %@)", (uint8_t *)&v7, 0x16u);

}

void sub_1D1668BF0(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "FAFetchFamilyCircleRequest returned no Family circle, but there was no specific error.", v1, 2u);
}

void sub_1D1668C30()
{
  os_log_t v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  _os_log_error_impl(&dword_1D1413000, v0, OS_LOG_TYPE_ERROR, "FAFetchFamilyCircleRequest failed %@", v1, 0xCu);
}

void sub_1D1668CA0(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  objc_msgSend(a1, "fromIdentifier");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D14C23C4(&dword_1D1413000, v2, v3, "(nil SCI) Message is not from known family member, received from: %@", v4, v5, v6, v7, v8);

  sub_1D14357B4();
}

void sub_1D1668D1C(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  objc_msgSend(a1, "fromIdentifier");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D14C23C4(&dword_1D1413000, v2, v3, "Empty normalizedFamilyMemberHandles. Dropping Family message received from: %@", v4, v5, v6, v7, v8);

  sub_1D14357B4();
}

void sub_1D1668D98(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  objc_msgSend(*(id *)(a1 + 48), "fromIdentifier");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D14C23C4(&dword_1D1413000, v2, v3, "(with SCI lookup) Message is not from known family member, received from: %@", v4, v5, v6, v7, v8);

  sub_1D14357B4();
}

void sub_1D1668E18(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *FamilyCircleLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("IMFamilySenderMessageProcessingPipelineComponent.m"), 31, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_1D1668E94()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFAFetchFamilyCircleRequestClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMFamilySenderMessageProcessingPipelineComponent.m"), 32, CFSTR("Unable to find class %s"), "FAFetchFamilyCircleRequest");

  __break(1u);
}

void sub_1D1668F0C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error fetching local user availability for contact. Error: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1668F6C(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint8_t v3[16];

  *(_WORD *)v3 = 0;
  sub_1D14D2E4C(&dword_1D1413000, a1, a3, "Chat does not have a last addressed SIM ID", v3);
}

void sub_1D1668FA4(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint8_t v3[16];

  *(_WORD *)v3 = 0;
  sub_1D14D2E4C(&dword_1D1413000, a1, a3, "DND state is nil", v3);
}

void sub_1D1668FDC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error querying DND state: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166903C(uint8_t *a1, _BYTE *a2, NSObject *a3)
{
  *a1 = 0;
  *a2 = 0;
  sub_1D14D2E4C(&dword_1D1413000, a3, (uint64_t)a3, "Chunk contained no valid message guids, stopping chunking.", a1);
}

void sub_1D1669070()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error retrieving allowed auto reply audience. Error: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D16690D0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error retrieving allowed custom auto reply message. Error: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669130(void *a1, NSObject *a2)
{
  void *v3;
  uint8_t v4[24];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "chatIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Missing last sent date for chatID %@", v4, 0xCu);

}

void sub_1D16691C4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "Could not find chat.", v1, 2u);
}

void sub_1D1669204()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D14D7564();
  sub_1D149FE8C(&dword_1D1413000, v0, v1, "LQM-WRM CoreAnalytics is5GInterfaceExpensive is %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166927C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D14D7564();
  sub_1D149FE8C(&dword_1D1413000, v0, v1, "LQM-WRM CoreAnalytics doesWRMRecommendDisablingLQM is %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D16692F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D14D7564();
  sub_1D149FE8C(&dword_1D1413000, v0, v1, "LQM-WRM CoreAnalytics networkPreference is %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166936C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D149FE8C(&dword_1D1413000, a1, a3, "LQM-WRM CoreAnalytics isDynamicLQMDisabledByWRMCB is %@", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D16693DC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D14D7564();
  sub_1D149FE8C(&dword_1D1413000, v0, v1, "LQM-WRM CoreAnalytics isSender is %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669454(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D149FE8C(&dword_1D1413000, a1, a3, "LQM-WRM CoreAnalytics isLQMSwitchEnabled is %@", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D16694C4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "Unable to create BlastDoorSyndicationAction", v1, 2u);
}

void sub_1D1669504(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_fault_impl(&dword_1D1413000, log, OS_LOG_TYPE_FAULT, "Failed type check! {key: %@, class: %@}", (uint8_t *)&v3, 0x16u);
}

void sub_1D1669588()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Failed fetching new personal nickname: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D16695E8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Received a name only update but no information were provided", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D1669614()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error sending nickname over IDS: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669674(uint8_t *a1, void *a2, _QWORD *a3, NSObject *a4)
{
  void *v7;

  objc_msgSend(a2, "ID");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_error_impl(&dword_1D1413000, a4, OS_LOG_TYPE_ERROR, "Could not get IDS recipient ID from handle: %@", a1, 0xCu);

}

void sub_1D16696E8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a2, a3, "Could not get my IDS ID from handle: %@", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D1669750()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Timed out while waiting for IDS callback(s)", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166977C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Don't have any nickname info to send, bailing.", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D16697A8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a1, a3, "%s: Bailing receive notice. Zero length fromHandle. Dropping message", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D1669818()
{
  uint64_t v0;
  os_log_t v1;

  sub_1D147C988();
  sub_1D14A5668(&dword_1D1413000, v0, v1, "Received a personal nickname update, but it was not from one of our own devices From: %@, ID:%@");
  sub_1D143BF48();
}

void sub_1D1669878()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Tried to mark nil handles as transitioned", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D16698A4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Tried to mark nil handles as active", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D16698D0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Tried to mark nil handles as ignored", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D16698FC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Failed to delete watch wallpaper with error: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166995C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Failed to delete wallpaper with error: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D16699BC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Failed to delete avatar with error: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669A1C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "_updateNicknameInHandledMap called with nothing to update for %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669A7C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "No handle ID provided for nickname %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669ADC(void *a1, NSObject *a2)
{
  void *v3;
  uint8_t v4[24];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "handle");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "No nickname to archive for handle ID: %@", v4, 0xCu);

}

void sub_1D1669B70()
{
  os_log_t v0;
  uint8_t v1[16];

  sub_1D144ED70();
  _os_log_fault_impl(&dword_1D1413000, v0, OS_LOG_TYPE_FAULT, "Nickname data loading has previously caused imagent to crash, deleting all handled and pending nickname data to allow imagent to properly handle future nickname changes.", v1, 2u);
  sub_1D144ED68();
}

void sub_1D1669BA8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error while loading personal nickname: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669C08()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error writing personal nickname data to KVStore %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669C68()
{
  uint64_t v0;
  os_log_t v1;

  sub_1D147C988();
  sub_1D14A5668(&dword_1D1413000, v0, v1, "Error writing data to KVStore %@ %@");
  sub_1D143BF48();
}

void sub_1D1669CC8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error writing data to kvStore %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669D28()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error unarchiving storedPersonalNickname %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669D88()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error reading pendingNickname %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669DE8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error deleting data from KVStore %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669E48()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error reading nickNameDecryptionKey %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669EA8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error reading wallpaperTag %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669F08()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error reading low res wallpaperTag %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669F68()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error reading wallpaper metadata Tag %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D1669FC8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error reading storedPersonalNickname %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166A028()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error unarching pending nickname upload %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166A088()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error reading nickname for pending upload %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166A0E8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Error deleting nickname avatar from path: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166A148()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "SyndicationAction is nil when attempting to update a message", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166A174()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "MessageGUID is nil when attempting to update a message", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166A1A0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "MessageItem is nil when attempting to update a message", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166A1CC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "SyndicationRange is nil when attempting to update a message", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166A1F8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Scheduled message was marked as failed but didn't update the scheduleState: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166A258()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "IMMessageItem was not created for %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166A2B8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "IMDMessageRecordRef was not created for %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166A318()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Failed to get a chat for message to be marked as unread: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166A378()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Failed to find message to mark as unread for GUID:%@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166A3D8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Failed to store edited message: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166A438()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Incomplete sticker user info for file transfer guid: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166A498()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Nil syndication date parameter", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166A4C4(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  int v5;
  void *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "account");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = 138412290;
  v6 = v3;
  sub_1D147C93C(&dword_1D1413000, a2, v4, "Debug info, account: %@", (uint8_t *)&v5);

  sub_1D14357B4();
}

void sub_1D166A548(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  int v5;
  void *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "serviceName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = 138412290;
  v6 = v3;
  sub_1D147C93C(&dword_1D1413000, a2, v4, "Debug info, service: %@", (uint8_t *)&v5);

  sub_1D14357B4();
}

void sub_1D166A5CC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "accountID is nil", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166A5F8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Unable to update chat properties. Invalid type provided for plist.", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166A624(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = 138412290;
  v4 = a1;
  sub_1D147C93C(&dword_1D1413000, a2, a3, "Invalid businessID: %@", (uint8_t *)&v3);
}

void sub_1D166A690()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Setting associated bizID is not supported", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166A6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D151B7C4();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, 2u);
  sub_1D143BF48();
}

void sub_1D166A73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D151B7C4();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, 2u);
  sub_1D143BF48();
}

void sub_1D166A7BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D151B7C4();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, 2u);
  sub_1D143BF48();
}

void sub_1D166A83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D151B7C4();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, 2u);
  sub_1D143BF48();
}

void sub_1D166A8BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D151B7C4();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, 2u);
  sub_1D143BF48();
}

void sub_1D166A93C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "Should never have nil modification date with non-default autoDonationBehavior", v1, 2u);
}

void sub_1D166A97C(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Expected to blocklist chat but groupID does not exist: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1D166A9F0(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v2, 0xCu);
}

void sub_1D166AA64(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "Not marking attachment path for cachedelete, last component is Attachments", v1, 2u);
}

void sub_1D166AAA4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Not marking attachment path for cachedelete, not in attachment store: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166AB04()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Could not find a matching attachment record for temporary transferGUID: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166AB64()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Could not find a matching message record for temporary transferGUID: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166ABC4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Could not find IMMessageItem from temporary transferGUID %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166AC24(uint64_t a1, void *a2, NSObject *a3)
{
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = 138412546;
  v5 = a1;
  v6 = 2112;
  v7 = objc_msgSend(a2, "fileTransferGUIDs");
  _os_log_error_impl(&dword_1D1413000, a3, OS_LOG_TYPE_ERROR, "We may have failed to update a message (guid %@) in the DB, and orphaned its attachments whose GUIDs we just updated %@", (uint8_t *)&v4, 0x16u);
  sub_1D14357B4();
}

void sub_1D166ACBC(uint64_t a1, NSObject *a2)
{
  uint8_t v3[24];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  objc_opt_class();
  sub_1D147C96C();
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "updateTemporaryTransferGUIDsOn got something thats not a IMMessageItem: %@", v3, 0xCu);
  sub_1D14357B4();
}

void sub_1D166AD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1D1548E94();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
  sub_1D143BF48();
}

void sub_1D166ADB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1D1548E94();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
  sub_1D143BF48();
}

void sub_1D166AE38(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Failed to send reachability response to %@", (uint8_t *)&v2, 0xCu);
  sub_1D143BF48();
}

void sub_1D166AEA8(uint8_t *buf, _BYTE *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "Failed to create IMMessageItem for scheduled message from recordRef.", buf, 2u);
}

void sub_1D166AEE4(NSObject *a1)
{
  void *v2;
  int v3;
  const char *v4;
  __int16 v5;
  const char *v6;
  __int16 v7;
  int v8;
  __int16 v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", &stru_1E92346B0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = 136315906;
  v4 = "chat";
  v5 = 2080;
  v6 = "-[IMDChatStore deleteChat:]";
  v7 = 1024;
  v8 = 747;
  v9 = 2112;
  v10 = v2;
  _os_log_error_impl(&dword_1D1413000, a1, OS_LOG_TYPE_ERROR, "ASSERTION FAILED: %s is unexpectedly nil in \"%s\" at line %d [%@]", (uint8_t *)&v3, 0x26u);

}

void sub_1D166AFC0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Message is empty", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166AFEC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Could not find a session for SMS service", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B018()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "sendStewieMessage: Service: %lld is not supported", v2);
  sub_1D143BF48();
}

void sub_1D166B07C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Emergency message is empty", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B0A8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Roadside summary is empty", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B0D4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "sendQuestionnaire: cannot accept nil questionnaireDictionary", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B100()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Sending questionnaire: could not find a session for SMS service", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B12C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Sending questionnaire: ConversationID is missing in the passed dictionary", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B158()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Sending questionnaire: Unable to derive chatIdentifier", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B184()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[12];
  __int16 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  v3 = 2112;
  v4 = v0;
  _os_log_error_impl(&dword_1D1413000, v1, OS_LOG_TYPE_ERROR, "Start emergency message reported error: %@, message: %@", v2, 0x16u);
  sub_1D143BF48();
}

void sub_1D166B200()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "No Stewie conversation ID provided", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B22C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Sending questionnaire: ProviderID is missing in the passed dictionary", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B258()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "sendQuestionnaire: Service: %lld is not supported", v2);
  sub_1D143BF48();
}

void sub_1D166B2BC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Stop sharing: could not find a session for SMS service", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B2E8(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "localizedDescription");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, a2, v4, "Stewie emergency stop sharing reported error: %@", v5);

  sub_1D14357B4();
}

void sub_1D166B36C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Receiving: could not find a session for SMS service", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B398()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Message received is empty", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B3C4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Chat identifier is missing", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B3F0()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "Receiving: Unsupported service type: %lld", v2);
  sub_1D143BF48();
}

void sub_1D166B454()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Location update: could not find a session for SMS service", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B480()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Location update: Unable to derive chatIdentifier", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B4AC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Location update: ProviderID is missing in the passed dictionary", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B4D8()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "locationUpdateDelivered: Service: %lld is not supported", v2);
  sub_1D143BF48();
}

void sub_1D166B53C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "openStewieChatWithContext: ProviderID is missing in the passed dictionary", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B568()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "openStewieChatWithContext: Service: %lld is not supported", v2);
  sub_1D143BF48();
}

void sub_1D166B5CC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "No providers are available right now", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B5F8()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, v0, v1, "fetchRoadsideProvidersWithContext failed with error: %@", v2);
  sub_1D143BF48();
}

void sub_1D166B65C(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "chatIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D147C93C(&dword_1D1413000, a2, v4, "generateStopTranscriptSharingStatusItemForChat: called for unsupported chat identifier: %@", v5);

  sub_1D14357B4();
}

void sub_1D166B6E0(uint64_t a1, NSObject *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint8_t v6[24];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  objc_opt_class();
  sub_1D147C96C();
  v4 = v3;
  sub_1D147C93C(&dword_1D1413000, a2, v5, "Dropping Stewie message, class not supported: %@", v6);

  sub_1D14357B4();
}

void sub_1D166B764(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1D1413000, log, OS_LOG_TYPE_ERROR, "Attempted to initialize FMLSession in a non-Messages process, or when lockdown is enabled. This check is in place to prevent FindMyLocate from crashing your process with a fatalError if you do not have the required entitlement.", v1, 2u);
}

void sub_1D166B7A4(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "FindMyLocateSession startUpdatingFriendsWithCompletion failed with an error. This breaks our ability to get FindMy friendship updates throughout the app. If you see this error, please file a radar to the FindMy team. Error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1D166B818(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "SyndicationAction is nil when attempting to update IMDChat: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1D166B88C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Could not decode messageGUID from associatedMessageGUID", a5, a6, a7, a8, 0);
  sub_1D144ED68();
}

void sub_1D166B8BC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Associated message guid does not reference a specific part of a multi-part message", a5, a6, a7, a8, 0);
  sub_1D144ED68();
}

void sub_1D166B8EC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Could not find message part matching associatedMessageGUID with no part index, message part possibly retracted", a5, a6, a7, a8, 0);
  sub_1D144ED68();
}

void sub_1D166B91C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Message does not contain a valid edited message guid", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166B948()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Unable to apply edits, cannot find message matching GUID=%@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166B9A8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Unable to find chats for messge with GUID=%@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166BA08()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Edit command contains an unsupported editType=%ld", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166BA68()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Exceeded number of permitted edits for this message, rejecting edit", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166BA94()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Edit contains an empty string, rejecting edit", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166BAC0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Edited message contains a new file transfer GUID. Rejected edit.", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166BAEC()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[12];
  __int16 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  v3 = 2112;
  v4 = v0;
  _os_log_error_impl(&dword_1D1413000, v1, OS_LOG_TYPE_ERROR, "Unable to apply edits, message edit is older than previously processed edit. ThisEdit: %@, DateOfLastEdit: %@", v2, 0x16u);
  sub_1D143BF48();
}

void sub_1D166BB68()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Received an edit message command. After processing, command full message body is not equal to persisted full message body.", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166BB94()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D156F8EC();
  sub_1D14B70C4(&dword_1D1413000, v0, v1, "%s Invalid notice: %@", v2, v3, v4, v5, 2u);
  sub_1D143BF48();
}

void sub_1D166BC04()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D156F8EC();
  sub_1D14B70C4(&dword_1D1413000, v0, v1, "%s Invalid url: %@", v2, v3, v4, v5, 2u);
  sub_1D143BF48();
}

void sub_1D166BC74()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D156F8EC();
  sub_1D14B70C4(&dword_1D1413000, v0, v1, "%s Invalid notice: %@", v2, v3, v4, v5, 2u);
  sub_1D143BF48();
}

void sub_1D166BCE4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D156F8EC();
  sub_1D14B70C4(&dword_1D1413000, v0, v1, "%s Invalid url: %@", v2, v3, v4, v5, 2u);
  sub_1D143BF48();
}

void sub_1D166BD54(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Error persisting noticeEventHistory, error: %@", (uint8_t *)&v2, 0xCu);
  sub_1D143BF48();
}

void sub_1D166BDC4()
{
  int v0;
  const __CFString *v1;
  __int16 v2;
  const char *v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v0 = 138412546;
  v1 = CFSTR("mT");
  v2 = 2080;
  v3 = "dict";
  _os_log_error_impl(&dword_1D1413000, MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", (uint8_t *)&v0, 0x16u);
}

void sub_1D166BE5C(uint64_t a1, void *a2, NSObject *a3)
{
  void *v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "service");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = 138412546;
  v7 = a1;
  v8 = 2112;
  v9 = v5;
  _os_log_debug_impl(&dword_1D1413000, a3, OS_LOG_TYPE_DEBUG, "Parent chat not found for parentChatID %@, service %@", (uint8_t *)&v6, 0x16u);

}

void sub_1D166BF0C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Send Message to particular destinations called on the wrong session", a5, a6, a7, a8, 0);
}

void sub_1D166BF40(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Received sendSyndicationAction!.", a5, a6, a7, a8, 0);
}

void sub_1D166BF74()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Could not find message to update with message editing unsupported handleIDs. GUID: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166BFD4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Could not find message to update with message editing error. GUID: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166C034()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Could not find message to update after succesfully sending edit of message. GUID: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166C094()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Message had previous failed deliveries for message part edits. This edit delivery was successful. Clearing previous failed part delivery. GUID: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166C0F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D146F354(&dword_1D1413000, v0, v1, "Failed to find chat for sent SyndicationAction: %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166C154(void *a1)
{

  objc_end_catch();
}

void sub_1D166C170(void *a1, uint64_t a2, NSObject *a3)
{
  uint8_t v5[14];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "count");
  sub_1D15BCA1C();
  v6 = a2;
  _os_log_debug_impl(&dword_1D1413000, a3, OS_LOG_TYPE_DEBUG, "Caching %lld listeners for guid %@", v5, 0x16u);
}

void sub_1D166C1FC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl(&dword_1D1413000, a2, OS_LOG_TYPE_DEBUG, "No cached listeners for GUID %@", (uint8_t *)&v2, 0xCu);
}

void sub_1D166C270()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[14];
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  sub_1D15BCA1C();
  v3 = v0;
  _os_log_fault_impl(&dword_1D1413000, v1, OS_LOG_TYPE_FAULT, "Failed type check! {key: %@, class: %@}", v2, 0x16u);
}

void sub_1D166C2E8(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "guid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = 138412290;
  v5 = v3;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Not pregenerating preview, no filePath for transfer %@", (uint8_t *)&v4, 0xCu);

}

void sub_1D166C380(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  objc_msgSend(a1, "guidString");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D14C23C4(&dword_1D1413000, v2, v3, "Failed to delete notice (%@), skipping broadcast and reflection.", v4, v5, v6, v7, v8);

  sub_1D14357B4();
}

void sub_1D166C3FC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Received invalid notice type, dropping notice.", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166C428()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Received a notice with a nil URL, dropping notice.", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166C454()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Received a notice for an untracked URL (may not have received the highlight yet), dropping notice.", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166C480()
{
  os_log_t v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  _os_log_error_impl(&dword_1D1413000, v0, OS_LOG_TYPE_ERROR, "Received a notice for a URL without a tracked highlight, dropping notice. error: %@", v1, 0xCu);
  sub_1D143BF48();
}

void sub_1D166C4EC()
{
  uint64_t v0;
  os_log_t v1;

  sub_1D147C96C();
  sub_1D14A5668(&dword_1D1413000, v0, v1, "Unable to get a bundle identifier from appLink: %@ for URL: %@");
  sub_1D143BF48();
}

void sub_1D166C55C(uint64_t a1)
{
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = *(_QWORD *)(a1 + 32);
  sub_1D15CBD8C();
  sub_1D14A5668(&dword_1D1413000, v1, v2, "Unable to get app link for url: %@, error: %@", (_QWORD)v3, DWORD2(v3));
  sub_1D143BF48();
}

void sub_1D166C5C8(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  objc_msgSend(a1, "collaborationId");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D14C23C4(&dword_1D1413000, v2, v3, "Either the highlight or highlight URL for collaborationId %@ was nil", v4, v5, v6, v7, v8);

  sub_1D14357B4();
}

void sub_1D166C640(void *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "collaborationId");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = 138412546;
  v7 = v5;
  v8 = 2112;
  v9 = a2;
  _os_log_error_impl(&dword_1D1413000, a3, OS_LOG_TYPE_ERROR, "Got error when fetching highlight for collaborationId: %@, error: %@", (uint8_t *)&v6, 0x16u);

}

void sub_1D166C6EC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "updatedHighlight after fetching attributions for highlight was nil", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166C718(uint64_t a1)
{
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = a1;
  sub_1D15CBD8C();
  sub_1D14A5668(&dword_1D1413000, v1, v2, "attribution:%@ does not have a conversationIdentifier:%@", (_QWORD)v3, DWORD2(v3));
  sub_1D143BF48();
}

void sub_1D166C780()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D144ED70();
  sub_1D143FFE8(&dword_1D1413000, v0, v1, "Received an empty noticeURL, unable to map to chatGUIDs.", v2, v3, v4, v5, v6);
  sub_1D144ED68();
}

void sub_1D166C7AC(uint64_t a1)
{
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = *(_QWORD *)(a1 + 32);
  sub_1D15CBD8C();
  sub_1D14A5668(&dword_1D1413000, v1, v2, "Received an error trying to get highlight for url: %@, error: %@", (_QWORD)v3, DWORD2(v3));
  sub_1D143BF48();
}

void sub_1D166C818(uint64_t a1)
{
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = a1;
  sub_1D15CBD8C();
  sub_1D14A5668(&dword_1D1413000, v1, v2, "Error while getting metadata: %@ error: %@", (_QWORD)v3, DWORD2(v3));
  sub_1D143BF48();
}

void sub_1D166C880(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  objc_msgSend(*(id *)(a1 + 32), "URL");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D147C96C();
  sub_1D14C23C4(&dword_1D1413000, v2, v3, "Could not get bundle identifier for URL: %@", v4, v5, v6, v7, v8);

  sub_1D14357B4();
}

void sub_1D166C900(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Failed to respond to ATB request payloadURL == nil", a5, a6, a7, a8, 0);
}

void sub_1D166C934(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Failed to respond to ATB request requestID == nil", a5, a6, a7, a8, 0);
}

void sub_1D166C968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1D1548E94();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
}

void sub_1D166C9E8()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getILMessageFilterCapabilitiesQueryRequestClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMDFilteringController.m"), 29, CFSTR("Unable to find class %s"), "ILMessageFilterCapabilitiesQueryRequest");

  __break(1u);
}

void sub_1D166CA60(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *IdentityLookupLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("IMDFilteringController.m"), 25, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_1D166CADC()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getILMessageFilterClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMDFilteringController.m"), 27, CFSTR("Unable to find class %s"), "ILMessageFilter");

  __break(1u);
}

void sub_1D166CB54()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getILMessageFilterQueryRequestClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMDFilteringController.m"), 26, CFSTR("Unable to find class %s"), "ILMessageFilterQueryRequest");

  __break(1u);
}

void sub_1D166CBCC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D143FFE8(&dword_1D1413000, a1, a3, "Could not find a session for iMessage service", a5, a6, a7, a8, 0);
}

void sub_1D166CC00(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = 138412290;
  v4 = a1;
  sub_1D147C93C(&dword_1D1413000, a2, a3, "Couldn't upgrade 1:1 chat to Group chat for conversation %@", (uint8_t *)&v3);
  sub_1D143BF48();
}

void sub_1D166CC68(void *a1, NSObject *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  int v6;
  void *v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "groupUUID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "UUIDString");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = 138412290;
  v7 = v4;
  sub_1D147C93C(&dword_1D1413000, a2, v5, "Couldn't find a chat for groupID: (%@)", (uint8_t *)&v6);

}

void sub_1D166CD10(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = 138412290;
  v4 = a1;
  sub_1D147C93C(&dword_1D1413000, a2, a3, "Failed to find/create chat for conversation %@", (uint8_t *)&v3);
  sub_1D143BF48();
}

void sub_1D166CD78(void *a1, NSObject *a2)
{
  _DWORD v3[2];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[0] = 67109120;
  v3[1] = objc_msgSend(a1, "style");
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Can't upgrade from 1:1 chat to Group chat -- Invalid chat style: %c", (uint8_t *)v3, 8u);
  sub_1D143BF48();
}

void sub_1D166CDFC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D149FE8C(&dword_1D1413000, v0, v1, "writeAccountDefaults - Removing login ID %@", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166CE5C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D149FE8C(&dword_1D1413000, v0, v1, "writeAccountDefaults - Setting %@ as the login ID", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166CEBC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1D147C96C();
  sub_1D149FE8C(&dword_1D1413000, v0, v1, "writeAccountDefaults - Started with %@ as the login ID", v2, v3, v4, v5, v6);
  sub_1D143BF48();
}

void sub_1D166CF1C()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[12];
  __int16 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  sub_1D147C96C();
  v3 = 2112;
  v4 = v0;
  _os_log_debug_impl(&dword_1D1413000, v1, OS_LOG_TYPE_DEBUG, "%@ - write account defaults: %@", v2, 0x16u);
  sub_1D143BF48();
}

void sub_1D166CF98(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a2, a3, "** Received account removed for account: %@, but we can't find an account for it", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D166CFFC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a2, a3, "** Received account enabled for account: %@, but we can't find an account for it", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D166D060(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D146F354(&dword_1D1413000, a2, a3, "** Received account disabled for account: %@, but we can't find an account for it", a5, a6, a7, a8, 2u);
  sub_1D143BF48();
}

void sub_1D166D0C4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D15F3200(&dword_1D1413000, a1, a3, "Starting cleanup timer", a5, a6, a7, a8, 0);
}

void sub_1D166D0F8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D15F3200(&dword_1D1413000, a1, a3, "Stopping cleanup timer", a5, a6, a7, a8, 0);
}

void sub_1D166D12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1D1548E94();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
  sub_1D143BF48();
}

void sub_1D166D1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1D1548E94();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
  sub_1D143BF48();
}

void sub_1D166D22C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1D1548E94();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
  sub_1D143BF48();
}

void sub_1D166D2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1D1548E94();
  sub_1D14B70C4(&dword_1D1413000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
  sub_1D143BF48();
}

void sub_1D166D32C(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D1413000, a2, OS_LOG_TYPE_ERROR, "Error taking data from typing indicator icon image: %@", (uint8_t *)&v2, 0xCu);
}

uint64_t sub_1D166D3A0()
{
  return MEMORY[0x1E0C905A0]();
}

uint64_t sub_1D166D3AC()
{
  return MEMORY[0x1E0C905C0]();
}

uint64_t sub_1D166D3B8()
{
  return MEMORY[0x1E0C905E0]();
}

uint64_t sub_1D166D3C4()
{
  return MEMORY[0x1E0C90640]();
}

uint64_t sub_1D166D3D0()
{
  return MEMORY[0x1E0C90650]();
}

uint64_t sub_1D166D3DC()
{
  return MEMORY[0x1E0C906E0]();
}

uint64_t sub_1D166D3E8()
{
  return MEMORY[0x1E0C906E8]();
}

uint64_t sub_1D166D3F4()
{
  return MEMORY[0x1E0C90710]();
}

uint64_t sub_1D166D400()
{
  return MEMORY[0x1E0C907D0]();
}

uint64_t sub_1D166D40C()
{
  return MEMORY[0x1E0C909F0]();
}

uint64_t sub_1D166D418()
{
  return MEMORY[0x1E0C90D00]();
}

uint64_t sub_1D166D424()
{
  return MEMORY[0x1E0C90DE0]();
}

uint64_t sub_1D166D430()
{
  return MEMORY[0x1E0C91750]();
}

uint64_t sub_1D166D43C()
{
  return MEMORY[0x1E0CAE618]();
}

uint64_t sub_1D166D448()
{
  return MEMORY[0x1E0CAE630]();
}

uint64_t sub_1D166D454()
{
  return MEMORY[0x1E0CAE638]();
}

uint64_t sub_1D166D460()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t sub_1D166D46C()
{
  return MEMORY[0x1E0CAEA38]();
}

uint64_t sub_1D166D478()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1D166D484()
{
  return MEMORY[0x1E0CAF330]();
}

uint64_t sub_1D166D490()
{
  return MEMORY[0x1E0CAF340]();
}

uint64_t sub_1D166D49C()
{
  return MEMORY[0x1E0CAF3D8]();
}

uint64_t sub_1D166D4A8()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1D166D4B4()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1D166D4C0()
{
  return MEMORY[0x1E0CAF9B0]();
}

uint64_t sub_1D166D4CC()
{
  return MEMORY[0x1E0CAF9F8]();
}

uint64_t sub_1D166D4D8()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_1D166D4E4()
{
  return MEMORY[0x1E0CAFD98]();
}

uint64_t sub_1D166D4F0()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1D166D4FC()
{
  return MEMORY[0x1E0CAFDC0]();
}

uint64_t sub_1D166D508()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_1D166D514()
{
  return MEMORY[0x1E0CAFE08]();
}

uint64_t sub_1D166D520()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1D166D52C()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_1D166D538()
{
  return MEMORY[0x1E0CAFEA0]();
}

uint64_t sub_1D166D544()
{
  return MEMORY[0x1E0CAFEB8]();
}

uint64_t sub_1D166D550()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1D166D55C()
{
  return MEMORY[0x1E0CAFF30]();
}

uint64_t sub_1D166D568()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1D166D574()
{
  return MEMORY[0x1E0CAFF98]();
}

uint64_t sub_1D166D580()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1D166D58C()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1D166D598()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1D166D5A4()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1D166D5B0()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1D166D5BC()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1D166D5C8()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1D166D5D4()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_1D166D5E0()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_1D166D5EC()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1D166D5F8()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1D166D604()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1D166D610()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1D166D61C()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1D166D628()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1D166D634()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1D166D640()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1D166D64C()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1D166D658()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1D166D664()
{
  return MEMORY[0x1E0CB0FB0]();
}

uint64_t sub_1D166D670()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t sub_1D166D67C()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1D166D688()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1D166D694()
{
  return MEMORY[0x1E0CB1248]();
}

uint64_t sub_1D166D6A0()
{
  return MEMORY[0x1E0CB1288]();
}

uint64_t sub_1D166D6AC()
{
  return MEMORY[0x1E0CB12A8]();
}

uint64_t sub_1D166D6B8()
{
  return MEMORY[0x1E0CB12C0]();
}

uint64_t sub_1D166D6C4()
{
  return MEMORY[0x1E0CB1330]();
}

uint64_t sub_1D166D6D0()
{
  return MEMORY[0x1E0CB1398]();
}

uint64_t sub_1D166D6DC()
{
  return MEMORY[0x1E0CB13A0]();
}

uint64_t sub_1D166D6E8()
{
  return MEMORY[0x1E0DEFDC0]();
}

uint64_t sub_1D166D6F4()
{
  return MEMORY[0x1E0DEFDC8]();
}

uint64_t sub_1D166D700()
{
  return MEMORY[0x1E0DEFDD0]();
}

uint64_t sub_1D166D70C()
{
  return MEMORY[0x1E0DEFDD8]();
}

uint64_t sub_1D166D718()
{
  return MEMORY[0x1E0DEFE28]();
}

uint64_t sub_1D166D724()
{
  return MEMORY[0x1E0DEFEC0]();
}

uint64_t sub_1D166D730()
{
  return MEMORY[0x1E0DEFEC8]();
}

uint64_t sub_1D166D73C()
{
  return MEMORY[0x1E0D35A58]();
}

uint64_t sub_1D166D748()
{
  return MEMORY[0x1E0D35A60]();
}

uint64_t sub_1D166D754()
{
  return MEMORY[0x1E0D35A78]();
}

uint64_t sub_1D166D760()
{
  return MEMORY[0x1E0D35A90]();
}

uint64_t sub_1D166D76C()
{
  return MEMORY[0x1E0D35AA8]();
}

uint64_t sub_1D166D778()
{
  return MEMORY[0x1E0D370E8]();
}

uint64_t sub_1D166D784()
{
  return MEMORY[0x1E0D370F0]();
}

uint64_t sub_1D166D790()
{
  return MEMORY[0x1E0D370F8]();
}

uint64_t sub_1D166D79C()
{
  return MEMORY[0x1E0D37108]();
}

uint64_t sub_1D166D7A8()
{
  return MEMORY[0x1E0D37110]();
}

uint64_t sub_1D166D7B4()
{
  return MEMORY[0x1E0D37160]();
}

uint64_t sub_1D166D7C0()
{
  return MEMORY[0x1E0D37168]();
}

uint64_t sub_1D166D7CC()
{
  return MEMORY[0x1E0D371A0]();
}

uint64_t sub_1D166D7D8()
{
  return MEMORY[0x1E0D371B0]();
}

uint64_t sub_1D166D7E4()
{
  return MEMORY[0x1E0D371C0]();
}

uint64_t sub_1D166D7F0()
{
  return MEMORY[0x1E0D371D8]();
}

uint64_t sub_1D166D7FC()
{
  return MEMORY[0x1E0D371F8]();
}

uint64_t sub_1D166D808()
{
  return MEMORY[0x1E0D37208]();
}

uint64_t sub_1D166D814()
{
  return MEMORY[0x1E0D37210]();
}

uint64_t sub_1D166D820()
{
  return MEMORY[0x1E0D37220]();
}

uint64_t sub_1D166D82C()
{
  return MEMORY[0x1E0D37228]();
}

uint64_t sub_1D166D838()
{
  return MEMORY[0x1E0D37230]();
}

uint64_t sub_1D166D844()
{
  return MEMORY[0x1E0D37238]();
}

uint64_t sub_1D166D850()
{
  return MEMORY[0x1E0D37240]();
}

uint64_t sub_1D166D85C()
{
  return MEMORY[0x1E0D37248]();
}

uint64_t sub_1D166D868()
{
  return MEMORY[0x1E0D37250]();
}

uint64_t sub_1D166D874()
{
  return MEMORY[0x1E0D37288]();
}

uint64_t sub_1D166D880()
{
  return MEMORY[0x1E0D37290]();
}

uint64_t sub_1D166D88C()
{
  return MEMORY[0x1E0D372A8]();
}

uint64_t sub_1D166D898()
{
  return MEMORY[0x1E0D372B0]();
}

uint64_t sub_1D166D8A4()
{
  return MEMORY[0x1E0D4D8A8]();
}

uint64_t sub_1D166D8B0()
{
  return MEMORY[0x1E0DF1DF8]();
}

uint64_t sub_1D166D8BC()
{
  return MEMORY[0x1E0DF1E30]();
}

uint64_t sub_1D166D8C8()
{
  return MEMORY[0x1E0DF1E78]();
}

uint64_t sub_1D166D8D4()
{
  return MEMORY[0x1E0DF1E80]();
}

uint64_t sub_1D166D8E0()
{
  return MEMORY[0x1E0DF1EB8]();
}

uint64_t sub_1D166D8EC()
{
  return MEMORY[0x1E0DEFF38]();
}

uint64_t sub_1D166D8F8()
{
  return MEMORY[0x1E0DF1F00]();
}

uint64_t sub_1D166D904()
{
  return MEMORY[0x1E0DF1F50]();
}

uint64_t sub_1D166D910()
{
  return MEMORY[0x1E0DF0290]();
}

uint64_t sub_1D166D91C()
{
  return MEMORY[0x1E0DF0340]();
}

uint64_t sub_1D166D928()
{
  return MEMORY[0x1E0D4D888]();
}

uint64_t sub_1D166D934()
{
  return MEMORY[0x1E0D4D890]();
}

uint64_t sub_1D166D940()
{
  return MEMORY[0x1E0D372B8]();
}

uint64_t sub_1D166D94C()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1D166D958()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1D166D964()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1D166D970()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t sub_1D166D97C()
{
  return MEMORY[0x1E0C95E00]();
}

uint64_t sub_1D166D988()
{
  return MEMORY[0x1E0C95E48]();
}

uint64_t sub_1D166D994()
{
  return MEMORY[0x1E0C95F60]();
}

uint64_t sub_1D166D9A0()
{
  return MEMORY[0x1E0C95FA8]();
}

uint64_t sub_1D166D9AC()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1D166D9B8()
{
  return MEMORY[0x1E0DEF4E8]();
}

uint64_t sub_1D166D9C4()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1D166D9D0()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1D166D9DC()
{
  return MEMORY[0x1E0DEF570]();
}

uint64_t sub_1D166D9E8()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1D166D9F4()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1D166DA00()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1D166DA0C()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1D166DA18()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1D166DA24()
{
  return MEMORY[0x1E0CB17F8]();
}

uint64_t sub_1D166DA30()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1D166DA3C()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1D166DA48()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1D166DA54()
{
  return MEMORY[0x1E0DEA258]();
}

uint64_t sub_1D166DA60()
{
  return MEMORY[0x1E0DF1F90]();
}

uint64_t sub_1D166DA6C()
{
  return MEMORY[0x1E0DF1FA0]();
}

uint64_t sub_1D166DA78()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1D166DA84()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1D166DA90()
{
  return MEMORY[0x1E0DEA3D0]();
}

uint64_t sub_1D166DA9C()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1D166DAA8()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1D166DAB4()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1D166DAC0()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1D166DACC()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1D166DAD8()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1D166DAE4()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1D166DAF0()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1D166DAFC()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1D166DB08()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1D166DB14()
{
  return MEMORY[0x1E0DEA768]();
}

uint64_t sub_1D166DB20()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1D166DB2C()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1D166DB38()
{
  return MEMORY[0x1E0DEA7C8]();
}

uint64_t sub_1D166DB44()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1D166DB50()
{
  return MEMORY[0x1E0DEA7F8]();
}

uint64_t sub_1D166DB5C()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1D166DB68()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_1D166DB74()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1D166DB80()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1D166DB8C()
{
  return MEMORY[0x1E0DEA948]();
}

uint64_t sub_1D166DB98()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1D166DBA4()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1D166DBB0()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1D166DBBC()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1D166DBC8()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1D166DBD4()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1D166DBE0()
{
  return MEMORY[0x1E0CB1AE0]();
}

uint64_t sub_1D166DBEC()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1D166DBF8()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1D166DC04()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1D166DC10()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t sub_1D166DC1C()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1D166DC28()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t sub_1D166DC34()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1D166DC40()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1D166DC4C()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_1D166DC58()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1D166DC64()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1D166DC70()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1D166DC7C()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1D166DC88()
{
  return MEMORY[0x1E0DF0688]();
}

uint64_t sub_1D166DC94()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_1D166DCA0()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_1D166DCAC()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1D166DCB8()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1D166DCC4()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_1D166DCD0()
{
  return MEMORY[0x1E0CB1B50]();
}

uint64_t sub_1D166DCDC()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1D166DCE8()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1D166DCF4()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1D166DD00()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1D166DD0C()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_1D166DD18()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1D166DD24()
{
  return MEMORY[0x1E0DEB5A8]();
}

uint64_t sub_1D166DD30()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1D166DD3C()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1D166DD48()
{
  return MEMORY[0x1E0C94600]();
}

uint64_t sub_1D166DD54()
{
  return MEMORY[0x1E0CB1C90]();
}

uint64_t sub_1D166DD60()
{
  return MEMORY[0x1E0CB1CB0]();
}

uint64_t sub_1D166DD6C()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1D166DD78()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1D166DD84()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1D166DD90()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1D166DD9C()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1D166DDA8()
{
  return MEMORY[0x1E0D372D8]();
}

uint64_t sub_1D166DDB4()
{
  return MEMORY[0x1E0D372E0]();
}

uint64_t sub_1D166DDC0()
{
  return MEMORY[0x1E0D35AC0]();
}

uint64_t sub_1D166DDCC()
{
  return MEMORY[0x1E0D372E8]();
}

uint64_t sub_1D166DDD8()
{
  return MEMORY[0x1E0CB1E68]();
}

uint64_t sub_1D166DDE4()
{
  return MEMORY[0x1E0DEF800]();
}

uint64_t sub_1D166DDF0()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1D166DDFC()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1D166DE08()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1D166DE14()
{
  return MEMORY[0x1E0DEF8F8]();
}

uint64_t sub_1D166DE20()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1D166DE2C()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1D166DE38()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1D166DE44()
{
  return MEMORY[0x1E0D37308]();
}

uint64_t sub_1D166DE50()
{
  return MEMORY[0x1E0D37310]();
}

uint64_t sub_1D166DE5C()
{
  return MEMORY[0x1E0D37318]();
}

uint64_t sub_1D166DE68()
{
  return MEMORY[0x1E0D37320]();
}

uint64_t sub_1D166DE74()
{
  return MEMORY[0x1E0D37328]();
}

uint64_t sub_1D166DE80()
{
  return MEMORY[0x1E0CB1ED8]();
}

uint64_t sub_1D166DE8C()
{
  return MEMORY[0x1E0CB1EE0]();
}

uint64_t sub_1D166DE98()
{
  return MEMORY[0x1E0CB1F08]();
}

uint64_t sub_1D166DEA4()
{
  return MEMORY[0x1E0C977D8]();
}

uint64_t sub_1D166DEB0()
{
  return MEMORY[0x1E0D37338]();
}

uint64_t sub_1D166DEBC()
{
  return MEMORY[0x1E0C94668]();
}

uint64_t sub_1D166DEC8()
{
  return MEMORY[0x1E0CB20E0]();
}

uint64_t sub_1D166DED4()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1D166DEE0()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1D166DEEC()
{
  return MEMORY[0x1E0CB2160]();
}

uint64_t sub_1D166DEF8()
{
  return MEMORY[0x1E0DEBA80]();
}

uint64_t sub_1D166DF04()
{
  return MEMORY[0x1E0DEBAD8]();
}

uint64_t sub_1D166DF10()
{
  return MEMORY[0x1E0DEBB58]();
}

uint64_t sub_1D166DF1C()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1D166DF28()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1D166DF34()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1D166DF40()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1D166DF4C()
{
  return MEMORY[0x1E0CB24B8]();
}

uint64_t sub_1D166DF58()
{
  return MEMORY[0x1E0CB24E8]();
}

uint64_t sub_1D166DF64()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1D166DF70()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1D166DF7C()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1D166DF88()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1D166DF94()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1D166DFA0()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1D166DFAC()
{
  return MEMORY[0x1E0DEC0A8]();
}

uint64_t sub_1D166DFB8()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_1D166DFC4()
{
  return MEMORY[0x1E0DEC0C8]();
}

uint64_t sub_1D166DFD0()
{
  return MEMORY[0x1E0DEC0D0]();
}

uint64_t sub_1D166DFDC()
{
  return MEMORY[0x1E0DEC0D8]();
}

uint64_t sub_1D166DFE8()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_1D166DFF4()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_1D166E000()
{
  return MEMORY[0x1E0DEC100]();
}

uint64_t sub_1D166E00C()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_1D166E018()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t sub_1D166E024()
{
  return MEMORY[0x1E0DEC120]();
}

uint64_t sub_1D166E030()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1D166E03C()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1D166E048()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1D166E054()
{
  return MEMORY[0x1E0DF0B00]();
}

uint64_t sub_1D166E060()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1D166E06C()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1D166E078()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_1D166E084()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1D166E090()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1D166E09C()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1D166E0A8()
{
  return MEMORY[0x1E0DEC300]();
}

uint64_t sub_1D166E0B4()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t sub_1D166E0C0()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1D166E0CC()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_1D166E0D8()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1D166E0E4()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1D166E0F0()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1D166E0FC()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1D166E108()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1D166E114()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1D166E120()
{
  return MEMORY[0x1E0DF0B98]();
}

uint64_t sub_1D166E12C()
{
  return MEMORY[0x1E0DF0BA0]();
}

uint64_t sub_1D166E138()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1D166E144()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1D166E150()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1D166E15C()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1D166E168()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1D166E174()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1D166E180()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1D166E18C()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1D166E198()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1D166E1A4()
{
  return MEMORY[0x1E0DECEF8]();
}

uint64_t sub_1D166E1B0()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1D166E1BC()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1D166E1C8()
{
  return MEMORY[0x1E0DF0DD0]();
}

uint64_t sub_1D166E1D4()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1D166E1E0()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1D166E1EC()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1D166E1F8()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1D166E204()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t sub_1D166E210()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1D166E21C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1D166E228()
{
  return MEMORY[0x1E0DF0F08]();
}

uint64_t sub_1D166E234()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1D166E240()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1D166E24C()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1D166E258()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1D166E264()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1D166E270()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1D166E27C()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1D166E288()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1D166E294()
{
  return MEMORY[0x1E0DEE758]();
}

uint64_t sub_1D166E2A0()
{
  return MEMORY[0x1E0DEE978]();
}

OSStatus AudioServicesCreateSystemSoundID(CFURLRef inFileURL, SystemSoundID *outSystemSoundID)
{
  return MEMORY[0x1E0C92128](inFileURL, outSystemSoundID);
}

OSStatus AudioServicesDisposeSystemSoundID(SystemSoundID inSystemSoundID)
{
  return MEMORY[0x1E0C92140](*(_QWORD *)&inSystemSoundID);
}

void AudioServicesPlaySystemSound(SystemSoundID inSystemSoundID)
{
  MEMORY[0x1E0C92148](*(_QWORD *)&inSystemSoundID);
}

OSStatus AudioServicesSetProperty(AudioServicesPropertyID inPropertyID, UInt32 inSpecifierSize, const void *inSpecifier, UInt32 inPropertyDataSize, const void *inPropertyData)
{
  return MEMORY[0x1E0C92178](*(_QWORD *)&inPropertyID, *(_QWORD *)&inSpecifierSize, inSpecifier, *(_QWORD *)&inPropertyDataSize, inPropertyData);
}

uint64_t CEMStringIsSingleEmoji()
{
  return MEMORY[0x1E0D15DC8]();
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
  MEMORY[0x1E0C97CF8](theArray, value);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1E0C97D60](theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1E0C97D98](theArray, idx);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x1E0C97FC8]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1E0C97FE0](BOOLean);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98550](allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1E0C985B8](theDict, key);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98610](theDict, key, value);
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1E0C98620](cf1, cf2);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988C8]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
  MEMORY[0x1E0C988E0](center, name, object, userInfo, deliverImmediately);
}

void CFNotificationCenterPostNotificationWithOptions(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, CFOptionFlags options)
{
  MEMORY[0x1E0C988E8](center, name, object, userInfo, options);
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x1E0C98900](center, observer, name, object);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

CFArrayRef CFPreferencesCopyKeyList(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFArrayRef)MEMORY[0x1E0C98A50](applicationID, userName, hostName);
}

CFDictionaryRef CFPreferencesCopyMultiple(CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98A58](keysToFetch, applicationID, userName, hostName);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A60](key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A70](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
  MEMORY[0x1E0C98A80](key, value, applicationID);
}

void CFPreferencesSetMultiple(CFDictionaryRef keysToSet, CFArrayRef keysToRemove, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  MEMORY[0x1E0C98A88](keysToSet, keysToRemove, applicationID, userName, hostName);
}

void CFPreferencesSetValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  MEMORY[0x1E0C98A90](key, value, applicationID, userName, hostName);
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return MEMORY[0x1E0C98A98](applicationID, userName, hostName);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x1E0C98FD0](alloc, cStr, *(_QWORD *)&encoding);
}

CFStringRef CFStringCreateWithFileSystemRepresentation(CFAllocatorRef alloc, const char *buffer)
{
  return (CFStringRef)MEMORY[0x1E0C99008](alloc, buffer);
}

CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  return (CFStringRef)MEMORY[0x1E0C99018](alloc, formatOptions, format);
}

SInt32 CFUserNotificationDisplayAlert(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle, CFStringRef alternateButtonTitle, CFStringRef otherButtonTitle, CFOptionFlags *responseFlags)
{
  return MEMORY[0x1E0C995C8](flags, iconURL, soundURL, localizationURL, alertHeader, alertMessage, defaultButtonTitle, alternateButtonTitle, timeout);
}

SInt32 CFUserNotificationDisplayNotice(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle)
{
  return MEMORY[0x1E0C995D0](flags, iconURL, soundURL, localizationURL, alertHeader, alertMessage, defaultButtonTitle, timeout);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x1E0CBC308](idst, image, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1E0CBC348](url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1E0CBC358](idst);
}

uint64_t CKCanRetryForError()
{
  return MEMORY[0x1E0C946D8]();
}

uint64_t CMFBlockListCopyItemsForAllServicesService()
{
  return MEMORY[0x1E0D13260]();
}

uint64_t CMFBlockListIsItemBlocked()
{
  return MEMORY[0x1E0D13268]();
}

uint64_t CMFItemCopyEmailAddress()
{
  return MEMORY[0x1E0D13288]();
}

uint64_t CMFItemCopyPhoneNumber()
{
  return MEMORY[0x1E0D13290]();
}

uint64_t CMFItemCreateWithEmailAddress()
{
  return MEMORY[0x1E0D132A0]();
}

uint64_t CMFItemCreateWithPhoneNumber()
{
  return MEMORY[0x1E0D132A8]();
}

uint64_t CMFItemGetType()
{
  return MEMORY[0x1E0D132B0]();
}

uint64_t CTTelephonyCenterAddObserver()
{
  return MEMORY[0x1E0CA6CC0]();
}

uint64_t CTTelephonyCenterGetDefault()
{
  return MEMORY[0x1E0CA6CC8]();
}

uint64_t CTTelephonyCenterRemoveObserver()
{
  return MEMORY[0x1E0CA6CD8]();
}

uint64_t CacheDeleteEnumerateRemovedFiles()
{
  return MEMORY[0x1E0D09B60]();
}

uint64_t CacheDeleteInitPurgeMarker()
{
  return MEMORY[0x1E0D09B70]();
}

uint64_t CacheDeleteRegisterInfoCallbacks()
{
  return MEMORY[0x1E0D09B98]();
}

uint64_t CacheDeleteRegisterPurgeNotification()
{
  return MEMORY[0x1E0D09BB0]();
}

uint64_t CacheDeleteRequestCacheableSpaceGuidance()
{
  return MEMORY[0x1E0D09BB8]();
}

uint64_t CacheDeleteSyncDone()
{
  return MEMORY[0x1E0D09BC0]();
}

FSEventStreamRef FSEventStreamCreate(CFAllocatorRef allocator, FSEventStreamCallback callback, FSEventStreamContext *context, CFArrayRef pathsToWatch, FSEventStreamEventId sinceWhen, CFTimeInterval latency, FSEventStreamCreateFlags flags)
{
  return (FSEventStreamRef)MEMORY[0x1E0CA5758](allocator, callback, context, pathsToWatch, sinceWhen, *(_QWORD *)&flags, latency);
}

void FSEventStreamSetDispatchQueue(FSEventStreamRef streamRef, dispatch_queue_t q)
{
  MEMORY[0x1E0CA5780](streamRef, q);
}

Boolean FSEventStreamStart(FSEventStreamRef streamRef)
{
  return MEMORY[0x1E0CA5790](streamRef);
}

void FSEventStreamStop(FSEventStreamRef streamRef)
{
  MEMORY[0x1E0CA5798](streamRef);
}

uint64_t FormattedRecentDomainDirectory()
{
  return MEMORY[0x1E0D37350]();
}

uint64_t HSAAuthenticationProcessIncomingMessage()
{
  return MEMORY[0x1E0D28758]();
}

uint64_t IDSCheckiMessageUnknownSender()
{
  return MEMORY[0x1E0D33DB8]();
}

uint64_t IDSCopyAddressDestinationForDestination()
{
  return MEMORY[0x1E0D33DC0]();
}

uint64_t IDSCopyBestGuessIDForID()
{
  return MEMORY[0x1E0D33DC8]();
}

uint64_t IDSCopyIDForDevice()
{
  return MEMORY[0x1E0D33DE0]();
}

uint64_t IDSCopyIDForEmailAddress()
{
  return MEMORY[0x1E0D33DF0]();
}

uint64_t IDSCopyIDForPhoneNumber()
{
  return MEMORY[0x1E0D33DF8]();
}

uint64_t IDSCopyIDForPhoneNumberWithOptions()
{
  return MEMORY[0x1E0D33E00]();
}

uint64_t IDSCopyRawAddressForDestination()
{
  return MEMORY[0x1E0D33E28]();
}

uint64_t IDSCopyTokenAndIDForTokenWithID()
{
  return MEMORY[0x1E0D33E30]();
}

uint64_t IDSGetUUIDData()
{
  return MEMORY[0x1E0D34740]();
}

uint64_t IDSReportiMessageSpam()
{
  return MEMORY[0x1E0D34108]();
}

uint64_t IDSReportiMessageUnknownSenderWithBlackholeAndJunkStatus()
{
  return MEMORY[0x1E0D34110]();
}

uint64_t IMAllowMessagesIniCloud()
{
  return MEMORY[0x1E0D37410]();
}

uint64_t IMAssociatedMessageDecodeGUID()
{
  return MEMORY[0x1E0D37430]();
}

uint64_t IMAssociatedMessageDecodePartIndex()
{
  return MEMORY[0x1E0D37438]();
}

uint64_t IMAttachmentEmojiImagePreviewFileURL()
{
  return MEMORY[0x1E0D37440]();
}

uint64_t IMAttachmentPreviewFileURL()
{
  return MEMORY[0x1E0D37450]();
}

uint64_t IMAttachmentsDirectoryURL()
{
  return MEMORY[0x1E0D37480]();
}

uint64_t IMBagDoubleValueWithDefault()
{
  return MEMORY[0x1E0D374A8]();
}

uint64_t IMBagIntValueWithDefault()
{
  return MEMORY[0x1E0D374B0]();
}

uint64_t IMBalloonExtensionIDWithSuffix()
{
  return MEMORY[0x1E0D37510]();
}

uint64_t IMBiomeQueue()
{
  return MEMORY[0x1E0D37650]();
}

uint64_t IMCalculateFileSizeForPath()
{
  return MEMORY[0x1E0D376F8]();
}

uint64_t IMCanonicalFormOfIDWithSensitivity()
{
  return MEMORY[0x1E0D37700]();
}

uint64_t IMCanonicalizeFormattedString()
{
  return MEMORY[0x1E0D36348]();
}

uint64_t IMChatCanonicalIDSIDsForAddress()
{
  return MEMORY[0x1E0D37710]();
}

uint64_t IMCleanupPhoneNumber()
{
  return MEMORY[0x1E0D36358]();
}

uint64_t IMClientPreviewConstraints()
{
  return MEMORY[0x1E0D378A8]();
}

uint64_t IMCloudKitGetSyncStateDictionary()
{
  return MEMORY[0x1E0D37A38]();
}

uint64_t IMCloudKitSetEligibleToToggleMiCSwitch()
{
  return MEMORY[0x1E0D37B20]();
}

uint64_t IMCommSafetyContentAttachmentTypeForURL()
{
  return MEMORY[0x1E0D37C28]();
}

uint64_t IMComponentsFromChatGUID()
{
  return MEMORY[0x1E0D36360]();
}

uint64_t IMComputeRecordName()
{
  return MEMORY[0x1E0D37C30]();
}

uint64_t IMCopyGUIDForChat()
{
  return MEMORY[0x1E0D36370]();
}

uint64_t IMCopyNormalizedAttributes()
{
  return MEMORY[0x1E0D37C40]();
}

uint64_t IMCopySafeNameOfFontFamilyName()
{
  return MEMORY[0x1E0D37C48]();
}

uint64_t IMCoreSpotlightIndexReasonFromReindexReason()
{
  return MEMORY[0x1E0D37C58]();
}

uint64_t IMCountryCodeForIncomingTextMessage()
{
  return MEMORY[0x1E0D36398]();
}

uint64_t IMCountryCodeForNumber()
{
  return MEMORY[0x1E0D363A0]();
}

uint64_t IMCreateEscapedAttributeValueFromString()
{
  return MEMORY[0x1E0D37C68]();
}

uint64_t IMCreateEscapedStringFromString()
{
  return MEMORY[0x1E0D37C70]();
}

uint64_t IMCreateSerializedItemsFromArray()
{
  return MEMORY[0x1E0D37C90]();
}

uint64_t IMCreateSuperFormatStringWithAppendedFileTransfers()
{
  return MEMORY[0x1E0D363B8]();
}

uint64_t IMDAddIncompatibleGroupPhotoChangedMessagesToDeleteFromCloudKit()
{
  return MEMORY[0x1E0D35AE8]();
}

uint64_t IMDAreAllAliasesUnknown()
{
  return MEMORY[0x1E0D35AF0]();
}

uint64_t IMDAttachmentCopyRecordIDsToDeleteAfterRowWithLimit()
{
  return MEMORY[0x1E0D35AF8]();
}

uint64_t IMDAttachmentMarkAllFailedAttachmentsAsNeedingSync()
{
  return MEMORY[0x1E0D35B20]();
}

uint64_t IMDAttachmentRecordBulkUpdate()
{
  return MEMORY[0x1E0D35B28]();
}

uint64_t IMDAttachmentRecordClearDeleteTombStones()
{
  return MEMORY[0x1E0D35B30]();
}

uint64_t IMDAttachmentRecordCopyAttachmentForGUID()
{
  return MEMORY[0x1E0D35B40]();
}

uint64_t IMDAttachmentRecordCopyAttachmentForGUIDIsLegacyGUID()
{
  return MEMORY[0x1E0D35B48]();
}

uint64_t IMDAttachmentRecordCopyAttachmentGUIDsAndPathsForChatIdentifiersOnServices()
{
  return MEMORY[0x1E0D35B50]();
}

uint64_t IMDAttachmentRecordCopyAttachmentsForQueryWithLimit()
{
  return MEMORY[0x1E0D35B58]();
}

uint64_t IMDAttachmentRecordCopyAttachmentsToMetricForDiskSpace()
{
  return MEMORY[0x1E0D35B60]();
}

uint64_t IMDAttachmentRecordCopyAttachmentsToPurgeForDiskSpace()
{
  return MEMORY[0x1E0D35B68]();
}

uint64_t IMDAttachmentRecordCopyFilename()
{
  return MEMORY[0x1E0D35B78]();
}

uint64_t IMDAttachmentRecordCopyMessageForAttachmentGUID()
{
  return MEMORY[0x1E0D35B80]();
}

uint64_t IMDAttachmentRecordCopyPurgedAttachmentsCountForChatIdentifiersOnServices()
{
  return MEMORY[0x1E0D35B88]();
}

uint64_t IMDAttachmentRecordCopyPurgedAttachmentsForChatIdentifiersOnServices()
{
  return MEMORY[0x1E0D35B90]();
}

uint64_t IMDAttachmentRecordCreate()
{
  return MEMORY[0x1E0D35BA0]();
}

uint64_t IMDAttachmentRecordDeleteAttachmentForGUID()
{
  return MEMORY[0x1E0D35BA8]();
}

uint64_t IMDAttachmentRecordDeleteTombStonedAttachmentsWithRecordIDs()
{
  return MEMORY[0x1E0D35BB0]();
}

uint64_t IMDAttachmentRecordGetPurgeableDiskSpace()
{
  return MEMORY[0x1E0D35BD0]();
}

uint64_t IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync()
{
  return MEMORY[0x1E0D35BE0]();
}

uint64_t IMDAttachmentRecordMarkAttachmentWithROWIDAsSyncedWithCloudKit()
{
  return MEMORY[0x1E0D35BE8]();
}

uint64_t IMDAttachmentRecordMarkAttachmentWithROWIDWithSyncState()
{
  return MEMORY[0x1E0D35BF0]();
}

uint64_t IMDAttachmentRecordRowIDForGUID()
{
  return MEMORY[0x1E0D35BF8]();
}

uint64_t IMDAttachmentRecordUpdateAttachmentGUIDWithGUID()
{
  return MEMORY[0x1E0D35C00]();
}

uint64_t IMDAttachmentUpdateAttachmentFileSizeWithRowIDGreaterThanWatermark()
{
  return MEMORY[0x1E0D35C10]();
}

uint64_t IMDCNRecordIDAndHistoryTokenForAliases()
{
  return MEMORY[0x1E0D35C20]();
}

uint64_t IMDCNRecordIDAndHistoryTokenForAliasesWithCompletionHandler()
{
  return MEMORY[0x1E0D35C28]();
}

uint64_t IMDCNRecordIDForAliases()
{
  return MEMORY[0x1E0D35C30]();
}

uint64_t IMDCanDowngradeDatabaseToVersion()
{
  return MEMORY[0x1E0D35C38]();
}

uint64_t IMDChatClearPendingDeleteChatsTable()
{
  return MEMORY[0x1E0D35C40]();
}

uint64_t IMDChatCopyChatRecordIDsAndGUIDsToDeleteWithLimit()
{
  return MEMORY[0x1E0D35C48]();
}

uint64_t IMDChatInsertIntoDeletedChatsTable()
{
  return MEMORY[0x1E0D35C68]();
}

uint64_t IMDChatRecordAddHandle()
{
  return MEMORY[0x1E0D35C70]();
}

uint64_t IMDChatRecordAssociateMessageWithGUIDToChatWithGUIDIfNeeded()
{
  return MEMORY[0x1E0D35C78]();
}

uint64_t IMDChatRecordBulkUpdate()
{
  return MEMORY[0x1E0D35C80]();
}

uint64_t IMDChatRecordCachedUnreadCount()
{
  return MEMORY[0x1E0D35C88]();
}

uint64_t IMDChatRecordCopyAllActiveChatsProgressivelyWithLimitAndBlock()
{
  return MEMORY[0x1E0D35C90]();
}

uint64_t IMDChatRecordCopyAllUnreadChatsAndRecentChatsWithLimit()
{
  return MEMORY[0x1E0D35C98]();
}

uint64_t IMDChatRecordCopyCachedLastMessage()
{
  return MEMORY[0x1E0D35CA0]();
}

uint64_t IMDChatRecordCopyChatForGUID()
{
  return MEMORY[0x1E0D35CA8]();
}

uint64_t IMDChatRecordCopyChatIdentitiesForMessageWithGUIDs()
{
  return MEMORY[0x1E0D35CC0]();
}

uint64_t IMDChatRecordCopyChatRecord()
{
  return MEMORY[0x1E0D35CC8]();
}

uint64_t IMDChatRecordCopyChatsWithGroupID()
{
  return MEMORY[0x1E0D35CD0]();
}

uint64_t IMDChatRecordCopyChatsWithHandleOnService()
{
  return MEMORY[0x1E0D35CD8]();
}

uint64_t IMDChatRecordCopyChatsWithIdentifierOnService()
{
  return MEMORY[0x1E0D35CE0]();
}

uint64_t IMDChatRecordCopyChatsWithRoomnameOnService()
{
  return MEMORY[0x1E0D35CE8]();
}

uint64_t IMDChatRecordCopyDisplayName()
{
  return MEMORY[0x1E0D35CF0]();
}

uint64_t IMDChatRecordCopyGUID()
{
  return MEMORY[0x1E0D35CF8]();
}

uint64_t IMDChatRecordCopyHandles()
{
  return MEMORY[0x1E0D35D00]();
}

uint64_t IMDChatRecordCopyMessagesWithLimit()
{
  return MEMORY[0x1E0D35D08]();
}

uint64_t IMDChatRecordCopyNewestChatForGroupIDOnService()
{
  return MEMORY[0x1E0D35D10]();
}

uint64_t IMDChatRecordCreate()
{
  return MEMORY[0x1E0D35D18]();
}

uint64_t IMDChatRecordDeleteChatForGUID()
{
  return MEMORY[0x1E0D35D20]();
}

uint64_t IMDChatRecordDisassociateMessageWithGUIDFromChatWithGUIDIfNeeded()
{
  return MEMORY[0x1E0D35D28]();
}

uint64_t IMDChatRecordGetIdentifier()
{
  return MEMORY[0x1E0D35D30]();
}

uint64_t IMDChatRecordLastMessageTimeStampOnLoad()
{
  return MEMORY[0x1E0D35D38]();
}

uint64_t IMDChatRecordRemoveHandle()
{
  return MEMORY[0x1E0D35D40]();
}

uint64_t IMDChatRecordRepairDuplicateChats()
{
  return MEMORY[0x1E0D35D48]();
}

uint64_t IMDChatRecordSetIsBlackholed()
{
  return MEMORY[0x1E0D35D50]();
}

uint64_t IMDChatRecordSetIsFiltered()
{
  return MEMORY[0x1E0D35D58]();
}

uint64_t IMDChatRemapMessagesWithErrorCodeToErrorCode()
{
  return MEMORY[0x1E0D35D68]();
}

uint64_t IMDCopyAttachmentPersistentPath()
{
  return MEMORY[0x1E0D35D70]();
}

uint64_t IMDCoreSpotlightAddChatGUID()
{
  return MEMORY[0x1E0D35D78]();
}

uint64_t IMDCoreSpotlightAddMessageGUID()
{
  return MEMORY[0x1E0D35D80]();
}

uint64_t IMDCoreSpotlightDeleteChatGUID()
{
  return MEMORY[0x1E0D35D88]();
}

uint64_t IMDCoreSpotlightDeleteMessageGUIDS()
{
  return MEMORY[0x1E0D35D90]();
}

uint64_t IMDCoreSpotlightIndexNextMessageBatchIfNeeded()
{
  return MEMORY[0x1E0D35D98]();
}

uint64_t IMDCoreSpotlightReindexMessagesWhileBlocking()
{
  return MEMORY[0x1E0D35DA8]();
}

uint64_t IMDCoreSpotlightReindexMessagesWithCollaborationMetadata()
{
  return MEMORY[0x1E0D35DB0]();
}

uint64_t IMDCoreSpotlightSetNeedsMessageReindex()
{
  return MEMORY[0x1E0D35DB8]();
}

uint64_t IMDCreateIMDMessageRecordRefFromIMMessageItem()
{
  return MEMORY[0x1E0D35DC8]();
}

uint64_t IMDCreateIMItemFromIMDMessageRecordRefCopyAttachmentsIfNeededWithAccountLookup()
{
  return MEMORY[0x1E0D35DD0]();
}

uint64_t IMDDScanAttributedStringWithExtendedContext()
{
  return MEMORY[0x1E0D363E8]();
}

uint64_t IMDDataDectorDictionaryForMessageItem()
{
  return MEMORY[0x1E0D35DD8]();
}

uint64_t IMDDatabaseDelete()
{
  return MEMORY[0x1E0D35DE0]();
}

uint64_t IMDDowngradeDatabaseToVersion()
{
  return MEMORY[0x1E0D35DE8]();
}

uint64_t IMDHandleRecordBulkUpdate()
{
  return MEMORY[0x1E0D35DF0]();
}

uint64_t IMDHandleRecordCopyCountry()
{
  return MEMORY[0x1E0D35DF8]();
}

uint64_t IMDHandleRecordCopyHandleForIDOnService()
{
  return MEMORY[0x1E0D35E00]();
}

uint64_t IMDHandleRecordCopyID()
{
  return MEMORY[0x1E0D35E08]();
}

uint64_t IMDHandleRecordCopyPersonCentricID()
{
  return MEMORY[0x1E0D35E10]();
}

uint64_t IMDHandleRecordCopyUncanonicalizedID()
{
  return MEMORY[0x1E0D35E18]();
}

uint64_t IMDHandleRecordCreate()
{
  return MEMORY[0x1E0D35E20]();
}

uint64_t IMDHandleRecordGetIdentifier()
{
  return MEMORY[0x1E0D35E28]();
}

uint64_t IMDIsFavoritedContact()
{
  return MEMORY[0x1E0D35E38]();
}

uint64_t IMDKVPersistValueForKey()
{
  return MEMORY[0x1E0D35E40]();
}

uint64_t IMDKVValueForKey()
{
  return MEMORY[0x1E0D35E48]();
}

uint64_t IMDMessagePTaskDeleteAllCompletedTask()
{
  return MEMORY[0x1E0D35E50]();
}

uint64_t IMDMessagePTaskInsertRow()
{
  return MEMORY[0x1E0D35E58]();
}

uint64_t IMDMessagePTaskSelectWithLimit()
{
  return MEMORY[0x1E0D35E60]();
}

uint64_t IMDMessagePTaskUpdateTaskFlagsForGUID()
{
  return MEMORY[0x1E0D35E68]();
}

uint64_t IMDMessageRecordAddGUIDAndCKRecordIDToDeleteFromCloudKit()
{
  return MEMORY[0x1E0D35E70]();
}

uint64_t IMDMessageRecordAssociateMessageWithGUIDToAttachmentWithGUID()
{
  return MEMORY[0x1E0D35E78]();
}

uint64_t IMDMessageRecordCalculateLocalCloudKitStatistics()
{
  return MEMORY[0x1E0D35E88]();
}

uint64_t IMDMessageRecordClearDeleteTombStones()
{
  return MEMORY[0x1E0D35E98]();
}

uint64_t IMDMessageRecordCopyAndMarkAsReadMessagesPriorToGuidMatchingChatGUIDs()
{
  return MEMORY[0x1E0D35EA8]();
}

uint64_t IMDMessageRecordCopyArrayOfAssociatedMessagesForMessageGUIDFromSender()
{
  return MEMORY[0x1E0D35EB0]();
}

uint64_t IMDMessageRecordCopyChats()
{
  return MEMORY[0x1E0D35EC0]();
}

uint64_t IMDMessageRecordCopyChatsForMessageIdentifier()
{
  return MEMORY[0x1E0D35EC8]();
}

uint64_t IMDMessageRecordCopyFrequentRepliesForChatIdentifiersOnServicesUpToLimit()
{
  return MEMORY[0x1E0D35ED0]();
}

uint64_t IMDMessageRecordCopyGUIDForMessage()
{
  return MEMORY[0x1E0D35ED8]();
}

uint64_t IMDMessageRecordCopyGUIDsForMessagesWithChatIdentifiersOnServices()
{
  return MEMORY[0x1E0D35EE0]();
}

uint64_t IMDMessageRecordCopyMessageActionItemsForOriginalMessageGUID()
{
  return MEMORY[0x1E0D35EE8]();
}

uint64_t IMDMessageRecordCopyMessageForGUID()
{
  return MEMORY[0x1E0D35EF0]();
}

uint64_t IMDMessageRecordCopyMessageMatchingBodyStringWithChatIdentifiersServicesSkippingGUIDs()
{
  return MEMORY[0x1E0D35F00]();
}

uint64_t IMDMessageRecordCopyMessageMatchingBodyStringWithHandleMatchingServiceMatchingSOSSkippingGUID()
{
  return MEMORY[0x1E0D35F08]();
}

uint64_t IMDMessageRecordCopyMessageMatchingBodyStringWithHandleSkippingServicesSkippingGUIDs()
{
  return MEMORY[0x1E0D35F10]();
}

uint64_t IMDMessageRecordCopyMessageWithHandleOnServiceWithReplaceID()
{
  return MEMORY[0x1E0D35F18]();
}

uint64_t IMDMessageRecordCopyMessagesForAssociatedGUID()
{
  return MEMORY[0x1E0D35F20]();
}

uint64_t IMDMessageRecordCopyMessagesForGUIDs()
{
  return MEMORY[0x1E0D35F28]();
}

uint64_t IMDMessageRecordCopyMessagesPendingUpdateT1ToCloudKitWithLimit()
{
  return MEMORY[0x1E0D35F30]();
}

uint64_t IMDMessageRecordCopyMessagesPendingUpdateT2ToCloudKitWithLimit()
{
  return MEMORY[0x1E0D35F38]();
}

uint64_t IMDMessageRecordCopyMessagesPendingUpdateT3ToCloudKitWithLimit()
{
  return MEMORY[0x1E0D35F40]();
}

uint64_t IMDMessageRecordCopyMessagesToUploadToCloudKitWithLimit()
{
  return MEMORY[0x1E0D35F48]();
}

uint64_t IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUIDWithOptionalThreadIdentifier()
{
  return MEMORY[0x1E0D35F50]();
}

uint64_t IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesUpToGUIDOrLimitWithOptionalThreadIdentifier()
{
  return MEMORY[0x1E0D35F60]();
}

uint64_t IMDMessageRecordCopyMessagesWithReplyToGUIDs()
{
  return MEMORY[0x1E0D35F70]();
}

uint64_t IMDMessageRecordCopyRecordIDsAndGUIDsToDeleteWithLimit()
{
  return MEMORY[0x1E0D35F80]();
}

uint64_t IMDMessageRecordCopyUnreadIncomingMessagesWithChatIdentifiersOnServicesToLimitFallbackGUID()
{
  return MEMORY[0x1E0D35F88]();
}

uint64_t IMDMessageRecordCountAllUnreadMessages()
{
  return MEMORY[0x1E0D35F90]();
}

uint64_t IMDMessageRecordCountAllUnreadMessagesForChatGUID()
{
  return MEMORY[0x1E0D35F98]();
}

uint64_t IMDMessageRecordCountAllUnreadMessagesForChatRowID()
{
  return MEMORY[0x1E0D35FA0]();
}

uint64_t IMDMessageRecordDeleteMessagesForGUIDs()
{
  return MEMORY[0x1E0D35FA8]();
}

uint64_t IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServices()
{
  return MEMORY[0x1E0D35FB0]();
}

uint64_t IMDMessageRecordDeleteTombStonedMessagesWithRecordIDs()
{
  return MEMORY[0x1E0D35FB8]();
}

uint64_t IMDMessageRecordGetMessagesSequenceNumber()
{
  return MEMORY[0x1E0D35FC8]();
}

uint64_t IMDMessageRecordLastFailedMessageDate()
{
  return MEMORY[0x1E0D35FD0]();
}

uint64_t IMDMessageRecordLastSyncedMessageRowID()
{
  return MEMORY[0x1E0D35FD8]();
}

uint64_t IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync()
{
  return MEMORY[0x1E0D35FE0]();
}

uint64_t IMDMessageRecordMarkAllUnsuccessFullSyncMessagesAsNeedingSync()
{
  return MEMORY[0x1E0D35FE8]();
}

uint64_t IMDMessageRecordMarkFailedAllUnsentUnfailedMessages()
{
  return MEMORY[0x1E0D35FF0]();
}

uint64_t IMDMessageRecordMarkMessageGUIDAsDeduplicated()
{
  return MEMORY[0x1E0D35FF8]();
}

uint64_t IMDMessageRecordMarkMessageGUIDUnread()
{
  return MEMORY[0x1E0D36000]();
}

uint64_t IMDMessageRecordMarkMessageWithROWIDAsIgnoreButNeedingSyncWithCloudKit()
{
  return MEMORY[0x1E0D36008]();
}

uint64_t IMDMessageRecordMarkMessageWithROWIDAsSyncedWithCloudKit()
{
  return MEMORY[0x1E0D36010]();
}

uint64_t IMDMessageRecordRetractNotificationsForMessagesMatchingChatGUIDs()
{
  return MEMORY[0x1E0D36018]();
}

uint64_t IMDMessageRecordUnassociateMessageWithGUIDFromAttachmentWithGUID()
{
  return MEMORY[0x1E0D36020]();
}

uint64_t IMDNotificationsPostNotificationsWithContext()
{
  return MEMORY[0x1E0D36028]();
}

uint64_t IMDNotificationsPostUrgentNotificationsForMessages()
{
  return MEMORY[0x1E0D36030]();
}

uint64_t IMDNotificationsRetractNotificationsForReadMessages()
{
  return MEMORY[0x1E0D36038]();
}

uint64_t IMDNotificationsRetractNotificationsFromFirstUnlockWithContext()
{
  return MEMORY[0x1E0D36040]();
}

uint64_t IMDNotificationsUpdatePostedNotificationsForMessages()
{
  return MEMORY[0x1E0D36048]();
}

uint64_t IMDReadDeviceState()
{
  return MEMORY[0x1E0D36058]();
}

uint64_t IMDRegisterReconnectBlockWithIdentifier()
{
  return MEMORY[0x1E0D36060]();
}

uint64_t IMDSMSRecordIsFull()
{
  return MEMORY[0x1E0D36068]();
}

uint64_t IMDSMSRecordStoreGetSchema()
{
  return MEMORY[0x1E0D36070]();
}

uint64_t IMDSMSRecordStoreGetSchemaVersion()
{
  return MEMORY[0x1E0D36078]();
}

uint64_t IMDSMSRecordStoreSave()
{
  return MEMORY[0x1E0D36080]();
}

uint64_t IMDSystemMigrationOccurred()
{
  return MEMORY[0x1E0D360B0]();
}

uint64_t IMDTrimSharedDatabaseToMessageCount()
{
  return MEMORY[0x1E0D360B8]();
}

uint64_t IMDUpdateIMItemWithIMItemForceReplace()
{
  return MEMORY[0x1E0D360C0]();
}

uint64_t IMDUpdateIMMessageItemWithIMMessageItemForceReplaceReplaceError()
{
  return MEMORY[0x1E0D360C8]();
}

uint64_t IMDefaultServiceCapabilities()
{
  return MEMORY[0x1E0D37D90]();
}

uint64_t IMDefaultServiceHybridCapabilities()
{
  return MEMORY[0x1E0D37D98]();
}

uint64_t IMDidPerformInitialChatVocabularyUpdate()
{
  return MEMORY[0x1E0D37DB8]();
}

uint64_t IMDispatchForNotify()
{
  return MEMORY[0x1E0D36400]();
}

uint64_t IMEnableNicknamesDebug()
{
  return MEMORY[0x1E0D37DE0]();
}

uint64_t IMExtensionPayloadUnarchivingClasses()
{
  return MEMORY[0x1E0D37E70]();
}

uint64_t IMFileLocationTrimFileName()
{
  return MEMORY[0x1E0D36428]();
}

uint64_t IMFileTransferGUIDForAttachmentMessagePartAtMessageGUIDAndMessagePartIndex()
{
  return MEMORY[0x1E0D37F90]();
}

uint64_t IMFileTransferGUIDForGenmojiWithContentIdentifierInMessageGUID()
{
  return MEMORY[0x1E0D37F98]();
}

uint64_t IMFileTransferGUIDForLocalOnlyFileTransferRepresentingCMMAssetAtIndexInMessageGUID()
{
  return MEMORY[0x1E0D37FA0]();
}

uint64_t IMFileTransferGUIDForPluginPayloadOrGroupPhotoInMessageGUID()
{
  return MEMORY[0x1E0D37FA8]();
}

uint64_t IMFileTransferGUIDIsTemporary()
{
  return MEMORY[0x1E0D37FB0]();
}

uint64_t IMFileURLIsActuallyAnimated()
{
  return MEMORY[0x1E0D37FE8]();
}

uint64_t IMFormatPhoneNumber()
{
  return MEMORY[0x1E0D36458]();
}

uint64_t IMFormattedDisplayStringForID()
{
  return MEMORY[0x1E0D36460]();
}

uint64_t IMGenerateLoginID()
{
  return MEMORY[0x1E0D36488]();
}

uint64_t IMGetAppBoolForKey()
{
  return MEMORY[0x1E0D36498]();
}

uint64_t IMGetAppIntForKey()
{
  return MEMORY[0x1E0D364A0]();
}

uint64_t IMGetAppValueForKey()
{
  return MEMORY[0x1E0D364A8]();
}

uint64_t IMGetAssertionFailureHandler()
{
  return MEMORY[0x1E0D364B0]();
}

uint64_t IMGetCachedDomainBoolForKey()
{
  return MEMORY[0x1E0D364B8]();
}

uint64_t IMGetCachedDomainBoolForKeyWithDefaultValue()
{
  return MEMORY[0x1E0D364C0]();
}

uint64_t IMGetCachedDomainIntForKey()
{
  return MEMORY[0x1E0D364C8]();
}

uint64_t IMGetCachedDomainIntForKeyWithDefaultValue()
{
  return MEMORY[0x1E0D364D0]();
}

uint64_t IMGetCachedDomainValueForKey()
{
  return MEMORY[0x1E0D364D8]();
}

uint64_t IMGetConsumedSessionPayloadsForBreadcrumbItems()
{
  return MEMORY[0x1E0D37FF8]();
}

uint64_t IMGetDomainBoolForKey()
{
  return MEMORY[0x1E0D364E8]();
}

uint64_t IMGetDomainBoolForKeyWithDefaultValue()
{
  return MEMORY[0x1E0D364F0]();
}

uint64_t IMGetDomainIntForKey()
{
  return MEMORY[0x1E0D364F8]();
}

uint64_t IMGetDomainValueForKey()
{
  return MEMORY[0x1E0D36500]();
}

uint64_t IMGetUserIgnoreLogoutIntent()
{
  return MEMORY[0x1E0D38010]();
}

uint64_t IMGetUserLoginIntent()
{
  return MEMORY[0x1E0D38018]();
}

uint64_t IMGreenTeaMessageReadLog()
{
  return MEMORY[0x1E0D38028]();
}

uint64_t IMGreenTeaMessageTransmitLog()
{
  return MEMORY[0x1E0D38030]();
}

uint64_t IMGreenTeaPhoneNumberTransmitLog()
{
  return MEMORY[0x1E0D38038]();
}

uint64_t IMGreenTeaReceived2FACode()
{
  return MEMORY[0x1E0D38040]();
}

uint64_t IMIsAAVideoURL()
{
  return MEMORY[0x1E0D380A8]();
}

uint64_t IMIsRunningInAutomation()
{
  return MEMORY[0x1E0D380D8]();
}

uint64_t IMIsRunningInImagent()
{
  return MEMORY[0x1E0D38100]();
}

uint64_t IMIsRunningInMessagesUIProcess()
{
  return MEMORY[0x1E0D38128]();
}

uint64_t IMIsRunningInUnitTesting()
{
  return MEMORY[0x1E0D38150]();
}

uint64_t IMIsSpatialMedia()
{
  return MEMORY[0x1E0D38170]();
}

uint64_t IMIsStringStewieEmergency()
{
  return MEMORY[0x1E0D38178]();
}

uint64_t IMIsStringStewieRoadside()
{
  return MEMORY[0x1E0D38180]();
}

uint64_t IMIsSupportedUTIType()
{
  return MEMORY[0x1E0D38188]();
}

uint64_t IMLegacyCalculateFileSizeForPath()
{
  return MEMORY[0x1E0D38198]();
}

uint64_t IMLogBacktrace()
{
  return MEMORY[0x1E0D36610]();
}

uint64_t IMLogExceptionBacktrace()
{
  return MEMORY[0x1E0D36618]();
}

uint64_t IMLogHandleForCategory()
{
  return MEMORY[0x1E0D381A8]();
}

uint64_t IMLogSimulateCrashForException()
{
  return MEMORY[0x1E0D36628]();
}

uint64_t IMLogSimulateCrashForProcess()
{
  return MEMORY[0x1E0D36630]();
}

uint64_t IMMessageCreateThreadIdentifierWithComponents()
{
  return MEMORY[0x1E0D38228]();
}

uint64_t IMMessageGuidFromIMFileTransferGuid()
{
  return MEMORY[0x1E0D38250]();
}

uint64_t IMMessageItemShouldAutomaticallySave()
{
  return MEMORY[0x1E0D38260]();
}

uint64_t IMMessageThreadIdentifierGetComponents()
{
  return MEMORY[0x1E0D383E0]();
}

uint64_t IMNicknameUnarchivingClasses()
{
  return MEMORY[0x1E0D38B30]();
}

uint64_t IMNormalizeFormattedString()
{
  return MEMORY[0x1E0D366D8]();
}

uint64_t IMNormalizePhoneNumber()
{
  return MEMORY[0x1E0D38BC8]();
}

uint64_t IMNormalizedPhoneNumberForCFPhoneNumberRef()
{
  return MEMORY[0x1E0D366E0]();
}

uint64_t IMOSLoggingEnabled(void)
{
  return MEMORY[0x1E0D366F0]();
}

uint64_t IMPhoneNumberRefCopyForPhoneNumber()
{
  return MEMORY[0x1E0D36718]();
}

uint64_t IMPreferredAccountMap()
{
  return MEMORY[0x1E0D36750]();
}

uint64_t IMPreviewConstraintsZero()
{
  return MEMORY[0x1E0D38C90]();
}

uint64_t IMPreviewExtension()
{
  return MEMORY[0x1E0D38C98]();
}

uint64_t IMRegisterForPreferredAccountChangeNotificationsInternal()
{
  return MEMORY[0x1E0D36780]();
}

uint64_t IMRemoveAppValueForKey()
{
  return MEMORY[0x1E0D367A8]();
}

uint64_t IMSHA1HashFromStrings()
{
  return MEMORY[0x1E0D38CE0]();
}

uint64_t IMSMSDirectoryURL()
{
  return MEMORY[0x1E0D38CF8]();
}

uint64_t IMSMSEnabled()
{
  return MEMORY[0x1E0D367D8]();
}

uint64_t IMSMWorkoutAlwaysPromptActionIdentifier()
{
  return MEMORY[0x1E0D38D10]();
}

uint64_t IMSafeTemporaryDirectory()
{
  return MEMORY[0x1E0D38D20]();
}

uint64_t IMSetAppValueForKey()
{
  return MEMORY[0x1E0D367F0]();
}

uint64_t IMSetDomainBoolForKey()
{
  return MEMORY[0x1E0D367F8]();
}

uint64_t IMSetDomainIntForKey()
{
  return MEMORY[0x1E0D36800]();
}

uint64_t IMSetDomainValueForKey()
{
  return MEMORY[0x1E0D36808]();
}

uint64_t IMSetHavePerformedInitialChatVocabularyUpdate()
{
  return MEMORY[0x1E0D39020]();
}

uint64_t IMSetKeychainPassword()
{
  return MEMORY[0x1E0D36820]();
}

uint64_t IMSharedHelperAreObjectsLogicallySame()
{
  return MEMORY[0x1E0D39120]();
}

uint64_t IMSharedHelperCachePathForStickerWithProperties()
{
  return MEMORY[0x1E0D39130]();
}

uint64_t IMSharedHelperContactsBasedMergingEnabled()
{
  return MEMORY[0x1E0D39150]();
}

uint64_t IMSharedHelperDeviceHasMultipleActiveSubscriptions()
{
  return MEMORY[0x1E0D39158]();
}

uint64_t IMSharedHelperDeviceHasMultipleSubscriptions()
{
  return MEMORY[0x1E0D39160]();
}

uint64_t IMSharedHelperDeviceHasMultipleSubscriptionsWithAtLeastOneActive()
{
  return MEMORY[0x1E0D39168]();
}

uint64_t IMSharedHelperDeviceIsAltAccount()
{
  return MEMORY[0x1E0D39170]();
}

uint64_t IMSharedHelperDeviceIsiPad()
{
  return MEMORY[0x1E0D39178]();
}

uint64_t IMSharedHelperEnsureDirectoryExistsAtPath()
{
  return MEMORY[0x1E0D39188]();
}

uint64_t IMSharedHelperMD5HashOfFileAtPath()
{
  return MEMORY[0x1E0D391B8]();
}

uint64_t IMSharedHelperMD5OfData()
{
  return MEMORY[0x1E0D391C0]();
}

uint64_t IMSharedHelperMessagesRootFolderPath()
{
  return MEMORY[0x1E0D391D0]();
}

uint64_t IMSharedHelperNSNewStringByAppendingStrings()
{
  return MEMORY[0x1E0D391E0]();
}

uint64_t IMSharedHelperNickNameEnabled()
{
  return MEMORY[0x1E0D391E8]();
}

uint64_t IMSharedHelperPersistMergeID()
{
  return MEMORY[0x1E0D39200]();
}

uint64_t IMSharedHelperPersistMergeIDMergedChats()
{
  return MEMORY[0x1E0D39208]();
}

uint64_t IMSharedHelperPersonCentricMergingEnabled()
{
  return MEMORY[0x1E0D39210]();
}

uint64_t IMSharedHelperRetrieveSimDetailsFromTelephony()
{
  return MEMORY[0x1E0D39220]();
}

uint64_t IMSharedHelperSortUsingReplyToGUIDAlgorithm()
{
  return MEMORY[0x1E0D39228]();
}

uint64_t IMSharedHelperSpotlightIndexingPreference()
{
  return MEMORY[0x1E0D39230]();
}

uint64_t IMSharedHelperTruncatedGroupDisplayName()
{
  return MEMORY[0x1E0D39240]();
}

uint64_t IMSharedHelperTurnOnUNUserNotificationsInIMDPersistence()
{
  return MEMORY[0x1E0D39248]();
}

uint64_t IMSharedUtilitiesFrameworkBundle()
{
  return MEMORY[0x1E0D39260]();
}

uint64_t IMShouldHandleInternalPhishingAttempts()
{
  return MEMORY[0x1E0D39270]();
}

uint64_t IMSingleObjectArray()
{
  return MEMORY[0x1E0D36838]();
}

uint64_t IMStringFromCKSyncState()
{
  return MEMORY[0x1E0D39340]();
}

uint64_t IMStringFromChatRepairHistory()
{
  return MEMORY[0x1E0D39348]();
}

uint64_t IMStringFromClientCapabilities()
{
  return MEMORY[0x1E0D39350]();
}

uint64_t IMStringFromCloudKitSyncStep()
{
  return MEMORY[0x1E0D39360]();
}

uint64_t IMStringFromIMCloudKitAccountStatus()
{
  return MEMORY[0x1E0D39368]();
}

uint64_t IMStringFromIMCloudKitSyncControllerSyncRecordType()
{
  return MEMORY[0x1E0D39370]();
}

uint64_t IMStringFromIMCloudKitSyncControllerSyncState()
{
  return MEMORY[0x1E0D39378]();
}

uint64_t IMStringFromIMCloudKitSyncControllerSyncType()
{
  return MEMORY[0x1E0D39380]();
}

uint64_t IMStringFromIMCloudKitSyncJobState()
{
  return MEMORY[0x1E0D39388]();
}

uint64_t IMStringFromIMCloudKitSyncStatus()
{
  return MEMORY[0x1E0D39390]();
}

uint64_t IMStringFromIMCloudKitSyncType()
{
  return MEMORY[0x1E0D39398]();
}

uint64_t IMStringFromTransferState()
{
  return MEMORY[0x1E0D393A8]();
}

uint64_t IMStringIsBusinessID()
{
  return MEMORY[0x1E0D36860]();
}

uint64_t IMStringIsEmail()
{
  return MEMORY[0x1E0D36868]();
}

uint64_t IMStringIsEmpty()
{
  return MEMORY[0x1E0D36878]();
}

uint64_t IMStringIsPhoneNumber()
{
  return MEMORY[0x1E0D36890]();
}

uint64_t IMStringIsStewie()
{
  return MEMORY[0x1E0D368A0]();
}

uint64_t IMStripLoginID()
{
  return MEMORY[0x1E0D368B8]();
}

uint64_t IMStripTransferConstraintAndSizeKeys()
{
  return MEMORY[0x1E0D393B0]();
}

uint64_t IMSyncronizeAppPreferences()
{
  return MEMORY[0x1E0D368C8]();
}

uint64_t IMTimeOfDay()
{
  return MEMORY[0x1E0D368D8]();
}

uint64_t IMTimingStartTimingForKey()
{
  return MEMORY[0x1E0D368E0]();
}

uint64_t IMTimingStopTimingForKey()
{
  return MEMORY[0x1E0D368E8]();
}

uint64_t IMUTITypeForFilename()
{
  return MEMORY[0x1E0D394D8]();
}

uint64_t IMUTTypeIsImage()
{
  return MEMORY[0x1E0D39520]();
}

uint64_t IMUpdatePreferredAccountForService()
{
  return MEMORY[0x1E0D36908]();
}

uint64_t IMUpdateTransferConstraintAndSizeKeys()
{
  return MEMORY[0x1E0D39578]();
}

uint64_t IMWeakLinkClass()
{
  return MEMORY[0x1E0D36970]();
}

uint64_t IMWeakLinkSymbol()
{
  return MEMORY[0x1E0D36978]();
}

uint64_t IMiMessageMaxFileSizeForUTI()
{
  return MEMORY[0x1E0D369A0]();
}

uint64_t IMiMessageShouldSendLowResolutionOnly()
{
  return MEMORY[0x1E0D369B8]();
}

uint64_t IMiMessageSizeLimitsForTransferType()
{
  return MEMORY[0x1E0D369C0]();
}

uint64_t JWDecodeCodableObjectWithStandardAllowlist()
{
  return MEMORY[0x1E0D369D8]();
}

uint64_t JWDecodeDictionary()
{
  return MEMORY[0x1E0D369E0]();
}

uint64_t JWEncodeCodableObject()
{
  return MEMORY[0x1E0D369E8]();
}

uint64_t JWEncodeDictionary()
{
  return MEMORY[0x1E0D369F0]();
}

uint64_t JWUUIDPushObjectToString()
{
  return MEMORY[0x1E0D369F8]();
}

uint64_t MGGetStringAnswer()
{
  return MEMORY[0x1E0DE2B80]();
}

uint64_t MarcoLoggingStringForMessageData()
{
  return MEMORY[0x1E0D47420]();
}

uint64_t NSBOOLFromString()
{
  return MEMORY[0x1E0CB2888]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

NSString *NSHomeDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB2C00]();
}

uint64_t NSStringFromBOOL()
{
  return MEMORY[0x1E0CB31F8]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

uint64_t OSLogHandleForIMEventCategory()
{
  return MEMORY[0x1E0D36B30]();
}

uint64_t OSLogHandleForIMFoundationCategory()
{
  return MEMORY[0x1E0D36B38]();
}

uint64_t SpotlightDaemonClientRegister()
{
  return MEMORY[0x1E0DA9C70]();
}

uint64_t StringGUID()
{
  return MEMORY[0x1E0D36B50]();
}

uint64_t TUHandlesAreCanonicallyEqual()
{
  return MEMORY[0x1E0DBD638]();
}

Boolean UTTypeConformsTo(CFStringRef inUTI, CFStringRef inConformsToUTI)
{
  return MEMORY[0x1E0CA5940](inUTI, inConformsToUTI);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_assign(void *a1, const void *a2, const int a3)
{
  MEMORY[0x1E0C80940](a1, a2, *(_QWORD *)&a3);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFPreferencesFlushCachesForIdentifier()
{
  return MEMORY[0x1E0C9A328]();
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return MEMORY[0x1E0C9A800]();
}

uint64_t _FTAreIDsEquivalent()
{
  return MEMORY[0x1E0D20C38]();
}

uint64_t _FZErrorTypeFromNSError()
{
  return MEMORY[0x1E0D20C40]();
}

uint64_t _IDSCopyCallerID()
{
  return MEMORY[0x1E0D34EE0]();
}

uint64_t _IMAlwaysLog()
{
  return MEMORY[0x1E0D36B60]();
}

uint64_t _IMDAttachmentRecordBulkCopy()
{
  return MEMORY[0x1E0D36138]();
}

uint64_t _IMDChatRecordBulkCopy()
{
  return MEMORY[0x1E0D36148]();
}

uint64_t _IMDCoreSpotlightIsKnownContact()
{
  return MEMORY[0x1E0D36150]();
}

uint64_t _IMStringFromFZCapabilities()
{
  return MEMORY[0x1E0D36B98]();
}

uint64_t _IMWarn()
{
  return MEMORY[0x1E0D36BA8]();
}

uint64_t _IMWillLog()
{
  return MEMORY[0x1E0D36BB0]();
}

uint64_t _MessageGUIDToSignpostId()
{
  return MEMORY[0x1E0D39BC0]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x1E0C80AC8](a1);
  return result;
}

uint64_t _iMessageTelemetryLogHandle()
{
  return MEMORY[0x1E0D39BC8]();
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x1E0DE7960]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x1E0DE7970]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1E0C80FC0](dso, description, activity, *(_QWORD *)&flags);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _signpostSendMessage()
{
  return MEMORY[0x1E0D39BD8]();
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x1E0C81570]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1E0C81588](*(_QWORD *)&__upper_bound);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x1E0DE7AA8](cls, name);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BF8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

void dispatch_barrier_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C48](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D10](group, queue, block);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D38](group, queue, block);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

void dispatch_release(dispatch_object_t object)
{
  MEMORY[0x1E0C82E98](object);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

dispatch_workloop_t dispatch_workloop_create(const char *label)
{
  return (dispatch_workloop_t)MEMORY[0x1E0C82FD8](label);
}

void exit(int a1)
{
  MEMORY[0x1E0C83278](*(_QWORD *)&a1);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

int fsctl(const char *a1, unint64_t a2, void *a3, unsigned int a4)
{
  return MEMORY[0x1E0C83528](a1, a2, a3, *(_QWORD *)&a4);
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x1E0C83660](a1);
}

uid_t geteuid(void)
{
  return MEMORY[0x1E0C83668]();
}

passwd *__cdecl getpwuid(uid_t a1)
{
  return (passwd *)MEMORY[0x1E0C837A0](*(_QWORD *)&a1);
}

uid_t getuid(void)
{
  return MEMORY[0x1E0C83828]();
}

uint64_t im_checkpointIDSService()
{
  return MEMORY[0x1E0D39BE8]();
}

uint64_t im_dispatch_after()
{
  return MEMORY[0x1E0D36BB8]();
}

uint64_t im_primary_queue()
{
  return MEMORY[0x1E0D36BF0]();
}

uint64_t im_sendCertifiedDeliveryReceiptIfPossible()
{
  return MEMORY[0x1E0D39BF0]();
}

uint64_t im_sendMessageCheckpointIfNecessary()
{
  return MEMORY[0x1E0D39BF8]();
}

uint64_t kdebug_trace()
{
  return MEMORY[0x1E0C83A20]();
}

long double log10(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BC0](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1E0C843F8](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x1E0C84400](name, out_token);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return MEMORY[0x1E0C84428](*(_QWORD *)&token, state64);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_rethrow(void)
{
  MEMORY[0x1E0DE7C98]();
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeak(id *location)
{
  return (id)MEMORY[0x1E0DE7D00](location);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F98](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

void objc_terminate(void)
{
  MEMORY[0x1E0DE7FD8]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84510](activity, state);
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84518](state);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1E0C84928](log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t pthread_dependency_fulfill_np()
{
  return MEMORY[0x1E0C84D60]();
}

uint64_t pthread_dependency_init_np()
{
  return MEMORY[0x1E0C84D68]();
}

uint64_t pthread_dependency_wait_np()
{
  return MEMORY[0x1E0C84D70]();
}

uint64_t pthread_main_thread_np()
{
  return MEMORY[0x1E0C84E10]();
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E28](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E38](a1);
}

qos_class_t qos_class_self(void)
{
  return MEMORY[0x1E0C84F80]();
}

uint64_t sandbox_check_by_audit_token()
{
  return MEMORY[0x1E0C85180]();
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1E0C851A0]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x1E0C851F8]();
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x1E0DF0F98]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1E0DEEBB0]();
}

uint64_t swift_dynamicCastObjCProtocolUnconditional()
{
  return MEMORY[0x1E0DEEBC0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return (xpc_object_t)MEMORY[0x1E0C85D80](activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85D90](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
  MEMORY[0x1E0C85D98](identifier, criteria, handler);
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
  MEMORY[0x1E0C85DB0](activity, criteria);
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x1E0C85DB8](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85DC8](activity);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C86208](keys, values, count);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1E0C862C8](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C862E0](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x1E0C86310](xdict, key, value);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x1E0C86360](xdict, key, value);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x1E0C86390](xdict, key, string);
}

BOOL xpc_equal(xpc_object_t object1, xpc_object_t object2)
{
  return MEMORY[0x1E0C86420](object1, object2);
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
  MEMORY[0x1E0C866E8](stream, targetq, handler);
}

