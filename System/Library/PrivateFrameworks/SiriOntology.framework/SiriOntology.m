uint64_t siri::ontology::oname::graph::ontology_init::common_Setting(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  _OWORD v4[2];
  int v5;
  _OWORD v6[2];
  int v7;
  _OWORD v8[2];
  int v9;
  _OWORD v10[2];
  int v11;
  uint64_t v12[5];
  uint64_t v13[5];
  void *v14[2];
  char v15;
  _OWORD v16[5];
  _OWORD v17[6];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(v14, "common_Setting");
    v17[2] = xmmword_1C33C0C4C;
    v17[3] = unk_1C33C0C5C;
    v17[4] = xmmword_1C33C0C6C;
    v17[5] = unk_1C33C0C7C;
    v17[0] = xmmword_1C33C0C2C;
    v17[1] = unk_1C33C0C3C;
    std::unordered_map<int,int>::unordered_map(v13, (int *)v17, 12);
    v16[2] = xmmword_1C33C0CAC;
    v16[3] = unk_1C33C0CBC;
    v16[4] = xmmword_1C33C0CCC;
    v16[0] = xmmword_1C33C0C8C;
    v16[1] = unk_1C33C0C9C;
    std::unordered_set<int>::unordered_set((uint64_t)v12, (int *)v16, 20);
    memset(v10, 0, sizeof(v10));
    v11 = 1065353216;
    memset(v8, 0, sizeof(v8));
    v9 = 1065353216;
    memset(v6, 0, sizeof(v6));
    v7 = 1065353216;
    memset(v4, 0, sizeof(v4));
    v5 = 1065353216;
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 1881, 2, (uint64_t *)v14, v13, v12, (uint64_t *)v10, (uint64_t *)v8, (uint64_t *)v6, (uint64_t *)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v6);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v8);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v10);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v12);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v13);
    if (v15 < 0)
      operator delete(v14[0]);
    siri::ontology::oname::graph::ontology_init::common_Setting(void)::common_Setting = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_Setting(void)::common_Setting;
}

void sub_1C2FD6D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;
  uint64_t v40;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a34);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a39);
  if (*(char *)(v40 - 225) < 0)
    operator delete(*(void **)(v40 - 248));
  MEMORY[0x1C3BD1618](v39, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Window(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  _OWORD v4[2];
  int v5;
  _OWORD v6[2];
  int v7;
  _OWORD v8[2];
  int v9;
  _OWORD v10[2];
  int v11;
  uint64_t v12[5];
  uint64_t v13[5];
  void *v14[2];
  char v15;
  __int128 v16;
  _OWORD v17[4];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(v14, "common_Window");
    v18 = 0x4B6000004F4;
    v17[0] = xmmword_1C33C1284;
    v17[1] = unk_1C33C1294;
    v17[2] = xmmword_1C33C12A4;
    v17[3] = unk_1C33C12B4;
    std::unordered_map<int,int>::unordered_map(v13, (int *)v17, 9);
    v16 = xmmword_1C33C3540;
    std::unordered_set<int>::unordered_set((uint64_t)v12, (int *)&v16, 4);
    memset(v10, 0, sizeof(v10));
    v11 = 1065353216;
    memset(v8, 0, sizeof(v8));
    v9 = 1065353216;
    memset(v6, 0, sizeof(v6));
    v7 = 1065353216;
    memset(v4, 0, sizeof(v4));
    v5 = 1065353216;
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 2517, 2, (uint64_t *)v14, v13, v12, (uint64_t *)v10, (uint64_t *)v8, (uint64_t *)v6, (uint64_t *)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v6);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v8);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v10);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v12);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v13);
    if (v15 < 0)
      operator delete(v14[0]);
    siri::ontology::oname::graph::ontology_init::common_Window(void)::common_Window = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_Window(void)::common_Window;
}

void sub_1C2FD6F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;
  uint64_t v35;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a34);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v35 - 192);
  if (*(char *)(v35 - 129) < 0)
    operator delete(*(void **)(v35 - 152));
  MEMORY[0x1C3BD1618](v34, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SearchObject(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  _OWORD v4[2];
  int v5;
  _OWORD v6[2];
  int v7;
  _OWORD v8[2];
  int v9;
  _OWORD v10[2];
  int v11;
  uint64_t v12[5];
  uint64_t v13[5];
  void *v14[2];
  char v15;
  uint64_t v16;
  _OWORD v17[5];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(v14, "common_SearchObject");
    v17[2] = xmmword_1C33C136C;
    v17[3] = unk_1C33C137C;
    v17[4] = xmmword_1C33C138C;
    v17[0] = xmmword_1C33C134C;
    v17[1] = unk_1C33C135C;
    std::unordered_map<int,int>::unordered_map(v13, (int *)v17, 10);
    v16 = 0x4F600000501;
    std::unordered_set<int>::unordered_set((uint64_t)v12, (int *)&v16, 2);
    memset(v10, 0, sizeof(v10));
    v11 = 1065353216;
    memset(v8, 0, sizeof(v8));
    v9 = 1065353216;
    memset(v6, 0, sizeof(v6));
    v7 = 1065353216;
    memset(v4, 0, sizeof(v4));
    v5 = 1065353216;
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 2537, 2, (uint64_t *)v14, v13, v12, (uint64_t *)v10, (uint64_t *)v8, (uint64_t *)v6, (uint64_t *)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v6);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v8);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v10);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v12);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v13);
    if (v15 < 0)
      operator delete(v14[0]);
    siri::ontology::oname::graph::ontology_init::common_SearchObject(void)::common_SearchObject = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_SearchObject(void)::common_SearchObject;
}

void sub_1C2FD7190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;
  uint64_t v36;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a35);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v36 - 200);
  if (*(char *)(v36 - 137) < 0)
    operator delete(*(void **)(v36 - 160));
  MEMORY[0x1C3BD1618](v35, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_App(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  uint64_t v4[5];
  _OWORD v5[2];
  int v6;
  _OWORD v7[2];
  int v8;
  uint64_t v9[4];
  int v10;
  uint64_t v11[5];
  uint64_t v12[5];
  void *__p[2];
  char v14;
  uint64_t v15;
  _OWORD v16[2];
  _OWORD v17[2];
  _OWORD v18[8];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(__p, "common_App");
    v18[4] = xmmword_1C33C1208;
    v18[5] = unk_1C33C1218;
    v18[6] = xmmword_1C33C1228;
    v18[7] = unk_1C33C1238;
    v18[0] = xmmword_1C33C11C8;
    v18[1] = unk_1C33C11D8;
    v18[2] = xmmword_1C33C11E8;
    v18[3] = unk_1C33C11F8;
    std::unordered_map<int,int>::unordered_map(v12, (int *)v18, 16);
    v16[0] = xmmword_1C33C1248;
    v16[1] = unk_1C33C1258;
    v17[0] = xmmword_1C33C1268;
    *(_OWORD *)((char *)v17 + 12) = *(__int128 *)((char *)&xmmword_1C33C1268 + 12);
    std::unordered_set<int>::unordered_set((uint64_t)v11, (int *)v16, 15);
    memset(v9, 0, sizeof(v9));
    v10 = 1065353216;
    memset(v7, 0, sizeof(v7));
    v8 = 1065353216;
    memset(v5, 0, sizeof(v5));
    v6 = 1065353216;
    v15 = 0x71A00000571;
    std::unordered_map<int,int>::unordered_map(v4, (int *)&v15, 1);
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 1311, 2, (uint64_t *)__p, v12, v11, v9, (uint64_t *)v7, (uint64_t *)v5, v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v5);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v7);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v9);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v11);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v12);
    if (v14 < 0)
      operator delete(__p[0]);
    siri::ontology::oname::graph::ontology_init::common_App(void)::common_App = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_App(void)::common_App;
}

void sub_1C2FD73F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  uint64_t v50;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a12);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a35);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a40);
  if (a50 < 0)
    operator delete(__p);
  MEMORY[0x1C3BD1618](v50, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void sub_1C2FD7484()
{
  JUMPOUT(0x1C2FD7470);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Uri(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  _OWORD v4[2];
  int v5;
  _OWORD v6[2];
  int v7;
  _OWORD v8[2];
  int v9;
  int v10;
  uint64_t v11[5];
  uint64_t v12[5];
  uint64_t v13[5];
  void *v14[2];
  char v15;
  uint64_t v16;
  _OWORD v17[5];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(v14, "common_Uri");
    v17[2] = xmmword_1C33C14AC;
    v17[3] = unk_1C33C14BC;
    v17[4] = xmmword_1C33C14CC;
    v17[0] = xmmword_1C33C148C;
    v17[1] = unk_1C33C149C;
    std::unordered_map<int,int>::unordered_map(v13, (int *)v17, 10);
    v16 = 0x4F600000501;
    std::unordered_set<int>::unordered_set((uint64_t)v12, (int *)&v16, 2);
    v10 = 1293;
    std::unordered_set<int>::unordered_set((uint64_t)v11, &v10, 1);
    memset(v8, 0, sizeof(v8));
    v9 = 1065353216;
    memset(v6, 0, sizeof(v6));
    v7 = 1065353216;
    memset(v4, 0, sizeof(v4));
    v5 = 1065353216;
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 1800, 2, (uint64_t *)v14, v13, v12, v11, (uint64_t *)v8, (uint64_t *)v6, (uint64_t *)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v6);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v8);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v11);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v12);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v13);
    if (v15 < 0)
      operator delete(v14[0]);
    siri::ontology::oname::graph::ontology_init::common_Uri(void)::common_Uri = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_Uri(void)::common_Uri;
}

void sub_1C2FD763C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;
  uint64_t v36;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a35);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v36 - 200);
  if (*(char *)(v36 - 137) < 0)
    operator delete(*(void **)(v36 - 160));
  MEMORY[0x1C3BD1618](v35, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void sub_1C2FD76CC()
{
  JUMPOUT(0x1C2FD76B8);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_PhoneNumber(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  _OWORD v4[2];
  int v5;
  _OWORD v6[2];
  int v7;
  _OWORD v8[2];
  int v9;
  int v10;
  uint64_t v11[5];
  uint64_t v12[5];
  uint64_t v13[5];
  void *v14[2];
  char v15;
  uint64_t v16;
  _OWORD v17[5];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(v14, "common_PhoneNumber");
    v17[2] = xmmword_1C33C14AC;
    v17[3] = unk_1C33C14BC;
    v17[4] = xmmword_1C33C14CC;
    v17[0] = xmmword_1C33C148C;
    v17[1] = unk_1C33C149C;
    std::unordered_map<int,int>::unordered_map(v13, (int *)v17, 10);
    v16 = 0x4F600000501;
    std::unordered_set<int>::unordered_set((uint64_t)v12, (int *)&v16, 2);
    v10 = 1293;
    std::unordered_set<int>::unordered_set((uint64_t)v11, &v10, 1);
    memset(v8, 0, sizeof(v8));
    v9 = 1065353216;
    memset(v6, 0, sizeof(v6));
    v7 = 1065353216;
    memset(v4, 0, sizeof(v4));
    v5 = 1065353216;
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 1336, 2, (uint64_t *)v14, v13, v12, v11, (uint64_t *)v8, (uint64_t *)v6, (uint64_t *)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v6);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v8);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v11);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v12);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v13);
    if (v15 < 0)
      operator delete(v14[0]);
    siri::ontology::oname::graph::ontology_init::common_PhoneNumber(void)::common_PhoneNumber = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_PhoneNumber(void)::common_PhoneNumber;
}

void sub_1C2FD7884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;
  uint64_t v36;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a35);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v36 - 200);
  if (*(char *)(v36 - 137) < 0)
    operator delete(*(void **)(v36 - 160));
  MEMORY[0x1C3BD1618](v35, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void sub_1C2FD7914()
{
  JUMPOUT(0x1C2FD7900);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_UserEntity(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  uint64_t v4[5];
  _OWORD v5[2];
  int v6;
  uint64_t v7[5];
  uint64_t v8[4];
  int v9;
  uint64_t v10[5];
  uint64_t v11[5];
  void *__p[2];
  char v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  int v17;
  _OWORD v18[2];
  _OWORD v19[2];
  _OWORD v20[4];
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(__p, "common_UserEntity");
    v21 = 0x4B6000004F4;
    v20[0] = xmmword_1C33BD2E8;
    v20[1] = unk_1C33BD2F8;
    v20[2] = xmmword_1C33BD308;
    v20[3] = unk_1C33BD318;
    std::unordered_map<int,int>::unordered_map(v11, (int *)v20, 9);
    v18[0] = xmmword_1C33BD330;
    v18[1] = unk_1C33BD340;
    v19[0] = xmmword_1C33BD350;
    *(_OWORD *)((char *)v19 + 12) = *(__int128 *)((char *)&xmmword_1C33BD350 + 12);
    std::unordered_set<int>::unordered_set((uint64_t)v10, (int *)v18, 15);
    memset(v8, 0, sizeof(v8));
    v9 = 1065353216;
    v16 = xmmword_1C33BD36C;
    v17 = 2554;
    std::unordered_set<int>::unordered_set((uint64_t)v7, (int *)&v16, 5);
    memset(v5, 0, sizeof(v5));
    v6 = 1065353216;
    v14 = xmmword_1C33BD380;
    v15 = 0xA2000000571;
    std::unordered_map<int,int>::unordered_map(v4, (int *)&v14, 3);
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 2532, 2, (uint64_t *)__p, v11, v10, v8, v7, (uint64_t *)v5, v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v5);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v7);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v8);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v10);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v11);
    if (v13 < 0)
      operator delete(__p[0]);
    siri::ontology::oname::graph::ontology_init::common_UserEntity(void)::common_UserEntity = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_UserEntity(void)::common_UserEntity;
}

void sub_1C2FD7B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  uint64_t v47;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a12);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a22);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a27);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a32);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a37);
  if (a47 < 0)
    operator delete(__p);
  MEMORY[0x1C3BD1618](v47, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void sub_1C2FD7BC4()
{
  JUMPOUT(0x1C2FD7BB0);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Person(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  uint64_t v4[5];
  _OWORD v5[2];
  int v6;
  uint64_t v7[5];
  int v8;
  uint64_t v9[5];
  uint64_t v10[5];
  uint64_t v11[5];
  void *__p[2];
  char v13;
  __int128 v14;
  uint64_t v15;
  _OWORD v16[3];
  uint64_t v17;
  _OWORD v18[9];
  uint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(__p, "common_Person");
    v19 = 0x4B6000004F4;
    v18[6] = xmmword_1C33C0704;
    v18[7] = unk_1C33C0714;
    v18[8] = xmmword_1C33C0724;
    v18[2] = xmmword_1C33C06C4;
    v18[3] = unk_1C33C06D4;
    v18[4] = xmmword_1C33C06E4;
    v18[5] = unk_1C33C06F4;
    v18[0] = xmmword_1C33C06A4;
    v18[1] = unk_1C33C06B4;
    std::unordered_map<int,int>::unordered_map(v11, (int *)v18, 19);
    v17 = 0x57D0000057CLL;
    v16[0] = xmmword_1C33C073C;
    v16[1] = unk_1C33C074C;
    v16[2] = xmmword_1C33C075C;
    std::unordered_set<int>::unordered_set((uint64_t)v10, (int *)v16, 14);
    v8 = 1287;
    std::unordered_set<int>::unordered_set((uint64_t)v9, &v8, 1);
    v15 = 0x56E000007C5;
    std::unordered_set<int>::unordered_set((uint64_t)v7, (int *)&v15, 2);
    memset(v5, 0, sizeof(v5));
    v6 = 1065353216;
    v14 = xmmword_1C33C35C0;
    std::unordered_map<int,int>::unordered_map(v4, (int *)&v14, 2);
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 1332, 2, (uint64_t *)__p, v11, v10, v9, v7, (uint64_t *)v5, v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v5);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v7);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v9);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v10);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v11);
    if (v13 < 0)
      operator delete(__p[0]);
    siri::ontology::oname::graph::ontology_init::common_Person(void)::common_Person = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_Person(void)::common_Person;
}

void sub_1C2FD7DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  uint64_t v49;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a12);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a34);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a39);
  if (a49 < 0)
    operator delete(__p);
  MEMORY[0x1C3BD1618](v49, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void sub_1C2FD7E7C()
{
  JUMPOUT(0x1C2FD7E68);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Group(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  uint64_t v4[5];
  _OWORD v5[2];
  int v6;
  int v7;
  uint64_t v8[5];
  int v9;
  uint64_t v10[5];
  uint64_t v11[5];
  uint64_t v12[5];
  void *v13[2];
  char v14;
  __int128 v15;
  _OWORD v16[2];
  int v17;
  _OWORD v18[5];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(v13, "common_Group");
    v18[2] = xmmword_1C33C1670;
    v18[3] = unk_1C33C1680;
    v18[4] = xmmword_1C33C1690;
    v18[0] = xmmword_1C33C1650;
    v18[1] = unk_1C33C1660;
    std::unordered_map<int,int>::unordered_map(v12, (int *)v18, 10);
    v17 = 1405;
    v16[0] = xmmword_1C33C16A0;
    v16[1] = unk_1C33C16B0;
    std::unordered_set<int>::unordered_set((uint64_t)v11, (int *)v16, 9);
    v9 = 1287;
    std::unordered_set<int>::unordered_set((uint64_t)v10, &v9, 1);
    v7 = 2521;
    std::unordered_set<int>::unordered_set((uint64_t)v8, &v7, 1);
    memset(v5, 0, sizeof(v5));
    v6 = 1065353216;
    v15 = xmmword_1C33C3610;
    std::unordered_map<int,int>::unordered_map(v4, (int *)&v15, 2);
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 1552, 2, (uint64_t *)v13, v12, v11, v10, v8, (uint64_t *)v5, v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v5);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v8);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v10);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v11);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v12);
    if (v14 < 0)
      operator delete(v13[0]);
    siri::ontology::oname::graph::ontology_init::common_Group(void)::common_Group = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_Group(void)::common_Group;
}

void sub_1C2FD8068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;
  uint64_t v40;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a12);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a34);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a39);
  if (*(char *)(v40 - 193) < 0)
    operator delete(*(void **)(v40 - 216));
  MEMORY[0x1C3BD1618](v39, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void sub_1C2FD8108()
{
  JUMPOUT(0x1C2FD80F4);
}

uint64_t std::unordered_set<int>::unordered_set(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    v5 = 4 * a3;
    do
    {
      std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(a1, *a2, *a2);
      ++a2;
      v5 -= 4;
    }
    while (v5);
  }
  return a1;
}

void sub_1C2FD8170(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(uint64_t a1, int a2, int a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  uint64_t **v9;
  uint64_t *i;
  unint64_t v11;
  _QWORD *v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v6 = a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      for (i = *v9; i; i = (uint64_t *)*i)
      {
        v11 = i[1];
        if (v11 == a2)
        {
          if (*((_DWORD *)i + 4) == a2)
            return;
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7)
              v11 %= v7;
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3)
            break;
        }
      }
    }
  }
  v12 = operator new(0x18uLL);
  *v12 = 0;
  v12[1] = v6;
  *((_DWORD *)v12 + 4) = a3;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v7 || (float)(v14 * (float)v7) < v13)
  {
    v15 = 1;
    if (v7 >= 3)
      v15 = (v7 & (v7 - 1)) != 0;
    v16 = v15 | (2 * v7);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__rehash<true>(a1, v18);
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6)
        v3 = v6 % v7;
      else
        v3 = v6;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v20)
  {
    *v12 = *v20;
LABEL_38:
    *v20 = v12;
    goto LABEL_39;
  }
  *v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(v19 + 8 * v3) = a1 + 16;
  if (*v12)
  {
    v21 = *(_QWORD *)(*v12 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v21 >= v7)
        v21 %= v7;
    }
    else
    {
      v21 &= v7 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
}

void sub_1C2FD8374(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::unordered_map<int,int>::unordered_map(uint64_t *a1, int *a2, uint64_t a3)
{
  unint64_t v3;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int *v9;
  unint64_t v10;
  uint8x8_t v11;
  uint64_t **v12;
  uint64_t *i;
  unint64_t v14;
  _QWORD *v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  int8x8_t prime;
  void *v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint8x8_t v27;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  void *v36;

  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_DWORD *)a1 + 8) = 1065353216;
  if (a3)
  {
    v5 = a2;
    v6 = 0;
    v7 = 0;
    v8 = a1 + 2;
    v9 = &a2[2 * a3];
    while (1)
    {
      v10 = *v5;
      if (v6)
      {
        v11 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
        v11.i16[0] = vaddlv_u8(v11);
        if (v11.u32[0] > 1uLL)
        {
          v3 = *v5;
          if (v6 <= v10)
            v3 = v10 % v6;
        }
        else
        {
          v3 = (v6 - 1) & v10;
        }
        v12 = *(uint64_t ***)(*a1 + 8 * v3);
        if (v12)
        {
          for (i = *v12; i; i = (uint64_t *)*i)
          {
            v14 = i[1];
            if (v14 == v10)
            {
              if (*((_DWORD *)i + 4) == (_DWORD)v10)
                goto LABEL_75;
            }
            else
            {
              if (v11.u32[0] > 1uLL)
              {
                if (v14 >= v6)
                  v14 %= v6;
              }
              else
              {
                v14 &= v6 - 1;
              }
              if (v14 != v3)
                break;
            }
          }
        }
      }
      v15 = operator new(0x18uLL);
      *v15 = 0;
      v15[1] = v10;
      v15[2] = *(_QWORD *)v5;
      v16 = (float)(unint64_t)(v7 + 1);
      v17 = *((float *)a1 + 8);
      if (!v6 || (float)(v17 * (float)v6) < v16)
        break;
LABEL_65:
      v33 = *a1;
      v34 = *(_QWORD **)(*a1 + 8 * v3);
      if (v34)
      {
        *v15 = *v34;
      }
      else
      {
        *v15 = *v8;
        *v8 = v15;
        *(_QWORD *)(v33 + 8 * v3) = v8;
        if (!*v15)
          goto LABEL_74;
        v35 = *(_QWORD *)(*v15 + 8);
        if ((v6 & (v6 - 1)) != 0)
        {
          if (v35 >= v6)
            v35 %= v6;
        }
        else
        {
          v35 &= v6 - 1;
        }
        v34 = (_QWORD *)(*a1 + 8 * v35);
      }
      *v34 = v15;
LABEL_74:
      v7 = a1[3] + 1;
      a1[3] = v7;
LABEL_75:
      v5 += 2;
      if (v5 == v9)
        return a1;
    }
    v18 = (v6 & (v6 - 1)) != 0;
    if (v6 < 3)
      v18 = 1;
    v19 = v18 | (2 * v6);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      prime = (int8x8_t)v20;
    else
      prime = (int8x8_t)v19;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v6 = a1[1];
    }
    if (*(_QWORD *)&prime > v6)
      goto LABEL_31;
    if (*(_QWORD *)&prime < v6)
    {
      v28 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v6 < 3 || (v29 = (uint8x8_t)vcnt_s8((int8x8_t)v6), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (*(_QWORD *)&prime <= v28)
        prime = (int8x8_t)v28;
      if (*(_QWORD *)&prime >= v6)
      {
        v6 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_31:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v22 = operator new(8 * *(_QWORD *)&prime);
          v23 = (void *)*a1;
          *a1 = (uint64_t)v22;
          if (v23)
            operator delete(v23);
          v24 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(_QWORD *)(*a1 + 8 * v24++) = 0;
          while (*(_QWORD *)&prime != v24);
          v25 = (_QWORD *)*v8;
          if (*v8)
          {
            v26 = v25[1];
            v27 = (uint8x8_t)vcnt_s8(prime);
            v27.i16[0] = vaddlv_u8(v27);
            if (v27.u32[0] > 1uLL)
            {
              if (v26 >= *(_QWORD *)&prime)
                v26 %= *(_QWORD *)&prime;
            }
            else
            {
              v26 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*a1 + 8 * v26) = v8;
            v31 = (_QWORD *)*v25;
            if (*v25)
            {
              do
              {
                v32 = v31[1];
                if (v27.u32[0] > 1uLL)
                {
                  if (v32 >= *(_QWORD *)&prime)
                    v32 %= *(_QWORD *)&prime;
                }
                else
                {
                  v32 &= *(_QWORD *)&prime - 1;
                }
                if (v32 != v26)
                {
                  if (!*(_QWORD *)(*a1 + 8 * v32))
                  {
                    *(_QWORD *)(*a1 + 8 * v32) = v25;
                    goto LABEL_56;
                  }
                  *v25 = *v31;
                  *v31 = **(_QWORD **)(*a1 + 8 * v32);
                  **(_QWORD **)(*a1 + 8 * v32) = v31;
                  v31 = v25;
                }
                v32 = v26;
LABEL_56:
                v25 = v31;
                v31 = (_QWORD *)*v31;
                v26 = v32;
              }
              while (v31);
            }
          }
          v6 = (unint64_t)prime;
          goto LABEL_60;
        }
        v36 = (void *)*a1;
        *a1 = 0;
        if (v36)
          operator delete(v36);
        v6 = 0;
        a1[1] = 0;
      }
    }
LABEL_60:
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v6 <= v10)
        v3 = v10 % v6;
      else
        v3 = v10;
    }
    else
    {
      v3 = (v6 - 1) & v10;
    }
    goto LABEL_65;
  }
  return a1;
}

void sub_1C2FD8788(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;

  operator delete(v2);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItem(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  uint64_t v4[5];
  _OWORD v5[2];
  int v6;
  _OWORD v7[2];
  int v8;
  uint64_t v9[4];
  int v10;
  uint64_t v11[5];
  uint64_t v12[5];
  void *__p[2];
  char v14;
  uint64_t v15;
  _OWORD v16[7];
  uint64_t v17;
  _OWORD v18[9];
  uint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(__p, "common_MediaItem");
    v19 = 0x4B6000004F4;
    v18[6] = xmmword_1C33C1148;
    v18[7] = unk_1C33C1158;
    v18[8] = xmmword_1C33C1168;
    v18[2] = xmmword_1C33C1108;
    v18[3] = unk_1C33C1118;
    v18[4] = xmmword_1C33C1128;
    v18[5] = unk_1C33C1138;
    v18[0] = xmmword_1C33C10E8;
    v18[1] = unk_1C33C10F8;
    std::unordered_map<int,int>::unordered_map(v12, (int *)v18, 19);
    v17 = 0x57D0000057BLL;
    v16[4] = xmmword_1C33C1618;
    v16[5] = unk_1C33C1628;
    v16[6] = xmmword_1C33C1638;
    v16[0] = xmmword_1C33C15D8;
    v16[1] = unk_1C33C15E8;
    v16[2] = xmmword_1C33C15F8;
    v16[3] = unk_1C33C1608;
    std::unordered_set<int>::unordered_set((uint64_t)v11, (int *)v16, 30);
    memset(v9, 0, sizeof(v9));
    v10 = 1065353216;
    memset(v7, 0, sizeof(v7));
    v8 = 1065353216;
    memset(v5, 0, sizeof(v5));
    v6 = 1065353216;
    v15 = 0x71700000B5ALL;
    std::unordered_map<int,int>::unordered_map(v4, (int *)&v15, 1);
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 1815, 2, (uint64_t *)__p, v12, v11, v9, (uint64_t *)v7, (uint64_t *)v5, v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v5);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v7);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v9);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v11);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v12);
    if (v14 < 0)
      operator delete(__p[0]);
    siri::ontology::oname::graph::ontology_init::common_MediaItem(void)::common_MediaItem = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItem(void)::common_MediaItem;
}

void sub_1C2FD89F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  uint64_t v50;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a12);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a35);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a40);
  if (a50 < 0)
    operator delete(__p);
  MEMORY[0x1C3BD1618](v50, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void sub_1C2FD8A84()
{
  JUMPOUT(0x1C2FD8A70);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_LocalisedString(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  uint64_t v4[5];
  _OWORD v5[2];
  int v6;
  _OWORD v7[2];
  int v8;
  uint64_t v9[4];
  int v10;
  uint64_t v11[5];
  uint64_t v12[5];
  void *v13[2];
  char v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[6];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(v13, "common_LocalisedString");
    v17[2] = xmmword_1C33BE9DC;
    v17[3] = unk_1C33BE9EC;
    v17[4] = xmmword_1C33BE9FC;
    v17[5] = unk_1C33BEA0C;
    v17[0] = xmmword_1C33BE9BC;
    v17[1] = unk_1C33BE9CC;
    std::unordered_map<int,int>::unordered_map(v12, (int *)v17, 12);
    v16 = 0x4F600000501;
    std::unordered_set<int>::unordered_set((uint64_t)v11, (int *)&v16, 2);
    memset(v9, 0, sizeof(v9));
    v10 = 1065353216;
    memset(v7, 0, sizeof(v7));
    v8 = 1065353216;
    memset(v5, 0, sizeof(v5));
    v6 = 1065353216;
    v15 = 0x4B600000571;
    std::unordered_map<int,int>::unordered_map(v4, (int *)&v15, 1);
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 1299, 2, (uint64_t *)v13, v12, v11, v9, (uint64_t *)v7, (uint64_t *)v5, v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v5);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v7);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v9);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v11);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v12);
    if (v14 < 0)
      operator delete(v13[0]);
    siri::ontology::oname::graph::ontology_init::common_LocalisedString(void)::common_LocalisedString = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_LocalisedString(void)::common_LocalisedString;
}

void sub_1C2FD8C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;
  uint64_t v35;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a12);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a34);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v35 - 224);
  if (*(char *)(v35 - 161) < 0)
    operator delete(*(void **)(v35 - 184));
  MEMORY[0x1C3BD1618](v34, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void sub_1C2FD8CD4()
{
  JUMPOUT(0x1C2FD8CC0);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_EmailAddress(siri::ontology::oname::graph::ontology_init *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  _OWORD v4[2];
  int v5;
  _OWORD v6[2];
  int v7;
  _OWORD v8[2];
  int v9;
  int v10;
  uint64_t v11[5];
  uint64_t v12[5];
  uint64_t v13[5];
  void *v14[2];
  char v15;
  uint64_t v16;
  _OWORD v17[5];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    std::string::basic_string[abi:ne180100]<0>(v14, "common_EmailAddress");
    v17[2] = xmmword_1C33C14AC;
    v17[3] = unk_1C33C14BC;
    v17[4] = xmmword_1C33C14CC;
    v17[0] = xmmword_1C33C148C;
    v17[1] = unk_1C33C149C;
    std::unordered_map<int,int>::unordered_map(v13, (int *)v17, 10);
    v16 = 0x4F600000501;
    std::unordered_set<int>::unordered_set((uint64_t)v12, (int *)&v16, 2);
    v10 = 1293;
    std::unordered_set<int>::unordered_set((uint64_t)v11, &v10, 1);
    memset(v8, 0, sizeof(v8));
    v9 = 1065353216;
    memset(v6, 0, sizeof(v6));
    v7 = 1065353216;
    memset(v4, 0, sizeof(v4));
    v5 = 1065353216;
    siri::ontology::OntologyNodeName::OntologyNodeName(v3, 1327, 2, (uint64_t *)v14, v13, v12, v11, (uint64_t *)v8, (uint64_t *)v6, (uint64_t *)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v4);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v6);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v8);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v11);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v12);
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v13);
    if (v15 < 0)
      operator delete(v14[0]);
    siri::ontology::oname::graph::ontology_init::common_EmailAddress(void)::common_EmailAddress = v3;
  }
  return siri::ontology::oname::graph::ontology_init::common_EmailAddress(void)::common_EmailAddress;
}

void sub_1C2FD8E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;
  uint64_t v36;

  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a35);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v36 - 200);
  if (*(char *)(v36 - 137) < 0)
    operator delete(*(void **)(v36 - 160));
  MEMORY[0x1C3BD1618](v35, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void sub_1C2FD8F1C()
{
  JUMPOUT(0x1C2FD8F08);
}

uint64_t siri::ontology::OntologyNodeName::OntologyNodeName(uint64_t a1, int a2, int a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, uint64_t *a8, uint64_t *a9, uint64_t *a10)
{
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t *v17;
  int v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64x2_t v31;
  int v32;
  size_t v33;
  char *v34;
  uint64_t v35;
  uint64_t i;
  uint64_t v37;
  uint64_t *v38;
  _DWORD *v39;
  char *v40;
  uint64_t j;
  uint64_t k;
  _BYTE v44[24];
  uint64_t v45;
  _QWORD v46[5];
  _DWORD v47[10];
  _DWORD v48[10];
  _BYTE v49[24];
  int v50;
  _DWORD v51[11];
  _QWORD v52[4];

  v52[2] = *MEMORY[0x1E0C80C00];
  v14 = *a4;
  v52[0] = a4[1];
  *(_QWORD *)((char *)v52 + 7) = *(uint64_t *)((char *)a4 + 15);
  v15 = *((_BYTE *)a4 + 23);
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  *(_QWORD *)(a1 + 23) = *(_QWORD *)((char *)v52 + 7);
  v16 = v52[0];
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v16;
  *(_BYTE *)(a1 + 31) = v15;
  v52[0] = 0;
  *(_QWORD *)((char *)v52 + 7) = 0;
  *(_DWORD *)(a1 + 32) = a3;
  *(_DWORD *)(a1 + 36) = a2;
  *(_QWORD *)a1 = off_1E7D21740;
  std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::__hash_table((uint64_t)v49, a5);
  std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::__hash_table((uint64_t)v51, a10);
  std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::__hash_table((uint64_t)v44, a6);
  std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::__hash_table((uint64_t)v46, a7);
  std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::__hash_table((uint64_t)v47, a8);
  std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::__hash_table((uint64_t)v48, a9);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  v17 = (unint64_t *)(a1 + 40);
  v18 = v50 + v51[6];
  v19 = (void *)operator new[]();
  v20 = (unint64_t)v19;
  if (v18)
    bzero(v19, 8 * v18);
  v21 = *v17;
  *v17 = v20;
  if (v21)
  {
    MEMORY[0x1C3BD1600](v21, 0x1000C8000313F17);
    v20 = *v17;
  }
  v22 = 0;
  v23 = 1;
  do
  {
    v24 = v23;
    v26 = *(_QWORD **)&v49[40 * v22 + 16];
    v25 = *(_QWORD *)&v49[40 * v22 + 24];
    if (v26)
    {
      v27 = (_QWORD *)v20;
      do
      {
        *v27++ = v26[2];
        v26 = (_QWORD *)*v26;
      }
      while (v26);
    }
    v28 = v20 + 8 * v25;
    v29 = 126 - 2 * __clz(v25);
    if (v25)
      v30 = v29;
    else
      v30 = 0;
    std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *,false>(v20, (int *)(v20 + 8 * v25), v30, 1);
    v23 = 0;
    *(_DWORD *)(a1 + 56 + 4 * v22) = (v28 - *(_QWORD *)(a1 + 40)) >> 3;
    v22 = 1;
    v20 = v28;
  }
  while ((v24 & 1) != 0);
  v31.i64[0] = v45;
  v31.i64[1] = v46[3];
  *(int32x2_t *)v31.i8 = vmovn_s64(v31);
  v31.i64[1] = __PAIR64__(v48[6], v47[6]);
  v32 = vaddvq_s32((int32x4_t)v31);
  if (v32 < 0)
    v33 = -1;
  else
    v33 = 4 * v32;
  v34 = (char *)operator new[]();
  bzero(v34, v33);
  v35 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v34;
  if (v35)
  {
    MEMORY[0x1C3BD1600](v35, 0x1000C8052888210);
    v34 = *(char **)(a1 + 48);
  }
  for (i = 0; i != 4; ++i)
  {
    v38 = *(uint64_t **)&v44[40 * i + 16];
    v37 = *(_QWORD *)&v44[40 * i + 24];
    if (v38)
    {
      v39 = v34;
      do
      {
        *v39++ = *((_DWORD *)v38 + 4);
        v38 = (uint64_t *)*v38;
      }
      while (v38);
    }
    v40 = &v34[4 * v37];
    std::__sort<std::__less<int,int> &,int *>();
    *(_DWORD *)(a1 + 64 + 4 * i) = (unint64_t)&v40[-*(_QWORD *)(a1 + 48)] >> 2;
    v34 = v40;
  }
  for (j = 120; j != -40; j -= 40)
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&v44[j]);
  for (k = 40; k != -40; k -= 40)
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&v49[k]);
  return a1;
}

void sub_1C2FD9248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;
  uint64_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t i;
  uint64_t j;

  v33 = *(_QWORD *)(v30 + 48);
  *(_QWORD *)(v30 + 48) = 0;
  if (v33)
    MEMORY[0x1C3BD1600](v33, 0x1000C8052888210);
  v34 = *v31;
  *v31 = 0;
  if (v34)
    MEMORY[0x1C3BD1600](v34, 0x1000C8000313F17);
  for (i = 120; i != -40; i -= 40)
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)(&a10 + i));
  for (j = 40; j != -40; j -= 40)
    std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)(&a30 + j));
  *(_QWORD *)v30 = off_1E7D21768;
  if (*(char *)(v30 + 31) < 0)
    operator delete(*(void **)(v30 + 8));
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::__hash_table(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v2 = *a2;
  *a2 = 0;
  *(_QWORD *)result = v2;
  *(_QWORD *)(result + 8) = a2[1];
  a2[1] = 0;
  v5 = a2[2];
  v3 = a2 + 2;
  v4 = v5;
  *(_QWORD *)(result + 16) = v5;
  v6 = v3[1];
  *(_QWORD *)(result + 24) = v6;
  *(_DWORD *)(result + 32) = *((_DWORD *)v3 + 4);
  if (v6)
  {
    v7 = *(_QWORD *)(v4 + 8);
    v8 = *(_QWORD *)(result + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v7 %= v8;
    }
    else
    {
      v7 &= v8 - 1;
    }
    *(_QWORD *)(v2 + 8 * v7) = result + 16;
    *v3 = 0;
    v3[1] = 0;
  }
  return result;
}

unint64_t std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *,false>(unint64_t result, int *a2, uint64_t a3, char a4)
{
  int *v7;
  int *v8;
  int *i;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int *v13;
  uint64_t v14;
  int v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int *k;
  int v22;
  int v23;
  int v25;
  int v26;
  int *v27;
  int v28;
  int v29;
  BOOL v30;
  int v31;
  BOOL v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int *j;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  BOOL v45;
  int v46;
  int v47;
  int v48;
  int *v49;
  BOOL v51;
  uint64_t v52;
  int *v53;
  int *v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int *v60;
  uint64_t v61;
  int v62;
  int v63;
  int *v64;
  int64_t v65;
  int64_t v66;
  int64_t v67;
  uint64_t v68;
  int *v69;
  int v70;
  int *v71;
  int v72;
  int v73;
  int v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  int *v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int *v85;
  int v86;
  int v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  int *v102;
  int v103;
  int v104;
  int v105;
  int *v106;
  unint64_t v107;
  int v108;

  v7 = (int *)result;
LABEL_2:
  v8 = a2 - 2;
  i = v7;
  while (2)
  {
    v7 = i;
    v10 = (char *)a2 - (char *)i;
    v11 = ((char *)a2 - (char *)i) >> 3;
    switch(v11)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        v46 = *v8;
        v47 = *i;
        if (*v8 < *i || v47 >= v46 && *(a2 - 1) < i[1])
        {
          *i = v46;
          *(a2 - 2) = v47;
          v48 = i[1];
          i[1] = *(a2 - 1);
          *(a2 - 1) = v48;
        }
        return result;
      case 3uLL:
        return (unint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *>(i, i + 2, a2 - 2);
      case 4uLL:
        return (unint64_t)std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *>(i, i + 2, i + 4, a2 - 2);
      case 5uLL:
        return (unint64_t)std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *>(i, i + 2, i + 4, i + 6, a2 - 2);
      default:
        if (v10 > 191)
        {
          if (!a3)
          {
            if (i != a2)
            {
              v65 = (v11 - 2) >> 1;
              v66 = v65;
              do
              {
                v67 = v66;
                if (v65 >= v66)
                {
                  v68 = (2 * v66) | 1;
                  v69 = &i[2 * v68];
                  if (2 * v67 + 2 < (uint64_t)v11)
                  {
                    v70 = v69[2];
                    if (*v69 < v70 || v70 >= *v69 && i[2 * v68 + 1] < v69[3])
                    {
                      v69 += 2;
                      v68 = 2 * v67 + 2;
                    }
                  }
                  v71 = &i[2 * v67];
                  v72 = *v69;
                  if (*v69 >= *v71 && (*v71 < v72 || v69[1] >= i[2 * v67 + 1]))
                  {
                    result = (unint64_t)&i[2 * v67];
                    v73 = *(_DWORD *)result;
                    v74 = *(_DWORD *)(result + 4);
                    *v71 = v72;
                    *(_DWORD *)(result + 4) = v69[1];
                    if (v65 >= v68)
                    {
                      while (1)
                      {
                        v76 = 2 * v68;
                        v68 = (2 * v68) | 1;
                        v75 = &i[2 * v68];
                        v77 = v76 + 2;
                        if (v77 < (uint64_t)v11)
                        {
                          result = (unint64_t)(v75 + 2);
                          v78 = v75[2];
                          if (*v75 < v78 || v78 >= *v75 && i[2 * v68 + 1] < v75[3])
                          {
                            v75 += 2;
                            v68 = v77;
                          }
                        }
                        v79 = *v75;
                        if (*v75 < v73)
                          break;
                        if (v79 <= v73)
                        {
                          result = v75[1];
                          if ((int)result < v74)
                            break;
                        }
                        *v69 = v79;
                        v69[1] = v75[1];
                        v69 = v75;
                        if (v65 < v68)
                          goto LABEL_129;
                      }
                    }
                    v75 = v69;
LABEL_129:
                    *v75 = v73;
                    v75[1] = v74;
                  }
                }
                v66 = v67 - 1;
              }
              while (v67);
              v89 = (unint64_t)v10 >> 3;
              do
              {
                v90 = 0;
                v91 = *(_QWORD *)i;
                v92 = v89 - 2;
                if (v89 < 2)
                  v92 = v89 - 1;
                v93 = v92 >> 1;
                v94 = i;
                do
                {
                  v95 = v94;
                  v96 = v90 + 1;
                  v94 += 2 * v90 + 2;
                  v97 = 2 * v90;
                  v90 = (2 * v90) | 1;
                  v98 = v97 + 2;
                  if (v98 < v89)
                  {
                    result = v94[2];
                    if (*v94 < (int)result
                      || (int)result >= *v94 && (result = v94[3], v95[2 * v96 + 1] < (int)result))
                    {
                      v94 += 2;
                      v90 = v98;
                    }
                  }
                  *v95 = *v94;
                  v95[1] = v94[1];
                }
                while (v90 <= v93);
                if (v94 == a2 - 2)
                {
                  *(_QWORD *)v94 = v91;
                }
                else
                {
                  *v94 = *(a2 - 2);
                  v94[1] = *(a2 - 1);
                  *((_QWORD *)a2 - 1) = v91;
                  v99 = (char *)v94 - (char *)i + 8;
                  if (v99 >= 9)
                  {
                    v100 = (v99 >> 3) - 2;
                    v101 = v100 >> 1;
                    v102 = &i[2 * (v100 >> 1)];
                    v103 = *v102;
                    if (*v102 < *v94 || *v94 >= v103 && i[2 * v101 + 1] < v94[1])
                    {
                      v104 = *v94;
                      v105 = v94[1];
                      *v94 = v103;
                      v94[1] = v102[1];
                      if (v100 >= 2)
                      {
                        while (1)
                        {
                          v107 = v101 - 1;
                          v101 = (v101 - 1) >> 1;
                          v106 = &i[2 * v101];
                          v108 = *v106;
                          if (*v106 >= v104)
                          {
                            if (v108 > v104)
                              break;
                            result = i[2 * v101 + 1];
                            if ((int)result >= v105)
                              break;
                          }
                          else
                          {
                            result = v106[1];
                          }
                          *v102 = v108;
                          v102[1] = result;
                          v102 = &i[2 * v101];
                          if (v107 <= 1)
                            goto LABEL_175;
                        }
                      }
                      v106 = v102;
LABEL_175:
                      *v106 = v104;
                      v106[1] = v105;
                    }
                  }
                }
                a2 -= 2;
                v30 = v89-- <= 2;
              }
              while (!v30);
            }
            return result;
          }
          v12 = v11 >> 1;
          v13 = &i[2 * (v11 >> 1)];
          if ((unint64_t)v10 < 0x401)
          {
            result = (unint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *>(&v7[2 * (v11 >> 1)], v7, a2 - 2);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *>(v7, &v7[2 * (v11 >> 1)], a2 - 2);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *>(v7 + 2, v13 - 2, a2 - 4);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *>(v7 + 4, &v7[2 * v12 + 2], a2 - 6);
            result = (unint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *>(v13 - 2, v13, &v7[2 * v12 + 2]);
            v14 = *(_QWORD *)v7;
            *(_QWORD *)v7 = *(_QWORD *)v13;
            *(_QWORD *)v13 = v14;
          }
          --a3;
          if ((a4 & 1) == 0)
          {
            v15 = *(v7 - 2);
            if (v15 >= *v7 && (*v7 < v15 || *(v7 - 1) >= v7[1]))
            {
              v34 = *v7;
              v33 = v7[1];
              v35 = *v8;
              if (*v8 <= *v7 && (v35 < v34 || *(a2 - 1) <= v33))
              {
                for (i = v7 + 2; i < a2 && *i <= v34 && (*i < v34 || i[1] <= v33); i += 2)
                  ;
              }
              else
              {
                i = v7;
                do
                {
                  v37 = i[2];
                  i += 2;
                  v36 = v37;
                }
                while (v37 <= v34 && (v36 < v34 || i[1] <= v33));
              }
              j = a2;
              if (i < a2)
              {
                for (j = a2 - 2; v35 > v34 || v35 >= v34 && j[1] > v33; j -= 2)
                {
                  v39 = *(j - 2);
                  v35 = v39;
                }
              }
              if (i < j)
              {
                v40 = *i;
                v41 = *j;
                do
                {
                  *i = v41;
                  *j = v40;
                  v42 = i[1];
                  i[1] = j[1];
                  j[1] = v42;
                  do
                  {
                    v43 = i[2];
                    i += 2;
                    v40 = v43;
                  }
                  while (v43 <= v34 && (v40 < v34 || i[1] <= v33));
                  do
                  {
                    do
                    {
                      v44 = *(j - 2);
                      j -= 2;
                      v41 = v44;
                      v45 = v44 < v34;
                    }
                    while (v44 > v34);
                  }
                  while (!v45 && j[1] > v33);
                }
                while (i < j);
              }
              if (i - 2 != v7)
              {
                *v7 = *(i - 2);
                v7[1] = *(i - 1);
              }
              a4 = 0;
              *(i - 2) = v34;
              *(i - 1) = v33;
              continue;
            }
          }
          v16 = v7 + 2;
          v17 = *(_QWORD *)v7;
          v18 = HIDWORD(*(_QWORD *)v7);
          while (1)
          {
            v19 = *v16;
            if (*v16 >= (int)v17 && (v19 > (int)v17 || v16[1] >= (int)v18))
              break;
            v16 += 2;
          }
          if (v16 - 2 == v7)
          {
            k = a2;
            if (v16 < a2)
            {
              v23 = *v8;
              k = a2 - 2;
              if (*v8 >= (int)v17)
              {
                k = a2 - 2;
                do
                {
                  if (v23 <= (int)v17)
                  {
                    if (k[1] < (int)v18 || v16 >= k)
                      break;
                  }
                  else if (v16 >= k)
                  {
                    break;
                  }
                  v25 = *(k - 2);
                  k -= 2;
                  v23 = v25;
                }
                while (v25 >= (int)v17);
              }
            }
          }
          else
          {
            v20 = *v8;
            for (k = a2 - 2; v20 >= (int)v17 && (v20 > (int)v17 || k[1] >= (int)v18); k -= 2)
            {
              v22 = *(k - 2);
              v20 = v22;
            }
          }
          i = v16;
          if (v16 < k)
          {
            v26 = *k;
            i = v16;
            v27 = k;
            do
            {
              *i = v26;
              *v27 = v19;
              v28 = i[1];
              i[1] = v27[1];
              v27[1] = v28;
              do
              {
                do
                {
                  v29 = i[2];
                  i += 2;
                  v19 = v29;
                  v30 = v29 <= (int)v17;
                }
                while (v29 < (int)v17);
              }
              while (v30 && i[1] < (int)v18);
              do
              {
                v31 = *(v27 - 2);
                v27 -= 2;
                v26 = v31;
              }
              while (v31 >= (int)v17 && (v26 > (int)v17 || v27[1] >= (int)v18));
            }
            while (i < v27);
          }
          if (i - 2 != v7)
          {
            *v7 = *(i - 2);
            v7[1] = *(i - 1);
          }
          *(i - 2) = v17;
          *(i - 1) = v18;
          if (v16 < k)
          {
LABEL_51:
            result = std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *,false>(v7, i - 2, a3, a4 & 1);
            a4 = 0;
            continue;
          }
          v32 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *>(v7, i - 2);
          result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<int,int> *>(i, a2);
          if (!(_DWORD)result)
          {
            if (v32)
              continue;
            goto LABEL_51;
          }
          a2 = i - 2;
          if (v32)
            return result;
          goto LABEL_2;
        }
        v49 = i + 2;
        v51 = i == a2 || v49 == a2;
        if ((a4 & 1) == 0)
        {
          if (!v51)
          {
            do
            {
              v80 = v7;
              v7 = v49;
              v81 = v80[2];
              v82 = *v80;
              if (v81 < *v80 || v82 >= v81 && v80[3] < v80[1])
              {
                v83 = *v49;
                v84 = v49[1];
                do
                {
                  do
                  {
                    v85 = v80;
                    v86 = *(v80 - 2);
                    v80 -= 2;
                    v87 = v80[3];
                    v80[4] = v82;
                    v80[5] = v87;
                    v82 = v86;
                    v88 = v86 < v83;
                  }
                  while (v86 > v83);
                }
                while (!v88 && *(v85 - 1) > v84);
                *v85 = v83;
                v85[1] = v84;
              }
              v49 = v7 + 2;
            }
            while (v7 + 2 != a2);
          }
          return result;
        }
        if (v51)
          return result;
        v52 = 0;
        v53 = i;
        do
        {
          v54 = v53;
          v53 = v49;
          v55 = v54[2];
          v56 = *v54;
          if (v55 >= *v54 && (v56 < v55 || v54[3] >= v54[1]))
            goto LABEL_114;
          v58 = v54[2];
          v57 = v54[3];
          v59 = v54[1];
          v54[2] = v56;
          v53[1] = v59;
          v60 = i;
          if (v54 == i)
            goto LABEL_113;
          v61 = v52;
          while (1)
          {
            v62 = *(int *)((char *)i + v61 - 8);
            if (v62 <= v58)
              break;
            v63 = *(int *)((char *)i + v61 - 4);
LABEL_110:
            v54 -= 2;
            v64 = (int *)((char *)i + v61);
            *v64 = v62;
            v64[1] = v63;
            v61 -= 8;
            if (!v61)
            {
              v60 = i;
              goto LABEL_113;
            }
          }
          if (v62 >= v58)
          {
            v60 = (int *)((char *)i + v61);
            v63 = *(int *)((char *)i + v61 - 4);
            if (v63 <= v57)
              goto LABEL_113;
            goto LABEL_110;
          }
          v60 = v54;
LABEL_113:
          *v60 = v58;
          v60[1] = v57;
LABEL_114:
          v49 = v53 + 2;
          v52 += 8;
        }
        while (v53 + 2 != a2);
        return result;
    }
  }
}

uint64_t sub_1C2FD9CAC()
{
  return sub_1C2FD9EAC(0x6E6F697463616572, 0xEC00000065707954, (uint64_t (*)(void))sub_1C308EFC0);
}

uint64_t sub_1C2FD9CE4()
{
  return sub_1C2FDA1E4(0x6E6F697463616572, 0xEC00000065707954, (uint64_t (*)(void))sub_1C308EFC0, (uint64_t *)&unk_1EF819070);
}

uint64_t sub_1C2FD9D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1C302B1E4(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!(v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1C3378FEC();
  result = swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_14;
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = MEMORY[0x1C3BD10B4](0, v8);
LABEL_8:
    swift_bridgeObjectRelease();
    if (v10)
    {
      sub_1C30BF814();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819030);
      if (swift_dynamicCast())
        v11 = v13;
      else
        v11 = 0;
      goto LABEL_16;
    }
LABEL_15:
    v11 = 0;
LABEL_16:
    swift_release();
    return v11;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(_QWORD *)(v8 + 32);
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2FD9EAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 48);
  if (!*(_QWORD *)(v4 + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1C302B1E4(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1C3378FEC();
    result = swift_bridgeObjectRelease();
    if (v13)
      goto LABEL_5;
    goto LABEL_11;
  }
  if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_5:
  if ((v10 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C3BD10B4](0, v10);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1C30BF954();
    v12 = a3();
    swift_release();
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C2FD9FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  unint64_t v8;
  _QWORD *result;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1C302B1E4(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = (_QWORD *)swift_bridgeObjectRelease();
  if (!(v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1C3378FEC();
  result = (_QWORD *)swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_18;
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C3BD10B4](0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  v10 = sub_1C30C0098();
  if (!v10)
  {
    swift_release();
    return 0;
  }
  v11 = v10;
  if (v10[4])
  {
    swift_retain();
    sub_1C30BF814();
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819030);
  if (swift_dynamicCast())
  {
    v12 = v15;
    v13 = v16;
  }
  else
  {
    v13 = 0;
    v12 = 0;
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819038);
  result = (_QWORD *)swift_allocObject();
  result[3] = v12;
  result[4] = v13;
  result[2] = v11;
  return result;
}

uint64_t sub_1C2FDA1E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t result;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 48);
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1C302B1E4(a1, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!(v12 >> 62))
  {
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1C3378FEC();
  result = swift_bridgeObjectRelease();
  if (!v17)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_5:
  if ((v12 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C3BD10B4](0, v12);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    v14 = sub_1C30C0098();
    if (v14)
    {
      v15 = v14;
      if (v14[4])
      {
        swift_retain();
        sub_1C30BF954();
        v16 = a3();
        swift_release();
        swift_release();
        swift_release();
        if (v16)
        {
          __swift_instantiateConcreteTypeFromMangledName(a4);
          result = swift_allocObject();
          *(_QWORD *)(result + 16) = v15;
          *(_QWORD *)(result + 24) = v16;
          return result;
        }
      }
      else
      {
        swift_release();
      }
    }
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2FDA3A4()
{
  return sub_1C2FD9EAC(0x7265626D756ELL, 0xE600000000000000, (uint64_t (*)(void))sub_1C308EFD8);
}

uint64_t sub_1C2FDA3D0()
{
  return sub_1C2FDA1E4(0x7265626D756ELL, 0xE600000000000000, (uint64_t (*)(void))sub_1C308EFD8, &qword_1EF819058);
}

uint64_t sub_1C2FDA408()
{
  return sub_1C2FD9EAC(0x656C69666F7270, 0xE700000000000000, (uint64_t (*)(void))sub_1C308EFE4);
}

uint64_t sub_1C2FDA438()
{
  return sub_1C2FDA1E4(0x656C69666F7270, 0xE700000000000000, (uint64_t (*)(void))sub_1C308EFE4, &qword_1EF819050);
}

uint64_t sub_1C2FDA474()
{
  return sub_1C2FD9EAC(0x754474657366666FLL, 0xEE006E6F69746172, (uint64_t (*)(void))sub_1C308EFF0);
}

uint64_t sub_1C2FDA4B0()
{
  return sub_1C2FDA1E4(0x754474657366666FLL, 0xEE006E6F69746172, (uint64_t (*)(void))sub_1C308EFF0, &qword_1EF819048);
}

unint64_t sub_1C2FDA4F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    v2 = sub_1C302B1E4(0x69746E4572657375, 0xEC00000073656974);
    if ((v3 & 1) != 0)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v2);
      swift_bridgeObjectRetain();
    }
    else
    {
      v4 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = sub_1C2FE3C7C(v4, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_UserEntity, &qword_1EF819060);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C2FDA59C()
{
  return sub_1C2FD9EAC(0x697254746E657665, 0xEC00000072656767, (uint64_t (*)(void))sub_1C308EFCC);
}

uint64_t sub_1C2FDA5D4()
{
  return sub_1C2FDA1E4(0x697254746E657665, 0xEC00000072656767, (uint64_t (*)(void))sub_1C308EFCC, &qword_1EF819068);
}

uint64_t sub_1C2FDA61C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C3029A2C(0x7463656C6573, 0xE600000000000000, *(_QWORD *)(*(_QWORD *)v1 + 120), a1);
}

uint64_t sub_1C2FDA638()
{
  uint64_t v0;

  return sub_1C3029B6C(0x7463656C6573, 0xE600000000000000, *(_QWORD *)(*(_QWORD *)v0 + 120));
}

uint64_t sub_1C2FDA65C()
{
  return sub_1C2FD9D28(0x676E69727473, 0xE600000000000000);
}

_QWORD *sub_1C2FDA670()
{
  return sub_1C2FD9FFC(0x676E69727473, 0xE600000000000000);
}

uint64_t sub_1C2FDA688()
{
  return sub_1C2FD9EAC(0x6D6572757361656DLL, 0xEF74696E55746E65, (uint64_t (*)(void))sub_1C308EFFC);
}

uint64_t sub_1C2FDA6C4()
{
  return sub_1C2FDA1E4(0x6D6572757361656DLL, 0xEF74696E55746E65, (uint64_t (*)(void))sub_1C308EFFC, &qword_1EF819028);
}

unint64_t sub_1C2FDA728()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    v2 = sub_1C302B1E4(0x65506E6564646968, 0xEC000000656C706FLL);
    if ((v3 & 1) != 0)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v2);
      swift_bridgeObjectRetain();
    }
    else
    {
      v4 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = sub_1C2FE3C7C(v4, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Person, &qword_1EF819040);
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1C2FDA7CC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    v2 = sub_1C302B1E4(0x6E65697069636572, 0xEA00000000007374);
    if ((v3 & 1) != 0)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v2);
      swift_bridgeObjectRetain();
    }
    else
    {
      v4 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = sub_1C2FE3C7C(v4, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Person, &qword_1EF819040);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C2FDA870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C3029A2C(0x746567726174, 0xE600000000000000, *(_QWORD *)(*(_QWORD *)v1 + 120), a1);
}

uint64_t sub_1C2FDA88C()
{
  uint64_t v0;

  return sub_1C3029B6C(0x746567726174, 0xE600000000000000, *(_QWORD *)(*(_QWORD *)v0 + 120));
}

unint64_t sub_1C2FDA8AC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    v2 = sub_1C302B1E4(0x656C706F6570, 0xE600000000000000);
    if ((v3 & 1) != 0)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v2);
      swift_bridgeObjectRetain();
    }
    else
    {
      v4 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = sub_1C2FE3C7C(v4, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Person, &qword_1EF819040);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C2FDA94C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C3029A2C(0x797469746E65, 0xE600000000000000, *(_QWORD *)(*(_QWORD *)v1 + 120), a1);
}

uint64_t sub_1C2FDA968()
{
  uint64_t v0;

  return sub_1C3029B6C(0x797469746E65, 0xE600000000000000, *(_QWORD *)(*(_QWORD *)v0 + 120));
}

uint64_t sub_1C2FDA984(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t Uso_VerbTemplate_NoVerb.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

unint64_t sub_1C2FDA9D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    v2 = sub_1C302B1E4(0xD000000000000013, 0x80000001C33DA190);
    if ((v3 & 1) != 0)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v2);
      swift_bridgeObjectRetain();
    }
    else
    {
      v4 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = sub_1C2FE3C7C(v4, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonStock_StockAttribute, &qword_1EF819020);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C2FDAA74()
{
  return sub_1C2FD9EAC(0xD000000000000010, 0x80000001C33DA1B0, (uint64_t (*)(void))sub_1C308F008);
}

uint64_t sub_1C2FDAAA8()
{
  return sub_1C2FDA1E4(0xD000000000000010, 0x80000001C33DA1B0, (uint64_t (*)(void))sub_1C308F008, &qword_1EF819018);
}

uint64_t sub_1C2FDAAE4()
{
  return sub_1C2FD9EAC(0x656D695465746164, 0xE800000000000000, (uint64_t (*)(void))sub_1C308F014);
}

uint64_t sub_1C2FDAB14()
{
  return sub_1C2FDA1E4(0x656D695465746164, 0xE800000000000000, (uint64_t (*)(void))sub_1C308F014, &qword_1EF819010);
}

uint64_t sub_1C2FDAB54()
{
  return sub_1C2FD9EAC(0x68706172676F6567, 0xEE00616572416369, (uint64_t (*)(void))sub_1C308F020);
}

uint64_t sub_1C2FDAB90()
{
  return sub_1C2FDA1E4(0x68706172676F6567, 0xEE00616572416369, (uint64_t (*)(void))sub_1C308F020, &qword_1EF819008);
}

uint64_t sub_1C2FDABDC()
{
  return sub_1C2FD9EAC(0x64616F6C796170, 0xE700000000000000, (uint64_t (*)(void))sub_1C308F02C);
}

uint64_t sub_1C2FDAC0C()
{
  return sub_1C2FDA1E4(0x64616F6C796170, 0xE700000000000000, (uint64_t (*)(void))sub_1C308F02C, &qword_1EF819000);
}

uint64_t sub_1C2FDAC4C()
{
  return sub_1C2FD9EAC(0x72656767697274, 0xE700000000000000, (uint64_t (*)(void))sub_1C308EFCC);
}

uint64_t sub_1C2FDAC7C()
{
  return sub_1C2FDA1E4(0x72656767697274, 0xE700000000000000, (uint64_t (*)(void))sub_1C308EFCC, &qword_1EF819068);
}

unint64_t sub_1C2FDACB4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    v2 = sub_1C302B1E4(0x73676E6974746573, 0xE800000000000000);
    if ((v3 & 1) != 0)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v2);
      swift_bridgeObjectRetain();
    }
    else
    {
      v4 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = sub_1C2FE3C7C(v4, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Setting, &qword_1EF818FF8);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C2FDAD54()
{
  return sub_1C2FD9EAC(0x656D695465746164, 0xED000065676E6152, (uint64_t (*)(void))sub_1C308F038);
}

uint64_t sub_1C2FDAD90()
{
  return sub_1C2FDA1E4(0x656D695465746164, 0xED000065676E6152, (uint64_t (*)(void))sub_1C308F038, &qword_1EF818FF0);
}

uint64_t sub_1C2FDADD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C3029A2C(0x636E657265666572, 0xE900000000000065, *(_QWORD *)(*(_QWORD *)v1 + 120), a1);
}

uint64_t sub_1C2FDADFC()
{
  uint64_t v0;

  return sub_1C3029B6C(0x636E657265666572, 0xE900000000000065, *(_QWORD *)(*(_QWORD *)v0 + 120));
}

uint64_t sub_1C2FDAE24()
{
  return sub_1C2FD9EAC(0x6D6572757361656DLL, 0xEB00000000746E65, (uint64_t (*)(void))sub_1C308F044);
}

uint64_t sub_1C2FDAE5C()
{
  return sub_1C2FDA1E4(0x6D6572757361656DLL, 0xEB00000000746E65, (uint64_t (*)(void))sub_1C308F044, &qword_1EF818FE8);
}

uint64_t sub_1C2FDAEA8()
{
  return sub_1C2FD9EAC(0x6E6F697461727564, 0xE800000000000000, (uint64_t (*)(void))sub_1C308EFF0);
}

uint64_t sub_1C2FDAED8()
{
  return sub_1C2FDA1E4(0x6E6F697461727564, 0xE800000000000000, (uint64_t (*)(void))sub_1C308EFF0, &qword_1EF819048);
}

uint64_t sub_1C2FDAF14()
{
  return sub_1C2FD9EAC(0x746E756F6D61, 0xE600000000000000, (uint64_t (*)(void))sub_1C308EFD8);
}

uint64_t sub_1C2FDAF40()
{
  return sub_1C2FDA1E4(0x746E756F6D61, 0xE600000000000000, (uint64_t (*)(void))sub_1C308EFD8, &qword_1EF819058);
}

uint64_t sub_1C2FDAF74()
{
  return sub_1C2FD9EAC(0x656D7473756A6461, 0xEE0065707954746ELL, (uint64_t (*)(void))sub_1C308F050);
}

uint64_t sub_1C2FDAFB0()
{
  return sub_1C2FDA1E4(0x656D7473756A6461, 0xEE0065707954746ELL, (uint64_t (*)(void))sub_1C308F050, &qword_1EF818FE0);
}

uint64_t sub_1C2FDAFF4()
{
  return sub_1C2FD9EAC(0xD000000000000013, 0x80000001C33DAE10, (uint64_t (*)(void))sub_1C308F05C);
}

uint64_t sub_1C2FDB028()
{
  return sub_1C2FDA1E4(0xD000000000000013, 0x80000001C33DAE10, (uint64_t (*)(void))sub_1C308F05C, &qword_1EF818FD8);
}

uint64_t _s12SiriOntology38Uso_VerbTemplate_ReferenceReactionTypeCfD_0()
{
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1C2FDBD48()
{
  uint64_t v0;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF807890);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C337C1B0;
  *(_QWORD *)(v0 + 32) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 40) = 0x80000001C33E9990;
  *(_QWORD *)(v0 + 48) = type metadata accessor for UsoTask_noVerb_common_EventTrigger(0);
  *(_QWORD *)(v0 + 56) = 0xD000000000000022;
  *(_QWORD *)(v0 + 64) = 0x80000001C33E99B0;
  *(_QWORD *)(v0 + 72) = type metadata accessor for UsoTask_noVerb_commonTimer_TimerAttribute(0);
  *(_QWORD *)(v0 + 80) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 88) = 0x80000001C33E99E0;
  *(_QWORD *)(v0 + 96) = type metadata accessor for UsoTask_noVerb_common_VoiceTrigger(0);
  *(_QWORD *)(v0 + 104) = 0xD000000000000019;
  *(_QWORD *)(v0 + 112) = 0x80000001C33E9A00;
  *(_QWORD *)(v0 + 120) = type metadata accessor for UsoTask_preview_common_AppEntity(0);
  *(_QWORD *)(v0 + 128) = 0xD000000000000018;
  *(_QWORD *)(v0 + 136) = 0x80000001C33E9A20;
  *(_QWORD *)(v0 + 144) = type metadata accessor for UsoTask_create_common_AppEntity(0);
  *(_QWORD *)(v0 + 152) = 0xD000000000000017;
  *(_QWORD *)(v0 + 160) = 0x80000001C33E9A40;
  *(_QWORD *)(v0 + 168) = type metadata accessor for UsoTask_paste_common_AppEntity(0);
  *(_QWORD *)(v0 + 176) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 184) = 0x80000001C33E9A60;
  *(_QWORD *)(v0 + 192) = type metadata accessor for UsoTask_summarise_common_AppEntity(0);
  *(_QWORD *)(v0 + 200) = 0xD000000000000018;
  *(_QWORD *)(v0 + 208) = 0x80000001C33E9A80;
  *(_QWORD *)(v0 + 216) = type metadata accessor for UsoTask_noVerb_common_AppEntity(0);
  *(_QWORD *)(v0 + 224) = 0xD000000000000018;
  *(_QWORD *)(v0 + 232) = 0x80000001C33E9AA0;
  *(_QWORD *)(v0 + 240) = type metadata accessor for UsoTask_update_common_AppEntity(0);
  *(_QWORD *)(v0 + 248) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 256) = 0x80000001C33E9AC0;
  *(_QWORD *)(v0 + 264) = type metadata accessor for UsoTask_skipForward_common_AppEntity(0);
  *(_QWORD *)(v0 + 272) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 280) = 0x80000001C33E9AE0;
  *(_QWORD *)(v0 + 288) = type metadata accessor for UsoTask_skipBackward_common_AppEntity(0);
  *(_QWORD *)(v0 + 296) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 304) = 0x80000001C33E9B00;
  *(_QWORD *)(v0 + 312) = type metadata accessor for UsoTask_enterMarkup_common_AppEntity(0);
  *(_QWORD *)(v0 + 320) = 0xD000000000000016;
  *(_QWORD *)(v0 + 328) = 0x80000001C33E9B20;
  *(_QWORD *)(v0 + 336) = type metadata accessor for UsoTask_copy_common_AppEntity(0);
  *(_QWORD *)(v0 + 344) = 0xD000000000000016;
  *(_QWORD *)(v0 + 352) = 0x80000001C33E9B40;
  *(_QWORD *)(v0 + 360) = type metadata accessor for UsoTask_like_common_AppEntity(0);
  *(_QWORD *)(v0 + 368) = 0xD000000000000018;
  *(_QWORD *)(v0 + 376) = 0x80000001C33E9B60;
  *(_QWORD *)(v0 + 384) = type metadata accessor for UsoTask_unlike_common_AppEntity(0);
  *(_QWORD *)(v0 + 392) = 0xD000000000000017;
  *(_QWORD *)(v0 + 400) = 0x80000001C33E9B80;
  *(_QWORD *)(v0 + 408) = type metadata accessor for UsoTask_close_common_AppEntity(0);
  *(_QWORD *)(v0 + 416) = 0xD000000000000018;
  *(_QWORD *)(v0 + 424) = 0x80000001C33E9BA0;
  *(_QWORD *)(v0 + 432) = type metadata accessor for UsoTask_delete_common_AppEntity(0);
  *(_QWORD *)(v0 + 440) = 0xD000000000000015;
  *(_QWORD *)(v0 + 448) = 0x80000001C33E9BC0;
  *(_QWORD *)(v0 + 456) = type metadata accessor for UsoTask_cut_common_AppEntity(0);
  *(_QWORD *)(v0 + 464) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 472) = 0x80000001C33E9BE0;
  *(_QWORD *)(v0 + 480) = type metadata accessor for UsoTask_exitMarkup_common_AppEntity(0);
  *(_QWORD *)(v0 + 488) = 0xD000000000000018;
  *(_QWORD *)(v0 + 496) = 0x80000001C33E9C00;
  *(_QWORD *)(v0 + 504) = type metadata accessor for UsoTask_adjust_common_AppEntity(0);
  *(_QWORD *)(v0 + 512) = 0xD000000000000016;
  *(_QWORD *)(v0 + 520) = 0x80000001C33E9C20;
  *(_QWORD *)(v0 + 528) = type metadata accessor for UsoTask_open_common_AppEntity(0);
  *(_QWORD *)(v0 + 536) = 0xD000000000000020;
  *(_QWORD *)(v0 + 544) = 0x80000001C33E9C40;
  *(_QWORD *)(v0 + 552) = type metadata accessor for UsoTask_noVerb_common_DurationComponent(0);
  *(_QWORD *)(v0 + 560) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 568) = 0x80000001C33E9C70;
  *(_QWORD *)(v0 + 576) = type metadata accessor for UsoTask_noVerb_common_PhoneCallMode(0);
  *(_QWORD *)(v0 + 584) = 0xD000000000000025;
  *(_QWORD *)(v0 + 592) = 0x80000001C33E9C90;
  *(_QWORD *)(v0 + 600) = type metadata accessor for UsoTask_noVerb_appleContact_ContactAttribute(0);
  *(_QWORD *)(v0 + 608) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 616) = 0x80000001C33E9CC0;
  *(_QWORD *)(v0 + 624) = type metadata accessor for UsoTask_noVerb_common_PersonProperty(0);
  *(_QWORD *)(v0 + 632) = 0xD000000000000025;
  *(_QWORD *)(v0 + 640) = 0x80000001C33E9CE0;
  *(_QWORD *)(v0 + 648) = type metadata accessor for UsoTask_checkExistence_common_PersonProperty(0);
  *(_QWORD *)(v0 + 656) = 0xD000000000000020;
  *(_QWORD *)(v0 + 664) = 0x80000001C33E9D10;
  *(_QWORD *)(v0 + 672) = type metadata accessor for UsoTask_summarise_common_PersonProperty(0);
  *(_QWORD *)(v0 + 680) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 688) = 0x80000001C33E9D40;
  *(_QWORD *)(v0 + 696) = type metadata accessor for UsoTask_state_common_PersonProperty(0);
  *(_QWORD *)(v0 + 704) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 712) = 0x80000001C33E9D60;
  *(_QWORD *)(v0 + 720) = type metadata accessor for UsoTask_justify_common_SiriOpinion(0);
  *(_QWORD *)(v0 + 728) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 736) = 0x80000001C33E9D80;
  *(_QWORD *)(v0 + 744) = type metadata accessor for UsoTask_noVerb_common_SiriOpinion(0);
  *(_QWORD *)(v0 + 752) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 760) = 0x80000001C33E9DA0;
  *(_QWORD *)(v0 + 768) = type metadata accessor for UsoTask_summarise_common_SiriOpinion(0);
  *(_QWORD *)(v0 + 776) = 0xD000000000000022;
  *(_QWORD *)(v0 + 784) = 0x80000001C33E9DC0;
  *(_QWORD *)(v0 + 792) = type metadata accessor for UsoTask_checkExistence_common_SiriOpinion(0);
  *(_QWORD *)(v0 + 800) = 0xD000000000000023;
  *(_QWORD *)(v0 + 808) = 0x80000001C33E9DF0;
  *(_QWORD *)(v0 + 816) = type metadata accessor for UsoTask_noVerb_common_TemperatureComponent(0);
  *(_QWORD *)(v0 + 824) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 832) = 0x80000001C33E9E20;
  *(_QWORD *)(v0 + 840) = type metadata accessor for UsoTask_noVerb_common_SearchObject(0);
  *(_QWORD *)(v0 + 848) = 0xD000000000000016;
  *(_QWORD *)(v0 + 856) = 0x80000001C33E9E40;
  *(_QWORD *)(v0 + 864) = type metadata accessor for UsoTask_call_common_Voicemail(0);
  *(_QWORD *)(v0 + 872) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 880) = 0x80000001C33E9E60;
  *(_QWORD *)(v0 + 888) = type metadata accessor for UsoTask_previous_common_Voicemail(0);
  *(_QWORD *)(v0 + 896) = 0xD000000000000016;
  *(_QWORD *)(v0 + 904) = 0x80000001C33E9E80;
  *(_QWORD *)(v0 + 912) = type metadata accessor for UsoTask_stop_common_Voicemail(0);
  *(_QWORD *)(v0 + 920) = 0xD000000000000016;
  *(_QWORD *)(v0 + 928) = 0x80000001C33E9EA0;
  *(_QWORD *)(v0 + 936) = type metadata accessor for UsoTask_play_common_Voicemail(0);
  *(_QWORD *)(v0 + 944) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 952) = 0x80000001C33E9EC0;
  *(_QWORD *)(v0 + 960) = type metadata accessor for UsoTask_continue_common_Voicemail(0);
  *(_QWORD *)(v0 + 968) = 0xD000000000000019;
  *(_QWORD *)(v0 + 976) = 0x80000001C33E9EE0;
  *(_QWORD *)(v0 + 984) = type metadata accessor for UsoTask_request_common_Voicemail(0);
  *(_QWORD *)(v0 + 992) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 1000) = 0x80000001C33E9F00;
  *(_QWORD *)(v0 + 1008) = type metadata accessor for UsoTask_summarise_common_Voicemail(0);
  *(_QWORD *)(v0 + 1016) = 0xD000000000000016;
  *(_QWORD *)(v0 + 1024) = 0x80000001C33E9F20;
  *(_QWORD *)(v0 + 1032) = type metadata accessor for UsoTask_skip_common_Voicemail(0);
  *(_QWORD *)(v0 + 1040) = 0xD000000000000016;
  *(_QWORD *)(v0 + 1048) = 0x80000001C33E9F40;
  *(_QWORD *)(v0 + 1056) = type metadata accessor for UsoTask_read_common_Voicemail(0);
  *(_QWORD *)(v0 + 1064) = 0xD000000000000018;
  *(_QWORD *)(v0 + 1072) = 0x80000001C33E9F60;
  *(_QWORD *)(v0 + 1080) = type metadata accessor for UsoTask_delete_common_Voicemail(0);
  *(_QWORD *)(v0 + 1088) = 0xD000000000000018;
  *(_QWORD *)(v0 + 1096) = 0x80000001C33E9F80;
  *(_QWORD *)(v0 + 1104) = type metadata accessor for UsoTask_noVerb_common_Voicemail(0);
  *(_QWORD *)(v0 + 1112) = 0xD000000000000018;
  *(_QWORD *)(v0 + 1120) = 0x80000001C33E9FA0;
  *(_QWORD *)(v0 + 1128) = type metadata accessor for UsoTask_repeat_common_Voicemail(0);
  *(_QWORD *)(v0 + 1136) = 0xD000000000000017;
  *(_QWORD *)(v0 + 1144) = 0x80000001C33E9FC0;
  *(_QWORD *)(v0 + 1152) = type metadata accessor for UsoTask_pause_common_Voicemail(0);
  *(_QWORD *)(v0 + 1160) = 0xD000000000000018;
  *(_QWORD *)(v0 + 1168) = 0x80000001C33E9FE0;
  *(_QWORD *)(v0 + 1176) = type metadata accessor for UsoTask_resume_common_Voicemail(0);
  *(_QWORD *)(v0 + 1184) = 0xD000000000000026;
  *(_QWORD *)(v0 + 1192) = 0x80000001C33EA000;
  *(_QWORD *)(v0 + 1200) = type metadata accessor for UsoTask_request_common_RecurringDateTimeRange(0);
  *(_QWORD *)(v0 + 1208) = 0xD000000000000025;
  *(_QWORD *)(v0 + 1216) = 0x80000001C33EA030;
  *(_QWORD *)(v0 + 1224) = type metadata accessor for UsoTask_noVerb_common_RecurringDateTimeRange(0);
  *(_QWORD *)(v0 + 1232) = 0xD000000000000028;
  *(_QWORD *)(v0 + 1240) = 0x80000001C33EA060;
  *(_QWORD *)(v0 + 1248) = type metadata accessor for UsoTask_summarise_common_RecurringDateTimeRange(0);
  *(_QWORD *)(v0 + 1256) = 0xD00000000000002DLL;
  *(_QWORD *)(v0 + 1264) = 0x80000001C33EA090;
  *(_QWORD *)(v0 + 1272) = type metadata accessor for UsoTask_checkExistence_common_RecurringDateTimeRange(0);
  *(_QWORD *)(v0 + 1280) = 0xD000000000000023;
  *(_QWORD *)(v0 + 1288) = 0x80000001C33EA0C0;
  *(_QWORD *)(v0 + 1296) = type metadata accessor for UsoTask_read_common_RecurringDateTimeRange(0);
  *(_QWORD *)(v0 + 1304) = 0xD000000000000026;
  *(_QWORD *)(v0 + 1312) = 0x80000001C33EA0F0;
  *(_QWORD *)(v0 + 1320) = type metadata accessor for UsoTask_convert_common_RecurringDateTimeRange(0);
  *(_QWORD *)(v0 + 1328) = 0xD000000000000016;
  *(_QWORD *)(v0 + 1336) = 0x80000001C33EA120;
  *(_QWORD *)(v0 + 1344) = type metadata accessor for UsoTask_create_common_Workout(0);
  *(_QWORD *)(v0 + 1352) = 0xD000000000000016;
  *(_QWORD *)(v0 + 1360) = 0x80000001C33EA140;
  *(_QWORD *)(v0 + 1368) = type metadata accessor for UsoTask_noVerb_common_Workout(0);
  *(_QWORD *)(v0 + 1376) = 0xD000000000000019;
  *(_QWORD *)(v0 + 1384) = 0x80000001C33EA160;
  *(_QWORD *)(v0 + 1392) = type metadata accessor for UsoTask_summarise_common_Workout(0);
  *(_QWORD *)(v0 + 1400) = 0xD000000000000016;
  *(_QWORD *)(v0 + 1408) = 0x80000001C33EA180;
  *(_QWORD *)(v0 + 1416) = type metadata accessor for UsoTask_update_common_Workout(0);
  *(_QWORD *)(v0 + 1424) = 0xD000000000000016;
  *(_QWORD *)(v0 + 1432) = 0x80000001C33EA1A0;
  *(_QWORD *)(v0 + 1440) = type metadata accessor for UsoTask_cancel_common_Workout(0);
  *(_QWORD *)(v0 + 1448) = 0xD000000000000014;
  *(_QWORD *)(v0 + 1456) = 0x80000001C33EA1C0;
  *(_QWORD *)(v0 + 1464) = type metadata accessor for UsoTask_stop_common_Workout(0);
  *(_QWORD *)(v0 + 1472) = 0xD000000000000015;
  *(_QWORD *)(v0 + 1480) = 0x80000001C33EA1E0;
  *(_QWORD *)(v0 + 1488) = type metadata accessor for UsoTask_pause_common_Workout(0);
  *(_QWORD *)(v0 + 1496) = 0xD000000000000016;
  *(_QWORD *)(v0 + 1504) = 0x80000001C33EA200;
  *(_QWORD *)(v0 + 1512) = type metadata accessor for UsoTask_resume_common_Workout(0);
  *(_QWORD *)(v0 + 1520) = 0xD000000000000022;
  *(_QWORD *)(v0 + 1528) = 0x80000001C33EA220;
  *(_QWORD *)(v0 + 1536) = type metadata accessor for UsoTask_noVerb_commonStock_StockAttribute(0);
  *(_QWORD *)(v0 + 1544) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1552) = 0x80000001C33EA250;
  *(_QWORD *)(v0 + 1560) = type metadata accessor for UsoTask_softwareUpdate_common_UserEntity(0);
  *(_QWORD *)(v0 + 1568) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 1576) = 0x80000001C33EA280;
  *(_QWORD *)(v0 + 1584) = type metadata accessor for UsoTask_request_common_UserEntity(0);
  *(_QWORD *)(v0 + 1592) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 1600) = 0x80000001C33EA2A0;
  *(_QWORD *)(v0 + 1608) = type metadata accessor for UsoTask_stopPing_common_UserEntity(0);
  *(_QWORD *)(v0 + 1616) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 1624) = 0x80000001C33EA2C0;
  *(_QWORD *)(v0 + 1632) = type metadata accessor for UsoTask_summarise_common_UserEntity(0);
  *(_QWORD *)(v0 + 1640) = 0xD000000000000017;
  *(_QWORD *)(v0 + 1648) = 0x80000001C33EA2E0;
  *(_QWORD *)(v0 + 1656) = type metadata accessor for UsoTask_find_common_UserEntity(0);
  *(_QWORD *)(v0 + 1664) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 1672) = 0x80000001C33EA300;
  *(_QWORD *)(v0 + 1680) = type metadata accessor for UsoTask_getLocation_common_UserEntity(0);
  *(_QWORD *)(v0 + 1688) = 0xD000000000000019;
  *(_QWORD *)(v0 + 1696) = 0x80000001C33EA320;
  *(_QWORD *)(v0 + 1704) = type metadata accessor for UsoTask_reping_common_UserEntity(0);
  *(_QWORD *)(v0 + 1712) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1720) = 0x80000001C33EA340;
  *(_QWORD *)(v0 + 1728) = type metadata accessor for UsoTask_checkExistence_common_UserEntity(0);
  *(_QWORD *)(v0 + 1736) = 0xD000000000000017;
  *(_QWORD *)(v0 + 1744) = 0x80000001C33EA370;
  *(_QWORD *)(v0 + 1752) = type metadata accessor for UsoTask_ping_common_UserEntity(0);
  *(_QWORD *)(v0 + 1760) = 0xD000000000000018;
  *(_QWORD *)(v0 + 1768) = 0x80000001C33EA390;
  *(_QWORD *)(v0 + 1776) = type metadata accessor for UsoTask_reset_common_UserEntity(0);
  *(_QWORD *)(v0 + 1784) = 0xD000000000000027;
  *(_QWORD *)(v0 + 1792) = 0x80000001C33EA3B0;
  *(_QWORD *)(v0 + 1800) = type metadata accessor for UsoTask_discoverCapabilities_common_UserEntity(0);
  *(_QWORD *)(v0 + 1808) = 0xD000000000000020;
  *(_QWORD *)(v0 + 1816) = 0x80000001C33EA3E0;
  *(_QWORD *)(v0 + 1824) = type metadata accessor for UsoTask_checkLocation_common_UserEntity(0);
  *(_QWORD *)(v0 + 1832) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 1840) = 0x80000001C33EA410;
  *(_QWORD *)(v0 + 1848) = type metadata accessor for UsoTask_restart_common_UserEntity(0);
  *(_QWORD *)(v0 + 1856) = 0xD000000000000019;
  *(_QWORD *)(v0 + 1864) = 0x80000001C33EA430;
  *(_QWORD *)(v0 + 1872) = type metadata accessor for UsoTask_noVerb_common_UserEntity(0);
  *(_QWORD *)(v0 + 1880) = 0xD000000000000017;
  *(_QWORD *)(v0 + 1888) = 0x80000001C33EA450;
  *(_QWORD *)(v0 + 1896) = type metadata accessor for UsoTask_noVerb_common_Religion(0);
  *(_QWORD *)(v0 + 1904) = 0xD000000000000018;
  *(_QWORD *)(v0 + 1912) = 0x80000001C33EA470;
  *(_QWORD *)(v0 + 1920) = type metadata accessor for UsoTask_hear_common_SiriContent(0);
  *(_QWORD *)(v0 + 1928) = 0xD000000000000018;
  *(_QWORD *)(v0 + 1936) = 0x80000001C33EA490;
  *(_QWORD *)(v0 + 1944) = type metadata accessor for UsoTask_tell_common_SiriContent(0);
  *(_QWORD *)(v0 + 1952) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 1960) = 0x80000001C33EA4B0;
  *(_QWORD *)(v0 + 1968) = type metadata accessor for UsoTask_repeat_common_SiriContent(0);
  *(_QWORD *)(v0 + 1976) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 1984) = 0x80000001C33EA4D0;
  *(_QWORD *)(v0 + 1992) = type metadata accessor for UsoTask_noVerb_common_SiriContent(0);
  *(_QWORD *)(v0 + 2000) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 2008) = 0x80000001C33EA4F0;
  *(_QWORD *)(v0 + 2016) = type metadata accessor for UsoTask_unlike_common_SiriContent(0);
  *(_QWORD *)(v0 + 2024) = 0xD000000000000028;
  *(_QWORD *)(v0 + 2032) = 0x80000001C33EA510;
  *(_QWORD *)(v0 + 2040) = type metadata accessor for UsoTask_discoverCapabilities_common_SiriContent(0);
  *(_QWORD *)(v0 + 2048) = 0xD000000000000018;
  *(_QWORD *)(v0 + 2056) = 0x80000001C33EA540;
  *(_QWORD *)(v0 + 2064) = type metadata accessor for UsoTask_like_common_SiriContent(0);
  *(_QWORD *)(v0 + 2072) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 2080) = 0x80000001C33EA560;
  *(_QWORD *)(v0 + 2088) = type metadata accessor for UsoTask_noVerb_common_MonthOfYear(0);
  *(_QWORD *)(v0 + 2096) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 2104) = 0x80000001C33EA580;
  *(_QWORD *)(v0 + 2112) = type metadata accessor for UsoTask_noVerb_common_PhoneNumber(0);
  *(_QWORD *)(v0 + 2120) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2128) = 0x80000001C33EA5A0;
  *(_QWORD *)(v0 + 2136) = type metadata accessor for UsoTask_create_common_Clock(0);
  *(_QWORD *)(v0 + 2144) = 0xD000000000000017;
  *(_QWORD *)(v0 + 2152) = 0x80000001C33EA5C0;
  *(_QWORD *)(v0 + 2160) = type metadata accessor for UsoTask_summarise_common_Clock(0);
  *(_QWORD *)(v0 + 2168) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2176) = 0x80000001C33EA5E0;
  *(_QWORD *)(v0 + 2184) = type metadata accessor for UsoTask_noVerb_common_Clock(0);
  *(_QWORD *)(v0 + 2192) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2200) = 0x80000001C33EA600;
  *(_QWORD *)(v0 + 2208) = type metadata accessor for UsoTask_delete_common_Clock(0);
  *(_QWORD *)(v0 + 2216) = 0xD000000000000025;
  *(_QWORD *)(v0 + 2224) = 0x80000001C33EA620;
  *(_QWORD *)(v0 + 2232) = type metadata accessor for UsoTask_noVerb_appleMessage_MessageAttribute(0);
  *(_QWORD *)(v0 + 2240) = 0xD000000000000021;
  *(_QWORD *)(v0 + 2248) = 0x80000001C33EA650;
  *(_QWORD *)(v0 + 2256) = type metadata accessor for UsoTask_checkExistence_common_NoteFolder(0);
  *(_QWORD *)(v0 + 2264) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 2272) = 0x80000001C33EA680;
  *(_QWORD *)(v0 + 2280) = type metadata accessor for UsoTask_summarise_common_NoteFolder(0);
  *(_QWORD *)(v0 + 2288) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 2296) = 0x80000001C33EA6A0;
  *(_QWORD *)(v0 + 2304) = type metadata accessor for UsoTask_request_common_NoteFolder(0);
  *(_QWORD *)(v0 + 2312) = 0xD000000000000019;
  *(_QWORD *)(v0 + 2320) = 0x80000001C33EA6C0;
  *(_QWORD *)(v0 + 2328) = type metadata accessor for UsoTask_update_common_NoteFolder(0);
  *(_QWORD *)(v0 + 2336) = 0xD000000000000019;
  *(_QWORD *)(v0 + 2344) = 0x80000001C33EA6E0;
  *(_QWORD *)(v0 + 2352) = type metadata accessor for UsoTask_create_common_NoteFolder(0);
  *(_QWORD *)(v0 + 2360) = 0xD000000000000019;
  *(_QWORD *)(v0 + 2368) = 0x80000001C33EA700;
  *(_QWORD *)(v0 + 2376) = type metadata accessor for UsoTask_delete_common_NoteFolder(0);
  *(_QWORD *)(v0 + 2384) = 0xD000000000000019;
  *(_QWORD *)(v0 + 2392) = 0x80000001C33EA720;
  *(_QWORD *)(v0 + 2400) = type metadata accessor for UsoTask_noVerb_common_NoteFolder(0);
  *(_QWORD *)(v0 + 2408) = 0xD000000000000022;
  *(_QWORD *)(v0 + 2416) = 0x80000001C33EA740;
  *(_QWORD *)(v0 + 2424) = type metadata accessor for UsoTask_noVerb_commonAlarm_AlarmAttribute(0);
  *(_QWORD *)(v0 + 2432) = 0xD000000000000026;
  *(_QWORD *)(v0 + 2440) = 0x80000001C33EA770;
  *(_QWORD *)(v0 + 2448) = type metadata accessor for UsoTask_noVerb_commonContact_ContactAttribute(0);
  *(_QWORD *)(v0 + 2456) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2464) = 0x80000001C33EA7A0;
  *(_QWORD *)(v0 + 2472) = type metadata accessor for UsoTask_noVerb_common_DeviceProperty(0);
  *(_QWORD *)(v0 + 2480) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 2488) = 0x80000001C33EA7C0;
  *(_QWORD *)(v0 + 2496) = type metadata accessor for UsoTask_noVerb_common_MeasurementUnit(0);
  *(_QWORD *)(v0 + 2504) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 2512) = 0x80000001C33EA7E0;
  *(_QWORD *)(v0 + 2520) = type metadata accessor for UsoTask_summarise_common_ReminderList(0);
  *(_QWORD *)(v0 + 2528) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 2536) = 0x80000001C33EA800;
  *(_QWORD *)(v0 + 2544) = type metadata accessor for UsoTask_noVerb_common_ReminderList(0);
  *(_QWORD *)(v0 + 2552) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 2560) = 0x80000001C33EA820;
  *(_QWORD *)(v0 + 2568) = type metadata accessor for UsoTask_request_common_ReminderList(0);
  *(_QWORD *)(v0 + 2576) = 0xD000000000000023;
  *(_QWORD *)(v0 + 2584) = 0x80000001C33EA840;
  *(_QWORD *)(v0 + 2592) = type metadata accessor for UsoTask_checkExistence_common_ReminderList(0);
  *(_QWORD *)(v0 + 2600) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 2608) = 0x80000001C33EA870;
  *(_QWORD *)(v0 + 2616) = type metadata accessor for UsoTask_delete_common_ReminderList(0);
  *(_QWORD *)(v0 + 2624) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 2632) = 0x80000001C33EA890;
  *(_QWORD *)(v0 + 2640) = type metadata accessor for UsoTask_create_common_ReminderList(0);
  *(_QWORD *)(v0 + 2648) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 2656) = 0x80000001C33EA8B0;
  *(_QWORD *)(v0 + 2664) = type metadata accessor for UsoTask_update_common_ReminderList(0);
  *(_QWORD *)(v0 + 2672) = 0xD000000000000019;
  *(_QWORD *)(v0 + 2680) = 0x80000001C33EA8D0;
  *(_QWORD *)(v0 + 2688) = type metadata accessor for UsoTask_read_common_ReminderList(0);
  *(_QWORD *)(v0 + 2696) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2704) = 0x80000001C33EA8F0;
  *(_QWORD *)(v0 + 2712) = type metadata accessor for UsoTask_noVerb_common_Stock(0);
  *(_QWORD *)(v0 + 2720) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2728) = 0x80000001C33EA910;
  *(_QWORD *)(v0 + 2736) = type metadata accessor for UsoTask_create_common_Stock(0);
  *(_QWORD *)(v0 + 2744) = 0xD000000000000012;
  *(_QWORD *)(v0 + 2752) = 0x80000001C33EA930;
  *(_QWORD *)(v0 + 2760) = type metadata accessor for UsoTask_read_common_Stock(0);
  *(_QWORD *)(v0 + 2768) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2776) = 0x80000001C33EA950;
  *(_QWORD *)(v0 + 2784) = type metadata accessor for UsoTask_delete_common_Stock(0);
  *(_QWORD *)(v0 + 2792) = 0xD000000000000015;
  *(_QWORD *)(v0 + 2800) = 0x80000001C33EA970;
  *(_QWORD *)(v0 + 2808) = type metadata accessor for UsoTask_request_common_Stock(0);
  *(_QWORD *)(v0 + 2816) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2824) = 0x80000001C33EA990;
  *(_QWORD *)(v0 + 2832) = type metadata accessor for UsoTask_update_common_Stock(0);
  *(_QWORD *)(v0 + 2840) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 2848) = 0x80000001C33EA9B0;
  *(_QWORD *)(v0 + 2856) = type metadata accessor for UsoTask_checkExistence_common_Stock(0);
  *(_QWORD *)(v0 + 2864) = 0xD000000000000017;
  *(_QWORD *)(v0 + 2872) = 0x80000001C33EA9D0;
  *(_QWORD *)(v0 + 2880) = type metadata accessor for UsoTask_summarise_common_Stock(0);
  *(_QWORD *)(v0 + 2888) = 0xD000000000000019;
  *(_QWORD *)(v0 + 2896) = 0x80000001C33EA9F0;
  *(_QWORD *)(v0 + 2904) = type metadata accessor for UsoTask_noVerb_common_AppSection(0);
  *(_QWORD *)(v0 + 2912) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 2920) = 0x80000001C33EAA10;
  *(_QWORD *)(v0 + 2928) = type metadata accessor for UsoTask_previous_common_PhoneCall(0);
  *(_QWORD *)(v0 + 2936) = 0xD000000000000018;
  *(_QWORD *)(v0 + 2944) = 0x80000001C33EAA30;
  *(_QWORD *)(v0 + 2952) = type metadata accessor for UsoTask_redial_common_PhoneCall(0);
  *(_QWORD *)(v0 + 2960) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 2968) = 0x80000001C33EAA50;
  *(_QWORD *)(v0 + 2976) = type metadata accessor for UsoTask_callback_common_PhoneCall(0);
  *(_QWORD *)(v0 + 2984) = 0xD000000000000016;
  *(_QWORD *)(v0 + 2992) = 0x80000001C33EAA70;
  *(_QWORD *)(v0 + 3000) = type metadata accessor for UsoTask_stop_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3008) = 0xD000000000000018;
  *(_QWORD *)(v0 + 3016) = 0x80000001C33EAA90;
  *(_QWORD *)(v0 + 3024) = type metadata accessor for UsoTask_hangup_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3032) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 3040) = 0x80000001C33EAAB0;
  *(_QWORD *)(v0 + 3048) = type metadata accessor for UsoTask_videocall_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3056) = 0xD000000000000016;
  *(_QWORD *)(v0 + 3064) = 0x80000001C33EAAD0;
  *(_QWORD *)(v0 + 3072) = type metadata accessor for UsoTask_join_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3080) = 0xD000000000000019;
  *(_QWORD *)(v0 + 3088) = 0x80000001C33EAAF0;
  *(_QWORD *)(v0 + 3096) = type metadata accessor for UsoTask_request_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3104) = 0xD000000000000018;
  *(_QWORD *)(v0 + 3112) = 0x80000001C33EAB10;
  *(_QWORD *)(v0 + 3120) = type metadata accessor for UsoTask_noVerb_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3128) = 0xD000000000000016;
  *(_QWORD *)(v0 + 3136) = 0x80000001C33EAB30;
  *(_QWORD *)(v0 + 3144) = type metadata accessor for UsoTask_read_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3152) = 0xD000000000000018;
  *(_QWORD *)(v0 + 3160) = 0x80000001C33EAB50;
  *(_QWORD *)(v0 + 3168) = type metadata accessor for UsoTask_update_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3176) = 0xD000000000000016;
  *(_QWORD *)(v0 + 3184) = 0x80000001C33EAB70;
  *(_QWORD *)(v0 + 3192) = type metadata accessor for UsoTask_skip_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3200) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 3208) = 0x80000001C33EAB90;
  *(_QWORD *)(v0 + 3216) = type metadata accessor for UsoTask_summarise_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3224) = 0xD000000000000018;
  *(_QWORD *)(v0 + 3232) = 0x80000001C33EABB0;
  *(_QWORD *)(v0 + 3240) = type metadata accessor for UsoTask_delete_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3248) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 3256) = 0x80000001C33EABD0;
  *(_QWORD *)(v0 + 3264) = type metadata accessor for UsoTask_continue_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3272) = 0xD000000000000016;
  *(_QWORD *)(v0 + 3280) = 0x80000001C33EABF0;
  *(_QWORD *)(v0 + 3288) = type metadata accessor for UsoTask_call_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3296) = 0xD000000000000018;
  *(_QWORD *)(v0 + 3304) = 0x80000001C33EAC10;
  *(_QWORD *)(v0 + 3312) = type metadata accessor for UsoTask_answer_common_PhoneCall(0);
  *(_QWORD *)(v0 + 3320) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 3328) = 0x80000001C33EAC30;
  *(_QWORD *)(v0 + 3336) = type metadata accessor for UsoTask_noVerb_common_ContactAddress(0);
  *(_QWORD *)(v0 + 3344) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 3352) = 0x80000001C33EAC50;
  *(_QWORD *)(v0 + 3360) = type metadata accessor for UsoTask_noVerb_common_LocalisedString(0);
  *(_QWORD *)(v0 + 3368) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 3376) = 0x80000001C33EAC70;
  *(_QWORD *)(v0 + 3384) = type metadata accessor for UsoTask_noVerb_common_ProductCategory(0);
  *(_QWORD *)(v0 + 3392) = 0xD000000000000019;
  *(_QWORD *)(v0 + 3400) = 0x80000001C33EAC90;
  *(_QWORD *)(v0 + 3408) = type metadata accessor for UsoTask_noVerb_common_NumberSign(0);
  *(_QWORD *)(v0 + 3416) = 0xD000000000000018;
  *(_QWORD *)(v0 + 3424) = 0x80000001C33EACB0;
  *(_QWORD *)(v0 + 3432) = type metadata accessor for UsoTask_action_common_Utilities(0);
  *(_QWORD *)(v0 + 3440) = 0xD000000000000019;
  *(_QWORD *)(v0 + 3448) = 0x80000001C33EACD0;
  *(_QWORD *)(v0 + 3456) = type metadata accessor for UsoTask_noVerb_common_PersonName(0);
  *(_QWORD *)(v0 + 3464) = 0xD000000000000030;
  *(_QWORD *)(v0 + 3472) = 0x80000001C33EACF0;
  *(_QWORD *)(v0 + 3480) = type metadata accessor for UsoTask_noVerb_commonNotification_NotificationAttribute(0);
  *(_QWORD *)(v0 + 3488) = 0xD00000000000002ALL;
  *(_QWORD *)(v0 + 3496) = 0x80000001C33EAD30;
  *(_QWORD *)(v0 + 3504) = type metadata accessor for UsoTask_noVerb_commonPhoneCall_PhoneCallAttribute(0);
  *(_QWORD *)(v0 + 3512) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 3520) = 0x80000001C33EAD60;
  *(_QWORD *)(v0 + 3528) = type metadata accessor for UsoTask_noVerb_common_SettingValue(0);
  *(_QWORD *)(v0 + 3536) = 0xD000000000000029;
  *(_QWORD *)(v0 + 3544) = 0x80000001C33EAD80;
  *(_QWORD *)(v0 + 3552) = type metadata accessor for UsoTask_learnNameCorrection_common_PersonContact(0);
  *(_QWORD *)(v0 + 3560) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 3568) = 0x80000001C33EADB0;
  *(_QWORD *)(v0 + 3576) = type metadata accessor for UsoTask_read_common_PersonContact(0);
  *(_QWORD *)(v0 + 3584) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 3592) = 0x80000001C33EADD0;
  *(_QWORD *)(v0 + 3600) = type metadata accessor for UsoTask_create_common_PersonContact(0);
  *(_QWORD *)(v0 + 3608) = 0xD00000000000002ALL;
  *(_QWORD *)(v0 + 3616) = 0x80000001C33EADF0;
  *(_QWORD *)(v0 + 3624) = type metadata accessor for UsoTask_forgetNameCorrection_common_PersonContact(0);
  *(_QWORD *)(v0 + 3632) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 3640) = 0x80000001C33EAE20;
  *(_QWORD *)(v0 + 3648) = type metadata accessor for UsoTask_delete_common_PersonContact(0);
  *(_QWORD *)(v0 + 3656) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 3664) = 0x80000001C33EAE40;
  *(_QWORD *)(v0 + 3672) = type metadata accessor for UsoTask_noVerb_common_PersonContact(0);
  *(_QWORD *)(v0 + 3680) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 3688) = 0x80000001C33EAE60;
  *(_QWORD *)(v0 + 3696) = type metadata accessor for UsoTask_summarise_common_PersonContact(0);
  *(_QWORD *)(v0 + 3704) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 3712) = 0x80000001C33EAE80;
  *(_QWORD *)(v0 + 3720) = type metadata accessor for UsoTask_update_common_PersonContact(0);
  *(_QWORD *)(v0 + 3728) = 0xD000000000000019;
  *(_QWORD *)(v0 + 3736) = 0x80000001C33EAEA0;
  *(_QWORD *)(v0 + 3744) = type metadata accessor for UsoTask_noVerb_common_SportsItem(0);
  *(_QWORD *)(v0 + 3752) = 0xD000000000000013;
  *(_QWORD *)(v0 + 3760) = 0x80000001C33EAEC0;
  *(_QWORD *)(v0 + 3768) = type metadata accessor for UsoTask_reset_common_Timer(0);
  *(_QWORD *)(v0 + 3776) = 0xD000000000000014;
  *(_QWORD *)(v0 + 3784) = 0x80000001C33EAEE0;
  *(_QWORD *)(v0 + 3792) = type metadata accessor for UsoTask_create_common_Timer(0);
  *(_QWORD *)(v0 + 3800) = 0xD000000000000013;
  *(_QWORD *)(v0 + 3808) = 0x80000001C33EAF00;
  *(_QWORD *)(v0 + 3816) = type metadata accessor for UsoTask_start_common_Timer(0);
  *(_QWORD *)(v0 + 3824) = 0xD000000000000014;
  *(_QWORD *)(v0 + 3832) = 0x80000001C33EAF20;
  *(_QWORD *)(v0 + 3840) = type metadata accessor for UsoTask_delete_common_Timer(0);
  *(_QWORD *)(v0 + 3848) = 0xD000000000000014;
  *(_QWORD *)(v0 + 3856) = 0x80000001C33EAF40;
  *(_QWORD *)(v0 + 3864) = type metadata accessor for UsoTask_update_common_Timer(0);
  *(_QWORD *)(v0 + 3872) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 3880) = 0x80000001C33EAF60;
  *(_QWORD *)(v0 + 3888) = type metadata accessor for UsoTask_checkExistence_common_Timer(0);
  *(_QWORD *)(v0 + 3896) = 0xD000000000000013;
  *(_QWORD *)(v0 + 3904) = 0x80000001C33EAF80;
  *(_QWORD *)(v0 + 3912) = type metadata accessor for UsoTask_pause_common_Timer(0);
  *(_QWORD *)(v0 + 3920) = 0xD000000000000014;
  *(_QWORD *)(v0 + 3928) = 0x80000001C33EAFA0;
  *(_QWORD *)(v0 + 3936) = type metadata accessor for UsoTask_resume_common_Timer(0);
  *(_QWORD *)(v0 + 3944) = 0xD000000000000014;
  *(_QWORD *)(v0 + 3952) = 0x80000001C33EAFC0;
  *(_QWORD *)(v0 + 3960) = type metadata accessor for UsoTask_noVerb_common_Timer(0);
  *(_QWORD *)(v0 + 3968) = 0xD000000000000017;
  *(_QWORD *)(v0 + 3976) = 0x80000001C33EAFE0;
  *(_QWORD *)(v0 + 3984) = type metadata accessor for UsoTask_summarise_common_Timer(0);
  *(_QWORD *)(v0 + 3992) = 0xD000000000000012;
  *(_QWORD *)(v0 + 4000) = 0x80000001C33EB000;
  *(_QWORD *)(v0 + 4008) = type metadata accessor for UsoTask_stop_common_Timer(0);
  *(_QWORD *)(v0 + 4016) = 0xD000000000000015;
  *(_QWORD *)(v0 + 4024) = 0x80000001C33EB020;
  *(_QWORD *)(v0 + 4032) = type metadata accessor for UsoTask_request_common_Timer(0);
  *(_QWORD *)(v0 + 4040) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 4048) = 0x80000001C33EB040;
  *(_QWORD *)(v0 + 4056) = type metadata accessor for UsoTask_noVerb_common_SearchQualifier(0);
  *(_QWORD *)(v0 + 4064) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 4072) = 0x80000001C33EB060;
  *(_QWORD *)(v0 + 4080) = type metadata accessor for UsoTask_checkExistence_common_Reaction(0);
  *(_QWORD *)(v0 + 4088) = 0xD000000000000017;
  *(_QWORD *)(v0 + 4096) = 0x80000001C33EB080;
  *(_QWORD *)(v0 + 4104) = type metadata accessor for UsoTask_noVerb_common_Reaction(0);
  *(_QWORD *)(v0 + 4112) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 4120) = 0x80000001C33EB0A0;
  *(_QWORD *)(v0 + 4128) = type metadata accessor for UsoTask_summarise_common_Reaction(0);
  *(_QWORD *)(v0 + 4136) = 0xD000000000000018;
  *(_QWORD *)(v0 + 4144) = 0x80000001C33EB0C0;
  *(_QWORD *)(v0 + 4152) = type metadata accessor for UsoTask_request_common_Reaction(0);
  *(_QWORD *)(v0 + 4160) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 4168) = 0x80000001C33EB0E0;
  *(_QWORD *)(v0 + 4176) = type metadata accessor for UsoTask_action_common_CrisisSupport(0);
  *(_QWORD *)(v0 + 4184) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 4192) = 0x80000001C33EB100;
  *(_QWORD *)(v0 + 4200) = type metadata accessor for UsoTask_summarise_common_DateTimeRange(0);
  *(_QWORD *)(v0 + 4208) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 4216) = 0x80000001C33EB120;
  *(_QWORD *)(v0 + 4224) = type metadata accessor for UsoTask_request_common_DateTimeRange(0);
  *(_QWORD *)(v0 + 4232) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 4240) = 0x80000001C33EB140;
  *(_QWORD *)(v0 + 4248) = type metadata accessor for UsoTask_convert_common_DateTimeRange(0);
  *(_QWORD *)(v0 + 4256) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 4264) = 0x80000001C33EB160;
  *(_QWORD *)(v0 + 4272) = type metadata accessor for UsoTask_noVerb_common_DateTimeRange(0);
  *(_QWORD *)(v0 + 4280) = 0xD000000000000024;
  *(_QWORD *)(v0 + 4288) = 0x80000001C33EB180;
  *(_QWORD *)(v0 + 4296) = type metadata accessor for UsoTask_checkExistence_common_DateTimeRange(0);
  *(_QWORD *)(v0 + 4304) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 4312) = 0x80000001C33EB1B0;
  *(_QWORD *)(v0 + 4320) = type metadata accessor for UsoTask_read_common_DateTimeRange(0);
  *(_QWORD *)(v0 + 4328) = 0xD000000000000025;
  *(_QWORD *)(v0 + 4336) = 0x80000001C33EB1D0;
  *(_QWORD *)(v0 + 4344) = type metadata accessor for UsoTask_noVerb_appleWriting_WritingAttribute(0);
  *(_QWORD *)(v0 + 4352) = 0xD000000000000017;
  *(_QWORD *)(v0 + 4360) = 0x80000001C33EB200;
  *(_QWORD *)(v0 + 4368) = type metadata accessor for UsoTask_noVerb_common_TimeZone(0);
  *(_QWORD *)(v0 + 4376) = 0xD000000000000021;
  *(_QWORD *)(v0 + 4384) = 0x80000001C33EB220;
  *(_QWORD *)(v0 + 4392) = type metadata accessor for UsoTask_update_common_PersonRelationship(0);
  *(_QWORD *)(v0 + 4400) = 0xD000000000000021;
  *(_QWORD *)(v0 + 4408) = 0x80000001C33EB250;
  *(_QWORD *)(v0 + 4416) = type metadata accessor for UsoTask_noVerb_common_PersonRelationship(0);
  *(_QWORD *)(v0 + 4424) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 4432) = 0x80000001C33EB280;
  *(_QWORD *)(v0 + 4440) = type metadata accessor for UsoTask_noVerb_common_ActivationValue(0);
  *(_QWORD *)(v0 + 4448) = 0xD000000000000014;
  *(_QWORD *)(v0 + 4456) = 0x80000001C33EB2A0;
  *(_QWORD *)(v0 + 4464) = type metadata accessor for UsoTask_noVerb_common_Color(0);
  *(_QWORD *)(v0 + 4472) = 0xD000000000000014;
  *(_QWORD *)(v0 + 4480) = 0x80000001C33EB2C0;
  *(_QWORD *)(v0 + 4488) = type metadata accessor for UsoTask_delete_common_Email(0);
  *(_QWORD *)(v0 + 4496) = 0xD000000000000010;
  *(_QWORD *)(v0 + 4504) = 0x80000001C33EB2E0;
  *(_QWORD *)(v0 + 4512) = type metadata accessor for UsoTask_cc_common_Email(0);
  *(_QWORD *)(v0 + 4520) = 0xD000000000000012;
  *(_QWORD *)(v0 + 4528) = 0x80000001C33EB300;
  *(_QWORD *)(v0 + 4536) = type metadata accessor for UsoTask_send_common_Email(0);
  *(_QWORD *)(v0 + 4544) = 0xD000000000000012;
  *(_QWORD *)(v0 + 4552) = 0x80000001C33EB320;
  *(_QWORD *)(v0 + 4560) = type metadata accessor for UsoTask_save_common_Email(0);
  *(_QWORD *)(v0 + 4568) = 0xD000000000000015;
  *(_QWORD *)(v0 + 4576) = 0x80000001C33EB340;
  *(_QWORD *)(v0 + 4584) = type metadata accessor for UsoTask_forward_common_Email(0);
  *(_QWORD *)(v0 + 4592) = 0xD000000000000014;
  *(_QWORD *)(v0 + 4600) = 0x80000001C33EB360;
  *(_QWORD *)(v0 + 4608) = type metadata accessor for UsoTask_update_common_Email(0);
  *(_QWORD *)(v0 + 4616) = 0xD000000000000013;
  *(_QWORD *)(v0 + 4624) = 0x80000001C33EB380;
  *(_QWORD *)(v0 + 4632) = type metadata accessor for UsoTask_reply_common_Email(0);
  *(_QWORD *)(v0 + 4640) = 0xD000000000000016;
  *(_QWORD *)(v0 + 4648) = 0x80000001C33EB3A0;
  *(_QWORD *)(v0 + 4656) = type metadata accessor for UsoTask_previous_common_Email(0);
  *(_QWORD *)(v0 + 4664) = 0xD000000000000012;
  *(_QWORD *)(v0 + 4672) = 0x80000001C33EB3C0;
  *(_QWORD *)(v0 + 4680) = type metadata accessor for UsoTask_read_common_Email(0);
  *(_QWORD *)(v0 + 4688) = 0xD000000000000016;
  *(_QWORD *)(v0 + 4696) = 0x80000001C33EB3E0;
  *(_QWORD *)(v0 + 4704) = type metadata accessor for UsoTask_continue_common_Email(0);
  *(_QWORD *)(v0 + 4712) = 0xD000000000000012;
  *(_QWORD *)(v0 + 4720) = 0x80000001C33EB400;
  *(_QWORD *)(v0 + 4728) = type metadata accessor for UsoTask_stop_common_Email(0);
  *(_QWORD *)(v0 + 4736) = 0xD000000000000012;
  *(_QWORD *)(v0 + 4744) = 0x80000001C33EB420;
  *(_QWORD *)(v0 + 4752) = type metadata accessor for UsoTask_skip_common_Email(0);
  *(_QWORD *)(v0 + 4760) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 4768) = 0x80000001C33EB440;
  *(_QWORD *)(v0 + 4776) = type metadata accessor for UsoTask_checkExistence_common_Email(0);
  *(_QWORD *)(v0 + 4784) = 0xD000000000000017;
  *(_QWORD *)(v0 + 4792) = 0x80000001C33EB460;
  *(_QWORD *)(v0 + 4800) = type metadata accessor for UsoTask_summarise_common_Email(0);
  *(_QWORD *)(v0 + 4808) = 0xD000000000000014;
  *(_QWORD *)(v0 + 4816) = 0x80000001C33EB480;
  *(_QWORD *)(v0 + 4824) = type metadata accessor for UsoTask_noVerb_common_Email(0);
  *(_QWORD *)(v0 + 4832) = 0xD000000000000015;
  *(_QWORD *)(v0 + 4840) = 0x80000001C33EB4A0;
  *(_QWORD *)(v0 + 4848) = type metadata accessor for UsoTask_request_common_Email(0);
  *(_QWORD *)(v0 + 4856) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 4864) = 0x80000001C33EB4C0;
  *(_QWORD *)(v0 + 4872) = type metadata accessor for UsoTask_noVerb_common_DeviceCategory(0);
  *(_QWORD *)(v0 + 4880) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 4888) = 0x80000001C33EB4E0;
  *(_QWORD *)(v0 + 4896) = type metadata accessor for UsoTask_checkExistence_common_DateTime(0);
  *(_QWORD *)(v0 + 4904) = 0xD000000000000017;
  *(_QWORD *)(v0 + 4912) = 0x80000001C33EB500;
  *(_QWORD *)(v0 + 4920) = type metadata accessor for UsoTask_noVerb_common_DateTime(0);
  *(_QWORD *)(v0 + 4928) = 0xD000000000000018;
  *(_QWORD *)(v0 + 4936) = 0x80000001C33EB520;
  *(_QWORD *)(v0 + 4944) = type metadata accessor for UsoTask_convert_common_DateTime(0);
  *(_QWORD *)(v0 + 4952) = 0xD000000000000018;
  *(_QWORD *)(v0 + 4960) = 0x80000001C33EB540;
  *(_QWORD *)(v0 + 4968) = type metadata accessor for UsoTask_request_common_DateTime(0);
  *(_QWORD *)(v0 + 4976) = 0xD000000000000015;
  *(_QWORD *)(v0 + 4984) = 0x80000001C33EB560;
  *(_QWORD *)(v0 + 4992) = type metadata accessor for UsoTask_read_common_DateTime(0);
  *(_QWORD *)(v0 + 5000) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 5008) = 0x80000001C33EB580;
  *(_QWORD *)(v0 + 5016) = type metadata accessor for UsoTask_summarise_common_DateTime(0);
  *(_QWORD *)(v0 + 5024) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 5032) = 0x80000001C33EB5A0;
  *(_QWORD *)(v0 + 5040) = type metadata accessor for UsoTask_removeFilter_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5048) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 5056) = 0x80000001C33EB5C0;
  *(_QWORD *)(v0 + 5064) = type metadata accessor for UsoTask_removeTag_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5072) = 0xD000000000000019;
  *(_QWORD *)(v0 + 5080) = 0x80000001C33EB5E0;
  *(_QWORD *)(v0 + 5088) = type metadata accessor for UsoTask_create_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5096) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 5104) = 0x80000001C33EB600;
  *(_QWORD *)(v0 + 5112) = type metadata accessor for UsoTask_summarise_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5120) = 0xD000000000000022;
  *(_QWORD *)(v0 + 5128) = 0x80000001C33EB620;
  *(_QWORD *)(v0 + 5136) = type metadata accessor for UsoTask_removeFromAlbum_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5144) = 0xD000000000000021;
  *(_QWORD *)(v0 + 5152) = 0x80000001C33EB650;
  *(_QWORD *)(v0 + 5160) = type metadata accessor for UsoTask_checkExistence_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5168) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 5176) = 0x80000001C33EB680;
  *(_QWORD *)(v0 + 5184) = type metadata accessor for UsoTask_applyTag_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5192) = 0xD000000000000017;
  *(_QWORD *)(v0 + 5200) = 0x80000001C33EB6A0;
  *(_QWORD *)(v0 + 5208) = type metadata accessor for UsoTask_like_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5216) = 0xD000000000000019;
  *(_QWORD *)(v0 + 5224) = 0x80000001C33EB6C0;
  *(_QWORD *)(v0 + 5232) = type metadata accessor for UsoTask_delete_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5240) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 5248) = 0x80000001C33EB6E0;
  *(_QWORD *)(v0 + 5256) = type metadata accessor for UsoTask_addToAlbum_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5264) = 0xD000000000000017;
  *(_QWORD *)(v0 + 5272) = 0x80000001C33EB700;
  *(_QWORD *)(v0 + 5280) = type metadata accessor for UsoTask_play_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5288) = 0xD000000000000019;
  *(_QWORD *)(v0 + 5296) = 0x80000001C33EB720;
  *(_QWORD *)(v0 + 5304) = type metadata accessor for UsoTask_noVerb_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5312) = 0xD000000000000019;
  *(_QWORD *)(v0 + 5320) = 0x80000001C33EB740;
  *(_QWORD *)(v0 + 5328) = type metadata accessor for UsoTask_unlike_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5336) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 5344) = 0x80000001C33EB760;
  *(_QWORD *)(v0 + 5352) = type metadata accessor for UsoTask_applyFilter_apple_PhotoMemory(0);
  *(_QWORD *)(v0 + 5360) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 5368) = 0x80000001C33EB780;
  *(_QWORD *)(v0 + 5376) = type metadata accessor for UsoTask_request_common_SiriPossession(0);
  *(_QWORD *)(v0 + 5384) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 5392) = 0x80000001C33EB7A0;
  *(_QWORD *)(v0 + 5400) = type metadata accessor for UsoTask_state_common_SiriPossession(0);
  *(_QWORD *)(v0 + 5408) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 5416) = 0x80000001C33EB7C0;
  *(_QWORD *)(v0 + 5424) = type metadata accessor for UsoTask_deny_common_SiriPossession(0);
  *(_QWORD *)(v0 + 5432) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 5440) = 0x80000001C33EB7E0;
  *(_QWORD *)(v0 + 5448) = type metadata accessor for UsoTask_noVerb_common_SiriPossession(0);
  *(_QWORD *)(v0 + 5456) = 0xD000000000000020;
  *(_QWORD *)(v0 + 5464) = 0x80000001C33EB800;
  *(_QWORD *)(v0 + 5472) = type metadata accessor for UsoTask_summarise_common_SiriPossession(0);
  *(_QWORD *)(v0 + 5480) = 0xD000000000000025;
  *(_QWORD *)(v0 + 5488) = 0x80000001C33EB830;
  *(_QWORD *)(v0 + 5496) = type metadata accessor for UsoTask_checkExistence_common_SiriPossession(0);
  *(_QWORD *)(v0 + 5504) = 0xD000000000000021;
  *(_QWORD *)(v0 + 5512) = 0x80000001C33EB860;
  *(_QWORD *)(v0 + 5520) = type metadata accessor for UsoTask_noVerb_common_PersonSocialAction(0);
  *(_QWORD *)(v0 + 5528) = 0xD000000000000024;
  *(_QWORD *)(v0 + 5536) = 0x80000001C33EB890;
  *(_QWORD *)(v0 + 5544) = type metadata accessor for UsoTask_summarise_common_PersonSocialAction(0);
  *(_QWORD *)(v0 + 5552) = 0xD000000000000020;
  *(_QWORD *)(v0 + 5560) = 0x80000001C33EB8C0;
  *(_QWORD *)(v0 + 5568) = type metadata accessor for UsoTask_state_common_PersonSocialAction(0);
  *(_QWORD *)(v0 + 5576) = 0xD000000000000015;
  *(_QWORD *)(v0 + 5584) = 0x80000001C33EB8F0;
  *(_QWORD *)(v0 + 5592) = type metadata accessor for UsoTask_pause_common_Journey(0);
  *(_QWORD *)(v0 + 5600) = 0xD000000000000015;
  *(_QWORD *)(v0 + 5608) = 0x80000001C33EB910;
  *(_QWORD *)(v0 + 5616) = type metadata accessor for UsoTask_start_common_Journey(0);
  *(_QWORD *)(v0 + 5624) = 0xD000000000000017;
  *(_QWORD *)(v0 + 5632) = 0x80000001C33EB930;
  *(_QWORD *)(v0 + 5640) = type metadata accessor for UsoTask_request_common_Journey(0);
  *(_QWORD *)(v0 + 5648) = 0xD000000000000016;
  *(_QWORD *)(v0 + 5656) = 0x80000001C33EB950;
  *(_QWORD *)(v0 + 5664) = type metadata accessor for UsoTask_update_common_Journey(0);
  *(_QWORD *)(v0 + 5672) = 0xD000000000000014;
  *(_QWORD *)(v0 + 5680) = 0x80000001C33EB970;
  *(_QWORD *)(v0 + 5688) = type metadata accessor for UsoTask_stop_common_Journey(0);
  *(_QWORD *)(v0 + 5696) = 0xD000000000000016;
  *(_QWORD *)(v0 + 5704) = 0x80000001C33EB990;
  *(_QWORD *)(v0 + 5712) = type metadata accessor for UsoTask_noVerb_common_Journey(0);
  *(_QWORD *)(v0 + 5720) = 0xD000000000000014;
  *(_QWORD *)(v0 + 5728) = 0x80000001C33EB9B0;
  *(_QWORD *)(v0 + 5736) = type metadata accessor for UsoTask_noVerb_common_Photo(0);
  *(_QWORD *)(v0 + 5744) = 0xD000000000000014;
  *(_QWORD *)(v0 + 5752) = 0x80000001C33EB9D0;
  *(_QWORD *)(v0 + 5760) = type metadata accessor for UsoTask_unlike_common_Photo(0);
  *(_QWORD *)(v0 + 5768) = 0xD000000000000014;
  *(_QWORD *)(v0 + 5776) = 0x80000001C33EB9F0;
  *(_QWORD *)(v0 + 5784) = type metadata accessor for UsoTask_unhide_common_Photo(0);
  *(_QWORD *)(v0 + 5792) = 0xD000000000000016;
  *(_QWORD *)(v0 + 5800) = 0x80000001C33EBA10;
  *(_QWORD *)(v0 + 5808) = type metadata accessor for UsoTask_applyTag_common_Photo(0);
  *(_QWORD *)(v0 + 5816) = 0xD000000000000018;
  *(_QWORD *)(v0 + 5824) = 0x80000001C33EBA30;
  *(_QWORD *)(v0 + 5832) = type metadata accessor for UsoTask_addToAlbum_common_Photo(0);
  *(_QWORD *)(v0 + 5840) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 5848) = 0x80000001C33EBA50;
  *(_QWORD *)(v0 + 5856) = type metadata accessor for UsoTask_skipBackward_common_Photo(0);
  *(_QWORD *)(v0 + 5864) = 0xD000000000000017;
  *(_QWORD *)(v0 + 5872) = 0x80000001C33EBA70;
  *(_QWORD *)(v0 + 5880) = type metadata accessor for UsoTask_summarise_common_Photo(0);
  *(_QWORD *)(v0 + 5888) = 0xD000000000000014;
  *(_QWORD *)(v0 + 5896) = 0x80000001C33EBA90;
  *(_QWORD *)(v0 + 5904) = type metadata accessor for UsoTask_create_common_Photo(0);
  *(_QWORD *)(v0 + 5912) = 0xD000000000000017;
  *(_QWORD *)(v0 + 5920) = 0x80000001C33EBAB0;
  *(_QWORD *)(v0 + 5928) = type metadata accessor for UsoTask_removeTag_common_Photo(0);
  *(_QWORD *)(v0 + 5936) = 0xD000000000000014;
  *(_QWORD *)(v0 + 5944) = 0x80000001C33EBAD0;
  *(_QWORD *)(v0 + 5952) = type metadata accessor for UsoTask_delete_common_Photo(0);
  *(_QWORD *)(v0 + 5960) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 5968) = 0x80000001C33EBAF0;
  *(_QWORD *)(v0 + 5976) = type metadata accessor for UsoTask_checkExistence_common_Photo(0);
  *(_QWORD *)(v0 + 5984) = 0xD000000000000012;
  *(_QWORD *)(v0 + 5992) = 0x80000001C33EBB10;
  *(_QWORD *)(v0 + 6000) = type metadata accessor for UsoTask_like_common_Photo(0);
  *(_QWORD *)(v0 + 6008) = 0xD000000000000012;
  *(_QWORD *)(v0 + 6016) = 0x80000001C33EBB30;
  *(_QWORD *)(v0 + 6024) = type metadata accessor for UsoTask_play_common_Photo(0);
  *(_QWORD *)(v0 + 6032) = 0xD000000000000019;
  *(_QWORD *)(v0 + 6040) = 0x80000001C33EBB50;
  *(_QWORD *)(v0 + 6048) = type metadata accessor for UsoTask_applyFilter_common_Photo(0);
  *(_QWORD *)(v0 + 6056) = 0xD000000000000012;
  *(_QWORD *)(v0 + 6064) = 0x80000001C33EBB70;
  *(_QWORD *)(v0 + 6072) = type metadata accessor for UsoTask_hide_common_Photo(0);
  *(_QWORD *)(v0 + 6080) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 6088) = 0x80000001C33EBB90;
  *(_QWORD *)(v0 + 6096) = type metadata accessor for UsoTask_removeFilter_common_Photo(0);
  *(_QWORD *)(v0 + 6104) = 0xD000000000000019;
  *(_QWORD *)(v0 + 6112) = 0x80000001C33EBBB0;
  *(_QWORD *)(v0 + 6120) = type metadata accessor for UsoTask_skipForward_common_Photo(0);
  *(_QWORD *)(v0 + 6128) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 6136) = 0x80000001C33EBBD0;
  *(_QWORD *)(v0 + 6144) = type metadata accessor for UsoTask_removeFromAlbum_common_Photo(0);
  *(_QWORD *)(v0 + 6152) = 0xD000000000000026;
  *(_QWORD *)(v0 + 6160) = 0x80000001C33EBBF0;
  *(_QWORD *)(v0 + 6168) = type metadata accessor for UsoTask_noVerb_commonMessage_MessageAttribute(0);
  *(_QWORD *)(v0 + 6176) = 0xD000000000000019;
  *(_QWORD *)(v0 + 6184) = 0x80000001C33EBC20;
  *(_QWORD *)(v0 + 6192) = type metadata accessor for UsoTask_noVerb_common_Salutation(0);
  *(_QWORD *)(v0 + 6200) = 0xD000000000000017;
  *(_QWORD *)(v0 + 6208) = 0x80000001C33EBC40;
  *(_QWORD *)(v0 + 6216) = type metadata accessor for UsoTask_tell_common_Salutation(0);
  *(_QWORD *)(v0 + 6224) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 6232) = 0x80000001C33EBC60;
  *(_QWORD *)(v0 + 6240) = type metadata accessor for UsoTask_noVerb_common_Organization(0);
  *(_QWORD *)(v0 + 6248) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 6256) = 0x80000001C33EBC80;
  *(_QWORD *)(v0 + 6264) = type metadata accessor for UsoTask_create_common_Organization(0);
  *(_QWORD *)(v0 + 6272) = 0xD000000000000019;
  *(_QWORD *)(v0 + 6280) = 0x80000001C33EBCA0;
  *(_QWORD *)(v0 + 6288) = type metadata accessor for UsoTask_read_common_Organization(0);
  *(_QWORD *)(v0 + 6296) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 6304) = 0x80000001C33EBCC0;
  *(_QWORD *)(v0 + 6312) = type metadata accessor for UsoTask_update_common_Organization(0);
  *(_QWORD *)(v0 + 6320) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 6328) = 0x80000001C33EBCE0;
  *(_QWORD *)(v0 + 6336) = type metadata accessor for UsoTask_request_common_Organization(0);
  *(_QWORD *)(v0 + 6344) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 6352) = 0x80000001C33EBD00;
  *(_QWORD *)(v0 + 6360) = type metadata accessor for UsoTask_summarise_common_Organization(0);
  *(_QWORD *)(v0 + 6368) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 6376) = 0x80000001C33EBD20;
  *(_QWORD *)(v0 + 6384) = type metadata accessor for UsoTask_delete_common_Organization(0);
  *(_QWORD *)(v0 + 6392) = 0xD000000000000023;
  *(_QWORD *)(v0 + 6400) = 0x80000001C33EBD40;
  *(_QWORD *)(v0 + 6408) = type metadata accessor for UsoTask_checkExistence_common_Organization(0);
  *(_QWORD *)(v0 + 6416) = 0xD00000000000002CLL;
  *(_QWORD *)(v0 + 6424) = 0x80000001C33EBD70;
  *(_QWORD *)(v0 + 6432) = type metadata accessor for UsoTask_noVerb_commonArithmetic_ArithmeticAttribute(0);
  *(_QWORD *)(v0 + 6440) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 6448) = 0x80000001C33EBDA0;
  *(_QWORD *)(v0 + 6456) = type metadata accessor for UsoTask_noVerb_common_MultipliedNumber(0);
  *(_QWORD *)(v0 + 6464) = 0xD000000000000023;
  *(_QWORD *)(v0 + 6472) = 0x80000001C33EBDC0;
  *(_QWORD *)(v0 + 6480) = type metadata accessor for UsoTask_setDateTimeRange_common_CarSetting(0);
  *(_QWORD *)(v0 + 6488) = 0xD000000000000021;
  *(_QWORD *)(v0 + 6496) = 0x80000001C33EBDF0;
  *(_QWORD *)(v0 + 6504) = type metadata accessor for UsoTask_checkExistence_common_CarSetting(0);
  *(_QWORD *)(v0 + 6512) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 6520) = 0x80000001C33EBE20;
  *(_QWORD *)(v0 + 6528) = type metadata accessor for UsoTask_setDuration_common_CarSetting(0);
  *(_QWORD *)(v0 + 6536) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 6544) = 0x80000001C33EBE40;
  *(_QWORD *)(v0 + 6552) = type metadata accessor for UsoTask_setNumber_common_CarSetting(0);
  *(_QWORD *)(v0 + 6560) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 6568) = 0x80000001C33EBE60;
  *(_QWORD *)(v0 + 6576) = type metadata accessor for UsoTask_increaseBy_common_CarSetting(0);
  *(_QWORD *)(v0 + 6584) = 0xD000000000000028;
  *(_QWORD *)(v0 + 6592) = 0x80000001C33EBE80;
  *(_QWORD *)(v0 + 6600) = type metadata accessor for UsoTask_decreaseByMeasurement_common_CarSetting(0);
  *(_QWORD *)(v0 + 6608) = 0xD000000000000017;
  *(_QWORD *)(v0 + 6616) = 0x80000001C33EBEB0;
  *(_QWORD *)(v0 + 6624) = type metadata accessor for UsoTask_open_common_CarSetting(0);
  *(_QWORD *)(v0 + 6632) = 0xD000000000000019;
  *(_QWORD *)(v0 + 6640) = 0x80000001C33EBED0;
  *(_QWORD *)(v0 + 6648) = type metadata accessor for UsoTask_toggle_common_CarSetting(0);
  *(_QWORD *)(v0 + 6656) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 6664) = 0x80000001C33EBEF0;
  *(_QWORD *)(v0 + 6672) = type metadata accessor for UsoTask_disable_common_CarSetting(0);
  *(_QWORD *)(v0 + 6680) = 0xD000000000000016;
  *(_QWORD *)(v0 + 6688) = 0x80000001C33EBF10;
  *(_QWORD *)(v0 + 6696) = type metadata accessor for UsoTask_set_common_CarSetting(0);
  *(_QWORD *)(v0 + 6704) = 0xD000000000000021;
  *(_QWORD *)(v0 + 6712) = 0x80000001C33EBF30;
  *(_QWORD *)(v0 + 6720) = type metadata accessor for UsoTask_setMeasurement_common_CarSetting(0);
  *(_QWORD *)(v0 + 6728) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 6736) = 0x80000001C33EBF60;
  *(_QWORD *)(v0 + 6744) = type metadata accessor for UsoTask_summarise_common_CarSetting(0);
  *(_QWORD *)(v0 + 6752) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 6760) = 0x80000001C33EBF80;
  *(_QWORD *)(v0 + 6768) = type metadata accessor for UsoTask_setLabel_common_CarSetting(0);
  *(_QWORD *)(v0 + 6776) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 6784) = 0x80000001C33EBFA0;
  *(_QWORD *)(v0 + 6792) = type metadata accessor for UsoTask_setProfile_common_CarSetting(0);
  *(_QWORD *)(v0 + 6800) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 6808) = 0x80000001C33EBFC0;
  *(_QWORD *)(v0 + 6816) = type metadata accessor for UsoTask_request_common_CarSetting(0);
  *(_QWORD *)(v0 + 6824) = 0xD000000000000019;
  *(_QWORD *)(v0 + 6832) = 0x80000001C33EBFE0;
  *(_QWORD *)(v0 + 6840) = type metadata accessor for UsoTask_noVerb_common_CarSetting(0);
  *(_QWORD *)(v0 + 6848) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 6856) = 0x80000001C33EC000;
  *(_QWORD *)(v0 + 6864) = type metadata accessor for UsoTask_decreaseBy_common_CarSetting(0);
  *(_QWORD *)(v0 + 6872) = 0xD000000000000028;
  *(_QWORD *)(v0 + 6880) = 0x80000001C33EC020;
  *(_QWORD *)(v0 + 6888) = type metadata accessor for UsoTask_increaseByMeasurement_common_CarSetting(0);
  *(_QWORD *)(v0 + 6896) = 0xD000000000000019;
  *(_QWORD *)(v0 + 6904) = 0x80000001C33EC050;
  *(_QWORD *)(v0 + 6912) = type metadata accessor for UsoTask_enable_common_CarSetting(0);
  *(_QWORD *)(v0 + 6920) = 0xD000000000000017;
  *(_QWORD *)(v0 + 6928) = 0x80000001C33EC070;
  *(_QWORD *)(v0 + 6936) = type metadata accessor for UsoTask_noVerb_common_TimeUnit(0);
  *(_QWORD *)(v0 + 6944) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 6952) = 0x80000001C33EC090;
  *(_QWORD *)(v0 + 6960) = type metadata accessor for UsoTask_noVerb_common_OffsetDirection(0);
  *(_QWORD *)(v0 + 6968) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 6976) = 0x80000001C33EC0B0;
  *(_QWORD *)(v0 + 6984) = type metadata accessor for UsoTask_noVerb_common_Interjection(0);
  *(_QWORD *)(v0 + 6992) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 7000) = 0x80000001C33EC0D0;
  *(_QWORD *)(v0 + 7008) = type metadata accessor for UsoTask_checkExistence_common_Event(0);
  *(_QWORD *)(v0 + 7016) = 0xD000000000000017;
  *(_QWORD *)(v0 + 7024) = 0x80000001C33EC0F0;
  *(_QWORD *)(v0 + 7032) = type metadata accessor for UsoTask_summarise_common_Event(0);
  *(_QWORD *)(v0 + 7040) = 0xD000000000000014;
  *(_QWORD *)(v0 + 7048) = 0x80000001C33EC110;
  *(_QWORD *)(v0 + 7056) = type metadata accessor for UsoTask_noVerb_common_Event(0);
  *(_QWORD *)(v0 + 7064) = 0xD000000000000015;
  *(_QWORD *)(v0 + 7072) = 0x80000001C33EC130;
  *(_QWORD *)(v0 + 7080) = type metadata accessor for UsoTask_request_common_Event(0);
  *(_QWORD *)(v0 + 7088) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 7096) = 0x80000001C33EC150;
  *(_QWORD *)(v0 + 7104) = type metadata accessor for UsoTask_noVerb_common_MedicationEvent(0);
  *(_QWORD *)(v0 + 7112) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 7120) = 0x80000001C33EC170;
  *(_QWORD *)(v0 + 7128) = type metadata accessor for UsoTask_request_common_MedicationEvent(0);
  *(_QWORD *)(v0 + 7136) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 7144) = 0x80000001C33EC190;
  *(_QWORD *)(v0 + 7152) = type metadata accessor for UsoTask_snooze_common_MedicationEvent(0);
  *(_QWORD *)(v0 + 7160) = 0xD000000000000026;
  *(_QWORD *)(v0 + 7168) = 0x80000001C33EC1B0;
  *(_QWORD *)(v0 + 7176) = type metadata accessor for UsoTask_checkExistence_common_MedicationEvent(0);
  *(_QWORD *)(v0 + 7184) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 7192) = 0x80000001C33EC1E0;
  *(_QWORD *)(v0 + 7200) = type metadata accessor for UsoTask_create_common_MedicationEvent(0);
  *(_QWORD *)(v0 + 7208) = 0xD000000000000020;
  *(_QWORD *)(v0 + 7216) = 0x80000001C33EC200;
  *(_QWORD *)(v0 + 7224) = type metadata accessor for UsoTask_noVerb_common_RecurringDateTime(0);
  *(_QWORD *)(v0 + 7232) = 0xD000000000000013;
  *(_QWORD *)(v0 + 7240) = 0x80000001C33EC230;
  *(_QWORD *)(v0 + 7248) = type metadata accessor for UsoTask_noVerb_common_Date(0);
  *(_QWORD *)(v0 + 7256) = 0xD000000000000017;
  *(_QWORD *)(v0 + 7264) = 0x80000001C33EC250;
  *(_QWORD *)(v0 + 7272) = type metadata accessor for UsoTask_unreact_common_Message(0);
  *(_QWORD *)(v0 + 7280) = 0xD000000000000018;
  *(_QWORD *)(v0 + 7288) = 0x80000001C33EC270;
  *(_QWORD *)(v0 + 7296) = type metadata accessor for UsoTask_previous_common_Message(0);
  *(_QWORD *)(v0 + 7304) = 0xD000000000000016;
  *(_QWORD *)(v0 + 7312) = 0x80000001C33EC290;
  *(_QWORD *)(v0 + 7320) = type metadata accessor for UsoTask_noVerb_common_Message(0);
  *(_QWORD *)(v0 + 7328) = 0xD000000000000019;
  *(_QWORD *)(v0 + 7336) = 0x80000001C33EC2B0;
  *(_QWORD *)(v0 + 7344) = type metadata accessor for UsoTask_summarise_common_Message(0);
  *(_QWORD *)(v0 + 7352) = 0xD000000000000015;
  *(_QWORD *)(v0 + 7360) = 0x80000001C33EC2D0;
  *(_QWORD *)(v0 + 7368) = type metadata accessor for UsoTask_check_common_Message(0);
  *(_QWORD *)(v0 + 7376) = 0xD000000000000012;
  *(_QWORD *)(v0 + 7384) = 0x80000001C33EC2F0;
  *(_QWORD *)(v0 + 7392) = type metadata accessor for UsoTask_cc_common_Message(0);
  *(_QWORD *)(v0 + 7400) = 0xD000000000000017;
  *(_QWORD *)(v0 + 7408) = 0x80000001C33EC310;
  *(_QWORD *)(v0 + 7416) = type metadata accessor for UsoTask_unshare_common_Message(0);
  *(_QWORD *)(v0 + 7424) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 7432) = 0x80000001C33EC330;
  *(_QWORD *)(v0 + 7440) = type metadata accessor for UsoTask_checkExistence_common_Message(0);
  *(_QWORD *)(v0 + 7448) = 0xD000000000000014;
  *(_QWORD *)(v0 + 7456) = 0x80000001C33EC350;
  *(_QWORD *)(v0 + 7464) = type metadata accessor for UsoTask_skip_common_Message(0);
  *(_QWORD *)(v0 + 7472) = 0xD000000000000014;
  *(_QWORD *)(v0 + 7480) = 0x80000001C33EC370;
  *(_QWORD *)(v0 + 7488) = type metadata accessor for UsoTask_read_common_Message(0);
  *(_QWORD *)(v0 + 7496) = 0xD000000000000014;
  *(_QWORD *)(v0 + 7504) = 0x80000001C33EC390;
  *(_QWORD *)(v0 + 7512) = type metadata accessor for UsoTask_send_common_Message(0);
  *(_QWORD *)(v0 + 7520) = 0xD000000000000015;
  *(_QWORD *)(v0 + 7528) = 0x80000001C33EC3B0;
  *(_QWORD *)(v0 + 7536) = type metadata accessor for UsoTask_reply_common_Message(0);
  *(_QWORD *)(v0 + 7544) = 0xD000000000000017;
  *(_QWORD *)(v0 + 7552) = 0x80000001C33EC3D0;
  *(_QWORD *)(v0 + 7560) = type metadata accessor for UsoTask_forward_common_Message(0);
  *(_QWORD *)(v0 + 7568) = 0xD000000000000017;
  *(_QWORD *)(v0 + 7576) = 0x80000001C33EC3F0;
  *(_QWORD *)(v0 + 7584) = type metadata accessor for UsoTask_request_common_Message(0);
  *(_QWORD *)(v0 + 7592) = 0xD000000000000018;
  *(_QWORD *)(v0 + 7600) = 0x80000001C33EC410;
  *(_QWORD *)(v0 + 7608) = type metadata accessor for UsoTask_continue_common_Message(0);
  *(_QWORD *)(v0 + 7616) = 0xD000000000000014;
  *(_QWORD *)(v0 + 7624) = 0x80000001C33EC430;
  *(_QWORD *)(v0 + 7632) = type metadata accessor for UsoTask_stop_common_Message(0);
  *(_QWORD *)(v0 + 7640) = 0xD000000000000015;
  *(_QWORD *)(v0 + 7648) = 0x80000001C33EC450;
  *(_QWORD *)(v0 + 7656) = type metadata accessor for UsoTask_react_common_Message(0);
  *(_QWORD *)(v0 + 7664) = 0xD000000000000016;
  *(_QWORD *)(v0 + 7672) = 0x80000001C33EC470;
  *(_QWORD *)(v0 + 7680) = type metadata accessor for UsoTask_delete_common_Message(0);
  *(_QWORD *)(v0 + 7688) = 0xD000000000000016;
  *(_QWORD *)(v0 + 7696) = 0x80000001C33EC490;
  *(_QWORD *)(v0 + 7704) = type metadata accessor for UsoTask_update_common_Message(0);
  *(_QWORD *)(v0 + 7712) = 0xD000000000000015;
  *(_QWORD *)(v0 + 7720) = 0x80000001C33EC4B0;
  *(_QWORD *)(v0 + 7728) = type metadata accessor for UsoTask_share_common_Message(0);
  *(_QWORD *)(v0 + 7736) = 0xD000000000000014;
  *(_QWORD *)(v0 + 7744) = 0x80000001C33EC4D0;
  *(_QWORD *)(v0 + 7752) = type metadata accessor for UsoTask_save_common_Message(0);
  *(_QWORD *)(v0 + 7760) = 0xD000000000000016;
  *(_QWORD *)(v0 + 7768) = 0x80000001C33EC4F0;
  *(_QWORD *)(v0 + 7776) = type metadata accessor for UsoTask_unsend_common_Message(0);
  *(_QWORD *)(v0 + 7784) = 0xD000000000000022;
  *(_QWORD *)(v0 + 7792) = 0x80000001C33EC510;
  *(_QWORD *)(v0 + 7800) = type metadata accessor for UsoTask_request_common_MedicationSchedule(0);
  *(_QWORD *)(v0 + 7808) = 0xD000000000000021;
  *(_QWORD *)(v0 + 7816) = 0x80000001C33EC540;
  *(_QWORD *)(v0 + 7824) = type metadata accessor for UsoTask_noVerb_common_MedicationSchedule(0);
  *(_QWORD *)(v0 + 7832) = 0xD000000000000029;
  *(_QWORD *)(v0 + 7840) = 0x80000001C33EC570;
  *(_QWORD *)(v0 + 7848) = type metadata accessor for UsoTask_checkExistence_common_MedicationSchedule(0);
  *(_QWORD *)(v0 + 7856) = 0xD000000000000024;
  *(_QWORD *)(v0 + 7864) = 0x80000001C33EC5A0;
  *(_QWORD *)(v0 + 7872) = type metadata accessor for UsoTask_summarise_common_MedicationSchedule(0);
  *(_QWORD *)(v0 + 7880) = 0xD000000000000021;
  *(_QWORD *)(v0 + 7888) = 0x80000001C33EC5D0;
  *(_QWORD *)(v0 + 7896) = type metadata accessor for UsoTask_update_common_MedicationSchedule(0);
  *(_QWORD *)(v0 + 7904) = 0xD000000000000021;
  *(_QWORD *)(v0 + 7912) = 0x80000001C33EC600;
  *(_QWORD *)(v0 + 7920) = type metadata accessor for UsoTask_create_common_MedicationSchedule(0);
  *(_QWORD *)(v0 + 7928) = 0xD000000000000021;
  *(_QWORD *)(v0 + 7936) = 0x80000001C33EC630;
  *(_QWORD *)(v0 + 7944) = type metadata accessor for UsoTask_delete_common_MedicationSchedule(0);
  *(_QWORD *)(v0 + 7952) = 0xD000000000000019;
  *(_QWORD *)(v0 + 7960) = 0x80000001C33EC660;
  *(_QWORD *)(v0 + 7968) = type metadata accessor for UsoTask_noVerb_common_OffsetDate(0);
  *(_QWORD *)(v0 + 7976) = 0xD000000000000021;
  *(_QWORD *)(v0 + 7984) = 0x80000001C33EC680;
  *(_QWORD *)(v0 + 7992) = type metadata accessor for UsoTask_startCapture_common_MediaCapture(0);
  *(_QWORD *)(v0 + 8000) = 0xD000000000000020;
  *(_QWORD *)(v0 + 8008) = 0x80000001C33EC6B0;
  *(_QWORD *)(v0 + 8016) = type metadata accessor for UsoTask_stopCapture_common_MediaCapture(0);
  *(_QWORD *)(v0 + 8024) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 8032) = 0x80000001C33EC6E0;
  *(_QWORD *)(v0 + 8040) = type metadata accessor for UsoTask_capture_common_MediaCapture(0);
  *(_QWORD *)(v0 + 8048) = 0xD000000000000017;
  *(_QWORD *)(v0 + 8056) = 0x80000001C33EC700;
  *(_QWORD *)(v0 + 8064) = type metadata accessor for UsoTask_noVerb_common_Duration(0);
  *(_QWORD *)(v0 + 8072) = 0xD000000000000019;
  *(_QWORD *)(v0 + 8080) = 0x80000001C33EC720;
  *(_QWORD *)(v0 + 8088) = type metadata accessor for UsoTask_summarise_common_Payment(0);
  *(_QWORD *)(v0 + 8096) = 0xD000000000000016;
  *(_QWORD *)(v0 + 8104) = 0x80000001C33EC740;
  *(_QWORD *)(v0 + 8112) = type metadata accessor for UsoTask_noVerb_common_Payment(0);
  *(_QWORD *)(v0 + 8120) = 0xD000000000000020;
  *(_QWORD *)(v0 + 8128) = 0x80000001C33EC760;
  *(_QWORD *)(v0 + 8136) = type metadata accessor for UsoTask_summariseHighest_common_Payment(0);
  *(_QWORD *)(v0 + 8144) = 0xD000000000000016;
  *(_QWORD *)(v0 + 8152) = 0x80000001C33EC790;
  *(_QWORD *)(v0 + 8160) = type metadata accessor for UsoTask_cancel_common_Payment(0);
  *(_QWORD *)(v0 + 8168) = 0xD000000000000017;
  *(_QWORD *)(v0 + 8176) = 0x80000001C33EC7B0;
  *(_QWORD *)(v0 + 8184) = type metadata accessor for UsoTask_request_common_Payment(0);
  *(_QWORD *)(v0 + 0x2000) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 8200) = 0x80000001C33EC7D0;
  *(_QWORD *)(v0 + 8208) = type metadata accessor for UsoTask_requestMoney_common_Payment(0);
  *(_QWORD *)(v0 + 8216) = 0xD000000000000013;
  *(_QWORD *)(v0 + 8224) = 0x80000001C33EC7F0;
  *(_QWORD *)(v0 + 8232) = type metadata accessor for UsoTask_pay_common_Payment(0);
  *(_QWORD *)(v0 + 8240) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 8248) = 0x80000001C33EC810;
  *(_QWORD *)(v0 + 8256) = type metadata accessor for UsoTask_summariseLowest_common_Payment(0);
  *(_QWORD *)(v0 + 8264) = 0xD000000000000016;
  *(_QWORD *)(v0 + 8272) = 0x80000001C33EC830;
  *(_QWORD *)(v0 + 8280) = type metadata accessor for UsoTask_update_common_Payment(0);
  *(_QWORD *)(v0 + 8288) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 8296) = 0x80000001C33EC850;
  *(_QWORD *)(v0 + 8304) = type metadata accessor for UsoTask_checkExistence_common_Payment(0);
  *(_QWORD *)(v0 + 8312) = 0xD000000000000018;
  *(_QWORD *)(v0 + 8320) = 0x80000001C33EC870;
  *(_QWORD *)(v0 + 8328) = type metadata accessor for UsoTask_run_common_VoiceCommand(0);
  *(_QWORD *)(v0 + 8336) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 8344) = 0x80000001C33EC890;
  *(_QWORD *)(v0 + 8352) = type metadata accessor for UsoTask_execute_common_VoiceCommand(0);
  *(_QWORD *)(v0 + 8360) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 8368) = 0x80000001C33EC8B0;
  *(_QWORD *)(v0 + 8376) = type metadata accessor for UsoTask_delete_common_VoiceCommand(0);
  *(_QWORD *)(v0 + 8384) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 8392) = 0x80000001C33EC8D0;
  *(_QWORD *)(v0 + 8400) = type metadata accessor for UsoTask_disable_common_VoiceCommand(0);
  *(_QWORD *)(v0 + 8408) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 8416) = 0x80000001C33EC8F0;
  *(_QWORD *)(v0 + 8424) = type metadata accessor for UsoTask_summarise_common_VoiceCommand(0);
  *(_QWORD *)(v0 + 8432) = 0xD000000000000023;
  *(_QWORD *)(v0 + 8440) = 0x80000001C33EC910;
  *(_QWORD *)(v0 + 8448) = type metadata accessor for UsoTask_checkExistence_common_VoiceCommand(0);
  *(_QWORD *)(v0 + 8456) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 8464) = 0x80000001C33EC940;
  *(_QWORD *)(v0 + 8472) = type metadata accessor for UsoTask_update_common_VoiceCommand(0);
  *(_QWORD *)(v0 + 8480) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 8488) = 0x80000001C33EC960;
  *(_QWORD *)(v0 + 8496) = type metadata accessor for UsoTask_noVerb_common_VoiceCommand(0);
  *(_QWORD *)(v0 + 8504) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 8512) = 0x80000001C33EC980;
  *(_QWORD *)(v0 + 8520) = type metadata accessor for UsoTask_create_common_VoiceCommand(0);
  *(_QWORD *)(v0 + 8528) = 0xD000000000000010;
  *(_QWORD *)(v0 + 8536) = 0x80000001C33EC9A0;
  *(_QWORD *)(v0 + 8544) = type metadata accessor for UsoTask_park_common_Car(0);
  *(_QWORD *)(v0 + 8552) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 8560) = 0x80000001C33EC9C0;
  *(_QWORD *)(v0 + 8568) = type metadata accessor for UsoTask_checkExistence_common_Car(0);
  *(_QWORD *)(v0 + 8576) = 0xD000000000000012;
  *(_QWORD *)(v0 + 8584) = 0x80000001C33EC9E0;
  *(_QWORD *)(v0 + 8592) = type metadata accessor for UsoTask_noVerb_common_Car(0);
  *(_QWORD *)(v0 + 8600) = 0xD000000000000010;
  *(_QWORD *)(v0 + 8608) = 0x80000001C33ECA00;
  *(_QWORD *)(v0 + 8616) = type metadata accessor for UsoTask_find_common_Car(0);
  *(_QWORD *)(v0 + 8624) = 0xD000000000000010;
  *(_QWORD *)(v0 + 8632) = 0x80000001C33ECA20;
  *(_QWORD *)(v0 + 8640) = type metadata accessor for UsoTask_ping_common_Car(0);
  *(_QWORD *)(v0 + 8648) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 8656) = 0x80000001C33ECA40;
  *(_QWORD *)(v0 + 8664) = type metadata accessor for UsoTask_noVerb_common_MixedFraction(0);
  *(_QWORD *)(v0 + 8672) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 8680) = 0x80000001C33ECA60;
  *(_QWORD *)(v0 + 8688) = type metadata accessor for UsoTask_noVerb_common_ReferenceType(0);
  *(_QWORD *)(v0 + 8696) = 0xD000000000000021;
  *(_QWORD *)(v0 + 8704) = 0x80000001C33ECA80;
  *(_QWORD *)(v0 + 8712) = type metadata accessor for UsoTask_noVerb_appleAlarm_AlarmAttribute(0);
  *(_QWORD *)(v0 + 8720) = 0xD000000000000012;
  *(_QWORD *)(v0 + 8728) = 0x80000001C33ECAB0;
  *(_QWORD *)(v0 + 8736) = type metadata accessor for UsoTask_noVerb_common_Uri(0);
  *(_QWORD *)(v0 + 8744) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 8752) = 0x80000001C33ECAD0;
  *(_QWORD *)(v0 + 8760) = type metadata accessor for UsoTask_noVerb_common_CurrencyAmount(0);
  *(_QWORD *)(v0 + 8768) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 8776) = 0x80000001C33ECAF0;
  *(_QWORD *)(v0 + 8784) = type metadata accessor for UsoTask_noVerb_common_MediaItemType(0);
  *(_QWORD *)(v0 + 8792) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 8800) = 0x80000001C33ECB10;
  *(_QWORD *)(v0 + 8808) = type metadata accessor for UsoTask_noVerb_common_Geolocation(0);
  *(_QWORD *)(v0 + 8816) = 0xD000000000000024;
  *(_QWORD *)(v0 + 8824) = 0x80000001C33ECB30;
  *(_QWORD *)(v0 + 8832) = type metadata accessor for UsoTask_noVerb_commonFindMy_DeviceAttribute(0);
  *(_QWORD *)(v0 + 8840) = 0xD000000000000016;
  *(_QWORD *)(v0 + 8848) = 0x80000001C33ECB60;
  *(_QWORD *)(v0 + 8856) = type metadata accessor for UsoTask_noVerb_common_Contact(0);
  *(_QWORD *)(v0 + 8864) = 0xD000000000000030;
  *(_QWORD *)(v0 + 8872) = 0x80000001C33ECB80;
  *(_QWORD *)(v0 + 8880) = type metadata accessor for UsoTask_noVerb_commonEventTrigger_EventTriggerAttribute(0);
  *(_QWORD *)(v0 + 8888) = 0xD000000000000032;
  *(_QWORD *)(v0 + 8896) = 0x80000001C33ECBC0;
  *(_QWORD *)(v0 + 8904) = type metadata accessor for UsoTask_noVerb_commonCalendarEvent_CalendarEventAttribute(0);
  *(_QWORD *)(v0 + 8912) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 8920) = 0x80000001C33ECC00;
  *(_QWORD *)(v0 + 8928) = type metadata accessor for UsoTask_noVerb_common_PointOfInterest(0);
  *(_QWORD *)(v0 + 8936) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 8944) = 0x80000001C33ECC20;
  *(_QWORD *)(v0 + 8952) = type metadata accessor for UsoTask_create_common_PointOfInterest(0);
  *(_QWORD *)(v0 + 8960) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 8968) = 0x80000001C33ECC40;
  *(_QWORD *)(v0 + 8976) = type metadata accessor for UsoTask_delete_common_PointOfInterest(0);
  *(_QWORD *)(v0 + 8984) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 8992) = 0x80000001C33ECC60;
  *(_QWORD *)(v0 + 9000) = type metadata accessor for UsoTask_request_common_PointOfInterest(0);
  *(_QWORD *)(v0 + 9008) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 9016) = 0x80000001C33ECC80;
  *(_QWORD *)(v0 + 9024) = type metadata accessor for UsoTask_update_common_PointOfInterest(0);
  *(_QWORD *)(v0 + 9032) = 0xD000000000000021;
  *(_QWORD *)(v0 + 9040) = 0x80000001C33ECCA0;
  *(_QWORD *)(v0 + 9048) = type metadata accessor for UsoTask_summarise_common_PointOfInterest(0);
  *(_QWORD *)(v0 + 9056) = 0xD000000000000026;
  *(_QWORD *)(v0 + 9064) = 0x80000001C33ECCD0;
  *(_QWORD *)(v0 + 9072) = type metadata accessor for UsoTask_checkExistence_common_PointOfInterest(0);
  *(_QWORD *)(v0 + 9080) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 9088) = 0x80000001C33ECD00;
  *(_QWORD *)(v0 + 9096) = type metadata accessor for UsoTask_tell_common_SocialInterjection(0);
  *(_QWORD *)(v0 + 9104) = 0xD000000000000021;
  *(_QWORD *)(v0 + 9112) = 0x80000001C33ECD20;
  *(_QWORD *)(v0 + 9120) = type metadata accessor for UsoTask_noVerb_common_SocialInterjection(0);
  *(_QWORD *)(v0 + 9128) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 9136) = 0x80000001C33ECD50;
  *(_QWORD *)(v0 + 9144) = type metadata accessor for UsoTask_summarise_common_SafetySession(0);
  *(_QWORD *)(v0 + 9152) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 9160) = 0x80000001C33ECD70;
  *(_QWORD *)(v0 + 9168) = type metadata accessor for UsoTask_create_common_SafetySession(0);
  *(_QWORD *)(v0 + 9176) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 9184) = 0x80000001C33ECD90;
  *(_QWORD *)(v0 + 9192) = type metadata accessor for UsoTask_update_common_SafetySession(0);
  *(_QWORD *)(v0 + 9200) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 9208) = 0x80000001C33ECDB0;
  *(_QWORD *)(v0 + 9216) = type metadata accessor for UsoTask_request_common_SafetySession(0);
  *(_QWORD *)(v0 + 9224) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 9232) = 0x80000001C33ECDD0;
  *(_QWORD *)(v0 + 9240) = type metadata accessor for UsoTask_noVerb_common_SafetySession(0);
  *(_QWORD *)(v0 + 9248) = 0xD000000000000024;
  *(_QWORD *)(v0 + 9256) = 0x80000001C33ECDF0;
  *(_QWORD *)(v0 + 9264) = type metadata accessor for UsoTask_checkExistence_common_SafetySession(0);
  *(_QWORD *)(v0 + 9272) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 9280) = 0x80000001C33ECE20;
  *(_QWORD *)(v0 + 9288) = type metadata accessor for UsoTask_pause_common_SafetySession(0);
  *(_QWORD *)(v0 + 9296) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 9304) = 0x80000001C33ECE40;
  *(_QWORD *)(v0 + 9312) = type metadata accessor for UsoTask_delete_common_SafetySession(0);
  *(_QWORD *)(v0 + 9320) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 9328) = 0x80000001C33ECE60;
  *(_QWORD *)(v0 + 9336) = type metadata accessor for UsoTask_restart_common_SafetySession(0);
  *(_QWORD *)(v0 + 9344) = 0xD000000000000020;
  *(_QWORD *)(v0 + 9352) = 0x80000001C33ECE80;
  *(_QWORD *)(v0 + 9360) = type metadata accessor for UsoTask_noVerb_common_KnowledgeQuestion(0);
  *(_QWORD *)(v0 + 9368) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 9376) = 0x80000001C33ECEB0;
  *(_QWORD *)(v0 + 9384) = type metadata accessor for UsoTask_ask_common_KnowledgeQuestion(0);
  *(_QWORD *)(v0 + 9392) = 0xD000000000000025;
  *(_QWORD *)(v0 + 9400) = 0x80000001C33ECED0;
  *(_QWORD *)(v0 + 9408) = type metadata accessor for UsoTask_noVerb_common_DateTimeRangeQualifier(0);
  *(_QWORD *)(v0 + 9416) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 9424) = 0x80000001C33ECF00;
  *(_QWORD *)(v0 + 9432) = type metadata accessor for UsoTask_noVerb_common_EmailAddress(0);
  *(_QWORD *)(v0 + 9440) = 0xD000000000000019;
  *(_QWORD *)(v0 + 9448) = 0x80000001C33ECF20;
  *(_QWORD *)(v0 + 9456) = type metadata accessor for UsoTask_noVerb_common_CarProfile(0);
  *(_QWORD *)(v0 + 9464) = 0xD000000000000029;
  *(_QWORD *)(v0 + 9472) = 0x80000001C33ECF40;
  *(_QWORD *)(v0 + 9480) = type metadata accessor for UsoTask_noVerb_common_KnowledgeQuestionAttribute(0);
  *(_QWORD *)(v0 + 9488) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 9496) = 0x80000001C33ECF70;
  *(_QWORD *)(v0 + 9504) = type metadata accessor for UsoTask_noVerb_common_Measurement(0);
  *(_QWORD *)(v0 + 9512) = 0xD000000000000016;
  *(_QWORD *)(v0 + 9520) = 0x80000001C33ECF90;
  *(_QWORD *)(v0 + 9528) = type metadata accessor for UsoTask_noVerb_common_Compass(0);
  *(_QWORD *)(v0 + 9536) = 0xD000000000000017;
  *(_QWORD *)(v0 + 9544) = 0x80000001C33ECFB0;
  *(_QWORD *)(v0 + 9552) = type metadata accessor for UsoTask_request_common_Compass(0);
  *(_QWORD *)(v0 + 9560) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 9568) = 0x80000001C33ECFD0;
  *(_QWORD *)(v0 + 9576) = type metadata accessor for UsoTask_checkExistence_common_Compass(0);
  *(_QWORD *)(v0 + 9584) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 9592) = 0x80000001C33ECFF0;
  *(_QWORD *)(v0 + 9600) = type metadata accessor for UsoTask_disableSetting_common_Reminder(0);
  *(_QWORD *)(v0 + 9608) = 0xD000000000000017;
  *(_QWORD *)(v0 + 9616) = 0x80000001C33ED010;
  *(_QWORD *)(v0 + 9624) = type metadata accessor for UsoTask_delete_common_Reminder(0);
  *(_QWORD *)(v0 + 9632) = 0xD000000000000017;
  *(_QWORD *)(v0 + 9640) = 0x80000001C33ED030;
  *(_QWORD *)(v0 + 9648) = type metadata accessor for UsoTask_noVerb_common_Reminder(0);
  *(_QWORD *)(v0 + 9656) = 0xD000000000000018;
  *(_QWORD *)(v0 + 9664) = 0x80000001C33ED050;
  *(_QWORD *)(v0 + 9672) = type metadata accessor for UsoTask_disable_common_Reminder(0);
  *(_QWORD *)(v0 + 9680) = 0xD000000000000018;
  *(_QWORD *)(v0 + 9688) = 0x80000001C33ED070;
  *(_QWORD *)(v0 + 9696) = type metadata accessor for UsoTask_request_common_Reminder(0);
  *(_QWORD *)(v0 + 9704) = 0xD000000000000015;
  *(_QWORD *)(v0 + 9712) = 0x80000001C33ED090;
  *(_QWORD *)(v0 + 9720) = type metadata accessor for UsoTask_hide_common_Reminder(0);
  *(_QWORD *)(v0 + 9728) = 0xD000000000000017;
  *(_QWORD *)(v0 + 9736) = 0x80000001C33ED0B0;
  *(_QWORD *)(v0 + 9744) = type metadata accessor for UsoTask_snooze_common_Reminder(0);
  *(_QWORD *)(v0 + 9752) = 0xD000000000000017;
  *(_QWORD *)(v0 + 9760) = 0x80000001C33ED0D0;
  *(_QWORD *)(v0 + 9768) = type metadata accessor for UsoTask_update_common_Reminder(0);
  *(_QWORD *)(v0 + 9776) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 9784) = 0x80000001C33ED0F0;
  *(_QWORD *)(v0 + 9792) = type metadata accessor for UsoTask_checkExistence_common_Reminder(0);
  *(_QWORD *)(v0 + 9800) = 0xD000000000000017;
  *(_QWORD *)(v0 + 9808) = 0x80000001C33ED110;
  *(_QWORD *)(v0 + 9816) = type metadata accessor for UsoTask_unhide_common_Reminder(0);
  *(_QWORD *)(v0 + 9824) = 0xD000000000000015;
  *(_QWORD *)(v0 + 9832) = 0x80000001C33ED130;
  *(_QWORD *)(v0 + 9840) = type metadata accessor for UsoTask_read_common_Reminder(0);
  *(_QWORD *)(v0 + 9848) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 9856) = 0x80000001C33ED150;
  *(_QWORD *)(v0 + 9864) = type metadata accessor for UsoTask_enableSetting_common_Reminder(0);
  *(_QWORD *)(v0 + 9872) = 0xD000000000000017;
  *(_QWORD *)(v0 + 9880) = 0x80000001C33ED170;
  *(_QWORD *)(v0 + 9888) = type metadata accessor for UsoTask_create_common_Reminder(0);
  *(_QWORD *)(v0 + 9896) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 9904) = 0x80000001C33ED190;
  *(_QWORD *)(v0 + 9912) = type metadata accessor for UsoTask_summarise_common_Reminder(0);
  *(_QWORD *)(v0 + 9920) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 9928) = 0x80000001C33ED1B0;
  *(_QWORD *)(v0 + 9936) = type metadata accessor for UsoTask_noVerb_common_LocalBusiness(0);
  *(_QWORD *)(v0 + 9944) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 9952) = 0x80000001C33ED1D0;
  *(_QWORD *)(v0 + 9960) = type metadata accessor for UsoTask_summarise_common_LocalBusiness(0);
  *(_QWORD *)(v0 + 9968) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 9976) = 0x80000001C33ED1F0;
  *(_QWORD *)(v0 + 9984) = type metadata accessor for UsoTask_request_common_LocalBusiness(0);
  *(_QWORD *)(v0 + 9992) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 10000) = 0x80000001C33ED210;
  *(_QWORD *)(v0 + 10008) = type metadata accessor for UsoTask_read_common_LocalBusiness(0);
  *(_QWORD *)(v0 + 10016) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 10024) = 0x80000001C33ED230;
  *(_QWORD *)(v0 + 10032) = type metadata accessor for UsoTask_create_common_LocalBusiness(0);
  *(_QWORD *)(v0 + 10040) = 0xD000000000000024;
  *(_QWORD *)(v0 + 10048) = 0x80000001C33ED250;
  *(_QWORD *)(v0 + 10056) = type metadata accessor for UsoTask_checkExistence_common_LocalBusiness(0);
  *(_QWORD *)(v0 + 10064) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 10072) = 0x80000001C33ED280;
  *(_QWORD *)(v0 + 10080) = type metadata accessor for UsoTask_delete_common_LocalBusiness(0);
  *(_QWORD *)(v0 + 10088) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 10096) = 0x80000001C33ED2A0;
  *(_QWORD *)(v0 + 10104) = type metadata accessor for UsoTask_update_common_LocalBusiness(0);
  *(_QWORD *)(v0 + 10112) = 0xD000000000000018;
  *(_QWORD *)(v0 + 10120) = 0x80000001C33ED2C0;
  *(_QWORD *)(v0 + 10128) = type metadata accessor for UsoTask_noVerb_common_AppAction(0);
  *(_QWORD *)(v0 + 10136) = 0xD000000000000016;
  *(_QWORD *)(v0 + 10144) = 0x80000001C33ED2E0;
  *(_QWORD *)(v0 + 10152) = type metadata accessor for UsoTask_undo_common_AppAction(0);
  *(_QWORD *)(v0 + 10160) = 0xD000000000000016;
  *(_QWORD *)(v0 + 10168) = 0x80000001C33ED300;
  *(_QWORD *)(v0 + 10176) = type metadata accessor for UsoTask_redo_common_AppAction(0);
  *(_QWORD *)(v0 + 10184) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 10192) = 0x80000001C33ED320;
  *(_QWORD *)(v0 + 10200) = type metadata accessor for UsoTask_runCommand_common_AppAction(0);
  *(_QWORD *)(v0 + 10208) = 0xD000000000000029;
  *(_QWORD *)(v0 + 10216) = 0x80000001C33ED340;
  *(_QWORD *)(v0 + 10224) = type metadata accessor for UsoTask_disableNotifications_common_FindMyStatus(0);
  *(_QWORD *)(v0 + 10232) = 0xD000000000000019;
  *(_QWORD *)(v0 + 10240) = 0x80000001C33ED370;
  *(_QWORD *)(v0 + 10248) = type metadata accessor for UsoTask_hide_common_FindMyStatus(0);
  *(_QWORD *)(v0 + 10256) = 0xD000000000000028;
  *(_QWORD *)(v0 + 10264) = 0x80000001C33ED390;
  *(_QWORD *)(v0 + 10272) = type metadata accessor for UsoTask_enableNotifications_common_FindMyStatus(0);
  *(_QWORD *)(v0 + 10280) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 10288) = 0x80000001C33ED3C0;
  *(_QWORD *)(v0 + 10296) = type metadata accessor for UsoTask_unhide_common_FindMyStatus(0);
  *(_QWORD *)(v0 + 10304) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 10312) = 0x80000001C33ED3E0;
  *(_QWORD *)(v0 + 10320) = type metadata accessor for UsoTask_noVerb_common_FindMyStatus(0);
  *(_QWORD *)(v0 + 10328) = 0xD000000000000027;
  *(_QWORD *)(v0 + 10336) = 0x80000001C33ED400;
  *(_QWORD *)(v0 + 10344) = type metadata accessor for UsoTask_noVerb_commonNotebook_NotebookItemType(0);
  *(_QWORD *)(v0 + 10352) = 0xD000000000000022;
  *(_QWORD *)(v0 + 10360) = 0x80000001C33ED430;
  *(_QWORD *)(v0 + 10368) = type metadata accessor for UsoTask_perform_common_NotificationAction(0);
  *(_QWORD *)(v0 + 10376) = 0xD000000000000021;
  *(_QWORD *)(v0 + 10384) = 0x80000001C33ED460;
  *(_QWORD *)(v0 + 10392) = type metadata accessor for UsoTask_noVerb_common_NotificationAction(0);
  *(_QWORD *)(v0 + 10400) = 0xD000000000000017;
  *(_QWORD *)(v0 + 10408) = 0x80000001C33ED490;
  *(_QWORD *)(v0 + 10416) = type metadata accessor for UsoTask_noVerb_common_Language(0);
  *(_QWORD *)(v0 + 10424) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 10432) = 0x80000001C33ED4B0;
  *(_QWORD *)(v0 + 10440) = type metadata accessor for UsoTask_noVerb_commonApp_AppAttribute(0);
  *(_QWORD *)(v0 + 10448) = 0xD000000000000020;
  *(_QWORD *)(v0 + 10456) = 0x80000001C33ED4D0;
  *(_QWORD *)(v0 + 10464) = type metadata accessor for UsoTask_setDateTimeRange_common_Setting(0);
  *(_QWORD *)(v0 + 10472) = 0xD000000000000019;
  *(_QWORD *)(v0 + 10480) = 0x80000001C33ED500;
  *(_QWORD *)(v0 + 10488) = type metadata accessor for UsoTask_summarise_common_Setting(0);
  *(_QWORD *)(v0 + 10496) = 0xD000000000000016;
  *(_QWORD *)(v0 + 10504) = 0x80000001C33ED520;
  *(_QWORD *)(v0 + 10512) = type metadata accessor for UsoTask_noVerb_common_Setting(0);
  *(_QWORD *)(v0 + 10520) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 10528) = 0x80000001C33ED540;
  *(_QWORD *)(v0 + 10536) = type metadata accessor for UsoTask_setDuration_common_Setting(0);
  *(_QWORD *)(v0 + 10544) = 0xD000000000000017;
  *(_QWORD *)(v0 + 10552) = 0x80000001C33ED560;
  *(_QWORD *)(v0 + 10560) = type metadata accessor for UsoTask_request_common_Setting(0);
  *(_QWORD *)(v0 + 10568) = 0xD000000000000018;
  *(_QWORD *)(v0 + 10576) = 0x80000001C33ED580;
  *(_QWORD *)(v0 + 10584) = type metadata accessor for UsoTask_setLabel_common_Setting(0);
  *(_QWORD *)(v0 + 10592) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 10600) = 0x80000001C33ED5A0;
  *(_QWORD *)(v0 + 10608) = type metadata accessor for UsoTask_increaseBy_common_Setting(0);
  *(_QWORD *)(v0 + 10616) = 0xD000000000000016;
  *(_QWORD *)(v0 + 10624) = 0x80000001C33ED5C0;
  *(_QWORD *)(v0 + 10632) = type metadata accessor for UsoTask_enable_common_Setting(0);
  *(_QWORD *)(v0 + 10640) = 0xD000000000000019;
  *(_QWORD *)(v0 + 10648) = 0x80000001C33ED5E0;
  *(_QWORD *)(v0 + 10656) = type metadata accessor for UsoTask_setNumber_common_Setting(0);
  *(_QWORD *)(v0 + 10664) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 10672) = 0x80000001C33ED600;
  *(_QWORD *)(v0 + 10680) = type metadata accessor for UsoTask_decreaseBy_common_Setting(0);
  *(_QWORD *)(v0 + 10688) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 10696) = 0x80000001C33ED620;
  *(_QWORD *)(v0 + 10704) = type metadata accessor for UsoTask_setMeasurement_common_Setting(0);
  *(_QWORD *)(v0 + 10712) = 0xD000000000000017;
  *(_QWORD *)(v0 + 10720) = 0x80000001C33ED640;
  *(_QWORD *)(v0 + 10728) = type metadata accessor for UsoTask_disable_common_Setting(0);
  *(_QWORD *)(v0 + 10736) = 0xD000000000000014;
  *(_QWORD *)(v0 + 10744) = 0x80000001C33ED660;
  *(_QWORD *)(v0 + 10752) = type metadata accessor for UsoTask_open_common_Setting(0);
  *(_QWORD *)(v0 + 10760) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 10768) = 0x80000001C33ED680;
  *(_QWORD *)(v0 + 10776) = type metadata accessor for UsoTask_checkExistence_common_Setting(0);
  *(_QWORD *)(v0 + 10784) = 0xD000000000000016;
  *(_QWORD *)(v0 + 10792) = 0x80000001C33ED6A0;
  *(_QWORD *)(v0 + 10800) = type metadata accessor for UsoTask_toggle_common_Setting(0);
  *(_QWORD *)(v0 + 10808) = 0xD000000000000024;
  *(_QWORD *)(v0 + 10816) = 0x80000001C33ED6C0;
  *(_QWORD *)(v0 + 10824) = type metadata accessor for UsoTask_discoverCapabilities_common_Setting(0);
  *(_QWORD *)(v0 + 10832) = 0xD000000000000025;
  *(_QWORD *)(v0 + 10840) = 0x80000001C33ED6F0;
  *(_QWORD *)(v0 + 10848) = type metadata accessor for UsoTask_increaseByMeasurement_common_Setting(0);
  *(_QWORD *)(v0 + 10856) = 0xD000000000000013;
  *(_QWORD *)(v0 + 10864) = 0x80000001C33ED720;
  *(_QWORD *)(v0 + 10872) = type metadata accessor for UsoTask_set_common_Setting(0);
  *(_QWORD *)(v0 + 10880) = 0xD000000000000025;
  *(_QWORD *)(v0 + 10888) = 0x80000001C33ED740;
  *(_QWORD *)(v0 + 10896) = type metadata accessor for UsoTask_decreaseByMeasurement_common_Setting(0);
  *(_QWORD *)(v0 + 10904) = 0xD000000000000014;
  *(_QWORD *)(v0 + 10912) = 0x80000001C33ED770;
  *(_QWORD *)(v0 + 10920) = type metadata accessor for UsoTask_unhide_uso_NoEntity(0);
  *(_QWORD *)(v0 + 10928) = 0xD000000000000013;
  *(_QWORD *)(v0 + 10936) = 0x80000001C33ED790;
  *(_QWORD *)(v0 + 10944) = type metadata accessor for UsoTask_pause_uso_NoEntity(0);
  *(_QWORD *)(v0 + 10952) = 0xD000000000000012;
  *(_QWORD *)(v0 + 10960) = 0x80000001C33ED7B0;
  *(_QWORD *)(v0 + 10968) = type metadata accessor for UsoTask_undo_uso_NoEntity(0);
  *(_QWORD *)(v0 + 10976) = 0xD000000000000012;
  *(_QWORD *)(v0 + 10984) = 0x80000001C33ED7D0;
  *(_QWORD *)(v0 + 10992) = type metadata accessor for UsoTask_read_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11000) = 0xD000000000000012;
  *(_QWORD *)(v0 + 11008) = 0x80000001C33ED7F0;
  *(_QWORD *)(v0 + 11016) = type metadata accessor for UsoTask_hide_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11024) = 0xD000000000000013;
  *(_QWORD *)(v0 + 11032) = 0x80000001C33ED810;
  *(_QWORD *)(v0 + 11040) = type metadata accessor for UsoTask_close_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11048) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11056) = 0x80000001C33ED830;
  *(_QWORD *)(v0 + 11064) = type metadata accessor for UsoTask_resume_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11072) = 0xD000000000000017;
  *(_QWORD *)(v0 + 11080) = 0x80000001C33ED850;
  *(_QWORD *)(v0 + 11088) = type metadata accessor for UsoTask_catchMeUp_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11096) = 0xD000000000000019;
  *(_QWORD *)(v0 + 11104) = 0x80000001C33ED870;
  *(_QWORD *)(v0 + 11112) = type metadata accessor for UsoTask_skipForward_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11120) = 0xD000000000000012;
  *(_QWORD *)(v0 + 11128) = 0x80000001C33ED890;
  *(_QWORD *)(v0 + 11136) = type metadata accessor for UsoTask_save_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11144) = 0xD000000000000012;
  *(_QWORD *)(v0 + 11152) = 0x80000001C33ED8B0;
  *(_QWORD *)(v0 + 11160) = type metadata accessor for UsoTask_like_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11168) = 0xD000000000000012;
  *(_QWORD *)(v0 + 11176) = 0x80000001C33ED8D0;
  *(_QWORD *)(v0 + 11184) = type metadata accessor for UsoTask_play_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11192) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11200) = 0x80000001C33ED8F0;
  *(_QWORD *)(v0 + 11208) = type metadata accessor for UsoTask_repeat_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11216) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 11224) = 0x80000001C33ED910;
  *(_QWORD *)(v0 + 11232) = type metadata accessor for UsoTask_softwareUpdate_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11240) = 0xD000000000000013;
  *(_QWORD *)(v0 + 11248) = 0x80000001C33ED930;
  *(_QWORD *)(v0 + 11256) = type metadata accessor for UsoTask_start_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11264) = 0xD000000000000013;
  *(_QWORD *)(v0 + 11272) = 0x80000001C33ED950;
  *(_QWORD *)(v0 + 11280) = type metadata accessor for UsoTask_reply_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11288) = 0xD000000000000012;
  *(_QWORD *)(v0 + 11296) = 0x80000001C33ED970;
  *(_QWORD *)(v0 + 11304) = type metadata accessor for UsoTask_open_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11312) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 11320) = 0x80000001C33ED990;
  *(_QWORD *)(v0 + 11328) = type metadata accessor for UsoTask_skipBackward_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11336) = 0xD000000000000022;
  *(_QWORD *)(v0 + 11344) = 0x80000001C33ED9B0;
  *(_QWORD *)(v0 + 11352) = type metadata accessor for UsoTask_discoverCapabilities_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11360) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11368) = 0x80000001C33ED9E0;
  *(_QWORD *)(v0 + 11376) = type metadata accessor for UsoTask_update_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11384) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11392) = 0x80000001C33EDA00;
  *(_QWORD *)(v0 + 11400) = type metadata accessor for UsoTask_noVerb_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11408) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11416) = 0x80000001C33EDA20;
  *(_QWORD *)(v0 + 11424) = type metadata accessor for UsoTask_delete_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11432) = 0xD000000000000015;
  *(_QWORD *)(v0 + 11440) = 0x80000001C33EDA40;
  *(_QWORD *)(v0 + 11448) = type metadata accessor for UsoTask_shuffle_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11456) = 0xD000000000000015;
  *(_QWORD *)(v0 + 11464) = 0x80000001C33EDA60;
  *(_QWORD *)(v0 + 11472) = type metadata accessor for UsoTask_restart_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11480) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11488) = 0x80000001C33EDA80;
  *(_QWORD *)(v0 + 11496) = type metadata accessor for UsoTask_unlike_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11504) = 0xD000000000000012;
  *(_QWORD *)(v0 + 11512) = 0x80000001C33EDAA0;
  *(_QWORD *)(v0 + 11520) = type metadata accessor for UsoTask_stop_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11528) = 0xD000000000000012;
  *(_QWORD *)(v0 + 11536) = 0x80000001C33EDAC0;
  *(_QWORD *)(v0 + 11544) = type metadata accessor for UsoTask_quit_uso_NoEntity(0);
  *(_QWORD *)(v0 + 11552) = 0xD000000000000022;
  *(_QWORD *)(v0 + 11560) = 0x80000001C33EDAE0;
  *(_QWORD *)(v0 + 11568) = type metadata accessor for UsoTask_summarise_common_UserSocialAction(0);
  *(_QWORD *)(v0 + 11576) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 11584) = 0x80000001C33EDB10;
  *(_QWORD *)(v0 + 11592) = type metadata accessor for UsoTask_state_common_UserSocialAction(0);
  *(_QWORD *)(v0 + 11600) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 11608) = 0x80000001C33EDB30;
  *(_QWORD *)(v0 + 11616) = type metadata accessor for UsoTask_noVerb_common_UserSocialAction(0);
  *(_QWORD *)(v0 + 11624) = 0xD000000000000017;
  *(_QWORD *)(v0 + 11632) = 0x80000001C33EDB50;
  *(_QWORD *)(v0 + 11640) = type metadata accessor for UsoTask_summarise_common_Alarm(0);
  *(_QWORD *)(v0 + 11648) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11656) = 0x80000001C33EDB70;
  *(_QWORD *)(v0 + 11664) = type metadata accessor for UsoTask_create_common_Alarm(0);
  *(_QWORD *)(v0 + 11672) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 11680) = 0x80000001C33EDB90;
  *(_QWORD *)(v0 + 11688) = type metadata accessor for UsoTask_checkExistence_common_Alarm(0);
  *(_QWORD *)(v0 + 11696) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11704) = 0x80000001C33EDBB0;
  *(_QWORD *)(v0 + 11712) = type metadata accessor for UsoTask_noVerb_common_Alarm(0);
  *(_QWORD *)(v0 + 11720) = 0xD000000000000015;
  *(_QWORD *)(v0 + 11728) = 0x80000001C33EDBD0;
  *(_QWORD *)(v0 + 11736) = type metadata accessor for UsoTask_disable_common_Alarm(0);
  *(_QWORD *)(v0 + 11744) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11752) = 0x80000001C33EDBF0;
  *(_QWORD *)(v0 + 11760) = type metadata accessor for UsoTask_snooze_common_Alarm(0);
  *(_QWORD *)(v0 + 11768) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11776) = 0x80000001C33EDC10;
  *(_QWORD *)(v0 + 11784) = type metadata accessor for UsoTask_enable_common_Alarm(0);
  *(_QWORD *)(v0 + 11792) = 0xD000000000000015;
  *(_QWORD *)(v0 + 11800) = 0x80000001C33EDC30;
  *(_QWORD *)(v0 + 11808) = type metadata accessor for UsoTask_request_common_Alarm(0);
  *(_QWORD *)(v0 + 11816) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11824) = 0x80000001C33EDC50;
  *(_QWORD *)(v0 + 11832) = type metadata accessor for UsoTask_delete_common_Alarm(0);
  *(_QWORD *)(v0 + 11840) = 0xD000000000000014;
  *(_QWORD *)(v0 + 11848) = 0x80000001C33EDC70;
  *(_QWORD *)(v0 + 11856) = type metadata accessor for UsoTask_update_common_Alarm(0);
  *(_QWORD *)(v0 + 11864) = 0xD000000000000012;
  *(_QWORD *)(v0 + 11872) = 0x80000001C33EDC90;
  *(_QWORD *)(v0 + 11880) = type metadata accessor for UsoTask_read_common_Alarm(0);
  *(_QWORD *)(v0 + 11888) = 0xD000000000000023;
  *(_QWORD *)(v0 + 11896) = 0x80000001C33EDCB0;
  *(_QWORD *)(v0 + 11904) = type metadata accessor for UsoTask_checkExistence_common_UserProperty(0);
  *(_QWORD *)(v0 + 11912) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 11920) = 0x80000001C33EDCE0;
  *(_QWORD *)(v0 + 11928) = type metadata accessor for UsoTask_noVerb_common_UserProperty(0);
  *(_QWORD *)(v0 + 11936) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 11944) = 0x80000001C33EDD00;
  *(_QWORD *)(v0 + 11952) = type metadata accessor for UsoTask_state_common_UserProperty(0);
  *(_QWORD *)(v0 + 11960) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 11968) = 0x80000001C33EDD20;
  *(_QWORD *)(v0 + 11976) = type metadata accessor for UsoTask_summarise_common_UserProperty(0);
  *(_QWORD *)(v0 + 11984) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 11992) = 0x80000001C33EDD40;
  *(_QWORD *)(v0 + 12000) = type metadata accessor for UsoTask_disableSetting_common_Note(0);
  *(_QWORD *)(v0 + 12008) = 0xD000000000000011;
  *(_QWORD *)(v0 + 12016) = 0x80000001C33EDD60;
  *(_QWORD *)(v0 + 12024) = type metadata accessor for UsoTask_read_common_Note(0);
  *(_QWORD *)(v0 + 12032) = 0xD000000000000011;
  *(_QWORD *)(v0 + 12040) = 0x80000001C33EDD80;
  *(_QWORD *)(v0 + 12048) = type metadata accessor for UsoTask_undo_common_Note(0);
  *(_QWORD *)(v0 + 12056) = 0xD000000000000013;
  *(_QWORD *)(v0 + 12064) = 0x80000001C33EDDA0;
  *(_QWORD *)(v0 + 12072) = type metadata accessor for UsoTask_noVerb_common_Note(0);
  *(_QWORD *)(v0 + 12080) = 0xD000000000000013;
  *(_QWORD *)(v0 + 12088) = 0x80000001C33EDDC0;
  *(_QWORD *)(v0 + 12096) = type metadata accessor for UsoTask_update_common_Note(0);
  *(_QWORD *)(v0 + 12104) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 12112) = 0x80000001C33EDDE0;
  *(_QWORD *)(v0 + 12120) = type metadata accessor for UsoTask_enableSetting_common_Note(0);
  *(_QWORD *)(v0 + 12128) = 0xD000000000000014;
  *(_QWORD *)(v0 + 12136) = 0x80000001C33EDE00;
  *(_QWORD *)(v0 + 12144) = type metadata accessor for UsoTask_request_common_Note(0);
  *(_QWORD *)(v0 + 12152) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 12160) = 0x80000001C33EDE20;
  *(_QWORD *)(v0 + 12168) = type metadata accessor for UsoTask_checkExistence_common_Note(0);
  *(_QWORD *)(v0 + 12176) = 0xD000000000000013;
  *(_QWORD *)(v0 + 12184) = 0x80000001C33EDE40;
  *(_QWORD *)(v0 + 12192) = type metadata accessor for UsoTask_delete_common_Note(0);
  *(_QWORD *)(v0 + 12200) = 0xD000000000000013;
  *(_QWORD *)(v0 + 12208) = 0x80000001C33EDE60;
  *(_QWORD *)(v0 + 12216) = type metadata accessor for UsoTask_create_common_Note(0);
  *(_QWORD *)(v0 + 12224) = 0xD000000000000016;
  *(_QWORD *)(v0 + 12232) = 0x80000001C33EDE80;
  *(_QWORD *)(v0 + 12240) = type metadata accessor for UsoTask_summarise_common_Note(0);
  *(_QWORD *)(v0 + 12248) = 0xD000000000000018;
  *(_QWORD *)(v0 + 12256) = 0x80000001C33EDEA0;
  *(_QWORD *)(v0 + 12264) = type metadata accessor for UsoTask_noVerb_common_EasterEgg(0);
  *(_QWORD *)(v0 + 12272) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 12280) = 0x80000001C33EDEC0;
  *(_QWORD *)(v0 + 12288) = type metadata accessor for UsoTask_update_common_CalendarEvent(0);
  *(_QWORD *)(v0 + 12296) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 12304) = 0x80000001C33EDEE0;
  *(_QWORD *)(v0 + 12312) = type metadata accessor for UsoTask_request_common_CalendarEvent(0);
  *(_QWORD *)(v0 + 12320) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 12328) = 0x80000001C33EDF00;
  *(_QWORD *)(v0 + 12336) = type metadata accessor for UsoTask_noVerb_common_CalendarEvent(0);
  *(_QWORD *)(v0 + 12344) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 12352) = 0x80000001C33EDF20;
  *(_QWORD *)(v0 + 12360) = type metadata accessor for UsoTask_join_common_CalendarEvent(0);
  *(_QWORD *)(v0 + 12368) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 12376) = 0x80000001C33EDF40;
  *(_QWORD *)(v0 + 12384) = type metadata accessor for UsoTask_delete_common_CalendarEvent(0);
  *(_QWORD *)(v0 + 12392) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 12400) = 0x80000001C33EDF60;
  *(_QWORD *)(v0 + 12408) = type metadata accessor for UsoTask_summarise_common_CalendarEvent(0);
  *(_QWORD *)(v0 + 12416) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 12424) = 0x80000001C33EDF80;
  *(_QWORD *)(v0 + 12432) = type metadata accessor for UsoTask_read_common_CalendarEvent(0);
  *(_QWORD *)(v0 + 12440) = 0xD000000000000024;
  *(_QWORD *)(v0 + 12448) = 0x80000001C33EDFA0;
  *(_QWORD *)(v0 + 12456) = type metadata accessor for UsoTask_checkExistence_common_CalendarEvent(0);
  *(_QWORD *)(v0 + 12464) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 12472) = 0x80000001C33EDFD0;
  *(_QWORD *)(v0 + 12480) = type metadata accessor for UsoTask_create_common_CalendarEvent(0);
  *(_QWORD *)(v0 + 12488) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 12496) = 0x80000001C33EDFF0;
  *(_QWORD *)(v0 + 12504) = type metadata accessor for UsoTask_play_common_DailyBriefing(0);
  *(_QWORD *)(v0 + 12512) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 12520) = 0x80000001C33EE010;
  *(_QWORD *)(v0 + 12528) = type metadata accessor for UsoTask_summarise_common_DailyBriefing(0);
  *(_QWORD *)(v0 + 12536) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 12544) = 0x80000001C33EE030;
  *(_QWORD *)(v0 + 12552) = type metadata accessor for UsoTask_update_common_DailyBriefing(0);
  *(_QWORD *)(v0 + 12560) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 12568) = 0x80000001C33EE050;
  *(_QWORD *)(v0 + 12576) = type metadata accessor for UsoTask_repeat_common_DailyBriefing(0);
  *(_QWORD *)(v0 + 12584) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 12592) = 0x80000001C33EE070;
  *(_QWORD *)(v0 + 12600) = type metadata accessor for UsoTask_delete_common_DailyBriefing(0);
  *(_QWORD *)(v0 + 12608) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 12616) = 0x80000001C33EE090;
  *(_QWORD *)(v0 + 12624) = type metadata accessor for UsoTask_noVerb_common_DailyBriefing(0);
  *(_QWORD *)(v0 + 12632) = 0xD000000000000024;
  *(_QWORD *)(v0 + 12640) = 0x80000001C33EE0B0;
  *(_QWORD *)(v0 + 12648) = type metadata accessor for UsoTask_checkExistence_common_DailyBriefing(0);
  *(_QWORD *)(v0 + 12656) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 12664) = 0x80000001C33EE0E0;
  *(_QWORD *)(v0 + 12672) = type metadata accessor for UsoTask_request_common_NotebookItem(0);
  *(_QWORD *)(v0 + 12680) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 12688) = 0x80000001C33EE100;
  *(_QWORD *)(v0 + 12696) = type metadata accessor for UsoTask_snooze_common_NotebookItem(0);
  *(_QWORD *)(v0 + 12704) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 12712) = 0x80000001C33EE120;
  *(_QWORD *)(v0 + 12720) = type metadata accessor for UsoTask_deactivate_common_NotebookItem(0);
  *(_QWORD *)(v0 + 12728) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 12736) = 0x80000001C33EE140;
  *(_QWORD *)(v0 + 12744) = type metadata accessor for UsoTask_create_common_NotebookItem(0);
  *(_QWORD *)(v0 + 12752) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 12760) = 0x80000001C33EE160;
  *(_QWORD *)(v0 + 12768) = type metadata accessor for UsoTask_delete_common_NotebookItem(0);
  *(_QWORD *)(v0 + 12776) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 12784) = 0x80000001C33EE180;
  *(_QWORD *)(v0 + 12792) = type metadata accessor for UsoTask_summarise_common_NotebookItem(0);
  *(_QWORD *)(v0 + 12800) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 12808) = 0x80000001C33EE1A0;
  *(_QWORD *)(v0 + 12816) = type metadata accessor for UsoTask_noVerb_common_NotebookItem(0);
  *(_QWORD *)(v0 + 12824) = 0xD000000000000023;
  *(_QWORD *)(v0 + 12832) = 0x80000001C33EE1C0;
  *(_QWORD *)(v0 + 12840) = type metadata accessor for UsoTask_checkExistence_common_NotebookItem(0);
  *(_QWORD *)(v0 + 12848) = 0xD000000000000019;
  *(_QWORD *)(v0 + 12856) = 0x80000001C33EE1F0;
  *(_QWORD *)(v0 + 12864) = type metadata accessor for UsoTask_read_common_NotebookItem(0);
  *(_QWORD *)(v0 + 12872) = 0xD000000000000019;
  *(_QWORD *)(v0 + 12880) = 0x80000001C33EE210;
  *(_QWORD *)(v0 + 12888) = type metadata accessor for UsoTask_undo_common_NotebookItem(0);
  *(_QWORD *)(v0 + 12896) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 12904) = 0x80000001C33EE230;
  *(_QWORD *)(v0 + 12912) = type metadata accessor for UsoTask_update_common_NotebookItem(0);
  *(_QWORD *)(v0 + 12920) = 0xD000000000000019;
  *(_QWORD *)(v0 + 12928) = 0x80000001C33EE250;
  *(_QWORD *)(v0 + 12936) = type metadata accessor for UsoTask_summarise_common_Writing(0);
  *(_QWORD *)(v0 + 12944) = 0xD000000000000014;
  *(_QWORD *)(v0 + 12952) = 0x80000001C33EE270;
  *(_QWORD *)(v0 + 12960) = type metadata accessor for UsoTask_play_common_Writing(0);
  *(_QWORD *)(v0 + 12968) = 0xD000000000000014;
  *(_QWORD *)(v0 + 12976) = 0x80000001C33EE290;
  *(_QWORD *)(v0 + 12984) = type metadata accessor for UsoTask_quit_common_Writing(0);
  *(_QWORD *)(v0 + 12992) = 0xD000000000000014;
  *(_QWORD *)(v0 + 13000) = 0x80000001C33EE2B0;
  *(_QWORD *)(v0 + 13008) = type metadata accessor for UsoTask_skip_common_Writing(0);
  *(_QWORD *)(v0 + 13016) = 0xD000000000000016;
  *(_QWORD *)(v0 + 13024) = 0x80000001C33EE2D0;
  *(_QWORD *)(v0 + 13032) = type metadata accessor for UsoTask_noVerb_common_Writing(0);
  *(_QWORD *)(v0 + 13040) = 0xD000000000000017;
  *(_QWORD *)(v0 + 13048) = 0x80000001C33EE2F0;
  *(_QWORD *)(v0 + 13056) = type metadata accessor for UsoTask_request_common_Writing(0);
  *(_QWORD *)(v0 + 13064) = 0xD000000000000014;
  *(_QWORD *)(v0 + 13072) = 0x80000001C33EE310;
  *(_QWORD *)(v0 + 13080) = type metadata accessor for UsoTask_show_common_Writing(0);
  *(_QWORD *)(v0 + 13088) = 0xD000000000000012;
  *(_QWORD *)(v0 + 13096) = 0x80000001C33EE330;
  *(_QWORD *)(v0 + 13104) = type metadata accessor for UsoTask_noVerb_common_Age(0);
  *(_QWORD *)(v0 + 13112) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 13120) = 0x80000001C33EE350;
  *(_QWORD *)(v0 + 13128) = type metadata accessor for UsoTask_noVerb_uso_NLv3UnknownEntity(0);
  *(_QWORD *)(v0 + 13136) = 0xD000000000000018;
  *(_QWORD *)(v0 + 13144) = 0x80000001C33EE370;
  *(_QWORD *)(v0 + 13152) = type metadata accessor for UsoTask_noVerb_common_StopWatch(0);
  *(_QWORD *)(v0 + 13160) = 0xD000000000000015;
  *(_QWORD *)(v0 + 13168) = 0x80000001C33EE390;
  *(_QWORD *)(v0 + 13176) = type metadata accessor for UsoTask_lap_common_StopWatch(0);
  *(_QWORD *)(v0 + 13184) = 0xD000000000000019;
  *(_QWORD *)(v0 + 13192) = 0x80000001C33EE3B0;
  *(_QWORD *)(v0 + 13200) = type metadata accessor for UsoTask_request_common_StopWatch(0);
  *(_QWORD *)(v0 + 13208) = 0xD000000000000016;
  *(_QWORD *)(v0 + 13216) = 0x80000001C33EE3D0;
  *(_QWORD *)(v0 + 13224) = type metadata accessor for UsoTask_stop_common_StopWatch(0);
  *(_QWORD *)(v0 + 13232) = 0xD000000000000016;
  *(_QWORD *)(v0 + 13240) = 0x80000001C33EE3F0;
  *(_QWORD *)(v0 + 13248) = type metadata accessor for UsoTask_show_common_StopWatch(0);
  *(_QWORD *)(v0 + 13256) = 0xD000000000000017;
  *(_QWORD *)(v0 + 13264) = 0x80000001C33EE410;
  *(_QWORD *)(v0 + 13272) = type metadata accessor for UsoTask_reset_common_StopWatch(0);
  *(_QWORD *)(v0 + 13280) = 0xD000000000000017;
  *(_QWORD *)(v0 + 13288) = 0x80000001C33EE430;
  *(_QWORD *)(v0 + 13296) = type metadata accessor for UsoTask_start_common_StopWatch(0);
  *(_QWORD *)(v0 + 13304) = 0xD000000000000018;
  *(_QWORD *)(v0 + 13312) = 0x80000001C33EE450;
  *(_QWORD *)(v0 + 13320) = type metadata accessor for UsoTask_create_common_SiriAlias(0);
  *(_QWORD *)(v0 + 13328) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 13336) = 0x80000001C33EE470;
  *(_QWORD *)(v0 + 13344) = type metadata accessor for UsoTask_noVerb_common_OffsetDateTime(0);
  *(_QWORD *)(v0 + 13352) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 13360) = 0x80000001C33EE490;
  *(_QWORD *)(v0 + 13368) = type metadata accessor for UsoTask_read_common_OffsetDateTime(0);
  *(_QWORD *)(v0 + 13376) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 13384) = 0x80000001C33EE4B0;
  *(_QWORD *)(v0 + 13392) = type metadata accessor for UsoTask_convert_common_OffsetDateTime(0);
  *(_QWORD *)(v0 + 13400) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 13408) = 0x80000001C33EE4D0;
  *(_QWORD *)(v0 + 13416) = type metadata accessor for UsoTask_request_common_OffsetDateTime(0);
  *(_QWORD *)(v0 + 13424) = 0xD000000000000025;
  *(_QWORD *)(v0 + 13432) = 0x80000001C33EE4F0;
  *(_QWORD *)(v0 + 13440) = type metadata accessor for UsoTask_checkExistence_common_OffsetDateTime(0);
  *(_QWORD *)(v0 + 13448) = 0xD000000000000020;
  *(_QWORD *)(v0 + 13456) = 0x80000001C33EE520;
  *(_QWORD *)(v0 + 13464) = type metadata accessor for UsoTask_summarise_common_OffsetDateTime(0);
  *(_QWORD *)(v0 + 13472) = 0xD000000000000015;
  *(_QWORD *)(v0 + 13480) = 0x80000001C33EE550;
  *(_QWORD *)(v0 + 13488) = type metadata accessor for UsoTask_noVerb_common_Window(0);
  *(_QWORD *)(v0 + 13496) = 0xD000000000000013;
  *(_QWORD *)(v0 + 13504) = 0x80000001C33EE570;
  *(_QWORD *)(v0 + 13512) = type metadata accessor for UsoTask_open_common_Window(0);
  *(_QWORD *)(v0 + 13520) = 0xD000000000000014;
  *(_QWORD *)(v0 + 13528) = 0x80000001C33EE590;
  *(_QWORD *)(v0 + 13536) = type metadata accessor for UsoTask_close_common_Window(0);
  *(_QWORD *)(v0 + 13544) = 0xD000000000000015;
  *(_QWORD *)(v0 + 13552) = 0x80000001C33EE5B0;
  *(_QWORD *)(v0 + 13560) = type metadata accessor for UsoTask_noVerb_common_Number(0);
  *(_QWORD *)(v0 + 13568) = 0xD000000000000019;
  *(_QWORD *)(v0 + 13576) = 0x80000001C33EE5D0;
  *(_QWORD *)(v0 + 13584) = type metadata accessor for UsoTask_noVerb_common_Quantifier(0);
  *(_QWORD *)(v0 + 13592) = 0xD000000000000013;
  *(_QWORD *)(v0 + 13600) = 0x80000001C33EE5F0;
  *(_QWORD *)(v0 + 13608) = type metadata accessor for UsoTask_noVerb_common_Size(0);
  *(_QWORD *)(v0 + 13616) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 13624) = 0x80000001C33EE610;
  *(_QWORD *)(v0 + 13632) = type metadata accessor for UsoTask_noVerb_common_Translation(0);
  *(_QWORD *)(v0 + 13640) = 0xD000000000000018;
  *(_QWORD *)(v0 + 13648) = 0x80000001C33EE630;
  *(_QWORD *)(v0 + 13656) = type metadata accessor for UsoTask_read_common_Translation(0);
  *(_QWORD *)(v0 + 13664) = 0xD000000000000023;
  *(_QWORD *)(v0 + 13672) = 0x80000001C33EE650;
  *(_QWORD *)(v0 + 13680) = type metadata accessor for UsoTask_stopTranslation_common_Translation(0);
  *(_QWORD *)(v0 + 13688) = 0xD000000000000024;
  *(_QWORD *)(v0 + 13696) = 0x80000001C33EE680;
  *(_QWORD *)(v0 + 13704) = type metadata accessor for UsoTask_startTranslation_common_Translation(0);
  *(_QWORD *)(v0 + 13712) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 13720) = 0x80000001C33EE6B0;
  *(_QWORD *)(v0 + 13728) = type metadata accessor for UsoTask_summarise_common_Translation(0);
  *(_QWORD *)(v0 + 13736) = 0xD000000000000022;
  *(_QWORD *)(v0 + 13744) = 0x80000001C33EE6D0;
  *(_QWORD *)(v0 + 13752) = type metadata accessor for UsoTask_checkExistence_common_Translation(0);
  *(_QWORD *)(v0 + 13760) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 13768) = 0x80000001C33EE700;
  *(_QWORD *)(v0 + 13776) = type metadata accessor for UsoTask_translate_common_Translation(0);
  *(_QWORD *)(v0 + 13784) = 0xD000000000000028;
  *(_QWORD *)(v0 + 13792) = 0x80000001C33EE720;
  *(_QWORD *)(v0 + 13800) = type metadata accessor for UsoTask_discoverCapabilities_common_Translation(0);
  *(_QWORD *)(v0 + 13808) = 0xD000000000000015;
  *(_QWORD *)(v0 + 13816) = 0x80000001C33EE750;
  *(_QWORD *)(v0 + 13824) = type metadata accessor for UsoTask_noVerb_common_Locale(0);
  *(_QWORD *)(v0 + 13832) = 0xD000000000000017;
  *(_QWORD *)(v0 + 13840) = 0x80000001C33EE770;
  *(_QWORD *)(v0 + 13848) = type metadata accessor for UsoTask_noVerb_common_DateType(0);
  *(_QWORD *)(v0 + 13856) = 0xD000000000000019;
  *(_QWORD *)(v0 + 13864) = 0x80000001C33EE790;
  *(_QWORD *)(v0 + 13872) = type metadata accessor for UsoTask_noVerb_common_OffsetTime(0);
  *(_QWORD *)(v0 + 13880) = 0xD000000000000018;
  *(_QWORD *)(v0 + 13888) = 0x80000001C33EE7B0;
  *(_QWORD *)(v0 + 13896) = type metadata accessor for UsoTask_noVerb_common_MediaItem(0);
  *(_QWORD *)(v0 + 13904) = 0xD000000000000018;
  *(_QWORD *)(v0 + 13912) = 0x80000001C33EE7D0;
  *(_QWORD *)(v0 + 13920) = type metadata accessor for UsoTask_follow_common_MediaItem(0);
  *(_QWORD *)(v0 + 13928) = 0xD000000000000019;
  *(_QWORD *)(v0 + 13936) = 0x80000001C33EE7F0;
  *(_QWORD *)(v0 + 13944) = type metadata accessor for UsoTask_shuffle_common_MediaItem(0);
  *(_QWORD *)(v0 + 13952) = 0xD000000000000019;
  *(_QWORD *)(v0 + 13960) = 0x80000001C33EE810;
  *(_QWORD *)(v0 + 13968) = type metadata accessor for UsoTask_restart_common_MediaItem(0);
  *(_QWORD *)(v0 + 13976) = 0xD000000000000018;
  *(_QWORD *)(v0 + 13984) = 0x80000001C33EE830;
  *(_QWORD *)(v0 + 13992) = type metadata accessor for UsoTask_unhide_common_MediaItem(0);
  *(_QWORD *)(v0 + 14000) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 14008) = 0x80000001C33EE850;
  *(_QWORD *)(v0 + 14016) = type metadata accessor for UsoTask_subscribe_common_MediaItem(0);
  *(_QWORD *)(v0 + 14024) = 0xD000000000000017;
  *(_QWORD *)(v0 + 14032) = 0x80000001C33EE870;
  *(_QWORD *)(v0 + 14040) = type metadata accessor for UsoTask_pause_common_MediaItem(0);
  *(_QWORD *)(v0 + 14048) = 0xD000000000000016;
  *(_QWORD *)(v0 + 14056) = 0x80000001C33EE890;
  *(_QWORD *)(v0 + 14064) = type metadata accessor for UsoTask_stop_common_MediaItem(0);
  *(_QWORD *)(v0 + 14072) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 14080) = 0x80000001C33EE8B0;
  *(_QWORD *)(v0 + 14088) = type metadata accessor for UsoTask_repeatAudio_common_MediaItem(0);
  *(_QWORD *)(v0 + 14096) = 0xD000000000000017;
  *(_QWORD *)(v0 + 14104) = 0x80000001C33EE8D0;
  *(_QWORD *)(v0 + 14112) = type metadata accessor for UsoTask_start_common_MediaItem(0);
  *(_QWORD *)(v0 + 14120) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 14128) = 0x80000001C33EE8F0;
  *(_QWORD *)(v0 + 14136) = type metadata accessor for UsoTask_summarise_common_MediaItem(0);
  *(_QWORD *)(v0 + 14144) = 0xD000000000000018;
  *(_QWORD *)(v0 + 14152) = 0x80000001C33EE910;
  *(_QWORD *)(v0 + 14160) = type metadata accessor for UsoTask_update_common_MediaItem(0);
  *(_QWORD *)(v0 + 14168) = 0xD000000000000016;
  *(_QWORD *)(v0 + 14176) = 0x80000001C33EE930;
  *(_QWORD *)(v0 + 14184) = type metadata accessor for UsoTask_hide_common_MediaItem(0);
  *(_QWORD *)(v0 + 14192) = 0xD000000000000018;
  *(_QWORD *)(v0 + 14200) = 0x80000001C33EE950;
  *(_QWORD *)(v0 + 14208) = type metadata accessor for UsoTask_seekTo_common_MediaItem(0);
  *(_QWORD *)(v0 + 14216) = 0xD000000000000016;
  *(_QWORD *)(v0 + 14224) = 0x80000001C33EE970;
  *(_QWORD *)(v0 + 14232) = type metadata accessor for UsoTask_read_common_MediaItem(0);
  *(_QWORD *)(v0 + 14240) = 0xD000000000000018;
  *(_QWORD *)(v0 + 14248) = 0x80000001C33EE990;
  *(_QWORD *)(v0 + 14256) = type metadata accessor for UsoTask_resume_common_MediaItem(0);
  *(_QWORD *)(v0 + 14264) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 14272) = 0x80000001C33EE9B0;
  *(_QWORD *)(v0 + 14280) = type metadata accessor for UsoTask_seekBackward_common_MediaItem(0);
  *(_QWORD *)(v0 + 14288) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 14296) = 0x80000001C33EE9D0;
  *(_QWORD *)(v0 + 14304) = type metadata accessor for UsoTask_skipBackward_common_MediaItem(0);
  *(_QWORD *)(v0 + 14312) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 14320) = 0x80000001C33EE9F0;
  *(_QWORD *)(v0 + 14328) = type metadata accessor for UsoTask_transfer_common_MediaItem(0);
  *(_QWORD *)(v0 + 14336) = 0xD000000000000016;
  *(_QWORD *)(v0 + 14344) = 0x80000001C33EEA10;
  *(_QWORD *)(v0 + 14352) = type metadata accessor for UsoTask_play_common_MediaItem(0);
  *(_QWORD *)(v0 + 14360) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 14368) = 0x80000001C33EEA30;
  *(_QWORD *)(v0 + 14376) = type metadata accessor for UsoTask_seekForward_common_MediaItem(0);
  *(_QWORD *)(v0 + 14384) = 0xD000000000000020;
  *(_QWORD *)(v0 + 14392) = 0x80000001C33EEA50;
  *(_QWORD *)(v0 + 14400) = type metadata accessor for UsoTask_checkExistence_common_MediaItem(0);
  *(_QWORD *)(v0 + 14408) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 14416) = 0x80000001C33EEA80;
  *(_QWORD *)(v0 + 14424) = type metadata accessor for UsoTask_enableSetting_common_MediaItem(0);
  *(_QWORD *)(v0 + 14432) = 0xD000000000000018;
  *(_QWORD *)(v0 + 14440) = 0x80000001C33EEAA0;
  *(_QWORD *)(v0 + 14448) = type metadata accessor for UsoTask_unlike_common_MediaItem(0);
  *(_QWORD *)(v0 + 14456) = 0xD000000000000019;
  *(_QWORD *)(v0 + 14464) = 0x80000001C33EEAC0;
  *(_QWORD *)(v0 + 14472) = type metadata accessor for UsoTask_request_common_MediaItem(0);
  *(_QWORD *)(v0 + 14480) = 0xD000000000000018;
  *(_QWORD *)(v0 + 14488) = 0x80000001C33EEAE0;
  *(_QWORD *)(v0 + 14496) = type metadata accessor for UsoTask_repeat_common_MediaItem(0);
  *(_QWORD *)(v0 + 14504) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 14512) = 0x80000001C33EEB00;
  *(_QWORD *)(v0 + 14520) = type metadata accessor for UsoTask_skipForward_common_MediaItem(0);
  *(_QWORD *)(v0 + 14528) = 0xD000000000000020;
  *(_QWORD *)(v0 + 14536) = 0x80000001C33EEB20;
  *(_QWORD *)(v0 + 14544) = type metadata accessor for UsoTask_disableSetting_common_MediaItem(0);
  *(_QWORD *)(v0 + 14552) = 0xD000000000000016;
  *(_QWORD *)(v0 + 14560) = 0x80000001C33EEB50;
  *(_QWORD *)(v0 + 14568) = type metadata accessor for UsoTask_like_common_MediaItem(0);
  *(_QWORD *)(v0 + 14576) = 0xD000000000000017;
  *(_QWORD *)(v0 + 14584) = 0x80000001C33EEB70;
  *(_QWORD *)(v0 + 14592) = type metadata accessor for UsoTask_noVerb_common_Meridiem(0);
  *(_QWORD *)(v0 + 14600) = 0xD000000000000027;
  *(_QWORD *)(v0 + 14608) = 0x80000001C33EEB90;
  *(_QWORD *)(v0 + 14616) = type metadata accessor for UsoTask_noVerb_appleNotebook_NotebookAttribute(0);
  *(_QWORD *)(v0 + 14624) = 0xD000000000000015;
  *(_QWORD *)(v0 + 14632) = 0x80000001C33EEBC0;
  *(_QWORD *)(v0 + 14640) = type metadata accessor for UsoTask_noVerb_common_QRCode(0);
  *(_QWORD *)(v0 + 14648) = 0xD000000000000013;
  *(_QWORD *)(v0 + 14656) = 0x80000001C33EEBE0;
  *(_QWORD *)(v0 + 14664) = type metadata accessor for UsoTask_scan_common_QRCode(0);
  *(_QWORD *)(v0 + 14672) = 0xD000000000000013;
  *(_QWORD *)(v0 + 14680) = 0x80000001C33EEC00;
  *(_QWORD *)(v0 + 14688) = type metadata accessor for UsoTask_show_common_QRCode(0);
  *(_QWORD *)(v0 + 14696) = 0xD000000000000021;
  *(_QWORD *)(v0 + 14704) = 0x80000001C33EEC20;
  *(_QWORD *)(v0 + 14712) = type metadata accessor for UsoTask_noVerb_appleEmail_EmailAttribute(0);
  *(_QWORD *)(v0 + 14720) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 14728) = 0x80000001C33EEC50;
  *(_QWORD *)(v0 + 14736) = type metadata accessor for UsoTask_enable_common_UserProfile(0);
  *(_QWORD *)(v0 + 14744) = 0xD000000000000018;
  *(_QWORD *)(v0 + 14752) = 0x80000001C33EEC70;
  *(_QWORD *)(v0 + 14760) = type metadata accessor for UsoTask_open_common_UserProfile(0);
  *(_QWORD *)(v0 + 14768) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 14776) = 0x80000001C33EEC90;
  *(_QWORD *)(v0 + 14784) = type metadata accessor for UsoTask_summarise_common_UserProfile(0);
  *(_QWORD *)(v0 + 14792) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 14800) = 0x80000001C33EECB0;
  *(_QWORD *)(v0 + 14808) = type metadata accessor for UsoTask_disable_common_UserProfile(0);
  *(_QWORD *)(v0 + 14816) = 0xD000000000000022;
  *(_QWORD *)(v0 + 14824) = 0x80000001C33EECD0;
  *(_QWORD *)(v0 + 14832) = type metadata accessor for UsoTask_checkExistence_common_UserProfile(0);
  *(_QWORD *)(v0 + 14840) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 14848) = 0x80000001C33EED00;
  *(_QWORD *)(v0 + 14856) = type metadata accessor for UsoTask_noVerb_common_UserProfile(0);
  *(_QWORD *)(v0 + 14864) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 14872) = 0x80000001C33EED20;
  *(_QWORD *)(v0 + 14880) = type metadata accessor for UsoTask_previous_common_Communication(0);
  *(_QWORD *)(v0 + 14888) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 14896) = 0x80000001C33EED40;
  *(_QWORD *)(v0 + 14904) = type metadata accessor for UsoTask_noVerb_common_Communication(0);
  *(_QWORD *)(v0 + 14912) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 14920) = 0x80000001C33EED60;
  *(_QWORD *)(v0 + 14928) = type metadata accessor for UsoTask_request_common_Communication(0);
  *(_QWORD *)(v0 + 14936) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 14944) = 0x80000001C33EED80;
  *(_QWORD *)(v0 + 14952) = type metadata accessor for UsoTask_skip_common_Communication(0);
  *(_QWORD *)(v0 + 14960) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 14968) = 0x80000001C33EEDA0;
  *(_QWORD *)(v0 + 14976) = type metadata accessor for UsoTask_delete_common_Communication(0);
  *(_QWORD *)(v0 + 14984) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 14992) = 0x80000001C33EEDC0;
  *(_QWORD *)(v0 + 15000) = type metadata accessor for UsoTask_continue_common_Communication(0);
  *(_QWORD *)(v0 + 15008) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 15016) = 0x80000001C33EEDE0;
  *(_QWORD *)(v0 + 15024) = type metadata accessor for UsoTask_stop_common_Communication(0);
  *(_QWORD *)(v0 + 15032) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 15040) = 0x80000001C33EEE00;
  *(_QWORD *)(v0 + 15048) = type metadata accessor for UsoTask_summarise_common_Communication(0);
  *(_QWORD *)(v0 + 15056) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 15064) = 0x80000001C33EEE20;
  *(_QWORD *)(v0 + 15072) = type metadata accessor for UsoTask_update_common_Communication(0);
  *(_QWORD *)(v0 + 15080) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 15088) = 0x80000001C33EEE40;
  *(_QWORD *)(v0 + 15096) = type metadata accessor for UsoTask_read_common_Communication(0);
  *(_QWORD *)(v0 + 15104) = 0xD000000000000018;
  *(_QWORD *)(v0 + 15112) = 0x80000001C33EEE60;
  *(_QWORD *)(v0 + 15120) = type metadata accessor for UsoTask_show_common_DigitalFace(0);
  *(_QWORD *)(v0 + 15128) = 0xD000000000000017;
  *(_QWORD *)(v0 + 15136) = 0x80000001C33EEE80;
  *(_QWORD *)(v0 + 15144) = type metadata accessor for UsoTask_set_common_DigitalFace(0);
  *(_QWORD *)(v0 + 15152) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 15160) = 0x80000001C33EEEA0;
  *(_QWORD *)(v0 + 15168) = type metadata accessor for UsoTask_noVerb_common_DigitalFace(0);
  *(_QWORD *)(v0 + 15176) = 0xD000000000000020;
  *(_QWORD *)(v0 + 15184) = 0x80000001C33EEEC0;
  *(_QWORD *)(v0 + 15192) = type metadata accessor for UsoTask_skipBackward_common_DigitalFace(0);
  *(_QWORD *)(v0 + 15200) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 15208) = 0x80000001C33EEEF0;
  *(_QWORD *)(v0 + 15216) = type metadata accessor for UsoTask_skipForward_common_DigitalFace(0);
  *(_QWORD *)(v0 + 15224) = 0xD00000000000002FLL;
  *(_QWORD *)(v0 + 15232) = 0x80000001C33EEF10;
  *(_QWORD *)(v0 + 15240) = type metadata accessor for UsoTask_noVerb_appleNotification_NotificationAttribute(0);
  *(_QWORD *)(v0 + 15248) = 0xD000000000000013;
  *(_QWORD *)(v0 + 15256) = 0x80000001C33EEF40;
  *(_QWORD *)(v0 + 15264) = type metadata accessor for UsoTask_ping_common_Device(0);
  *(_QWORD *)(v0 + 15272) = 0xD000000000000013;
  *(_QWORD *)(v0 + 15280) = 0x80000001C33EEF60;
  *(_QWORD *)(v0 + 15288) = type metadata accessor for UsoTask_find_common_Device(0);
  *(_QWORD *)(v0 + 15296) = 0xD000000000000015;
  *(_QWORD *)(v0 + 15304) = 0x80000001C33EEF80;
  *(_QWORD *)(v0 + 15312) = type metadata accessor for UsoTask_noVerb_common_Device(0);
  *(_QWORD *)(v0 + 15320) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 15328) = 0x80000001C33EEFA0;
  *(_QWORD *)(v0 + 15336) = type metadata accessor for UsoTask_tell_common_HolidayPhrase(0);
  *(_QWORD *)(v0 + 15344) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 15352) = 0x80000001C33EEFC0;
  *(_QWORD *)(v0 + 15360) = type metadata accessor for UsoTask_noVerb_common_HolidayPhrase(0);
  *(_QWORD *)(v0 + 15368) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 15376) = 0x80000001C33EEFE0;
  *(_QWORD *)(v0 + 15384) = type metadata accessor for UsoTask_repeat_common_Announcement(0);
  *(_QWORD *)(v0 + 15392) = 0xD000000000000019;
  *(_QWORD *)(v0 + 15400) = 0x80000001C33EF000;
  *(_QWORD *)(v0 + 15408) = type metadata accessor for UsoTask_send_common_Announcement(0);
  *(_QWORD *)(v0 + 15416) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 15424) = 0x80000001C33EF020;
  *(_QWORD *)(v0 + 15432) = type metadata accessor for UsoTask_noVerb_common_Announcement(0);
  *(_QWORD *)(v0 + 15440) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 15448) = 0x80000001C33EF040;
  *(_QWORD *)(v0 + 15456) = type metadata accessor for UsoTask_summarise_common_Announcement(0);
  *(_QWORD *)(v0 + 15464) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 15472) = 0x80000001C33EF060;
  *(_QWORD *)(v0 + 15480) = type metadata accessor for UsoTask_reply_common_Announcement(0);
  *(_QWORD *)(v0 + 15488) = 0xD000000000000021;
  *(_QWORD *)(v0 + 15496) = 0x80000001C33EF080;
  *(_QWORD *)(v0 + 15504) = type metadata accessor for UsoTask_skipBackward_common_Announcement(0);
  *(_QWORD *)(v0 + 15512) = 0xD000000000000019;
  *(_QWORD *)(v0 + 15520) = 0x80000001C33EF0B0;
  *(_QWORD *)(v0 + 15528) = type metadata accessor for UsoTask_stop_common_Announcement(0);
  *(_QWORD *)(v0 + 15536) = 0xD000000000000020;
  *(_QWORD *)(v0 + 15544) = 0x80000001C33EF0D0;
  *(_QWORD *)(v0 + 15552) = type metadata accessor for UsoTask_skipForward_common_Announcement(0);
  *(_QWORD *)(v0 + 15560) = 0xD000000000000019;
  *(_QWORD *)(v0 + 15568) = 0x80000001C33EF100;
  *(_QWORD *)(v0 + 15576) = type metadata accessor for UsoTask_play_common_Announcement(0);
  *(_QWORD *)(v0 + 15584) = 0xD000000000000020;
  *(_QWORD *)(v0 + 15592) = 0x80000001C33EF120;
  *(_QWORD *)(v0 + 15600) = type metadata accessor for UsoTask_perform_common_SiriSocialAction(0);
  *(_QWORD *)(v0 + 15608) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 15616) = 0x80000001C33EF150;
  *(_QWORD *)(v0 + 15624) = type metadata accessor for UsoTask_noVerb_common_SiriSocialAction(0);
  *(_QWORD *)(v0 + 15632) = 0xD000000000000022;
  *(_QWORD *)(v0 + 15640) = 0x80000001C33EF170;
  *(_QWORD *)(v0 + 15648) = type metadata accessor for UsoTask_summarise_common_SiriSocialAction(0);
  *(_QWORD *)(v0 + 15656) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 15664) = 0x80000001C33EF1A0;
  *(_QWORD *)(v0 + 15672) = type metadata accessor for UsoTask_noVerb_common_GeographicArea(0);
  *(_QWORD *)(v0 + 15680) = 0xD000000000000020;
  *(_QWORD *)(v0 + 15688) = 0x80000001C33EF1C0;
  *(_QWORD *)(v0 + 15696) = type metadata accessor for UsoTask_getPerson_common_GeographicArea(0);
  *(_QWORD *)(v0 + 15704) = 0xD000000000000014;
  *(_QWORD *)(v0 + 15712) = 0x80000001C33EF1F0;
  *(_QWORD *)(v0 + 15720) = type metadata accessor for UsoTask_create_common_Agent(0);
  *(_QWORD *)(v0 + 15728) = 0xD000000000000014;
  *(_QWORD *)(v0 + 15736) = 0x80000001C33EF210;
  *(_QWORD *)(v0 + 15744) = type metadata accessor for UsoTask_delete_common_Agent(0);
  *(_QWORD *)(v0 + 15752) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 15760) = 0x80000001C33EF230;
  *(_QWORD *)(v0 + 15768) = type metadata accessor for UsoTask_checkExistence_common_Agent(0);
  *(_QWORD *)(v0 + 15776) = 0xD000000000000012;
  *(_QWORD *)(v0 + 15784) = 0x80000001C33EF250;
  *(_QWORD *)(v0 + 15792) = type metadata accessor for UsoTask_read_common_Agent(0);
  *(_QWORD *)(v0 + 15800) = 0xD000000000000014;
  *(_QWORD *)(v0 + 15808) = 0x80000001C33EF270;
  *(_QWORD *)(v0 + 15816) = type metadata accessor for UsoTask_update_common_Agent(0);
  *(_QWORD *)(v0 + 15824) = 0xD000000000000015;
  *(_QWORD *)(v0 + 15832) = 0x80000001C33EF290;
  *(_QWORD *)(v0 + 15840) = type metadata accessor for UsoTask_request_common_Agent(0);
  *(_QWORD *)(v0 + 15848) = 0xD000000000000017;
  *(_QWORD *)(v0 + 15856) = 0x80000001C33EF2B0;
  *(_QWORD *)(v0 + 15864) = type metadata accessor for UsoTask_summarise_common_Agent(0);
  *(_QWORD *)(v0 + 15872) = 0xD000000000000014;
  *(_QWORD *)(v0 + 15880) = 0x80000001C33EF2D0;
  *(_QWORD *)(v0 + 15888) = type metadata accessor for UsoTask_noVerb_common_Agent(0);
  *(_QWORD *)(v0 + 15896) = 0xD000000000000025;
  *(_QWORD *)(v0 + 15904) = 0x80000001C33EF2F0;
  *(_QWORD *)(v0 + 15912) = type metadata accessor for UsoTask_getPerson_common_MicroGeographicArea(0);
  *(_QWORD *)(v0 + 15920) = 0xD000000000000022;
  *(_QWORD *)(v0 + 15928) = 0x80000001C33EF320;
  *(_QWORD *)(v0 + 15936) = type metadata accessor for UsoTask_noVerb_common_MicroGeographicArea(0);
  *(_QWORD *)(v0 + 15944) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 15952) = 0x80000001C33EF350;
  *(_QWORD *)(v0 + 15960) = type metadata accessor for UsoTask_noVerb_commonStock_StockType(0);
  *(_QWORD *)(v0 + 15968) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 15976) = 0x80000001C33EF370;
  *(_QWORD *)(v0 + 15984) = type metadata accessor for UsoTask_noVerb_common_UserPossession(0);
  *(_QWORD *)(v0 + 15992) = 0xD000000000000025;
  *(_QWORD *)(v0 + 16000) = 0x80000001C33EF390;
  *(_QWORD *)(v0 + 16008) = type metadata accessor for UsoTask_checkExistence_common_UserPossession(0);
  *(_QWORD *)(v0 + 16016) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 16024) = 0x80000001C33EF3C0;
  *(_QWORD *)(v0 + 16032) = type metadata accessor for UsoTask_request_common_UserPossession(0);
  *(_QWORD *)(v0 + 16040) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 16048) = 0x80000001C33EF3E0;
  *(_QWORD *)(v0 + 16056) = type metadata accessor for UsoTask_deny_common_UserPossession(0);
  *(_QWORD *)(v0 + 16064) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 16072) = 0x80000001C33EF400;
  *(_QWORD *)(v0 + 16080) = type metadata accessor for UsoTask_state_common_UserPossession(0);
  *(_QWORD *)(v0 + 16088) = 0xD000000000000020;
  *(_QWORD *)(v0 + 16096) = 0x80000001C33EF420;
  *(_QWORD *)(v0 + 16104) = type metadata accessor for UsoTask_summarise_common_UserPossession(0);
  *(_QWORD *)(v0 + 16112) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 16120) = 0x80000001C33EF450;
  *(_QWORD *)(v0 + 16128) = type metadata accessor for UsoTask_noVerb_common_CalendarEra(0);
  *(_QWORD *)(v0 + 16136) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 16144) = 0x80000001C33EF470;
  *(_QWORD *)(v0 + 16152) = type metadata accessor for UsoTask_noVerb_common_Time12HourClock(0);
  *(_QWORD *)(v0 + 16160) = 0xD00000000000002BLL;
  *(_QWORD *)(v0 + 16168) = 0x80000001C33EF490;
  *(_QWORD *)(v0 + 16176) = type metadata accessor for UsoTask_noVerb_appleArithmetic_ArithmeticAttribute(0);
  *(_QWORD *)(v0 + 16184) = 0xD000000000000020;
  *(_QWORD *)(v0 + 16192) = 0x80000001C33EF4C0;
  *(_QWORD *)(v0 + 16200) = type metadata accessor for UsoTask_summarise_common_PaymentAccount(0);
  *(_QWORD *)(v0 + 16208) = 0xD000000000000025;
  *(_QWORD *)(v0 + 16216) = 0x80000001C33EF4F0;
  *(_QWORD *)(v0 + 16224) = type metadata accessor for UsoTask_checkExistence_common_PaymentAccount(0);
  *(_QWORD *)(v0 + 16232) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 16240) = 0x80000001C33EF520;
  *(_QWORD *)(v0 + 16248) = type metadata accessor for UsoTask_request_common_PaymentAccount(0);
  *(_QWORD *)(v0 + 16256) = 0xD000000000000028;
  *(_QWORD *)(v0 + 16264) = 0x80000001C33EF540;
  *(_QWORD *)(v0 + 16272) = type metadata accessor for UsoTask_submitApplication_common_PaymentAccount(0);
  *(_QWORD *)(v0 + 16280) = 0xD000000000000027;
  *(_QWORD *)(v0 + 16288) = 0x80000001C33EF570;
  *(_QWORD *)(v0 + 16296) = type metadata accessor for UsoTask_summariseHighest_common_PaymentAccount(0);
  *(_QWORD *)(v0 + 16304) = 0xD000000000000026;
  *(_QWORD *)(v0 + 16312) = 0x80000001C33EF5A0;
  *(_QWORD *)(v0 + 16320) = type metadata accessor for UsoTask_summariseLowest_common_PaymentAccount(0);
  *(_QWORD *)(v0 + 16328) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 16336) = 0x80000001C33EF5D0;
  *(_QWORD *)(v0 + 16344) = type metadata accessor for UsoTask_noVerb_common_PaymentAccount(0);
  *(_QWORD *)(v0 + 16352) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 16360) = 0x80000001C33EF5F0;
  *(_QWORD *)(v0 + 16368) = type metadata accessor for UsoTask_create_common_PaymentAccount(0);
  *(_QWORD *)(v0 + 16376) = 0xD000000000000026;
  *(_QWORD *)(v0 + 0x4000) = 0x80000001C33EF610;
  *(_QWORD *)(v0 + 16392) = type metadata accessor for UsoTask_noVerb_commonWriting_WritingAttribute(0);
  *(_QWORD *)(v0 + 16400) = 0xD000000000000017;
  *(_QWORD *)(v0 + 16408) = 0x80000001C33EF640;
  *(_QWORD *)(v0 + 16416) = type metadata accessor for UsoTask_find_common_Arithmetic(0);
  *(_QWORD *)(v0 + 16424) = 0xD000000000000019;
  *(_QWORD *)(v0 + 16432) = 0x80000001C33EF660;
  *(_QWORD *)(v0 + 16440) = type metadata accessor for UsoTask_noVerb_common_Arithmetic(0);
  *(_QWORD *)(v0 + 16448) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 16456) = 0x80000001C33EF680;
  *(_QWORD *)(v0 + 16464) = type metadata accessor for UsoTask_unlike_common_UserFavorite(0);
  *(_QWORD *)(v0 + 16472) = 0xD000000000000019;
  *(_QWORD *)(v0 + 16480) = 0x80000001C33EF6A0;
  *(_QWORD *)(v0 + 16488) = type metadata accessor for UsoTask_like_common_UserFavorite(0);
  *(_QWORD *)(v0 + 16496) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 16504) = 0x80000001C33EF6C0;
  *(_QWORD *)(v0 + 16512) = type metadata accessor for UsoTask_checkLike_common_UserFavorite(0);
  *(_QWORD *)(v0 + 16520) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 16528) = 0x80000001C33EF6E0;
  *(_QWORD *)(v0 + 16536) = type metadata accessor for UsoTask_guess_common_UserFavorite(0);
  *(_QWORD *)(v0 + 16544) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 16552) = 0x80000001C33EF700;
  *(_QWORD *)(v0 + 16560) = type metadata accessor for UsoTask_noVerb_common_UserFavorite(0);
  *(_QWORD *)(v0 + 16568) = 0xD000000000000020;
  *(_QWORD *)(v0 + 16576) = 0x80000001C33EF720;
  *(_QWORD *)(v0 + 16584) = type metadata accessor for UsoTask_checkUnlike_common_UserFavorite(0);
  *(_QWORD *)(v0 + 16592) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 16600) = 0x80000001C33EF750;
  *(_QWORD *)(v0 + 16608) = type metadata accessor for UsoTask_request_common_UserFavorite(0);
  *(_QWORD *)(v0 + 16616) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 16624) = 0x80000001C33EF770;
  *(_QWORD *)(v0 + 16632) = type metadata accessor for UsoTask_summarise_common_SiriFavorite(0);
  *(_QWORD *)(v0 + 16640) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 16648) = 0x80000001C33EF790;
  *(_QWORD *)(v0 + 16656) = type metadata accessor for UsoTask_unlike_common_SiriFavorite(0);
  *(_QWORD *)(v0 + 16664) = 0xD000000000000019;
  *(_QWORD *)(v0 + 16672) = 0x80000001C33EF7B0;
  *(_QWORD *)(v0 + 16680) = type metadata accessor for UsoTask_like_common_SiriFavorite(0);
  *(_QWORD *)(v0 + 16688) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 16696) = 0x80000001C33EF7D0;
  *(_QWORD *)(v0 + 16704) = type metadata accessor for UsoTask_checkLike_common_SiriFavorite(0);
  *(_QWORD *)(v0 + 16712) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 16720) = 0x80000001C33EF7F0;
  *(_QWORD *)(v0 + 16728) = type metadata accessor for UsoTask_noVerb_common_SiriFavorite(0);
  *(_QWORD *)(v0 + 16736) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 16744) = 0x80000001C33EF810;
  *(_QWORD *)(v0 + 16752) = type metadata accessor for UsoTask_request_common_SiriFavorite(0);
  *(_QWORD *)(v0 + 16760) = 0xD000000000000020;
  *(_QWORD *)(v0 + 16768) = 0x80000001C33EF830;
  *(_QWORD *)(v0 + 16776) = type metadata accessor for UsoTask_checkUnlike_common_SiriFavorite(0);
  *(_QWORD *)(v0 + 16784) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 16792) = 0x80000001C33EF860;
  *(_QWORD *)(v0 + 16800) = type metadata accessor for UsoTask_noVerb_common_Time24HourClock(0);
  *(_QWORD *)(v0 + 16808) = 0xD000000000000015;
  *(_QWORD *)(v0 + 16816) = 0x80000001C33EF880;
  *(_QWORD *)(v0 + 16824) = type metadata accessor for UsoTask_uninstall_common_App(0);
  *(_QWORD *)(v0 + 16832) = 0xD000000000000012;
  *(_QWORD *)(v0 + 16840) = 0x80000001C33EF8A0;
  *(_QWORD *)(v0 + 16848) = type metadata accessor for UsoTask_delete_common_App(0);
  *(_QWORD *)(v0 + 16856) = 0xD000000000000015;
  *(_QWORD *)(v0 + 16864) = 0x80000001C33EF8C0;
  *(_QWORD *)(v0 + 16872) = type metadata accessor for UsoTask_authorise_common_App(0);
  *(_QWORD *)(v0 + 16880) = 0xD000000000000012;
  *(_QWORD *)(v0 + 16888) = 0x80000001C33EF8E0;
  *(_QWORD *)(v0 + 16896) = type metadata accessor for UsoTask_noVerb_common_App(0);
  *(_QWORD *)(v0 + 16904) = 0xD000000000000015;
  *(_QWORD *)(v0 + 16912) = 0x80000001C33EF900;
  *(_QWORD *)(v0 + 16920) = type metadata accessor for UsoTask_updateApp_common_App(0);
  *(_QWORD *)(v0 + 16928) = 0xD000000000000013;
  *(_QWORD *)(v0 + 16936) = 0x80000001C33EF920;
  *(_QWORD *)(v0 + 16944) = type metadata accessor for UsoTask_install_common_App(0);
  *(_QWORD *)(v0 + 16952) = 0xD000000000000020;
  *(_QWORD *)(v0 + 16960) = 0x80000001C33EF940;
  *(_QWORD *)(v0 + 16968) = type metadata accessor for UsoTask_discoverCapabilities_common_App(0);
  *(_QWORD *)(v0 + 16976) = 0xD000000000000017;
  *(_QWORD *)(v0 + 16984) = 0x80000001C33EF970;
  *(_QWORD *)(v0 + 16992) = type metadata accessor for UsoTask_deauthorise_common_App(0);
  *(_QWORD *)(v0 + 17000) = 0xD000000000000015;
  *(_QWORD *)(v0 + 17008) = 0x80000001C33EF990;
  *(_QWORD *)(v0 + 17016) = type metadata accessor for UsoTask_summarise_common_App(0);
  *(_QWORD *)(v0 + 17024) = 0xD000000000000013;
  *(_QWORD *)(v0 + 17032) = 0x80000001C33EF9B0;
  *(_QWORD *)(v0 + 17040) = type metadata accessor for UsoTask_offload_common_App(0);
  *(_QWORD *)(v0 + 17048) = 0xD000000000000010;
  *(_QWORD *)(v0 + 17056) = 0x80000001C33EF9D0;
  *(_QWORD *)(v0 + 17064) = type metadata accessor for UsoTask_quit_common_App(0);
  *(_QWORD *)(v0 + 17072) = 0xD000000000000013;
  *(_QWORD *)(v0 + 17080) = 0x80000001C33EF9F0;
  *(_QWORD *)(v0 + 17088) = type metadata accessor for UsoTask_restart_common_App(0);
  *(_QWORD *)(v0 + 17096) = 0xD000000000000011;
  *(_QWORD *)(v0 + 17104) = 0x80000001C33EFA10;
  *(_QWORD *)(v0 + 17112) = type metadata accessor for UsoTask_close_common_App(0);
  *(_QWORD *)(v0 + 17120) = 0xD000000000000010;
  *(_QWORD *)(v0 + 17128) = 0x80000001C33EFA30;
  *(_QWORD *)(v0 + 17136) = type metadata accessor for UsoTask_open_common_App(0);
  *(_QWORD *)(v0 + 17144) = 0xD000000000000021;
  *(_QWORD *)(v0 + 17152) = 0x80000001C33EFA50;
  *(_QWORD *)(v0 + 17160) = type metadata accessor for UsoTask_noVerb_appleTimer_TimerAttribute(0);
  *(_QWORD *)(v0 + 17168) = 0xD000000000000028;
  *(_QWORD *)(v0 + 17176) = 0x80000001C33EFA80;
  *(_QWORD *)(v0 + 17184) = type metadata accessor for UsoTask_noVerb_commonNotebook_NotebookAttribute(0);
  *(_QWORD *)(v0 + 17192) = 0xD000000000000016;
  *(_QWORD *)(v0 + 17200) = 0x80000001C33EFAB0;
  *(_QWORD *)(v0 + 17208) = type metadata accessor for UsoTask_noVerb_common_Integer(0);
  *(_QWORD *)(v0 + 17216) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 17224) = 0x80000001C33EFAD0;
  *(_QWORD *)(v0 + 17232) = type metadata accessor for UsoTask_noVerb_common_ListPosition(0);
  *(_QWORD *)(v0 + 17240) = 0xD000000000000029;
  *(_QWORD *)(v0 + 17248) = 0x80000001C33EFAF0;
  *(_QWORD *)(v0 + 17256) = type metadata accessor for UsoTask_noVerb_applePhoneCall_PhoneCallAttribute(0);
  *(_QWORD *)(v0 + 17264) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 17272) = 0x80000001C33EFB20;
  *(_QWORD *)(v0 + 17280) = type metadata accessor for UsoTask_skipBackward_common_Calendar(0);
  *(_QWORD *)(v0 + 17288) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 17296) = 0x80000001C33EFB40;
  *(_QWORD *)(v0 + 17304) = type metadata accessor for UsoTask_summarise_common_Calendar(0);
  *(_QWORD *)(v0 + 17312) = 0xD000000000000017;
  *(_QWORD *)(v0 + 17320) = 0x80000001C33EFB60;
  *(_QWORD *)(v0 + 17328) = type metadata accessor for UsoTask_noVerb_common_Calendar(0);
  *(_QWORD *)(v0 + 17336) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 17344) = 0x80000001C33EFB80;
  *(_QWORD *)(v0 + 17352) = type metadata accessor for UsoTask_skipForward_common_Calendar(0);
  *(_QWORD *)(v0 + 17360) = 0xD000000000000018;
  *(_QWORD *)(v0 + 17368) = 0x80000001C33EFBA0;
  *(_QWORD *)(v0 + 17376) = type metadata accessor for UsoTask_update_common_HealthLog(0);
  *(_QWORD *)(v0 + 17384) = 0xD000000000000020;
  *(_QWORD *)(v0 + 17392) = 0x80000001C33EFBC0;
  *(_QWORD *)(v0 + 17400) = type metadata accessor for UsoTask_checkExistence_common_HealthLog(0);
  *(_QWORD *)(v0 + 17408) = 0xD000000000000018;
  *(_QWORD *)(v0 + 17416) = 0x80000001C33EFBF0;
  *(_QWORD *)(v0 + 17424) = type metadata accessor for UsoTask_delete_common_HealthLog(0);
  *(_QWORD *)(v0 + 17432) = 0xD000000000000018;
  *(_QWORD *)(v0 + 17440) = 0x80000001C33EFC10;
  *(_QWORD *)(v0 + 17448) = type metadata accessor for UsoTask_create_common_HealthLog(0);
  *(_QWORD *)(v0 + 17456) = 0xD000000000000016;
  *(_QWORD *)(v0 + 17464) = 0x80000001C33EFC30;
  *(_QWORD *)(v0 + 17472) = type metadata accessor for UsoTask_open_common_HealthLog(0);
  *(_QWORD *)(v0 + 17480) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 17488) = 0x80000001C33EFC50;
  *(_QWORD *)(v0 + 17496) = type metadata accessor for UsoTask_requestLog_common_HealthLog(0);
  *(_QWORD *)(v0 + 17504) = 0xD000000000000018;
  *(_QWORD *)(v0 + 17512) = 0x80000001C33EFC70;
  *(_QWORD *)(v0 + 17520) = type metadata accessor for UsoTask_noVerb_common_HealthLog(0);
  *(_QWORD *)(v0 + 17528) = 0xD000000000000022;
  *(_QWORD *)(v0 + 17536) = 0x80000001C33EFC90;
  *(_QWORD *)(v0 + 17544) = type metadata accessor for UsoTask_noVerb_commonEmail_EmailAttribute(0);
  *(_QWORD *)(v0 + 17552) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 17560) = 0x80000001C33EFCC0;
  *(_QWORD *)(v0 + 17568) = type metadata accessor for UsoTask_delete_common_Notification(0);
  *(_QWORD *)(v0 + 17576) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 17584) = 0x80000001C33EFCE0;
  *(_QWORD *)(v0 + 17592) = type metadata accessor for UsoTask_repeat_common_Notification(0);
  *(_QWORD *)(v0 + 17600) = 0xD000000000000019;
  *(_QWORD *)(v0 + 17608) = 0x80000001C33EFD00;
  *(_QWORD *)(v0 + 17616) = type metadata accessor for UsoTask_read_common_Notification(0);
  *(_QWORD *)(v0 + 17624) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 17632) = 0x80000001C33EFD20;
  *(_QWORD *)(v0 + 17640) = type metadata accessor for UsoTask_previous_common_Notification(0);
  *(_QWORD *)(v0 + 17648) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 17656) = 0x80000001C33EFD40;
  *(_QWORD *)(v0 + 17664) = type metadata accessor for UsoTask_summarise_common_Notification(0);
  *(_QWORD *)(v0 + 17672) = 0xD000000000000019;
  *(_QWORD *)(v0 + 17680) = 0x80000001C33EFD60;
  *(_QWORD *)(v0 + 17688) = type metadata accessor for UsoTask_open_common_Notification(0);
  *(_QWORD *)(v0 + 17696) = 0xD000000000000019;
  *(_QWORD *)(v0 + 17704) = 0x80000001C33EFD80;
  *(_QWORD *)(v0 + 17712) = type metadata accessor for UsoTask_skip_common_Notification(0);
  *(_QWORD *)(v0 + 17720) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 17728) = 0x80000001C33EFDA0;
  *(_QWORD *)(v0 + 17736) = type metadata accessor for UsoTask_noVerb_common_Notification(0);
  *(_QWORD *)(v0 + 17744) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 17752) = 0x80000001C33EFDC0;
  *(_QWORD *)(v0 + 17760) = type metadata accessor for UsoTask_request_common_Notification(0);
  *(_QWORD *)(v0 + 17768) = 0xD000000000000023;
  *(_QWORD *)(v0 + 17776) = 0x80000001C33EFDE0;
  *(_QWORD *)(v0 + 17784) = type metadata accessor for UsoTask_noVerb_common_MeasurementComponent(0);
  *(_QWORD *)(v0 + 17792) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 17800) = 0x80000001C33EFE10;
  *(_QWORD *)(v0 + 17808) = type metadata accessor for UsoTask_noVerb_common_SiriProperty(0);
  *(_QWORD *)(v0 + 17816) = 0xD000000000000023;
  *(_QWORD *)(v0 + 17824) = 0x80000001C33EFE30;
  *(_QWORD *)(v0 + 17832) = type metadata accessor for UsoTask_checkExistence_common_SiriProperty(0);
  *(_QWORD *)(v0 + 17840) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 17848) = 0x80000001C33EFE60;
  *(_QWORD *)(v0 + 17856) = type metadata accessor for UsoTask_state_common_SiriProperty(0);
  *(_QWORD *)(v0 + 17864) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 17872) = 0x80000001C33EFE80;
  *(_QWORD *)(v0 + 17880) = type metadata accessor for UsoTask_summarise_common_SiriProperty(0);
  *(_QWORD *)(v0 + 17888) = 0xD000000000000021;
  *(_QWORD *)(v0 + 17896) = 0x80000001C33EFEA0;
  *(_QWORD *)(v0 + 17904) = type metadata accessor for UsoTask_noVerb_common_PaymentAccountType(0);
  *(_QWORD *)(v0 + 17912) = 0xD000000000000018;
  *(_QWORD *)(v0 + 17920) = 0x80000001C33EFED0;
  *(_QWORD *)(v0 + 17928) = type metadata accessor for UsoTask_hide_common_PhotoMemory(0);
  *(_QWORD *)(v0 + 17936) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 17944) = 0x80000001C33EFEF0;
  *(_QWORD *)(v0 + 17952) = type metadata accessor for UsoTask_resume_common_PhotoMemory(0);
  *(_QWORD *)(v0 + 17960) = 0xD000000000000020;
  *(_QWORD *)(v0 + 17968) = 0x80000001C33EFF10;
  *(_QWORD *)(v0 + 17976) = type metadata accessor for UsoTask_skipBackward_common_PhotoMemory(0);
  *(_QWORD *)(v0 + 17984) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 17992) = 0x80000001C33EFF40;
  *(_QWORD *)(v0 + 18000) = type metadata accessor for UsoTask_skipForward_common_PhotoMemory(0);
  *(_QWORD *)(v0 + 18008) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 18016) = 0x80000001C33EFF60;
  *(_QWORD *)(v0 + 18024) = type metadata accessor for UsoTask_noVerb_common_PhotoMemory(0);
  *(_QWORD *)(v0 + 18032) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 18040) = 0x80000001C33EFF80;
  *(_QWORD *)(v0 + 18048) = type metadata accessor for UsoTask_unhide_common_PhotoMemory(0);
  *(_QWORD *)(v0 + 18056) = 0xD000000000000018;
  *(_QWORD *)(v0 + 18064) = 0x80000001C33EFFA0;
  *(_QWORD *)(v0 + 18072) = type metadata accessor for UsoTask_stop_common_PhotoMemory(0);
  *(_QWORD *)(v0 + 18080) = 0xD000000000000018;
  *(_QWORD *)(v0 + 18088) = 0x80000001C33EFFC0;
  *(_QWORD *)(v0 + 18096) = type metadata accessor for UsoTask_play_common_PhotoMemory(0);
  *(_QWORD *)(v0 + 18104) = 0xD000000000000019;
  *(_QWORD *)(v0 + 18112) = 0x80000001C33EFFE0;
  *(_QWORD *)(v0 + 18120) = type metadata accessor for UsoTask_pause_common_PhotoMemory(0);
  *(_QWORD *)(v0 + 18128) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 18136) = 0x80000001C33F0000;
  *(_QWORD *)(v0 + 18144) = type metadata accessor for UsoTask_goBack_common_NavigationMenu(0);
  *(_QWORD *)(v0 + 18152) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 18160) = 0x80000001C33F0020;
  *(_QWORD *)(v0 + 18168) = type metadata accessor for UsoTask_goHome_common_NavigationMenu(0);
  *(_QWORD *)(v0 + 18176) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 18184) = 0x80000001C33F0040;
  *(_QWORD *)(v0 + 18192) = type metadata accessor for UsoTask_noVerb_common_NavigationMenu(0);
  *(_QWORD *)(v0 + 18200) = 0xD000000000000019;
  *(_QWORD *)(v0 + 18208) = 0x80000001C33F0060;
  *(_QWORD *)(v0 + 18216) = type metadata accessor for UsoTask_noVerb_common_Medication(0);
  *(_QWORD *)(v0 + 18224) = 0xD000000000000018;
  *(_QWORD *)(v0 + 18232) = 0x80000001C33F0080;
  *(_QWORD *)(v0 + 18240) = type metadata accessor for UsoTask_noVerb_common_DayOfWeek(0);
  *(_QWORD *)(v0 + 18248) = 0xD000000000000017;
  *(_QWORD *)(v0 + 18256) = 0x80000001C33F00A0;
  *(_QWORD *)(v0 + 18264) = type metadata accessor for UsoTask_noVerb_common_Currency(0);
  *(_QWORD *)(v0 + 18272) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 18280) = 0x80000001C33F00C0;
  *(_QWORD *)(v0 + 18288) = type metadata accessor for UsoTask_noVerb_common_AttachmentType(0);
  *(_QWORD *)(v0 + 18296) = 0xD000000000000014;
  *(_QWORD *)(v0 + 18304) = 0x80000001C33F00E0;
  *(_QWORD *)(v0 + 18312) = type metadata accessor for UsoTask_open_common_Website(0);
  *(_QWORD *)(v0 + 18320) = 0xD000000000000016;
  *(_QWORD *)(v0 + 18328) = 0x80000001C33F0100;
  *(_QWORD *)(v0 + 18336) = type metadata accessor for UsoTask_noVerb_common_Website(0);
  *(_QWORD *)(v0 + 18344) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 18352) = 0x80000001C33F0120;
  *(_QWORD *)(v0 + 18360) = type metadata accessor for UsoTask_create_common_JournalEntry(0);
  *(_QWORD *)(v0 + 18368) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 18376) = 0x80000001C33F0140;
  *(_QWORD *)(v0 + 18384) = type metadata accessor for UsoTask_delete_common_JournalEntry(0);
  *(_QWORD *)(v0 + 18392) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 18400) = 0x80000001C33F0160;
  *(_QWORD *)(v0 + 18408) = type metadata accessor for UsoTask_summarise_common_JournalEntry(0);
  *(_QWORD *)(v0 + 18416) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 18424) = 0x80000001C33F0180;
  *(_QWORD *)(v0 + 18432) = type metadata accessor for UsoTask_update_common_JournalEntry(0);
  *(_QWORD *)(v0 + 18440) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 18448) = 0x80000001C33F01A0;
  *(_QWORD *)(v0 + 18456) = type metadata accessor for UsoTask_noVerb_common_JournalEntry(0);
  *(_QWORD *)(v0 + 18464) = 0xD000000000000016;
  *(_QWORD *)(v0 + 18472) = 0x80000001C33F01C0;
  *(_QWORD *)(v0 + 18480) = type metadata accessor for UsoTask_noVerb_common_Decimal(0);
  *(_QWORD *)(v0 + 18488) = 0xD000000000000021;
  *(_QWORD *)(v0 + 18496) = 0x80000001C33F01E0;
  *(_QWORD *)(v0 + 18504) = type metadata accessor for UsoTask_action_common_SocialConversation(0);
  *(_QWORD *)(v0 + 18512) = 0xD000000000000015;
  *(_QWORD *)(v0 + 18520) = 0x80000001C33F0210;
  *(_QWORD *)(v0 + 18528) = type metadata accessor for UsoTask_update_common_Person(0);
  *(_QWORD *)(v0 + 18536) = 0xD000000000000013;
  *(_QWORD *)(v0 + 18544) = 0x80000001C33F0230;
  *(_QWORD *)(v0 + 18552) = type metadata accessor for UsoTask_read_common_Person(0);
  *(_QWORD *)(v0 + 18560) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 18568) = 0x80000001C33F0250;
  *(_QWORD *)(v0 + 18576) = type metadata accessor for UsoTask_setIdentity_common_Person(0);
  *(_QWORD *)(v0 + 18584) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 18592) = 0x80000001C33F0270;
  *(_QWORD *)(v0 + 18600) = type metadata accessor for UsoTask_getLocation_common_Person(0);
  *(_QWORD *)(v0 + 18608) = 0xD000000000000016;
  *(_QWORD *)(v0 + 18616) = 0x80000001C33F0290;
  *(_QWORD *)(v0 + 18624) = type metadata accessor for UsoTask_request_common_Person(0);
  *(_QWORD *)(v0 + 18632) = 0xD000000000000018;
  *(_QWORD *)(v0 + 18640) = 0x80000001C33F02B0;
  *(_QWORD *)(v0 + 18648) = type metadata accessor for UsoTask_summarise_common_Person(0);
  *(_QWORD *)(v0 + 18656) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 18664) = 0x80000001C33F02D0;
  *(_QWORD *)(v0 + 18672) = type metadata accessor for UsoTask_checkExistence_common_Person(0);
  *(_QWORD *)(v0 + 18680) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 18688) = 0x80000001C33F02F0;
  *(_QWORD *)(v0 + 18696) = type metadata accessor for UsoTask_pronounceName_common_Person(0);
  *(_QWORD *)(v0 + 18704) = 0xD000000000000015;
  *(_QWORD *)(v0 + 18712) = 0x80000001C33F0310;
  *(_QWORD *)(v0 + 18720) = type metadata accessor for UsoTask_noVerb_common_Person(0);
  *(_QWORD *)(v0 + 18728) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 18736) = 0x80000001C33F0330;
  *(_QWORD *)(v0 + 18744) = type metadata accessor for UsoTask_checkIdentity_common_Person(0);
  *(_QWORD *)(v0 + 18752) = 0xD000000000000015;
  *(_QWORD *)(v0 + 18760) = 0x80000001C33F0350;
  *(_QWORD *)(v0 + 18768) = type metadata accessor for UsoTask_create_common_Person(0);
  *(_QWORD *)(v0 + 18776) = 0xD000000000000015;
  *(_QWORD *)(v0 + 18784) = 0x80000001C33F0370;
  *(_QWORD *)(v0 + 18792) = type metadata accessor for UsoTask_delete_common_Person(0);
  *(_QWORD *)(v0 + 18800) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 18808) = 0x80000001C33F0390;
  *(_QWORD *)(v0 + 18816) = type metadata accessor for UsoTask_checkLocation_common_Person(0);
  *(_QWORD *)(v0 + 18824) = 0xD000000000000019;
  *(_QWORD *)(v0 + 18832) = 0x80000001C33F03B0;
  *(_QWORD *)(v0 + 18840) = type metadata accessor for UsoTask_noVerb_common_Similarity(0);
  *(_QWORD *)(v0 + 18848) = 0xD000000000000019;
  *(_QWORD *)(v0 + 18856) = 0x80000001C33F03D0;
  *(_QWORD *)(v0 + 18864) = type metadata accessor for UsoTask_noVerb_common_HomeEntity(0);
  *(_QWORD *)(v0 + 18872) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 18880) = 0x80000001C33F03F0;
  *(_QWORD *)(v0 + 18888) = type metadata accessor for UsoTask_noVerb_common_CalendarSystem(0);
  *(_QWORD *)(v0 + 18896) = 0xD00000000000002FLL;
  *(_QWORD *)(v0 + 18904) = 0x80000001C33F0410;
  *(_QWORD *)(v0 + 18912) = type metadata accessor for UsoTask_noVerb_common_KnowledgeQuestionPersonAttribute(0);
  *(_QWORD *)(v0 + 18920) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 18928) = 0x80000001C33F0440;
  *(_QWORD *)(v0 + 18936) = type metadata accessor for UsoTask_enable_common_RadioStation(0);
  *(_QWORD *)(v0 + 18944) = 0xD000000000000019;
  *(_QWORD *)(v0 + 18952) = 0x80000001C33F0460;
  *(_QWORD *)(v0 + 18960) = type metadata accessor for UsoTask_play_common_RadioStation(0);
  *(_QWORD *)(v0 + 18968) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 18976) = 0x80000001C33F0480;
  *(_QWORD *)(v0 + 18984) = type metadata accessor for UsoTask_disable_common_RadioStation(0);
  *(_QWORD *)(v0 + 18992) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 19000) = 0x80000001C33F04A0;
  *(_QWORD *)(v0 + 19008) = type metadata accessor for UsoTask_noVerb_common_RadioStation(0);
  *(_QWORD *)(v0 + 19016) = 0xD000000000000019;
  *(_QWORD *)(v0 + 19024) = 0x80000001C33F04C0;
  *(_QWORD *)(v0 + 19032) = type metadata accessor for UsoTask_scan_common_RadioStation(0);
  *(_QWORD *)(v0 + 19040) = 0xD000000000000025;
  *(_QWORD *)(v0 + 19048) = 0x80000001C33F04E0;
  *(_QWORD *)(v0 + 19056) = type metadata accessor for UsoTask_noVerb_commonApp_AppListingAttribute(0);
  *(_QWORD *)(v0 + 19064) = 0xD000000000000013;
  *(_QWORD *)(v0 + 19072) = 0x80000001C33F0510;
  *(_QWORD *)(v0 + 19080) = type metadata accessor for UsoTask_noVerb_common_Word(0);
  *(_QWORD *)(v0 + 19088) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 19096) = 0x80000001C33F0530;
  *(_QWORD *)(v0 + 19104) = type metadata accessor for UsoTask_checkExistence_common_Group(0);
  *(_QWORD *)(v0 + 19112) = 0xD000000000000014;
  *(_QWORD *)(v0 + 19120) = 0x80000001C33F0550;
  *(_QWORD *)(v0 + 19128) = type metadata accessor for UsoTask_noVerb_common_Group(0);
  *(_QWORD *)(v0 + 19136) = 0xD000000000000014;
  *(_QWORD *)(v0 + 19144) = 0x80000001C33F0570;
  *(_QWORD *)(v0 + 19152) = type metadata accessor for UsoTask_create_common_Group(0);
  *(_QWORD *)(v0 + 19160) = 0xD000000000000012;
  *(_QWORD *)(v0 + 19168) = 0x80000001C33F0590;
  *(_QWORD *)(v0 + 19176) = type metadata accessor for UsoTask_read_common_Group(0);
  *(_QWORD *)(v0 + 19184) = 0xD000000000000017;
  *(_QWORD *)(v0 + 19192) = 0x80000001C33F05B0;
  *(_QWORD *)(v0 + 19200) = type metadata accessor for UsoTask_summarise_common_Group(0);
  *(_QWORD *)(v0 + 19208) = 0xD000000000000014;
  *(_QWORD *)(v0 + 19216) = 0x80000001C33F05D0;
  *(_QWORD *)(v0 + 19224) = type metadata accessor for UsoTask_delete_common_Group(0);
  *(_QWORD *)(v0 + 19232) = 0xD000000000000014;
  *(_QWORD *)(v0 + 19240) = 0x80000001C33F05F0;
  *(_QWORD *)(v0 + 19248) = type metadata accessor for UsoTask_update_common_Group(0);
  *(_QWORD *)(v0 + 19256) = 0xD000000000000015;
  *(_QWORD *)(v0 + 19264) = 0x80000001C33F0610;
  *(_QWORD *)(v0 + 19272) = type metadata accessor for UsoTask_request_common_Group(0);
  *(_QWORD *)(v0 + 19280) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 19288) = 0x80000001C33F0630;
  *(_QWORD *)(v0 + 19296) = type metadata accessor for UsoTask_noVerb_common_TemperatureUnit(0);
  *(_QWORD *)(v0 + 19304) = 0xD000000000000024;
  *(_QWORD *)(v0 + 19312) = 0x80000001C33F0650;
  *(_QWORD *)(v0 + 19320) = type metadata accessor for UsoTask_noVerb_commonStock_StockChangeState(0);
  *(_QWORD *)(v0 + 19328) = 0xD000000000000019;
  *(_QWORD *)(v0 + 19336) = 0x80000001C33F0680;
  *(_QWORD *)(v0 + 19344) = type metadata accessor for UsoTask_noVerb_common_Attachment(0);
  *(_QWORD *)(v0 + 19352) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 19360) = 0x80000001C33F06A0;
  *(_QWORD *)(v0 + 19368) = type metadata accessor for UsoTask_noVerb_common_PostalAddress(0);
  *(_QWORD *)(v0 + 19376) = 0xD000000000000013;
  *(_QWORD *)(v0 + 19384) = 0x80000001C33F06C0;
  *(_QWORD *)(v0 + 19392) = type metadata accessor for UsoTask_noVerb_common_Time(0);
  *(_QWORD *)(v0 + 19400) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 19408) = 0x80000001C33F06E0;
  *(_QWORD *)(v0 + 19416) = type metadata accessor for UsoTask_summarise_common_NotebookList(0);
  *(_QWORD *)(v0 + 19424) = 0xD000000000000023;
  *(_QWORD *)(v0 + 19432) = 0x80000001C33F0700;
  *(_QWORD *)(v0 + 19440) = type metadata accessor for UsoTask_checkExistence_common_NotebookList(0);
  *(_QWORD *)(v0 + 19448) = 0xD000000000000019;
  *(_QWORD *)(v0 + 19456) = 0x80000001C33F0730;
  *(_QWORD *)(v0 + 19464) = type metadata accessor for UsoTask_read_common_NotebookList(0);
  *(_QWORD *)(v0 + 19472) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 19480) = 0x80000001C33F0750;
  *(_QWORD *)(v0 + 19488) = type metadata accessor for UsoTask_update_common_NotebookList(0);
  *(_QWORD *)(v0 + 19496) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 19504) = 0x80000001C33F0770;
  *(_QWORD *)(v0 + 19512) = type metadata accessor for UsoTask_request_common_NotebookList(0);
  *(_QWORD *)(v0 + 19520) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 19528) = 0x80000001C33F0790;
  *(_QWORD *)(v0 + 19536) = type metadata accessor for UsoTask_noVerb_common_NotebookList(0);
  *(_QWORD *)(v0 + 19544) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 19552) = 0x80000001C33F07B0;
  *(_QWORD *)(v0 + 19560) = type metadata accessor for UsoTask_delete_common_NotebookList(0);
  *(_QWORD *)(v0 + 19568) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 19576) = 0x80000001C33F07D0;
  *(_QWORD *)(v0 + 19584) = type metadata accessor for UsoTask_create_common_NotebookList(0);
  result = sub_1C302BD7C(v0);
  qword_1EF8AF7E0 = result;
  return result;
}

double static UsoTask_CodegenConverter.convert(task:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;

  if (a1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    v11 = *(_QWORD *)(a1 + 24);
    swift_bridgeObjectRetain();
    sub_1C3378C5C();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C3378C5C();
    swift_bridgeObjectRelease();
    if (qword_1EF7E50F0 != -1)
      swift_once();
    swift_beginAccess();
    v4 = qword_1EF8AF7E0;
    if (*(_QWORD *)(qword_1EF8AF7E0 + 16))
    {
      swift_bridgeObjectRetain();
      v5 = sub_1C302B1E4(v10, v11);
      if ((v6 & 1) != 0)
      {
        v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
        swift_endAccess();
        swift_bridgeObjectRelease_n();
        v8 = (*(uint64_t (**)(uint64_t))(v7 + 88))(a1);
        *(_QWORD *)(a2 + 24) = type metadata accessor for CodeGenTaskBase();
        *(_QWORD *)a2 = v8;
        return result;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
  }
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

unint64_t sub_1C2FE3744(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_UserEntity, &qword_1EF819060);
}

unint64_t sub_1C2FE3758(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Person, &qword_1EF819040);
}

unint64_t sub_1C2FE376C(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Setting, &qword_1EF818FF8);
}

unint64_t sub_1C2FE3780(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonEventTrigger_EventTriggerAttribute, (uint64_t *)&unk_1EF818FC8);
}

unint64_t sub_1C2FE3794(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_AppEntity, &qword_1EF818FC0);
}

unint64_t sub_1C2FE37A8(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Agent, &qword_1EF818FB8);
}

unint64_t sub_1C2FE37BC(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonPhoneCall_PhoneCallAttribute, &qword_1EF818FB0);
}

unint64_t sub_1C2FE37D0(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonUserEntity_UserEntityAttribute, &qword_1EF818FA8);
}

unint64_t sub_1C2FE37E4(unint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!result)
    return result;
  v1 = result;
  v7 = MEMORY[0x1E0DEE9D8];
  if (!(result >> 62))
  {
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  result = sub_1C3378FEC();
  v2 = result;
  if (!result)
    goto LABEL_14;
LABEL_4:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v3 = 0;
    v4 = MEMORY[0x1E0DEA968];
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v5 = MEMORY[0x1C3BD10B4](v3, v1);
      }
      else
      {
        v5 = *(_QWORD *)(v1 + 8 * v3 + 32);
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF818FA0);
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v4;
      *(_QWORD *)(v6 + 24) = v5;
      MEMORY[0x1C3BD0EEC]();
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1C3378DAC();
      ++v3;
      sub_1C3378DD0();
      sub_1C3378DA0();
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

unint64_t sub_1C2FE395C(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_SiriContentTopic, &qword_1EF818F98);
}

unint64_t sub_1C2FE3970(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Note, &qword_1EF818F90);
}

unint64_t sub_1C2FE3984(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Tag, &qword_1EF818F88);
}

unint64_t sub_1C2FE3998(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Reminder, &qword_1EF818F80);
}

unint64_t sub_1C2FE39AC(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonContact_ContactAttribute, &qword_1EF818F78);
}

unint64_t sub_1C2FE39C0(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Utilities, &qword_1EF818F70);
}

unint64_t sub_1C2FE39D4(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_SportsItem, &qword_1EF818F68);
}

unint64_t sub_1C2FE39E8(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonTimer_TimerAttribute, &qword_1EF818F60);
}

unint64_t sub_1C2FE39FC(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_SortDirection, &qword_1EF818F58);
}

unint64_t sub_1C2FE3A10(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_CrisisSupport, &qword_1EF818F50);
}

unint64_t sub_1C2FE3A24(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_EmailLabel, &qword_1EF818F48);
}

unint64_t sub_1C2FE3A38(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonEmail_EmailAttribute, &qword_1EF818F40);
}

unint64_t sub_1C2FE3A4C(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_DateTime, &qword_1EF818F38);
}

unint64_t sub_1C2FE3A60(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_DateType, &qword_1EF818F30);
}

unint64_t sub_1C2FE3A74(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Tapback, &qword_1EF818F28);
}

unint64_t sub_1C2FE3A88(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_MessageLabel, &qword_1EF818F20);
}

unint64_t sub_1C2FE3A9C(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Attachment, &qword_1EF818F18);
}

unint64_t sub_1C2FE3AB0(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonMessage_MessageAttribute, &qword_1EF818F10);
}

unint64_t sub_1C2FE3AC4(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Medication, &qword_1EF818F08);
}

unint64_t sub_1C2FE3AD8(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_DurationComponent, &qword_1EF818F00);
}

unint64_t sub_1C2FE3AEC(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_ProductCategory, &qword_1EF818EF8);
}

unint64_t sub_1C2FE3B00(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonFindMy_DeviceAttribute, &qword_1EF818EF0);
}

unint64_t sub_1C2FE3B14(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_DeviceProperty, &qword_1EF818EE8);
}

unint64_t sub_1C2FE3B28(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_UserEntityType, &qword_1EF818EE0);
}

unint64_t sub_1C2FE3B3C(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_KnowledgeQuestionAttribute, &qword_1EF818ED8);
}

unint64_t sub_1C2FE3B50(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_MeasurementComponent, &qword_1EF818ED0);
}

unint64_t sub_1C2FE3B64(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonAlarm_AlarmAttribute, &qword_1EF818EC8);
}

unint64_t sub_1C2FE3B78(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_Participant, &qword_1EF818EC0);
}

unint64_t sub_1C2FE3B8C(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonCalendarEvent_CalendarEventAttribute, &qword_1EF818EB8);
}

unint64_t sub_1C2FE3BA0(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_DailyBriefingItem, &qword_1EF818EB0);
}

unint64_t sub_1C2FE3BB4(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonNotebook_NotebookAttribute, &qword_1EF818EA8);
}

unint64_t sub_1C2FE3BC8(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonWriting_WritingAttribute, &qword_1EF818EA0);
}

unint64_t sub_1C2FE3BDC(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_MediaItem, &qword_1EF818E98);
}

unint64_t sub_1C2FE3BF0(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonArithmetic_ArithmeticAttribute, &qword_1EF818E90);
}

unint64_t sub_1C2FE3C04(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonApp_AppAttribute, &qword_1EF818E88);
}

unint64_t sub_1C2FE3C18(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_NotificationAction, &qword_1EF818E80);
}

unint64_t sub_1C2FE3C2C(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_commonNotification_NotificationAttribute, &qword_1EF818E78);
}

unint64_t sub_1C2FE3C40(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_SocialConversation, &qword_1EF818E70);
}

unint64_t sub_1C2FE3C54(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_PersonRelationship, &qword_1EF818E68);
}

unint64_t sub_1C2FE3C68(unint64_t a1)
{
  return sub_1C2FE3C7C(a1, (uint64_t (*)(_QWORD))type metadata accessor for UsoEntity_common_NotebookItem, &qword_1EF818E60);
}

unint64_t sub_1C2FE3C7C(unint64_t result, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (!result)
    return result;
  v5 = result;
  v11 = MEMORY[0x1E0DEE9D8];
  if (!(result >> 62))
  {
    v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  result = sub_1C3378FEC();
  v6 = result;
  if (!result)
    goto LABEL_14;
LABEL_4:
  if (v6 < 1)
  {
    __break(1u);
  }
  else
  {
    v7 = a2(0);
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x1C3BD10B4](i, v5);
      }
      else
      {
        v9 = *(_QWORD *)(v5 + 8 * i + 32);
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(a3);
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = v7;
      *(_QWORD *)(v10 + 24) = v9;
      MEMORY[0x1C3BD0EEC]();
      if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1C3378DAC();
      sub_1C3378DD0();
      sub_1C3378DA0();
    }
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceReactionType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceReactionType);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceReactionType()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceVideoFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceVideoFilter);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceVideoFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceNumberTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceNumberTrigger);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceNumberTrigger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Uso_VerbTemplate_ReferenceNumberTrigger.reference.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceProfile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceProfile);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceProfile()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceControlOffsetDuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceControlOffsetDuration);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceControlOffsetDuration()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_RecipientsEventTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_RecipientsEventTrigger);
}

uint64_t method lookup function for Uso_VerbTemplate_RecipientsEventTrigger()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceSelect(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceSelect);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceSelect()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceTrigger);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceTrigger()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceString(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceString);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceString()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Uso_VerbTemplate_ReferenceString.string.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of Uso_VerbTemplate_ReferenceString.reference.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceMeasurementUnit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceMeasurementUnit);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceMeasurementUnit()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferencePhotoCollectionFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferencePhotoCollectionFilter);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferencePhotoCollectionFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceStringTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceStringTrigger);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceStringTrigger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Uso_VerbTemplate_ReferenceStringTrigger.string.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferencePhotoMemoryFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferencePhotoMemoryFilter);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferencePhotoMemoryFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferencePhotoTag(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferencePhotoTag);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferencePhotoTag()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceSlideshowFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceSlideshowFilter);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceSlideshowFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceDurationTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceDurationTrigger);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceDurationTrigger()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceTargetSelect(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceTargetSelect);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceTargetSelect()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_RecipientsHiddenPeople(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_RecipientsHiddenPeople);
}

uint64_t method lookup function for Uso_VerbTemplate_RecipientsHiddenPeople()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_PlaceholderVerb(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_PlaceholderVerb);
}

uint64_t method lookup function for Uso_VerbTemplate_PlaceholderVerb()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceSetPeople(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceSetPeople);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceSetPeople()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_Target(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_Target);
}

uint64_t method lookup function for Uso_VerbTemplate_Target()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_NoVerb(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_NoVerb);
}

uint64_t method lookup function for Uso_VerbTemplate_NoVerb()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Uso_VerbTemplate_NoVerb.userEntities.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of Uso_VerbTemplate_NoVerb.entityAsExpression.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t type metadata accessor for Uso_VerbTemplate_StockSummarise(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_StockSummarise);
}

uint64_t method lookup function for Uso_VerbTemplate_StockSummarise()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Uso_VerbTemplate_StockSummarise.reference.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of Uso_VerbTemplate_StockSummarise.referenceAsExpression.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferencePhotoFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferencePhotoFilter);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferencePhotoFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceGeographicArea(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceGeographicArea);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceGeographicArea()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferencePhotoCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferencePhotoCollection);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferencePhotoCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceVoiceCommandPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceVoiceCommandPayload);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceVoiceCommandPayload()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceTarget(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceTarget);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceTarget()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceControl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceControl);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceControl()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceDateTimeRangeTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceDateTimeRangeTrigger);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceDateTimeRangeTrigger()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_Reference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_Reference);
}

uint64_t method lookup function for Uso_VerbTemplate_Reference()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceMeasurementTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceMeasurementTrigger);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceMeasurementTrigger()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_Entity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_Entity);
}

uint64_t method lookup function for Uso_VerbTemplate_Entity()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Uso_VerbTemplate_Entity.entity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of Uso_VerbTemplate_Entity.entityAsExpression.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferencePaymentSortKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferencePaymentSortKey);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferencePaymentSortKey()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Uso_VerbTemplate_ReferenceControlDuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_ReferenceControlDuration);
}

uint64_t method lookup function for Uso_VerbTemplate_ReferenceControlDuration()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1C2FE41CC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Uso_VerbTemplate_Adjustment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Uso_VerbTemplate_Adjustment);
}

uint64_t method lookup function for Uso_VerbTemplate_Adjustment()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Uso_VerbTemplate_Adjustment.adjustmentTypeAsExpression.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of Uso_VerbTemplate_Adjustment.reference.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of Uso_VerbTemplate_Adjustment.referenceAsExpression.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of Uso_VerbTemplate_Adjustment.adjustmentDirection.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of Uso_VerbTemplate_Adjustment.adjustmentDirectionAsExpression.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t type metadata accessor for UsoTask_noVerb_common_EventTrigger(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9930);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonTimer_TimerAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3A28);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_VoiceTrigger(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80BAE0);
}

uint64_t type metadata accessor for UsoTask_preview_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5028);
}

uint64_t type metadata accessor for UsoTask_create_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F19D0);
}

uint64_t type metadata accessor for UsoTask_paste_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EFD38);
}

uint64_t type metadata accessor for UsoTask_summarise_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FAAC0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2278);
}

uint64_t type metadata accessor for UsoTask_update_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3620);
}

uint64_t type metadata accessor for UsoTask_skipForward_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8004B8);
}

uint64_t type metadata accessor for UsoTask_skipBackward_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802120);
}

uint64_t type metadata accessor for UsoTask_enterMarkup_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FED38);
}

uint64_t type metadata accessor for UsoTask_copy_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ECBB0);
}

uint64_t type metadata accessor for UsoTask_like_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ECFA8);
}

uint64_t type metadata accessor for UsoTask_unlike_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3430);
}

uint64_t type metadata accessor for UsoTask_close_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EEDC8);
}

uint64_t type metadata accessor for UsoTask_delete_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F1BC0);
}

uint64_t type metadata accessor for UsoTask_cut_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EAE38);
}

uint64_t type metadata accessor for UsoTask_exitMarkup_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FC970);
}

uint64_t type metadata accessor for UsoTask_adjust_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F15C8);
}

uint64_t sub_1C2FE43EC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UsoTask_open_common_AppEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ED928);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_DurationComponent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803970);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PhoneCallMode(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FD208);
}

uint64_t type metadata accessor for UsoTask_noVerb_appleContact_ContactAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3B20);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PersonProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80BBC8);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_PersonProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80BCB0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_PersonProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80BD98);
}

uint64_t type metadata accessor for UsoTask_state_common_PersonProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80BE80);
}

uint64_t type metadata accessor for UsoTask_justify_common_SiriOpinion(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80BF68);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SiriOpinion(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80C050);
}

uint64_t type metadata accessor for UsoTask_summarise_common_SiriOpinion(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80C138);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_SiriOpinion(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80C220);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_TemperatureComponent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF805998);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SearchObject(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FA0C0);
}

uint64_t type metadata accessor for UsoTask_call_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EC8C8);
}

uint64_t type metadata accessor for UsoTask_previous_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F79B0);
}

uint64_t type metadata accessor for UsoTask_stop_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EE8D8);
}

uint64_t type metadata accessor for UsoTask_play_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EDC30);
}

uint64_t type metadata accessor for UsoTask_continue_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6AE8);
}

uint64_t type metadata accessor for UsoTask_request_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5700);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FADC8);
}

uint64_t type metadata accessor for UsoTask_skip_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EE4F0);
}

uint64_t type metadata accessor for UsoTask_read_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EDF08);
}

uint64_t type metadata accessor for UsoTask_delete_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F1EA0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2828);
}

uint64_t type metadata accessor for UsoTask_repeat_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2D20);
}

uint64_t type metadata accessor for UsoTask_pause_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EFF38);
}

uint64_t type metadata accessor for UsoTask_resume_common_Voicemail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3030);
}

uint64_t type metadata accessor for UsoTask_request_common_RecurringDateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF806988);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_RecurringDateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8066E0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_RecurringDateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8071F8);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_RecurringDateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF807750);
}

uint64_t type metadata accessor for UsoTask_read_common_RecurringDateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF805A88);
}

uint64_t type metadata accessor for UsoTask_convert_common_RecurringDateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF806880);
}

uint64_t type metadata accessor for UsoTask_create_common_Workout(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80C310);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Workout(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ED748);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Workout(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80C400);
}

uint64_t type metadata accessor for UsoTask_update_common_Workout(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80C4E8);
}

uint64_t type metadata accessor for UsoTask_cancel_common_Workout(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80C5E0);
}

uint64_t type metadata accessor for UsoTask_stop_common_Workout(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80C6C8);
}

uint64_t type metadata accessor for UsoTask_pause_common_Workout(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80C7C8);
}

uint64_t type metadata accessor for UsoTask_resume_common_Workout(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80C8C8);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonStock_StockAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3938);
}

uint64_t type metadata accessor for UsoTask_softwareUpdate_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80C9D0);
}

uint64_t type metadata accessor for UsoTask_request_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8268);
}

uint64_t type metadata accessor for UsoTask_stopPing_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80CAC0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FE0A8);
}

uint64_t type metadata accessor for UsoTask_find_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EF0B0);
}

uint64_t type metadata accessor for UsoTask_getLocation_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF800F78);
}

uint64_t type metadata accessor for UsoTask_reping_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80CBB0);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804628);
}

uint64_t type metadata accessor for UsoTask_ping_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0030);
}

uint64_t type metadata accessor for UsoTask_reset_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80CC98);
}

uint64_t type metadata accessor for UsoTask_discoverCapabilities_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF806B70);
}

uint64_t type metadata accessor for UsoTask_checkLocation_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80CD88);
}

uint64_t type metadata accessor for UsoTask_restart_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8358);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_UserEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F4C40);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Religion(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EF958);
}

uint64_t type metadata accessor for UsoTask_hear_common_SiriContent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80CE80);
}

uint64_t type metadata accessor for UsoTask_tell_common_SiriContent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80CF68);
}

uint64_t type metadata accessor for UsoTask_repeat_common_SiriContent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80D050);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SiriContent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80D138);
}

uint64_t type metadata accessor for UsoTask_unlike_common_SiriContent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80D220);
}

uint64_t type metadata accessor for UsoTask_discoverCapabilities_common_SiriContent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80D308);
}

uint64_t type metadata accessor for UsoTask_like_common_SiriContent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80D3F0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_MonthOfYear(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F73E8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PhoneNumber(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F74E0);
}

uint64_t type metadata accessor for UsoTask_create_common_Clock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E7D68);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Clock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0C10);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Clock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8D88);
}

uint64_t type metadata accessor for UsoTask_delete_common_Clock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8410);
}

uint64_t type metadata accessor for UsoTask_noVerb_appleMessage_MessageAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3C18);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_NoteFolder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80D4E0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_NoteFolder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80D5C8);
}

uint64_t type metadata accessor for UsoTask_request_common_NoteFolder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80D6B0);
}

uint64_t type metadata accessor for UsoTask_update_common_NoteFolder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80D7A8);
}

uint64_t type metadata accessor for UsoTask_create_common_NoteFolder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80D8A0);
}

uint64_t type metadata accessor for UsoTask_delete_common_NoteFolder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80D988);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_NoteFolder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80DA70);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonAlarm_AlarmAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3568);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonContact_ContactAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3EF0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_DeviceProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FF5E8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_MeasurementUnit(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801250);
}

uint64_t type metadata accessor for UsoTask_summarise_common_ReminderList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80DB58);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_ReminderList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80DC40);
}

uint64_t type metadata accessor for UsoTask_request_common_ReminderList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80DD28);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_ReminderList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80DE20);
}

uint64_t type metadata accessor for UsoTask_delete_common_ReminderList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80DF08);
}

uint64_t type metadata accessor for UsoTask_create_common_ReminderList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80DFF0);
}

uint64_t type metadata accessor for UsoTask_update_common_ReminderList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80E0D8);
}

uint64_t type metadata accessor for UsoTask_read_common_ReminderList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80E1D0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Stock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9348);
}

uint64_t type metadata accessor for UsoTask_create_common_Stock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8050);
}

uint64_t type metadata accessor for UsoTask_read_common_Stock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5F28);
}

uint64_t type metadata accessor for UsoTask_delete_common_Stock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E87E0);
}

uint64_t type metadata accessor for UsoTask_request_common_Stock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EBEE8);
}

uint64_t type metadata accessor for UsoTask_update_common_Stock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EA8C0);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Stock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FBBE8);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Stock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F10D0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_AppSection(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3FE8);
}

uint64_t type metadata accessor for UsoTask_previous_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F78C0);
}

uint64_t type metadata accessor for UsoTask_redial_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2B18);
}

uint64_t type metadata accessor for UsoTask_callback_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6800);
}

uint64_t type metadata accessor for UsoTask_stop_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EE6F8);
}

uint64_t type metadata accessor for UsoTask_hangup_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2090);
}

uint64_t type metadata accessor for UsoTask_videocall_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FB3B8);
}

uint64_t type metadata accessor for UsoTask_join_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ECEB0);
}

uint64_t type metadata accessor for UsoTask_request_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F55F8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2640);
}

uint64_t type metadata accessor for UsoTask_read_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EDE18);
}

uint64_t type metadata accessor for UsoTask_update_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3930);
}

uint64_t type metadata accessor for UsoTask_skip_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EE3F8);
}

uint64_t type metadata accessor for UsoTask_summarise_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FACD0);
}

uint64_t type metadata accessor for UsoTask_delete_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F1DA8);
}

uint64_t type metadata accessor for UsoTask_continue_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F69F0);
}

uint64_t type metadata accessor for UsoTask_call_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EC7D8);
}

uint64_t type metadata accessor for UsoTask_answer_common_PhoneCall(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F16D0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_ContactAddress(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FF308);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_LocalisedString(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801160);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_ProductCategory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801628);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_NumberSign(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F4590);
}

uint64_t type metadata accessor for UsoTask_action_common_Utilities(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F13A8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PersonName(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F4870);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonNotification_NotificationAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E4A68);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonPhoneCall_PhoneCallAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E4590);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SettingValue(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FA1B8);
}

uint64_t type metadata accessor for UsoTask_learnNameCorrection_common_PersonContact(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF807470);
}

uint64_t type metadata accessor for UsoTask_read_common_PersonContact(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F7E68);
}

uint64_t type metadata accessor for UsoTask_create_common_PersonContact(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FC1B0);
}

uint64_t type metadata accessor for UsoTask_forgetNameCorrection_common_PersonContact(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF807658);
}

uint64_t type metadata accessor for UsoTask_delete_common_PersonContact(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FC670);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PersonContact(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FD118);
}

uint64_t type metadata accessor for UsoTask_summarise_common_PersonContact(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8033F0);
}

uint64_t type metadata accessor for UsoTask_update_common_PersonContact(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FE4A8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SportsItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F4B50);
}

uint64_t type metadata accessor for UsoTask_reset_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E75A8);
}

uint64_t type metadata accessor for UsoTask_create_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8140);
}

uint64_t type metadata accessor for UsoTask_start_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E7898);
}

uint64_t type metadata accessor for UsoTask_delete_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E88D0);
}

uint64_t type metadata accessor for UsoTask_update_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EA9C8);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FBCE0);
}

uint64_t type metadata accessor for UsoTask_pause_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6EA8);
}

uint64_t type metadata accessor for UsoTask_resume_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9B00);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9438);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F11C0);
}

uint64_t type metadata accessor for UsoTask_stop_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E64F8);
}

uint64_t type metadata accessor for UsoTask_request_common_Timer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EBFF0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SearchQualifier(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801718);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Reaction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80E2C0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Reaction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80E3A8);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Reaction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80E490);
}

uint64_t type metadata accessor for UsoTask_request_common_Reaction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80E578);
}

uint64_t type metadata accessor for UsoTask_action_common_CrisisSupport(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FB530);
}

uint64_t type metadata accessor for UsoTask_summarise_common_DateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803208);
}

uint64_t type metadata accessor for UsoTask_request_common_DateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8000C0);
}

uint64_t type metadata accessor for UsoTask_convert_common_DateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FEB38);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_DateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FCD48);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_DateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF805E70);
}

uint64_t type metadata accessor for UsoTask_read_common_DateTimeRange(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F7C88);
}

uint64_t type metadata accessor for UsoTask_noVerb_appleWriting_WritingAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3D10);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_TimeZone(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EFB48);
}

uint64_t type metadata accessor for UsoTask_update_common_PersonRelationship(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804C20);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PersonRelationship(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8048F8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_ActivationValue(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801070);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Color(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8E78);
}

uint64_t type metadata accessor for UsoTask_delete_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8500);
}

uint64_t type metadata accessor for UsoTask_cc_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E4C58);
}

uint64_t type metadata accessor for UsoTask_send_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6210);
}

uint64_t type metadata accessor for UsoTask_save_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6118);
}

uint64_t type metadata accessor for UsoTask_forward_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EB120);
}

uint64_t type metadata accessor for UsoTask_update_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EA6B8);
}

uint64_t type metadata accessor for UsoTask_reply_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E73A0);
}

uint64_t type metadata accessor for UsoTask_previous_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EDD28);
}

uint64_t type metadata accessor for UsoTask_read_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5D40);
}

uint64_t type metadata accessor for UsoTask_continue_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ECAB8);
}

uint64_t type metadata accessor for UsoTask_stop_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6400);
}

uint64_t type metadata accessor for UsoTask_skip_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6308);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FB810);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0D08);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8F70);
}

uint64_t type metadata accessor for UsoTask_request_common_Email(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EBBD8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_DeviceCategory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FF4F0);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_DateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802958);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_DateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EF490);
}

uint64_t type metadata accessor for UsoTask_convert_common_DateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F18D8);
}

uint64_t type metadata accessor for UsoTask_request_common_DateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2E28);
}

uint64_t type metadata accessor for UsoTask_read_common_DateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EB7D0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_DateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8848);
}

uint64_t type metadata accessor for UsoTask_removeFilter_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802D40);
}

uint64_t type metadata accessor for UsoTask_removeTag_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FD5D0);
}

uint64_t type metadata accessor for UsoTask_create_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3B10);
}

uint64_t type metadata accessor for UsoTask_summarise_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FDEB8);
}

uint64_t type metadata accessor for UsoTask_removeFromAlbum_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8051E0);
}

uint64_t type metadata accessor for UsoTask_checkExistence_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804440);
}

uint64_t type metadata accessor for UsoTask_applyTag_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8BB8);
}

uint64_t type metadata accessor for UsoTask_like_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EF2A8);
}

uint64_t type metadata accessor for UsoTask_delete_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3C00);
}

uint64_t type metadata accessor for UsoTask_addToAlbum_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FE848);
}

uint64_t type metadata accessor for UsoTask_play_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0128);
}

uint64_t type metadata accessor for UsoTask_noVerb_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3EF0);
}

uint64_t type metadata accessor for UsoTask_unlike_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F65F8);
}

uint64_t type metadata accessor for UsoTask_applyFilter_apple_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8009A0);
}

uint64_t type metadata accessor for UsoTask_request_common_SiriPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80E670);
}

uint64_t type metadata accessor for UsoTask_state_common_SiriPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80E768);
}

uint64_t type metadata accessor for UsoTask_deny_common_SiriPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80E850);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SiriPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80E938);
}

uint64_t type metadata accessor for UsoTask_summarise_common_SiriPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80EA20);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_SiriPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80EB08);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PersonSocialAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80EBF0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_PersonSocialAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80ECD8);
}

uint64_t type metadata accessor for UsoTask_state_common_PersonSocialAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80EDC0);
}

uint64_t type metadata accessor for UsoTask_pause_common_Journey(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80EEA8);
}

uint64_t type metadata accessor for UsoTask_start_common_Journey(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80EFA8);
}

uint64_t type metadata accessor for UsoTask_request_common_Journey(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80F0A8);
}

uint64_t type metadata accessor for UsoTask_update_common_Journey(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80F1A0);
}

uint64_t type metadata accessor for UsoTask_stop_common_Journey(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80F298);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Journey(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80F398);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9250);
}

uint64_t type metadata accessor for UsoTask_unlike_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EA2C8);
}

uint64_t type metadata accessor for UsoTask_unhide_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80F480);
}

uint64_t type metadata accessor for UsoTask_applyTag_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EC6E0);
}

uint64_t type metadata accessor for UsoTask_addToAlbum_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F14A0);
}

uint64_t type metadata accessor for UsoTask_skipBackward_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80F580);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0FE0);
}

uint64_t type metadata accessor for UsoTask_create_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E7F58);
}

uint64_t type metadata accessor for UsoTask_removeTag_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0220);
}

uint64_t type metadata accessor for UsoTask_delete_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E86F0);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FBAF8);
}

uint64_t type metadata accessor for UsoTask_like_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E52A0);
}

uint64_t type metadata accessor for UsoTask_play_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5958);
}

uint64_t type metadata accessor for UsoTask_applyFilter_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3A20);
}

uint64_t type metadata accessor for UsoTask_hide_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80F680);
}

uint64_t type metadata accessor for UsoTask_removeFilter_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F7F60);
}

uint64_t type metadata accessor for UsoTask_skipForward_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80F780);
}

uint64_t type metadata accessor for UsoTask_removeFromAlbum_common_Photo(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FFC90);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonMessage_MessageAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3FE0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Salutation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80F888);
}

uint64_t type metadata accessor for UsoTask_tell_common_Salutation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80F970);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Organization(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9ED8);
}

uint64_t type metadata accessor for UsoTask_create_common_Organization(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8E90);
}

uint64_t type metadata accessor for UsoTask_read_common_Organization(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F53F8);
}

uint64_t type metadata accessor for UsoTask_update_common_Organization(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FB1C0);
}

uint64_t type metadata accessor for UsoTask_request_common_Organization(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FDBB8);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Organization(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8026F0);
}

uint64_t type metadata accessor for UsoTask_delete_common_Organization(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9358);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Organization(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8056C0);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonArithmetic_ArithmeticAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E4688);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_MultipliedNumber(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802C50);
}

uint64_t type metadata accessor for UsoTask_setDateTimeRange_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF805B98);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804530);
}

uint64_t type metadata accessor for UsoTask_setDuration_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801F18);
}

uint64_t type metadata accessor for UsoTask_setNumber_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FDDC0);
}

uint64_t type metadata accessor for UsoTask_increaseBy_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FF038);
}

uint64_t type metadata accessor for UsoTask_decreaseByMeasurement_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF806E00);
}

uint64_t type metadata accessor for UsoTask_open_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EFC38);
}

uint64_t type metadata accessor for UsoTask_toggle_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6410);
}

uint64_t type metadata accessor for UsoTask_disable_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6D08);
}

uint64_t type metadata accessor for UsoTask_set_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EE210);
}

uint64_t type metadata accessor for UsoTask_setMeasurement_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804A08);
}

uint64_t type metadata accessor for UsoTask_summarise_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FDFB0);
}

uint64_t type metadata accessor for UsoTask_setLabel_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FA7D8);
}

uint64_t type metadata accessor for UsoTask_setProfile_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8003C8);
}

uint64_t type metadata accessor for UsoTask_request_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8168);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F43B0);
}

uint64_t type metadata accessor for UsoTask_decreaseBy_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FEC48);
}

uint64_t type metadata accessor for UsoTask_increaseByMeasurement_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF807010);
}

uint64_t type metadata accessor for UsoTask_enable_common_CarSetting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3D08);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_TimeUnit(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EFA50);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_OffsetDirection(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801438);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Interjection(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80FA60);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Event(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FB908);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Event(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0E00);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Event(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9068);
}

uint64_t type metadata accessor for UsoTask_request_common_Event(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EBCE0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_MedicationEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801348);
}

uint64_t type metadata accessor for UsoTask_request_common_MedicationEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80FB50);
}

uint64_t type metadata accessor for UsoTask_snooze_common_MedicationEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80FC48);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_MedicationEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80FD40);
}

uint64_t type metadata accessor for UsoTask_create_common_MedicationEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80FE28);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_RecurringDateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803B50);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Date(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E69D8);
}

uint64_t type metadata accessor for UsoTask_unreact_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF80FF10);
}

uint64_t type metadata accessor for UsoTask_previous_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2A10);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ED468);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6030);
}

uint64_t type metadata accessor for UsoTask_check_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EAC58);
}

uint64_t type metadata accessor for UsoTask_cc_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810000);
}

uint64_t type metadata accessor for UsoTask_unshare_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F12B8);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF800A90);
}

uint64_t type metadata accessor for UsoTask_skip_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9EE8);
}

uint64_t type metadata accessor for UsoTask_read_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9900);
}

uint64_t type metadata accessor for UsoTask_send_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9D08);
}

uint64_t type metadata accessor for UsoTask_reply_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EB8D0);
}

uint64_t type metadata accessor for UsoTask_forward_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EF1B8);
}

uint64_t type metadata accessor for UsoTask_request_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0320);
}

uint64_t type metadata accessor for UsoTask_continue_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F17C8);
}

uint64_t type metadata accessor for UsoTask_stop_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EA1D0);
}

uint64_t type metadata accessor for UsoTask_react_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8100F8);
}

uint64_t type metadata accessor for UsoTask_delete_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ECCA8);
}

uint64_t type metadata accessor for UsoTask_update_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EEBD0);
}

uint64_t type metadata accessor for UsoTask_share_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EC1F8);
}

uint64_t type metadata accessor for UsoTask_save_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8101F0);
}

uint64_t type metadata accessor for UsoTask_unsend_common_Message(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8102E8);
}

uint64_t type metadata accessor for UsoTask_request_common_MedicationSchedule(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8103D0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_MedicationSchedule(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8104C8);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_MedicationSchedule(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8105B0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_MedicationSchedule(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810698);
}

uint64_t type metadata accessor for UsoTask_update_common_MedicationSchedule(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810780);
}

uint64_t type metadata accessor for UsoTask_create_common_MedicationSchedule(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810878);
}

uint64_t type metadata accessor for UsoTask_delete_common_MedicationSchedule(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810960);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_OffsetDate(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F4688);
}

uint64_t type metadata accessor for UsoTask_startCapture_common_MediaCapture(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810A50);
}

uint64_t type metadata accessor for UsoTask_stopCapture_common_MediaCapture(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810B38);
}

uint64_t type metadata accessor for UsoTask_capture_common_MediaCapture(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810C20);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Duration(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EF678);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Payment(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6120);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Payment(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ED558);
}

uint64_t type metadata accessor for UsoTask_summariseHighest_common_Payment(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803E70);
}

uint64_t type metadata accessor for UsoTask_cancel_common_Payment(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EC9C0);
}

uint64_t type metadata accessor for UsoTask_request_common_Payment(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0428);
}

uint64_t type metadata accessor for UsoTask_requestMoney_common_Payment(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FD7B0);
}

uint64_t type metadata accessor for UsoTask_pay_common_Payment(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E70B8);
}

uint64_t type metadata accessor for UsoTask_summariseLowest_common_Payment(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802E30);
}

uint64_t type metadata accessor for UsoTask_update_common_Payment(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EECD0);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Payment(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF800B88);
}

uint64_t type metadata accessor for UsoTask_run_common_VoiceCommand(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E2CD0);
}

uint64_t type metadata accessor for UsoTask_execute_common_VoiceCommand(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E2CE8);
}

uint64_t type metadata accessor for UsoTask_delete_common_VoiceCommand(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9448);
}

uint64_t type metadata accessor for UsoTask_disable_common_VoiceCommand(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FC880);
}

uint64_t type metadata accessor for UsoTask_summarise_common_VoiceCommand(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8027E8);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_VoiceCommand(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8057B0);
}

uint64_t type metadata accessor for UsoTask_update_common_VoiceCommand(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FB2C8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_VoiceCommand(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FA2B0);
}

uint64_t type metadata accessor for UsoTask_create_common_VoiceCommand(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8F88);
}

uint64_t type metadata accessor for UsoTask_park_common_Car(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E4F30);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Car(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F68F8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Car(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5680);
}

uint64_t type metadata accessor for UsoTask_find_common_Car(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E4D48);
}

uint64_t type metadata accessor for UsoTask_ping_common_Car(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5020);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_MixedFraction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FD028);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_ReferenceType(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FD3F0);
}

uint64_t type metadata accessor for UsoTask_noVerb_appleAlarm_AlarmAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3288);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Uri(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5770);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_CurrencyAmount(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FF3F8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_MediaItemType(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FCF30);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Geolocation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F71F8);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonFindMy_DeviceAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF806060);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Contact(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ED198);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonEventTrigger_EventTriggerAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E4970);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonCalendarEvent_CalendarEventAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E4B58);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PointOfInterest(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801530);
}

uint64_t type metadata accessor for UsoTask_create_common_PointOfInterest(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810D08);
}

uint64_t type metadata accessor for UsoTask_delete_common_PointOfInterest(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810DF0);
}

uint64_t type metadata accessor for UsoTask_request_common_PointOfInterest(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810ED8);
}

uint64_t type metadata accessor for UsoTask_update_common_PointOfInterest(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF810FD0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_PointOfInterest(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8110C8);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_PointOfInterest(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8111B0);
}

uint64_t type metadata accessor for UsoTask_tell_common_SocialInterjection(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811298);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SocialInterjection(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811380);
}

uint64_t type metadata accessor for UsoTask_summarise_common_SafetySession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811468);
}

uint64_t type metadata accessor for UsoTask_create_common_SafetySession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811550);
}

uint64_t type metadata accessor for UsoTask_update_common_SafetySession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811638);
}

uint64_t type metadata accessor for UsoTask_request_common_SafetySession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811730);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SafetySession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811828);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_SafetySession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811910);
}

uint64_t type metadata accessor for UsoTask_pause_common_SafetySession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8119F8);
}

uint64_t type metadata accessor for UsoTask_delete_common_SafetySession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811AE0);
}

uint64_t type metadata accessor for UsoTask_restart_common_SafetySession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811BC8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_KnowledgeQuestion(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803A60);
}

uint64_t type metadata accessor for UsoTask_ask_common_KnowledgeQuestion(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FE938);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_DateTimeRangeQualifier(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8065F0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_EmailAddress(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9838);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_CarProfile(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F42C0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_KnowledgeQuestionAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF807568);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Measurement(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F72F0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Compass(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811CB8);
}

uint64_t type metadata accessor for UsoTask_request_common_Compass(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811DA0);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Compass(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811E98);
}

uint64_t type metadata accessor for UsoTask_disableSetting_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF811F80);
}

uint64_t type metadata accessor for UsoTask_delete_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812080);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812168);
}

uint64_t type metadata accessor for UsoTask_disable_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812250);
}

uint64_t type metadata accessor for UsoTask_request_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812338);
}

uint64_t type metadata accessor for UsoTask_hide_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812430);
}

uint64_t type metadata accessor for UsoTask_snooze_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812530);
}

uint64_t type metadata accessor for UsoTask_update_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812628);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812720);
}

uint64_t type metadata accessor for UsoTask_unhide_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812808);
}

uint64_t type metadata accessor for UsoTask_read_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812908);
}

uint64_t type metadata accessor for UsoTask_enableSetting_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8129F0);
}

uint64_t type metadata accessor for UsoTask_create_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812AF0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Reminder(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812BD8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_LocalBusiness(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FCE40);
}

uint64_t type metadata accessor for UsoTask_summarise_common_LocalBusiness(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8032F8);
}

uint64_t type metadata accessor for UsoTask_request_common_LocalBusiness(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8001C0);
}

uint64_t type metadata accessor for UsoTask_read_common_LocalBusiness(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F7D78);
}

uint64_t type metadata accessor for UsoTask_create_common_LocalBusiness(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FC0C0);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_LocalBusiness(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF805F68);
}

uint64_t type metadata accessor for UsoTask_delete_common_LocalBusiness(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FC580);
}

uint64_t type metadata accessor for UsoTask_update_common_LocalBusiness(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FE3A8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_AppAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2180);
}

uint64_t type metadata accessor for UsoTask_undo_common_AppAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EEAC8);
}

uint64_t type metadata accessor for UsoTask_redo_common_AppAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EE000);
}

uint64_t type metadata accessor for UsoTask_runCommand_common_AppAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FDCA8);
}

uint64_t type metadata accessor for UsoTask_disableNotifications_common_FindMyStatus(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF807370);
}

uint64_t type metadata accessor for UsoTask_hide_common_FindMyStatus(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3DF8);
}

uint64_t type metadata accessor for UsoTask_enableNotifications_common_FindMyStatus(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF806EF8);
}

uint64_t type metadata accessor for UsoTask_unhide_common_FindMyStatus(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FAEC0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_FindMyStatus(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9A20);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonNotebook_NotebookItemType(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E42B8);
}

uint64_t type metadata accessor for UsoTask_perform_common_NotificationAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8050F0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_NotificationAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804718);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Language(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EF770);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonApp_AppAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3098);
}

uint64_t type metadata accessor for UsoTask_setDateTimeRange_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803C60);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6218);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ED650);
}

uint64_t type metadata accessor for UsoTask_setDuration_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FA6C8);
}

uint64_t type metadata accessor for UsoTask_request_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0530);
}

uint64_t type metadata accessor for UsoTask_setLabel_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3248);
}

uint64_t type metadata accessor for UsoTask_increaseBy_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F7008);
}

uint64_t type metadata accessor for UsoTask_enable_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ECDB0);
}

uint64_t type metadata accessor for UsoTask_setNumber_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5B28);
}

uint64_t type metadata accessor for UsoTask_decreaseBy_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6C00);
}

uint64_t type metadata accessor for UsoTask_setMeasurement_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802028);
}

uint64_t type metadata accessor for UsoTask_disable_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EEED0);
}

uint64_t type metadata accessor for UsoTask_open_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9618);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF800C80);
}

uint64_t type metadata accessor for UsoTask_toggle_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EE9D8);
}

uint64_t type metadata accessor for UsoTask_discoverCapabilities_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812CC0);
}

uint64_t type metadata accessor for UsoTask_increaseByMeasurement_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8064F8);
}

uint64_t type metadata accessor for UsoTask_set_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E77A0);
}

uint64_t type metadata accessor for UsoTask_decreaseByMeasurement_common_Setting(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8063E8);
}

uint64_t sub_1C2FE6604()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UsoTask_unhide_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812DB0);
}

uint64_t type metadata accessor for UsoTask_pause_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6FC0);
}

uint64_t type metadata accessor for UsoTask_undo_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812EB0);
}

uint64_t type metadata accessor for UsoTask_read_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6018);
}

uint64_t type metadata accessor for UsoTask_hide_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF812FA0);
}

uint64_t type metadata accessor for UsoTask_close_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6700);
}

uint64_t type metadata accessor for UsoTask_resume_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9C18);
}

uint64_t type metadata accessor for UsoTask_catchMeUp_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8130A8);
}

uint64_t type metadata accessor for UsoTask_skipForward_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5D50);
}

uint64_t type metadata accessor for UsoTask_save_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813190);
}

uint64_t type metadata accessor for UsoTask_like_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5398);
}

uint64_t type metadata accessor for UsoTask_play_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5A70);
}

uint64_t type metadata accessor for UsoTask_repeat_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9A10);
}

uint64_t type metadata accessor for UsoTask_softwareUpdate_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813280);
}

uint64_t type metadata accessor for UsoTask_start_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E79A8);
}

uint64_t type metadata accessor for UsoTask_reply_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E74A8);
}

uint64_t type metadata accessor for UsoTask_open_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5860);
}

uint64_t type metadata accessor for UsoTask_skipBackward_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8568);
}

uint64_t type metadata accessor for UsoTask_discoverCapabilities_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804F08);
}

uint64_t type metadata accessor for UsoTask_update_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EAAD0);
}

uint64_t type metadata accessor for UsoTask_noVerb_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9528);
}

uint64_t type metadata accessor for UsoTask_delete_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E89C0);
}

uint64_t type metadata accessor for UsoTask_shuffle_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EC308);
}

uint64_t type metadata accessor for UsoTask_restart_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EC108);
}

uint64_t type metadata accessor for UsoTask_unlike_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EA3B8);
}

uint64_t type metadata accessor for UsoTask_stop_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6610);
}

uint64_t type metadata accessor for UsoTask_quit_uso_NoEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813370);
}

uint64_t type metadata accessor for UsoTask_summarise_common_UserSocialAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813458);
}

uint64_t type metadata accessor for UsoTask_state_common_UserSocialAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813540);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_UserSocialAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813628);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Alarm(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0B20);
}

uint64_t type metadata accessor for UsoTask_create_common_Alarm(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E7C78);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Alarm(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FB720);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Alarm(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8C98);
}

uint64_t type metadata accessor for UsoTask_disable_common_Alarm(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EB020);
}

uint64_t type metadata accessor for UsoTask_snooze_common_Alarm(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EA0D8);
}

uint64_t type metadata accessor for UsoTask_enable_common_Alarm(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8AB0);
}

uint64_t type metadata accessor for UsoTask_request_common_Alarm(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EBAD8);
}

uint64_t type metadata accessor for UsoTask_delete_common_Alarm(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8320);
}

uint64_t type metadata accessor for UsoTask_update_common_Alarm(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EA5B8);
}

uint64_t type metadata accessor for UsoTask_read_common_Alarm(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5C50);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_UserProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813718);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_UserProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813800);
}

uint64_t type metadata accessor for UsoTask_state_common_UserProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8138E8);
}

uint64_t type metadata accessor for UsoTask_summarise_common_UserProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8139D0);
}

uint64_t type metadata accessor for UsoTask_disableSetting_common_Note(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813AB8);
}

uint64_t type metadata accessor for UsoTask_read_common_Note(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813BB8);
}

uint64_t type metadata accessor for UsoTask_undo_common_Note(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813CA0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Note(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813D88);
}

uint64_t type metadata accessor for UsoTask_update_common_Note(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813E70);
}

uint64_t type metadata accessor for UsoTask_enableSetting_common_Note(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF813F68);
}

uint64_t type metadata accessor for UsoTask_request_common_Note(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814068);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Note(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814160);
}

uint64_t type metadata accessor for UsoTask_delete_common_Note(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814248);
}

uint64_t type metadata accessor for UsoTask_create_common_Note(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814330);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Note(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814418);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_EasterEgg(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814500);
}

uint64_t type metadata accessor for UsoTask_update_common_CalendarEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FE1A8);
}

uint64_t type metadata accessor for UsoTask_request_common_CalendarEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FFEB0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_CalendarEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FCA68);
}

uint64_t type metadata accessor for UsoTask_join_common_CalendarEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8145F0);
}

uint64_t type metadata accessor for UsoTask_delete_common_CalendarEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FC2A0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_CalendarEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802F28);
}

uint64_t type metadata accessor for UsoTask_read_common_CalendarEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F7AA0);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_CalendarEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF805C88);
}

uint64_t type metadata accessor for UsoTask_create_common_CalendarEvent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FBFD0);
}

uint64_t type metadata accessor for UsoTask_play_common_DailyBriefing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F77C8);
}

uint64_t type metadata accessor for UsoTask_summarise_common_DailyBriefing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803110);
}

uint64_t type metadata accessor for UsoTask_update_common_DailyBriefing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FE2A8);
}

uint64_t type metadata accessor for UsoTask_repeat_common_DailyBriefing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FD6C0);
}

uint64_t type metadata accessor for UsoTask_delete_common_DailyBriefing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FC488);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_DailyBriefing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FCC50);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_DailyBriefing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF805D78);
}

uint64_t type metadata accessor for UsoTask_request_common_NotebookItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FD8B0);
}

uint64_t type metadata accessor for UsoTask_snooze_common_NotebookItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FA8D8);
}

uint64_t type metadata accessor for UsoTask_deactivate_common_NotebookItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802A50);
}

uint64_t type metadata accessor for UsoTask_create_common_NotebookItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8CA8);
}

uint64_t type metadata accessor for UsoTask_delete_common_NotebookItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9080);
}

uint64_t type metadata accessor for UsoTask_summarise_common_NotebookItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802418);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_NotebookItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9C00);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_NotebookItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8054D8);
}

uint64_t type metadata accessor for UsoTask_read_common_NotebookItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5120);
}

uint64_t type metadata accessor for UsoTask_undo_common_NotebookItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6508);
}

uint64_t type metadata accessor for UsoTask_update_common_NotebookItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FAFC0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Writing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6308);
}

uint64_t type metadata accessor for UsoTask_play_common_Writing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9710);
}

uint64_t type metadata accessor for UsoTask_quit_common_Writing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9808);
}

uint64_t type metadata accessor for UsoTask_skip_common_Writing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9FE0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Writing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ED838);
}

uint64_t type metadata accessor for UsoTask_request_common_Writing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0630);
}

uint64_t type metadata accessor for UsoTask_show_common_Writing(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9DF8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Age(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5490);
}

uint64_t type metadata accessor for UsoTask_noVerb_uso_NLv3UnknownEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FFAA8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_StopWatch(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2730);
}

uint64_t type metadata accessor for UsoTask_lap_common_StopWatch(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EB218);
}

uint64_t type metadata accessor for UsoTask_request_common_StopWatch(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8146F0);
}

uint64_t type metadata accessor for UsoTask_stop_common_StopWatch(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EE7E8);
}

uint64_t type metadata accessor for UsoTask_show_common_StopWatch(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EE300);
}

uint64_t type metadata accessor for UsoTask_reset_common_StopWatch(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0728);
}

uint64_t type metadata accessor for UsoTask_start_common_StopWatch(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0930);
}

uint64_t type metadata accessor for UsoTask_create_common_SiriAlias(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E2EA8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_OffsetDateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FF8C0);
}

uint64_t type metadata accessor for UsoTask_read_common_OffsetDateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FA3A8);
}

uint64_t type metadata accessor for UsoTask_convert_common_OffsetDateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF800E80);
}

uint64_t type metadata accessor for UsoTask_request_common_OffsetDateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801C00);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_OffsetDateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8061D8);
}

uint64_t type metadata accessor for UsoTask_summarise_common_OffsetDateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803F60);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Window(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EB6D8);
}

uint64_t type metadata accessor for UsoTask_open_common_Window(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6DB0);
}

uint64_t type metadata accessor for UsoTask_close_common_Window(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E7A98);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Number(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EB4F0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Quantifier(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F4968);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Size(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6AD0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Translation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F75D8);
}

uint64_t type metadata accessor for UsoTask_read_common_Translation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8147F0);
}

uint64_t type metadata accessor for UsoTask_stopTranslation_common_Translation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8148D8);
}

uint64_t type metadata accessor for UsoTask_startTranslation_common_Translation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8149D8);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Translation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8006C8);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Translation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814AE0);
}

uint64_t type metadata accessor for UsoTask_translate_common_Translation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8008A8);
}

uint64_t type metadata accessor for UsoTask_discoverCapabilities_common_Translation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814BD0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Locale(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EB3F8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_DateType(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EF580);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_OffsetTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F4778);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2550);
}

uint64_t type metadata accessor for UsoTask_follow_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F1F98);
}

uint64_t type metadata accessor for UsoTask_shuffle_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5C40);
}

uint64_t type metadata accessor for UsoTask_restart_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5810);
}

uint64_t type metadata accessor for UsoTask_unhide_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814CC0);
}

uint64_t type metadata accessor for UsoTask_subscribe_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FA9D0);
}

uint64_t type metadata accessor for UsoTask_pause_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EFE48);
}

uint64_t type metadata accessor for UsoTask_stop_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EE608);
}

uint64_t type metadata accessor for UsoTask_repeatAudio_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FFDA8);
}

uint64_t type metadata accessor for UsoTask_start_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0838);
}

uint64_t type metadata accessor for UsoTask_summarise_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FABD8);
}

uint64_t type metadata accessor for UsoTask_update_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3828);
}

uint64_t type metadata accessor for UsoTask_hide_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814DC0);
}

uint64_t type metadata accessor for UsoTask_seekTo_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3130);
}

uint64_t type metadata accessor for UsoTask_read_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814EC8);
}

uint64_t type metadata accessor for UsoTask_resume_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2F38);
}

uint64_t type metadata accessor for UsoTask_seekBackward_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801E08);
}

uint64_t type metadata accessor for UsoTask_skipBackward_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802230);
}

uint64_t type metadata accessor for UsoTask_transfer_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8940);
}

uint64_t type metadata accessor for UsoTask_play_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EDB38);
}

uint64_t type metadata accessor for UsoTask_seekForward_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8002C8);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803680);
}

uint64_t type metadata accessor for UsoTask_enableSetting_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802B60);
}

uint64_t type metadata accessor for UsoTask_unlike_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3520);
}

uint64_t type metadata accessor for UsoTask_request_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F54F8);
}

uint64_t type metadata accessor for UsoTask_repeat_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2C30);
}

uint64_t type metadata accessor for UsoTask_skipForward_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8005D0);
}

uint64_t type metadata accessor for UsoTask_disableSetting_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803790);
}

uint64_t type metadata accessor for UsoTask_like_common_MediaItem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ED0A0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Meridiem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EF868);
}

uint64_t type metadata accessor for UsoTask_noVerb_appleNotebook_NotebookAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3E00);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_QRCode(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF814FC8);
}

uint64_t type metadata accessor for UsoTask_scan_common_QRCode(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8150B0);
}

uint64_t type metadata accessor for UsoTask_show_common_QRCode(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815198);
}

uint64_t type metadata accessor for UsoTask_noVerb_appleEmail_EmailAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3380);
}

uint64_t type metadata accessor for UsoTask_enable_common_UserProfile(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6DF8);
}

uint64_t type metadata accessor for UsoTask_open_common_UserProfile(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2920);
}

uint64_t type metadata accessor for UsoTask_summarise_common_UserProfile(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8007B8);
}

uint64_t type metadata accessor for UsoTask_disable_common_UserProfile(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9540);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_UserProfile(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804E18);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_UserProfile(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F76D0);
}

uint64_t type metadata accessor for UsoTask_previous_common_Communication(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801AF8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Communication(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FCB60);
}

uint64_t type metadata accessor for UsoTask_request_common_Communication(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FFFB8);
}

uint64_t type metadata accessor for UsoTask_skip_common_Communication(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8660);
}

uint64_t type metadata accessor for UsoTask_delete_common_Communication(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FC398);
}

uint64_t type metadata accessor for UsoTask_continue_common_Communication(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF800D70);
}

uint64_t type metadata accessor for UsoTask_stop_common_Communication(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8758);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Communication(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803020);
}

uint64_t type metadata accessor for UsoTask_update_common_Communication(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815288);
}

uint64_t type metadata accessor for UsoTask_read_common_Communication(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F7B90);
}

uint64_t type metadata accessor for UsoTask_show_common_DigitalFace(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815388);
}

uint64_t type metadata accessor for UsoTask_set_common_DigitalFace(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815470);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_DigitalFace(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815568);
}

uint64_t type metadata accessor for UsoTask_skipBackward_common_DigitalFace(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815650);
}

uint64_t type metadata accessor for UsoTask_skipForward_common_DigitalFace(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815750);
}

uint64_t type metadata accessor for UsoTask_noVerb_appleNotification_NotificationAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E4880);
}

uint64_t type metadata accessor for UsoTask_ping_common_Device(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E71A8);
}

uint64_t type metadata accessor for UsoTask_find_common_Device(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E67F0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Device(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EB308);
}

uint64_t type metadata accessor for UsoTask_tell_common_HolidayPhrase(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815850);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_HolidayPhrase(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815938);
}

uint64_t type metadata accessor for UsoTask_repeat_common_Announcement(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FA4C0);
}

uint64_t type metadata accessor for UsoTask_send_common_Announcement(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5A10);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Announcement(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9748);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Announcement(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802320);
}

uint64_t type metadata accessor for UsoTask_reply_common_Announcement(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8068);
}

uint64_t type metadata accessor for UsoTask_skipBackward_common_Announcement(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804B20);
}

uint64_t type metadata accessor for UsoTask_stop_common_Announcement(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5F40);
}

uint64_t type metadata accessor for UsoTask_skipForward_common_Announcement(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803D78);
}

uint64_t type metadata accessor for UsoTask_play_common_Announcement(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F4E28);
}

uint64_t type metadata accessor for UsoTask_perform_common_SiriSocialAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815A20);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SiriSocialAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815B08);
}

uint64_t type metadata accessor for UsoTask_summarise_common_SiriSocialAction(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815BF0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_GeographicArea(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FF6D8);
}

uint64_t type metadata accessor for UsoTask_getPerson_common_GeographicArea(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815CE0);
}

uint64_t type metadata accessor for UsoTask_create_common_Agent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E7B88);
}

uint64_t type metadata accessor for UsoTask_delete_common_Agent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8230);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Agent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FB628);
}

uint64_t type metadata accessor for UsoTask_read_common_Agent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5B60);
}

uint64_t type metadata accessor for UsoTask_update_common_Agent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EA4B8);
}

uint64_t type metadata accessor for UsoTask_request_common_Agent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EB9D0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Agent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0A28);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Agent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E8BA0);
}

uint64_t type metadata accessor for UsoTask_getPerson_common_MicroGeographicArea(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815DC8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_MicroGeographicArea(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF805000);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonStock_StockType(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3848);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_UserPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815EB0);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_UserPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF815F98);
}

uint64_t type metadata accessor for UsoTask_request_common_UserPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816080);
}

uint64_t type metadata accessor for UsoTask_deny_common_UserPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816178);
}

uint64_t type metadata accessor for UsoTask_state_common_UserPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816260);
}

uint64_t type metadata accessor for UsoTask_summarise_common_UserPossession(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816348);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_CalendarEra(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F7100);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Time12HourClock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801908);
}

uint64_t type metadata accessor for UsoTask_noVerb_appleArithmetic_ArithmeticAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E44A0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_PaymentAccount(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804058);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_PaymentAccount(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8062D0);
}

uint64_t type metadata accessor for UsoTask_request_common_PaymentAccount(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801D08);
}

uint64_t type metadata accessor for UsoTask_submitApplication_common_PaymentAccount(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF807100);
}

uint64_t type metadata accessor for UsoTask_summariseHighest_common_PaymentAccount(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF806C68);
}

uint64_t type metadata accessor for UsoTask_summariseLowest_common_PaymentAccount(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF806A78);
}

uint64_t sub_1C2FE77E0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PaymentAccount(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FF9B8);
}

uint64_t type metadata accessor for UsoTask_create_common_PaymentAccount(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816430);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonWriting_WritingAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E40D8);
}

uint64_t type metadata accessor for UsoTask_find_common_Arithmetic(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EEFC0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Arithmetic(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F40D8);
}

uint64_t type metadata accessor for UsoTask_unlike_common_UserFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816520);
}

uint64_t type metadata accessor for UsoTask_like_common_UserFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816608);
}

uint64_t type metadata accessor for UsoTask_checkLike_common_UserFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8166F0);
}

uint64_t type metadata accessor for UsoTask_guess_common_UserFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8167D8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_UserFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8168D0);
}

uint64_t type metadata accessor for UsoTask_checkUnlike_common_UserFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8169B8);
}

uint64_t type metadata accessor for UsoTask_request_common_UserFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816AA0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_SiriFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816B98);
}

uint64_t type metadata accessor for UsoTask_unlike_common_SiriFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816C80);
}

uint64_t type metadata accessor for UsoTask_like_common_SiriFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816D68);
}

uint64_t type metadata accessor for UsoTask_checkLike_common_SiriFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816E50);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SiriFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF816F38);
}

uint64_t type metadata accessor for UsoTask_request_common_SiriFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF817020);
}

uint64_t type metadata accessor for UsoTask_checkUnlike_common_SiriFavorite(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF817118);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Time24HourClock(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801A00);
}

uint64_t type metadata accessor for UsoTask_uninstall_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EC4E8);
}

uint64_t type metadata accessor for UsoTask_delete_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF817200);
}

uint64_t type metadata accessor for UsoTask_authorise_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8172E8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5588);
}

uint64_t type metadata accessor for UsoTask_updateApp_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3190);
}

uint64_t type metadata accessor for UsoTask_install_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E68E8);
}

uint64_t type metadata accessor for UsoTask_discoverCapabilities_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803880);
}

uint64_t type metadata accessor for UsoTask_deauthorise_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8173E8);
}

uint64_t type metadata accessor for UsoTask_summarise_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EC3F8);
}

uint64_t type metadata accessor for UsoTask_offload_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8174F0);
}

uint64_t type metadata accessor for UsoTask_quit_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8175D8);
}

uint64_t type metadata accessor for UsoTask_restart_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E76A0);
}

uint64_t type metadata accessor for UsoTask_close_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E51A8);
}

uint64_t type metadata accessor for UsoTask_open_common_App(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E4E40);
}

uint64_t type metadata accessor for UsoTask_noVerb_appleTimer_TimerAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3478);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonNotebook_NotebookAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E43B0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Integer(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ED378);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_ListPosition(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9B10);
}

uint64_t type metadata accessor for UsoTask_noVerb_applePhoneCall_PhoneCallAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E41C8);
}

uint64_t type metadata accessor for UsoTask_skipBackward_common_Calendar(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8176C0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Calendar(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8177C0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Calendar(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8178A8);
}

uint64_t type metadata accessor for UsoTask_skipForward_common_Calendar(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF817990);
}

uint64_t type metadata accessor for UsoTask_update_common_HealthLog(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3720);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_HealthLog(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF803568);
}

uint64_t type metadata accessor for UsoTask_delete_common_HealthLog(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F1CB0);
}

uint64_t type metadata accessor for UsoTask_create_common_HealthLog(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F1AC8);
}

uint64_t type metadata accessor for UsoTask_open_common_HealthLog(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EDA20);
}

uint64_t type metadata accessor for UsoTask_requestLog_common_HealthLog(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E4788);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_HealthLog(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2458);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonEmail_EmailAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3660);
}

uint64_t type metadata accessor for UsoTask_delete_common_Notification(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9268);
}

uint64_t type metadata accessor for UsoTask_repeat_common_Notification(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FA5B0);
}

uint64_t type metadata accessor for UsoTask_read_common_Notification(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5308);
}

uint64_t type metadata accessor for UsoTask_previous_common_Notification(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FFBA0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Notification(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8025F8);
}

uint64_t type metadata accessor for UsoTask_open_common_Notification(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F4D30);
}

uint64_t type metadata accessor for UsoTask_skip_common_Notification(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5E48);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Notification(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9DE0);
}

uint64_t type metadata accessor for UsoTask_request_common_Notification(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FDAB8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_MeasurementComponent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8058A0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_SiriProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF817A98);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_SiriProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF817B80);
}

uint64_t type metadata accessor for UsoTask_state_common_SiriProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF817C68);
}

uint64_t type metadata accessor for UsoTask_summarise_common_SiriProperty(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF817D50);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PaymentAccountType(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804808);
}

uint64_t type metadata accessor for UsoTask_hide_common_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF817E40);
}

uint64_t type metadata accessor for UsoTask_resume_common_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF817F40);
}

uint64_t type metadata accessor for UsoTask_skipBackward_common_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818040);
}

uint64_t type metadata accessor for UsoTask_skipForward_common_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818140);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818240);
}

uint64_t type metadata accessor for UsoTask_unhide_common_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818328);
}

uint64_t type metadata accessor for UsoTask_stop_common_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818428);
}

uint64_t type metadata accessor for UsoTask_play_common_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818528);
}

uint64_t type metadata accessor for UsoTask_pause_common_PhotoMemory(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818628);
}

uint64_t type metadata accessor for UsoTask_goBack_common_NavigationMenu(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FEE28);
}

uint64_t type metadata accessor for UsoTask_goHome_common_NavigationMenu(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FEF20);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_NavigationMenu(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FF7C8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Medication(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818730);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_DayOfWeek(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F2368);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Currency(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EF3A0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_AttachmentType(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FF128);
}

uint64_t type metadata accessor for UsoTask_open_common_Website(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818820);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Website(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818908);
}

uint64_t type metadata accessor for UsoTask_create_common_JournalEntry(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8189F0);
}

uint64_t type metadata accessor for UsoTask_delete_common_JournalEntry(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818AD8);
}

uint64_t type metadata accessor for UsoTask_summarise_common_JournalEntry(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818BC0);
}

uint64_t type metadata accessor for UsoTask_update_common_JournalEntry(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818CA8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_JournalEntry(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF818DA0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Decimal(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7ED288);
}

uint64_t type metadata accessor for UsoTask_action_common_SocialConversation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF804350);
}

uint64_t type metadata accessor for UsoTask_update_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EC5E8);
}

uint64_t type metadata accessor for UsoTask_read_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E72A0);
}

uint64_t type metadata accessor for UsoTask_setIdentity_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8458);
}

uint64_t type metadata accessor for UsoTask_getLocation_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F6EF0);
}

uint64_t type metadata accessor for UsoTask_request_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EE108);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F3340);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FEA28);
}

uint64_t type metadata accessor for UsoTask_pronounceName_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FD4E0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EB5E8);
}

uint64_t type metadata accessor for UsoTask_checkIdentity_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FBDD0);
}

uint64_t type metadata accessor for UsoTask_create_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EAD48);
}

uint64_t type metadata accessor for UsoTask_delete_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EAF30);
}

uint64_t type metadata accessor for UsoTask_checkLocation_common_Person(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FBED8);
}

uint64_t sub_1C2FE8034()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Similarity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F4A58);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_HomeEntity(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F44A0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_CalendarSystem(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FF218);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_KnowledgeQuestionPersonAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF807840);
}

uint64_t type metadata accessor for UsoTask_enable_common_RadioStation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9658);
}

uint64_t type metadata accessor for UsoTask_play_common_RadioStation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F4F38);
}

uint64_t type metadata accessor for UsoTask_disable_common_RadioStation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FC788);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_RadioStation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9FC8);
}

uint64_t type metadata accessor for UsoTask_scan_common_RadioStation(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5920);
}

uint64_t sub_1C2FE811C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UsoTask_noVerb_commonApp_AppListingAttribute(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E2FA0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Word(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6CB8);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_Group(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FBA00);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Group(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E9158);
}

uint64_t type metadata accessor for UsoTask_create_common_Group(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E7E60);
}

uint64_t type metadata accessor for UsoTask_read_common_Group(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E5E38);
}

uint64_t type metadata accessor for UsoTask_summarise_common_Group(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F0EF0);
}

uint64_t type metadata accessor for UsoTask_delete_common_Group(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E85F8);
}

uint64_t type metadata accessor for UsoTask_update_common_Group(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EA7C0);
}

uint64_t type metadata accessor for UsoTask_request_common_Group(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7EBDE8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_TemperatureUnit(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF801810);
}

uint64_t type metadata accessor for UsoTask_noVerb_commonStock_StockChangeState(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E3758);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Attachment(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F41D0);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_PostalAddress(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FD2F8);
}

uint64_t type metadata accessor for UsoTask_noVerb_common_Time(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7E6BC0);
}

uint64_t type metadata accessor for UsoTask_summarise_common_NotebookList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF802508);
}

uint64_t type metadata accessor for UsoTask_checkExistence_common_NotebookList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8055D0);
}

uint64_t type metadata accessor for UsoTask_read_common_NotebookList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F5218);
}

uint64_t type metadata accessor for UsoTask_update_common_NotebookList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FB0C0);
}

uint64_t type metadata accessor for UsoTask_request_common_NotebookList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7FD9B8);
}

uint64_t sub_1C2FE82E0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UsoTask_noVerb_common_NotebookList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9CF0);
}

uint64_t type metadata accessor for UsoTask_delete_common_NotebookList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F9178);
}

uint64_t type metadata accessor for UsoTask_create_common_NotebookList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7F8DA0);
}

uint64_t sub_1C2FE8350(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C2FE8384()
{
  return swift_initClassMetadata2();
}

ValueMetadata *type metadata accessor for UsoTask_CodegenConverter()
{
  return &type metadata for UsoTask_CodegenConverter;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3BD1B34]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1C3BD1AF8](a1, v6, a5);
}

unint64_t IdentifierNamespace.rawValue.getter()
{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unsigned int v3;

  v1 = v0[1];
  v2 = 0x64695F6D657469;
  switch(v1)
  {
    case 0uLL:
      break;
    case 1uLL:
      v2 = 0xD000000000000014;
      break;
    case 2uLL:
      v2 = 0x6369746E616D6573;
      break;
    case 3uLL:
      v2 = 0x54746361746E6F63;
      break;
    case 4uLL:
      v2 = 0xD000000000000015;
      break;
    case 5uLL:
    case 0x12uLL:
    case 0x21uLL:
      v2 = 0xD000000000000012;
      break;
    case 6uLL:
      v2 = 0xD000000000000014;
      break;
    case 7uLL:
      v2 = 0x6D754E656E6F6870;
      break;
    case 8uLL:
      v3 = 1315991649;
      goto LABEL_22;
    case 9uLL:
      v2 = 0x69746E655F707061;
      break;
    case 0xAuLL:
      v2 = 0x69746E655F707061;
      break;
    case 0xBuLL:
      v2 = 0x746365735F707061;
      break;
    case 0xCuLL:
      v2 = 0x747465735F707061;
      break;
    case 0xDuLL:
      v2 = 0x63616465526F7375;
      break;
    case 0xEuLL:
      v2 = 0x614E746E65746E69;
      break;
    case 0xFuLL:
      v2 = 1684632935;
      break;
    case 0x10uLL:
      v2 = 0x656C626D65736E65;
      break;
    case 0x11uLL:
      v2 = 0xD000000000000011;
      break;
    case 0x13uLL:
      v2 = 0xD000000000000017;
      break;
    case 0x14uLL:
      v2 = 0xD000000000000018;
      break;
    case 0x15uLL:
      v3 = 1316118851;
LABEL_22:
      v2 = v3 | 0x656D6100000000;
      break;
    case 0x16uLL:
      v2 = 0x7355646572616873;
      break;
    case 0x17uLL:
      v2 = 0x646E496E656B6F74;
      break;
    case 0x18uLL:
      v2 = 0x6E695F686374616DLL;
      break;
    case 0x19uLL:
      v2 = 0xD000000000000015;
      break;
    case 0x1AuLL:
      v2 = 0xD000000000000010;
      break;
    case 0x1BuLL:
      v2 = 0xD000000000000010;
      break;
    case 0x1CuLL:
      v2 = 0xD000000000000013;
      break;
    case 0x1DuLL:
      v2 = 0xD000000000000014;
      break;
    case 0x1EuLL:
      v2 = 0x6E6F697469736F70;
      break;
    case 0x1FuLL:
      v2 = 0x6974756C6F736572;
      break;
    case 0x20uLL:
      v2 = 0x796C6E4F61647544;
      break;
    case 0x22uLL:
      v2 = 0x6574736567677573;
      break;
    case 0x23uLL:
      v2 = 0x74756374726F6873;
      break;
    default:
      v2 = *v0;
      break;
  }
  sub_1C2FE97E8(*v0, v1);
  return v2;
}

uint64_t sub_1C2FE97E8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x24)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1C2FE97FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = a1 == 0x64695F6D657469 && a2 == 0xE700000000000000;
  if (v4 || (v5 = a2, v6 = a1, (sub_1C3379184() & 1) != 0))
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 0;
  }
  else if (v6 == 0xD000000000000014 && v5 == 0x80000001C33F0970 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 1;
  }
  else if (v6 == 0x6369746E616D6573 && v5 == 0xEE0065756C61765FLL || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 2;
  }
  else if (v6 == 0x54746361746E6F63 && v5 == 0xEB00000000657079 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 3;
  }
  else if (v6 == 0xD000000000000015 && v5 == 0x80000001C33F0950 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 4;
  }
  else if (v6 == 0xD000000000000012 && v5 == 0x80000001C33DD1A0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 5;
  }
  else if (v6 == 0xD000000000000014 && v5 == 0x80000001C33F0930 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 6;
  }
  else if (v6 == 0x6D754E656E6F6870 && v5 == 0xEB00000000726562 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 7;
  }
  else if (v6 == 0x656D614E707061 && v5 == 0xE700000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 8;
  }
  else if (v6 == 0x69746E655F707061 && v5 == 0xEA00000000007974 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 9;
  }
  else if (v6 == 0x69746E655F707061 && v5 == 0xEF657079745F7974 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 10;
  }
  else if (v6 == 0x746365735F707061 && v5 == 0xEB000000006E6F69 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 11;
  }
  else if (v6 == 0x747465735F707061 && v5 == 0xEB00000000676E69 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 12;
  }
  else if (v6 == 0x63616465526F7375 && v5 == 0xEE0064496E6F6974 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 13;
  }
  else if (v6 == 0x614E746E65746E69 && v5 == 0xEA0000000000656DLL || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 14;
  }
  else if (v6 == 1684632935 && v5 == 0xE400000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 15;
  }
  else if (v6 == 0x656C626D65736E65 && v5 == 0xE800000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 16;
  }
  else if (v6 == 0xD000000000000011 && v5 == 0x80000001C33F0910 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 17;
  }
  else if (v6 == 0xD000000000000012 && v5 == 0x80000001C33F08F0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 18;
  }
  else if (v6 == 0xD000000000000017 && v5 == 0x80000001C33F08D0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 19;
  }
  else if (v6 == 0xD000000000000018 && v5 == 0x80000001C33F08B0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 20;
  }
  else if (v6 == 0x656D614E726143 && v5 == 0xE700000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 21;
  }
  else if (v6 == 0x7355646572616873 && v5 == 0xEC00000064497265 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 22;
  }
  else if (v6 == 0x646E496E656B6F74 && v5 == 0xEA00000000007865 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 23;
  }
  else if (v6 == 0x6E695F686374616DLL && v5 == 0xEA00000000006F66 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 24;
  }
  else if (v6 == 0xD000000000000015 && v5 == 0x80000001C33F0890 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 25;
  }
  else if (v6 == 0xD000000000000010 && v5 == 0x80000001C33F0870 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 26;
  }
  else if (v6 == 0xD000000000000010 && v5 == 0x80000001C33F0850 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 27;
  }
  else if (v6 == 0xD000000000000013 && v5 == 0x80000001C33F0830 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 28;
  }
  else if (v6 == 0xD000000000000014 && v5 == 0x80000001C33F0810 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 29;
  }
  else if (v6 == 0x6E6F697469736F70 && v5 == 0xEB0000000064695FLL || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 30;
  }
  else if (v6 == 0x6974756C6F736572 && v5 == 0xEF657079745F6E6FLL || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 31;
  }
  else if (v6 == 0x796C6E4F61647544 && v5 == 0xE800000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 32;
  }
  else if (v6 == 0xD000000000000012 && v5 == 0x80000001C33F07F0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 33;
  }
  else if (v6 == 0x6574736567677573 && v5 == 0xEF64496D61644164 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 34;
  }
  else if (v6 == 0x74756374726F6873 && v5 == 0xEF676E6974746553 || (result = sub_1C3379184(), (result & 1) != 0))
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 35;
  }
  *a3 = v6;
  a3[1] = v5;
  return result;
}

unint64_t IdentifierAppBundle.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *v0;
  v2 = v0[1];
  v3 = 0x746163696C707041;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      v3 = 0x73746361746E6F43;
      break;
    case 2uLL:
      v3 = 0x794D646E6946;
      break;
    case 3uLL:
      v3 = 0x74694B656D6F48;
      break;
    case 4uLL:
      v3 = 0x616C50616964654DLL;
      break;
    case 5uLL:
      v3 = 0x736567617373654DLL;
      break;
    case 6uLL:
      v3 = 0x736F746F6850;
      break;
    case 7uLL:
      v3 = 0x7265646E696D6552;
      break;
    case 8uLL:
      v3 = 0x74756374726F6853;
      break;
    case 9uLL:
      v3 = 0xD000000000000013;
      break;
    case 0xAuLL:
      v3 = 0x626D654D656D6F48;
      break;
    case 0xBuLL:
      v3 = 0x7374736163646F50;
      break;
    case 0xCuLL:
      v3 = 0x7373656E746946;
      break;
    case 0xDuLL:
      v3 = 0x6472616F6279654BLL;
      break;
    case 0xEuLL:
      v3 = 0x74756F5265726F43;
      break;
    case 0xFuLL:
      v3 = 0x7469617274726F50;
      break;
    case 0x10uLL:
      v3 = 0x7261646E656C6143;
      break;
    case 0x11uLL:
      v3 = 0x6F63634172657355;
      break;
    case 0x12uLL:
      v3 = 0x79616C50726143;
      break;
    case 0x13uLL:
    case 0x15uLL:
    case 0x16uLL:
      v3 = 0xD000000000000014;
      break;
    case 0x14uLL:
      v3 = 0xD00000000000001CLL;
      break;
    case 0x17uLL:
      v3 = 0xD000000000000015;
      break;
    case 0x18uLL:
      v3 = 0x736E656B6F54;
      break;
    default:
      v3 = v1;
      break;
  }
  sub_1C2FEC478(v1, v2);
  return v3;
}

uint64_t sub_1C2FEA9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = a1 == 0x746163696C707041 && a2 == 0xEC000000736E6F69;
  if (v4 || (v5 = a2, v6 = a1, (sub_1C3379184() & 1) != 0))
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 0;
  }
  else if (v6 == 0x73746361746E6F43 && v5 == 0xE800000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 1;
  }
  else if (v6 == 0x794D646E6946 && v5 == 0xE600000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 2;
  }
  else if (v6 == 0x74694B656D6F48 && v5 == 0xE700000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 3;
  }
  else if (v6 == 0x616C50616964654DLL && v5 == 0xEB00000000726579 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 4;
  }
  else if (v6 == 0x736567617373654DLL && v5 == 0xE800000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 5;
  }
  else if (v6 == 0x736F746F6850 && v5 == 0xE600000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 6;
  }
  else if (v6 == 0x7265646E696D6552 && v5 == 0xE900000000000073 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 7;
  }
  else if (v6 == 0x74756374726F6853 && v5 == 0xE900000000000073 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 8;
  }
  else if (v6 == 0xD000000000000013 && v5 == 0x80000001C33F0A30 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 9;
  }
  else if (v6 == 0x626D654D656D6F48 && v5 == 0xEE006F666E497265 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 10;
  }
  else if (v6 == 0x7374736163646F50 && v5 == 0xE800000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 11;
  }
  else if (v6 == 0x7373656E746946 && v5 == 0xE700000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 12;
  }
  else if (v6 == 0x6472616F6279654BLL && v5 == 0xE800000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 13;
  }
  else if (v6 == 0x74756F5265726F43 && v5 == 0xEB00000000656E69 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 14;
  }
  else if (v6 == 0x7469617274726F50 && v5 == 0xE800000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 15;
  }
  else if (v6 == 0x7261646E656C6143 && v5 == 0xE800000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 16;
  }
  else if (v6 == 0x6F63634172657355 && v5 == 0xEB00000000746E75 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 17;
  }
  else if (v6 == 0x79616C50726143 && v5 == 0xE700000000000000 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 18;
  }
  else if (v6 == 0xD000000000000014 && v5 == 0x80000001C33F0A10 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 19;
  }
  else if (v6 == 0xD00000000000001CLL && v5 == 0x80000001C33F09F0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 20;
  }
  else if (v6 == 0xD000000000000014 && v5 == 0x80000001C33F09D0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 21;
  }
  else if (v6 == 0xD000000000000014 && v5 == 0x80000001C33F09B0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 22;
  }
  else if (v6 == 0xD000000000000015 && v5 == 0x80000001C33F0990 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 23;
  }
  else if (v6 == 0x736E656B6F54 && v5 == 0xE600000000000000 || (result = sub_1C3379184(), (result & 1) != 0))
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 24;
  }
  *a3 = v6;
  a3[1] = v5;
  return result;
}

unint64_t IdentifierValue.rawValue.getter()
{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;

  v1 = v0[1];
  v2 = 0x636E656772656D65;
  switch(v1)
  {
    case 0uLL:
      break;
    case 1uLL:
    case 4uLL:
    case 5uLL:
    case 0xAuLL:
      v2 = 0xD000000000000012;
      break;
    case 2uLL:
      v2 = 0xD000000000000011;
      break;
    case 3uLL:
      v2 = 0xD00000000000001BLL;
      break;
    case 6uLL:
      v2 = 0xD000000000000013;
      break;
    case 7uLL:
      v2 = 0xD00000000000001ALL;
      break;
    case 8uLL:
      v2 = 0xD000000000000019;
      break;
    case 9uLL:
      v2 = 0xD000000000000015;
      break;
    case 0xBuLL:
      v2 = 0xD000000000000015;
      break;
    case 0xCuLL:
      v2 = 0xD000000000000010;
      break;
    case 0xDuLL:
      v2 = 0x726F68736F747561;
      break;
    case 0xEuLL:
      v2 = 0x796C6E4F61647544;
      break;
    default:
      v2 = *v0;
      break;
  }
  sub_1C2FEC48C(*v0, v1);
  return v2;
}

uint64_t sub_1C2FEB634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = a1 == 0x636E656772656D65 && a2 == 0xEF7265626D754E79;
  if (v4 || (v5 = a2, v6 = a1, (sub_1C3379184() & 1) != 0))
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 0;
  }
  else if (v6 == 0xD000000000000012 && v5 == 0x80000001C33F0BB0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 1;
  }
  else if (v6 == 0xD000000000000011 && v5 == 0x80000001C33F0B90 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 2;
  }
  else if (v6 == 0xD00000000000001BLL && v5 == 0x80000001C33F0B70 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 3;
  }
  else if (v6 == 0xD000000000000012 && v5 == 0x80000001C33F0B50 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 4;
  }
  else if (v6 == 0xD000000000000012 && v5 == 0x80000001C33F0B30 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 5;
  }
  else if (v6 == 0xD000000000000013 && v5 == 0x80000001C33F0B10 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 6;
  }
  else if (v6 == 0xD00000000000001ALL && v5 == 0x80000001C33F0AF0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 7;
  }
  else if (v6 == 0xD000000000000019 && v5 == 0x80000001C33F0AD0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 8;
  }
  else if (v6 == 0xD000000000000015 && v5 == 0x80000001C33F0AB0 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 9;
  }
  else if (v6 == 0xD000000000000012 && v5 == 0x80000001C33F0A90 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 10;
  }
  else if (v6 == 0xD000000000000015 && v5 == 0x80000001C33F0A70 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 11;
  }
  else if (v6 == 0xD000000000000010 && v5 == 0x80000001C33F0A50 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 12;
  }
  else if (v6 == 0x726F68736F747561 && v5 == 0xEF2F2F3A74756374 || (sub_1C3379184() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 13;
  }
  else if (v6 == 0x796C6E4F61647544 && v5 == 0xE800000000000000 || (result = sub_1C3379184(), (result & 1) != 0))
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 14;
  }
  *a3 = v6;
  a3[1] = v5;
  return result;
}

uint64_t _s12SiriOntology15IdentifierValueO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5)
        goto LABEL_38;
      v3 = 0;
      v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1)
        goto LABEL_38;
      v3 = 1;
      v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2)
        goto LABEL_38;
      v6 = 1;
      v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3)
        goto LABEL_38;
      v6 = 1;
      v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4)
        goto LABEL_38;
      v6 = 1;
      v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5)
        goto LABEL_38;
      v6 = 1;
      v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6)
        goto LABEL_38;
      v6 = 1;
      v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7)
        goto LABEL_38;
      v6 = 1;
      v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8)
        goto LABEL_38;
      v6 = 1;
      v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9)
        goto LABEL_38;
      v6 = 1;
      v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10)
        goto LABEL_38;
      v6 = 1;
      v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11)
        goto LABEL_38;
      v6 = 1;
      v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12)
        goto LABEL_38;
      v6 = 1;
      v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13)
        goto LABEL_38;
      v6 = 1;
      v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14)
        goto LABEL_38;
      v6 = 1;
      v3 = 14;
      break;
    default:
      if (v5 < 0xF)
      {
LABEL_38:
        v6 = 0;
      }
      else if (v2 == v4 && v3 == v5)
      {
        v6 = 1;
      }
      else
      {
        v6 = sub_1C3379184();
      }
      sub_1C2FEC48C(v4, v5);
      sub_1C2FEC48C(v2, v3);
      break;
  }
  sub_1C2FEC880(v2, v3);
  sub_1C2FEC880(v4, v5);
  return v6 & 1;
}

uint64_t _s12SiriOntology19IdentifierAppBundleO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5)
        goto LABEL_53;
      v3 = 0;
      v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1)
        goto LABEL_53;
      v3 = 1;
      v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2)
        goto LABEL_53;
      v6 = 1;
      v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3)
        goto LABEL_53;
      v6 = 1;
      v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4)
        goto LABEL_53;
      v6 = 1;
      v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5)
        goto LABEL_53;
      v6 = 1;
      v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6)
        goto LABEL_53;
      v6 = 1;
      v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7)
        goto LABEL_53;
      v6 = 1;
      v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8)
        goto LABEL_53;
      v6 = 1;
      v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9)
        goto LABEL_53;
      v6 = 1;
      v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10)
        goto LABEL_53;
      v6 = 1;
      v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11)
        goto LABEL_53;
      v6 = 1;
      v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12)
        goto LABEL_53;
      v6 = 1;
      v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13)
        goto LABEL_53;
      v6 = 1;
      v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14)
        goto LABEL_53;
      v6 = 1;
      v3 = 14;
      break;
    case 0xFuLL:
      if (v5 != 15)
        goto LABEL_53;
      v6 = 1;
      v3 = 15;
      break;
    case 0x10uLL:
      if (v5 != 16)
        goto LABEL_53;
      v6 = 1;
      v3 = 16;
      break;
    case 0x11uLL:
      if (v5 != 17)
        goto LABEL_53;
      v6 = 1;
      v3 = 17;
      break;
    case 0x12uLL:
      if (v5 != 18)
        goto LABEL_53;
      v6 = 1;
      v3 = 18;
      break;
    case 0x13uLL:
      if (v5 != 19)
        goto LABEL_53;
      v6 = 1;
      v3 = 19;
      break;
    case 0x14uLL:
      if (v5 != 20)
        goto LABEL_53;
      v6 = 1;
      v3 = 20;
      break;
    case 0x15uLL:
      if (v5 != 21)
        goto LABEL_53;
      v6 = 1;
      v3 = 21;
      break;
    case 0x16uLL:
      if (v5 != 22)
        goto LABEL_53;
      v6 = 1;
      v3 = 22;
      break;
    case 0x17uLL:
      if (v5 != 23)
        goto LABEL_53;
      v6 = 1;
      v3 = 23;
      break;
    case 0x18uLL:
      if (v5 != 24)
        goto LABEL_53;
      v6 = 1;
      v3 = 24;
      break;
    default:
      if (v5 >= 0x19)
      {
        if (v2 == v4 && v3 == v5)
          v6 = 1;
        else
          v6 = sub_1C3379184();
      }
      else
      {
LABEL_53:
        v6 = 0;
      }
      sub_1C2FEC478(v4, v5);
      sub_1C2FEC478(v2, v3);
      break;
  }
  sub_1C2FEC894(v2, v3);
  sub_1C2FEC894(v4, v5);
  return v6 & 1;
}

uint64_t _s12SiriOntology19IdentifierNamespaceO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5)
        goto LABEL_75;
      v3 = 0;
      v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1)
        goto LABEL_75;
      v3 = 1;
      v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2)
        goto LABEL_75;
      v6 = 1;
      v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3)
        goto LABEL_75;
      v6 = 1;
      v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4)
        goto LABEL_75;
      v6 = 1;
      v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5)
        goto LABEL_75;
      v6 = 1;
      v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6)
        goto LABEL_75;
      v6 = 1;
      v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7)
        goto LABEL_75;
      v6 = 1;
      v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8)
        goto LABEL_75;
      v6 = 1;
      v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9)
        goto LABEL_75;
      v6 = 1;
      v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10)
        goto LABEL_75;
      v6 = 1;
      v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11)
        goto LABEL_75;
      v6 = 1;
      v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12)
        goto LABEL_75;
      v6 = 1;
      v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13)
        goto LABEL_75;
      v6 = 1;
      v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14)
        goto LABEL_75;
      v6 = 1;
      v3 = 14;
      break;
    case 0xFuLL:
      if (v5 != 15)
        goto LABEL_75;
      v6 = 1;
      v3 = 15;
      break;
    case 0x10uLL:
      if (v5 != 16)
        goto LABEL_75;
      v6 = 1;
      v3 = 16;
      break;
    case 0x11uLL:
      if (v5 != 17)
        goto LABEL_75;
      v6 = 1;
      v3 = 17;
      break;
    case 0x12uLL:
      if (v5 != 18)
        goto LABEL_75;
      v6 = 1;
      v3 = 18;
      break;
    case 0x13uLL:
      if (v5 != 19)
        goto LABEL_75;
      v6 = 1;
      v3 = 19;
      break;
    case 0x14uLL:
      if (v5 != 20)
        goto LABEL_75;
      v6 = 1;
      v3 = 20;
      break;
    case 0x15uLL:
      if (v5 != 21)
        goto LABEL_75;
      v6 = 1;
      v3 = 21;
      break;
    case 0x16uLL:
      if (v5 != 22)
        goto LABEL_75;
      v6 = 1;
      v3 = 22;
      break;
    case 0x17uLL:
      if (v5 != 23)
        goto LABEL_75;
      v6 = 1;
      v3 = 23;
      break;
    case 0x18uLL:
      if (v5 != 24)
        goto LABEL_75;
      v6 = 1;
      v3 = 24;
      break;
    case 0x19uLL:
      if (v5 != 25)
        goto LABEL_75;
      v6 = 1;
      v3 = 25;
      break;
    case 0x1AuLL:
      if (v5 != 26)
        goto LABEL_75;
      v6 = 1;
      v3 = 26;
      break;
    case 0x1BuLL:
      if (v5 != 27)
        goto LABEL_75;
      v6 = 1;
      v3 = 27;
      break;
    case 0x1CuLL:
      if (v5 != 28)
        goto LABEL_75;
      v6 = 1;
      v3 = 28;
      break;
    case 0x1DuLL:
      if (v5 != 29)
        goto LABEL_75;
      v6 = 1;
      v3 = 29;
      break;
    case 0x1EuLL:
      if (v5 != 30)
        goto LABEL_75;
      v6 = 1;
      v3 = 30;
      break;
    case 0x1FuLL:
      if (v5 != 31)
        goto LABEL_75;
      v6 = 1;
      v3 = 31;
      break;
    case 0x20uLL:
      if (v5 != 32)
        goto LABEL_75;
      v6 = 1;
      v3 = 32;
      break;
    case 0x21uLL:
      if (v5 != 33)
        goto LABEL_75;
      v6 = 1;
      v3 = 33;
      break;
    case 0x22uLL:
      if (v5 != 34)
        goto LABEL_75;
      v6 = 1;
      v3 = 34;
      break;
    case 0x23uLL:
      if (v5 != 35)
        goto LABEL_75;
      v6 = 1;
      v3 = 35;
      break;
    default:
      if (v5 >= 0x24)
      {
        if (v2 == v4 && v3 == v5)
          v6 = 1;
        else
          v6 = sub_1C3379184();
      }
      else
      {
LABEL_75:
        v6 = 0;
      }
      sub_1C2FE97E8(v4, v5);
      sub_1C2FE97E8(v2, v3);
      break;
  }
  sub_1C2FEC8A8(v2, v3);
  sub_1C2FEC8A8(v4, v5);
  return v6 & 1;
}

uint64_t sub_1C2FEC478(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x19)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1C2FEC48C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0xF)
    return swift_bridgeObjectRetain();
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for IdentifierNamespace(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFDB && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483612);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 35;
  if (v4 >= 0x25)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IdentifierNamespace(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFDC)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483612;
    if (a3 >= 0x7FFFFFDC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFDC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 35;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentifierNamespace()
{
  return &type metadata for IdentifierNamespace;
}

uint64_t getEnumTagSinglePayload for IdentifierAppBundle(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFE6 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483623);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 24;
  if (v4 >= 0x1A)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IdentifierAppBundle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFE7)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483623;
    if (a3 >= 0x7FFFFFE7)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFE7)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 24;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentifierAppBundle()
{
  return &type metadata for IdentifierAppBundle;
}

unint64_t destroy for IdentifierValue(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s12SiriOntology19IdentifierNamespaceOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *_s12SiriOntology19IdentifierNamespaceOwca_0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12SiriOntology19IdentifierNamespaceOwta_0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentifierValue(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFF1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483633);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 14;
  if (v4 >= 0x10)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IdentifierValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF1)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483633;
    if (a3 >= 0x7FFFFFF1)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF1)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 14;
  }
  return result;
}

uint64_t sub_1C2FEC838(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1C2FEC850(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentifierValue()
{
  return &type metadata for IdentifierValue;
}

uint64_t sub_1C2FEC880(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0xF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1C2FEC894(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x19)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1C2FEC8A8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x24)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t None.init(rawValue:)@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 - 8) + 8))();
  *a2 = 1;
  return result;
}

void None.rawValue.getter()
{
  sub_1C3378FE0();
  __break(1u);
}

uint64_t sub_1C2FEC940@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  return None.init(rawValue:)(*(_QWORD *)(a1 + 16), a2);
}

void sub_1C2FEC948()
{
  None.rawValue.getter();
}

uint64_t Definition.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Definition.init(name:keyPaths:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = MEMORY[0x1E0DEE9D8];
  a4[3] = a3;
  return result;
}

uint64_t Definition.init(name:subtypes:keyPaths:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t Definition.edgeName(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 24);
  v5 = a1;
  v3 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v6, &v5, v2, v3, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  return v6;
}

void Field.wrappedValue.getter()
{
  sub_1C3378F2C();
  swift_bridgeObjectRelease();
  sub_1C337928C();
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  sub_1C3378FE0();
  __break(1u);
}

void Field.wrappedValue.setter()
{
  sub_1C2FECCA8();
}

void Field.wrappedValue.modify()
{
  Field.wrappedValue.getter();
}

void Field.projectedValue.getter()
{
  sub_1C3378F2C();
  swift_bridgeObjectRelease();
  sub_1C337928C();
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  sub_1C3378FE0();
  __break(1u);
}

void Field.projectedValue.setter()
{
  sub_1C2FECCA8();
}

void Field.projectedValue.modify()
{
  Field.projectedValue.getter();
}

void Field.init(wrappedValue:)()
{
  sub_1C3378F2C();
  swift_bridgeObjectRelease();
  sub_1C337928C();
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  sub_1C3378FE0();
  __break(1u);
}

void sub_1C2FECCA8()
{
  sub_1C3378F2C();
  swift_bridgeObjectRelease();
  sub_1C337928C();
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  sub_1C3378FE0();
  __break(1u);
}

void sub_1C2FECD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Field(0, *(_QWORD *)(a3 + a2 - 8), a3, a4);
  Field.wrappedValue.getter();
}

void sub_1C2FECD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4);
}

uint64_t sub_1C2FECD8C()
{
  return 8;
}

_QWORD *sub_1C2FECD98(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1C2FECDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Field(0, *(_QWORD *)(a3 + a2 - 8), a3, a4);
  Field.projectedValue.getter();
}

void sub_1C2FECDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4);
}

void keypath_setTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Field(0, *(_QWORD *)(a4 + a3 - 8), a3, a4);
  sub_1C2FECCA8();
}

uint64_t sub_1C2FECE00()
{
  return 8;
}

uint64_t dispatch thunk of static USODynamicType.definition.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t sub_1C2FECE18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF819140;
  if (!qword_1EF819140)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EF819148);
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for None<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF819140);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3BD1B40](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C2FECEA8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for None(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for None);
}

uint64_t sub_1C2FECEBC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t initializeBufferWithCopyOfBuffer for Name(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for TerminalIntentNode()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TerminalIntentNode(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TerminalIntentNode(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for TerminalIntentNode(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TerminalIntentNode(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TerminalIntentNode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for Definition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Definition);
}

uint64_t type metadata accessor for Field(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Field);
}

uint64_t Com_Apple_Siri_Product_Proto_DisplayHint.idValue.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_1ED7CDFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, (uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = MEMORY[0x1E0DEE9D8];
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1ED7CDFF0);
}

uint64_t sub_1C2FED1EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 20), (uint64_t)v6, &qword_1ED7CDFF0);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, (uint64_t)a2, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = 0;
  a2[5] = 0xE000000000000000;
  a2[6] = MEMORY[0x1E0DEE9D8];
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1ED7CDFF0);
}

uint64_t sub_1C2FED2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2FF6C7C(a1, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  v8 = a2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0) + 20);
  sub_1C2FF9138(v8, &qword_1ED7CDFF0);
  sub_1C2FF6C38((uint64_t)v7, v8, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_DisplayHint.idValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0) + 20);
  sub_1C2FF9138(v3, &qword_1ED7CDFF0);
  sub_1C2FF6C38(a1, v3, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF8193F0);
}

uint64_t (*Com_Apple_Siri_Product_Proto_DisplayHint.idValue.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0) + 20);
  *((_DWORD *)v3 + 12) = v10;
  sub_1C2FF6CFC(v1 + v10, (uint64_t)v5, &qword_1ED7CDFF0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    v9[5] = 0xE000000000000000;
    v9[6] = MEMORY[0x1E0DEE9D8];
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1ED7CDFF0);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  }
  return sub_1C2FED578;
}

BOOL Com_Apple_Siri_Product_Proto_DisplayHint.hasIDValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
  sub_1C2FF6CFC(v0 + *(int *)(v4 + 20), (uint64_t)v3, &qword_1ED7CDFF0);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1C2FF9138((uint64_t)v3, &qword_1ED7CDFF0);
  return v6;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_DisplayHint.clearIDValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0) + 20);
  sub_1C2FF9138(v1, &qword_1ED7CDFF0);
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t Com_Apple_Siri_Product_Proto_DisplayHint.displayValue.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1ED7CDFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, (uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = MEMORY[0x1E0DEE9D8];
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1ED7CDFF0);
}

uint64_t sub_1C2FED784@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_1ED7CDFF0);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, (uint64_t)a2, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = 0;
  a2[5] = 0xE000000000000000;
  a2[6] = MEMORY[0x1E0DEE9D8];
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1ED7CDFF0);
}

uint64_t sub_1C2FED884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2FF6C7C(a1, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  v8 = a2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0) + 24);
  sub_1C2FF9138(v8, &qword_1ED7CDFF0);
  sub_1C2FF6C38((uint64_t)v7, v8, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_DisplayHint.displayValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0) + 24);
  sub_1C2FF9138(v3, &qword_1ED7CDFF0);
  sub_1C2FF6C38(a1, v3, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

uint64_t (*Com_Apple_Siri_Product_Proto_DisplayHint.displayValue.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0) + 24);
  *((_DWORD *)v3 + 12) = v10;
  sub_1C2FF6CFC(v1 + v10, (uint64_t)v5, &qword_1ED7CDFF0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    v9[5] = 0xE000000000000000;
    v9[6] = MEMORY[0x1E0DEE9D8];
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1ED7CDFF0);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  }
  return sub_1C2FED578;
}

void sub_1C2FEDAFC(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(int *)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v8 = *(void **)(*(_QWORD *)a1 + 8);
  v9 = **(_QWORD **)a1 + v3;
  if ((a2 & 1) != 0)
  {
    sub_1C2FF6C7C(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v4, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    sub_1C2FF9138(v9, &qword_1ED7CDFF0);
    sub_1C2FF6C38((uint64_t)v4, v9, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  }
  else
  {
    sub_1C2FF9138(**(_QWORD **)a1 + v3, &qword_1ED7CDFF0);
    sub_1C2FF6C38((uint64_t)v5, v9, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL Com_Apple_Siri_Product_Proto_DisplayHint.hasDisplayValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
  sub_1C2FF6CFC(v0 + *(int *)(v4 + 24), (uint64_t)v3, &qword_1ED7CDFF0);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1C2FF9138((uint64_t)v3, &qword_1ED7CDFF0);
  return v6;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_DisplayHint.clearDisplayValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0) + 24);
  sub_1C2FF9138(v1, &qword_1ED7CDFF0);
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t (*Com_Apple_Siri_Product_Proto_DisplayHint.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_DisplayHint.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
  v3 = a1 + *(int *)(v2 + 20);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v6(v3, 1, 1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6)(a1 + *(int *)(v2 + 24), 1, 1, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_AssistantSignalState.hasHomeSignal_p.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t Com_Apple_Siri_Product_Proto_AssistantSignalState.hasHomeSignal_p.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_AssistantSignalState.hasHomeSignal_p.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_AssistantSignalState.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0) + 20);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1ED7CE000);
}

uint64_t Com_Apple_Siri_Product_Proto_AssistantSignalState.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0) + 20);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Com_Apple_Siri_Product_Proto_AssistantSignalState.unknownFields.modify())()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_AssistantSignalState.init()@<X0>(_BYTE *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t Com_Apple_Siri_Product_Proto_Uuid.highInt.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Com_Apple_Siri_Product_Proto_Uuid.highInt.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Uuid.highInt.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Uuid.lowInt.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t Com_Apple_Siri_Product_Proto_Uuid.lowInt.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Uuid.lowInt.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Uuid.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0) + 24);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1ED7CDDD0);
}

uint64_t Com_Apple_Siri_Product_Proto_Uuid.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0) + 24);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Com_Apple_Siri_Product_Proto_Uuid.unknownFields.modify())()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Uuid.init()@<X0>(_QWORD *a1@<X8>)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
  *a1 = 0;
  a1[1] = 0;
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.dictationPrompt.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20));
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1ED7CDF60);
}

uint64_t sub_1C2FEE06C(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C2FF6268(v5);
    swift_release();
    *(_QWORD *)(a2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_BYTE *)(v7 + 16) = v3;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.dictationPrompt.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C2FF6268(v5);
    swift_release();
    *(_QWORD *)(v2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess();
  *(_BYTE *)(v7 + 16) = a1 & 1;
  return result;
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(uint64_t a1)
{
  return sub_1C2FE8350(a1, (uint64_t *)&unk_1ED7CDF20);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.dictationPrompt.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *(_BYTE *)(v5 + 16);
  return sub_1C2FEE250;
}

void sub_1C2FEE250(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_1C2FF6268(v8);
    swift_release();
    *(_QWORD *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  v10 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 16);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.strictPrompt.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20));
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 17);
}

uint64_t sub_1C2FEE370(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C2FF6268(v5);
    swift_release();
    *(_QWORD *)(a2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_BYTE *)(v7 + 17) = v3;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.strictPrompt.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C2FF6268(v5);
    swift_release();
    *(_QWORD *)(v2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess();
  *(_BYTE *)(v7 + 17) = a1 & 1;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.strictPrompt.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *(_BYTE *)(v5 + 17);
  return sub_1C2FEE540;
}

void sub_1C2FEE540(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_1C2FF6268(v8);
    swift_release();
    *(_QWORD *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  v10 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 17);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.ambiguityTarget.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE0D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget;
  swift_beginAccess();
  sub_1C2FF6CFC(v6, (uint64_t)v5, &qword_1ED7CE0D0);
  v7 = sub_1C337883C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  sub_1C3378830();
  return sub_1C2FF9138((uint64_t)v5, &qword_1ED7CE0D0);
}

uint64_t sub_1C2FEE71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE0D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget;
  swift_beginAccess();
  sub_1C2FF6CFC(v7, (uint64_t)v6, &qword_1ED7CE0D0);
  v8 = sub_1C337883C();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
  sub_1C3378830();
  return sub_1C2FF9138((uint64_t)v6, &qword_1ED7CE0D0);
}

uint64_t sub_1C2FEE824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1C337883C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return Com_Apple_Siri_Product_Proto_PromptContext.ambiguityTarget.setter((uint64_t)v4);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.ambiguityTarget.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE0D0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  v10 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v11 = swift_retain();
    v12 = sub_1C2FF6268(v11);
    swift_release();
    *(_QWORD *)(v2 + v10) = v12;
    swift_release();
  }
  v13 = *(_QWORD *)(v2 + v10);
  v14 = sub_1C337883C();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v9, a1, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  sub_1C2FF6D40((uint64_t)v9, (uint64_t)v7, &qword_1ED7CE0D0);
  v16 = v13
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget;
  swift_beginAccess();
  swift_retain();
  sub_1C2FF6D84((uint64_t)v7, v16, &qword_1ED7CE0D0);
  swift_endAccess();
  return swift_release();
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.ambiguityTarget.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE0D0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = sub_1C337883C();
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[6] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[7] = malloc(v8);
  v9 = malloc(v8);
  v3[8] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1ED7CE0D0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1C3378830();
    sub_1C2FF9138((uint64_t)v5, &qword_1ED7CE0D0);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  return sub_1C2FEEB68;
}

void sub_1C2FEEB68(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 56);
  v4 = *(void **)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    v5 = v2[5];
    v6 = v2[6];
    v7 = (void *)v2[4];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 56), v4, v5);
    Com_Apple_Siri_Product_Proto_PromptContext.ambiguityTarget.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v7 = (void *)v2[4];
    Com_Apple_Siri_Product_Proto_PromptContext.ambiguityTarget.setter(*(_QWORD *)(*(_QWORD *)a1 + 64));
  }
  free(v4);
  free(v3);
  free(v7);
  free(v2);
}

BOOL Com_Apple_Siri_Product_Proto_PromptContext.hasAmbiguityTarget.getter()
{
  return sub_1C2FF0184(&qword_1ED7CE0D0, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget, (uint64_t (*)(_QWORD))MEMORY[0x1E0DA35F8]);
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_PromptContext.clearAmbiguityTarget()()
{
  sub_1C2FF0280(&qword_1ED7CE0D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DA35F8], &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.responseOptions.getter()
{
  return sub_1C2FEECF4();
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.responseOptions.setter(uint64_t a1)
{
  return sub_1C2FEEE8C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.responseOptions.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_1C2FEECDC;
}

void sub_1C2FEECDC(uint64_t *a1, char a2)
{
  sub_1C2FEEFE0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.domainHints.getter()
{
  return sub_1C2FEECF4();
}

uint64_t sub_1C2FEECF4()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0);
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2FEED4C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;

  v4 = (_QWORD *)(*(_QWORD *)(a1
                            + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
                + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2FEEDB8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v7 = *a1;
  v8 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_1C2FF6268(v9);
    swift_release();
    *(_QWORD *)(a2 + v8) = v10;
    swift_release();
  }
  v11 = (_QWORD *)(*(_QWORD *)(a2 + v8) + *a5);
  swift_beginAccess();
  *v11 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.domainHints.setter(uint64_t a1)
{
  return sub_1C2FEEE8C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints);
}

uint64_t sub_1C2FEEE8C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v2;
  v6 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_1C2FF6268(v7);
    swift_release();
    *(_QWORD *)(v4 + v6) = v8;
    swift_release();
  }
  v9 = (_QWORD *)(*(_QWORD *)(v4 + v6) + *a2);
  swift_beginAccess();
  *v9 = a1;
  return swift_bridgeObjectRelease();
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.domainHints.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_1C2FEEFD4;
}

void sub_1C2FEEFD4(uint64_t *a1, char a2)
{
  sub_1C2FEEFE0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints);
}

void sub_1C2FEEFE0(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v6 = *(int *)(v4 + 88);
      v7 = *(_QWORD *)(v4 + 80);
      type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
      swift_allocObject();
      v8 = swift_retain();
      v9 = sub_1C2FF6268(v8);
      swift_release();
      *(_QWORD *)(v7 + v6) = v9;
      swift_release();
    }
    v10 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 80) + *(int *)(v4 + 88)) + *a3);
    swift_beginAccess();
    *v10 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v11 = *(int *)(v4 + 88);
      v12 = *(_QWORD *)(v4 + 80);
      type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
      swift_allocObject();
      v13 = swift_retain();
      v14 = sub_1C2FF6268(v13);
      swift_release();
      *(_QWORD *)(v12 + v11) = v14;
      swift_release();
    }
    v15 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 80) + *(int *)(v4 + 88)) + *a3);
    swift_beginAccess();
    *v15 = v5;
  }
  swift_bridgeObjectRelease();
  free((void *)v4);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.promptTargetHints.getter()
{
  return sub_1C2FEECF4();
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.promptTargetHints.setter(uint64_t a1)
{
  return sub_1C2FEEE8C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.promptTargetHints.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_1C2FEF1F8;
}

void sub_1C2FEF1F8(uint64_t *a1, char a2)
{
  sub_1C2FEEFE0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.displayHints.getter()
{
  return sub_1C2FEECF4();
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.displayHints.setter(uint64_t a1)
{
  return sub_1C2FEEE8C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.displayHints.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_1C2FEF2A4;
}

void sub_1C2FEF2A4(uint64_t *a1, char a2)
{
  sub_1C2FEEFE0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.foregroundAppSubscribesToInAppSearch.getter()
{
  return sub_1C2FEF360(&OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.foregroundAppSubscribesToInAppSearch.setter(char a1)
{
  return sub_1C2FEF478(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.foregroundAppSubscribesToInAppSearch.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_1C2FEF348;
}

void sub_1C2FEF348(uint64_t *a1, char a2)
{
  sub_1C2FEF5C0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.objectDisambiguation.getter()
{
  return sub_1C2FEF360(&OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation);
}

uint64_t sub_1C2FEF360(_QWORD *a1)
{
  uint64_t v1;
  unsigned __int8 *v2;

  v2 = (unsigned __int8 *)(*(_QWORD *)(v1
                                     + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0)
                                              + 20))
                         + *a1);
  swift_beginAccess();
  return *v2;
}

uint64_t sub_1C2FEF3B4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t result;

  v7 = *a1;
  v8 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_1C2FF6268(v9);
    swift_release();
    *(_QWORD *)(a2 + v8) = v10;
    swift_release();
  }
  v11 = (_BYTE *)(*(_QWORD *)(a2 + v8) + *a5);
  result = swift_beginAccess();
  *v11 = v7;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.objectDisambiguation.setter(char a1)
{
  return sub_1C2FEF478(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation);
}

uint64_t sub_1C2FEF478(char a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;

  v4 = v2;
  v6 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_1C2FF6268(v7);
    swift_release();
    *(_QWORD *)(v4 + v6) = v8;
    swift_release();
  }
  v9 = (_BYTE *)(*(_QWORD *)(v4 + v6) + *a2);
  result = swift_beginAccess();
  *v9 = a1 & 1;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.objectDisambiguation.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_1C2FEF5B4;
}

void sub_1C2FEF5B4(uint64_t *a1, char a2)
{
  sub_1C2FEF5C0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation);
}

void sub_1C2FEF5C0(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;

  v5 = *a1;
  v6 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v8 = *(int *)(v5 + 80);
    v9 = *(_QWORD *)(v5 + 72);
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    v11 = sub_1C2FF6268(v10);
    swift_release();
    *(_QWORD *)(v9 + v8) = v11;
    swift_release();
  }
LABEL_4:
  v12 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v5 + 72) + *(int *)(v5 + 80)) + *a3);
  swift_beginAccess();
  *v12 = v6;
  free((void *)v5);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.alertDomainHints.getter()
{
  return sub_1C2FEECF4();
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.alertDomainHints.setter(uint64_t a1)
{
  return sub_1C2FEEE8C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.alertDomainHints.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_1C2FEF740;
}

void sub_1C2FEF740(uint64_t *a1, char a2)
{
  sub_1C2FEEFE0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.backgroundDomainHints.getter()
{
  return sub_1C2FEECF4();
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.backgroundDomainHints.setter(uint64_t a1)
{
  return sub_1C2FEEE8C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.backgroundDomainHints.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_1C2FEF7EC;
}

void sub_1C2FEF7EC(uint64_t *a1, char a2)
{
  sub_1C2FEEFE0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.previousDomainName.getter()
{
  return sub_1C2FEF8B0(&OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.previousDomainName.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C2FEFA5C(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.previousDomainName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C2FEF898;
}

void sub_1C2FEF898(uint64_t *a1, char a2)
{
  sub_1C2FEFBBC(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.previousNldomainName.getter()
{
  return sub_1C2FEF8B0(&OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName);
}

uint64_t sub_1C2FEF8B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(*(_QWORD *)(v1
                             + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
                 + *a1);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1C2FEF914@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(*(_QWORD *)(a1
                            + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
                + *a2);
  swift_beginAccess();
  v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2FEF980(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = *a1;
  v7 = a1[1];
  v9 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    v11 = sub_1C2FF6268(v10);
    swift_release();
    *(_QWORD *)(a2 + v9) = v11;
    swift_release();
  }
  v12 = (_QWORD *)(*(_QWORD *)(a2 + v9) + *a5);
  swift_beginAccess();
  *v12 = v8;
  v12[1] = v7;
  return swift_bridgeObjectRelease();
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.previousNldomainName.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C2FEFA5C(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName);
}

uint64_t sub_1C2FEFA5C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = v3;
  v8 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_1C2FF6268(v9);
    swift_release();
    *(_QWORD *)(v5 + v8) = v10;
    swift_release();
  }
  v11 = (_QWORD *)(*(_QWORD *)(v5 + v8) + *a3);
  swift_beginAccess();
  *v11 = a1;
  v11[1] = a2;
  return swift_bridgeObjectRelease();
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.previousNldomainName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C2FEFBB0;
}

void sub_1C2FEFBB0(uint64_t *a1, char a2)
{
  sub_1C2FEFBBC(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName);
}

void sub_1C2FEFBBC(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 72);
  v6 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = *(int *)(v4 + 96);
      v8 = *(_QWORD *)(v4 + 88);
      type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
      swift_allocObject();
      v9 = swift_retain();
      v10 = sub_1C2FF6268(v9);
      swift_release();
      *(_QWORD *)(v8 + v7) = v10;
      swift_release();
    }
    v11 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    *v11 = v5;
    v11[1] = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v12 = *(int *)(v4 + 96);
      v13 = *(_QWORD *)(v4 + 88);
      type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
      swift_allocObject();
      v14 = swift_retain();
      v15 = sub_1C2FF6268(v14);
      swift_release();
      *(_QWORD *)(v13 + v12) = v15;
      swift_release();
    }
    v16 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    *v16 = v5;
    v16[1] = v6;
  }
  swift_bridgeObjectRelease();
  free((void *)v4);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.listenAfterSpeaking.getter()
{
  return sub_1C2FEF360(&OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.listenAfterSpeaking.setter(char a1)
{
  return sub_1C2FEF478(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.listenAfterSpeaking.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_1C2FEFDD4;
}

void sub_1C2FEFDD4(uint64_t *a1, char a2)
{
  sub_1C2FEF5C0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.assistantSignalState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE038);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState;
  swift_beginAccess();
  sub_1C2FF6CFC(v6, (uint64_t)v5, &qword_1ED7CE038);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, (uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
  *a1 = 0;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1ED7CE038);
}

uint64_t sub_1C2FEFEEC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE038);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState;
  swift_beginAccess();
  sub_1C2FF6CFC(v7, (uint64_t)v6, &qword_1ED7CE038);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, (uint64_t)a2, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
  *a2 = 0;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1ED7CE038);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.assistantSignalState.setter(uint64_t a1)
{
  return sub_1C2FF0D04(a1, &qword_1ED7CE038, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.assistantSignalState.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE038);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1ED7CE038);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1ED7CE038);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
  }
  return sub_1C2FF0154;
}

void sub_1C2FF0154(uint64_t a1, char a2)
{
  sub_1C2FF0834(a1, a2, (void (*)(void *))Com_Apple_Siri_Product_Proto_PromptContext.assistantSignalState.setter, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
}

BOOL Com_Apple_Siri_Product_Proto_PromptContext.hasAssistantSignalState.getter()
{
  return sub_1C2FF0184(&qword_1ED7CE038, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
}

BOOL sub_1C2FF0184(uint64_t *a1, _QWORD *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
      + *a2;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v9, a1);
  v11 = a3(0);
  v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_1C2FF9138((uint64_t)v9, a1);
  return v12;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_PromptContext.clearAssistantSignalState()()
{
  sub_1C2FF0280(&qword_1ED7CE038, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState);
}

uint64_t sub_1C2FF0280(uint64_t *a1, uint64_t (*a2)(_QWORD), _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v7 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v12 = swift_retain();
    v13 = sub_1C2FF6268(v12);
    swift_release();
    *(_QWORD *)(v7 + v11) = v13;
    swift_release();
  }
  v14 = *(_QWORD *)(v7 + v11);
  v15 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
  v16 = v14 + *a3;
  swift_beginAccess();
  swift_retain();
  sub_1C2FF6D84((uint64_t)v10, v16, a1);
  swift_endAccess();
  return swift_release();
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.overridePromptingOnSpeechFailure.getter()
{
  return sub_1C2FEF360(&OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.overridePromptingOnSpeechFailure.setter(char a1)
{
  return sub_1C2FEF478(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.overridePromptingOnSpeechFailure.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_1C2FF0454;
}

void sub_1C2FF0454(uint64_t *a1, char a2)
{
  sub_1C2FEF5C0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.disableAutoPunctuation.getter()
{
  return sub_1C2FEF360(&OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.disableAutoPunctuation.setter(char a1)
{
  return sub_1C2FEF478(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.disableAutoPunctuation.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_1C2FF04F8;
}

void sub_1C2FF04F8(uint64_t *a1, char a2)
{
  sub_1C2FEF5C0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.currentTaskVerb.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb;
  swift_beginAccess();
  sub_1C2FF6CFC(v6, (uint64_t)v5, &qword_1ED7CDFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, (uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = MEMORY[0x1E0DEE9D8];
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1ED7CDFF0);
}

uint64_t sub_1C2FF0628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v9 = a5(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - v10;
  sub_1C2FF6C7C(a1, (uint64_t)&v13 - v10, a5);
  return a6(v11);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.currentTaskVerb.setter(uint64_t a1)
{
  return sub_1C2FF0D04(a1, &qword_1ED7CDFF0, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.currentTaskVerb.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1ED7CDFF0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    v9[5] = 0xE000000000000000;
    v9[6] = MEMORY[0x1E0DEE9D8];
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1ED7CDFF0);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  }
  return sub_1C2FF0820;
}

void sub_1C2FF0820(uint64_t a1, char a2)
{
  sub_1C2FF0834(a1, a2, (void (*)(void *))Com_Apple_Siri_Product_Proto_PromptContext.currentTaskVerb.setter, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
}

void sub_1C2FF0834(uint64_t a1, char a2, void (*a3)(void *), uint64_t (*a4)(_QWORD))
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v5 = *(void **)a1;
  v6 = *(void **)(*(_QWORD *)a1 + 40);
  v7 = *(void **)(*(_QWORD *)a1 + 48);
  v8 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    sub_1C2FF6C7C(*(_QWORD *)(*(_QWORD *)a1 + 48), (uint64_t)v6, a4);
    a3(v6);
    sub_1C2FF6CC0((uint64_t)v7, a4);
  }
  else
  {
    a3(*(void **)(*(_QWORD *)a1 + 48));
  }
  free(v7);
  free(v6);
  free(v8);
  free(v5);
}

BOOL Com_Apple_Siri_Product_Proto_PromptContext.hasCurrentTaskVerb.getter()
{
  return sub_1C2FF0184(&qword_1ED7CDFF0, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_PromptContext.clearCurrentTaskVerb()()
{
  sub_1C2FF0280(&qword_1ED7CDFF0, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.taskID.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C2FF0ABC(&OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.taskID.setter(uint64_t a1)
{
  return sub_1C2FF0D04(a1, &qword_1ED7CDE10, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.taskID.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDE10);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1ED7CDE10);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1ED7CDE10);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
  }
  return sub_1C2FF0A64;
}

void sub_1C2FF0A64(uint64_t a1, char a2)
{
  sub_1C2FF0834(a1, a2, (void (*)(void *))Com_Apple_Siri_Product_Proto_PromptContext.taskID.setter, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
}

BOOL Com_Apple_Siri_Product_Proto_PromptContext.hasTaskID.getter()
{
  return sub_1C2FF0184(&qword_1ED7CDE10, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_PromptContext.clearTaskID()()
{
  sub_1C2FF0280(&qword_1ED7CDE10, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.systemDialogActID.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C2FF0ABC(&OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID, a1);
}

uint64_t sub_1C2FF0ABC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDE10);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20)) + *a1;
  swift_beginAccess();
  sub_1C2FF6CFC(v8, (uint64_t)v7, &qword_1ED7CDE10);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) != 1)
    return sub_1C2FF6C38((uint64_t)v7, (uint64_t)a2, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
  *a2 = 0;
  a2[1] = 0;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v7, &qword_1ED7CDE10);
}

uint64_t sub_1C2FF0BD0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDE10);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20)) + *a2;
  swift_beginAccess();
  sub_1C2FF6CFC(v9, (uint64_t)v8, &qword_1ED7CDE10);
  v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) != 1)
    return sub_1C2FF6C38((uint64_t)v8, (uint64_t)a3, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
  *a3 = 0;
  a3[1] = 0;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v8, &qword_1ED7CDE10);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.systemDialogActID.setter(uint64_t a1)
{
  return sub_1C2FF0D04(a1, &qword_1ED7CDE10, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID);
}

uint64_t sub_1C2FF0D04(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v8 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - v14;
  v16 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v17 = swift_retain();
    v18 = sub_1C2FF6268(v17);
    swift_release();
    *(_QWORD *)(v8 + v16) = v18;
    swift_release();
  }
  v19 = *(_QWORD *)(v8 + v16);
  sub_1C2FF6C38(a1, (uint64_t)v15, a3);
  v20 = a3(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v15, 0, 1, v20);
  sub_1C2FF6D40((uint64_t)v15, (uint64_t)v13, a2);
  v21 = v19 + *a4;
  swift_beginAccess();
  swift_retain();
  sub_1C2FF6D84((uint64_t)v13, v21, a2);
  swift_endAccess();
  return swift_release();
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.systemDialogActID.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDE10);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1ED7CDE10);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1ED7CDE10);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
  }
  return sub_1C2FF0FC8;
}

void sub_1C2FF0FC8(uint64_t a1, char a2)
{
  sub_1C2FF0834(a1, a2, (void (*)(void *))Com_Apple_Siri_Product_Proto_PromptContext.systemDialogActID.setter, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
}

BOOL Com_Apple_Siri_Product_Proto_PromptContext.hasSystemDialogActID.getter()
{
  return sub_1C2FF0184(&qword_1ED7CDE10, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_PromptContext.clearSystemDialogActID()()
{
  sub_1C2FF0280(&qword_1ED7CDE10, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.usePlaceholderTaskVerb.getter()
{
  return sub_1C2FEF360(&OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb);
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.usePlaceholderTaskVerb.setter(char a1)
{
  return sub_1C2FEF478(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb);
}

void (*Com_Apple_Siri_Product_Proto_PromptContext.usePlaceholderTaskVerb.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_1C2FF10AC;
}

void sub_1C2FF10AC(uint64_t *a1, char a2)
{
  sub_1C2FEF5C0(a1, a2, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb);
}

uint64_t _s12SiriOntology010Com_Apple_A26_Product_Proto_DisplayHintV13unknownFields0aB8Protobuf14UnknownStorageVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _s12SiriOntology010Com_Apple_A26_Product_Proto_DisplayHintV13unknownFields0aB8Protobuf14UnknownStorageVvs_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*Com_Apple_Siri_Product_Proto_PromptContext.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v2 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if (qword_1ED7CDE98 != -1)
    swift_once();
  *(_QWORD *)(a1 + v2) = qword_1ED7CDE90;
  return swift_retain();
}

unint64_t static Com_Apple_Siri_Product_Proto_DisplayHint.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_1C2FF11BC(uint64_t a1)
{
  return sub_1C2FF1DD4(a1, qword_1EF8192D0, (uint64_t)"idValue", (uint64_t)"displayValue", 12);
}

uint64_t static Com_Apple_Siri_Product_Proto_DisplayHint._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A5C8, (uint64_t)qword_1EF8192D0, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_DisplayHint.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1C3378980();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
    {
      sub_1C2FF131C();
    }
    else if (result == 1)
    {
      sub_1C2FF1288();
    }
  }
  return result;
}

uint64_t sub_1C2FF1288()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
  type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  sub_1C2FF6DE0(&qword_1EF819318, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_SemanticValue);
  return sub_1C3378A70();
}

uint64_t sub_1C2FF131C()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
  type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  sub_1C2FF6DE0(&qword_1EF819318, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_SemanticValue);
  return sub_1C3378A70();
}

uint64_t Com_Apple_Siri_Product_Proto_DisplayHint.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a3;
  v28 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v26 - v10;
  v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v26[0] = (uint64_t)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v26 - v16;
  v18 = type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
  v19 = *(int *)(v18 + 20);
  v27 = v3;
  sub_1C2FF6CFC(v3 + v19, (uint64_t)v11, &qword_1ED7CDFF0);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v21 = v20(v11, 1, v12);
  v26[1] = a1;
  if (v21 == 1)
  {
    sub_1C2FF9138((uint64_t)v11, &qword_1ED7CDFF0);
    v22 = v27;
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v11, (uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    sub_1C2FF6DE0(&qword_1EF819318, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_SemanticValue);
    sub_1C3378B6C();
    result = sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    v22 = v27;
    if (v4)
      return result;
  }
  sub_1C2FF6CFC(v22 + *(int *)(v18 + 24), (uint64_t)v9, &qword_1ED7CDFF0);
  if (v20(v9, 1, v12) == 1)
  {
    sub_1C2FF9138((uint64_t)v9, &qword_1ED7CDFF0);
  }
  else
  {
    v24 = (uint64_t)v9;
    v25 = v26[0];
    sub_1C2FF6C38(v24, v26[0], type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    sub_1C2FF6DE0(&qword_1EF819318, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_SemanticValue);
    sub_1C3378B6C();
    result = sub_1C2FF6CC0(v25, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    if (v4)
      return result;
  }
  return sub_1C33788FC();
}

uint64_t Com_Apple_Siri_Product_Proto_DisplayHint.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint, &qword_1EF819320, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DisplayHint);
}

uint64_t sub_1C2FF1678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v4 = a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7(v4, 1, 1, v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(a2 + *(int *)(a1 + 24), 1, 1, v5);
}

unint64_t sub_1C2FF16FC()
{
  return 0xD000000000000028;
}

uint64_t (*sub_1C2FF1724())()
{
  return nullsub_1;
}

uint64_t sub_1C2FF1734()
{
  return Com_Apple_Siri_Product_Proto_DisplayHint.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C2FF1748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_DisplayHint.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C2FF1760()
{
  sub_1C2FF6DE0(&qword_1EF819448, type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DisplayHint);
  return sub_1C3378950();
}

uint64_t sub_1C2FF17B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A5C8, (uint64_t)qword_1EF8192D0, a1);
}

uint64_t sub_1C2FF17D0()
{
  sub_1C2FF6DE0(&qword_1EF819348, type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DisplayHint);
  return sub_1C3378AA0();
}

uint64_t sub_1C2FF1814()
{
  sub_1C2FF6DE0(&qword_1EF819348, type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DisplayHint);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_AssistantSignalState.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_1C2FF1888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF8192E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF8192E8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C3388720;
  v5 = v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v4 + v3) = 1;
  *(_QWORD *)v5 = "hasHomeSignal";
  *(_QWORD *)(v5 + 8) = 13;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x1E0DA38C8];
  v7 = sub_1C3378B78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_AssistantSignalState._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A5D0, (uint64_t)qword_1EF8192E8, a1);
}

uint64_t sub_1C2FF19A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1C3378B9C();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t Com_Apple_Siri_Product_Proto_AssistantSignalState.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1C3378980();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_1C33789A4();
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_AssistantSignalState.traverse<A>(visitor:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  if (*v0 != 1 || (result = sub_1C3378AE8(), !v1))
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0);
    return sub_1C33788FC();
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_AssistantSignalState.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, &qword_1EF819328, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
}

uint64_t sub_1C2FF1B34@<X0>(_BYTE *a1@<X8>)
{
  *a1 = 0;
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C2FF1B54()
{
  return 0xD000000000000031;
}

uint64_t sub_1C2FF1B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C2FF1BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 20);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_1C2FF1BF0())()
{
  return nullsub_1;
}

uint64_t sub_1C2FF1C04()
{
  return Com_Apple_Siri_Product_Proto_AssistantSignalState.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C2FF1C18()
{
  return Com_Apple_Siri_Product_Proto_AssistantSignalState.traverse<A>(visitor:)();
}

uint64_t sub_1C2FF1C2C()
{
  sub_1C2FF6DE0(&qword_1EF819440, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
  return sub_1C3378950();
}

uint64_t sub_1C2FF1C7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A5D0, (uint64_t)qword_1EF8192E8, a1);
}

uint64_t sub_1C2FF1C98@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1C3378B9C();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1C2FF1D04()
{
  sub_1C2FF6DE0(&qword_1EF819360, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
  return sub_1C3378AA0();
}

uint64_t sub_1C2FF1D44()
{
  sub_1C2FF6DE0(&qword_1EF819360, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_Uuid.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1C2FF1DB4(uint64_t a1)
{
  return sub_1C2FF1DD4(a1, qword_1EF819300, (uint64_t)"highInt", (uint64_t)"lowInt", 6);
}

uint64_t sub_1C2FF1DD4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  char *v18;

  v7 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C3388730;
  v13 = (_QWORD *)(v12 + v11);
  v14 = v12 + v11 + *(int *)(v8 + 48);
  *v13 = 1;
  *(_QWORD *)v14 = a3;
  *(_QWORD *)(v14 + 8) = 7;
  *(_BYTE *)(v14 + 16) = 2;
  v15 = *MEMORY[0x1E0DA38C8];
  v16 = sub_1C3378B78();
  v17 = *(void (**)(void))(*(_QWORD *)(v16 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v14, v15, v16);
  v18 = (char *)v13 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)((char *)v13 + v10) = 2;
  *(_QWORD *)v18 = a4;
  *((_QWORD *)v18 + 1) = a5;
  v18[16] = 2;
  v17();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_Uuid._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A5D8, (uint64_t)qword_1EF819300, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_Uuid.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1C3378980();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
        sub_1C33789EC();
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Uuid.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (result = sub_1C3378B18(), !v1))
  {
    if (!v0[1] || (result = sub_1C3378B18(), !v1))
    {
      type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
      return sub_1C33788FC();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Uuid.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, &qword_1EF819330, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Uuid);
}

uint64_t sub_1C2FF20A8@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C2FF20C8()
{
  return 0xD000000000000021;
}

uint64_t sub_1C2FF20E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C2FF2124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 24);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_1C2FF2164())()
{
  return nullsub_1;
}

uint64_t sub_1C2FF2178()
{
  return Com_Apple_Siri_Product_Proto_Uuid.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C2FF218C()
{
  return Com_Apple_Siri_Product_Proto_Uuid.traverse<A>(visitor:)();
}

uint64_t sub_1C2FF21A0()
{
  sub_1C2FF6DE0(&qword_1EF819438, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Uuid);
  return sub_1C3378950();
}

uint64_t sub_1C2FF21F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A5D8, (uint64_t)qword_1EF819300, a1);
}

uint64_t sub_1C2FF220C()
{
  sub_1C2FF6DE0(&qword_1EF819378, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Uuid);
  return sub_1C3378AA0();
}

uint64_t sub_1C2FF224C()
{
  sub_1C2FF6DE0(&qword_1EF819378, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Uuid);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_PromptContext.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_1C2FF22BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v48;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1ED7B31B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED7B31B0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1C3388740;
  v5 = v48 + v4;
  v6 = v48 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v48 + v4) = 1;
  *(_QWORD *)v6 = "dictationPrompt";
  *(_QWORD *)(v6 + 8) = 15;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0DA38C8];
  v8 = sub_1C3378B78();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "strictPrompt";
  *(_QWORD *)(v10 + 8) = 12;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "ambiguityTarget";
  *((_QWORD *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "responseOptions";
  *((_QWORD *)v14 + 1) = 15;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "domainHints";
  *((_QWORD *)v16 + 1) = 11;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "promptTargetHints";
  *((_QWORD *)v18 + 1) = 17;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "displayHints";
  *((_QWORD *)v20 + 1) = 12;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "foregroundAppSubscribesToInAppSearch";
  *((_QWORD *)v22 + 1) = 36;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "objectDisambiguation";
  *(_QWORD *)(v23 + 8) = 20;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v5 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "alertDomainHints";
  *((_QWORD *)v25 + 1) = 16;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v5 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "backgroundDomainHints";
  *((_QWORD *)v27 + 1) = 21;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v5 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "previousDomainName";
  *((_QWORD *)v29 + 1) = 18;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v5 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "previousNLDomainName";
  *((_QWORD *)v31 + 1) = 20;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v5 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "listenAfterSpeaking";
  *((_QWORD *)v33 + 1) = 19;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v5 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "assistantSignalState";
  *((_QWORD *)v35 + 1) = 20;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v5 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 16;
  *(_QWORD *)v37 = "overridePromptingOnSpeechFailure";
  *((_QWORD *)v37 + 1) = 32;
  v37[16] = 2;
  v9();
  v38 = v5 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 17;
  *(_QWORD *)v38 = "disableAutoPunctuation";
  *(_QWORD *)(v38 + 8) = 22;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v5 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 18;
  *(_QWORD *)v40 = "currentTaskVerb";
  *((_QWORD *)v40 + 1) = 15;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v5 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 19;
  *(_QWORD *)v42 = "taskId";
  *((_QWORD *)v42 + 1) = 6;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v5 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 20;
  *(_QWORD *)v44 = "systemDialogActId";
  *((_QWORD *)v44 + 1) = 17;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v5 + 20 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 21;
  *(_QWORD *)v46 = "usePlaceholderTaskVerb";
  *((_QWORD *)v46 + 1) = 22;
  v46[16] = 2;
  v9();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_PromptContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1ED7B31D0, (uint64_t)qword_1ED7B31B0, a1);
}

uint64_t sub_1C2FF2828()
{
  uint64_t result;

  type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
  swift_allocObject();
  result = sub_1C2FF2864();
  qword_1ED7CDE90 = result;
  return result;
}

uint64_t sub_1C2FF2864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_WORD *)(v0 + 16) = 0;
  v1 = v0
     + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget;
  v2 = sub_1C337883C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints) = v3;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints) = v3;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints) = v3;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch) = 0;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints) = v3;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints) = v3;
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  v5 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking) = 0;
  v6 = v0
     + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState;
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure) = 0;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation) = 0;
  v8 = v0
     + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb;
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = v0
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID;
  v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(v0+ OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID, 1, 1, v11);
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb) = 0;
  return v0;
}

uint64_t sub_1C2FF2A28()
{
  uint64_t v0;

  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget, &qword_1ED7CE0D0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState, &qword_1ED7CE038);
  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb, &qword_1ED7CDFF0);
  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID, &qword_1ED7CDE10);
  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID, &qword_1ED7CDE10);
  return v0;
}

uint64_t sub_1C2FF2B44()
{
  sub_1C2FF2A28();
  return swift_deallocClassInstance();
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = v3;
  v8 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_1C2FF6268(v9);
    swift_release();
    *(_QWORD *)(v4 + v8) = v10;
    swift_release();
  }
  v11 = swift_retain();
  sub_1C2FF2C30(v11, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C2FF2C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t (*v16)(uint64_t);
  unint64_t *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t (*v24)(uint64_t);
  unint64_t *v25;
  void *v26;

  result = sub_1C3378980();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1C2FF2FE8();
          break;
        case 2:
          sub_1C2FF3064();
          break;
        case 3:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget;
          v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DA35F8];
          v17 = (unint64_t *)&unk_1EF819480;
          v18 = (void *)MEMORY[0x1E0DA35E8];
          goto LABEL_21;
        case 4:
          v19 = a2;
          v20 = a1;
          v21 = a3;
          v22 = a4;
          v23 = &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions;
          v24 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue;
          v25 = &qword_1EF819318;
          v26 = &protocol conformance descriptor for Com_Apple_Siri_Product_Proto_SemanticValue;
          goto LABEL_13;
        case 5:
        case 6:
        case 10:
        case 11:
          sub_1C2FF31A4();
          break;
        case 7:
          v19 = a2;
          v20 = a1;
          v21 = a3;
          v22 = a4;
          v23 = &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints;
          v24 = type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint;
          v25 = &qword_1EF819348;
          v26 = &protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DisplayHint;
LABEL_13:
          sub_1C2FF30E0(v19, v20, v21, v22, (uint64_t)v23, v24, v25, (uint64_t)v26);
          break;
        case 8:
        case 9:
        case 14:
        case 16:
        case 17:
        case 21:
          sub_1C2FF3368();
          break;
        case 12:
        case 13:
          sub_1C2FF3224();
          break;
        case 15:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState;
          v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState;
          v17 = &qword_1EF819360;
          v18 = &protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AssistantSignalState;
          goto LABEL_21;
        case 18:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb;
          v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue;
          v17 = &qword_1EF819318;
          v18 = &protocol conformance descriptor for Com_Apple_Siri_Product_Proto_SemanticValue;
          goto LABEL_21;
        case 19:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID;
          goto LABEL_20;
        case 20:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID;
LABEL_20:
          v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid;
          v17 = &qword_1EF819378;
          v18 = &protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Uuid;
LABEL_21:
          sub_1C2FF32A4(v11, v12, v13, v14, (uint64_t)v15, v16, v17, (uint64_t)v18);
          break;
        default:
          break;
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t sub_1C2FF2FE8()
{
  swift_beginAccess();
  sub_1C33789A4();
  return swift_endAccess();
}

uint64_t sub_1C2FF3064()
{
  swift_beginAccess();
  sub_1C33789A4();
  return swift_endAccess();
}

uint64_t sub_1C2FF30E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  swift_beginAccess();
  a6(0);
  sub_1C2FF6DE0(a7, a6, a8);
  sub_1C3378A64();
  return swift_endAccess();
}

uint64_t sub_1C2FF31A4()
{
  swift_beginAccess();
  sub_1C33789F8();
  return swift_endAccess();
}

uint64_t sub_1C2FF3224()
{
  swift_beginAccess();
  sub_1C3378A34();
  return swift_endAccess();
}

uint64_t sub_1C2FF32A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  swift_beginAccess();
  a6(0);
  sub_1C2FF6DE0(a7, a6, a8);
  sub_1C3378A70();
  return swift_endAccess();
}

uint64_t sub_1C2FF3368()
{
  swift_beginAccess();
  sub_1C33789A4();
  return swift_endAccess();
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t result;

  type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0);
  v7 = swift_retain();
  sub_1C2FF3478(v7, a1, a2, a3);
  result = swift_release();
  if (!v3)
    return sub_1C33788FC();
  return result;
}

uint64_t sub_1C2FF3478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDE10);
  v8 = MEMORY[0x1E0C80A78](v7);
  v70 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v73 = (uint64_t)&v68 - v10;
  v76 = type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
  v72 = *(_QWORD *)(v76 - 8);
  v11 = MEMORY[0x1E0C80A78](v76);
  v68 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v69 = (uint64_t)&v68 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  MEMORY[0x1E0C80A78](v14);
  v75 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v74 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v71 = (uint64_t)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE038);
  MEMORY[0x1E0C80A78](v17);
  v79 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0);
  v78 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v77 = (uint64_t)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE0D0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1C337883C();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v84 = a1;
  v27 = *(unsigned __int8 *)(a1 + 16);
  v82 = a3;
  if (v27 == 1)
  {
    v28 = v83;
    result = sub_1C3378AE8();
    v30 = v28;
    if (v28)
      return result;
  }
  else
  {
    v30 = v83;
  }
  v31 = a4;
  v32 = v84;
  swift_beginAccess();
  if (*(_BYTE *)(v32 + 17) == 1)
  {
    result = sub_1C3378AE8();
    if (v30)
      return result;
  }
  v83 = v31;
  v33 = v84
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget;
  swift_beginAccess();
  sub_1C2FF6CFC(v33, (uint64_t)v22, &qword_1ED7CE0D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_1C2FF9138((uint64_t)v22, &qword_1ED7CE0D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
    sub_1C2FF6DE0(&qword_1EF819480, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA35F8], MEMORY[0x1E0DA35E8]);
    sub_1C3378B6C();
    if (v30)
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  }
  v34 = v84
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v34 + 16))
  {
    sub_1C2FF6DE0(&qword_1EF819318, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_SemanticValue);
    swift_bridgeObjectRetain();
    sub_1C3378B60();
    if (v30)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v35 = v84
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v35 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1C3378B24();
    if (v30)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v36 = v84
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v36 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1C3378B24();
    if (v30)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v37 = v84
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v37 + 16))
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
    sub_1C2FF6DE0(&qword_1EF819348, type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DisplayHint);
    swift_bridgeObjectRetain();
    sub_1C3378B60();
    if (v30)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v38 = (_BYTE *)(v84
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch);
  swift_beginAccess();
  if (*v38 == 1)
  {
    result = sub_1C3378AE8();
    if (v30)
      return result;
  }
  v39 = (_BYTE *)(v84
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation);
  swift_beginAccess();
  if (*v39 == 1)
  {
    result = sub_1C3378AE8();
    if (v30)
      return result;
  }
  v40 = v84
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v40 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1C3378B24();
    if (v30)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v41 = v84
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v41 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1C3378B24();
    if (v30)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v42 = (_QWORD *)(v84
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
  swift_beginAccess();
  v43 = v42[1];
  v44 = HIBYTE(v43) & 0xF;
  if ((v43 & 0x2000000000000000) == 0)
    v44 = *v42 & 0xFFFFFFFFFFFFLL;
  if (v44)
  {
    swift_bridgeObjectRetain();
    sub_1C3378B3C();
    if (!v30)
    {
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_39:
  v45 = (_QWORD *)(v84
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName);
  swift_beginAccess();
  v46 = v45[1];
  v47 = HIBYTE(v46) & 0xF;
  if ((v46 & 0x2000000000000000) == 0)
    v47 = *v45 & 0xFFFFFFFFFFFFLL;
  if (v47)
  {
    swift_bridgeObjectRetain();
    sub_1C3378B3C();
    if (v30)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v48 = (_BYTE *)(v84
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking);
  swift_beginAccess();
  if (*v48 != 1 || (result = sub_1C3378AE8(), !v30))
  {
    v49 = v84
        + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState;
    swift_beginAccess();
    v50 = v79;
    sub_1C2FF6CFC(v49, v79, &qword_1ED7CE038);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v50, 1, v80) == 1)
    {
      sub_1C2FF9138(v50, &qword_1ED7CE038);
    }
    else
    {
      v51 = v50;
      v52 = v77;
      sub_1C2FF6C38(v51, v77, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
      sub_1C2FF6DE0(&qword_1EF819360, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
      sub_1C3378B6C();
      if (v30)
        return sub_1C2FF6CC0(v52, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
      sub_1C2FF6CC0(v52, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
    }
    v53 = (_BYTE *)(v84
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure);
    swift_beginAccess();
    if (*v53 != 1 || (result = sub_1C3378AE8(), !v30))
    {
      v54 = (_BYTE *)(v84
                    + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation);
      swift_beginAccess();
      if (*v54 != 1 || (result = sub_1C3378AE8(), !v30))
      {
        v55 = v84
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb;
        swift_beginAccess();
        v56 = v75;
        sub_1C2FF6CFC(v55, v75, &qword_1ED7CDFF0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v56, 1, v81) == 1)
        {
          sub_1C2FF9138(v56, &qword_1ED7CDFF0);
        }
        else
        {
          v57 = v71;
          sub_1C2FF6C38(v56, v71, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
          sub_1C2FF6DE0(&qword_1EF819318, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_SemanticValue);
          sub_1C3378B6C();
          result = sub_1C2FF6CC0(v57, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
          if (v30)
            return result;
        }
        v58 = v84
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID;
        swift_beginAccess();
        v59 = v73;
        sub_1C2FF6CFC(v58, v73, &qword_1ED7CDE10);
        v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
        if (v60(v59, 1, v76) == 1)
        {
          sub_1C2FF9138(v59, &qword_1ED7CDE10);
        }
        else
        {
          v61 = v59;
          v62 = v69;
          sub_1C2FF6C38(v61, v69, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
          sub_1C2FF6DE0(&qword_1EF819378, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Uuid);
          sub_1C3378B6C();
          result = sub_1C2FF6CC0(v62, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
          if (v30)
            return result;
        }
        v63 = v84
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID;
        swift_beginAccess();
        v64 = v70;
        sub_1C2FF6CFC(v63, v70, &qword_1ED7CDE10);
        if (v60(v64, 1, v76) == 1)
        {
          sub_1C2FF9138(v64, &qword_1ED7CDE10);
        }
        else
        {
          v65 = v64;
          v66 = v68;
          sub_1C2FF6C38(v65, v68, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
          sub_1C2FF6DE0(&qword_1EF819378, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Uuid);
          sub_1C3378B6C();
          result = sub_1C2FF6CC0(v66, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
          if (v30)
            return result;
        }
        v67 = (_BYTE *)(v84
                      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb);
        result = swift_beginAccess();
        if (*v67 == 1)
          return sub_1C3378AE8();
      }
    }
  }
  return result;
}

uint64_t sub_1C2FF4164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  char v58;
  _QWORD **v59;
  _QWORD *v60;
  _QWORD **v61;
  _QWORD **v62;
  _QWORD *v63;
  _QWORD **v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  char v69;
  unsigned __int8 *v70;
  int v71;
  unsigned __int8 *v72;
  unsigned __int8 *v73;
  int v74;
  unsigned __int8 *v75;
  _QWORD **v76;
  _QWORD *v77;
  _QWORD **v78;
  _QWORD **v79;
  _QWORD *v80;
  _QWORD **v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  unsigned __int8 *v90;
  int v91;
  unsigned __int8 *v92;
  char v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 *v103;
  int v104;
  unsigned __int8 *v105;
  unsigned __int8 *v106;
  int v107;
  unsigned __int8 *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 *v118;
  uint64_t *v119;
  unsigned __int8 *v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char v138;
  _BYTE *v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  char v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unsigned __int8 *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unsigned __int8 *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;

  v165 = type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
  v157 = *(_QWORD *)(v165 - 8);
  v4 = MEMORY[0x1E0C80A78](v165);
  v151 = (uint64_t *)((char *)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v154 = (uint64_t *)((char *)&v150 - v6);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819458);
  v7 = MEMORY[0x1E0C80A78](v158);
  v156 = (uint64_t)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v161 = (uint64_t)&v150 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDE10);
  v11 = MEMORY[0x1E0C80A78](v10);
  v152 = (uint64_t *)((char *)&v150 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x1E0C80A78](v11);
  v153 = (uint64_t)&v150 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v159 = (uint64_t *)((char *)&v150 - v16);
  MEMORY[0x1E0C80A78](v15);
  v160 = (uint64_t)&v150 - v17;
  v167 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v163 = *(_QWORD *)(v167 - 8);
  MEMORY[0x1E0C80A78](v167);
  v155 = (uint64_t)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819460);
  MEMORY[0x1E0C80A78](v162);
  v168 = (uint64_t)&v150 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v164 = (uint64_t)&v150 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v166 = (uint64_t)&v150 - v23;
  v24 = type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0);
  v171 = *(_QWORD *)(v24 - 8);
  v172 = v24;
  MEMORY[0x1E0C80A78](v24);
  v169 = (unsigned __int8 *)&v150 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819468);
  MEMORY[0x1E0C80A78](v170);
  v174 = (uint64_t)&v150 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE038);
  v28 = MEMORY[0x1E0C80A78](v27);
  v173 = (unsigned __int8 *)&v150 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v175 = (uint64_t)&v150 - v30;
  v31 = sub_1C337883C();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v176 = (char *)&v150 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819470);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v150 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE0D0);
  v38 = MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v150 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v42 = (char *)&v150 - v41;
  swift_beginAccess();
  v43 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess();
  if (v43 != *(unsigned __int8 *)(a2 + 16))
    goto LABEL_26;
  swift_beginAccess();
  v44 = *(unsigned __int8 *)(a1 + 17);
  swift_beginAccess();
  if (v44 != *(unsigned __int8 *)(a2 + 17))
    goto LABEL_26;
  v45 = a1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget;
  swift_beginAccess();
  v150 = a1;
  v46 = a2;
  sub_1C2FF6CFC(v45, (uint64_t)v42, &qword_1ED7CE0D0);
  v47 = a2
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget;
  swift_beginAccess();
  v48 = (uint64_t)&v36[*(int *)(v34 + 48)];
  sub_1C2FF6CFC((uint64_t)v42, (uint64_t)v36, &qword_1ED7CE0D0);
  sub_1C2FF6CFC(v47, v48, &qword_1ED7CE0D0);
  v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v49((uint64_t)v36, 1, v31) == 1)
  {
    v50 = v150;
    swift_retain();
    swift_retain();
    sub_1C2FF9138((uint64_t)v42, &qword_1ED7CE0D0);
    if (v49(v48, 1, v31) == 1)
    {
      sub_1C2FF9138((uint64_t)v36, &qword_1ED7CE0D0);
      goto LABEL_10;
    }
LABEL_8:
    sub_1C2FF9138((uint64_t)v36, &qword_1EF819470);
    goto LABEL_25;
  }
  v50 = v150;
  sub_1C2FF6CFC((uint64_t)v36, (uint64_t)v40, &qword_1ED7CE0D0);
  if (v49(v48, 1, v31) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1C2FF9138((uint64_t)v42, &qword_1ED7CE0D0);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v40, v31);
    goto LABEL_8;
  }
  v51 = v176;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v176, v48, v31);
  sub_1C2FF6DE0(&qword_1EF819478, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA35F8], MEMORY[0x1E0DA3608]);
  swift_retain();
  swift_retain();
  v52 = sub_1C3378BD8();
  v53 = *(void (**)(char *, uint64_t))(v32 + 8);
  v53(v51, v31);
  sub_1C2FF9138((uint64_t)v42, &qword_1ED7CE0D0);
  v53(v40, v31);
  sub_1C2FF9138((uint64_t)v36, &qword_1ED7CE0D0);
  if ((v52 & 1) == 0)
    goto LABEL_25;
LABEL_10:
  v54 = (uint64_t *)(v50
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions);
  swift_beginAccess();
  v55 = *v54;
  v56 = (uint64_t *)(v46
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions);
  swift_beginAccess();
  v57 = *v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58 = sub_1C3005620(v55, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v58 & 1) == 0)
    goto LABEL_25;
  v59 = (_QWORD **)(v50
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints);
  swift_beginAccess();
  v60 = *v59;
  v61 = (_QWORD **)(v46
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints);
  swift_beginAccess();
  if ((sub_1C30020E8(v60, *v61) & 1) == 0)
    goto LABEL_25;
  v62 = (_QWORD **)(v50
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints);
  swift_beginAccess();
  v63 = *v62;
  v64 = (_QWORD **)(v46
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints);
  swift_beginAccess();
  if ((sub_1C30020E8(v63, *v64) & 1) == 0)
    goto LABEL_25;
  v65 = (uint64_t *)(v50
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints);
  swift_beginAccess();
  v66 = *v65;
  v67 = (uint64_t *)(v46
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints);
  swift_beginAccess();
  v68 = *v67;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v69 = sub_1C3005900(v66, v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v69 & 1) == 0)
    goto LABEL_25;
  v70 = (unsigned __int8 *)(v50
                          + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch);
  swift_beginAccess();
  v71 = *v70;
  v72 = (unsigned __int8 *)(v46
                          + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch);
  swift_beginAccess();
  if (v71 != *v72)
    goto LABEL_25;
  v73 = (unsigned __int8 *)(v50
                          + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation);
  swift_beginAccess();
  v74 = *v73;
  v75 = (unsigned __int8 *)(v46
                          + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation);
  swift_beginAccess();
  if (v74 != *v75)
    goto LABEL_25;
  v76 = (_QWORD **)(v50
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints);
  swift_beginAccess();
  v77 = *v76;
  v78 = (_QWORD **)(v46
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints);
  swift_beginAccess();
  if ((sub_1C30020E8(v77, *v78) & 1) == 0)
    goto LABEL_25;
  v79 = (_QWORD **)(v50
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints);
  swift_beginAccess();
  v80 = *v79;
  v81 = (_QWORD **)(v46
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints);
  swift_beginAccess();
  if ((sub_1C30020E8(v80, *v81) & 1) == 0)
    goto LABEL_25;
  v82 = (uint64_t *)(v50
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
  swift_beginAccess();
  v83 = *v82;
  v84 = v82[1];
  v85 = (_QWORD *)(v46
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
  swift_beginAccess();
  if ((v83 != *v85 || v84 != v85[1]) && (sub_1C3379184() & 1) == 0)
    goto LABEL_25;
  v86 = (uint64_t *)(v50
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName);
  swift_beginAccess();
  v87 = *v86;
  v88 = v86[1];
  v89 = (_QWORD *)(v46
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName);
  swift_beginAccess();
  if ((v87 != *v89 || v88 != v89[1]) && (sub_1C3379184() & 1) == 0)
    goto LABEL_25;
  v90 = (unsigned __int8 *)(v50
                          + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking);
  swift_beginAccess();
  v91 = *v90;
  v92 = (unsigned __int8 *)(v46
                          + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking);
  swift_beginAccess();
  if (v91 != *v92)
    goto LABEL_25;
  v95 = v50;
  v96 = v50
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState;
  swift_beginAccess();
  v97 = v175;
  sub_1C2FF6CFC(v96, v175, &qword_1ED7CE038);
  v98 = v46
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState;
  swift_beginAccess();
  v99 = v174;
  v100 = v174 + *(int *)(v170 + 48);
  sub_1C2FF6CFC(v97, v174, &qword_1ED7CE038);
  sub_1C2FF6CFC(v98, v100, &qword_1ED7CE038);
  v101 = v172;
  v102 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
  if (v102(v99, 1, v172) == 1)
  {
    sub_1C2FF9138(v175, &qword_1ED7CE038);
    if (v102(v100, 1, v101) == 1)
    {
      sub_1C2FF9138(v99, &qword_1ED7CE038);
      goto LABEL_31;
    }
LABEL_38:
    v115 = &qword_1EF819468;
    v116 = v99;
LABEL_66:
    sub_1C2FF9138(v116, v115);
    goto LABEL_25;
  }
  sub_1C2FF6CFC(v99, (uint64_t)v173, &qword_1ED7CE038);
  if (v102(v100, 1, v101) == 1)
  {
    sub_1C2FF9138(v175, &qword_1ED7CE038);
    sub_1C2FF6CC0((uint64_t)v173, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
    v99 = v174;
    goto LABEL_38;
  }
  v117 = v100;
  v118 = v169;
  sub_1C2FF6C38(v117, (uint64_t)v169, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
  if (*v173 != *v118)
  {
    sub_1C2FF6CC0((uint64_t)v169, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
    v119 = &qword_1ED7CE038;
    sub_1C2FF9138(v175, &qword_1ED7CE038);
    sub_1C2FF6CC0((uint64_t)v173, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
    v116 = v174;
LABEL_41:
    v115 = v119;
    goto LABEL_66;
  }
  v120 = v173;
  v121 = (uint64_t)v169;
  sub_1C3378914();
  sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
  v122 = sub_1C3378BD8();
  sub_1C2FF6CC0(v121, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
  sub_1C2FF9138(v175, &qword_1ED7CE038);
  sub_1C2FF6CC0((uint64_t)v120, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
  sub_1C2FF9138(v174, &qword_1ED7CE038);
  if ((v122 & 1) == 0)
    goto LABEL_25;
LABEL_31:
  v103 = (unsigned __int8 *)(v95
                           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure);
  swift_beginAccess();
  v104 = *v103;
  v105 = (unsigned __int8 *)(v46
                           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure);
  swift_beginAccess();
  if (v104 != *v105)
    goto LABEL_25;
  v106 = (unsigned __int8 *)(v95
                           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation);
  swift_beginAccess();
  v107 = *v106;
  v108 = (unsigned __int8 *)(v46
                           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation);
  swift_beginAccess();
  if (v107 != *v108)
    goto LABEL_25;
  v109 = v95
       + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb;
  swift_beginAccess();
  v110 = v166;
  sub_1C2FF6CFC(v109, v166, &qword_1ED7CDFF0);
  v111 = v46
       + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb;
  swift_beginAccess();
  v112 = v168;
  v113 = v168 + *(int *)(v162 + 48);
  sub_1C2FF6CFC(v110, v168, &qword_1ED7CDFF0);
  sub_1C2FF6CFC(v111, v113, &qword_1ED7CDFF0);
  v114 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v163 + 48);
  if (v114(v112, 1, v167) == 1)
  {
    sub_1C2FF9138(v166, &qword_1ED7CDFF0);
    if (v114(v113, 1, v167) == 1)
    {
      sub_1C2FF9138(v168, &qword_1ED7CDFF0);
      goto LABEL_48;
    }
LABEL_46:
    v115 = &qword_1EF819460;
    v116 = v168;
    goto LABEL_66;
  }
  sub_1C2FF6CFC(v168, v164, &qword_1ED7CDFF0);
  if (v114(v113, 1, v167) == 1)
  {
    sub_1C2FF9138(v166, &qword_1ED7CDFF0);
    sub_1C2FF6CC0(v164, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    goto LABEL_46;
  }
  v123 = v155;
  sub_1C2FF6C38(v113, v155, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  v124 = v164;
  v125 = static Com_Apple_Siri_Product_Proto_SemanticValue.== infix(_:_:)(v164, v123);
  sub_1C2FF6CC0(v123, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  sub_1C2FF9138(v166, &qword_1ED7CDFF0);
  sub_1C2FF6CC0(v124, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  sub_1C2FF9138(v168, &qword_1ED7CDFF0);
  if ((v125 & 1) == 0)
    goto LABEL_25;
LABEL_48:
  v126 = v95
       + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID;
  swift_beginAccess();
  v119 = &qword_1ED7CDE10;
  v127 = v160;
  sub_1C2FF6CFC(v126, v160, &qword_1ED7CDE10);
  v128 = v46
       + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID;
  swift_beginAccess();
  v129 = v161;
  v130 = v161 + *(int *)(v158 + 48);
  sub_1C2FF6CFC(v127, v161, &qword_1ED7CDE10);
  sub_1C2FF6CFC(v128, v130, &qword_1ED7CDE10);
  v131 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v157 + 48);
  if (v131(v129, 1, v165) == 1)
  {
    sub_1C2FF9138(v160, &qword_1ED7CDE10);
    if (v131(v130, 1, v165) == 1)
    {
      sub_1C2FF9138(v161, &qword_1ED7CDE10);
      goto LABEL_51;
    }
LABEL_57:
    v115 = &qword_1EF819458;
    v116 = v161;
    goto LABEL_66;
  }
  sub_1C2FF6CFC(v161, (uint64_t)v159, &qword_1ED7CDE10);
  if (v131(v130, 1, v165) == 1)
  {
    sub_1C2FF9138(v160, &qword_1ED7CDE10);
    sub_1C2FF6CC0((uint64_t)v159, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
    goto LABEL_57;
  }
  v140 = v130;
  v141 = v154;
  sub_1C2FF6C38(v140, (uint64_t)v154, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
  if (*v159 != *v141 || v159[1] != v154[1])
  {
    sub_1C2FF6CC0((uint64_t)v154, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
    sub_1C2FF9138(v160, &qword_1ED7CDE10);
    sub_1C2FF6CC0((uint64_t)v159, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
    v116 = v161;
    goto LABEL_41;
  }
  v142 = v159;
  v143 = (uint64_t)v154;
  sub_1C3378914();
  sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
  v144 = sub_1C3378BD8();
  sub_1C2FF6CC0(v143, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
  sub_1C2FF9138(v160, &qword_1ED7CDE10);
  sub_1C2FF6CC0((uint64_t)v142, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
  sub_1C2FF9138(v161, &qword_1ED7CDE10);
  if ((v144 & 1) == 0)
    goto LABEL_25;
LABEL_51:
  v132 = v95
       + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID;
  swift_beginAccess();
  v119 = &qword_1ED7CDE10;
  v133 = v153;
  sub_1C2FF6CFC(v132, v153, &qword_1ED7CDE10);
  v134 = v46
       + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID;
  swift_beginAccess();
  v135 = v156;
  v136 = v156 + *(int *)(v158 + 48);
  sub_1C2FF6CFC(v133, v156, &qword_1ED7CDE10);
  sub_1C2FF6CFC(v134, v136, &qword_1ED7CDE10);
  if (v131(v135, 1, v165) == 1)
  {
    sub_1C2FF9138(v153, &qword_1ED7CDE10);
    if (v131(v136, 1, v165) == 1)
    {
      sub_1C2FF9138(v156, &qword_1ED7CDE10);
LABEL_54:
      v137 = (char *)(v95
                    + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb);
      swift_beginAccess();
      v138 = *v137;
      swift_release();
      v139 = (_BYTE *)(v46
                     + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb);
      swift_beginAccess();
      LOBYTE(v139) = *v139;
      swift_release();
      v93 = v138 ^ v139 ^ 1;
      return v93 & 1;
    }
    goto LABEL_65;
  }
  sub_1C2FF6CFC(v156, (uint64_t)v152, &qword_1ED7CDE10);
  if (v131(v136, 1, v165) == 1)
  {
    sub_1C2FF9138(v153, &qword_1ED7CDE10);
    sub_1C2FF6CC0((uint64_t)v152, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
LABEL_65:
    v115 = &qword_1EF819458;
    v116 = v156;
    goto LABEL_66;
  }
  v145 = v136;
  v146 = v151;
  sub_1C2FF6C38(v145, (uint64_t)v151, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
  if (*v152 != *v146 || v152[1] != v151[1])
  {
    sub_1C2FF6CC0((uint64_t)v151, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
    sub_1C2FF9138(v153, &qword_1ED7CDE10);
    sub_1C2FF6CC0((uint64_t)v152, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
    v116 = v156;
    goto LABEL_41;
  }
  v147 = (uint64_t)v151;
  v148 = v152;
  sub_1C3378914();
  sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
  v149 = sub_1C3378BD8();
  sub_1C2FF6CC0(v147, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
  sub_1C2FF9138(v153, &qword_1ED7CDE10);
  sub_1C2FF6CC0((uint64_t)v148, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
  sub_1C2FF9138(v156, &qword_1ED7CDE10);
  if ((v149 & 1) != 0)
    goto LABEL_54;
LABEL_25:
  swift_release();
  swift_release();
LABEL_26:
  v93 = 0;
  return v93 & 1;
}

uint64_t Com_Apple_Siri_Product_Proto_PromptContext.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext, &qword_1EF819338, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_PromptContext);
}

uint64_t sub_1C2FF55C4(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  sub_1C3379208();
  a1(0);
  sub_1C2FF6DE0(a2, a1, a3);
  sub_1C3378BC0();
  return sub_1C3379244();
}

uint64_t sub_1C2FF5640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v4 = *(int *)(a1 + 20);
  if (qword_1ED7CDE98 != -1)
    swift_once();
  *(_QWORD *)(a2 + v4) = qword_1ED7CDE90;
  return swift_retain();
}

unint64_t sub_1C2FF569C()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_1C2FF56B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_PromptContext.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C2FF56CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_PromptContext.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C2FF56E0()
{
  sub_1C2FF6DE0(&qword_1EF819430, type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_PromptContext);
  return sub_1C3378950();
}

uint64_t sub_1C2FF5730@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1ED7B31D0, (uint64_t)qword_1ED7B31B0, a1);
}

uint64_t sub_1C2FF574C()
{
  sub_1C2FF6DE0(&qword_1EF819388, type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_PromptContext);
  return sub_1C3378AA0();
}

uint64_t sub_1C2FF578C()
{
  sub_1C3379208();
  sub_1C3378BC0();
  return sub_1C3379244();
}

uint64_t sub_1C2FF57E0()
{
  sub_1C2FF6DE0(&qword_1EF819388, type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_PromptContext);
  return sub_1C3378AAC();
}

uint64_t sub_1C2FF5830()
{
  sub_1C3379208();
  sub_1C3378BC0();
  return sub_1C3379244();
}

uint64_t _s12SiriOntology010Com_Apple_A35_Product_Proto_AssistantSignalStateV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  void (*v14)(char *, unsigned __int8 *, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *a2)
  {
    v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0);
    v13 = &a1[*(int *)(v12 + 20)];
    v14 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v8, &a2[*(int *)(v12 + 20)], v4);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v11 = sub_1C3378BD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A28_Product_Proto_PromptContextV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a2 + v11);
  if (v12 == v13
    || (swift_retain(), swift_retain(), v14 = sub_1C2FF4164(v12, v13), swift_release(), swift_release(), (v14 & 1) != 0))
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    v15(v8, a2, v4);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v16 = sub_1C3378BD8();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A26_Product_Proto_DisplayHintV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v67 = a2;
  v3 = sub_1C3378914();
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v57 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v56 - v6;
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v61 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819460);
  v11 = MEMORY[0x1E0C80A78](v10);
  v64 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v56 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v60 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v66 = (uint64_t)&v56 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v63 = (uint64_t)&v56 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v56 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v56 - v26;
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v56 - v28;
  v30 = type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint(0);
  v31 = *(int *)(v30 + 20);
  v65 = a1;
  sub_1C2FF6CFC(a1 + v31, (uint64_t)v29, &qword_1ED7CDFF0);
  sub_1C2FF6CFC(v67 + *(int *)(v30 + 20), (uint64_t)v27, &qword_1ED7CDFF0);
  v62 = v10;
  v32 = *(int *)(v10 + 48);
  v33 = v7;
  v34 = (uint64_t)&v14[v32];
  sub_1C2FF6CFC((uint64_t)v29, (uint64_t)v14, &qword_1ED7CDFF0);
  sub_1C2FF6CFC((uint64_t)v27, v34, &qword_1ED7CDFF0);
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v35((uint64_t)v14, 1, v33) != 1)
  {
    sub_1C2FF6CFC((uint64_t)v14, (uint64_t)v24, &qword_1ED7CDFF0);
    if (v35(v34, 1, v33) != 1)
    {
      v37 = v61;
      sub_1C2FF6C38(v34, v61, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
      v38 = _s12SiriOntology010Com_Apple_A28_Product_Proto_SemanticValueV2eeoiySbAC_ACtFZ_0((uint64_t)v24, v37);
      sub_1C2FF6CC0(v37, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
      sub_1C2FF9138((uint64_t)v27, &qword_1ED7CDFF0);
      sub_1C2FF9138((uint64_t)v29, &qword_1ED7CDFF0);
      sub_1C2FF6CC0((uint64_t)v24, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
      sub_1C2FF9138((uint64_t)v14, &qword_1ED7CDFF0);
      if ((v38 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_1C2FF9138((uint64_t)v27, &qword_1ED7CDFF0);
    sub_1C2FF9138((uint64_t)v29, &qword_1ED7CDFF0);
    sub_1C2FF6CC0((uint64_t)v24, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
LABEL_6:
    v36 = (uint64_t)v14;
LABEL_14:
    sub_1C2FF9138(v36, &qword_1EF819460);
    goto LABEL_15;
  }
  sub_1C2FF9138((uint64_t)v27, &qword_1ED7CDFF0);
  sub_1C2FF9138((uint64_t)v29, &qword_1ED7CDFF0);
  if (v35(v34, 1, v33) != 1)
    goto LABEL_6;
  sub_1C2FF9138((uint64_t)v14, &qword_1ED7CDFF0);
LABEL_8:
  v39 = v65;
  v40 = v63;
  sub_1C2FF6CFC(v65 + *(int *)(v30 + 24), v63, &qword_1ED7CDFF0);
  v41 = v66;
  v42 = v67;
  sub_1C2FF6CFC(v67 + *(int *)(v30 + 24), v66, &qword_1ED7CDFF0);
  v43 = v64;
  v44 = v64 + *(int *)(v62 + 48);
  sub_1C2FF6CFC(v40, v64, &qword_1ED7CDFF0);
  sub_1C2FF6CFC(v41, v44, &qword_1ED7CDFF0);
  if (v35(v43, 1, v33) == 1)
  {
    sub_1C2FF9138(v41, &qword_1ED7CDFF0);
    sub_1C2FF9138(v40, &qword_1ED7CDFF0);
    if (v35(v44, 1, v33) == 1)
    {
      sub_1C2FF9138(v43, &qword_1ED7CDFF0);
LABEL_18:
      v51 = v58;
      v50 = v59;
      v52 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
      v53 = v56;
      v52(v56, v39, v59);
      v54 = v57;
      v52(v57, v42, v50);
      sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v46 = sub_1C3378BD8();
      v55 = *(void (**)(char *, uint64_t))(v51 + 8);
      v55(v54, v50);
      v55(v53, v50);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v60;
  sub_1C2FF6CFC(v43, v60, &qword_1ED7CDFF0);
  if (v35(v44, 1, v33) == 1)
  {
    sub_1C2FF9138(v66, &qword_1ED7CDFF0);
    sub_1C2FF9138(v40, &qword_1ED7CDFF0);
    sub_1C2FF6CC0(v45, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
LABEL_13:
    v36 = v43;
    goto LABEL_14;
  }
  v48 = v61;
  sub_1C2FF6C38(v44, v61, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  v49 = _s12SiriOntology010Com_Apple_A28_Product_Proto_SemanticValueV2eeoiySbAC_ACtFZ_0(v45, v48);
  sub_1C2FF6CC0(v48, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  sub_1C2FF9138(v66, &qword_1ED7CDFF0);
  sub_1C2FF9138(v40, &qword_1ED7CDFF0);
  sub_1C2FF6CC0(v45, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  sub_1C2FF9138(v43, &qword_1ED7CDFF0);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A19_Product_Proto_UuidV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1))
  {
    v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
    v12 = (char *)a1 + *(int *)(v11 + 24);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 24)], v4);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v14 = sub_1C3378BD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1C2FF6268(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void);
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  _BYTE *v79;
  _BYTE *v80;
  _QWORD *v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD *v84;
  _BYTE *v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDE10);
  MEMORY[0x1E0C80A78](v3);
  v94 = (uint64_t)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
  MEMORY[0x1E0C80A78](v5);
  v93 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE038);
  MEMORY[0x1E0C80A78](v7);
  v92 = (uint64_t)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE0D0);
  MEMORY[0x1E0C80A78](v9);
  v76 = (uint64_t)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)(v1 + 16) = 0;
  v75 = v1 + 17;
  v11 = v1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget;
  v12 = sub_1C337883C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions) = MEMORY[0x1E0DEE9D8];
  v15 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints) = v13;
  v77 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints) = v13;
  v78 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints) = v13;
  v79 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch) = 0;
  v80 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation) = 0;
  v81 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints) = v13;
  v82 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints) = v13;
  v16 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
  v83 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
  *v16 = 0;
  v16[1] = 0xE000000000000000;
  v17 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName);
  *v17 = 0;
  v17[1] = 0xE000000000000000;
  v84 = v17;
  v85 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking);
  *v85 = 0;
  v18 = v1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState;
  v86 = v1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState;
  v19 = type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v87 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure) = 0;
  v88 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation) = 0;
  v20 = v1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb;
  v89 = v1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb;
  v21 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = v1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID;
  v90 = v1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID;
  v23 = type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid(0);
  v24 = *(void (**)(void))(*(_QWORD *)(v23 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v22, 1, 1, v23);
  v91 = v1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID;
  v24();
  v25 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb) = 0;
  swift_beginAccess();
  LOBYTE(v20) = *(_BYTE *)(a1 + 16);
  swift_beginAccess();
  *(_BYTE *)(v1 + 16) = v20;
  swift_beginAccess();
  LOBYTE(v20) = *(_BYTE *)(a1 + 17);
  swift_beginAccess();
  *(_BYTE *)(v1 + 17) = v20;
  v26 = a1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__ambiguityTarget;
  swift_beginAccess();
  v27 = v76;
  sub_1C2FF6CFC(v26, v76, &qword_1ED7CE0D0);
  swift_beginAccess();
  sub_1C2FF6D84(v27, v11, &qword_1ED7CE0D0);
  swift_endAccess();
  v28 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions);
  swift_beginAccess();
  v29 = *v28;
  swift_beginAccess();
  *v14 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints);
  swift_beginAccess();
  v31 = *v30;
  swift_beginAccess();
  *v15 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints);
  swift_beginAccess();
  v33 = *v32;
  v34 = v77;
  swift_beginAccess();
  *v34 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints);
  swift_beginAccess();
  v36 = *v35;
  v37 = v78;
  swift_beginAccess();
  *v37 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch);
  swift_beginAccess();
  LOBYTE(v38) = *v38;
  v39 = v79;
  swift_beginAccess();
  *v39 = (_BYTE)v38;
  v40 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation);
  swift_beginAccess();
  LOBYTE(v40) = *v40;
  v41 = v80;
  swift_beginAccess();
  *v41 = (_BYTE)v40;
  v42 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints);
  swift_beginAccess();
  v43 = *v42;
  v44 = v81;
  swift_beginAccess();
  *v44 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints);
  swift_beginAccess();
  v46 = *v45;
  v47 = v82;
  swift_beginAccess();
  *v47 = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
  swift_beginAccess();
  v50 = *v48;
  v49 = v48[1];
  v51 = v83;
  swift_beginAccess();
  *v51 = v50;
  v51[1] = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v52 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName);
  swift_beginAccess();
  v54 = *v52;
  v53 = v52[1];
  v55 = v84;
  swift_beginAccess();
  *v55 = v54;
  v55[1] = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking);
  swift_beginAccess();
  LOBYTE(v56) = *v56;
  v57 = v85;
  swift_beginAccess();
  *v57 = (_BYTE)v56;
  v58 = a1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__assistantSignalState;
  swift_beginAccess();
  v59 = v92;
  sub_1C2FF6CFC(v58, v92, &qword_1ED7CE038);
  v60 = v86;
  swift_beginAccess();
  sub_1C2FF6D84(v59, v60, &qword_1ED7CE038);
  swift_endAccess();
  v61 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure);
  swift_beginAccess();
  LOBYTE(v61) = *v61;
  v62 = v87;
  swift_beginAccess();
  *v62 = (_BYTE)v61;
  v63 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation);
  swift_beginAccess();
  LOBYTE(v63) = *v63;
  v64 = v88;
  swift_beginAccess();
  *v64 = (_BYTE)v63;
  v65 = a1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__currentTaskVerb;
  swift_beginAccess();
  v66 = v93;
  sub_1C2FF6CFC(v65, v93, &qword_1ED7CDFF0);
  v67 = v89;
  swift_beginAccess();
  sub_1C2FF6D84(v66, v67, &qword_1ED7CDFF0);
  swift_endAccess();
  v68 = a1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID;
  swift_beginAccess();
  v69 = v94;
  sub_1C2FF6CFC(v68, v94, &qword_1ED7CDE10);
  v70 = v90;
  swift_beginAccess();
  sub_1C2FF6D84(v69, v70, &qword_1ED7CDE10);
  swift_endAccess();
  v71 = a1
      + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID;
  swift_beginAccess();
  sub_1C2FF6CFC(v71, v69, &qword_1ED7CDE10);
  v72 = v91;
  swift_beginAccess();
  sub_1C2FF6D84(v69, v72, &qword_1ED7CDE10);
  swift_endAccess();
  v73 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb);
  swift_beginAccess();
  LOBYTE(v73) = *v73;
  swift_beginAccess();
  *v25 = (_BYTE)v73;
  return v1;
}

uint64_t sub_1C2FF6C38(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2FF6C7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2FF6CC0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2FF6CFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2FF6D40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2FF6D84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_1C2FF6DE0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1C3BD1B4C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2FF6E20()
{
  return sub_1C2FF6DE0(&qword_1EF819340, type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DisplayHint);
}

uint64_t sub_1C2FF6E4C()
{
  return sub_1C2FF6DE0(&qword_1EF819348, type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DisplayHint);
}

uint64_t sub_1C2FF6E78()
{
  return sub_1C2FF6DE0(&qword_1EF819320, type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DisplayHint);
}

uint64_t sub_1C2FF6EA4()
{
  return sub_1C2FF6DE0(&qword_1EF819350, type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DisplayHint);
}

uint64_t sub_1C2FF6ED0()
{
  return sub_1C2FF6DE0(&qword_1EF819358, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
}

uint64_t sub_1C2FF6EFC()
{
  return sub_1C2FF6DE0(&qword_1EF819360, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
}

uint64_t sub_1C2FF6F28()
{
  return sub_1C2FF6DE0(&qword_1EF819328, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
}

uint64_t sub_1C2FF6F54()
{
  return sub_1C2FF6DE0(&qword_1EF819368, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
}

uint64_t sub_1C2FF6F80()
{
  return sub_1C2FF6DE0(&qword_1EF819370, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Uuid);
}

uint64_t sub_1C2FF6FAC()
{
  return sub_1C2FF6DE0(&qword_1EF819378, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Uuid);
}

uint64_t sub_1C2FF6FD8()
{
  return sub_1C2FF6DE0(&qword_1EF819330, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Uuid);
}

uint64_t sub_1C2FF7004()
{
  return sub_1C2FF6DE0(&qword_1EF819380, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Uuid);
}

uint64_t sub_1C2FF7030()
{
  return sub_1C2FF6DE0(&qword_1ED7CDF58, type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_PromptContext);
}

uint64_t sub_1C2FF705C()
{
  return sub_1C2FF6DE0(&qword_1EF819388, type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_PromptContext);
}

uint64_t sub_1C2FF7088()
{
  return sub_1C2FF6DE0(&qword_1EF819338, type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_PromptContext);
}

uint64_t sub_1C2FF70B4()
{
  return sub_1C2FF6DE0(&qword_1EF819390, type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_PromptContext);
}

uint64_t sub_1C2FF70F0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_1C2FF7148@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_1C2FF71A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C2FEED4C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions, a2);
}

uint64_t sub_1C2FF71C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEEDB8(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__responseOptions);
}

uint64_t sub_1C2FF71E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C2FEED4C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints, a2);
}

uint64_t sub_1C2FF71FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEEDB8(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__domainHints);
}

uint64_t sub_1C2FF7218@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C2FEED4C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints, a2);
}

uint64_t sub_1C2FF7234(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEEDB8(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__promptTargetHints);
}

uint64_t sub_1C2FF7250@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C2FEED4C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints, a2);
}

uint64_t sub_1C2FF726C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEEDB8(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__displayHints);
}

uint64_t sub_1C2FF7288@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_17Tm(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch, a2);
}

uint64_t sub_1C2FF7294(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEF3B4(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__foregroundAppSubscribesToInAppSearch);
}

uint64_t sub_1C2FF72B0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_17Tm(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation, a2);
}

uint64_t keypath_get_17Tm@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*(_QWORD *)(a1
                           + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext(0) + 20))
               + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_1C2FF7324(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEF3B4(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__objectDisambiguation);
}

uint64_t sub_1C2FF7340@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C2FEED4C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints, a2);
}

uint64_t sub_1C2FF735C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEEDB8(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__alertDomainHints);
}

uint64_t sub_1C2FF7378@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C2FEED4C(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints, a2);
}

uint64_t sub_1C2FF7394(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEEDB8(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__backgroundDomainHints);
}

uint64_t sub_1C2FF73B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C2FEF914(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName, a2);
}

uint64_t sub_1C2FF73CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEF980(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousDomainName);
}

uint64_t sub_1C2FF73E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C2FEF914(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName, a2);
}

uint64_t sub_1C2FF7404(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEF980(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__previousNldomainName);
}

uint64_t sub_1C2FF7420@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_17Tm(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking, a2);
}

uint64_t sub_1C2FF742C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEF3B4(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__listenAfterSpeaking);
}

uint64_t sub_1C2FF744C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FF0628(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState, (uint64_t (*)(char *))Com_Apple_Siri_Product_Proto_PromptContext.assistantSignalState.setter);
}

uint64_t sub_1C2FF7470@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_17Tm(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure, a2);
}

uint64_t sub_1C2FF747C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEF3B4(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__overridePromptingOnSpeechFailure);
}

uint64_t sub_1C2FF7498@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_17Tm(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation, a2);
}

uint64_t sub_1C2FF74A4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEF3B4(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__disableAutoPunctuation);
}

uint64_t sub_1C2FF74C0@<X0>(_QWORD *a1@<X8>)
{
  return Com_Apple_Siri_Product_Proto_PromptContext.currentTaskVerb.getter(a1);
}

uint64_t sub_1C2FF74E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FF0628(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue, (uint64_t (*)(char *))Com_Apple_Siri_Product_Proto_PromptContext.currentTaskVerb.setter);
}

uint64_t sub_1C2FF7504@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C2FF0BD0(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__taskID, a2);
}

uint64_t sub_1C2FF7520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FF0628(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, (uint64_t (*)(char *))Com_Apple_Siri_Product_Proto_PromptContext.taskID.setter);
}

uint64_t sub_1C2FF7544@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C2FF0BD0(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__systemDialogActID, a2);
}

uint64_t sub_1C2FF7560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FF0628(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid, (uint64_t (*)(char *))Com_Apple_Siri_Product_Proto_PromptContext.systemDialogActID.setter);
}

uint64_t sub_1C2FF7584@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_17Tm(a1, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb, a2);
}

uint64_t sub_1C2FF7590(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FEF3B4(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology42Com_Apple_Siri_Product_Proto_PromptContextP33_F2EBD59D06BFCF934A5518689A06A10D13_StorageClass__usePlaceholderTaskVerb);
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_DisplayHint(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v34;
  uint64_t v35;
  void (*v36)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C3378914();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v36 = v8;
      v18 = v11[3];
      v10[2] = v11[2];
      v10[3] = v18;
      v35 = v13;
      v19 = v11[5];
      v10[4] = v11[4];
      v10[5] = v19;
      v10[6] = v11[6];
      v20 = *(int *)(v12 + 32);
      v34 = (char *)v10 + v20;
      v21 = (char *)v11 + v20;
      swift_bridgeObjectRetain();
      v8 = v36;
      swift_bridgeObjectRetain();
      v13 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36((uint64_t *)v34, (uint64_t *)v21, v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v10, 0, 1, v12);
    }
    v22 = *(int *)(a3 + 24);
    v23 = (uint64_t *)((char *)a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    if (v14(v24, 1, v12))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = v24[1];
      *v23 = *v24;
      v23[1] = v26;
      v27 = v24[3];
      v23[2] = v24[2];
      v23[3] = v27;
      v28 = v24[5];
      v23[4] = v24[4];
      v23[5] = v28;
      v23[6] = v24[6];
      v29 = *(int *)(v12 + 32);
      v30 = v13;
      v31 = (char *)v23 + v29;
      v32 = (char *)v24 + v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8((uint64_t *)v31, (uint64_t *)v32, v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v23, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_DisplayHint(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t, uint64_t);

  v4 = sub_1C3378914();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v10(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10(v5 + *(int *)(v6 + 32), v4);
  }
  v8 = a1 + *(int *)(a2 + 24);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v6);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8 + *(int *)(v6 + 32), v4);
  }
  return result;
}

uint64_t initializeWithCopy for Com_Apple_Siri_Product_Proto_DisplayHint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C3378914();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = v10[1];
    *v9 = *v10;
    v9[1] = v15;
    v34 = v7;
    v16 = v10[3];
    v9[2] = v10[2];
    v9[3] = v16;
    v33 = v12;
    v17 = v10[5];
    v9[4] = v10[4];
    v9[5] = v17;
    v9[6] = v10[6];
    v18 = *(int *)(v11 + 32);
    v32 = (char *)v9 + v18;
    v19 = (char *)v10 + v18;
    swift_bridgeObjectRetain();
    v7 = v34;
    swift_bridgeObjectRetain();
    v12 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34((uint64_t)v32, (uint64_t)v19, v6);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v9, 0, 1, v11);
  }
  v20 = *(int *)(a3 + 24);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  if (v13(v22, 1, v11))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = v22[1];
    *v21 = *v22;
    v21[1] = v24;
    v25 = v22[3];
    v21[2] = v22[2];
    v21[3] = v25;
    v26 = v22[5];
    v21[4] = v22[4];
    v21[5] = v26;
    v21[6] = v22[6];
    v27 = *(int *)(v11 + 32);
    v28 = v12;
    v29 = (char *)v21 + v27;
    v30 = (char *)v22 + v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7((uint64_t)v29, (uint64_t)v30, v6);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v21, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for Com_Apple_Siri_Product_Proto_DisplayHint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1C3378914();
  v31 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 24);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v32 = *(_QWORD *)(v11 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48);
  v13 = v12(v9, 1, v11);
  v14 = v12(v10, 1, v11);
  if (v13)
  {
    if (!v14)
    {
      *v9 = *v10;
      v9[1] = v10[1];
      v9[2] = v10[2];
      v9[3] = v10[3];
      v9[4] = v10[4];
      v9[5] = v10[5];
      v9[6] = v10[6];
      v15 = *(int *)(v11 + 32);
      v16 = (char *)v10 + v15;
      v29 = (char *)v9 + v15;
      v30 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30(v29, v16, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1C2FF6CC0((uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9[2] = v10[2];
  v9[3] = v10[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9[4] = v10[4];
  v9[5] = v10[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9[6] = v10[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7((uint64_t)v9 + *(int *)(v11 + 32), (uint64_t)v10 + *(int *)(v11 + 32), v6);
LABEL_7:
  v18 = *(int *)(a3 + 24);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = v12((_QWORD *)(a1 + v18), 1, v11);
  v22 = v12(v20, 1, v11);
  if (!v21)
  {
    if (!v22)
    {
      *v19 = *v20;
      v19[1] = v20[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v19[2] = v20[2];
      v19[3] = v20[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v19[4] = v20[4];
      v19[5] = v20[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v19[6] = v20[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7((uint64_t)v19 + *(int *)(v11 + 32), (uint64_t)v20 + *(int *)(v11 + 32), v6);
      return a1;
    }
    sub_1C2FF6CC0((uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  *v19 = *v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v19[3] = v20[3];
  v19[4] = v20[4];
  v19[5] = v20[5];
  v19[6] = v20[6];
  v23 = *(int *)(v11 + 32);
  v24 = (char *)v19 + v23;
  v25 = (char *)v20 + v23;
  v26 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v24, v25, v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v19, 0, 1, v11);
  return a1;
}

char *initializeWithTake for Com_Apple_Siri_Product_Proto_DisplayHint(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  __int128 v20;

  v6 = sub_1C3378914();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v15;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
    v7(&v9[*(int *)(v11 + 32)], &v10[*(int *)(v11 + 32)], v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  if (v13(v18, 1, v11))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v20;
    *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
    *((_QWORD *)v17 + 6) = *((_QWORD *)v18 + 6);
    v7(&v17[*(int *)(v11 + 32)], &v18[*(int *)(v11 + 32)], v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for Com_Apple_Siri_Product_Proto_DisplayHint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int v20;
  int v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;

  v6 = sub_1C3378914();
  v32 = *(_QWORD *)(v6 - 8);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 40);
  v31(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      v15 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v15;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      v8[6] = v9[6];
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))((char *)v8 + *(int *)(v10 + 32), (char *)v9 + *(int *)(v10 + 32), v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1C2FF6CC0((uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v25 = v9[1];
  *v8 = *v9;
  v8[1] = v25;
  swift_bridgeObjectRelease();
  v26 = v9[3];
  v8[2] = v9[2];
  v8[3] = v26;
  swift_bridgeObjectRelease();
  v27 = v9[5];
  v8[4] = v9[4];
  v8[5] = v27;
  swift_bridgeObjectRelease();
  v8[6] = v9[6];
  swift_bridgeObjectRelease();
  v31((uint64_t)v8 + *(int *)(v10 + 32), (uint64_t)v9 + *(int *)(v10 + 32), v6);
LABEL_7:
  v17 = *(int *)(a3 + 24);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v12((_QWORD *)(a1 + v17), 1, v10);
  v21 = v12(v19, 1, v10);
  if (!v20)
  {
    if (!v21)
    {
      v28 = v19[1];
      *v18 = *v19;
      v18[1] = v28;
      swift_bridgeObjectRelease();
      v29 = v19[3];
      v18[2] = v19[2];
      v18[3] = v29;
      swift_bridgeObjectRelease();
      v30 = v19[5];
      v18[4] = v19[4];
      v18[5] = v30;
      swift_bridgeObjectRelease();
      v18[6] = v19[6];
      swift_bridgeObjectRelease();
      v31((uint64_t)v18 + *(int *)(v10 + 32), (uint64_t)v19 + *(int *)(v10 + 32), v6);
      return a1;
    }
    sub_1C2FF6CC0((uint64_t)v18, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  v22 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v22;
  *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
  v18[6] = v19[6];
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))((char *)v18 + *(int *)(v10 + 32), (char *)v19 + *(int *)(v10 + 32), v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_DisplayHint()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2FF8348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1C3378914();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_DisplayHint()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2FF83CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1C3378914();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDFF0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1C2FF844C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C3378914();
  if (v0 <= 0x3F)
  {
    sub_1C2FF90EC(319, &qword_1ED7CDFF8, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_AssistantSignalState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1C3378914();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_AssistantSignalState(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *initializeWithCopy for Com_Apple_Siri_Product_Proto_AssistantSignalState(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1C3378914();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithCopy for Com_Apple_Siri_Product_Proto_AssistantSignalState(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1C3378914();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *initializeWithTake for Com_Apple_Siri_Product_Proto_AssistantSignalState(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1C3378914();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithTake for Com_Apple_Siri_Product_Proto_AssistantSignalState(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1C3378914();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_AssistantSignalState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2FF871C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_1C3378914();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_AssistantSignalState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1C2FF87A4(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_1C3378914();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C2FF8814()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C3378914();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_Uuid(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1C3378914();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_Uuid(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *initializeWithCopy for Com_Apple_Siri_Product_Proto_Uuid(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for Com_Apple_Siri_Product_Proto_Uuid(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for Com_Apple_Siri_Product_Proto_Uuid(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *assignWithTake for Com_Apple_Siri_Product_Proto_Uuid(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_Uuid()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2FF8ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_Uuid()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2FF8B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1C2FF8B5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C3378914();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_PromptContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1C3378914();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_PromptContext(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for Com_Apple_Siri_Product_Proto_PromptContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Com_Apple_Siri_Product_Proto_PromptContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for Com_Apple_Siri_Product_Proto_PromptContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for Com_Apple_Siri_Product_Proto_PromptContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_PromptContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2FF8E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1C3378914();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_PromptContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2FF8EC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1C3378914();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1C2FF8F38()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C3378914();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2FF8FAC()
{
  return type metadata accessor for Com_Apple_Siri_Product_Proto_PromptContext._StorageClass(0);
}

void sub_1C2FF8FB4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1C2FF90EC(319, &qword_1ED7CE0D8, (void (*)(uint64_t))MEMORY[0x1E0DA35F8]);
  if (v0 <= 0x3F)
  {
    sub_1C2FF90EC(319, &qword_1ED7CE040, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_AssistantSignalState);
    if (v1 <= 0x3F)
    {
      sub_1C2FF90EC(319, &qword_1ED7CDFF8, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
      if (v2 <= 0x3F)
      {
        sub_1C2FF90EC(319, &qword_1ED7CDE18, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_Uuid);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1C2FF90EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1C3378E90();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1C2FF9138(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1C2FF91B4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;

  v8 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8);
  v16(&v17, v8, a4);
  v9 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = a1;
  v10 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v22, &v21, v9, v10, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  swift_bridgeObjectRelease();
  if (v23)
  {
    sub_1C310F23C(v22, v23, a2, a3, (uint64_t)&v17);
    swift_bridgeObjectRelease();
    v11 = v19;
    if (v19)
    {
      v12 = v20;
      __swift_project_boxed_opaque_existential_1(&v17, v19);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
    }
    else
    {
      sub_1C2FFD040((uint64_t)&v17);
    }
    return v11;
  }
  else
  {
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_1C3378F2C();
    v22 = v17;
    v23 = v18;
    sub_1C3378C5C();
    v17 = (uint64_t)a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v16(&v17, v8, a4);
    v14 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = (_QWORD *)v14;
    v15 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v15);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FF9464(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  void (*v10)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  uint64_t v24;
  __int128 v28;
  __int128 v29;
  _UNKNOWN **v30;
  _QWORD *v31;
  __int128 v32;

  v9 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v10 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a6 + 8);
  v10(&v28, v9, a6);
  v11 = *((_QWORD *)&v29 + 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = a1;
  v12 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v32, &v31, v11, v12, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  swift_bridgeObjectRelease();
  v13 = *((_QWORD *)&v32 + 1);
  if (*((_QWORD *)&v32 + 1))
  {
    v14 = v32;
    if (a3)
    {
      v15 = qword_1ED7CEAB8;
      swift_bridgeObjectRetain();
      if (v15 != -1)
        swift_once();
      v17 = *((_QWORD *)&xmmword_1ED7CEA90 + 1);
      v16 = xmmword_1ED7CEA90;
      v18 = xmmword_1ED7CEAA0;
      v19 = qword_1ED7CEAB0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v20 = MEMORY[0x1E0DEE9D8];
      if (v17)
      {
        *((_QWORD *)&v29 + 1) = &type metadata for BuilderNode;
        v30 = &off_1E7D1B810;
        v21 = swift_allocObject();
        *(_QWORD *)&v28 = v21;
        *(_QWORD *)(v21 + 16) = v16;
        *(_QWORD *)(v21 + 24) = v17;
        *(_OWORD *)(v21 + 32) = v18;
        *(_QWORD *)(v21 + 48) = v19;
        *(_QWORD *)(v21 + 56) = a2;
        *(_QWORD *)(v21 + 64) = a3;
        *(_QWORD *)(v21 + 72) = 0;
        *(_BYTE *)(v21 + 80) = 1;
        *(_QWORD *)(v21 + 88) = v20;
        *(_QWORD *)(v21 + 96) = v20;
        *(_QWORD *)(v21 + 104) = v20;
        *(_QWORD *)(v21 + 112) = v20;
LABEL_9:
        sub_1C2FFCE34(v16, v17);
        sub_1C310F2D8((uint64_t)&v28, v14, v13, a4, a5);
        sub_1C2FFCEBC(v16, v17);
        swift_bridgeObjectRelease();
        return sub_1C2FFD040((uint64_t)&v28);
      }
    }
    else
    {
      v16 = 0;
    }
    v17 = 0;
    v30 = 0;
    v28 = 0u;
    v29 = 0u;
    goto LABEL_9;
  }
  *(_QWORD *)&v28 = 0;
  *((_QWORD *)&v28 + 1) = 0xE000000000000000;
  sub_1C3378F2C();
  v32 = v28;
  sub_1C3378C5C();
  *(_QWORD *)&v28 = a1;
  sub_1C3379268();
  sub_1C337916C();
  sub_1C3378C5C();
  v10(&v28, v9, a6);
  v23 = (_QWORD *)*((_QWORD *)&v29 + 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = v23;
  v24 = sub_1C3378BA8();
  MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v24);
  sub_1C3379178();
  swift_bridgeObjectRelease();
  result = sub_1C3378FE0();
  __break(1u);
  return result;
}

uint64_t sub_1C2FF9834@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_1C2FF99C4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;

  v8 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8);
  v16(&v17, v8, a4);
  v9 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = a1;
  v10 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v22, &v21, v9, v10, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  swift_bridgeObjectRelease();
  if (v23)
  {
    sub_1C310F23C(v22, v23, a2, a3, (uint64_t)&v17);
    swift_bridgeObjectRelease();
    v11 = v19;
    if (v19)
    {
      v12 = v20;
      __swift_project_boxed_opaque_existential_1(&v17, v19);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
    }
    else
    {
      sub_1C2FFD040((uint64_t)&v17);
    }
    return v11;
  }
  else
  {
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_1C3378F2C();
    v22 = v17;
    v23 = v18;
    sub_1C3378C5C();
    v17 = (uint64_t)a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v16(&v17, v8, a4);
    v14 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = (_QWORD *)v14;
    v15 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v15);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FF9C74(_QWORD *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  _QWORD v22[3];
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD **__return_ptr, uint64_t, uint64_t);
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  _QWORD *v33;

  v12 = *MEMORY[0x1E0DEE2A8];
  v26 = *a1;
  v13 = *(_QWORD *)(v26 + v12);
  v27 = *(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t))(a6 + 8);
  v27(&v31, v13, a6);
  v14 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = a1;
  v15 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v29, &v28, v14, v15, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  v16 = swift_bridgeObjectRelease();
  v17 = v30;
  if (v30)
  {
    MEMORY[0x1E0C80A78](v16);
    v22[2] = a2;
    v23 = a3 & 1;
    v24 = v18;
    v25 = v17;
    sub_1C310F310((void (*)(_OWORD *))sub_1C2FFD100, (uint64_t)v22, a4, a5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v31 = 0;
    v32 = 0xE000000000000000;
    sub_1C3378F2C();
    v29 = v31;
    v30 = v32;
    sub_1C3378C5C();
    v31 = a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v27(&v31, v13, a6);
    v20 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = v20;
    v21 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v21);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FF9F10(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  _QWORD *v15;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  int64x2_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = 0;
  v24 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  if ((a3 & 1) == 0)
  {
    if (qword_1ED7CEAF0 != -1)
      swift_once();
    v8 = *((_QWORD *)&xmmword_1ED7CEAC0 + 1);
    v9 = *((_QWORD *)&xmmword_1ED7CEAD0 + 1);
    v23 = xmmword_1ED7CEAD0;
    v24 = xmmword_1ED7CEAC0;
    v10 = qword_1ED7CEAE0;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x1E0DEE9D8];
    v11 = a2;
  }
  swift_bridgeObjectRetain();
  v14 = swift_bridgeObjectRetain();
  v15 = (_QWORD *)sub_1C2FFCBD0(v14, a4, a5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = v15;
  if (v8)
  {
    swift_bridgeObjectRetain();
    sub_1C2FFCE34(v24, v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a1 + 88) = v15;
    v22 = a4;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = sub_1C3024290(0, v15[2] + 1, 1, v15);
      *(_QWORD *)(a1 + 88) = v15;
    }
    v19 = v15[2];
    v18 = v15[3];
    if (v19 >= v18 >> 1)
    {
      v15 = sub_1C3024290((_QWORD *)(v18 > 1), v19 + 1, 1, v15);
      *(_QWORD *)(a1 + 88) = v15;
    }
    v15[2] = v19 + 1;
    v20 = &v15[15 * v19];
    v20[4] = v22;
    v20[5] = a5;
    v20[6] = v24;
    v20[7] = v8;
    v20[8] = v23;
    v20[9] = v9;
    v20[10] = v10;
    v20[11] = 0;
    v20[12] = 0;
    v20[13] = v11;
    *((_BYTE *)v20 + 112) = 0;
    v21 = vdupq_n_s64(v12);
    *(int64x2_t *)(v20 + 15) = v21;
    *(int64x2_t *)(v20 + 17) = v21;
    result = sub_1C2FFCEBC(v24, v8);
    *(_QWORD *)(a1 + 88) = v15;
  }
  return result;
}

uint64_t sub_1C2FFA128(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;

  v8 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8);
  v16(&v20, v8, a4);
  v9 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = a1;
  v10 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v18, &v17, v9, v10, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  swift_bridgeObjectRelease();
  if (v19)
  {
    v11 = sub_1C310F49C(v18, v19, a2, a3);
    swift_bridgeObjectRelease();
    v12 = sub_1C2FFA3A0(v11);
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  else
  {
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_1C3378F2C();
    v18 = v20;
    v19 = v21;
    sub_1C3378C5C();
    v20 = (uint64_t)a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v16(&v20, v8, a4);
    v14 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = v14;
    v15 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v15);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

char *sub_1C2FFA3A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (char *)MEMORY[0x1E0DEE9D8];
  v2 = (_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  v3 = (char *)MEMORY[0x1E0DEE9D8];
  do
  {
    v5 = v2[3];
    v6 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v5);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    if (v8)
    {
      v9 = v7;
      v10 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1C3024190(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
      v12 = *((_QWORD *)v3 + 2);
      v11 = *((_QWORD *)v3 + 3);
      if (v12 >= v11 >> 1)
        v3 = sub_1C3024190((char *)(v11 > 1), v12 + 1, 1, v3);
      *((_QWORD *)v3 + 2) = v12 + 1;
      v4 = &v3[16 * v12];
      *((_QWORD *)v4 + 4) = v9;
      *((_QWORD *)v4 + 5) = v10;
    }
    v2 += 5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C2FFA4BC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void (*v9)(_QWORD **__return_ptr, uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64x2_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  _QWORD *v43;

  v8 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v9 = *(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t))(a5 + 8);
  v9(&v41, v8, a5);
  v10 = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = a1;
  v11 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v39, &v38, v10, v11, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  swift_bridgeObjectRelease();
  if (v40)
  {
    v31 = v40;
    v12 = v39;
    v13 = *(_QWORD *)(a2 + 16);
    v14 = MEMORY[0x1E0DEE9D8];
    if (v13)
    {
      v30 = v39;
      v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1C308D01C(0, v13, 0);
      v15 = (uint64_t *)(a2 + 40);
      v34 = vdupq_n_s64(v14);
      v14 = (unint64_t)v41;
      do
      {
        v16 = *v15;
        v37 = *(v15 - 1);
        v17 = qword_1ED7CEAB8;
        swift_bridgeObjectRetain();
        if (v17 != -1)
          swift_once();
        v18 = *((_QWORD *)&xmmword_1ED7CEA90 + 1);
        v19 = *((_QWORD *)&xmmword_1ED7CEAA0 + 1);
        v35 = xmmword_1ED7CEAA0;
        v36 = xmmword_1ED7CEA90;
        v20 = qword_1ED7CEAB0;
        v41 = (_QWORD *)v14;
        v22 = *(_QWORD *)(v14 + 16);
        v21 = *(_QWORD *)(v14 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v22 >= v21 >> 1)
        {
          sub_1C308D01C((char *)(v21 > 1), v22 + 1, 1);
          v14 = (unint64_t)v41;
        }
        v15 += 2;
        *(_QWORD *)(v14 + 16) = v22 + 1;
        v23 = v14 + 104 * v22;
        *(_QWORD *)(v23 + 32) = v36;
        *(_QWORD *)(v23 + 40) = v18;
        *(_QWORD *)(v23 + 48) = v35;
        *(_QWORD *)(v23 + 56) = v19;
        *(_QWORD *)(v23 + 64) = v20;
        *(_QWORD *)(v23 + 72) = v37;
        *(_QWORD *)(v23 + 80) = v16;
        *(_QWORD *)(v23 + 88) = 0;
        *(_BYTE *)(v23 + 96) = 1;
        *(int64x2_t *)(v23 + 104) = v34;
        *(int64x2_t *)(v23 + 120) = v34;
        --v13;
      }
      while (v13);
      v24 = a4;
      v25 = a3;
      v12 = v30;
    }
    else
    {
      v24 = a4;
      v25 = a3;
    }
    v26 = sub_1C31B6FFC(v14);
    swift_bridgeObjectRelease();
    sub_1C310F53C(v26, v12, v31, v25, v24);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v41 = 0;
    v42 = 0xE000000000000000;
    sub_1C3378F2C();
    v39 = (uint64_t)v41;
    v40 = v42;
    sub_1C3378C5C();
    v41 = a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v9(&v41, v8, a5);
    v28 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = v28;
    v29 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v29);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FFA868@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(__int128 *__return_ptr, uint64_t, uint64_t);
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  _QWORD *v23;
  _QWORD *v24;

  v11 = *a1;
  v12 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v18 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  v18(&v22, v12, a5);
  v13 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = a1;
  v14 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v20, &v24, v13, v14, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v20 + 1))
  {
    sub_1C310F23C(v20, *((uint64_t *)&v20 + 1), a2, a3, (uint64_t)&v20);
    swift_bridgeObjectRelease();
    if (v21)
    {
      sub_1C2FFD1BC(&v20, (uint64_t)&v22);
      sub_1C2FFCF44((uint64_t)&v22, (uint64_t)&v20);
      sub_1C31DA920(&v20, *(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v11 + 8) + 16), a4, a6);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    }
    else
    {
      result = sub_1C2FFD040((uint64_t)&v20);
      *(_QWORD *)(a6 + 32) = 0;
      *(_OWORD *)a6 = 0u;
      *(_OWORD *)(a6 + 16) = 0u;
    }
  }
  else
  {
    *(_QWORD *)&v22 = 0;
    *((_QWORD *)&v22 + 1) = 0xE000000000000000;
    sub_1C3378F2C();
    v20 = v22;
    sub_1C3378C5C();
    *(_QWORD *)&v22 = a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v18(&v22, v12, a5);
    v16 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v16;
    v17 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v17);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FFAB38(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  _QWORD v22[11];
  void (*v23)(_QWORD **__return_ptr, uint64_t, uint64_t);
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  _QWORD *v29;

  v12 = *a1;
  v13 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v23 = *(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t))(a6 + 8);
  v23(&v27, v13, a6);
  v14 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = a1;
  v15 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v25, &v24, v14, v15, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  v16 = swift_bridgeObjectRelease();
  v17 = v26;
  if (v26)
  {
    MEMORY[0x1E0C80A78](v16);
    v22[2] = a3;
    v22[3] = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v12 + 8) + 16);
    v22[4] = a4;
    v22[5] = a5;
    v22[6] = a6;
    v22[7] = a2;
    v22[8] = v18;
    v22[9] = v17;
    sub_1C310F310((void (*)(_OWORD *))sub_1C2FFD080, (uint64_t)v22, a3, a4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_1C3378F2C();
    v25 = v27;
    v26 = v28;
    sub_1C3378C5C();
    v27 = a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v23(&v27, v13, a6);
    v20 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v20;
    v21 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v21);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FFADE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _BYTE v42[16];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[8];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v43 = a5;
  v44 = a6;
  v45 = a7;
  v46 = a8;
  v47 = a9;
  type metadata accessor for Entity(255, a6, a3, a4);
  sub_1C3378E90();
  sub_1C2FF9834((void (*)(char *, char *))sub_1C2FFCFFC, (uint64_t)v42, MEMORY[0x1E0DEDCE8], (uint64_t)&type metadata for BuilderNode, v12, (uint64_t)v48);
  v13 = v48[1];
  v37 = v48[2];
  v38 = v48[0];
  v35 = v48[4];
  v36 = v48[3];
  v34 = v48[6];
  v41 = v48[7];
  v14 = v50;
  v39 = v48[5];
  v40 = v49;
  v16 = v51;
  v15 = v52;
  v17 = v53;
  swift_bridgeObjectRetain();
  v18 = swift_bridgeObjectRetain();
  v19 = (_QWORD *)sub_1C2FFCBD0(v18, a3, a4);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = v19;
  if (v13)
  {
    swift_bridgeObjectRetain();
    v33 = v16;
    sub_1C2FFCE34(v38, v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a1 + 88) = v19;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v22 = a1;
    }
    else
    {
      v19 = sub_1C3024290(0, v19[2] + 1, 1, v19);
      v22 = a1;
      *(_QWORD *)(a1 + 88) = v19;
    }
    v24 = v19[2];
    v23 = v19[3];
    v26 = v40;
    v25 = v41;
    v28 = v33;
    v27 = v14;
    v30 = v17;
    v29 = v15;
    if (v24 >= v23 >> 1)
    {
      v32 = sub_1C3024290((_QWORD *)(v23 > 1), v24 + 1, 1, v19);
      v30 = v17;
      v29 = v15;
      v28 = v33;
      v27 = v14;
      v26 = v40;
      v25 = v41;
      v19 = v32;
      *(_QWORD *)(v22 + 88) = v32;
    }
    v19[2] = v24 + 1;
    v31 = &v19[15 * v24];
    v31[4] = a3;
    v31[5] = a4;
    v31[6] = v38;
    v31[7] = v13;
    v31[8] = v37;
    v31[9] = v36;
    v31[10] = v35;
    v31[11] = v39;
    v31[12] = v34;
    v31[13] = v25;
    *((_BYTE *)v31 + 112) = v26 & 1;
    v31[15] = v27;
    v31[16] = v28;
    v31[17] = v29;
    v31[18] = v30;
    result = sub_1C2FFCEBC(v38, v13);
    *(_QWORD *)(v22 + 88) = v19;
  }
  return result;
}

uint64_t sub_1C2FFB064(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t *__return_ptr, uint64_t, uint64_t);
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;

  v9 = *a1;
  v10 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v22 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  v22(&v26, v10, a5);
  v11 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = a1;
  v12 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v24, &v23, v11, v12, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  swift_bridgeObjectRelease();
  if (v25)
  {
    v13 = sub_1C310F49C(v24, v25, a2, a3);
    v14 = swift_bridgeObjectRelease();
    v26 = v13;
    MEMORY[0x1E0C80A78](v14);
    v15 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v9 + 8) + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819490);
    type metadata accessor for Entity(0, v15, v16, v17);
    sub_1C2FFD22C(&qword_1EF8194A0, MEMORY[0x1E0DEAF38]);
    v18 = sub_1C3378D1C();
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    v26 = 0;
    v27 = 0xE000000000000000;
    sub_1C3378F2C();
    v24 = v26;
    v25 = v27;
    sub_1C3378C5C();
    v26 = (uint64_t)a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v22(&v26, v10, a5);
    v20 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v20;
    v21 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v21);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FFB37C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  _QWORD v22[11];
  void (*v23)(_QWORD **__return_ptr, uint64_t, uint64_t);
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  _QWORD *v29;

  v12 = *a1;
  v13 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v23 = *(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t))(a6 + 8);
  v23(&v27, v13, a6);
  v14 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = a1;
  v15 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v25, &v24, v14, v15, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  v16 = swift_bridgeObjectRelease();
  v17 = v26;
  if (v26)
  {
    MEMORY[0x1E0C80A78](v16);
    v22[2] = a3;
    v22[3] = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v12 + 8) + 16);
    v22[4] = a4;
    v22[5] = a5;
    v22[6] = a6;
    v22[7] = a2;
    v22[8] = v18;
    v22[9] = v17;
    sub_1C310F310((void (*)(_OWORD *))sub_1C2FFCFCC, (uint64_t)v22, a3, a4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_1C3378F2C();
    v25 = v27;
    v26 = v28;
    sub_1C3378C5C();
    v27 = a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v23(&v27, v13, a6);
    v20 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v20;
    v21 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v21);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FFB62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[10];

  v16[9] = a2;
  v16[2] = a5;
  v16[3] = a6;
  v16[4] = a7;
  v16[5] = a8;
  v16[6] = a9;
  type metadata accessor for Entity(255, a6, a3, a4);
  v11 = sub_1C3378DE8();
  v12 = MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEAF50], v11);
  v14 = sub_1C322CAA8((void (*)(char *, char *))sub_1C2FFCFFC, (uint64_t)v16, v11, (char *)&type metadata for BuilderNode, MEMORY[0x1E0DEDCE8], v12, MEMORY[0x1E0DEDD18], v13);
  sub_1C3110018(v14, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2FFB6FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(__int128 *__return_ptr, uint64_t, uint64_t);
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  _QWORD *v20;
  _QWORD *v21;

  v10 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v16 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a4 + 8);
  v16(&v19, v10, a4);
  v11 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = a1;
  v12 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v17, &v21, v11, v12, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v17 + 1))
  {
    sub_1C310F23C(v17, *((uint64_t *)&v17 + 1), a2, a3, (uint64_t)&v17);
    swift_bridgeObjectRelease();
    if (v18)
    {
      sub_1C2FFD1BC(&v17, (uint64_t)&v19);
      sub_1C2FFD1BC(&v19, (uint64_t)&v17);
      return sub_1C310E4B8(&v17, a5);
    }
    else
    {
      result = sub_1C2FFD040((uint64_t)&v17);
      *(_QWORD *)(a5 + 32) = 0;
      *(_OWORD *)a5 = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
    }
  }
  else
  {
    *(_QWORD *)&v19 = 0;
    *((_QWORD *)&v19 + 1) = 0xE000000000000000;
    sub_1C3378F2C();
    v17 = v19;
    sub_1C3378C5C();
    *(_QWORD *)&v19 = a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v16(&v19, v10, a4);
    v14 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v14;
    v15 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v15);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FFB9C0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v20[9];
  void (*v21)(_QWORD **__return_ptr, uint64_t, uint64_t);
  _QWORD *v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;

  v10 = *a1;
  v11 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v21 = *(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t))(a5 + 8);
  v21(&v25, v11, a5);
  v12 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = a1;
  v13 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v23, &v22, v12, v13, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  v14 = swift_bridgeObjectRelease();
  v15 = v24;
  if (v24)
  {
    MEMORY[0x1E0C80A78](v14);
    v20[2] = a3;
    v20[3] = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v10 + 8) + 16) + 16);
    v20[4] = a4;
    v20[5] = a5;
    v20[6] = a2;
    v20[7] = v16;
    v20[8] = v15;
    sub_1C310F310((void (*)(_OWORD *))sub_1C2FFBEFC, (uint64_t)v20, a3, a4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_1C3378F2C();
    v23 = v25;
    v24 = v26;
    sub_1C3378C5C();
    v25 = a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v21(&v25, v11, a5);
    v18 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = v18;
    v19 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v19);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FFBC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v35[8];
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[24];
  uint64_t v45;

  v8 = type metadata accessor for Metadata(255, a6, a3, a4);
  v9 = sub_1C3378E90();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v44, a2, v9);
  if (v45)
  {
    sub_1C2FFCF44((uint64_t)v44, (uint64_t)v41);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v44, v8);
    v11 = v42;
    v12 = v43;
    __swift_project_boxed_opaque_existential_1(v41, v42);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 72))(v35, v11, v12);
    v13 = v35[1];
    v31 = v35[2];
    v32 = v35[0];
    v29 = v35[4];
    v30 = v35[3];
    v27 = v35[6];
    v28 = v35[5];
    v26 = v35[7];
    v14 = v36;
    v15 = v37;
    v16 = v38;
    v18 = v39;
    v17 = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v44, v9);
    v31 = 0;
    v32 = 0;
    v13 = 0;
    v29 = 0;
    v30 = 0;
    v27 = 0;
    v28 = 0;
    v26 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v18 = 0;
    v17 = 0;
  }
  swift_bridgeObjectRetain();
  v19 = swift_bridgeObjectRetain();
  v20 = (_QWORD *)sub_1C2FFCBD0(v19, a3, a4);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = v20;
  if (v13)
  {
    swift_bridgeObjectRetain();
    sub_1C2FFCE34(v32, v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a1 + 88) = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v20 = sub_1C3024290(0, v20[2] + 1, 1, v20);
      *(_QWORD *)(a1 + 88) = v20;
    }
    v24 = v20[2];
    v23 = v20[3];
    if (v24 >= v23 >> 1)
    {
      v20 = sub_1C3024290((_QWORD *)(v23 > 1), v24 + 1, 1, v20);
      *(_QWORD *)(a1 + 88) = v20;
    }
    v20[2] = v24 + 1;
    v25 = &v20[15 * v24];
    v25[4] = a3;
    v25[5] = a4;
    v25[6] = v32;
    v25[7] = v13;
    v25[8] = v31;
    v25[9] = v30;
    v25[10] = v29;
    v25[11] = v28;
    v25[12] = v27;
    v25[13] = v26;
    *((_BYTE *)v25 + 112) = v14 != 0;
    v25[15] = v15;
    v25[16] = v16;
    v25[17] = v18;
    v25[18] = v17;
    result = sub_1C2FFCEBC(v32, v13);
    *(_QWORD *)(a1 + 88) = v20;
  }
  return result;
}

uint64_t sub_1C2FFBEFC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2FFBC6C(a1, v1[6], v1[7], v1[8], v1[2], v1[3]);
}

uint64_t sub_1C2FFBF10(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD *v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *__return_ptr, uint64_t, uint64_t);
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;

  v8 = *a1;
  v9 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v28 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8);
  v28(&v32, v9, a4);
  v10 = v34;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = a1;
  v11 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v30, &v29, v10, v11, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  swift_bridgeObjectRelease();
  if (v31)
  {
    v12 = sub_1C310F49C(v30, v31, a2, a3);
    v13 = swift_bridgeObjectRelease();
    v32 = v12;
    MEMORY[0x1E0C80A78](v13);
    v24[2] = a2;
    v25 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v8 + 8) + 16) + 16);
    v26 = a3;
    v27 = a4;
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819490);
    v17 = (char *)type metadata accessor for Metadata(0, v25, v15, v16);
    v18 = sub_1C2FFD22C(&qword_1EF819498, MEMORY[0x1E0DEAF50]);
    v20 = sub_1C322CAA8((void (*)(char *, char *))sub_1C2FFD16C, (uint64_t)v24, v14, v17, MEMORY[0x1E0DEDCE8], v18, MEMORY[0x1E0DEDD18], v19);
    swift_bridgeObjectRelease();
    return v20;
  }
  else
  {
    v32 = 0;
    v33 = 0xE000000000000000;
    sub_1C3378F2C();
    v30 = v32;
    v31 = v33;
    sub_1C3378C5C();
    v32 = (uint64_t)a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v28(&v32, v9, a4);
    v22 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v22;
    v23 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v23);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FFC234@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v8 = *a1;
  v9 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]);
  v10 = *(_QWORD *)(a4 + 8);
  v20 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 8);
  v20(&v24, v9, v10);
  v11 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = a1;
  v12 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v22, &v28, v11, v12, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  swift_bridgeObjectRelease();
  if (v23)
  {
    sub_1C310F23C(v22, v23, a2, a3, (uint64_t)&v24);
    swift_bridgeObjectRelease();
    v13 = v26;
    if (v26)
    {
      v14 = v27;
      __swift_project_boxed_opaque_existential_1(&v24, v26);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 16))(&v22, v13, v14);
      v15 = v22;
      v16 = v23;
      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
      v24 = v15;
      v25 = v16;
      swift_getAssociatedConformanceWitness();
      return sub_1C3378D40();
    }
    else
    {
      sub_1C2FFD040((uint64_t)&v24);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v8 + 8)
                                                                                          + 16)
                                                                              - 8)
                                                                  + 56))(a5, 1, 1);
    }
  }
  else
  {
    v24 = 0;
    v25 = 0xE000000000000000;
    sub_1C3378F2C();
    v22 = v24;
    v23 = v25;
    sub_1C3378C5C();
    v24 = (uint64_t)a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v20(&v24, v9, v10);
    v18 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = (_QWORD *)v18;
    v19 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v19);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FFC574(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v21[9];
  uint64_t v22;
  void (*v23)(_QWORD **__return_ptr, uint64_t, uint64_t);
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  _QWORD *v29;

  v10 = *MEMORY[0x1E0DEE2A8];
  v22 = *a1;
  v11 = *(_QWORD *)(v22 + v10);
  v12 = *(_QWORD *)(a5 + 8);
  v23 = *(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t))(v12 + 8);
  v23(&v27, v11, v12);
  v13 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = a1;
  v14 = sub_1C3378F68();
  swift_retain();
  MEMORY[0x1C3BD0D24](&v25, &v24, v13, v14, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEBE98]);
  swift_release();
  v15 = swift_bridgeObjectRelease();
  v16 = v26;
  if (v26)
  {
    MEMORY[0x1E0C80A78](v15);
    v21[2] = a3;
    v21[3] = a4;
    v21[4] = a5;
    v21[5] = a2;
    v21[6] = v17;
    v21[7] = v16;
    sub_1C310F310((void (*)(_OWORD *))sub_1C2FFD010, (uint64_t)v21, a3, a4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_1C3378F2C();
    v25 = v27;
    v26 = v28;
    sub_1C3378C5C();
    v27 = a1;
    sub_1C3379268();
    sub_1C337916C();
    sub_1C3378C5C();
    v23(&v27, v11, v12);
    v19 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v19;
    v20 = sub_1C3378BA8();
    MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA0E8], v20);
    sub_1C3379178();
    swift_bridgeObjectRelease();
    result = sub_1C3378FE0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2FFC80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v40[16];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[8];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v41 = a5;
  v42 = a6;
  v43 = a7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_1C3378E90();
  sub_1C2FF9834((void (*)(char *, char *))sub_1C2FFD020, (uint64_t)v40, MEMORY[0x1E0DEDCE8], (uint64_t)&type metadata for BuilderNode, v9, (uint64_t)v44);
  v10 = v44[1];
  v37 = v44[2];
  v38 = v44[0];
  v35 = v44[4];
  v36 = v44[3];
  v33 = v44[6];
  v34 = v44[5];
  v11 = v45;
  v32 = v44[7];
  v12 = v46;
  v13 = v47;
  v14 = v48;
  v15 = v49;
  swift_bridgeObjectRetain();
  v16 = swift_bridgeObjectRetain();
  v17 = (_QWORD *)sub_1C2FFCBD0(v16, a3, a4);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = v17;
  if (v10)
  {
    v31 = a4;
    swift_bridgeObjectRetain();
    sub_1C2FFCE34(v38, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a1 + 88) = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v17 = sub_1C3024290(0, v17[2] + 1, 1, v17);
      *(_QWORD *)(a1 + 88) = v17;
    }
    v21 = v17[2];
    v20 = v17[3];
    v23 = v12;
    v22 = v11;
    v25 = v15;
    v24 = v13;
    if (v21 >= v20 >> 1)
    {
      v30 = sub_1C3024290((_QWORD *)(v20 > 1), v21 + 1, 1, v17);
      v25 = v15;
      v24 = v13;
      v23 = v12;
      v22 = v11;
      v28 = v32;
      v27 = v33;
      v26 = v34;
      v17 = v30;
      *(_QWORD *)(a1 + 88) = v30;
    }
    else
    {
      v26 = v34;
      v27 = v33;
      v28 = v32;
    }
    v17[2] = v21 + 1;
    v29 = &v17[15 * v21];
    v29[4] = a3;
    v29[5] = v31;
    v29[6] = v38;
    v29[7] = v10;
    v29[8] = v37;
    v29[9] = v36;
    v29[10] = v35;
    v29[11] = v26;
    v29[12] = v27;
    v29[13] = v28;
    *((_BYTE *)v29 + 112) = v22 & 1;
    v29[15] = v23;
    v29[16] = v24;
    v29[17] = v14;
    v29[18] = v25;
    result = sub_1C2FFCEBC(v38, v10);
    *(_QWORD *)(a1 + 88) = v17;
  }
  return result;
}

double sub_1C2FFCABC@<D0>(uint64_t a1@<X8>)
{
  double result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1C3378D34();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  strcpy((char *)(a1 + 16), "DefinedValue");
  *(_BYTE *)(a1 + 29) = 0;
  *(_WORD *)(a1 + 30) = -5120;
  result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(a1 + 64) = 1;
  *(_QWORD *)(a1 + 72) = v3;
  *(_QWORD *)(a1 + 80) = v3;
  *(_QWORD *)(a1 + 88) = v3;
  *(_QWORD *)(a1 + 96) = v3;
  return result;
}

uint64_t sub_1C2FFCBD0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v42;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  v5 = a2;
  v6 = 0;
  v7 = result + 72;
  v31 = v3 - 1;
  v8 = MEMORY[0x1E0DEE9D8];
  v40 = a3;
  v39 = *(_QWORD *)(result + 16);
  do
  {
    v33 = v8;
    if (v6 <= v3)
      v9 = v3;
    else
      v9 = v6;
    v10 = v7 + 120 * v6;
    v11 = v6;
    while (1)
    {
      if (v9 == v11)
      {
        __break(1u);
        return result;
      }
      result = *(_QWORD *)(v10 - 40);
      if (result != v5 || *(_QWORD *)(v10 - 32) != a3)
      {
        v37 = *(_OWORD *)(v10 + 48);
        v38 = *(_OWORD *)(v10 + 64);
        v13 = *(_BYTE *)(v10 + 40);
        v36 = *(_OWORD *)(v10 + 24);
        v14 = *(_QWORD *)(v10 + 16);
        v34 = *(_QWORD *)(v10 - 40);
        v35 = *(_QWORD *)(v10 + 8);
        v16 = *(_QWORD *)(v10 - 8);
        v15 = *(_QWORD *)v10;
        v17 = *(_QWORD *)(v10 - 24);
        v18 = *(_QWORD *)(v10 - 16);
        v42 = *(_QWORD *)(v10 - 32);
        result = sub_1C3379184();
        v5 = a2;
        v3 = v39;
        a3 = v40;
        if ((result & 1) == 0)
          break;
      }
      ++v11;
      v10 += 120;
      if (v3 == v11)
        return v33;
    }
    v19 = v14;
    v30 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = v33;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C308CFD4(0, *(_QWORD *)(v33 + 16) + 1, 1);
      v8 = v33;
    }
    v20 = v13;
    v21 = v19;
    v23 = *(_QWORD *)(v8 + 16);
    v22 = *(_QWORD *)(v8 + 24);
    v25 = v37;
    v24 = v38;
    v26 = v36;
    v27 = v35;
    v28 = v42;
    if (v23 >= v22 >> 1)
    {
      result = (uint64_t)sub_1C308CFD4((_QWORD *)(v22 > 1), v23 + 1, 1);
      v28 = v42;
      v27 = v35;
      v26 = v36;
      v25 = v37;
      v20 = v30;
      v24 = v38;
      v8 = v33;
    }
    v6 = v11 + 1;
    *(_QWORD *)(v8 + 16) = v23 + 1;
    v29 = v8 + 120 * v23;
    *(_QWORD *)(v29 + 32) = v34;
    *(_QWORD *)(v29 + 40) = v28;
    *(_QWORD *)(v29 + 48) = v17;
    *(_QWORD *)(v29 + 56) = v18;
    *(_QWORD *)(v29 + 64) = v16;
    *(_QWORD *)(v29 + 72) = v15;
    *(_QWORD *)(v29 + 80) = v27;
    *(_QWORD *)(v29 + 88) = v21;
    *(_OWORD *)(v29 + 96) = v26;
    *(_BYTE *)(v29 + 112) = v20;
    *(_OWORD *)(v29 + 120) = v25;
    *(_OWORD *)(v29 + 136) = v24;
    v7 = v32;
    a3 = v40;
    v5 = a2;
    v3 = v39;
  }
  while (v31 != v11);
  return v8;
}

uint64_t sub_1C2FFCE34(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C2FFCEBC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2FFCF44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1C2FFCFCC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2FFB62C(a1, v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1C2FFCFFC(_QWORD *a1)
{
  return sub_1C2FFD0B0(a1);
}

uint64_t sub_1C2FFD010(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2FFC80C(a1, v1[5], v1[6], v1[7], v1[2], v1[3], v1[4]);
}

double sub_1C2FFD020@<D0>(uint64_t a1@<X8>)
{
  return sub_1C2FFCABC(a1);
}

uint64_t sub_1C2FFD040(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819488);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2FFD080(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2FFADE8(a1, v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1C2FFD0B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 72))(v1, v2);
}

uint64_t sub_1C2FFD100(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2FF9F10(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C2FFD110()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C2FFD16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4[2];

  sub_1C2FFCF44(a1, (uint64_t)v4);
  return sub_1C310E4B8(v4, a2);
}

uint64_t sub_1C2FFD1BC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

double sub_1C2FFD1D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[5];

  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 40);
  sub_1C2FFCF44(a1, (uint64_t)v7);
  return sub_1C31DA920(v7, v4, v5, a2);
}

uint64_t sub_1C2FFD22C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF819490);
    result = MEMORY[0x1C3BD1B4C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TerminalIntentNode.ontologyNodeName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TerminalIntentNode.resultIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TerminalIntentNode.elements.getter()
{
  return swift_bridgeObjectRetain();
}

SiriOntology::TerminalIntentNode __swiftcall TerminalIntentNode.init(name:elements:resultIDs:)(Swift::String name, Swift::OpaquePointer elements, Swift::OpaquePointer resultIDs)
{
  uint64_t v3;
  SiriOntology::TerminalIntentNode result;

  *(Swift::String *)v3 = name;
  *(Swift::OpaquePointer *)(v3 + 16) = resultIDs;
  *(Swift::OpaquePointer *)(v3 + 24) = elements;
  result.ontologyNodeName = name;
  result.elements = resultIDs;
  result.resultIDs = elements;
  return result;
}

uint64_t sub_1C2FFD2B8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2FFD2E4()
{
  return swift_bridgeObjectRetain();
}

void *TerminalIntentNode.init(name:value:semanticTags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  void *result;
  _QWORD v11[67];
  _BYTE v12[808];
  _BYTE v13[528];
  _BYTE v14[784];
  _QWORD __src[168];

  sub_1C2FF6D40(a3, (uint64_t)v13, &qword_1EF8194A8);
  sub_1C2FFD508((uint64_t)v14);
  sub_1C2FF6D40((uint64_t)v13, (uint64_t)v11, &qword_1EF8194A8);
  v11[66] = a4;
  sub_1C2FF6D40((uint64_t)v14, (uint64_t)v12, &qword_1EF8194B0);
  memset(&v12[784], 0, 24);
  sub_1C2FF6D40((uint64_t)v13, (uint64_t)__src, &qword_1EF8194A8);
  __src[66] = a4;
  sub_1C2FF6D40((uint64_t)v14, (uint64_t)&__src[67], &qword_1EF8194B0);
  memset(&__src[165], 0, 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DFAF0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C3388720;
  result = memcpy((void *)(v9 + 32), __src, 0x540uLL);
  *a5 = a1;
  a5[1] = a2;
  a5[2] = MEMORY[0x1E0DEE9D8];
  a5[3] = v9;
  return result;
}

void *TerminalElement.init(value:semanticTags:origin:originalValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, void *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[67];
  _QWORD v14[101];
  _BYTE v15[528];
  _BYTE v16[784];
  _QWORD __src[168];

  sub_1C2FF6D40(a1, (uint64_t)v15, &qword_1EF8194A8);
  sub_1C2FF6D40(a3, (uint64_t)v16, &qword_1EF8194B0);
  v9 = *a4;
  v10 = a4[1];
  v11 = a4[2];
  sub_1C2FF6D40((uint64_t)v15, (uint64_t)v13, &qword_1EF8194A8);
  v13[66] = a2;
  sub_1C2FF6D40((uint64_t)v16, (uint64_t)v14, &qword_1EF8194B0);
  v14[98] = v9;
  v14[99] = v10;
  v14[100] = v11;
  sub_1C2FF6D40((uint64_t)v15, (uint64_t)__src, &qword_1EF8194A8);
  __src[66] = a2;
  sub_1C2FF6D40((uint64_t)v16, (uint64_t)&__src[67], &qword_1EF8194B0);
  __src[165] = v9;
  __src[166] = v10;
  __src[167] = v11;
  return memcpy(a5, __src, 0x540uLL);
}

double sub_1C2FFD508(uint64_t a1)
{
  double result;

  bzero((void *)a1, 0x220uLL);
  *(_QWORD *)(a1 + 544) = 0xFFFFFFFE0000;
  result = 0.0;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_OWORD *)(a1 + 664) = 0u;
  *(_OWORD *)(a1 + 680) = 0u;
  *(_OWORD *)(a1 + 696) = 0u;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 728) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  *(_BYTE *)(a1 + 776) = 0;
  return result;
}

uint64_t TerminalElement.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[528];

  sub_1C2FF6D40(v1, (uint64_t)v4, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v4, a1, &qword_1EF8194A8);
  return sub_1C2FFE080(v4, sub_1C2FFD5C0);
}

uint64_t sub_1C2FFD5C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 a65;

  switch(a65 >> 4)
  {
    case 4:
    case 7:
      goto LABEL_5;
    case 5:
      sub_1C2FFD84C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10);
      sub_1C2FFD84C(a20, a21, a22, a23, a24, a25, a26, a27, a28, a29);
      sub_1C2FFD8A0(a45, a46);
      result = sub_1C2FFD8A0(a54, a55);
      break;
    case 6:
      result = swift_retain();
      break;
    case 8:
      swift_bridgeObjectRetain();
LABEL_5:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2FFD84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;

  if (a10)
  {
    sub_1C2FFD88C(a7, a8);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C2FFD88C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1C2FFD8A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t TerminalElement.semanticTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TerminalElement.origin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[784];

  sub_1C2FF6D40(v1 + 536, (uint64_t)v4, &qword_1EF8194B0);
  sub_1C2FF6D40((uint64_t)v4, a1, &qword_1EF8194B0);
  return sub_1C301192C(v4, &sub_1C2FFD940);
}

#error "1C2FFDD30: call analysis failed (funcsize=287)"

uint64_t sub_1C2FFDDC0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_1C2FFDDEC(result, a2);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C2FFDDEC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t TerminalElement.originalValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 1336);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 1320);
  *(_QWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t TerminalElement.SemanticValue.javaPojoName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

SiriOntology::TerminalElement::SemanticValue __swiftcall TerminalElement.SemanticValue.init(_:javaPojoName:)(Swift::String _, Swift::String_optional javaPojoName)
{
  Swift::String_optional *v2;
  SiriOntology::TerminalElement::SemanticValue result;

  *v2 = javaPojoName;
  v2[1].value = _;
  result.value = javaPojoName.value;
  result.javaPojoName.value = _;
  return result;
}

uint64_t TerminalElement.ScalarValue.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[528];

  sub_1C2FF6D40(v1 + 16, (uint64_t)v4, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v4, a1, &qword_1EF8194A8);
  return sub_1C2FFE080(v4, sub_1C2FFD5C0);
}

uint64_t TerminalElement.ScalarValue.unit.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[68];
  v3 = v1[69];
  v4 = v1[70];
  v5 = v1[71];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1C2FFDEF0(v2, v3, v4, v5);
}

uint64_t sub_1C2FFDEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t TerminalElement.ScalarValue.__allocating_init(value:unit:)(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  _BYTE v9[528];

  v4 = swift_allocObject();
  sub_1C2FF6D40(a1, (uint64_t)v9, &qword_1EF8194A8);
  v8 = *a2;
  v6 = *((_QWORD *)a2 + 2);
  v5 = *((_QWORD *)a2 + 3);
  sub_1C2FF6D40((uint64_t)v9, v4 + 16, &qword_1EF8194A8);
  *(_OWORD *)(v4 + 544) = v8;
  *(_QWORD *)(v4 + 560) = v6;
  *(_QWORD *)(v4 + 568) = v5;
  return v4;
}

uint64_t TerminalElement.ScalarValue.init(value:unit:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  _BYTE v8[536];

  sub_1C2FF6D40(a1, (uint64_t)v8, &qword_1EF8194A8);
  v7 = *a2;
  v5 = *((_QWORD *)a2 + 2);
  v4 = *((_QWORD *)a2 + 3);
  sub_1C2FF6D40((uint64_t)v8, v2 + 16, &qword_1EF8194A8);
  *(_OWORD *)(v2 + 544) = v7;
  *(_QWORD *)(v2 + 560) = v5;
  *(_QWORD *)(v2 + 568) = v4;
  return v2;
}

uint64_t *TerminalElement.ScalarValue.deinit()
{
  uint64_t *v0;
  _BYTE v2[528];

  sub_1C2FF6D40((uint64_t)(v0 + 2), (uint64_t)v2, &qword_1EF8194A8);
  sub_1C2FFE080(v2, sub_1C2FFE4B0);
  sub_1C2FFE7BC(v0[68], v0[69], v0[70], v0[71]);
  return v0;
}

#error "1C2FFE138: call analysis failed (funcsize=54)"

#error "1C2FFE4AC: call analysis failed (funcsize=214)"

uint64_t sub_1C2FFE4B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 a65;

  switch(a65 >> 4)
  {
    case 4:
    case 7:
      goto LABEL_5;
    case 5:
      sub_1C2FFE734(result, a2, a3, a4, a5, a6, a7, a8, a9, a10);
      sub_1C2FFE734(a20, a21, a22, a23, a24, a25, a26, a27, a28, a29);
      sub_1C2FFE788(a45, a46);
      result = sub_1C2FFE788(a54, a55);
      break;
    case 6:
      result = swift_release();
      break;
    case 8:
      swift_bridgeObjectRelease();
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2FFE734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;

  if (a10)
  {
    sub_1C2FFE774(a7, a8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2FFE774(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1C2FFE788(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2FFE7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t TerminalElement.ScalarValue.__deallocating_deinit()
{
  uint64_t *v0;
  _BYTE v2[528];

  sub_1C2FF6D40((uint64_t)(v0 + 2), (uint64_t)v2, &qword_1EF8194A8);
  sub_1C2FFE080(v2, sub_1C2FFE4B0);
  sub_1C2FFE7BC(v0[68], v0[69], v0[70], v0[71]);
  return swift_deallocClassInstance();
}

void TerminalElement.Origin.originType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t TerminalElement.Origin.originDetail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[776];

  sub_1C2FF6D40(v1 + 8, (uint64_t)v4, &qword_1EF8194B8);
  sub_1C2FF6D40((uint64_t)v4, a1, &qword_1EF8194B8);
  return sub_1C3013584(v4, &sub_1C2FFD940);
}

void *TerminalElement.Origin.init(originType:originDetail:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v4;
  uint64_t v6;
  _BYTE v7[776];
  _BYTE __src[784];

  v4 = *a1;
  sub_1C2FF6D40(a2, (uint64_t)v7, &qword_1EF8194B8);
  sub_1C2FF6D40((uint64_t)v7, (uint64_t)&v6, &qword_1EF8194B8);
  __src[0] = v4;
  sub_1C2FF6D40((uint64_t)v7, (uint64_t)&__src[8], &qword_1EF8194B8);
  return memcpy(a3, __src, 0x309uLL);
}

SiriOntology::TerminalElement::OriginType_optional __swiftcall TerminalElement.OriginType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriOntology::TerminalElement::OriginType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C3379028();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static TerminalElement.OriginType.allCases.getter()
{
  return &unk_1E7CEE3D8;
}

uint64_t TerminalElement.OriginType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C2FFE9F0 + 4 * byte_1C3388E6A[*v0]))(0x746E6F4372657375, 0xEB00000000747865);
}

uint64_t sub_1C2FFE9F0()
{
  return 0x7272754372657375;
}

uint64_t sub_1C2FFEA10()
{
  return 0x65666E4972657375;
}

uint64_t sub_1C2FFEA38()
{
  return 0x666544746E656761;
}

uint64_t sub_1C2FFEA58()
{
  return 0x766544746E656761;
}

uint64_t sub_1C2FFEA78()
{
  return 0x6F7244746E656761;
}

uint64_t sub_1C2FFEA98()
{
  return 0x666E49746E656761;
}

uint64_t sub_1C2FFEABC()
{
  return 0x726544746E656761;
}

uint64_t sub_1C2FFEAE0()
{
  return 0x6C6552746E656761;
}

void sub_1C2FFEB04(char *a1)
{
  sub_1C3036E58(*a1);
}

uint64_t sub_1C2FFEB10()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1C3379208();
  sub_1C3000458((uint64_t)v3, v1);
  return sub_1C3379244();
}

void sub_1C2FFEB54(uint64_t a1)
{
  char *v1;

  sub_1C3000458(a1, *v1);
}

void sub_1C2FFEB5C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFEBA4()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFEC38(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFEC80()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFED08(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFED50()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFEE04(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFEE48()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2FFEE90()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFEF00(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFEF44()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFEFA8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFEFF0()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF048(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFF090()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF114(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFF15C()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2FFF1F0()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2FFF270()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF2F0(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFF338()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF3DC(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFF424()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF4B0(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFF4F8()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF57C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFF5C0()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF628(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFF66C()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF6B4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFF6F8()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF744(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFF788()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF830(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFF874()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF8DC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFF920()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFF974(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFF9B8()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFFA0C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFFA54()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFFAAC(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFFAF4()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFFB68(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFFBB0()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFFC54(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFFC9C()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFFD10(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFFD54()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFFDA0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFFDE4()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFFE28(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2FFFE6C()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C2FFFEF0(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C2FFFF38()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2FFFFBC()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C300003C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C3000080()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C30000D0(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3000118()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3000198()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C3000214(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C3000260()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C30002F8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3000340()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C30003A8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C30003F0()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C3000458(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C30004A4()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C30005CC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C3000610()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C30006B0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C30006E4()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C3000738(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C3000784()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C300082C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C3000870()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C30008BC(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3000904()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C3000980(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C30009C8()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C3000A5C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3000AA4()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C3000B14(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3000B5C()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C3000BB4(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3000BFC()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C3000C64(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3000CB0()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C3000D28(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3000D70()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

void sub_1C3000E30(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3000E78()
{
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3000ECC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1C3379208();
  sub_1C3000458((uint64_t)v3, v1);
  return sub_1C3379244();
}

SiriOntology::TerminalElement::OriginType_optional sub_1C3000F0C(Swift::String *a1)
{
  return TerminalElement.OriginType.init(rawValue:)(*a1);
}

uint64_t sub_1C3000F18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TerminalElement.OriginType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C3000F3C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7CEE3D8;
}

uint64_t TerminalElement.DerivedOrigin.adjustmentReason.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1C2FFDDEC(v2, v3);
}

uint64_t TerminalElement.DerivedOrigin.derivedFrom.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall TerminalElement.DerivedOrigin.init(adjustmentReason:derivedFrom:)(SiriOntology::TerminalElement::DerivedOrigin *__return_ptr retstr, SiriOntology::TerminalElement::AdjustmentReason_optional adjustmentReason, Swift::OpaquePointer derivedFrom)
{
  Swift::String_optional v3;

  v3 = *(Swift::String_optional *)(adjustmentReason.value.explanation.value._countAndFlagsBits + 16);
  retstr->adjustmentReason.value.explanation = *(Swift::String_optional *)adjustmentReason.value.explanation.value._countAndFlagsBits;
  retstr->adjustmentReason.value.sourceClass = v3;
  retstr->derivedFrom._rawValue = adjustmentReason.value.explanation.value._object;
}

uint64_t TerminalElement.MatchingSpan.label.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TerminalElement.MatchingSpan.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[528];

  sub_1C2FF6D40(v1 + 16, (uint64_t)v4, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v4, a1, &qword_1EF8194A8);
  return sub_1C2FFE080(v4, sub_1C2FFD5C0);
}

uint64_t TerminalElement.MatchingSpan.input.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 544);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TerminalElement.MatchingSpan.matchedTerm.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 560);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TerminalElement.MatchingSpan.prefix.getter()
{
  return swift_retain();
}

uint64_t TerminalElement.MatchingSpan.suffix.getter()
{
  return swift_retain();
}

uint64_t TerminalElement.MatchingSpan.startIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 592);
}

uint64_t TerminalElement.MatchingSpan.endIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 600);
}

uint64_t TerminalElement.MatchingSpan.startIndexWithoutPrefix.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 608);
}

uint64_t TerminalElement.MatchingSpan.endIndexWithoutSuffix.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 616);
}

uint64_t TerminalElement.MatchingSpan.confidence.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 624);
}

uint64_t TerminalElement.MatchingSpan.prefixSuffixConfidence.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 632);
}

uint64_t TerminalElement.MatchingSpan.isExplicit.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 640);
}

uint64_t TerminalElement.MatchingSpan.isSuffixVariableMatch.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 641);
}

uint64_t TerminalElement.MatchingSpan.isPrefixVariableMatch.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 642);
}

uint64_t TerminalElement.MatchingSpan.isPayloadVariableMatch.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 643);
}

uint64_t TerminalElement.MatchingSpan.locale.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 648);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TerminalElement.MatchingSpan.numberOfWords.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 664);
}

void TerminalElement.MatchingSpan.matchType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 672);
}

uint64_t TerminalElement.MatchingSpan.appId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 680);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TerminalElement.MatchingSpan.matcherNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TerminalElement.MatchingSpan.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TerminalElement.MatchingSpan.alternateInterpretationConfidences.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TerminalElement.MatchingSpan.alternateInterpretationPhoneSequences.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TerminalElement.MatchingSpan.metadata.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 728);
}

uint64_t TerminalElement.MatchingSpan.preITNPhrasesStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 744);
}

uint64_t TerminalElement.MatchingSpan.preITNPhrasesEndTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 760);
}

void *TerminalElement.MatchingSpan.init(label:value:input:matchedTerm:prefix:suffix:startIndex:endIndex:startIndexWithoutPrefix:endIndexWithoutSuffix:confidence:prefixSuffixConfidence:isExplicit:isSuffixVariableMatch:isPrefixVariableMatch:isPayloadVariableMatch:locale:numberOfWords:matchType:appId:matcherNames:tags:alternateInterpretationConfidences:alternateInterpretationPhoneSequences:metadata:preITNPhrasesStartTime:preITNPhrasesEndTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,char *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,char a33)
{
  char v35;
  _QWORD v43[78];
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  _BYTE v61[528];
  _QWORD __src[98];

  sub_1C2FF6D40(a3, (uint64_t)v61, &qword_1EF8194A8);
  v35 = *a21;
  sub_1C2FF6D40((uint64_t)v61, (uint64_t)v43, &qword_1EF8194A8);
  __src[0] = a1;
  v43[66] = a4;
  v43[67] = a5;
  v43[68] = a6;
  v43[69] = a7;
  v43[70] = a8;
  v43[71] = a10;
  v43[72] = a11;
  v43[73] = a12;
  v43[74] = a13;
  v43[75] = a14;
  v43[76] = a15;
  v43[77] = a16;
  v44 = a17;
  v45 = a18;
  v46 = a19;
  v47 = a20;
  v48 = v35;
  v49 = a22;
  v50 = a23;
  v51 = a24;
  v52 = a25;
  v53 = a26;
  v54 = a27;
  v55 = a28;
  v56 = a29 & 1;
  v57 = a30;
  v58 = a31 & 1;
  v59 = a32;
  __src[1] = a2;
  v60 = a33 & 1;
  sub_1C2FF6D40((uint64_t)v61, (uint64_t)&__src[2], &qword_1EF8194A8);
  __src[68] = a4;
  __src[69] = a5;
  __src[70] = a6;
  __src[71] = a7;
  __src[72] = a8;
  __src[73] = a10;
  __src[74] = a11;
  __src[75] = a12;
  __src[76] = a13;
  __src[77] = a14;
  __src[78] = a15;
  __src[79] = a16;
  LODWORD(__src[80]) = a17;
  __src[81] = a18;
  __src[82] = a19;
  __src[83] = a20;
  LOBYTE(__src[84]) = v35;
  __src[85] = a22;
  __src[86] = a23;
  __src[87] = a24;
  __src[88] = a25;
  __src[89] = a26;
  __src[90] = a27;
  __src[91] = a28;
  LOBYTE(__src[92]) = a29 & 1;
  __src[93] = a30;
  LOBYTE(__src[94]) = a31 & 1;
  __src[95] = a32;
  LOBYTE(__src[96]) = a33 & 1;
  return memcpy(a9, __src, 0x301uLL);
}

BOOL static TerminalElement.MatchType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TerminalElement.MatchType.hash(into:)()
{
  return sub_1C3379214();
}

void *static TerminalElement.MatchType.allCases.getter()
{
  return &unk_1E7CEE408;
}

uint64_t TerminalElement.MatchType.hashValue.getter()
{
  sub_1C3379208();
  sub_1C3379214();
  return sub_1C3379244();
}

BOOL sub_1C3001580(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_1C3001594(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7CEE408;
}

uint64_t _s12SiriOntology15TerminalElementV14TemporalIntentO9hashValueSivg_0()
{
  sub_1C3379208();
  sub_1C3379214();
  return sub_1C3379244();
}

uint64_t sub_1C30015E8()
{
  return sub_1C3379214();
}

uint64_t sub_1C3001610()
{
  sub_1C3379208();
  sub_1C3379214();
  return sub_1C3379244();
}

uint64_t TerminalElement.AdjustmentReason.sourceClass.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

SiriOntology::TerminalElement::AdjustmentReason __swiftcall TerminalElement.AdjustmentReason.init(explanation:sourceClass:)(Swift::String_optional explanation, Swift::String_optional sourceClass)
{
  Swift::String_optional *v2;
  SiriOntology::TerminalElement::AdjustmentReason result;

  *v2 = explanation;
  v2[1] = sourceClass;
  result.sourceClass = sourceClass;
  result.explanation = explanation;
  return result;
}

uint64_t TerminalElement.OriginalValue.isFresh.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t TerminalElement.OriginalValue.input.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

SiriOntology::TerminalElement::OriginalValue __swiftcall TerminalElement.OriginalValue.init(isFresh:input:)(Swift::Bool isFresh, Swift::String input)
{
  uint64_t v2;
  SiriOntology::TerminalElement::OriginalValue result;

  *(_BYTE *)v2 = isFresh;
  *(Swift::String *)(v2 + 8) = input;
  result.input = input;
  result.isFresh = isFresh;
  return result;
}

BOOL static TerminalIntentNode.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  BOOL v6;

  v2 = (_QWORD *)a1[2];
  v3 = a1[3];
  v5 = (_QWORD *)a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  return (v6 || (sub_1C3379184() & 1) != 0) && (sub_1C30020E8(v2, v5) & 1) != 0 && sub_1C30021AC(v3, v4);
}

uint64_t sub_1C3001748(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65[17];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    do
    {
      result = 0;
      v5 = a1 + v3;
      v6 = a2 + v3;
      if (*(_QWORD *)(a1 + v3 + 32) != *(_QWORD *)(a2 + v3 + 32)
        || *(_QWORD *)(v5 + 40) != *(_QWORD *)(v6 + 40)
        || *(_DWORD *)(v5 + 48) != *(_DWORD *)(v6 + 48))
      {
        return result;
      }
      v8 = *(_QWORD *)(v5 + 72);
      v7 = *(_QWORD *)(v5 + 80);
      v9 = *(_QWORD **)(v5 + 88);
      v11 = *(_QWORD *)(v6 + 72);
      v10 = *(_QWORD *)(v6 + 80);
      v12 = *(_QWORD **)(v6 + 88);
      if (*(_QWORD *)(v5 + 56) != *(_QWORD *)(v6 + 56) || *(_QWORD *)(v5 + 64) != *(_QWORD *)(v6 + 64))
      {
        v13 = *(_QWORD *)(v5 + 80);
        v14 = *(_QWORD *)(v6 + 80);
        v15 = sub_1C3379184();
        v7 = v13;
        v10 = v14;
        if ((v15 & 1) == 0)
          return 0;
      }
      if ((v8 != v11 || v7 != v10) && (sub_1C3379184() & 1) == 0)
        return 0;
      if (v9)
      {
        if (!v12)
          return 0;
        v16 = v9[3];
        v18 = v9[4];
        v17 = v9[5];
        v19 = v9[7];
        v60 = v9[6];
        v59 = v9[9];
        v20 = v12[2];
        v21 = v12[3];
        v22 = v12[4];
        v23 = v12[5];
        v24 = v12[6];
        v25 = v12[7];
        v26 = v16;
        if (v16)
        {
          v54 = v12[9];
          v55 = v12[8];
          v56 = v9[8];
          v58 = v9[2];
          if (!v21)
          {
            v51 = v12[2];
            v52 = v12[5];
            v53 = v12[4];
            v62 = v12[7];
            v64 = v12[6];
            v40 = v9[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            v50 = v18;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            v41 = v40;
            v46 = v17;
            v49 = v60;
            v47 = v19;
            v45 = v56;
            v48 = v59;
            sub_1C301F734(v41, v26);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            v43 = v58;
            sub_1C301F734(v58, v26);
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v44 = v50;
            v21 = 0;
            goto LABEL_41;
          }
          v27 = v9[5];
          v28 = v9[7];
          if (v9[2] != v20 || v16 != v21)
          {
            v29 = v9[4];
            v30 = v22;
            v31 = v9[3];
            v32 = v23;
            v33 = v24;
            v34 = v25;
            v35 = sub_1C3379184();
            v23 = v32;
            v26 = v31;
            v22 = v30;
            v18 = v29;
            v28 = v19;
            v25 = v34;
            v24 = v33;
            if ((v35 & 1) == 0)
              goto LABEL_37;
          }
          if ((v18 != v22 || v27 != v23)
            && (v36 = v24, v37 = v25, v38 = sub_1C3379184(), v25 = v37, v24 = v36, (v38 & 1) == 0)
            || (v60 != v24 || v28 != v25) && (sub_1C3379184() & 1) == 0)
          {
LABEL_37:
            sub_1C301F734(v58, v26);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return 0;
          }
          if (v56 == v55 && v59 == v54)
          {
            sub_1C301F734(v58, v26);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            v39 = sub_1C3379184();
            sub_1C301F734(v58, v26);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v39 & 1) == 0)
              return 0;
          }
        }
        else if (v21)
        {
          v51 = v12[2];
          v52 = v12[5];
          v53 = v12[4];
          v62 = v12[7];
          v64 = v12[6];
          v54 = v12[9];
          v55 = v12[8];
          v42 = v9[2];
          v57 = v9[8];
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          v43 = v42;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          v44 = v18;
          v45 = v57;
          v46 = v17;
          v47 = v19;
          v48 = v59;
          v49 = v60;
LABEL_41:
          v65[0] = v43;
          v65[1] = v26;
          v65[2] = v44;
          v65[3] = v46;
          v65[4] = v49;
          v65[5] = v47;
          v65[6] = v45;
          v65[7] = v48;
          v65[8] = v51;
          v65[9] = v21;
          v65[10] = v53;
          v65[11] = v52;
          v65[12] = v64;
          v65[13] = v62;
          v65[14] = v55;
          v65[15] = v54;
          sub_1C301F734(v51, v21);
          sub_1C301F784(v65);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_release_n();
          swift_release_n();
          return 0;
        }
      }
      else if (v12)
      {
        return 0;
      }
      v3 += 64;
      --v2;
    }
    while (v2);
  }
  return 1;
}

BOOL sub_1C3001D18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  int v12;
  char v13;
  int v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  int v23;
  char v24;
  int v25;
  char v26;
  uint64_t v27;
  char v28;
  BOOL v29;
  BOOL v31;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  char v39;
  int v40;
  char v41;
  int v42;
  char v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  char v54;
  int v55;
  char v56;
  uint64_t v57;
  char v58;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      v5 = 0;
      v6 = v2 - 1;
      do
      {
        v7 = *(_QWORD *)(a1 + v5 + 48);
        v8 = *(_QWORD *)(a1 + v5 + 56);
        v9 = *(_QWORD *)(a1 + v5 + 80);
        v10 = *(_BYTE *)(a1 + v5 + 88);
        v11 = *(_BYTE *)(a1 + v5 + 89);
        v12 = *(_DWORD *)(a1 + v5 + 92);
        v13 = *(_BYTE *)(a1 + v5 + 96);
        v14 = *(_DWORD *)(a1 + v5 + 100);
        v15 = *(_BYTE *)(a1 + v5 + 104);
        v16 = *(_QWORD *)(a1 + v5 + 112);
        v17 = *(_BYTE *)(a1 + v5 + 120);
        v46 = *(_OWORD *)(a1 + v5 + 32);
        v47 = v7;
        v48 = v8;
        v49 = *(_OWORD *)(a1 + v5 + 64);
        v50 = v9;
        v51 = v10;
        v52 = v11;
        v53 = v12;
        v54 = v13;
        v55 = v14;
        v56 = v15;
        v57 = v16;
        v58 = v17;
        v18 = *(_QWORD *)(a2 + v5 + 48);
        v19 = *(_QWORD *)(a2 + v5 + 56);
        v20 = *(_QWORD *)(a2 + v5 + 80);
        v21 = *(_BYTE *)(a2 + v5 + 88);
        v22 = *(_BYTE *)(a2 + v5 + 89);
        v23 = *(_DWORD *)(a2 + v5 + 92);
        v24 = *(_BYTE *)(a2 + v5 + 96);
        v25 = *(_DWORD *)(a2 + v5 + 100);
        v26 = *(_BYTE *)(a2 + v5 + 104);
        v27 = *(_QWORD *)(a2 + v5 + 112);
        v28 = *(_BYTE *)(a2 + v5 + 120);
        v33 = *(_OWORD *)(a2 + v5 + 32);
        v34 = v18;
        v35 = v19;
        v36 = *(_OWORD *)(a2 + v5 + 64);
        v37 = v20;
        v38 = v21;
        v39 = v22;
        v40 = v23;
        v41 = v24;
        v42 = v25;
        v43 = v26;
        v44 = v27;
        v45 = v28;
        v29 = _s12SiriOntology13UsoIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)&v46, (uint64_t)&v33);
        v31 = v6-- != 0;
        if (!v29)
          break;
        v5 += 96;
      }
      while (v31);
    }
  }
  else
  {
    return 0;
  }
  return v29;
}

uint64_t sub_1C3001E68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  int32x2_t *v8;
  int32x2_t *v9;
  int32x2_t v10;
  BOOL v11;
  int32x2_t *v12;
  int32x2_t *v13;
  int32x2_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v4 = a1 + 32;
    while (1)
    {
      v6 = v4 + 16 * v3;
      v7 = a2 + 32 + 16 * v3;
      if (*(_DWORD *)v6 != *(_DWORD *)v7)
        return 0;
      v8 = *(int32x2_t **)(v6 + 8);
      v9 = *(int32x2_t **)(v7 + 8);
      v10 = v8[2];
      if (*(_QWORD *)&v10 != *(_QWORD *)&v9[2])
        return 0;
      if (v10)
        v11 = v8 == v9;
      else
        v11 = 1;
      if (!v11)
      {
        v12 = v9 + 6;
        v13 = v8 + 6;
        do
        {
          result = 0;
          if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(*(int32x4_t *)v13[-2].i8, *(int32x4_t *)v12[-2].i8)), 0xFuLL))) & 1) == 0)return result;
          v14 = vceq_s32(*v13, *v12);
          if ((v14.i8[0] & 1) == 0 || (v14.i8[4] & 1) == 0)
            return result;
          v12 += 3;
          v13 += 3;
        }
        while (--*(_QWORD *)&v10);
      }
      ++v3;
      result = 1;
      if (v3 == v2)
        return result;
    }
  }
  return 1;
}

BOOL sub_1C3001F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  BOOL v17;
  _OWORD v19[10];
  _OWORD v20[2];
  _OWORD v21[10];
  _OWORD v22[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      v3 = (_OWORD *)(a1 + 32);
      v4 = (_OWORD *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = v3[9];
        v21[8] = v3[8];
        v21[9] = v7;
        v22[0] = v3[10];
        *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)v3 + 169);
        v8 = v3[5];
        v21[4] = v3[4];
        v21[5] = v8;
        v9 = v3[7];
        v21[6] = v3[6];
        v21[7] = v9;
        v10 = v3[1];
        v21[0] = *v3;
        v21[1] = v10;
        v11 = v3[3];
        v21[2] = v3[2];
        v21[3] = v11;
        v12 = v4[9];
        v19[8] = v4[8];
        v19[9] = v12;
        v20[0] = v4[10];
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v4 + 169);
        v13 = v4[5];
        v19[4] = v4[4];
        v19[5] = v13;
        v14 = v4[7];
        v19[6] = v4[6];
        v19[7] = v14;
        v15 = v4[1];
        v19[0] = *v4;
        v19[1] = v15;
        v16 = v4[3];
        v19[2] = v4[2];
        v19[3] = v16;
        v17 = _s12SiriOntology13UsoEntitySpanV2eeoiySbAC_ACtFZ_0((uint64_t)v21, (uint64_t)v19);
        if (!v17)
          break;
        v5 = v6 - 1;
        v4 += 12;
        v3 += 12;
      }
      while (v6);
    }
  }
  else
  {
    return 0;
  }
  return v17;
}

uint64_t sub_1C3002050(int32x2_t *a1, int32x2_t *a2)
{
  int32x2_t v2;
  uint64_t v3;
  int32x2_t *v4;
  int32x2_t *v5;
  int32x2_t v6;
  char v7;
  BOOL v9;

  v2 = a1[2];
  if (*(_QWORD *)&v2 != *(_QWORD *)&a2[2])
    return 0;
  if (!*(_QWORD *)&v2 || a1 == a2)
    return 1;
  v3 = *(_QWORD *)&v2 - 1;
  v4 = a2 + 6;
  v5 = a1 + 6;
  do
  {
    v6 = vceq_s32(*v5, *v4);
    v7 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(*(int32x4_t *)v5[-2].i8, *(int32x4_t *)v4[-2].i8)), 0xFuLL))) & v6.i8[0] & v6.i8[4];
    v9 = v3-- != 0;
    if ((v7 & 1) == 0)
      break;
    v4 += 3;
    v5 += 3;
  }
  while (v9);
  return v7 & 1;
}

uint64_t sub_1C30020E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1C3379184(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1C3379184() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

BOOL sub_1C30021AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  _BYTE v9[1344];
  _BYTE __dst[1344];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      v3 = (char *)(a1 + 32);
      v4 = (char *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        memcpy(__dst, v3, sizeof(__dst));
        memcpy(v9, v4, sizeof(v9));
        v7 = _s12SiriOntology15TerminalElementV2eeoiySbAC_ACtFZ_0((uint64_t)__dst);
        if (!v7)
          break;
        v5 = v6 - 1;
        v4 += 1344;
        v3 += 1344;
      }
      while (v6);
    }
  }
  else
  {
    return 0;
  }
  return v7;
}

uint64_t sub_1C3002254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[1344];
  _BYTE __dst[1352];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = 0;
    v23 = a2 + 32;
    v24 = a1 + 32;
    while (1)
    {
      v5 = (_QWORD *)(v24 + 32 * v3);
      v6 = (_QWORD *)v5[2];
      v7 = v5[3];
      v8 = (_QWORD *)(v23 + 32 * v3);
      v9 = (_QWORD *)v8[2];
      v10 = v8[3];
      v11 = *v5 == *v8 && v5[1] == v8[1];
      if (!v11 && (sub_1C3379184() & 1) == 0)
        break;
      v12 = v6[2];
      if (v12 != v9[2])
        break;
      if (v12)
        v13 = v6 == v9;
      else
        v13 = 1;
      if (!v13)
      {
        v14 = v6[4] == v9[4] && v6[5] == v9[5];
        if (!v14 && (sub_1C3379184() & 1) == 0)
          return 0;
        if (v12 != 1)
        {
          v15 = v6[6] == v9[6] && v6[7] == v9[7];
          if (!v15 && (sub_1C3379184() & 1) == 0)
            return 0;
          v16 = v12 - 2;
          if (v16)
          {
            v20 = v9 + 9;
            v21 = v6 + 9;
            do
            {
              v22 = *(v21 - 1) == *(v20 - 1) && *v21 == *v20;
              if (!v22 && (sub_1C3379184() & 1) == 0)
                return 0;
              v20 += 2;
              v21 += 2;
            }
            while (--v16);
          }
        }
      }
      v17 = *(_QWORD *)(v7 + 16);
      if (v17 != *(_QWORD *)(v10 + 16))
        return 0;
      if (v17 && v7 != v10)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = 0;
        v19 = 32;
        while (1)
        {
          result = (uint64_t)memcpy(__dst, (const void *)(v7 + v19), 0x540uLL);
          if (v18 >= *(_QWORD *)(v10 + 16))
            break;
          memcpy(v25, (const void *)(v10 + v19), sizeof(v25));
          if ((_s12SiriOntology15TerminalElementV2eeoiySbAC_ACtFZ_0(__dst, v25) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return 0;
          }
          ++v18;
          v19 += 1344;
          if (v17 == v18)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_5;
          }
        }
        __break(1u);
        __break(1u);
        return result;
      }
LABEL_5:
      ++v3;
      result = 1;
      if (v3 == v2)
        return result;
    }
  }
  return 0;
}

uint64_t sub_1C30024E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t result;
  _BOOL4 v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a2 + 33);
    v4 = (unsigned __int8 *)(a1 + 33);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v7 = *(v3 - 1);
      v8 = *v3;
      if (v5 == 2)
      {
        if (v7 != 2)
          return 0;
      }
      else
      {
        result = 0;
        v10 = (v5 & 1) == 0;
        if (v7 == 2 || ((v10 ^ v7) & 1) == 0)
          return result;
      }
      if (v6 == 53)
      {
        if (v8 != 53)
          return 0;
      }
      else if (v8 == 53 || v6 != v8)
      {
        return 0;
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

BOOL sub_1C3002588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v11;
  _BOOL8 result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (unsigned __int8 *)(a1 + 32);
  v4 = (unsigned __int8 *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v7 = *v3++;
    v6 = v7;
    v9 = *v4++;
    v8 = v9;
    v11 = v5-- != 0;
    result = v6 == v8;
  }
  while (v6 == v8 && v11);
  return result;
}

uint64_t sub_1C30025E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  float v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  float v15;
  int v16;
  char v17;
  char v18;
  char v19;
  int v23;
  int v24;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    v3 = a2;
    v4 = a1;
    if (a1 != a2)
    {
      for (i = 0; ; i += 48)
      {
        v8 = *(_QWORD *)(v4 + i + 48);
        v7 = *(_QWORD *)(v4 + i + 56);
        v24 = *(_DWORD *)(v4 + i + 64);
        v9 = *(_BYTE *)(v4 + i + 68);
        v10 = *(float *)(v4 + i + 72);
        v11 = *(_BYTE *)(v4 + i + 76);
        v13 = *(_QWORD *)(v3 + i + 48);
        v12 = *(_QWORD *)(v3 + i + 56);
        v23 = *(_DWORD *)(v3 + i + 64);
        v14 = *(unsigned __int8 *)(v3 + i + 68);
        v15 = *(float *)(v3 + i + 72);
        v16 = *(unsigned __int8 *)(v3 + i + 76);
        if (*(_QWORD *)(v4 + i + 32) != *(_QWORD *)(v3 + i + 32)
          || *(_QWORD *)(v4 + i + 40) != *(_QWORD *)(v3 + i + 40))
        {
          v17 = sub_1C3379184();
          v4 = a1;
          v3 = a2;
          if ((v17 & 1) == 0)
            break;
        }
        if (v7)
        {
          if (!v12)
            return 0;
          if (v8 != v13 || v7 != v12)
          {
            v18 = sub_1C3379184();
            v4 = a1;
            v3 = a2;
            if ((v18 & 1) == 0)
              return 0;
          }
        }
        else if (v12)
        {
          return 0;
        }
        if ((v9 & 1) != 0)
        {
          if (!v14)
            return 0;
        }
        else
        {
          if (v24 == v23)
            v19 = v14;
          else
            v19 = 1;
          if ((v19 & 1) != 0)
            return 0;
        }
        if ((v11 & 1) != 0)
        {
          if (!v16)
            return 0;
        }
        else
        {
          if (v10 == v15)
            v6 = v16;
          else
            v6 = 1;
          if ((v6 & 1) != 0)
            return 0;
        }
        if (!--v2)
          return 1;
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1C3002744(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  char v6;
  float v7;
  char v8;
  float v9;
  int v10;
  BOOL v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    for (i = 0; ; i += 24)
    {
      v7 = *(float *)(a1 + i + 48);
      v8 = *(_BYTE *)(a1 + i + 52);
      v9 = *(float *)(a2 + i + 48);
      v10 = *(unsigned __int8 *)(a2 + i + 52);
      v11 = *(_QWORD *)(a1 + i + 32) == *(_QWORD *)(a2 + i + 32) && *(_QWORD *)(a1 + i + 40) == *(_QWORD *)(a2 + i + 40);
      if (!v11 && (sub_1C3379184() & 1) == 0)
        break;
      if ((v8 & 1) != 0)
      {
        if (!v10)
          return 0;
      }
      else
      {
        if (v7 == v9)
          v6 = v10;
        else
          v6 = 1;
        if ((v6 & 1) != 0)
          return 0;
      }
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1C3002804(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_Span, (uint64_t (*)(char *, char *))static Siri_Nl_Core_Protocol_Span.== infix(_:_:));
}

uint64_t sub_1C3002818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for Siri_Nl_Core_Protocol_UtteranceSpan(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (_DWORD *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v10 = (_DWORD *)((char *)&v15 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v15 = *(_QWORD *)(v8 + 72);
    v16 = a1;
    while (1)
    {
      sub_1C2FF6C7C(a1 + v12, (uint64_t)v10, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceSpan);
      sub_1C2FF6C7C(a2 + v12, (uint64_t)v7, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceSpan);
      if (*v10 != *v7)
        break;
      if (v10[1] != v7[1])
        break;
      if (v10[2] != v7[2])
        break;
      if (v10[3] != v7[3])
        break;
      if (v10[4] != v7[4])
        break;
      if (v10[5] != v7[5])
        break;
      sub_1C3378914();
      sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v13 = sub_1C3378BD8();
      a1 = v16;
      if ((v13 & 1) == 0)
        break;
      sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceSpan);
      sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceSpan);
      v12 += v15;
      result = 1;
      if (!--v11)
        return result;
    }
    sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceSpan);
    sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceSpan);
  }
  return 0;
}

uint64_t sub_1C3002A38(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct, (uint64_t (*)(char *, char *))_s12SiriOntology0A31_Nl_Core_Protocol_UserDialogActV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1C3002A4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_1C2FF6C7C(a1 + v16, (uint64_t)v14, a3);
        sub_1C2FF6C7C(a2 + v16, (uint64_t)v11, a3);
        v19 = a4(v14, v11);
        sub_1C2FF6CC0((uint64_t)v11, a3);
        sub_1C2FF6CC0((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1C3002B88(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_RRAnnotation, (uint64_t (*)(char *, char *))static Siri_Nl_Core_Protocol_RRAnnotation.== infix(_:_:));
}

uint64_t sub_1C3002B9C(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph, (uint64_t (*)(char *, char *))static Siri_Nl_Core_Protocol_UsoGraph.== infix(_:_:));
}

uint64_t sub_1C3002BB0(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_AsrTokenInformation, (uint64_t (*)(char *, char *))_s12SiriOntology0A37_Nl_Core_Protocol_AsrTokenInformationV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1C3002BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  char v33;
  BOOL v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1C33788CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196E0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196E8);
  MEMORY[0x1E0C80A78](v41);
  v44 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Siri_Nl_Core_Protocol_RewrittenUtterance(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (double *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v17 = (double *)((char *)&v37 - v16);
  v42 = a1;
  v43 = a2;
  v18 = *(_QWORD *)(a1 + 16);
  if (v18 != *(_QWORD *)(a2 + 16))
    goto LABEL_21;
  if (!v18 || v42 == v43)
  {
    v33 = 1;
    return v33 & 1;
  }
  v40 = v5;
  v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v37 = *(_QWORD *)(v15 + 72);
  v20 = v18 - 1;
  v39 = v11;
  while (1)
  {
    sub_1C2FF6C7C(v42 + v19, (uint64_t)v17, type metadata accessor for Siri_Nl_Core_Protocol_RewrittenUtterance);
    sub_1C2FF6C7C(v43 + v19, (uint64_t)v14, type metadata accessor for Siri_Nl_Core_Protocol_RewrittenUtterance);
    v21 = *(int *)(v11 + 24);
    v22 = (uint64_t)v14 + v21;
    v23 = v44;
    v24 = v44 + *(int *)(v41 + 48);
    sub_1C2FF6CFC((uint64_t)v17 + v21, v44, &qword_1EF8196E0);
    sub_1C2FF6CFC(v22, v24, &qword_1EF8196E0);
    v25 = v40;
    v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
    if (v26(v23, 1, v4) != 1)
      break;
    if (v26(v24, 1, v4) != 1)
      goto LABEL_19;
    sub_1C2FF9138(v23, &qword_1EF8196E0);
LABEL_10:
    if (*v17 != *v14)
      goto LABEL_20;
    v11 = v39;
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v33 = sub_1C3378BD8();
    sub_1C2FF6CC0((uint64_t)v14, type metadata accessor for Siri_Nl_Core_Protocol_RewrittenUtterance);
    sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Siri_Nl_Core_Protocol_RewrittenUtterance);
    v35 = v20-- != 0;
    if ((v33 & 1) != 0)
    {
      v19 += v37;
      if (v35)
        continue;
    }
    return v33 & 1;
  }
  sub_1C2FF6CFC(v23, (uint64_t)v9, &qword_1EF8196E0);
  if (v26(v24, 1, v4) != 1)
  {
    v27 = v4;
    v28 = v9;
    v29 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v38, v24, v27);
    sub_1C301F860(&qword_1EF8196F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA36A8], MEMORY[0x1E0DA36B8]);
    v30 = sub_1C3378BD8();
    v31 = *(void (**)(char *, uint64_t))(v25 + 8);
    v32 = v29;
    v9 = v28;
    v4 = v27;
    v31(v32, v27);
    v31(v9, v27);
    sub_1C2FF9138(v44, &qword_1EF8196E0);
    if ((v30 & 1) == 0)
      goto LABEL_20;
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v4);
LABEL_19:
  sub_1C2FF9138(v23, &qword_1EF8196E8);
LABEL_20:
  sub_1C2FF6CC0((uint64_t)v14, type metadata accessor for Siri_Nl_Core_Protocol_RewrittenUtterance);
  sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Siri_Nl_Core_Protocol_RewrittenUtterance);
LABEL_21:
  v33 = 0;
  return v33 & 1;
}

uint64_t sub_1C3002FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_1C33788CC();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_1C301F860(&qword_1EF8196F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA36A8], MEMORY[0x1E0DA36B8]);
        v17 = sub_1C3378BD8();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1C3003148(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_UserParse, (uint64_t (*)(char *, char *))static Siri_Nl_Core_Protocol_UserParse.== infix(_:_:));
}

uint64_t sub_1C300315C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  char *v17;

  v4 = type metadata accessor for Siri_Nl_Core_Protocol_RepetitionResult(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v16 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v16 = *(_QWORD *)(v8 + 72);
    v17 = v7;
    while (1)
    {
      sub_1C2FF6C7C(a1 + v12, (uint64_t)v10, type metadata accessor for Siri_Nl_Core_Protocol_RepetitionResult);
      sub_1C2FF6C7C(a2 + v12, (uint64_t)v7, type metadata accessor for Siri_Nl_Core_Protocol_RepetitionResult);
      if (*(_DWORD *)v10 != *(_DWORD *)v7)
        break;
      v13 = *((_QWORD *)v7 + 1);
      if (v7[16] == 1)
        __asm { BR              X10 }
      if (*((_QWORD *)v10 + 1) != v13)
        break;
      sub_1C3378914();
      sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v14 = sub_1C3378BD8();
      v7 = v17;
      if ((v14 & 1) == 0)
        break;
      sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Siri_Nl_Core_Protocol_RepetitionResult);
      sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Siri_Nl_Core_Protocol_RepetitionResult);
      v12 += v16;
      if (!--v11)
        return 1;
    }
    sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Siri_Nl_Core_Protocol_RepetitionResult);
    sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Siri_Nl_Core_Protocol_RepetitionResult);
    return 0;
  }
  return 1;
}

uint64_t sub_1C3003394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;

  v18 = type metadata accessor for Siri_Nl_Core_Protocol_TurnInput(0);
  v4 = MEMORY[0x1E0C80A78](v18);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v17 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 == *(_QWORD *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
      return 1;
    v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v17 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_1C2FF6C7C(a1 + v11, (uint64_t)v9, type metadata accessor for Siri_Nl_Core_Protocol_TurnInput);
      sub_1C2FF6C7C(a2 + v11, (uint64_t)v6, type metadata accessor for Siri_Nl_Core_Protocol_TurnInput);
      v12 = *(int *)(v18 + 20);
      v13 = *(_QWORD *)&v9[v12];
      v14 = *(_QWORD *)&v6[v12];
      if (v13 != v14)
      {
        swift_retain();
        swift_retain();
        v15 = sub_1C312621C(v13, v14);
        swift_release();
        swift_release();
        if (!v15)
          break;
      }
      sub_1C3378914();
      sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      if ((sub_1C3378BD8() & 1) == 0)
        break;
      sub_1C2FF6CC0((uint64_t)v6, type metadata accessor for Siri_Nl_Core_Protocol_TurnInput);
      sub_1C2FF6CC0((uint64_t)v9, type metadata accessor for Siri_Nl_Core_Protocol_TurnInput);
      v11 += v17;
      if (!--v10)
        return 1;
    }
    sub_1C2FF6CC0((uint64_t)v6, type metadata accessor for Siri_Nl_Core_Protocol_TurnInput);
    sub_1C2FF6CC0((uint64_t)v9, type metadata accessor for Siri_Nl_Core_Protocol_TurnInput);
  }
  return 0;
}

uint64_t sub_1C300356C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  BOOL v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogAct(0);
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v44 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819700);
  MEMORY[0x1E0C80A78](v45);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogActGroup(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v17 = (uint64_t *)((char *)&v39 - v16);
  v47 = a1;
  v48 = a2;
  v18 = *(_QWORD *)(a1 + 16);
  if (v18 != *(_QWORD *)(a2 + 16))
    goto LABEL_26;
  if (!v18 || v47 == v48)
  {
    v35 = 1;
    return v35 & 1;
  }
  v42 = v8;
  v43 = v4;
  v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v40 = *(_QWORD *)(v15 + 72);
  v20 = v18 - 1;
  v41 = v11;
  while (1)
  {
    sub_1C2FF6C7C(v47 + v19, (uint64_t)v17, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogActGroup);
    sub_1C2FF6C7C(v48 + v19, (uint64_t)v14, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogActGroup);
    v21 = *(int *)(v11 + 24);
    v22 = (uint64_t)v14 + v21;
    v23 = (uint64_t)&v10[*(int *)(v45 + 48)];
    v24 = &qword_1EF8196F8;
    sub_1C2FF6CFC((uint64_t)v17 + v21, (uint64_t)v10, &qword_1EF8196F8);
    sub_1C2FF6CFC(v22, v23, &qword_1EF8196F8);
    v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
    if (v25(v10, 1, v4) != 1)
      break;
    if (v25((char *)v23, 1, v4) != 1)
    {
      v24 = &qword_1EF819700;
      goto LABEL_24;
    }
    sub_1C2FF9138((uint64_t)v10, &qword_1EF8196F8);
LABEL_12:
    if ((sub_1C300356C(*v17, *v14) & 1) == 0)
      goto LABEL_25;
    v11 = v41;
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v35 = sub_1C3378BD8();
    sub_1C2FF6CC0((uint64_t)v14, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogActGroup);
    sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogActGroup);
    v37 = v20-- != 0;
    if ((v35 & 1) != 0)
    {
      v19 += v40;
      if (v37)
        continue;
    }
    return v35 & 1;
  }
  v26 = (uint64_t)v42;
  sub_1C2FF6CFC((uint64_t)v10, (uint64_t)v42, &qword_1EF8196F8);
  if (v25((char *)v23, 1, v4) == 1)
  {
    v24 = &qword_1EF819700;
    goto LABEL_23;
  }
  v27 = v44;
  sub_1C2FF6C38(v23, v44, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogAct);
  v28 = *(int *)(v4 + 20);
  v29 = *(_QWORD *)(v26 + v28);
  v30 = *(_QWORD *)(v27 + v28);
  if (v29 == v30
    || (swift_retain(), swift_retain(), v31 = sub_1C31383AC(v29, v30), swift_release(), swift_release(), v31))
  {
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v32 = (uint64_t)v42;
    v33 = v44;
    v34 = sub_1C3378BD8();
    sub_1C2FF6CC0(v33, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogAct);
    sub_1C2FF6CC0(v32, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogAct);
    sub_1C2FF9138((uint64_t)v10, &qword_1EF8196F8);
    if ((v34 & 1) == 0)
      goto LABEL_25;
    goto LABEL_12;
  }
  sub_1C2FF6CC0(v44, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogAct);
  v26 = (uint64_t)v42;
LABEL_23:
  sub_1C2FF6CC0(v26, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogAct);
LABEL_24:
  sub_1C2FF9138((uint64_t)v10, v24);
LABEL_25:
  sub_1C2FF6CC0((uint64_t)v14, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogActGroup);
  sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogActGroup);
LABEL_26:
  v35 = 0;
  return v35 & 1;
}

uint64_t sub_1C30039E0(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_Task, (uint64_t (*)(char *, char *))static Siri_Nl_Core_Protocol_Task.== infix(_:_:));
}

uint64_t sub_1C30039F4(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_EntityCandidate, (uint64_t (*)(char *, char *))_s12SiriOntology0A33_Nl_Core_Protocol_EntityCandidateV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1C3003A08(uint64_t a1, uint64_t a2)
{
  return sub_1C3004E34(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_SystemDialogAct, (uint64_t (*)(uint64_t, uint64_t))sub_1C31383AC);
}

uint64_t sub_1C3003A1C(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_UsoNode, (uint64_t (*)(char *, char *))static Siri_Nl_Core_Protocol_UsoNode.== infix(_:_:));
}

uint64_t sub_1C3003A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  BOOL v38;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = type metadata accessor for Siri_Nl_Core_Protocol_UsoEdgeLabel(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196D0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196D8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Siri_Nl_Core_Protocol_UsoEdge(0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (_DWORD *)((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x1E0C80A78](v15);
  v21 = (_DWORD *)((char *)&v40 - v20);
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
  {
LABEL_22:
    v36 = 0;
    return v36 & 1;
  }
  v43 = v11;
  if (v22 && a1 != a2)
  {
    v48 = v4;
    v49 = v18;
    v41 = v7;
    v42 = v10;
    v46 = a1;
    v47 = v5;
    v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v24 = *(_QWORD *)(v19 + 72);
    v44 = a2;
    v45 = v24;
    v25 = v22 - 1;
    v26 = v43;
    while (1)
    {
      sub_1C2FF6C7C(a1 + v23, (uint64_t)v21, type metadata accessor for Siri_Nl_Core_Protocol_UsoEdge);
      sub_1C2FF6C7C(a2 + v23, (uint64_t)v17, type metadata accessor for Siri_Nl_Core_Protocol_UsoEdge);
      if (*v21 != *v17 || v21[1] != v17[1])
        break;
      v27 = *(int *)(v49 + 28);
      v28 = (char *)v17 + v27;
      v29 = (uint64_t)&v13[*(int *)(v26 + 48)];
      sub_1C2FF6CFC((uint64_t)v21 + v27, (uint64_t)v13, &qword_1EF8196D0);
      v30 = (uint64_t)v28;
      v31 = v48;
      sub_1C2FF6CFC(v30, v29, &qword_1EF8196D0);
      v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
      if (v32((uint64_t)v13, 1, v31) == 1)
      {
        if (v32(v29, 1, v31) != 1)
          goto LABEL_20;
        sub_1C2FF9138((uint64_t)v13, &qword_1EF8196D0);
      }
      else
      {
        v33 = (uint64_t)v42;
        sub_1C2FF6CFC((uint64_t)v13, (uint64_t)v42, &qword_1EF8196D0);
        if (v32(v29, 1, v31) == 1)
        {
          sub_1C2FF6CC0(v33, type metadata accessor for Siri_Nl_Core_Protocol_UsoEdgeLabel);
LABEL_20:
          sub_1C2FF9138((uint64_t)v13, &qword_1EF8196D8);
          break;
        }
        v34 = (uint64_t)v41;
        sub_1C2FF6C38(v29, (uint64_t)v41, type metadata accessor for Siri_Nl_Core_Protocol_UsoEdgeLabel);
        v35 = static Siri_Nl_Core_Protocol_UsoEdgeLabel.== infix(_:_:)(v33, v34);
        sub_1C2FF6CC0(v34, type metadata accessor for Siri_Nl_Core_Protocol_UsoEdgeLabel);
        sub_1C2FF6CC0(v33, type metadata accessor for Siri_Nl_Core_Protocol_UsoEdgeLabel);
        sub_1C2FF9138((uint64_t)v13, &qword_1EF8196D0);
        v26 = v43;
        if ((v35 & 1) == 0)
          break;
      }
      sub_1C3378914();
      sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v36 = sub_1C3378BD8();
      sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Siri_Nl_Core_Protocol_UsoEdge);
      sub_1C2FF6CC0((uint64_t)v21, type metadata accessor for Siri_Nl_Core_Protocol_UsoEdge);
      v38 = v25-- != 0;
      if ((v36 & 1) != 0)
      {
        a2 = v44;
        v23 += v45;
        a1 = v46;
        if (v38)
          continue;
      }
      return v36 & 1;
    }
    sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Siri_Nl_Core_Protocol_UsoEdge);
    sub_1C2FF6CC0((uint64_t)v21, type metadata accessor for Siri_Nl_Core_Protocol_UsoEdge);
    goto LABEL_22;
  }
  v36 = 1;
  return v36 & 1;
}

uint64_t sub_1C3003E04(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_UsoEntityIdentifier, (uint64_t (*)(char *, char *))static Siri_Nl_Core_Protocol_UsoEntityIdentifier.== infix(_:_:));
}

uint64_t sub_1C3003E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for Siri_Nl_Core_Protocol_UtteranceAlignment(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_16:
    v14 = 0;
    return v14 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v19 = *(_QWORD *)(v8 + 72);
    v13 = v11 - 1;
    while (1)
    {
      sub_1C2FF6C7C(a1 + v12, (uint64_t)v10, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceAlignment);
      sub_1C2FF6C7C(a2 + v12, (uint64_t)v7, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceAlignment);
      if (*(_DWORD *)v10 != *(_DWORD *)v7
        || (sub_1C3002818(*((_QWORD *)v10 + 1), *((_QWORD *)v7 + 1)) & 1) == 0
        || *((_DWORD *)v10 + 4) != *((_DWORD *)v7 + 4))
      {
        break;
      }
      sub_1C3378914();
      sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v14 = sub_1C3378BD8();
      sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceAlignment);
      sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceAlignment);
      v16 = v13-- != 0;
      if ((v14 & 1) != 0)
      {
        v12 += v19;
        if (v16)
          continue;
      }
      return v14 & 1;
    }
    sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceAlignment);
    sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceAlignment);
    goto LABEL_16;
  }
  v14 = 1;
  return v14 & 1;
}

uint64_t sub_1C3004004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  _BYTE *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (uint64_t *)(a1 + 32);
  for (i = (_BYTE *)(a2 + 40); ; i += 16)
  {
    v6 = *v3;
    v3 += 2;
    v5 = v6;
    v7 = *((_QWORD *)i - 1);
    if (*i == 1)
      break;
    if (v5 != v7)
      return 0;
    if (!--v2)
      return 1;
  }
  return ((uint64_t (*)(void))((char *)&loc_1C300406C + 4 * byte_1C3388F8D[v7]))();
}

uint64_t sub_1C30040A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v10 = (uint64_t *)((char *)&v16 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v16 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_1C2FF6C7C(a1 + v12, (uint64_t)v10, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
      sub_1C2FF6C7C(a2 + v12, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
      v13 = *v10 == *v7 && v10[1] == v7[1];
      if (!v13 && (sub_1C3379184() & 1) == 0)
        break;
      if ((sub_1C300429C(v10[2], v7[2]) & 1) == 0)
        break;
      v17 = v11;
      sub_1C3378914();
      sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v14 = v17;
      if ((sub_1C3378BD8() & 1) == 0)
        break;
      sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
      sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
      v12 += v16;
      v11 = v14 - 1;
      if (!v11)
        return 1;
    }
    sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
    sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
  }
  return 0;
}

uint64_t sub_1C300429C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t result;
  unint64_t v53;
  BOOL v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  BOOL v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  int EnumCaseMultiPayload;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  BOOL v92;
  _QWORD *v93;
  _QWORD *v94;
  BOOL v95;
  char v96;
  char v97;
  _QWORD *v98;
  _QWORD *v99;
  BOOL v100;
  char v101;
  uint64_t *v102;
  _QWORD v103[2];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  MEMORY[0x1E0C80A78](v4);
  v128 = (_QWORD *)((char *)v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196A0);
  MEMORY[0x1E0C80A78](v120);
  v7 = (char *)v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value(0);
  v126 = *(_QWORD *)(v122 - 8);
  v8 = MEMORY[0x1E0C80A78](v122);
  v119 = (_QWORD *)((char *)v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x1E0C80A78](v8);
  v118 = (_QWORD *)((char *)v103 - v11);
  MEMORY[0x1E0C80A78](v10);
  v123 = (uint64_t)v103 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DE880);
  MEMORY[0x1E0C80A78](v13);
  v124 = (uint64_t)v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196A8);
  MEMORY[0x1E0C80A78](v125);
  v16 = (char *)v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue(0);
  v121 = *(_QWORD *)(v127 - 8);
  v17 = MEMORY[0x1E0C80A78](v127);
  v19 = (char *)v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v103 - v20;
  v22 = type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState(0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v23);
  v29 = (char *)v103 - v28;
  v30 = *(_QWORD *)(a1 + 16);
  if (v30 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v30 || a1 == a2)
    return 1;
  v112 = v26;
  v103[1] = v4;
  v113 = v7;
  v31 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v32 = a1 + v31;
  v33 = 0;
  v34 = a2 + v31;
  v35 = *(_QWORD *)(v27 + 72);
  v36 = v122;
  v37 = v127;
  v111 = v34;
  v108 = v30;
  v107 = v32;
  v106 = v35;
  while (1)
  {
    v115 = v33;
    v38 = v35 * v33;
    sub_1C2FF6C7C(v32 + v38, (uint64_t)v29, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
    sub_1C2FF6C7C(v34 + v38, (uint64_t)v25, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
    if (*(_DWORD *)v29 != *(_DWORD *)v25
      || (v39 = *((_QWORD *)v29 + 1),
          v40 = *((_QWORD *)v25 + 1),
          v41 = *(_QWORD *)(v39 + 16),
          v41 != *(_QWORD *)(v40 + 16)))
    {
LABEL_111:
      sub_1C2FF6CC0((uint64_t)v25, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
      sub_1C2FF6CC0((uint64_t)v29, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
      return 0;
    }
    if (v41 && v39 != v40)
      break;
LABEL_97:
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v101 = sub_1C3378BD8();
    v34 = v111;
    if ((v101 & 1) == 0)
      goto LABEL_111;
    v33 = v115 + 1;
    sub_1C2FF6CC0((uint64_t)v25, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
    sub_1C2FF6CC0((uint64_t)v29, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
    result = 1;
    v32 = v107;
    v35 = v106;
    if (v33 == v108)
      return result;
  }
  v42 = 0;
  v43 = (*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
  v44 = v39 + v43;
  v114 = v40 + v43;
  v45 = *(_QWORD *)(v121 + 72);
  v117 = v25;
  v109 = v41;
  v110 = v40;
  v105 = v44;
  v104 = v45;
  while (1)
  {
    v46 = v16;
    v47 = v29;
    v48 = v36;
    v49 = v37;
    v50 = v42;
    v51 = v45 * v42;
    result = sub_1C2FF6C7C(v44 + v45 * v42, (uint64_t)v21, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
    v53 = *(_QWORD *)(v40 + 16);
    v116 = v50;
    if (v50 >= v53)
      break;
    sub_1C2FF6C7C(v114 + v51, (uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
    v54 = *(_QWORD *)v21 == *(_QWORD *)v19 && *((_QWORD *)v21 + 1) == *((_QWORD *)v19 + 1);
    v37 = v49;
    v36 = v48;
    v29 = v47;
    v16 = v46;
    v25 = v117;
    if (!v54 && (sub_1C3379184() & 1) == 0
      || (*((_QWORD *)v21 + 2) != *((_QWORD *)v19 + 2) || *((_QWORD *)v21 + 3) != *((_QWORD *)v19 + 3))
      && (sub_1C3379184() & 1) == 0)
    {
      goto LABEL_110;
    }
    if (*((double *)v21 + 4) != *((double *)v19 + 4))
      goto LABEL_110;
    if (v21[40] != v19[40])
      goto LABEL_110;
    v55 = (_QWORD *)*((_QWORD *)v21 + 6);
    v56 = (_QWORD *)*((_QWORD *)v19 + 6);
    v57 = v55[2];
    if (v57 != v56[2])
      goto LABEL_110;
    if (v57 && v55 != v56)
    {
      if ((v55[4] != v56[4] || v55[5] != v56[5]) && (sub_1C3379184() & 1) == 0)
        goto LABEL_110;
      v58 = v57 - 1;
      if (v58)
      {
        v90 = v56 + 7;
        v91 = v55 + 7;
        do
        {
          v92 = *(v91 - 1) == *(v90 - 1) && *v91 == *v90;
          if (!v92 && (sub_1C3379184() & 1) == 0)
            goto LABEL_110;
          v90 += 2;
          v91 += 2;
        }
        while (--v58);
      }
    }
    v59 = (_QWORD *)*((_QWORD *)v21 + 7);
    v60 = (_QWORD *)*((_QWORD *)v19 + 7);
    v61 = v59[2];
    if (v61 != v60[2])
      goto LABEL_110;
    if (v61)
      v62 = v59 == v60;
    else
      v62 = 1;
    if (!v62)
    {
      v63 = v59[4] == v60[4] && v59[5] == v60[5];
      if (!v63 && (sub_1C3379184() & 1) == 0)
        goto LABEL_110;
      v64 = v61 - 1;
      if (v64)
      {
        v93 = v60 + 7;
        v94 = v59 + 7;
        do
        {
          v95 = *(v94 - 1) == *(v93 - 1) && *v94 == *v93;
          if (!v95 && (sub_1C3379184() & 1) == 0)
            goto LABEL_110;
          v93 += 2;
          v94 += 2;
        }
        while (--v64);
      }
    }
    v65 = *(int *)(v37 + 40);
    v66 = (uint64_t)&v19[v65];
    v67 = (uint64_t)&v16[*(int *)(v125 + 48)];
    sub_1C2FF6CFC((uint64_t)&v21[v65], (uint64_t)v16, &qword_1EF7DE880);
    sub_1C2FF6CFC(v66, v67, &qword_1EF7DE880);
    v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48);
    if (v68((uint64_t)v16, 1, v36) == 1)
    {
      if (v68(v67, 1, v36) != 1)
      {
        v102 = &qword_1EF8196A8;
        goto LABEL_109;
      }
    }
    else
    {
      v69 = v16;
      v70 = (uint64_t)v16;
      v71 = v36;
      v72 = v124;
      sub_1C2FF6CFC(v70, v124, &qword_1EF7DE880);
      if (v68(v67, 1, v71) == 1)
      {
        v16 = v69;
        v102 = &qword_1EF8196A8;
        goto LABEL_108;
      }
      v73 = v123;
      sub_1C2FF6C38(v67, v123, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
      v74 = (uint64_t)v113;
      v75 = &v113[*(int *)(v120 + 48)];
      sub_1C2FF6C7C(v72, (uint64_t)v113, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
      sub_1C2FF6C7C(v73, (uint64_t)v75, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
      v54 = swift_getEnumCaseMultiPayload() == 1;
      v36 = v71;
      v76 = v74;
      if (v54)
      {
        v77 = v119;
        sub_1C2FF6C7C(v74, (uint64_t)v119, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
        v16 = v69;
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          sub_1C2FF6CC0((uint64_t)v77, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
LABEL_106:
          v25 = v117;
          sub_1C2FF9138((uint64_t)v113, &qword_1EF8196A0);
          goto LABEL_107;
        }
        v78 = (uint64_t)v75;
        v79 = v128;
        sub_1C2FF6C38(v78, (uint64_t)v128, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
        v37 = v127;
        v25 = v117;
        if ((*v77 != *v79 || v77[1] != v79[1]) && (sub_1C3379184() & 1) == 0)
          goto LABEL_101;
        if ((v77[2] != v128[2] || v77[3] != v128[3]) && (sub_1C3379184() & 1) == 0)
          goto LABEL_101;
        if ((v77[4] != v128[4] || v77[5] != v128[5]) && (sub_1C3379184() & 1) == 0)
          goto LABEL_101;
        v80 = (_QWORD *)v77[6];
        v81 = (_QWORD *)v128[6];
        v82 = v80[2];
        if (v82 != v81[2])
          goto LABEL_101;
        if (v82 && v80 != v81)
        {
          if ((v80[4] != v81[4] || v80[5] != v81[5]) && (sub_1C3379184() & 1) == 0)
            goto LABEL_101;
          v83 = v82 - 1;
          if (v83)
          {
            v98 = v81 + 7;
            v99 = v80 + 7;
            while (1)
            {
              v100 = *(v99 - 1) == *(v98 - 1) && *v99 == *v98;
              if (!v100 && (sub_1C3379184() & 1) == 0)
                break;
              v98 += 2;
              v99 += 2;
              if (!--v83)
                goto LABEL_62;
            }
LABEL_101:
            sub_1C2FF6CC0((uint64_t)v128, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
            sub_1C2FF6CC0((uint64_t)v77, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
LABEL_102:
            sub_1C2FF6CC0((uint64_t)v113, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
LABEL_107:
            v72 = v124;
            sub_1C2FF6CC0(v123, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
            v102 = &qword_1EF7DE880;
LABEL_108:
            sub_1C2FF6CC0(v72, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
LABEL_109:
            sub_1C2FF9138((uint64_t)v16, v102);
LABEL_110:
            sub_1C2FF6CC0((uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
            sub_1C2FF6CC0((uint64_t)v21, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
            goto LABEL_111;
          }
        }
LABEL_62:
        sub_1C3378914();
        sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
        if ((sub_1C3378BD8() & 1) == 0)
          goto LABEL_101;
        sub_1C2FF6CC0((uint64_t)v128, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
        sub_1C2FF6CC0((uint64_t)v77, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
        v36 = v122;
      }
      else
      {
        v84 = v118;
        sub_1C2FF6C7C(v76, (uint64_t)v118, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
        v86 = *v84;
        v85 = v84[1];
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v16 = v69;
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_106;
        }
        v88 = *(_QWORD *)v75;
        v89 = *((_QWORD *)v75 + 1);
        v25 = v117;
        if (v86 == v88 && v85 == v89)
        {
          swift_bridgeObjectRelease_n();
          v37 = v127;
        }
        else
        {
          v96 = sub_1C3379184();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v37 = v127;
          if ((v96 & 1) == 0)
            goto LABEL_102;
        }
      }
      sub_1C2FF6CC0((uint64_t)v113, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
      sub_1C2FF6CC0(v123, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
      sub_1C2FF6CC0(v124, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
    }
    sub_1C2FF9138((uint64_t)v16, &qword_1EF7DE880);
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v97 = sub_1C3378BD8();
    sub_1C2FF6CC0((uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
    sub_1C2FF6CC0((uint64_t)v21, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
    v40 = v110;
    if ((v97 & 1) == 0)
      goto LABEL_111;
    v42 = v116 + 1;
    v44 = v105;
    v45 = v104;
    if (v116 + 1 == v109)
      goto LABEL_97;
  }
  __break(1u);
  __break(1u);
  return result;
}

uint64_t sub_1C3004E0C(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue, (uint64_t (*)(char *, char *))static Com_Apple_Siri_Product_Proto_StatefulValue.== infix(_:_:));
}

uint64_t sub_1C3004E20(uint64_t a1, uint64_t a2)
{
  return sub_1C3004E34(a1, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent, sub_1C3047738);
}

uint64_t sub_1C3004E34(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  BOOL v22;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v25 = a4;
  v27 = a3(0);
  v7 = MEMORY[0x1E0C80A78](v27);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v24 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13 != *(_QWORD *)(a2 + 16))
  {
LABEL_15:
    v20 = 0;
    return v20 & 1;
  }
  if (v13 && a1 != a2)
  {
    v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v26 = *(_QWORD *)(v10 + 72);
    v15 = v13 - 1;
    while (1)
    {
      sub_1C2FF6C7C(a1 + v14, (uint64_t)v12, a3);
      sub_1C2FF6C7C(a2 + v14, (uint64_t)v9, a3);
      v16 = *(int *)(v27 + 20);
      v17 = *(_QWORD *)&v12[v16];
      v18 = *(_QWORD *)&v9[v16];
      if (v17 != v18)
      {
        swift_retain();
        swift_retain();
        v19 = v25(v17, v18);
        swift_release();
        swift_release();
        if ((v19 & 1) == 0)
          break;
      }
      sub_1C3378914();
      sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v20 = sub_1C3378BD8();
      sub_1C2FF6CC0((uint64_t)v9, a3);
      sub_1C2FF6CC0((uint64_t)v12, a3);
      v22 = v15-- != 0;
      if ((v20 & 1) != 0)
      {
        v14 += v26;
        if (v22)
          continue;
      }
      return v20 & 1;
    }
    sub_1C2FF6CC0((uint64_t)v9, a3);
    sub_1C2FF6CC0((uint64_t)v12, a3);
    goto LABEL_15;
  }
  v20 = 1;
  return v20 & 1;
}

BOOL sub_1C300501C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1C3005088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v31 - v9;
  v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 != *(_QWORD *)(a2 + 16))
  {
LABEL_17:
    v30 = 0;
    return v30 & 1;
  }
  v40 = (uint64_t)&v31 - v16;
  if (!v17 || a1 == a2)
  {
    v30 = 1;
    return v30 & 1;
  }
  v32 = v5;
  v18 = 0;
  v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v37 = a2 + v19;
  v38 = a1 + v19;
  v36 = *(_QWORD *)(v15 + 72);
  v20 = v40;
  v34 = v11;
  v35 = v14;
  v33 = v17;
  while (1)
  {
    v39 = v18;
    v21 = v36 * v18;
    sub_1C2FF6C7C(v38 + v36 * v18, v20, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
    sub_1C2FF6C7C(v37 + v21, (uint64_t)v14, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
    v22 = *(_QWORD *)v20;
    v23 = *(_QWORD *)v14;
    v24 = *(_QWORD *)(*(_QWORD *)v20 + 16);
    if (v24 != *(_QWORD *)(*(_QWORD *)v14 + 16))
    {
LABEL_16:
      sub_1C2FF6CC0((uint64_t)v35, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
      sub_1C2FF6CC0(v40, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
      goto LABEL_17;
    }
    if (v24 && v22 != v23)
      break;
LABEL_12:
    v14 = v35;
    v20 = v40;
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v30 = sub_1C3378BD8();
    sub_1C2FF6CC0((uint64_t)v14, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
    sub_1C2FF6CC0(v20, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
    if ((v30 & 1) != 0)
    {
      v18 = v39 + 1;
      if (v39 + 1 != v33)
        continue;
    }
    return v30 & 1;
  }
  v25 = 0;
  v26 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v27 = *(_QWORD *)(v32 + 72);
  while (1)
  {
    result = sub_1C2FF6C7C(v22 + v26, (uint64_t)v10, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue);
    if (v25 >= *(_QWORD *)(v23 + 16))
      break;
    sub_1C2FF6C7C(v23 + v26, (uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue);
    v29 = static Com_Apple_Siri_Product_Proto_ElementValue.== infix(_:_:)(v10, v8);
    sub_1C2FF6CC0((uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue);
    sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue);
    if ((v29 & 1) == 0)
      goto LABEL_16;
    ++v25;
    v26 += v27;
    if (v24 == v25)
      goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3005378(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, (uint64_t (*)(char *, char *))_s12SiriOntology010Com_Apple_A27_Product_Proto_ElementValueV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1C300538C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;

  v19 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  v4 = MEMORY[0x1E0C80A78](v19);
  v6 = (unsigned __int8 *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v9 = (unsigned __int8 *)&v18 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 == *(_QWORD *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      v14 = 1;
      return v14 & 1;
    }
    v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v18 = *(_QWORD *)(v7 + 72);
    v12 = v10 - 1;
    while (1)
    {
      sub_1C2FF6C7C(a1 + v11, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
      sub_1C2FF6C7C(a2 + v11, (uint64_t)v6, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
      if (*v9 != *v6)
        break;
      v13 = *((_QWORD *)v6 + 1);
      if (v6[16] == 1 && v13 >= 0x2A)
        __asm { BR              X9 }
      if (*((_QWORD *)v9 + 1) != v13)
        break;
      sub_1C3378914();
      sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v14 = sub_1C3378BD8();
      sub_1C2FF6CC0((uint64_t)v6, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
      sub_1C2FF6CC0((uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
      v16 = v12-- != 0;
      if ((v14 & 1) != 0)
      {
        v11 += v18;
        if (v16)
          continue;
      }
      return v14 & 1;
    }
    sub_1C2FF6CC0((uint64_t)v6, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
    sub_1C2FF6CC0((uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  }
  v14 = 0;
  return v14 & 1;
}

uint64_t sub_1C3005620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v10 = (uint64_t *)((char *)&v26 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v21 = 1;
      return v21 & 1;
    }
    v12 = 0;
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v26 = a2 + v13;
    v27 = a1 + v13;
    v14 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_1C2FF6C7C(v27 + v14 * v12, (uint64_t)v10, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
      sub_1C2FF6C7C(v26 + v14 * v12, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
      v15 = *v10 == *v7 && v10[1] == v7[1];
      if (!v15 && (sub_1C3379184() & 1) == 0)
        break;
      v16 = v10[2] == v7[2] && v10[3] == v7[3];
      if (!v16 && (sub_1C3379184() & 1) == 0 || (v10[4] != v7[4] || v10[5] != v7[5]) && (sub_1C3379184() & 1) == 0)
        break;
      v17 = (_QWORD *)v10[6];
      v18 = (_QWORD *)v7[6];
      v19 = v17[2];
      if (v19 != v18[2])
        break;
      if (v19 && v17 != v18)
      {
        if ((v17[4] != v18[4] || v17[5] != v18[5]) && (sub_1C3379184() & 1) == 0)
          break;
        if (v19 != 1)
        {
          if ((v17[6] != v18[6] || v17[7] != v18[7]) && (sub_1C3379184() & 1) == 0)
            break;
          v20 = v19 - 2;
          if (v20)
          {
            v22 = v18 + 9;
            v23 = v17 + 9;
            do
            {
              v24 = *(v23 - 1) == *(v22 - 1) && *v23 == *v22;
              if (!v24 && (sub_1C3379184() & 1) == 0)
                goto LABEL_39;
              v22 += 2;
              v23 += 2;
            }
            while (--v20);
          }
        }
      }
      sub_1C3378914();
      sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v21 = sub_1C3378BD8();
      sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
      sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
      if ((v21 & 1) != 0 && ++v12 != v11)
        continue;
      return v21 & 1;
    }
LABEL_39:
    sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
    sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
  }
  v21 = 0;
  return v21 & 1;
}

uint64_t sub_1C3005900(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_DisplayHint, (uint64_t (*)(char *, char *))static Com_Apple_Siri_Product_Proto_DisplayHint.== infix(_:_:));
}

uint64_t sub_1C3005914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a1 + 32);
    v4 = (_BYTE *)(a2 + 40);
    do
    {
      v6 = *v3;
      v3 += 2;
      v5 = v6;
      v7 = *((_QWORD *)v4 - 1);
      if (*v4 == 1)
      {
        if (v7)
        {
          if (v7 == 1)
          {
            if (v5 != 1)
              return 0;
          }
          else if (v5 != 2)
          {
            return 0;
          }
        }
        else if (v5)
        {
          return 0;
        }
      }
      else if (v5 != v7)
      {
        return 0;
      }
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C300599C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  _QWORD *v52;
  _QWORD *v53;
  BOOL v54;
  uint64_t *v55;
  _QWORD *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v68 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v63 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819718);
  MEMORY[0x1E0C80A78](v67);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  v70 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD **)((char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
  MEMORY[0x1E0C80A78](v14);
  v72 = (_QWORD **)((char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819720);
  MEMORY[0x1E0C80A78](v69);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode(0);
  v18 = MEMORY[0x1E0C80A78](v71);
  v20 = (_DWORD *)((char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v23 = (_DWORD *)((char *)&v57 - v22);
  v24 = *(_QWORD *)(a1 + 16);
  if (v24 != *(_QWORD *)(a2 + 16))
    goto LABEL_46;
  if (!v24 || a1 == a2)
  {
    v51 = 1;
    return v51 & 1;
  }
  v60 = v4;
  v25 = 0;
  v26 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v65 = a2 + v26;
  v66 = a1 + v26;
  v64 = *(_QWORD *)(v21 + 72);
  v57 = v13;
  v58 = v8;
  v61 = v11;
  v62 = v24;
  v59 = v17;
  while (1)
  {
    v27 = v64 * v25;
    sub_1C2FF6C7C(v66 + v64 * v25, (uint64_t)v23, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode);
    sub_1C2FF6C7C(v65 + v27, (uint64_t)v20, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode);
    v28 = *(int *)(v71 + 24);
    v29 = (uint64_t)v20 + v28;
    v30 = (uint64_t)&v17[*(int *)(v69 + 48)];
    sub_1C2FF6CFC((uint64_t)v23 + v28, (uint64_t)v17, &qword_1EF7DDE18);
    sub_1C2FF6CFC(v29, v30, &qword_1EF7DDE18);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
    if (v31((uint64_t)v17, 1, v11) == 1)
    {
      if (v31(v30, 1, v11) != 1)
      {
        v55 = &qword_1EF819720;
        goto LABEL_44;
      }
      sub_1C2FF9138((uint64_t)v17, &qword_1EF7DDE18);
      goto LABEL_25;
    }
    v32 = v72;
    sub_1C2FF6CFC((uint64_t)v17, (uint64_t)v72, &qword_1EF7DDE18);
    if (v31(v30, 1, v11) == 1)
    {
      v55 = &qword_1EF819720;
      goto LABEL_43;
    }
    sub_1C2FF6C38(v30, (uint64_t)v13, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
    if ((*v32 != *v13 || v32[1] != v13[1]) && (sub_1C3379184() & 1) == 0)
      goto LABEL_42;
    v33 = (_QWORD *)v72[2];
    v34 = (_QWORD *)v13[2];
    v35 = v33[2];
    if (v35 != v34[2])
      goto LABEL_42;
    if (v35 && v33 != v34)
    {
      if ((v33[4] != v34[4] || v33[5] != v34[5]) && (sub_1C3379184() & 1) == 0)
        goto LABEL_42;
      v36 = v35 - 1;
      if (v36)
        break;
    }
LABEL_19:
    v37 = *(int *)(v11 + 24);
    v38 = (uint64_t)v13 + v37;
    v39 = (uint64_t)&v10[*(int *)(v67 + 48)];
    sub_1C2FF6CFC((uint64_t)v72 + v37, (uint64_t)v10, &qword_1EF7DDD48);
    sub_1C2FF6CFC(v38, v39, &qword_1EF7DDD48);
    v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
    v41 = v60;
    if (v40((uint64_t)v10, 1, v60) == 1)
    {
      v42 = v40(v39, 1, v41);
      v17 = v59;
      if (v42 != 1)
        goto LABEL_41;
      sub_1C2FF9138((uint64_t)v10, &qword_1EF7DDD48);
    }
    else
    {
      v43 = (uint64_t)v10;
      v44 = (uint64_t)v10;
      v45 = (uint64_t)v58;
      sub_1C2FF6CFC(v43, (uint64_t)v58, &qword_1EF7DDD48);
      if (v40(v39, 1, v41) == 1)
      {
        sub_1C2FF6CC0(v45, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
        v10 = (char *)v44;
        v13 = v57;
        v17 = v59;
LABEL_41:
        sub_1C2FF9138((uint64_t)v10, &qword_1EF819718);
        goto LABEL_42;
      }
      v46 = v63;
      sub_1C2FF6C38(v39, v63, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
      v47 = static Com_Apple_Siri_Product_Proto_Element.OneOf_Node.== infix(_:_:)(v45, v46);
      sub_1C2FF6CC0(v46, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
      sub_1C2FF6CC0(v45, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
      sub_1C2FF9138(v44, &qword_1EF7DDD48);
      v10 = (char *)v44;
      v13 = v57;
      v17 = v59;
      if ((v47 & 1) == 0)
        goto LABEL_42;
    }
    v48 = (uint64_t)v72;
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v49 = sub_1C3378BD8();
    sub_1C2FF6CC0((uint64_t)v13, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
    v50 = v48;
    v11 = v61;
    sub_1C2FF6CC0(v50, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
    sub_1C2FF9138((uint64_t)v17, &qword_1EF7DDE18);
    if ((v49 & 1) == 0)
      goto LABEL_45;
LABEL_25:
    if (*v23 != *v20)
      goto LABEL_45;
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v51 = sub_1C3378BD8();
    sub_1C2FF6CC0((uint64_t)v20, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode);
    sub_1C2FF6CC0((uint64_t)v23, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode);
    if ((v51 & 1) != 0 && ++v25 != v62)
      continue;
    return v51 & 1;
  }
  v52 = v34 + 7;
  v53 = v33 + 7;
  while (1)
  {
    v54 = *(v53 - 1) == *(v52 - 1) && *v53 == *v52;
    if (!v54 && (sub_1C3379184() & 1) == 0)
      break;
    v52 += 2;
    v53 += 2;
    if (!--v36)
      goto LABEL_19;
  }
LABEL_42:
  sub_1C2FF6CC0((uint64_t)v13, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
  v55 = &qword_1EF7DDE18;
  v32 = v72;
LABEL_43:
  sub_1C2FF6CC0((uint64_t)v32, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
LABEL_44:
  sub_1C2FF9138((uint64_t)v17, v55);
LABEL_45:
  sub_1C2FF6CC0((uint64_t)v20, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode);
  sub_1C2FF6CC0((uint64_t)v23, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode);
LABEL_46:
  v51 = 0;
  return v51 & 1;
}

uint64_t sub_1C30060B0(uint64_t a1, uint64_t a2)
{
  return sub_1C3002A4C(a1, a2, type metadata accessor for Siri_Nl_Core_Protocol_AsrHypothesis, (uint64_t (*)(char *, char *))static Siri_Nl_Core_Protocol_AsrHypothesis.== infix(_:_:));
}

uint64_t TerminalIntentNode.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1C3378C38();
  swift_bridgeObjectRelease();
  sub_1C3379214();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C300EE40(a1);
  return swift_bridgeObjectRelease();
}

uint64_t TerminalIntentNode.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v1 = v0[3];
  v4 = *v0;
  v5 = *(_OWORD *)(v0 + 1);
  v6 = v1;
  sub_1C3379208();
  TerminalIntentNode.hash(into:)((uint64_t)v3);
  return sub_1C3379244();
}

uint64_t sub_1C30061E8()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v1 = v0[3];
  v4 = *v0;
  v5 = *(_OWORD *)(v0 + 1);
  v6 = v1;
  sub_1C3379208();
  TerminalIntentNode.hash(into:)((uint64_t)v3);
  return sub_1C3379244();
}

uint64_t sub_1C3006244()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v1 = v0[3];
  v4 = *v0;
  v5 = *(_OWORD *)(v0 + 1);
  v6 = v1;
  sub_1C3379208();
  TerminalIntentNode.hash(into:)((uint64_t)v3);
  return sub_1C3379244();
}

BOOL sub_1C3006298(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  BOOL v6;

  v2 = (_QWORD *)a1[2];
  v3 = a1[3];
  v5 = (_QWORD *)a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  return (v6 || (sub_1C3379184() & 1) != 0) && (sub_1C30020E8(v2, v5) & 1) != 0 && sub_1C30021AC(v3, v4);
}

uint64_t TerminalElement.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  _BYTE v9[784];
  char __dst[8];
  uint64_t v11;
  _BYTE __src[784];
  _BYTE v13[776];
  _BYTE v14[528];
  _BYTE v15[784];
  _BYTE v16[528];

  v2 = MEMORY[0x1E0C80A78](a1);
  sub_1C2FF6D40(v1, (uint64_t)v14, &qword_1EF8194A8);
  v3 = *(_QWORD *)(v1 + 528);
  sub_1C2FF6D40(v1 + 536, (uint64_t)v15, &qword_1EF8194B0);
  v4 = *(_QWORD *)(v1 + 1336);
  sub_1C2FF6D40((uint64_t)v14, (uint64_t)v16, &qword_1EF8194A8);
  if (sub_1C30118DC((uint64_t)v16) == 1)
  {
    sub_1C3379220();
  }
  else
  {
    sub_1C2FF6D40((uint64_t)v14, (uint64_t)__src, &qword_1EF8194A8);
    sub_1C30118F0(__src, __dst);
    sub_1C3379220();
    TerminalElement.Value.hash(into:)();
  }
  sub_1C3379214();
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  sub_1C2FF6D40((uint64_t)v15, (uint64_t)__src, &qword_1EF8194B0);
  if (sub_1C3011904((uint64_t)__src) == 1)
  {
    sub_1C3379220();
    if (v4)
    {
LABEL_10:
      sub_1C3379220();
      sub_1C3379220();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C2FF6D40((uint64_t)v15, (uint64_t)__dst, &qword_1EF8194B0);
    sub_1C3379220();
    v8 = __dst[0];
    if (__dst[0] == 9)
    {
      sub_1C3379220();
      sub_1C3012A20(__dst, &sub_1C2FFD940);
      sub_1C3012A20(__dst, &sub_1C2FFD940);
    }
    else
    {
      sub_1C3379220();
      sub_1C3012A20(__dst, &sub_1C2FFD940);
      sub_1C3012A20(__dst, &sub_1C2FFD940);
      sub_1C3000458(v2, v8);
    }
    sub_1C2FF6D40((uint64_t)&v11, (uint64_t)v13, &qword_1EF8194B8);
    sub_1C3012A20(__dst, &sub_1C2FFD940);
    sub_1C300E7A0(v2);
    sub_1C301192C(v15, &sub_1C3012544);
    sub_1C301192C(v15, &sub_1C3012544);
    sub_1C2FF6D40((uint64_t)v15, (uint64_t)v9, &qword_1EF8194B0);
    sub_1C3012A20(v9, &sub_1C3012544);
    if (v4)
      goto LABEL_10;
  }
  return sub_1C3379220();
}

uint64_t TerminalElement.hashValue.getter()
{
  const void *v0;
  _BYTE v2[72];
  _BYTE __dst[1344];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1C3379208();
  TerminalElement.hash(into:)((uint64_t)v2);
  return sub_1C3379244();
}

uint64_t sub_1C3006650()
{
  const void *v0;
  _BYTE v2[72];
  _BYTE __dst[1344];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1C3379208();
  TerminalElement.hash(into:)((uint64_t)v2);
  return sub_1C3379244();
}

uint64_t sub_1C30066A4()
{
  const void *v0;
  _BYTE v2[72];
  _BYTE __dst[1344];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1C3379208();
  TerminalElement.hash(into:)((uint64_t)v2);
  return sub_1C3379244();
}

uint64_t TerminalIntentNode.description.getter()
{
  return sub_1C3006744();
}

uint64_t sub_1C3006744()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _BYTE v7[528];
  _QWORD __src[66];

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[3];
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    sub_1C2FF6D40(v3 + 1344 * v4 - 1312, (uint64_t)v7, &qword_1EF8194A8);
    sub_1C2FF6D40((uint64_t)v7, (uint64_t)__src, &qword_1EF8194A8);
    if (sub_1C30118DC((uint64_t)__src) != 1)
    {
      sub_1C30118F0(__src, &v6);
      sub_1C3007268();
    }
  }
  __src[0] = v2;
  __src[1] = v1;
  swift_bridgeObjectRetain();
  sub_1C3378C5C();
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  return __src[0];
}

uint64_t sub_1C300683C()
{
  return sub_1C3006744();
}

unint64_t TerminalIntentNode.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE v5[528];
  _QWORD __src[66];
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + 24);
  __src[0] = 0;
  __src[1] = 0xE000000000000000;
  sub_1C3378F2C();
  swift_bridgeObjectRelease();
  v7 = 0xD00000000000001ALL;
  v8 = 0x80000001C33F1290;
  swift_bridgeObjectRetain();
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    sub_1C2FF6D40(v1 + 1344 * v2 - 1312, (uint64_t)v5, &qword_1EF8194A8);
    sub_1C2FF6D40((uint64_t)v5, (uint64_t)__src, &qword_1EF8194A8);
    if (sub_1C30118DC((uint64_t)__src) != 1)
    {
      sub_1C30118F0(__src, &v4);
      TerminalElement.Value.debugDescription.getter();
    }
  }
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  return v7;
}

void TerminalElement.Value.debugDescription.getter()
{
  void *v0;
  char *v1;
  _BYTE __dst[528];
  _QWORD v3[66];

  sub_1C30118F0(v0, __dst);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_1C3378F2C();
  swift_bridgeObjectRelease();
  sub_1C30118F0(__dst, v3);
  v1 = (char *)sub_1C3006A6C + 4 * byte_1C3388F9E[sub_1C3012BD4((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1C3006A6C()
{
  _QWORD v1[68];
  uint64_t v2;
  uint64_t v3;

  sub_1C3012BE0((uint64_t)&v3);
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  sub_1C30118F0(&v2, v1);
  sub_1C3006F80();
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  return v1[66];
}

void TerminalElement.Value.description.getter()
{
  void *v0;
  char *v1;
  _BYTE __dst[528];
  _BYTE v3[528];

  sub_1C30118F0(v0, __dst);
  sub_1C30118F0(__dst, v3);
  v1 = (char *)sub_1C3006BE0 + 4 * byte_1C3388FA7[sub_1C3012BD4((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1C3006BE0()
{
  uint64_t v1;

  sub_1C3012BE0((uint64_t)&v1);
  return sub_1C3378DF4();
}

void sub_1C3006D88()
{
  void *v0;
  char *v1;
  _BYTE __dst[528];
  _BYTE v3[528];

  sub_1C30118F0(v0, __dst);
  sub_1C30118F0(__dst, v3);
  v1 = (char *)sub_1C3006DD8 + 4 * byte_1C3388FB0[sub_1C3012BD4((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1C3006DD8()
{
  uint64_t v1;

  sub_1C3012BE0((uint64_t)&v1);
  return sub_1C3378DF4();
}

void sub_1C3006F80()
{
  void *v0;
  char *v1;
  _BYTE __dst[528];
  _BYTE v3[528];

  sub_1C30118F0(v0, __dst);
  sub_1C30118F0(__dst, v3);
  v1 = (char *)sub_1C3006FD0 + 4 * byte_1C3388FB9[sub_1C3012BD4((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1C3006FD0()
{
  uint64_t v1;

  sub_1C3012BE0((uint64_t)&v1);
  return sub_1C3378DF4();
}

void sub_1C30071B4()
{
  void *v0;
  uint64_t v1;
  _BYTE __dst[528];

  sub_1C30118F0(v0, __dst);
  sub_1C30118F0(__dst, &v1);
  sub_1C3006D88();
}

BOOL sub_1C30071F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[528];
  _BYTE v5[536];

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  sub_1C2FF6D40(v1 + 1344 * v2 - 1312, (uint64_t)v4, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v4, (uint64_t)v5, &qword_1EF8194A8);
  return sub_1C30118DC((uint64_t)v5) != 1;
}

void sub_1C3007268()
{
  void *v0;
  char *v1;
  _BYTE __dst[528];
  _BYTE v3[528];

  sub_1C30118F0(v0, __dst);
  sub_1C30118F0(__dst, v3);
  v1 = (char *)sub_1C30072B8 + 4 * byte_1C3388FC2[sub_1C3012BD4((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1C30072B8()
{
  uint64_t v0;
  _BYTE v2[528];
  uint64_t v3;
  uint64_t v4;

  v0 = *(_QWORD *)sub_1C3012BE0((uint64_t)&v4);
  sub_1C30118F0(&v3, v2);
  sub_1C3012BE0((uint64_t)v2);
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t TerminalElement.ScalarValue.description.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _BYTE v5[528];
  _QWORD __src[66];

  __src[0] = 0;
  __src[1] = 0xE000000000000000;
  sub_1C3378F2C();
  swift_bridgeObjectRelease();
  v3 = 0x3D65756C61767BLL;
  v4 = 0xE700000000000000;
  sub_1C2FF6D40(v0 + 16, (uint64_t)v5, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v5, (uint64_t)__src, &qword_1EF8194A8);
  if (sub_1C30118DC((uint64_t)__src) != 1)
  {
    sub_1C30118F0(__src, &v2);
    sub_1C3006D88();
  }
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  if (*(_QWORD *)(v0 + 568))
    swift_bridgeObjectRetain();
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  return v3;
}

uint64_t sub_1C3007578()
{
  return 1;
}

uint64_t TerminalElement.SemanticValue.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C30075B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t TerminalElement.SemanticValue.debugDescription.getter()
{
  swift_bridgeObjectRetain();
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  return 0xD000000000000016;
}

uint64_t sub_1C300765C()
{
  return TerminalElement.ScalarValue.description.getter();
}

uint64_t TerminalElement.ScalarValue.debugDescription.getter()
{
  uint64_t v0;
  _QWORD v2[66];
  uint64_t v3;
  unint64_t v4;
  _BYTE v5[528];
  _QWORD __src[66];

  __src[0] = 0;
  __src[1] = 0xE000000000000000;
  sub_1C3378F2C();
  swift_bridgeObjectRelease();
  v3 = 60;
  v4 = 0xE100000000000000;
  sub_1C337928C();
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  sub_1C2FF6D40(v0 + 16, (uint64_t)v5, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v5, (uint64_t)__src, &qword_1EF8194A8);
  if (sub_1C30118DC((uint64_t)__src) != 1)
  {
    sub_1C30118F0(__src, v2);
    TerminalElement.Value.debugDescription.getter();
  }
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  if (*(_QWORD *)(v0 + 568))
  {
    v2[0] = 0xD000000000000016;
    v2[1] = 0x80000001C33F12B0;
    swift_bridgeObjectRetain();
    sub_1C3378C5C();
    swift_bridgeObjectRelease();
    sub_1C3378C5C();
  }
  sub_1C3378C5C();
  swift_bridgeObjectRelease();
  sub_1C3378C5C();
  return v3;
}

uint64_t sub_1C300784C()
{
  return TerminalElement.ScalarValue.debugDescription.getter();
}

void TerminalElement.Value.hash(into:)()
{
  void *v0;
  char *v1;
  _BYTE __dst[528];
  _BYTE v3[528];

  sub_1C30118F0(v0, __dst);
  sub_1C30118F0(__dst, v3);
  v1 = (char *)sub_1C30078D4 + 4 * byte_1C3388FCB[sub_1C3012BD4((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1C30078D4()
{
  uint64_t v1;

  sub_1C3012BE0((uint64_t)&v1);
  return sub_1C3378C38();
}

uint64_t TerminalElement.Value.hashValue.getter()
{
  void *v0;
  _BYTE v2[528];
  _BYTE __dst[528];

  sub_1C30118F0(v0, __dst);
  sub_1C30118F0(__dst, v2);
  sub_1C3379208();
  TerminalElement.Value.hash(into:)();
  return sub_1C3379244();
}

uint64_t sub_1C3007BDC()
{
  void *v0;
  _BYTE v2[528];
  _BYTE __dst[528];

  sub_1C30118F0(v0, __dst);
  sub_1C30118F0(__dst, v2);
  sub_1C3379208();
  TerminalElement.Value.hash(into:)();
  return sub_1C3379244();
}

uint64_t sub_1C3007C38()
{
  void *v0;
  _BYTE v2[528];
  _BYTE __dst[528];

  sub_1C30118F0(v0, __dst);
  sub_1C30118F0(__dst, v2);
  sub_1C3379208();
  TerminalElement.Value.hash(into:)();
  return sub_1C3379244();
}

uint64_t TerminalElement.Origin.hash(into:)(uint64_t a1)
{
  unsigned __int8 *v1;
  int v3;
  _BYTE v5[776];

  v3 = *v1;
  sub_1C2FF6D40((uint64_t)(v1 + 8), (uint64_t)v5, &qword_1EF8194B8);
  sub_1C3379220();
  if (v3 != 9)
    sub_1C3000458(a1, v3);
  sub_1C3013584(v5, &sub_1C2FFD940);
  sub_1C300E7A0(a1);
  return sub_1C3013584(v5, &sub_1C3012544);
}

uint64_t TerminalElement.Origin.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;
  _BYTE v3[72];
  _BYTE v4[776];

  v1 = *v0;
  sub_1C2FF6D40((uint64_t)(v0 + 8), (uint64_t)v4, &qword_1EF8194B8);
  sub_1C3379208();
  sub_1C3379220();
  if (v1 != 9)
    sub_1C3000458((uint64_t)v3, v1);
  sub_1C300E7A0((uint64_t)v3);
  return sub_1C3379244();
}

uint64_t sub_1C3007DD0()
{
  unsigned __int8 *v0;
  int v1;
  _BYTE v3[72];
  _BYTE v4[776];

  v1 = *v0;
  sub_1C2FF6D40((uint64_t)(v0 + 8), (uint64_t)v4, &qword_1EF8194B8);
  sub_1C3379208();
  sub_1C3379220();
  if (v1 != 9)
    sub_1C3000458((uint64_t)v3, v1);
  sub_1C300E7A0((uint64_t)v3);
  return sub_1C3379244();
}

uint64_t sub_1C3007E5C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v3;
  _BYTE v5[776];

  v3 = *v1;
  sub_1C2FF6D40((uint64_t)(v1 + 8), (uint64_t)v5, &qword_1EF8194B8);
  sub_1C3379220();
  if (v3 != 9)
    sub_1C3000458(a1, v3);
  return sub_1C300E7A0(a1);
}

uint64_t sub_1C3007EDC()
{
  unsigned __int8 *v0;
  int v1;
  _BYTE v3[72];
  _BYTE v4[776];

  v1 = *v0;
  sub_1C2FF6D40((uint64_t)(v0 + 8), (uint64_t)v4, &qword_1EF8194B8);
  sub_1C3379208();
  sub_1C3379220();
  if (v1 != 9)
    sub_1C3000458((uint64_t)v3, v1);
  sub_1C300E7A0((uint64_t)v3);
  return sub_1C3379244();
}

BOOL static TerminalElement.MatchingSpan.== infix(_:_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _BOOL8 result;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[528];
  _BYTE v89[528];
  _BYTE v90[528];
  _BYTE __src[528];
  _BYTE v92[1056];
  _BYTE __dst[1056];
  _BYTE v94[528];
  _BYTE v95[528];
  _BYTE v96[536];

  v1 = (_QWORD *)MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v4 = v1;
  v5 = (unsigned __int8 *)(v2 + 80);
  v6 = (unsigned __int8 *)(v1 + 80);
  v7 = *v1;
  v8 = v1[1];
  sub_1C2FF6D40((uint64_t)(v1 + 2), (uint64_t)v95, &qword_1EF8194A8);
  v9 = v4[69];
  v85 = v4[70];
  v86 = v4[71];
  v87 = v4[68];
  v82 = v4[73];
  v83 = v4[72];
  v80 = v4[74];
  v78 = v4[75];
  v76 = v4[76];
  v74 = v4[77];
  v72 = v4[78];
  v70 = v4[79];
  v68 = v6[1];
  v69 = *((unsigned __int8 *)v4 + 640);
  v66 = v6[3];
  v67 = v6[2];
  v64 = v4[81];
  v65 = v4[82];
  v63 = v4[83];
  v62 = *((unsigned __int8 *)v4 + 672);
  v60 = v4[85];
  v61 = v4[86];
  v58 = v4[89];
  v59 = (_QWORD *)v4[87];
  v54 = v4[90];
  v56 = v4[91];
  v57 = (_QWORD *)v4[88];
  v55 = v6[96];
  v10 = *v3;
  v11 = v3[1];
  sub_1C2FF6D40((uint64_t)(v3 + 2), (uint64_t)v96, &qword_1EF8194A8);
  v12 = v3[68];
  v13 = v3[69];
  v14 = v3[71];
  v84 = v3[72];
  v81 = v3[73];
  v79 = v3[74];
  v77 = v3[75];
  v75 = v3[76];
  v73 = v3[77];
  v71 = v3[78];
  v15 = *((unsigned __int8 *)v3 + 640);
  v16 = v5[1];
  v17 = v5[2];
  v18 = v5[3];
  v19 = v3[81];
  v20 = v3[82];
  v21 = v3[83];
  v22 = *((unsigned __int8 *)v3 + 672);
  v23 = v3[85];
  v24 = v3[86];
  v25 = (_QWORD *)v3[87];
  v26 = (_QWORD *)v3[88];
  v27 = v3[89];
  v28 = v3[90];
  v29 = v3[91];
  v30 = v5[96];
  if (!v8)
  {
    v31 = v3[70];
    v32 = v3[79];
    v52 = v16;
    v53 = v15;
    v50 = v18;
    v51 = v17;
    v38 = v29;
    v48 = v19;
    v49 = v20;
    v39 = v30;
    v47 = v21;
    v46 = v22;
    v43 = v23;
    v44 = v25;
    v45 = v24;
    v41 = v26;
    v42 = v27;
    v40 = v28;
    if (v11)
      return 0;
    goto LABEL_8;
  }
  if (!v11)
    return 0;
  v31 = v3[70];
  v32 = v3[79];
  v52 = v16;
  v53 = v15;
  v50 = v18;
  v51 = v17;
  v38 = v29;
  v48 = v19;
  v49 = v20;
  v39 = v30;
  v47 = v21;
  v46 = v22;
  v43 = v23;
  v44 = v25;
  v45 = v24;
  v41 = v26;
  v42 = v27;
  v40 = v28;
  if (v7 == v10 && v8 == v11 || (v33 = sub_1C3379184(), result = 0, (v33 & 1) != 0))
  {
LABEL_8:
    sub_1C2FF6D40((uint64_t)v95, (uint64_t)__dst, &qword_1EF8194A8);
    sub_1C2FF6D40((uint64_t)v96, (uint64_t)&__dst[528], &qword_1EF8194A8);
    sub_1C2FF6D40((uint64_t)v95, (uint64_t)v94, &qword_1EF8194A8);
    if (sub_1C30118DC((uint64_t)v94) == 1)
    {
      sub_1C2FF6D40((uint64_t)v96, (uint64_t)v92, &qword_1EF8194A8);
      if (sub_1C30118DC((uint64_t)v92) == 1)
      {
LABEL_15:
        if (v9)
        {
          if (!v13 || (v87 != v12 || v9 != v13) && (sub_1C3379184() & 1) == 0)
            return 0;
        }
        else if (v13)
        {
          return 0;
        }
        if (v86)
        {
          if (!v14 || (v85 != v31 || v86 != v14) && (sub_1C3379184() & 1) == 0)
            return 0;
        }
        else if (v14)
        {
          return 0;
        }
        if (v83)
        {
          if (!v84)
            return 0;
          memcpy(__dst, (const void *)(v83 + 16), 0x301uLL);
          memcpy(v92, (const void *)(v84 + 16), 0x301uLL);
          if ((static TerminalElement.MatchingSpan.== infix(_:_:)(__dst, v92) & 1) == 0)
            return 0;
        }
        else if (v84)
        {
          return 0;
        }
        if (v82)
        {
          if (!v81)
            return 0;
          memcpy(__dst, (const void *)(v82 + 16), 0x301uLL);
          memcpy(v92, (const void *)(v81 + 16), 0x301uLL);
          if ((static TerminalElement.MatchingSpan.== infix(_:_:)(__dst, v92) & 1) == 0)
            return 0;
        }
        else if (v81)
        {
          return 0;
        }
        if (v80 != v79
          || v78 != v77
          || v76 != v75
          || v74 != v73
          || v72 != v71
          || v70 != v32
          || v69 != v53
          || v68 != v52
          || v67 != v51
          || v66 != v50)
        {
          return 0;
        }
        if (v65)
        {
          if (!v49 || (v64 != v48 || v65 != v49) && (sub_1C3379184() & 1) == 0)
            return 0;
        }
        else if (v49)
        {
          return 0;
        }
        if (v63 == v47)
        {
          if (v62 == 15)
          {
            if (v46 != 15)
              return 0;
          }
          else if (v46 == 15 || v62 != v46)
          {
            return 0;
          }
          if (v61)
          {
            if (!v45 || (v60 != v43 || v61 != v45) && (sub_1C3379184() & 1) == 0)
              return 0;
          }
          else if (v45)
          {
            return 0;
          }
          if ((sub_1C30020E8(v59, v44) & 1) != 0
            && (sub_1C30020E8(v57, v41) & 1) != 0
            && (sub_1C300B24C(v58, v42) & 1) != 0
            && (sub_1C300B3E8(v54, v40) & 1) != 0)
          {
            if ((v55 & 1) == 0)
            {
              v37 = v39;
              if (v56 != v38)
                v37 = 1;
              return (v37 & 1) == 0;
            }
            if (v39)
              return 1;
          }
        }
        return 0;
      }
    }
    else
    {
      sub_1C2FF6D40((uint64_t)v95, (uint64_t)__src, &qword_1EF8194A8);
      sub_1C2FF6D40((uint64_t)v96, (uint64_t)v92, &qword_1EF8194A8);
      if (sub_1C30118DC((uint64_t)v92) != 1)
      {
        sub_1C2FF6D40((uint64_t)v96, (uint64_t)v89, &qword_1EF8194A8);
        sub_1C30118F0(v89, v88);
        sub_1C2FFE080(v95, sub_1C2FFD5C0);
        sub_1C2FFE080(v95, sub_1C2FFD5C0);
        _s12SiriOntology15TerminalElementV5ValueO2eeoiySbAE_AEtFZ_0((uint64_t)__src);
        v36 = v35;
        sub_1C30118F0(__src, v90);
        sub_1C3012BF0(v90, sub_1C2FFE4B0);
        sub_1C2FFE080(v95, sub_1C2FFE4B0);
        if ((v36 & 1) == 0)
          return 0;
        goto LABEL_15;
      }
      sub_1C30118F0(__src, v88);
      sub_1C2FF6D40((uint64_t)v95, (uint64_t)v89, &qword_1EF8194A8);
      sub_1C2FF6D40((uint64_t)v95, (uint64_t)v90, &qword_1EF8194A8);
      sub_1C3012BF0(v90, sub_1C2FFD5C0);
      sub_1C3012BF0(v89, sub_1C2FFD5C0);
      sub_1C3012BF0(v88, sub_1C2FFE4B0);
    }
    sub_1C2FF6D40((uint64_t)v95, (uint64_t)v92, &qword_1EF8194A8);
    sub_1C2FF6D40((uint64_t)v96, (uint64_t)&v92[528], &qword_1EF8194A8);
    sub_1C2FFE080(v96, sub_1C2FFD5C0);
    sub_1C3013720(v92);
    return 0;
  }
  return result;
}

uint64_t TerminalElement.OriginDetail.hash(into:)(uint64_t a1)
{
  void *v1;
  int v3;
  const void *v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE __dst[769];
  _BYTE __src[776];
  _BYTE v15[776];

  sub_1C3013A3C(v1, __src);
  sub_1C3013A3C(__src, v15);
  v3 = sub_1C3013A50((uint64_t)v15);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = (const void *)sub_1C3013BF4((uint64_t)v15);
      memcpy(__dst, v4, sizeof(__dst));
      return TerminalElement.MatchingSpan.hash(into:)(a1);
    }
    v6 = (uint64_t *)sub_1C3013BF4((uint64_t)v15);
    v7 = v6[4];
    if (v7)
    {
      v8 = *v6;
      v9 = v6[1];
      v10 = v6[3];
      sub_1C3379220();
      if (v9 == 1)
      {
        sub_1C3379220();
        sub_1C2FFDDEC(v8, 1);
        swift_bridgeObjectRetain();
LABEL_16:
        sub_1C300ED00(a1, v7);
        return sub_1C3013A5C(__src, &sub_1C3012544);
      }
      sub_1C3379220();
      if (v9)
      {
        sub_1C3379220();
        sub_1C3013A5C(__src, &sub_1C2FFD940);
        sub_1C2FFDDEC(v8, v9);
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        if (v10)
        {
LABEL_12:
          sub_1C3379220();
          swift_bridgeObjectRetain();
          sub_1C3378C38();
          swift_bridgeObjectRelease();
          v11 = v8;
          v12 = v9;
LABEL_15:
          sub_1C30129EC(v11, v12);
          goto LABEL_16;
        }
      }
      else
      {
        sub_1C3379220();
        sub_1C3013A5C(__src, &sub_1C2FFD940);
        sub_1C2FFDDEC(v8, 0);
        if (v10)
          goto LABEL_12;
      }
      sub_1C3379220();
      v11 = v8;
      v12 = v9;
      goto LABEL_15;
    }
    return sub_1C3379220();
  }
  if (!*(_QWORD *)(sub_1C3013BF4((uint64_t)v15) + 8))
    return sub_1C3379220();
  sub_1C3379220();
  swift_bridgeObjectRetain();
  sub_1C3378C38();
  return sub_1C3013A5C(__src, &sub_1C3012544);
}

uint64_t TerminalElement.OriginDetail.hashValue.getter()
{
  void *v0;
  int v1;
  const void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[769];
  _BYTE v12[72];
  _BYTE __dst[776];
  _BYTE v14[776];

  sub_1C3013A3C(v0, __dst);
  sub_1C3379208();
  sub_1C3013A3C(__dst, v14);
  v1 = sub_1C3013A50((uint64_t)v14);
  if (!v1)
  {
    if (*(_QWORD *)(sub_1C3013BF4((uint64_t)v14) + 8))
    {
      sub_1C3379220();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
LABEL_17:
      sub_1C3013A5C(__dst, &sub_1C3012544);
      return sub_1C3379244();
    }
    goto LABEL_9;
  }
  if (v1 != 1)
  {
    v3 = (uint64_t *)sub_1C3013BF4((uint64_t)v14);
    v4 = v3[4];
    if (v4)
    {
      v5 = *v3;
      v6 = v3[1];
      v7 = v3[3];
      sub_1C3379220();
      if (v6 == 1)
      {
        sub_1C3379220();
        sub_1C2FFDDEC(v5, 1);
        swift_bridgeObjectRetain();
LABEL_16:
        sub_1C300ED00((uint64_t)v12, v4);
        goto LABEL_17;
      }
      sub_1C3379220();
      if (v6)
      {
        sub_1C3379220();
        sub_1C3013A5C(__dst, &sub_1C2FFD940);
        sub_1C2FFDDEC(v5, v6);
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        if (v7)
        {
LABEL_12:
          sub_1C3379220();
          swift_bridgeObjectRetain();
          sub_1C3378C38();
          swift_bridgeObjectRelease();
          v8 = v5;
          v9 = v6;
LABEL_15:
          sub_1C30129EC(v8, v9);
          goto LABEL_16;
        }
      }
      else
      {
        sub_1C3379220();
        sub_1C3013A5C(__dst, &sub_1C2FFD940);
        sub_1C2FFDDEC(v5, 0);
        if (v7)
          goto LABEL_12;
      }
      sub_1C3379220();
      v8 = v5;
      v9 = v6;
      goto LABEL_15;
    }
LABEL_9:
    sub_1C3379220();
    return sub_1C3379244();
  }
  v2 = (const void *)sub_1C3013BF4((uint64_t)v14);
  memcpy(v11, v2, sizeof(v11));
  TerminalElement.MatchingSpan.hash(into:)((uint64_t)v12);
  return sub_1C3379244();
}

uint64_t sub_1C3008BCC()
{
  void *v0;
  int v1;
  const void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[769];
  _BYTE v12[72];
  _BYTE __dst[776];
  _BYTE v14[776];

  sub_1C3013A3C(v0, __dst);
  sub_1C3379208();
  sub_1C3013A3C(__dst, v14);
  v1 = sub_1C3013A50((uint64_t)v14);
  if (!v1)
  {
    if (*(_QWORD *)(sub_1C3013BF4((uint64_t)v14) + 8))
    {
      sub_1C3379220();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
LABEL_17:
      sub_1C3013A5C(__dst, &sub_1C3012544);
      return sub_1C3379244();
    }
    goto LABEL_9;
  }
  if (v1 != 1)
  {
    v3 = (uint64_t *)sub_1C3013BF4((uint64_t)v14);
    v4 = v3[4];
    if (v4)
    {
      v5 = *v3;
      v6 = v3[1];
      v7 = v3[3];
      sub_1C3379220();
      if (v6 == 1)
      {
        sub_1C3379220();
        sub_1C2FFDDEC(v5, 1);
        swift_bridgeObjectRetain();
LABEL_16:
        sub_1C300ED00((uint64_t)v12, v4);
        goto LABEL_17;
      }
      sub_1C3379220();
      if (v6)
      {
        sub_1C3379220();
        sub_1C3013A5C(__dst, &sub_1C2FFD940);
        sub_1C2FFDDEC(v5, v6);
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        if (v7)
        {
LABEL_12:
          sub_1C3379220();
          swift_bridgeObjectRetain();
          sub_1C3378C38();
          swift_bridgeObjectRelease();
          v8 = v5;
          v9 = v6;
LABEL_15:
          sub_1C30129EC(v8, v9);
          goto LABEL_16;
        }
      }
      else
      {
        sub_1C3379220();
        sub_1C3013A5C(__dst, &sub_1C2FFD940);
        sub_1C2FFDDEC(v5, 0);
        if (v7)
          goto LABEL_12;
      }
      sub_1C3379220();
      v8 = v5;
      v9 = v6;
      goto LABEL_15;
    }
LABEL_9:
    sub_1C3379220();
    return sub_1C3379244();
  }
  v2 = (const void *)sub_1C3013BF4((uint64_t)v14);
  memcpy(v11, v2, sizeof(v11));
  TerminalElement.MatchingSpan.hash(into:)((uint64_t)v12);
  return sub_1C3379244();
}

uint64_t TerminalElement.DerivedOrigin.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1[1];
  v4 = v1[4];
  if (v3 != 1)
  {
    v5 = *v1;
    v6 = v1[3];
    sub_1C3379220();
    if (v3)
    {
      sub_1C3379220();
      sub_1C2FFDDEC(v5, v3);
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      if (v6)
      {
LABEL_5:
        sub_1C3379220();
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        v7 = v5;
        v8 = v3;
LABEL_8:
        sub_1C30129EC(v7, v8);
        goto LABEL_9;
      }
    }
    else
    {
      sub_1C3379220();
      swift_bridgeObjectRetain();
      if (v6)
        goto LABEL_5;
    }
    sub_1C3379220();
    v7 = v5;
    v8 = v3;
    goto LABEL_8;
  }
  sub_1C3379220();
LABEL_9:
  swift_bridgeObjectRetain();
  sub_1C300ED00(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t TerminalElement.DerivedOrigin.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[72];

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[3];
  v4 = v0[4];
  sub_1C3379208();
  if (v1 != 1)
  {
    sub_1C3379220();
    if (v1)
    {
      sub_1C3379220();
      sub_1C2FFDDEC(v2, v1);
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      if (v3)
      {
LABEL_5:
        sub_1C3379220();
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        v5 = v2;
        v6 = v1;
LABEL_8:
        sub_1C30129EC(v5, v6);
        goto LABEL_9;
      }
    }
    else
    {
      sub_1C3379220();
      swift_bridgeObjectRetain();
      if (v3)
        goto LABEL_5;
    }
    sub_1C3379220();
    v5 = v2;
    v6 = v1;
    goto LABEL_8;
  }
  sub_1C3379220();
LABEL_9:
  sub_1C300ED00((uint64_t)v8, v4);
  return sub_1C3379244();
}

uint64_t sub_1C30090A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1[1];
  v4 = v1[4];
  if (v3 != 1)
  {
    v5 = *v1;
    v6 = v1[3];
    sub_1C3379220();
    if (v3)
    {
      sub_1C3379220();
      sub_1C2FFDDEC(v5, v3);
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      if (v6)
      {
LABEL_5:
        sub_1C3379220();
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        v7 = v5;
        v8 = v3;
LABEL_8:
        sub_1C30129EC(v7, v8);
        return sub_1C300ED00(a1, v4);
      }
    }
    else
    {
      sub_1C3379220();
      swift_bridgeObjectRetain();
      if (v6)
        goto LABEL_5;
    }
    sub_1C3379220();
    v7 = v5;
    v8 = v3;
    goto LABEL_8;
  }
  sub_1C3379220();
  return sub_1C300ED00(a1, v4);
}

uint64_t sub_1C30091D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[72];

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[3];
  v4 = v0[4];
  sub_1C3379208();
  if (v1 != 1)
  {
    sub_1C3379220();
    if (v1)
    {
      sub_1C3379220();
      sub_1C2FFDDEC(v2, v1);
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      if (v3)
      {
LABEL_5:
        sub_1C3379220();
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        v5 = v2;
        v6 = v1;
LABEL_8:
        sub_1C30129EC(v5, v6);
        goto LABEL_9;
      }
    }
    else
    {
      sub_1C3379220();
      swift_bridgeObjectRetain();
      if (v3)
        goto LABEL_5;
    }
    sub_1C3379220();
    v5 = v2;
    v6 = v1;
    goto LABEL_8;
  }
  sub_1C3379220();
LABEL_9:
  sub_1C300ED00((uint64_t)v8, v4);
  return sub_1C3379244();
}

uint64_t TerminalElement.AdjustmentReason.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_1C3379220();
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
    if (v1)
    {
LABEL_3:
      sub_1C3379220();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C3379220();
    if (v1)
      goto LABEL_3;
  }
  return sub_1C3379220();
}

uint64_t TerminalElement.AdjustmentReason.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  sub_1C3379208();
  if (!v1)
  {
    sub_1C3379220();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_1C3379220();
    return sub_1C3379244();
  }
  sub_1C3379220();
  swift_bridgeObjectRetain();
  sub_1C3378C38();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_1C3379220();
  swift_bridgeObjectRetain();
  sub_1C3378C38();
  swift_bridgeObjectRelease();
  return sub_1C3379244();
}

uint64_t sub_1C30094A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_1C3379220();
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
    if (v1)
    {
LABEL_3:
      sub_1C3379220();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C3379220();
    if (v1)
      goto LABEL_3;
  }
  return sub_1C3379220();
}

uint64_t sub_1C3009564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  sub_1C3379208();
  if (!v1)
  {
    sub_1C3379220();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_1C3379220();
    return sub_1C3379244();
  }
  sub_1C3379220();
  swift_bridgeObjectRetain();
  sub_1C3378C38();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_1C3379220();
  swift_bridgeObjectRetain();
  sub_1C3378C38();
  swift_bridgeObjectRelease();
  return sub_1C3379244();
}

uint64_t TerminalElement.ScalarValue.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _BYTE __src[528];
  _BYTE v8[528];
  _BYTE v9[528];

  sub_1C2FF6D40((uint64_t)(v0 + 2), (uint64_t)v8, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v8, (uint64_t)v9, &qword_1EF8194A8);
  if (sub_1C30118DC((uint64_t)v9) != 1)
  {
    sub_1C2FF6D40((uint64_t)v8, (uint64_t)__src, &qword_1EF8194A8);
    sub_1C30118F0(__src, &v6);
    sub_1C3379220();
    TerminalElement.Value.hash(into:)();
    v1 = v0[71];
    if (v1)
      goto LABEL_3;
    return sub_1C3379220();
  }
  sub_1C3379220();
  v1 = v0[71];
  if (!v1)
    return sub_1C3379220();
LABEL_3:
  v2 = v0[68];
  v3 = v0[69];
  v4 = v0[70];
  sub_1C3379220();
  sub_1C3379220();
  if (v3)
  {
    sub_1C2FFDEF0(v2, v3, v4, v1);
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1C3378C38();
  return sub_1C2FFE7BC(v2, v3, v4, v1);
}

uint64_t TerminalElement.ScalarValue.hashValue.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE __dst[528];
  _BYTE __src[528];
  _BYTE v8[528];
  _BYTE v9[528];

  sub_1C3379208();
  sub_1C2FF6D40((uint64_t)(v0 + 2), (uint64_t)v8, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v8, (uint64_t)v9, &qword_1EF8194A8);
  if (sub_1C30118DC((uint64_t)v9) != 1)
  {
    sub_1C2FF6D40((uint64_t)v8, (uint64_t)__src, &qword_1EF8194A8);
    sub_1C30118F0(__src, __dst);
    sub_1C3379220();
    TerminalElement.Value.hash(into:)();
    v1 = v0[71];
    if (v1)
      goto LABEL_3;
LABEL_6:
    sub_1C3379220();
    return sub_1C3379244();
  }
  sub_1C3379220();
  v1 = v0[71];
  if (!v1)
    goto LABEL_6;
LABEL_3:
  v2 = v0[68];
  v3 = v0[69];
  v4 = v0[70];
  sub_1C3379220();
  sub_1C3379220();
  if (v3)
  {
    sub_1C2FFDEF0(v2, v3, v4, v1);
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1C3378C38();
  sub_1C2FFE7BC(v2, v3, v4, v1);
  return sub_1C3379244();
}

uint64_t sub_1C3009918()
{
  return TerminalElement.ScalarValue.hashValue.getter();
}

uint64_t sub_1C3009938()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _BYTE __src[528];
  _BYTE v9[528];
  _BYTE v10[528];

  v1 = (_QWORD *)*v0;
  sub_1C2FF6D40(*v0 + 16, (uint64_t)v9, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v9, (uint64_t)v10, &qword_1EF8194A8);
  if (sub_1C30118DC((uint64_t)v10) != 1)
  {
    sub_1C2FF6D40((uint64_t)v9, (uint64_t)__src, &qword_1EF8194A8);
    sub_1C30118F0(__src, &v7);
    sub_1C3379220();
    TerminalElement.Value.hash(into:)();
    v2 = v1[71];
    if (v2)
      goto LABEL_3;
    return sub_1C3379220();
  }
  sub_1C3379220();
  v2 = v1[71];
  if (!v2)
    return sub_1C3379220();
LABEL_3:
  v3 = v1[68];
  v4 = v1[69];
  v5 = v1[70];
  sub_1C3379220();
  sub_1C3379220();
  if (v4)
  {
    sub_1C2FFDEF0(v3, v4, v5, v2);
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1C3378C38();
  return sub_1C2FFE7BC(v3, v4, v5, v2);
}

uint64_t sub_1C3009AAC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE __dst[528];
  _BYTE __src[528];
  _BYTE v9[528];
  _BYTE v10[528];

  sub_1C3379208();
  v1 = (_QWORD *)*v0;
  sub_1C2FF6D40(*v0 + 16, (uint64_t)v9, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v9, (uint64_t)v10, &qword_1EF8194A8);
  if (sub_1C30118DC((uint64_t)v10) != 1)
  {
    sub_1C2FF6D40((uint64_t)v9, (uint64_t)__src, &qword_1EF8194A8);
    sub_1C30118F0(__src, __dst);
    sub_1C3379220();
    TerminalElement.Value.hash(into:)();
    v2 = v1[71];
    if (v2)
      goto LABEL_3;
LABEL_6:
    sub_1C3379220();
    return sub_1C3379244();
  }
  sub_1C3379220();
  v2 = v1[71];
  if (!v2)
    goto LABEL_6;
LABEL_3:
  v3 = v1[68];
  v4 = v1[69];
  v5 = v1[70];
  sub_1C3379220();
  sub_1C3379220();
  if (v4)
  {
    sub_1C2FFDEF0(v3, v4, v5, v2);
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1C3378C38();
  sub_1C2FFE7BC(v3, v4, v5, v2);
  return sub_1C3379244();
}

BOOL sub_1C3009C20(uint64_t *a1)
{
  return _s12SiriOntology15TerminalElementV11ScalarValueC2eeoiySbAE_AEtFZ_0(*a1);
}

uint64_t TerminalElement.SemanticValue.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_1C3379220();
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C3379220();
  }
  swift_bridgeObjectRetain();
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

uint64_t TerminalElement.SemanticValue.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1C3379208();
  sub_1C3379220();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
  }
  sub_1C3378C38();
  return sub_1C3379244();
}

uint64_t sub_1C3009D58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1C3379208();
  sub_1C3379220();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
  }
  sub_1C3378C38();
  return sub_1C3379244();
}

uint64_t sub_1C3009DF0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_1C3379220();
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C3379220();
  }
  return sub_1C3378C38();
}

uint64_t sub_1C3009E74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1C3379208();
  sub_1C3379220();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
  }
  sub_1C3378C38();
  return sub_1C3379244();
}

uint64_t static TerminalElement.OriginalValue.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2)
    return 0;
  if (*((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && *((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2))
    return 1;
  else
    return sub_1C3379184();
}

uint64_t TerminalElement.OriginalValue.hash(into:)()
{
  sub_1C3379220();
  swift_bridgeObjectRetain();
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

uint64_t TerminalElement.OriginalValue.hashValue.getter()
{
  sub_1C3379208();
  sub_1C3379220();
  sub_1C3378C38();
  return sub_1C3379244();
}

uint64_t sub_1C300A004()
{
  sub_1C3379208();
  sub_1C3379220();
  sub_1C3378C38();
  return sub_1C3379244();
}

uint64_t sub_1C300A064()
{
  sub_1C3379220();
  return sub_1C3378C38();
}

uint64_t sub_1C300A0A4()
{
  sub_1C3379208();
  sub_1C3379220();
  sub_1C3378C38();
  return sub_1C3379244();
}

uint64_t sub_1C300A100(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2)
    return 0;
  if (*((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && *((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2))
    return 1;
  else
    return sub_1C3379184();
}

uint64_t sub_1C300A148(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  int64_t v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  int v103;
  int v104;
  int v105;
  unint64_t v106;
  char v107;
  char v108;
  int v109;
  char v110;
  int v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  _QWORD *v119;
  int v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  _OWORD v124[10];
  _OWORD v125[2];
  _OWORD v126[10];
  _OWORD v127[3];

  if (result == a2)
    return 1;
  v2 = a2;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v11 = (v8 - 1) & v8;
      v12 = v10 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_132;
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return 1;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
        {
          v15 = v13 + 3;
          if (v15 >= v9)
            return 1;
          v14 = *(_QWORD *)(v5 + 8 * v15);
          if (v14)
          {
            v4 = v15;
            goto LABEL_22;
          }
          do
          {
            v4 = v15 + 1;
            if (__OFADD__(v15, 1))
              goto LABEL_135;
            if (v4 >= v9)
              return 1;
            v14 = *(_QWORD *)(v5 + 8 * v4);
            ++v15;
          }
          while (!v14);
        }
      }
    }
LABEL_22:
    v11 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v12);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1C302B1E4(v17, v18);
    v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      goto LABEL_123;
    v106 = v11;
    v23 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v20);
    if ((unint64_t)v23 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v24 = sub_1C3378FEC();
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
    }
    v123 = v24;
    if ((unint64_t)v19 >> 62)
    {
      swift_bridgeObjectRetain();
      v25 = sub_1C3378FEC();
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v25 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v26 = v123;
    if (v123 != v25)
    {
LABEL_122:
      swift_bridgeObjectRelease();
LABEL_123:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v123)
    {
      v27 = v23 & 0xFFFFFFFFFFFFFF8;
      if (v23 < 0)
        v27 = v23;
      if (!((unint64_t)v23 >> 62))
        v27 = (v23 & 0xFFFFFFFFFFFFFF8) + 32;
      v28 = v19 & 0xFFFFFFFFFFFFFF8;
      v29 = (v19 & 0xFFFFFFFFFFFFFF8) + 32;
      v94 = v19 & 0xFFFFFFFFFFFFFF8;
      if (v19 < 0)
        v28 = v19;
      if ((unint64_t)v19 >> 62)
        v29 = v28;
      if (v27 != v29)
        break;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v8 = v106;
  }
  if (v123 < 0)
    goto LABEL_133;
  v30 = 0;
  v31 = v23 & 0xC000000000000001;
  v32 = v19 & 0xC000000000000001;
  v86 = v23 + 32;
  v96 = v23;
  v97 = v19;
  v89 = v2;
  v90 = v4;
  v92 = v5;
  v93 = v3;
  v91 = v9;
  v87 = v19 & 0xC000000000000001;
  v88 = v23 & 0xC000000000000001;
  while (2)
  {
    if (v30 != v26)
    {
      if (v31)
      {
        result = MEMORY[0x1C3BD10B4](v30, v23);
        v118 = result;
        v95 = v30;
        if (v32)
          goto LABEL_44;
LABEL_46:
        if (v30 >= *(_QWORD *)(v94 + 16))
          goto LABEL_134;
        v33 = swift_retain();
      }
      else
      {
        v118 = *(_QWORD *)(v86 + 8 * v30);
        result = swift_retain();
        v95 = v30;
        if (!v32)
          goto LABEL_46;
LABEL_44:
        v33 = MEMORY[0x1C3BD10B4](v30, v19);
      }
      v34 = *(_QWORD **)(v118 + 24);
      v35 = *(_QWORD **)(v33 + 24);
      swift_unownedRetainStrong();
      v36 = v34[7];
      swift_release();
      swift_unownedRetainStrong();
      v37 = v35[7];
      swift_release();
      if (v36 != v37)
        goto LABEL_121;
      swift_unownedRetainStrong();
      v38 = v34[8];
      v39 = v34[9];
      v40 = v34[11];
      v116 = v34[10];
      v41 = v34[12];
      swift_retain();
      swift_bridgeObjectRetain();
      v121 = v40;
      swift_bridgeObjectRetain();
      swift_release();
      swift_unownedRetainStrong();
      v43 = v35[8];
      v42 = v35[9];
      v44 = v35[10];
      v45 = v35[11];
      v119 = (_QWORD *)v35[12];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      if ((v38 != v43 || v39 != v42) && (sub_1C3379184() & 1) == 0
        || (v116 != v44 || v121 != v45) && (sub_1C3379184() & 1) == 0)
      {
LABEL_129:
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_130;
      }
      if (v41)
      {
        if (!v119)
          goto LABEL_129;
        swift_retain();
        v46 = (_QWORD *)swift_retain();
        v47 = sub_1C306CAAC(v46, v119);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        if ((v47 & 1) == 0)
          goto LABEL_121;
      }
      else
      {
        if (v119)
          goto LABEL_129;
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_unownedRetainStrong();
      v48 = v34[13];
      swift_bridgeObjectRetain();
      swift_release();
      swift_unownedRetainStrong();
      v49 = v35[13];
      swift_bridgeObjectRetain();
      swift_release();
      v50 = *(_QWORD *)(v48 + 16);
      if (v50 != *(_QWORD *)(v49 + 16))
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_130:
        swift_bridgeObjectRelease();
        goto LABEL_122;
      }
      if (v50 && v48 != v49)
      {
        v51 = 0;
        v98 = v49;
        v99 = v48;
        while (1)
        {
          v53 = *(_QWORD *)(v48 + v51 + 32);
          v54 = *(_QWORD *)(v48 + v51 + 40);
          v56 = *(_QWORD *)(v48 + v51 + 48);
          v55 = *(_QWORD *)(v48 + v51 + 56);
          v57 = *(_QWORD *)(v48 + v51 + 72);
          v114 = *(_QWORD *)(v48 + v51 + 64);
          v58 = *(double *)(v48 + v51 + 80);
          v117 = *(_BYTE *)(v48 + v51 + 88);
          v122 = *(unsigned __int8 *)(v48 + v51 + 89);
          v105 = *(_DWORD *)(v48 + v51 + 92);
          v112 = *(_BYTE *)(v48 + v51 + 96);
          v103 = *(_DWORD *)(v48 + v51 + 100);
          v110 = *(_BYTE *)(v48 + v51 + 104);
          v101 = *(_QWORD *)(v48 + v51 + 112);
          v108 = *(_BYTE *)(v48 + v51 + 120);
          v59 = v49 + v51;
          v60 = *(_QWORD *)(v49 + v51 + 32);
          v61 = *(_QWORD *)(v49 + v51 + 40);
          v63 = *(_QWORD *)(v49 + v51 + 48);
          v62 = *(_QWORD *)(v59 + 56);
          v64 = *(_QWORD *)(v59 + 72);
          v113 = *(_QWORD *)(v59 + 64);
          v65 = *(double *)(v59 + 80);
          v115 = *(unsigned __int8 *)(v59 + 88);
          v120 = *(unsigned __int8 *)(v59 + 89);
          v104 = *(_DWORD *)(v59 + 92);
          v111 = *(unsigned __int8 *)(v59 + 96);
          v102 = *(_DWORD *)(v59 + 100);
          v109 = *(unsigned __int8 *)(v59 + 104);
          v100 = *(_QWORD *)(v59 + 112);
          v107 = *(_BYTE *)(v59 + 120);
          if ((v53 != v60 || v54 != v61) && (sub_1C3379184() & 1) == 0)
            break;
          if ((v56 != v63 || v55 != v62) && (sub_1C3379184() & 1) == 0)
            break;
          if (v57)
          {
            if (!v64 || (v114 != v113 || v57 != v64) && (sub_1C3379184() & 1) == 0)
              break;
          }
          else if (v64)
          {
            break;
          }
          if ((v117 & 1) != 0)
          {
            if (!v115)
              break;
          }
          else
          {
            v66 = v115;
            if (v58 != v65)
              v66 = 1;
            if ((v66 & 1) != 0)
              break;
          }
          if (v122 == 7)
          {
            if (v120 != 7)
              break;
          }
          else if (v120 == 7 || v122 != v120)
          {
            break;
          }
          if ((v112 & 1) != 0)
          {
            if (!v111)
              break;
          }
          else
          {
            v67 = v111;
            if (v105 != v104)
              v67 = 1;
            if ((v67 & 1) != 0)
              break;
          }
          if ((v110 & 1) != 0)
          {
            if (!v109)
              break;
          }
          else
          {
            v68 = v109;
            if (v103 != v102)
              v68 = 1;
            if ((v68 & 1) != 0)
              break;
          }
          if ((v108 & 1) != 0)
          {
            if ((v107 & 1) == 0)
              break;
          }
          else
          {
            v52 = v107;
            if (v101 != v100)
              v52 = 1;
            if ((v52 & 1) != 0)
              break;
          }
          v51 += 96;
          --v50;
          v49 = v98;
          v48 = v99;
          if (!v50)
            goto LABEL_108;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_121:
        swift_release();
        swift_release();
        goto LABEL_122;
      }
LABEL_108:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      v69 = v34[14];
      swift_bridgeObjectRetain();
      swift_release();
      swift_unownedRetainStrong();
      v70 = v35[14];
      swift_bridgeObjectRetain();
      swift_release();
      v71 = sub_1C3001E68(v69, v70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v71 & 1) == 0)
        goto LABEL_121;
      swift_unownedRetainStrong();
      v72 = v34[15];
      swift_bridgeObjectRetain();
      swift_release();
      swift_unownedRetainStrong();
      v73 = v35[15];
      swift_bridgeObjectRetain();
      swift_release();
      v74 = *(_QWORD *)(v72 + 16);
      v23 = v96;
      v19 = v97;
      v5 = v92;
      v3 = v93;
      v4 = v90;
      v9 = v91;
      if (v74 != *(_QWORD *)(v73 + 16))
        goto LABEL_125;
      if (v74 && v72 != v73)
      {
        v75 = 32;
        while (1)
        {
          v76 = *(_OWORD *)(v72 + v75 + 144);
          v126[8] = *(_OWORD *)(v72 + v75 + 128);
          v126[9] = v76;
          v127[0] = *(_OWORD *)(v72 + v75 + 160);
          *(_OWORD *)((char *)v127 + 9) = *(_OWORD *)(v72 + v75 + 169);
          v77 = *(_OWORD *)(v72 + v75 + 80);
          v126[4] = *(_OWORD *)(v72 + v75 + 64);
          v126[5] = v77;
          v78 = *(_OWORD *)(v72 + v75 + 112);
          v126[6] = *(_OWORD *)(v72 + v75 + 96);
          v126[7] = v78;
          v79 = *(_OWORD *)(v72 + v75 + 16);
          v126[0] = *(_OWORD *)(v72 + v75);
          v126[1] = v79;
          v80 = *(_OWORD *)(v72 + v75 + 48);
          v126[2] = *(_OWORD *)(v72 + v75 + 32);
          v126[3] = v80;
          v81 = *(_OWORD *)(v73 + v75 + 144);
          v124[8] = *(_OWORD *)(v73 + v75 + 128);
          v124[9] = v81;
          v125[0] = *(_OWORD *)(v73 + v75 + 160);
          *(_OWORD *)((char *)v125 + 9) = *(_OWORD *)(v73 + v75 + 169);
          v82 = *(_OWORD *)(v73 + v75 + 80);
          v124[4] = *(_OWORD *)(v73 + v75 + 64);
          v124[5] = v82;
          v83 = *(_OWORD *)(v73 + v75 + 112);
          v124[6] = *(_OWORD *)(v73 + v75 + 96);
          v124[7] = v83;
          v84 = *(_OWORD *)(v73 + v75 + 16);
          v124[0] = *(_OWORD *)(v73 + v75);
          v124[1] = v84;
          v85 = *(_OWORD *)(v73 + v75 + 48);
          v124[2] = *(_OWORD *)(v73 + v75 + 32);
          v124[3] = v85;
          if (!_s12SiriOntology13UsoEntitySpanV2eeoiySbAC_ACtFZ_0((uint64_t)v126, (uint64_t)v124))
            break;
          v75 += 192;
          if (!--v74)
            goto LABEL_115;
        }
LABEL_125:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return 0;
      }
LABEL_115:
      v30 = v95 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      result = swift_release();
      v26 = v123;
      v31 = v88;
      v2 = v89;
      v32 = v87;
      if (v95 + 1 == v123)
        goto LABEL_6;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
  return result;
}

uint64_t sub_1C300ABF4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98[17];

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v3 = v4;
  v5 = 1 << *(_BYTE *)(result - 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v94 = v6 & v3;
  v96 = 0;
  v84 = result;
  v86 = (unint64_t)(v5 + 63) >> 6;
  while (v94)
  {
    v7 = (v94 - 1) & v94;
    v8 = v96;
    v9 = __clz(__rbit64(v94)) | (v96 << 6);
    v10 = a1;
    v11 = a2;
LABEL_23:
    v15 = 8 * v9;
    v16 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + v15);
    v17 = sub_1C302BD54(*(_QWORD *)(*(_QWORD *)(v10 + 48) + v15));
    if ((v18 & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v17);
    v20 = *(unsigned __int8 *)(v19 + 40);
    v21 = *(unsigned __int8 *)(v16 + 40);
    if (v20 == 255)
    {
      if (v21 != 255)
        return 0;
    }
    else
    {
      if (v21 == 255)
        return 0;
      v23 = *(_QWORD *)(v19 + 24);
      v22 = *(_QWORD *)(v19 + 32);
      v24 = *(_QWORD *)(v16 + 24);
      v25 = *(_QWORD *)(v16 + 32);
      if ((v20 & 1) != 0)
      {
        if ((v21 & 1) == 0)
          return 0;
        if (v22)
        {
          if (!v25)
            return 0;
          v26 = v23 == v24 && v22 == v25;
          if (!v26 && (sub_1C3379184() & 1) == 0)
            return 0;
        }
        else if (v25)
        {
          swift_retain();
          sub_1C301F70C(v23, 0, v20);
          goto LABEL_88;
        }
      }
      else
      {
        if ((v21 & 1) != 0)
          return 0;
        if ((v22 & 1) != 0)
        {
          if ((v25 & 1) == 0)
            return 0;
        }
        else
        {
          result = 0;
          if ((v25 & 1) != 0 || v23 != v24)
            return result;
        }
      }
    }
    if (*(_QWORD *)(v19 + 56) != *(_QWORD *)(v16 + 56))
      return 0;
    v96 = v8;
    result = *(_QWORD *)(v19 + 64);
    v27 = *(_QWORD *)(v19 + 80);
    v28 = *(_QWORD *)(v19 + 88);
    v29 = *(_QWORD **)(v19 + 96);
    v30 = *(_QWORD *)(v16 + 80);
    v31 = *(_QWORD *)(v16 + 88);
    v32 = *(_QWORD **)(v16 + 96);
    if (result != *(_QWORD *)(v16 + 64) || *(_QWORD *)(v19 + 72) != *(_QWORD *)(v16 + 72))
    {
      result = sub_1C3379184();
      if ((result & 1) == 0)
        return 0;
    }
    if (v27 != v30 || v28 != v31)
    {
      result = sub_1C3379184();
      if ((result & 1) == 0)
        return 0;
    }
    v94 = v7;
    if (v29)
    {
      if (!v32)
        return 0;
      v36 = v29[2];
      v35 = v29[3];
      v83 = v29[5];
      v37 = v29[7];
      v88 = v29[6];
      v89 = v29[4];
      v38 = v29[8];
      v39 = v29[9];
      v40 = v32[3];
      v41 = v32[4];
      v42 = v32[5];
      v43 = v32[6];
      v44 = v32[7];
      v45 = v32[8];
      v46 = v32[9];
      v47 = v35;
      if (v35)
      {
        v82 = v29[2];
        if (!v40)
        {
          v81 = v32[2];
          v85 = v32[5];
          v87 = v32[4];
          v91 = v32[7];
          v93 = v32[6];
          v95 = v32[9];
          v97 = v32[8];
          v77 = v29[2];
          v78 = v29[3];
          sub_1C301F734(v36, v35);
          swift_retain();
          sub_1C301F734(v77, v47);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v74 = v78;
          swift_bridgeObjectRelease();
          v73 = v83;
          v76 = v88;
          v75 = v89;
          v40 = 0;
          goto LABEL_87;
        }
        v48 = v36 == v32[2] && v35 == v40;
        v49 = v29[5];
        v51 = v88;
        v50 = v89;
        if (!v48)
        {
          v79 = v38;
          v52 = v32[4];
          v80 = v37;
          v53 = v32[5];
          v54 = v32[6];
          v55 = v32[8];
          v56 = v32[9];
          v57 = v35;
          v58 = v44;
          v59 = sub_1C3379184();
          v42 = v53;
          v41 = v52;
          v38 = v79;
          v44 = v58;
          v47 = v57;
          v49 = v83;
          v37 = v80;
          v43 = v54;
          v50 = v89;
          v46 = v56;
          v45 = v55;
          if ((v59 & 1) == 0)
            goto LABEL_85;
        }
        if (v50 != v41 || v49 != v42)
        {
          v61 = v43;
          v62 = v45;
          v63 = v46;
          v64 = v38;
          v65 = v47;
          v66 = v44;
          v67 = sub_1C3379184();
          v44 = v66;
          v47 = v65;
          v38 = v64;
          v43 = v61;
          v51 = v88;
          v46 = v63;
          v45 = v62;
          if ((v67 & 1) == 0)
            goto LABEL_85;
        }
        v68 = v51 == v43 && v37 == v44;
        if (!v68 && (v69 = v45, v70 = v46, v71 = sub_1C3379184(), v46 = v70, v45 = v69, (v71 & 1) == 0)
          || (v38 == v45 ? (v72 = v39 == v46) : (v72 = 0), !v72 && (sub_1C3379184() & 1) == 0))
        {
LABEL_85:
          swift_retain();
          sub_1C301F734(v82, v47);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
        swift_retain();
        sub_1C301F734(v82, v47);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
      else if (v40)
      {
        v81 = v32[2];
        v82 = v29[2];
        v85 = v32[5];
        v87 = v32[4];
        v91 = v32[7];
        v93 = v32[6];
        v95 = v32[9];
        v97 = v32[8];
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v73 = v83;
        v74 = 0;
        v76 = v88;
        v75 = v89;
LABEL_87:
        v98[0] = v82;
        v98[1] = v74;
        v98[2] = v75;
        v98[3] = v73;
        v98[4] = v76;
        v98[5] = v37;
        v98[6] = v38;
        v98[7] = v39;
        v98[8] = v81;
        v98[9] = v40;
        v98[10] = v87;
        v98[11] = v85;
        v98[12] = v93;
        v98[13] = v91;
        v98[14] = v97;
        v98[15] = v95;
        sub_1C301F734(v81, v40);
        sub_1C301F784(v98);
        swift_release();
        swift_release();
        swift_release();
LABEL_88:
        swift_release();
        return 0;
      }
    }
    else if (v32)
    {
      return 0;
    }
  }
  v12 = v96 + 1;
  v11 = a2;
  if (__OFADD__(v96, 1))
  {
    __break(1u);
    goto LABEL_93;
  }
  if (v12 >= v86)
    return 1;
  v13 = *(_QWORD *)(v84 + 8 * v12);
  v8 = v96 + 1;
  v10 = a1;
  if (v13)
    goto LABEL_22;
  v8 = v96 + 2;
  if (v96 + 2 >= v86)
    return 1;
  v13 = *(_QWORD *)(v84 + 8 * v8);
  if (v13)
    goto LABEL_22;
  v8 = v96 + 3;
  if (v96 + 3 >= v86)
    return 1;
  v13 = *(_QWORD *)(v84 + 8 * v8);
  if (v13)
  {
LABEL_22:
    v7 = (v13 - 1) & v13;
    v9 = __clz(__rbit64(v13)) + (v8 << 6);
    goto LABEL_23;
  }
  v14 = v96 + 4;
  if (v96 + 4 >= v86)
    return 1;
  v13 = *(_QWORD *)(v84 + 8 * v14);
  if (v13)
  {
    v8 = v96 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v86)
      return 1;
    v13 = *(_QWORD *)(v84 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_93:
  __break(1u);
  return result;
}

uint64_t sub_1C300B24C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  unint64_t v19;
  char v20;
  char v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(double *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    v19 = sub_1C302B1E4(v16, v17);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(double *)(*(_QWORD *)(a2 + 56) + 8 * v19) != v18)
      return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C300B3E8(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  char v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v27)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_22:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1C302B1E4(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_1C3379184();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 3;
  if (v13 >= v27)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C300B5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t result;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  unsigned int v33;
  unint64_t v34;
  char v35;
  _DWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  int *v39;
  int *v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  _BOOL4 v51;
  uint64_t v52;

  v50 = type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList(0);
  v4 = *(_QWORD *)(v50 - 8);
  v5 = MEMORY[0x1E0C80A78](v50);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v45 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819708);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (_DWORD *)((char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0C80A78](v11);
  v16 = (unsigned int *)((char *)&v45 - v15);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v17 = *(_QWORD *)(a1 + 64);
  v47 = a1 + 64;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v48 = (unint64_t)(v18 + 63) >> 6;
  v49 = 0;
  v46 = v48 - 1;
  while (1)
  {
    if (v20)
    {
      v52 = (v20 - 1) & v20;
      v22 = __clz(__rbit64(v20)) | (v49 << 6);
LABEL_9:
      v23 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v22);
      v24 = *(_QWORD *)(a1 + 56) + *(_QWORD *)(v4 + 72) * v22;
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819710);
      sub_1C2FF6C7C(v24, (uint64_t)v13 + *(int *)(v25 + 48), type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList);
      *v13 = v23;
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v13, 0, 1, v25);
      goto LABEL_28;
    }
    v26 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v26 < v48)
    {
      v27 = *(_QWORD *)(v47 + 8 * v26);
      if (v27)
        goto LABEL_13;
      v28 = v49 + 2;
      ++v49;
      if (v26 + 1 < v48)
      {
        v27 = *(_QWORD *)(v47 + 8 * v28);
        if (v27)
          goto LABEL_16;
        v49 = v26 + 1;
        if (v26 + 2 < v48)
        {
          v27 = *(_QWORD *)(v47 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_13;
          }
          v28 = v26 + 3;
          v49 = v26 + 2;
          if (v26 + 3 < v48)
            break;
        }
      }
    }
LABEL_27:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819710);
    (*(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v13, 1, 1, v29);
    v52 = 0;
LABEL_28:
    sub_1C2FF6D40((uint64_t)v13, (uint64_t)v16, &qword_1EF819708);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819710);
    v31 = (*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v16, 1, v30) == 1;
    result = v31;
    if (v31)
      return result;
    v51 = v31;
    v32 = (uint64_t)v16 + *(int *)(v30 + 48);
    v33 = *v16;
    sub_1C2FF6C38(v32, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList);
    v34 = sub_1C302B248(v33);
    if ((v35 & 1) == 0)
      goto LABEL_40;
    sub_1C2FF6C7C(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v4 + 72) * v34, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList);
    v36 = *(_DWORD **)v7;
    v37 = *(_DWORD **)v9;
    v38 = *(_QWORD *)(*(_QWORD *)v7 + 16);
    if (v38 != *(_QWORD *)(*(_QWORD *)v9 + 16))
      goto LABEL_39;
    if (v38 && v36 != v37)
    {
      if (v36[8] != v37[8])
        goto LABEL_39;
      if (v38 != 1)
      {
        if (v36[9] != v37[9])
        {
LABEL_39:
          sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList);
LABEL_40:
          sub_1C2FF6CC0((uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList);
          return 0;
        }
        v39 = v36 + 10;
        v40 = v37 + 10;
        v41 = v38 - 2;
        while (v41)
        {
          v43 = *v39++;
          v42 = v43;
          v44 = *v40++;
          --v41;
          if (v42 != v44)
            goto LABEL_39;
        }
      }
    }
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v21 = sub_1C3378BD8();
    sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList);
    sub_1C2FF6CC0((uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList);
    v20 = v52;
    result = v51;
    if ((v21 & 1) == 0)
      return result;
  }
  v27 = *(_QWORD *)(v47 + 8 * v28);
  if (v27)
  {
LABEL_16:
    v26 = v28;
LABEL_13:
    v52 = (v27 - 1) & v27;
    v22 = __clz(__rbit64(v27)) + (v26 << 6);
    v49 = v26;
    goto LABEL_9;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v48)
    {
      v49 = v46;
      goto LABEL_27;
    }
    v27 = *(_QWORD *)(v47 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_13;
  }
LABEL_45:
  __break(1u);
  return result;
}

unint64_t sub_1C300BAA0(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  int v16;
  char v17;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = 4 * v11;
    v16 = *(_DWORD *)(*(_QWORD *)(v3 + 56) + v15);
    result = sub_1C302B248(*(_DWORD *)(*(_QWORD *)(v3 + 48) + v15));
    if ((v17 & 1) == 0 || *(_DWORD *)(*(_QWORD *)(a2 + 56) + 4 * result) != v16)
      return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C300BC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t result;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  BOOL v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  BOOL v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  int EnumCaseMultiPayload;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  _QWORD *v107;
  _QWORD *v108;
  BOOL v109;
  _QWORD *v110;
  _QWORD *v111;
  BOOL v112;
  _QWORD *v113;
  _QWORD *v114;
  BOOL v115;
  uint64_t *v116;
  uint64_t v117;
  int64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BOOL4 v132;
  uint64_t v133;
  int64_t v134;
  uint64_t *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  MEMORY[0x1E0C80A78](v4);
  v144 = (uint64_t *)((char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196A0);
  MEMORY[0x1E0C80A78](v137);
  v7 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value(0);
  v142 = *(_QWORD *)(v146 - 8);
  v8 = MEMORY[0x1E0C80A78](v146);
  v145 = (uint64_t *)((char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x1E0C80A78](v8);
  v135 = (uint64_t *)((char *)&v117 - v11);
  MEMORY[0x1E0C80A78](v10);
  v139 = (uint64_t)&v117 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DE880);
  MEMORY[0x1E0C80A78](v13);
  v140 = (uint64_t)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196A8);
  MEMORY[0x1E0C80A78](v141);
  v16 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue(0);
  v17 = *(_QWORD *)(v147 - 8);
  v18 = MEMORY[0x1E0C80A78](v147);
  v20 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v117 - v21;
  v138 = type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValues(0);
  v148 = *(_QWORD *)(v138 - 8);
  v23 = MEMORY[0x1E0C80A78](v138);
  v149 = (uint64_t)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v117 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196C0);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (uint64_t *)((char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0C80A78](v28);
  v143 = (uint64_t *)((char *)&v117 - v32);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v121 = v17;
  v119 = v4;
  v127 = v7;
  v33 = 0;
  v34 = *(_QWORD *)(a1 + 64);
  v120 = a1 + 64;
  v35 = 1 << *(_BYTE *)(a1 + 32);
  v36 = -1;
  if (v35 < 64)
    v36 = ~(-1 << v35);
  v37 = v36 & v34;
  v122 = (unint64_t)(v35 + 63) >> 6;
  v118 = v122 - 1;
  v125 = a2;
  v124 = a1;
  v136 = v16;
  v128 = v26;
  v123 = v30;
  while (1)
  {
    if (v37)
    {
      v133 = (v37 - 1) & v37;
      v134 = v33;
      v40 = __clz(__rbit64(v37)) | (v33 << 6);
LABEL_9:
      v41 = *(_QWORD *)(a1 + 56);
      v42 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v40);
      v43 = v42[1];
      *v30 = *v42;
      v30[1] = v43;
      v44 = v41 + *(_QWORD *)(v148 + 72) * v40;
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196C8);
      sub_1C2FF6C7C(v44, (uint64_t)v30 + *(int *)(v45 + 48), type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValues);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v30, 0, 1, v45);
      swift_bridgeObjectRetain();
      v46 = v146;
      goto LABEL_31;
    }
    v47 = v33 + 1;
    if (__OFADD__(v33, 1))
      goto LABEL_148;
    v46 = v146;
    if (v47 < v122)
    {
      v48 = *(_QWORD *)(v120 + 8 * v47);
      if (v48)
        goto LABEL_13;
      v49 = v33 + 2;
      ++v33;
      if (v47 + 1 < v122)
      {
        v48 = *(_QWORD *)(v120 + 8 * v49);
        if (v48)
          goto LABEL_16;
        v33 = v47 + 1;
        if (v47 + 2 < v122)
        {
          v48 = *(_QWORD *)(v120 + 8 * (v47 + 2));
          if (v48)
          {
            v47 += 2;
LABEL_13:
            v133 = (v48 - 1) & v48;
            v134 = v47;
            v40 = __clz(__rbit64(v48)) + (v47 << 6);
            goto LABEL_9;
          }
          v33 = v47 + 2;
          if (v47 + 3 < v122)
          {
            v48 = *(_QWORD *)(v120 + 8 * (v47 + 3));
            if (v48)
            {
              v47 += 3;
              goto LABEL_13;
            }
            v49 = v47 + 4;
            v33 = v47 + 3;
            if (v47 + 4 < v122)
            {
              v48 = *(_QWORD *)(v120 + 8 * v49);
              if (!v48)
              {
                while (1)
                {
                  v47 = v49 + 1;
                  if (__OFADD__(v49, 1))
                    goto LABEL_149;
                  if (v47 >= v122)
                  {
                    v33 = v118;
                    goto LABEL_30;
                  }
                  v48 = *(_QWORD *)(v120 + 8 * v47);
                  ++v49;
                  if (v48)
                    goto LABEL_13;
                }
              }
LABEL_16:
              v47 = v49;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_30:
    v134 = v33;
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196C8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v30, 1, 1, v50);
    v133 = 0;
LABEL_31:
    v51 = (uint64_t)v30;
    v52 = v143;
    sub_1C2FF6D40(v51, (uint64_t)v143, &qword_1EF8196C0);
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196C8);
    v54 = (*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v52, 1, v53) == 1;
    result = v54;
    if (v54)
      return result;
    v132 = v54;
    v55 = (uint64_t)v52 + *(int *)(v53 + 48);
    v56 = *v52;
    v57 = v52[1];
    sub_1C2FF6C38(v55, (uint64_t)v26, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValues);
    v58 = sub_1C302B1E4(v56, v57);
    v60 = v59;
    swift_bridgeObjectRelease();
    if ((v60 & 1) == 0)
      goto LABEL_144;
    v61 = *(_QWORD *)(a2 + 56) + *(_QWORD *)(v148 + 72) * v58;
    v62 = v149;
    sub_1C2FF6C7C(v61, v149, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValues);
    v63 = *(_QWORD *)v62;
    v64 = *(_QWORD *)v26;
    v65 = *(_QWORD *)(*(_QWORD *)v62 + 16);
    if (v65 != *(_QWORD *)(*(_QWORD *)v26 + 16))
    {
LABEL_143:
      sub_1C2FF6CC0(v149, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValues);
      v26 = v128;
LABEL_144:
      sub_1C2FF6CC0((uint64_t)v26, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValues);
      return 0;
    }
    if (v65 && v63 != v64)
      break;
LABEL_6:
    v38 = v149;
    v26 = v128;
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v39 = sub_1C3378BD8();
    sub_1C2FF6CC0(v38, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValues);
    sub_1C2FF6CC0((uint64_t)v26, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValues);
    a2 = v125;
    a1 = v124;
    v30 = v123;
    v37 = v133;
    v33 = v134;
    result = v132;
    if ((v39 & 1) == 0)
      return result;
  }
  v66 = 0;
  v67 = (*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
  v131 = v63 + v67;
  v129 = v64 + v67;
  v130 = *(_QWORD *)(v121 + 72);
  v126 = v65;
  while (1)
  {
    v68 = v130 * v66;
    result = sub_1C2FF6C7C(v131 + v130 * v66, (uint64_t)v22, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
    if (v66 >= *(_QWORD *)(v64 + 16))
      break;
    sub_1C2FF6C7C(v129 + v68, (uint64_t)v20, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
    v69 = *(_QWORD *)v22 == *(_QWORD *)v20 && *((_QWORD *)v22 + 1) == *((_QWORD *)v20 + 1);
    if (!v69 && (sub_1C3379184() & 1) == 0
      || (*((_QWORD *)v22 + 2) != *((_QWORD *)v20 + 2) || *((_QWORD *)v22 + 3) != *((_QWORD *)v20 + 3))
      && (sub_1C3379184() & 1) == 0)
    {
      goto LABEL_142;
    }
    if (*((double *)v22 + 4) != *((double *)v20 + 4))
      goto LABEL_142;
    if (v22[40] != v20[40])
      goto LABEL_142;
    v70 = (_QWORD *)*((_QWORD *)v22 + 6);
    v71 = (_QWORD *)*((_QWORD *)v20 + 6);
    v72 = v70[2];
    if (v72 != v71[2])
      goto LABEL_142;
    if (v72 && v70 != v71)
    {
      if ((v70[4] != v71[4] || v70[5] != v71[5]) && (sub_1C3379184() & 1) == 0)
        goto LABEL_142;
      if (v72 != 1)
      {
        if ((v70[6] != v71[6] || v70[7] != v71[7]) && (sub_1C3379184() & 1) == 0)
          goto LABEL_142;
        v73 = v72 - 2;
        if (v73)
        {
          v107 = v71 + 9;
          v108 = v70 + 9;
          do
          {
            v109 = *(v108 - 1) == *(v107 - 1) && *v108 == *v107;
            if (!v109 && (sub_1C3379184() & 1) == 0)
              goto LABEL_142;
            v107 += 2;
            v108 += 2;
          }
          while (--v73);
        }
      }
    }
    v74 = (_QWORD *)*((_QWORD *)v22 + 7);
    v75 = (_QWORD *)*((_QWORD *)v20 + 7);
    v76 = v74[2];
    if (v76 != v75[2])
      goto LABEL_142;
    if (v76)
      v77 = v74 == v75;
    else
      v77 = 1;
    if (!v77)
    {
      v78 = v74[4] == v75[4] && v74[5] == v75[5];
      if (!v78 && (sub_1C3379184() & 1) == 0)
        goto LABEL_142;
      if (v76 != 1)
      {
        if ((v74[6] != v75[6] || v74[7] != v75[7]) && (sub_1C3379184() & 1) == 0)
          goto LABEL_142;
        v79 = v76 - 2;
        if (v79)
        {
          v110 = v75 + 9;
          v111 = v74 + 9;
          do
          {
            v112 = *(v111 - 1) == *(v110 - 1) && *v111 == *v110;
            if (!v112 && (sub_1C3379184() & 1) == 0)
              goto LABEL_142;
            v110 += 2;
            v111 += 2;
          }
          while (--v79);
        }
      }
    }
    v80 = *(int *)(v147 + 40);
    v81 = (uint64_t)&v20[v80];
    v82 = (uint64_t)v136;
    v83 = (uint64_t)&v136[*(int *)(v141 + 48)];
    sub_1C2FF6CFC((uint64_t)&v22[v80], (uint64_t)v136, &qword_1EF7DE880);
    sub_1C2FF6CFC(v81, v83, &qword_1EF7DE880);
    v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
    if (v84(v82, 1, v46) == 1)
    {
      if (v84(v83, 1, v46) != 1)
      {
        v116 = &qword_1EF8196A8;
        goto LABEL_141;
      }
    }
    else
    {
      v85 = v46;
      v86 = v140;
      sub_1C2FF6CFC(v82, v140, &qword_1EF7DE880);
      if (v84(v83, 1, v85) == 1)
      {
        v116 = &qword_1EF8196A8;
        goto LABEL_140;
      }
      v87 = v139;
      sub_1C2FF6C38(v83, v139, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
      v88 = (uint64_t)v127;
      v89 = &v127[*(int *)(v137 + 48)];
      sub_1C2FF6C7C(v86, (uint64_t)v127, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
      sub_1C2FF6C7C(v87, (uint64_t)v89, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
      v54 = swift_getEnumCaseMultiPayload() == 1;
      v46 = v85;
      v90 = v88;
      if (v54)
      {
        v91 = v145;
        sub_1C2FF6C7C(v88, (uint64_t)v145, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          sub_1C2FF6CC0((uint64_t)v91, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
LABEL_138:
          sub_1C2FF9138((uint64_t)v127, &qword_1EF8196A0);
          goto LABEL_139;
        }
        v92 = (uint64_t)v89;
        v93 = v144;
        sub_1C2FF6C38(v92, (uint64_t)v144, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
        v94 = v91[1];
        v54 = *v91 == *v93;
        v46 = v146;
        if ((!v54 || v94 != v93[1]) && (sub_1C3379184() & 1) == 0)
          goto LABEL_132;
        if ((v145[2] != v144[2] || v145[3] != v144[3]) && (sub_1C3379184() & 1) == 0)
          goto LABEL_132;
        if ((v145[4] != v144[4] || v145[5] != v144[5]) && (sub_1C3379184() & 1) == 0)
          goto LABEL_132;
        v95 = (_QWORD *)v145[6];
        v96 = (_QWORD *)v144[6];
        v97 = v95[2];
        if (v97 != v96[2])
          goto LABEL_132;
        if (v97 && v95 != v96)
        {
          if ((v95[4] != v96[4] || v95[5] != v96[5]) && (sub_1C3379184() & 1) == 0)
            goto LABEL_132;
          v98 = v97 - 1;
          if (v98)
          {
            v113 = v96 + 7;
            v114 = v95 + 7;
            while (1)
            {
              v115 = *(v114 - 1) == *(v113 - 1) && *v114 == *v113;
              if (!v115 && (sub_1C3379184() & 1) == 0)
                break;
              v113 += 2;
              v114 += 2;
              if (!--v98)
                goto LABEL_98;
            }
LABEL_132:
            sub_1C2FF6CC0((uint64_t)v144, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
            sub_1C2FF6CC0((uint64_t)v145, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
LABEL_133:
            sub_1C2FF6CC0((uint64_t)v127, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
LABEL_139:
            v86 = v140;
            v82 = (uint64_t)v136;
            sub_1C2FF6CC0(v139, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
            v116 = &qword_1EF7DE880;
LABEL_140:
            sub_1C2FF6CC0(v86, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
LABEL_141:
            sub_1C2FF9138(v82, v116);
LABEL_142:
            sub_1C2FF6CC0((uint64_t)v20, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
            sub_1C2FF6CC0((uint64_t)v22, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
            goto LABEL_143;
          }
        }
LABEL_98:
        sub_1C3378914();
        sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
        if ((sub_1C3378BD8() & 1) == 0)
          goto LABEL_132;
        sub_1C2FF6CC0((uint64_t)v144, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
        sub_1C2FF6CC0((uint64_t)v145, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
      }
      else
      {
        v99 = v135;
        sub_1C2FF6C7C(v90, (uint64_t)v135, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
        v101 = *v99;
        v100 = v99[1];
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_138;
        }
        v103 = *(_QWORD *)v89;
        v104 = *((_QWORD *)v89 + 1);
        if (v101 == v103 && v100 == v104)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v105 = sub_1C3379184();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v105 & 1) == 0)
            goto LABEL_133;
        }
      }
      sub_1C2FF6CC0((uint64_t)v127, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
      sub_1C2FF6CC0(v139, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
      sub_1C2FF6CC0(v140, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
      v82 = (uint64_t)v136;
    }
    sub_1C2FF9138(v82, &qword_1EF7DE880);
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v106 = sub_1C3378BD8();
    sub_1C2FF6CC0((uint64_t)v20, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
    sub_1C2FF6CC0((uint64_t)v22, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
    if ((v106 & 1) == 0)
      goto LABEL_143;
    if (++v66 == v126)
      goto LABEL_6;
  }
  __break(1u);
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
  return result;
}

uint64_t sub_1C300CAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _DWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  BOOL v110;
  BOOL v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(uint64_t, uint64_t, uint64_t);
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  _QWORD *v125;
  int EnumCaseMultiPayload;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  BOOL v142;
  _QWORD *v143;
  _QWORD *v144;
  BOOL v145;
  char v146;
  char v147;
  _QWORD *v148;
  _QWORD *v149;
  BOOL v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  int64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int64_t v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  unint64_t v183;
  uint64_t *v184;
  _BOOL4 v185;
  uint64_t *v186;
  uint64_t v187;
  int64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  char *v209;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue(0);
  MEMORY[0x1E0C80A78](v4);
  v198 = (uint64_t *)((char *)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196A0);
  MEMORY[0x1E0C80A78](v189);
  v7 = (char *)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value(0);
  v195 = *(_QWORD *)(v8 - 8);
  v196 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v199 = (uint64_t *)((char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x1E0C80A78](v9);
  v186 = (uint64_t *)((char *)&v157 - v12);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v157 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DE880);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v157 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196A8);
  MEMORY[0x1E0C80A78](v194);
  v19 = (char *)&v157 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue(0);
  v190 = *(_QWORD *)(v200 - 8);
  v20 = MEMORY[0x1E0C80A78](v200);
  v22 = (char *)&v157 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v157 - v23;
  v192 = type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState(0);
  v201 = *(_QWORD *)(v192 - 8);
  v25 = MEMORY[0x1E0C80A78](v192);
  v207 = (uint64_t)&v157 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v204 = (char *)&v157 - v27;
  v193 = type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo(0);
  v191 = *(_QWORD *)(v193 - 8);
  v28 = MEMORY[0x1E0C80A78](v193);
  v208 = (uint64_t *)((char *)&v157 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v28);
  v203 = (uint64_t *)((char *)&v157 - v30);
  v197 = type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombos(0);
  v205 = *(_QWORD *)(v197 - 8);
  v31 = MEMORY[0x1E0C80A78](v197);
  v206 = (uint64_t)&v157 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v202 = (char *)&v157 - v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196B0);
  v35 = MEMORY[0x1E0C80A78](v34);
  v209 = (char *)&v157 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v35);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v184 = (uint64_t *)((char *)&v157 - v38);
  v177 = v17;
  v175 = v14;
  v159 = v4;
  v176 = v7;
  v39 = 0;
  v40 = *(_QWORD *)(a1 + 64);
  v162 = a1 + 64;
  v41 = 1 << *(_BYTE *)(a1 + 32);
  v42 = -1;
  if (v41 < 64)
    v42 = ~(-1 << v41);
  v43 = v42 & v40;
  v174 = (unint64_t)(v41 + 63) >> 6;
  v158 = v174 - 1;
  v44 = (uint64_t)v204;
  v45 = (uint64_t)v202;
  v180 = a1;
  v182 = v19;
  while (1)
  {
    if (v43)
    {
      v187 = (v43 - 1) & v43;
      v188 = v39;
      v48 = __clz(__rbit64(v43)) | (v39 << 6);
      v49 = v209;
LABEL_9:
      v50 = *(_QWORD *)(a1 + 56);
      v51 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v48);
      v52 = v51[1];
      *v49 = *v51;
      v49[1] = v52;
      v53 = v50 + *(_QWORD *)(v205 + 72) * v48;
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196B8);
      v55 = v53;
      v49 = v209;
      sub_1C2FF6C7C(v55, (uint64_t)&v209[*(int *)(v54 + 48)], type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombos);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v49, 0, 1, v54);
      swift_bridgeObjectRetain();
      v44 = (uint64_t)v204;
      goto LABEL_31;
    }
    v56 = v39 + 1;
    v49 = v209;
    if (__OFADD__(v39, 1))
      goto LABEL_166;
    if (v56 < v174)
    {
      v57 = *(_QWORD *)(v162 + 8 * v56);
      if (v57)
        goto LABEL_13;
      v58 = v39 + 2;
      ++v39;
      if (v56 + 1 < v174)
      {
        v57 = *(_QWORD *)(v162 + 8 * v58);
        if (v57)
          goto LABEL_16;
        v39 = v56 + 1;
        if (v56 + 2 < v174)
        {
          v57 = *(_QWORD *)(v162 + 8 * (v56 + 2));
          if (v57)
          {
            v56 += 2;
LABEL_13:
            v187 = (v57 - 1) & v57;
            v48 = __clz(__rbit64(v57)) + (v56 << 6);
            v188 = v56;
            goto LABEL_9;
          }
          v39 = v56 + 2;
          if (v56 + 3 < v174)
          {
            v57 = *(_QWORD *)(v162 + 8 * (v56 + 3));
            if (v57)
            {
              v56 += 3;
              goto LABEL_13;
            }
            v58 = v56 + 4;
            v39 = v56 + 3;
            if (v56 + 4 < v174)
            {
              v57 = *(_QWORD *)(v162 + 8 * v58);
              if (!v57)
              {
                while (1)
                {
                  v56 = v58 + 1;
                  if (__OFADD__(v58, 1))
                    goto LABEL_167;
                  if (v56 >= v174)
                  {
                    v39 = v158;
                    goto LABEL_30;
                  }
                  v57 = *(_QWORD *)(v162 + 8 * v56);
                  ++v58;
                  if (v57)
                    goto LABEL_13;
                }
              }
LABEL_16:
              v56 = v58;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_30:
    v188 = v39;
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196B8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v49, 1, 1, v59);
    v187 = 0;
LABEL_31:
    v60 = (uint64_t)v49;
    v61 = v184;
    sub_1C2FF6D40(v60, (uint64_t)v184, &qword_1EF8196B0);
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8196B8);
    v63 = (*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 1, v62) == 1;
    result = v63;
    if (v63)
      return result;
    v185 = v63;
    v64 = (uint64_t)v61 + *(int *)(v62 + 48);
    v65 = *v61;
    v66 = v61[1];
    sub_1C2FF6C38(v64, v45, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombos);
    v67 = sub_1C302B1E4(v65, v66);
    v69 = v68;
    swift_bridgeObjectRelease();
    if ((v69 & 1) == 0)
      goto LABEL_159;
    v70 = *(_QWORD *)(a2 + 56) + *(_QWORD *)(v205 + 72) * v67;
    v71 = v206;
    sub_1C2FF6C7C(v70, v206, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombos);
    v72 = *(_QWORD *)v71;
    v73 = *(_QWORD *)v45;
    v74 = *(_QWORD *)(*(_QWORD *)v71 + 16);
    v75 = v203;
    if (v74 != *(_QWORD *)(*(_QWORD *)v45 + 16))
    {
LABEL_158:
      sub_1C2FF6CC0(v206, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombos);
LABEL_159:
      sub_1C2FF6CC0(v45, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombos);
      return 0;
    }
    if (v74 && v72 != v73)
      break;
LABEL_6:
    v46 = v206;
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v47 = sub_1C3378BD8();
    sub_1C2FF6CC0(v46, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombos);
    sub_1C2FF6CC0(v45, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombos);
    a1 = v180;
    v39 = v188;
    v43 = v187;
    result = v185;
    if ((v47 & 1) == 0)
      return result;
  }
  v76 = 0;
  v77 = (*(unsigned __int8 *)(v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80);
  v78 = v72 + v77;
  v181 = v73 + v77;
  v79 = *(_QWORD *)(v191 + 72);
  v171 = v73;
  v172 = a2;
  v170 = v74;
  v169 = v78;
  v168 = v79;
  while (1)
  {
    v80 = v79 * v76;
    v81 = v76;
    result = sub_1C2FF6C7C(v78 + v79 * v76, (uint64_t)v75, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
    v82 = *(_QWORD *)(v73 + 16);
    v183 = v81;
    if (v81 >= v82)
    {
      __break(1u);
      goto LABEL_163;
    }
    v83 = v181 + v80;
    v84 = v208;
    sub_1C2FF6C7C(v83, (uint64_t)v208, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
    result = *v75;
    v85 = *v75 == *v84 && v75[1] == v84[1];
    if (!v85 && (result = sub_1C3379184(), (result & 1) == 0)
      || (v86 = v75[2], v87 = v208[2], v88 = *(_QWORD *)(v86 + 16), v88 != *(_QWORD *)(v87 + 16)))
    {
LABEL_157:
      sub_1C2FF6CC0((uint64_t)v208, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
      sub_1C2FF6CC0((uint64_t)v75, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
      v45 = (uint64_t)v202;
      goto LABEL_158;
    }
    if (v88 && v86 != v87)
      break;
LABEL_142:
    v153 = (uint64_t)v208;
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v154 = sub_1C3378BD8();
    v155 = v153;
    v45 = (uint64_t)v202;
    sub_1C2FF6CC0(v155, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
    v73 = v171;
    sub_1C2FF6CC0((uint64_t)v75, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombo);
    a2 = v172;
    if ((v154 & 1) == 0)
      goto LABEL_158;
    v76 = v183 + 1;
    v78 = v169;
    v79 = v168;
    if (v183 + 1 == v170)
      goto LABEL_6;
  }
  v89 = 0;
  v90 = (*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80);
  v179 = v86 + v90;
  v178 = v87 + v90;
  v166 = v87;
  v167 = v86;
  v165 = v88;
  while (v89 < *(_QWORD *)(v86 + 16))
  {
    v91 = *(_QWORD *)(v201 + 72) * v89;
    result = sub_1C2FF6C7C(v179 + v91, v44, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
    if (v89 >= *(_QWORD *)(v87 + 16))
      goto LABEL_164;
    v92 = v178 + v91;
    v93 = (_DWORD *)v207;
    sub_1C2FF6C7C(v92, v207, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
    if (*(_DWORD *)v44 != *v93
      || (v94 = *(_QWORD *)(v44 + 8),
          v95 = *(_QWORD *)(v207 + 8),
          v96 = *(_QWORD *)(v94 + 16),
          v96 != *(_QWORD *)(v95 + 16)))
    {
LABEL_156:
      sub_1C2FF6CC0(v207, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
      sub_1C2FF6CC0(v44, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
      goto LABEL_157;
    }
    if (v96 && v94 != v95)
    {
      v97 = 0;
      v98 = (*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
      v99 = v94 + v98;
      v173 = v95 + v98;
      v100 = *(_QWORD *)(v190 + 72);
      v164 = v95;
      v163 = v96;
      v161 = v99;
      v160 = v100;
      do
      {
        v101 = v100 * v97;
        result = sub_1C2FF6C7C(v99 + v100 * v97, (uint64_t)v24, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
        if (v97 >= *(_QWORD *)(v95 + 16))
          goto LABEL_165;
        sub_1C2FF6C7C(v173 + v101, (uint64_t)v22, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
        v102 = *(_QWORD *)v24 == *(_QWORD *)v22 && *((_QWORD *)v24 + 1) == *((_QWORD *)v22 + 1);
        if (!v102 && (sub_1C3379184() & 1) == 0
          || (*((_QWORD *)v24 + 2) != *((_QWORD *)v22 + 2) || *((_QWORD *)v24 + 3) != *((_QWORD *)v22 + 3))
          && (sub_1C3379184() & 1) == 0)
        {
          goto LABEL_155;
        }
        if (*((double *)v24 + 4) != *((double *)v22 + 4))
          goto LABEL_155;
        if (v24[40] != v22[40])
          goto LABEL_155;
        v103 = (_QWORD *)*((_QWORD *)v24 + 6);
        v104 = (_QWORD *)*((_QWORD *)v22 + 6);
        v105 = v103[2];
        if (v105 != v104[2])
          goto LABEL_155;
        if (v105 && v103 != v104)
        {
          if ((v103[4] != v104[4] || v103[5] != v104[5]) && (sub_1C3379184() & 1) == 0)
            goto LABEL_155;
          v106 = v105 - 1;
          if (v106)
          {
            v140 = v104 + 7;
            v141 = v103 + 7;
            do
            {
              v142 = *(v141 - 1) == *(v140 - 1) && *v141 == *v140;
              if (!v142 && (sub_1C3379184() & 1) == 0)
                goto LABEL_155;
              v140 += 2;
              v141 += 2;
            }
            while (--v106);
          }
        }
        v107 = (_QWORD *)*((_QWORD *)v24 + 7);
        v108 = (_QWORD *)*((_QWORD *)v22 + 7);
        v109 = v107[2];
        if (v109 != v108[2])
          goto LABEL_155;
        if (v109)
          v110 = v107 == v108;
        else
          v110 = 1;
        if (!v110)
        {
          v111 = v107[4] == v108[4] && v107[5] == v108[5];
          if (!v111 && (sub_1C3379184() & 1) == 0)
            goto LABEL_155;
          v112 = v109 - 1;
          if (v112)
          {
            v143 = v108 + 7;
            v144 = v107 + 7;
            do
            {
              v145 = *(v144 - 1) == *(v143 - 1) && *v144 == *v143;
              if (!v145 && (sub_1C3379184() & 1) == 0)
                goto LABEL_155;
              v143 += 2;
              v144 += 2;
            }
            while (--v112);
          }
        }
        v113 = *(int *)(v200 + 40);
        v114 = (uint64_t)&v22[v113];
        v115 = (uint64_t)v182;
        v116 = (uint64_t)&v182[*(int *)(v194 + 48)];
        sub_1C2FF6CFC((uint64_t)&v24[v113], (uint64_t)v182, &qword_1EF7DE880);
        sub_1C2FF6CFC(v114, v116, &qword_1EF7DE880);
        v117 = v196;
        v118 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v195 + 48);
        if (v118(v115, 1, v196) == 1)
        {
          v119 = v118(v116, 1, v117);
          v75 = v203;
          if (v119 != 1)
          {
            v156 = &qword_1EF8196A8;
            goto LABEL_154;
          }
        }
        else
        {
          v120 = (uint64_t)v177;
          sub_1C2FF6CFC(v115, (uint64_t)v177, &qword_1EF7DE880);
          if (v118(v116, 1, v117) == 1)
          {
            v75 = v203;
            v156 = &qword_1EF8196A8;
            goto LABEL_153;
          }
          v121 = (uint64_t)v175;
          sub_1C2FF6C38(v116, (uint64_t)v175, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
          v122 = (uint64_t)v176;
          v123 = &v176[*(int *)(v189 + 48)];
          sub_1C2FF6C7C(v120, (uint64_t)v176, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
          sub_1C2FF6C7C(v121, (uint64_t)v123, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v124 = v122;
            v125 = v199;
            sub_1C2FF6C7C(v124, (uint64_t)v199, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            v44 = (uint64_t)v204;
            if (EnumCaseMultiPayload != 1)
            {
              sub_1C2FF6CC0((uint64_t)v125, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
LABEL_151:
              v75 = v203;
              sub_1C2FF9138((uint64_t)v176, &qword_1EF8196A0);
              goto LABEL_152;
            }
            v127 = (uint64_t)v123;
            v128 = v198;
            sub_1C2FF6C38(v127, (uint64_t)v198, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
            v75 = v203;
            if ((*v125 != *v128 || v125[1] != v128[1]) && (sub_1C3379184() & 1) == 0)
              goto LABEL_146;
            if ((v199[2] != v198[2] || v199[3] != v198[3]) && (sub_1C3379184() & 1) == 0)
              goto LABEL_146;
            if ((v199[4] != v198[4] || v199[5] != v198[5]) && (sub_1C3379184() & 1) == 0)
              goto LABEL_146;
            v129 = (_QWORD *)v199[6];
            v130 = (_QWORD *)v198[6];
            v131 = v129[2];
            if (v131 != v130[2])
              goto LABEL_146;
            if (v131 && v129 != v130)
            {
              if ((v129[4] != v130[4] || v129[5] != v130[5]) && (sub_1C3379184() & 1) == 0)
                goto LABEL_146;
              v132 = v131 - 1;
              if (v132)
              {
                v148 = v130 + 7;
                v149 = v129 + 7;
                while (1)
                {
                  v150 = *(v149 - 1) == *(v148 - 1) && *v149 == *v148;
                  if (!v150 && (sub_1C3379184() & 1) == 0)
                    break;
                  v148 += 2;
                  v149 += 2;
                  if (!--v132)
                    goto LABEL_105;
                }
LABEL_146:
                sub_1C2FF6CC0((uint64_t)v198, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
                sub_1C2FF6CC0((uint64_t)v199, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
LABEL_147:
                sub_1C2FF6CC0((uint64_t)v176, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
LABEL_152:
                v120 = (uint64_t)v177;
                v115 = (uint64_t)v182;
                sub_1C2FF6CC0((uint64_t)v175, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
                v156 = &qword_1EF7DE880;
LABEL_153:
                sub_1C2FF6CC0(v120, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
                v44 = (uint64_t)v204;
LABEL_154:
                sub_1C2FF9138(v115, v156);
LABEL_155:
                sub_1C2FF6CC0((uint64_t)v22, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
                sub_1C2FF6CC0((uint64_t)v24, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
                goto LABEL_156;
              }
            }
LABEL_105:
            sub_1C3378914();
            sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
            if ((sub_1C3378BD8() & 1) == 0)
              goto LABEL_146;
            sub_1C2FF6CC0((uint64_t)v198, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
            sub_1C2FF6CC0((uint64_t)v199, type metadata accessor for Com_Apple_Siri_Product_Proto_SemanticValue);
          }
          else
          {
            v133 = v122;
            v134 = v186;
            sub_1C2FF6C7C(v133, (uint64_t)v186, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
            v136 = *v134;
            v135 = v134[1];
            v137 = swift_getEnumCaseMultiPayload();
            v44 = (uint64_t)v204;
            if (v137 == 1)
            {
              swift_bridgeObjectRelease();
              goto LABEL_151;
            }
            v138 = *(_QWORD *)v123;
            v139 = *((_QWORD *)v123 + 1);
            v75 = v203;
            if (v136 == v138 && v135 == v139)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              v146 = sub_1C3379184();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v146 & 1) == 0)
                goto LABEL_147;
            }
          }
          sub_1C2FF6CC0((uint64_t)v176, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
          sub_1C2FF6CC0((uint64_t)v175, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
          sub_1C2FF6CC0((uint64_t)v177, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue.OneOf_Value);
          v115 = (uint64_t)v182;
        }
        sub_1C2FF9138(v115, &qword_1EF7DE880);
        sub_1C3378914();
        sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
        v147 = sub_1C3378BD8();
        sub_1C2FF6CC0((uint64_t)v22, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
        sub_1C2FF6CC0((uint64_t)v24, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValue);
        v95 = v164;
        if ((v147 & 1) == 0)
          goto LABEL_156;
        ++v97;
        v99 = v161;
        v100 = v160;
      }
      while (v97 != v163);
    }
    v151 = v207;
    sub_1C3378914();
    sub_1C301F860(&qword_1EF819450, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v87 = v166;
    v152 = sub_1C3378BD8();
    sub_1C2FF6CC0(v151, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
    result = sub_1C2FF6CC0(v44, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalState);
    v86 = v167;
    if ((v152 & 1) == 0)
      goto LABEL_157;
    if (++v89 == v165)
      goto LABEL_142;
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
  return result;
}

uint64_t TerminalElement.MatchingSpan.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE __dst[776];
  _BYTE v25[528];
  _BYTE v26[528];
  _BYTE v27[536];

  v3 = *(_QWORD *)(v1 + 8);
  sub_1C2FF6D40(v1 + 16, (uint64_t)v27, &qword_1EF8194A8);
  v4 = *(_QWORD *)(v1 + 552);
  v18 = *(_QWORD *)(v1 + 568);
  v5 = *(_QWORD *)(v1 + 576);
  v6 = *(_QWORD *)(v1 + 584);
  v7 = *(_QWORD *)(v1 + 656);
  v19 = *(unsigned __int8 *)(v1 + 672);
  v8 = *(_QWORD *)(v1 + 696);
  v9 = *(_QWORD *)(v1 + 704);
  v20 = *(_QWORD *)(v1 + 688);
  v21 = *(_QWORD *)(v1 + 712);
  v22 = *(_QWORD *)(v1 + 720);
  v23 = *(_BYTE *)(v1 + 736);
  sub_1C3379220();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
  }
  sub_1C2FF6D40((uint64_t)v27, (uint64_t)v26, &qword_1EF8194A8);
  v10 = v5;
  if (sub_1C30118DC((uint64_t)v26) == 1)
  {
    sub_1C3379220();
  }
  else
  {
    sub_1C2FF6D40((uint64_t)v27, (uint64_t)__dst, &qword_1EF8194A8);
    sub_1C30118F0(__dst, v25);
    sub_1C3379220();
    TerminalElement.Value.hash(into:)();
  }
  if (v4)
  {
    sub_1C3379220();
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
    v11 = v19;
    if (v18)
      goto LABEL_8;
  }
  else
  {
    sub_1C3379220();
    v11 = v19;
    if (v18)
    {
LABEL_8:
      sub_1C3379220();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      v12 = v20;
      if (v10)
        goto LABEL_9;
LABEL_13:
      sub_1C3379220();
      if (v6)
        goto LABEL_10;
      goto LABEL_14;
    }
  }
  sub_1C3379220();
  v12 = v20;
  if (!v10)
    goto LABEL_13;
LABEL_9:
  sub_1C3379220();
  memcpy(__dst, (const void *)(v10 + 16), 0x301uLL);
  TerminalElement.MatchingSpan.hash(into:)(a1);
  if (v6)
  {
LABEL_10:
    sub_1C3379220();
    memcpy(__dst, (const void *)(v6 + 16), 0x301uLL);
    TerminalElement.MatchingSpan.hash(into:)(a1);
    goto LABEL_15;
  }
LABEL_14:
  sub_1C3379220();
LABEL_15:
  sub_1C3379214();
  sub_1C3379214();
  sub_1C3379214();
  sub_1C3379214();
  sub_1C3379214();
  sub_1C3379214();
  sub_1C3379220();
  sub_1C3379220();
  sub_1C3379220();
  sub_1C3379220();
  sub_1C3379220();
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
  }
  sub_1C3379214();
  if (v11 == 15)
  {
    sub_1C3379220();
    if (v12)
    {
LABEL_19:
      sub_1C3379220();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  else
  {
    sub_1C3379220();
    sub_1C3379214();
    if (v12)
      goto LABEL_19;
  }
  sub_1C3379220();
LABEL_22:
  sub_1C3379214();
  v13 = *(_QWORD *)(v8 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain();
    v14 = v8 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      v14 += 16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  sub_1C3379214();
  v15 = *(_QWORD *)(v9 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain();
    v16 = v9 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      v16 += 16;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C3010660(a1, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C301049C(a1, v22);
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    return sub_1C3379220();
  sub_1C3379220();
  return sub_1C3379238();
}

uint64_t TerminalElement.MatchingSpan.hashValue.getter()
{
  const void *v0;
  uint64_t v2;
  _BYTE __dst[769];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1C3379208();
  TerminalElement.MatchingSpan.hash(into:)((uint64_t)&v2);
  return sub_1C3379244();
}

uint64_t sub_1C300E35C()
{
  const void *v0;
  uint64_t v2;
  _BYTE __dst[769];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1C3379208();
  TerminalElement.MatchingSpan.hash(into:)((uint64_t)&v2);
  return sub_1C3379244();
}

uint64_t sub_1C300E3B0()
{
  const void *v0;
  uint64_t v2;
  _BYTE __dst[769];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1C3379208();
  TerminalElement.MatchingSpan.hash(into:)((uint64_t)&v2);
  return sub_1C3379244();
}

uint64_t AnyMatchingSpan.matchingSpan.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE __dst[776];

  v3 = (const void *)(v1 + 16);
  memcpy(__dst, v3, 0x301uLL);
  memcpy(a1, v3, 0x301uLL);
  return sub_1C3013CB4(__dst);
}

uint64_t AnyMatchingSpan.__allocating_init(_:)(const void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  memcpy((void *)(v2 + 16), a1, 0x301uLL);
  return v2;
}

uint64_t AnyMatchingSpan.init(_:)(void *__src)
{
  uint64_t v1;

  memcpy((void *)(v1 + 16), __src, 0x301uLL);
  return v1;
}

uint64_t AnyMatchingSpan.deinit()
{
  uint64_t v0;
  _BYTE __dst[776];

  memcpy(__dst, (const void *)(v0 + 16), 0x301uLL);
  sub_1C3013F44(__dst);
  return v0;
}

uint64_t AnyMatchingSpan.__deallocating_deinit()
{
  uint64_t v0;
  _BYTE __dst[776];

  memcpy(__dst, (const void *)(v0 + 16), 0x301uLL);
  sub_1C3013F44(__dst);
  return swift_deallocClassInstance();
}

BOOL static AnyMatchingSpan.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _BYTE v4[769];
  _BYTE __dst[776];

  memcpy(__dst, (const void *)(a1 + 16), 0x301uLL);
  memcpy(v4, (const void *)(a2 + 16), sizeof(v4));
  return static TerminalElement.MatchingSpan.== infix(_:_:)((uint64_t)__dst);
}

uint64_t AnyMatchingSpan.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  _BYTE __dst[769];

  memcpy(__dst, (const void *)(v1 + 16), sizeof(__dst));
  return TerminalElement.MatchingSpan.hash(into:)(a1);
}

uint64_t AnyMatchingSpan.hashValue.getter()
{
  uint64_t v0;
  _BYTE v2[769];
  _BYTE v3[72];

  sub_1C3379208();
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  TerminalElement.MatchingSpan.hash(into:)((uint64_t)v3);
  return sub_1C3379244();
}

uint64_t sub_1C300E640()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[769];
  _BYTE v4[72];

  v1 = *v0;
  sub_1C3379208();
  memcpy(v3, (const void *)(v1 + 16), sizeof(v3));
  TerminalElement.MatchingSpan.hash(into:)((uint64_t)v4);
  return sub_1C3379244();
}

uint64_t sub_1C300E69C(uint64_t a1)
{
  uint64_t v1;
  _BYTE __dst[769];

  memcpy(__dst, (const void *)(*(_QWORD *)v1 + 16), sizeof(__dst));
  return TerminalElement.MatchingSpan.hash(into:)(a1);
}

uint64_t sub_1C300E6E8()
{
  uint64_t v0;
  _BYTE v2[769];
  _BYTE v3[72];

  sub_1C3379208();
  memcpy(v2, (const void *)(*(_QWORD *)v0 + 16), sizeof(v2));
  TerminalElement.MatchingSpan.hash(into:)((uint64_t)v3);
  return sub_1C3379244();
}

BOOL sub_1C300E738(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _BYTE v4[769];
  _BYTE __dst[776];

  v2 = *a2;
  memcpy(__dst, (const void *)(*(_QWORD *)a1 + 16), 0x301uLL);
  memcpy(v4, (const void *)(v2 + 16), sizeof(v4));
  return static TerminalElement.MatchingSpan.== infix(_:_:)((uint64_t)__dst);
}

uint64_t sub_1C300E790(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1C300E7A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  const void *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[776];
  _BYTE __src[776];
  _BYTE __dst[776];
  _BYTE v17[776];
  _BYTE v18[776];
  _BYTE v19[776];

  v2 = MEMORY[0x1E0C80A78](a1);
  sub_1C2FF6D40(v1, (uint64_t)v17, &qword_1EF8194B8);
  sub_1C2FF6D40((uint64_t)v17, (uint64_t)v19, &qword_1EF8194B8);
  sub_1C2FF6D40(v1, (uint64_t)v18, &qword_1EF8194B8);
  if (sub_1C301FD48((uint64_t)v18) == 1)
    return sub_1C3379220();
  sub_1C2FF6D40((uint64_t)v19, (uint64_t)__src, &qword_1EF8194B8);
  sub_1C3379220();
  sub_1C3013A3C(__src, __dst);
  v4 = sub_1C3013A50((uint64_t)__dst);
  if (v4)
  {
    if (v4 == 1)
    {
      v5 = (const void *)sub_1C3013BF4((uint64_t)__dst);
      memcpy(v14, v5, 0x301uLL);
      return TerminalElement.MatchingSpan.hash(into:)(v2);
    }
    v6 = (uint64_t *)sub_1C3013BF4((uint64_t)__dst);
    v7 = v6[4];
    if (v7)
    {
      v9 = *v6;
      v8 = v6[1];
      v10 = v6[3];
      sub_1C3379220();
      if (v8 == 1)
      {
        sub_1C3379220();
        sub_1C3013A3C(__src, v14);
        v11 = (uint64_t *)sub_1C3013BF4((uint64_t)v14);
        sub_1C2FFDDC0(*v11, v11[1], v11[2], v11[3], v11[4]);
LABEL_18:
        sub_1C300ED00(v2, v7);
        return sub_1C3013584(v1, &sub_1C3012544);
      }
      sub_1C3379220();
      if (v8)
      {
        sub_1C3379220();
        sub_1C3013584(v1, &sub_1C2FFD940);
        sub_1C2FFDDEC(v9, v8);
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        if (v10)
        {
LABEL_14:
          sub_1C3379220();
          swift_bridgeObjectRetain();
          sub_1C3378C38();
          swift_bridgeObjectRelease();
          v12 = v9;
          v13 = v8;
LABEL_17:
          sub_1C30129EC(v12, v13);
          goto LABEL_18;
        }
      }
      else
      {
        sub_1C3379220();
        sub_1C3013584(v1, &sub_1C2FFD940);
        sub_1C2FFDDEC(v9, 0);
        if (v10)
          goto LABEL_14;
      }
      sub_1C3379220();
      v12 = v9;
      v13 = v8;
      goto LABEL_17;
    }
    goto LABEL_11;
  }
  if (!*(_QWORD *)(sub_1C3013BF4((uint64_t)__dst) + 8))
  {
LABEL_11:
    sub_1C3379220();
    return sub_1C3013584(v1, &sub_1C3012544);
  }
  sub_1C3379220();
  sub_1C3013A3C(__src, v14);
  sub_1C3013BF4((uint64_t)v14);
  swift_bridgeObjectRetain();
  sub_1C3378C38();
  return sub_1C3013584(v1, &sub_1C3012544);
}

uint64_t sub_1C300EA98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C3379214();
  if (v3)
  {
    v5 = a2 + 48;
    do
    {
      v6 = *(_QWORD *)(v5 + 40);
      sub_1C3379238();
      sub_1C3379238();
      sub_1C337922C();
      swift_retain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      if (v6 && (sub_1C3379220(), *(_QWORD *)(v6 + 24)))
      {
        sub_1C3379220();
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C3379220();
        swift_release();
      }
      v5 += 64;
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C300EC70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C3379214();
  if (v3)
  {
    v5 = a2 + 52;
    do
    {
      sub_1C337922C();
      sub_1C337922C();
      sub_1C337922C();
      sub_1C337922C();
      sub_1C337922C();
      result = sub_1C337922C();
      v5 += 24;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C300ED00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 16);
  result = sub_1C3379214();
  if (v4)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(a2 + 32 + 32 * v6 + 16);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      sub_1C3379214();
      v8 = *(_QWORD *)(v7 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain();
        v9 = v7 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1C3378C38();
          swift_bridgeObjectRelease();
          v9 += 16;
          --v8;
        }
        while (v8);
        swift_bridgeObjectRelease();
      }
      ++v6;
      swift_bridgeObjectRetain();
      sub_1C300EE40(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
    }
    while (v6 != v4);
  }
  return result;
}

uint64_t sub_1C300EE40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  int v14;
  const void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[784];
  _BYTE v35[776];
  _BYTE v36[776];
  _BYTE v37[353];
  _BYTE __dst[784];
  char __src[8];
  _BYTE v40[776];
  _BYTE v41[784];
  _QWORD v42[168];
  _BYTE v43[536];

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v4 = v1;
  v5 = *(_QWORD *)(v2 + 16);
  result = sub_1C3379214();
  if (v5)
  {
    v7 = 0;
    v33 = v3 + 32;
    v30 = v5;
    while (1)
    {
      memcpy(v42, (const void *)(v33 + 1344 * v7), sizeof(v42));
      sub_1C2FF6D40((uint64_t)v42, (uint64_t)v43, &qword_1EF8194A8);
      if (sub_1C30118DC((uint64_t)v43) != 1)
      {
        sub_1C2FF6D40((uint64_t)v42, (uint64_t)__src, &qword_1EF8194A8);
        sub_1C3379220();
        sub_1C30118F0(__src, v41);
        v11 = (char *)&loc_1C300F038 + *((int *)qword_1C300FA68 + sub_1C3012BD4((uint64_t)v41));
        __asm { BR              X9 }
      }
      sub_1C3379220();
      sub_1C3020A20(v42);
      v8 = v42[66];
      sub_1C3379214();
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        swift_bridgeObjectRetain();
        v10 = v8 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1C3378C38();
          swift_bridgeObjectRelease();
          v10 += 16;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
      }
      sub_1C2FF6D40((uint64_t)&v42[67], (uint64_t)v41, &qword_1EF8194B0);
      if (sub_1C3011904((uint64_t)v41) != 1)
        break;
      sub_1C3379220();
LABEL_20:
      if (v42[167])
      {
        sub_1C3379220();
        sub_1C3379220();
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C3379220();
      }
      ++v7;
      result = sub_1C3020E30(v42);
      if (v7 == v5)
        return result;
    }
    sub_1C2FF6D40((uint64_t)&v42[67], (uint64_t)__src, &qword_1EF8194B0);
    sub_1C3379220();
    v12 = __src[0];
    if (__src[0] != 9)
    {
      sub_1C3379220();
      __asm { BR              X8 }
    }
    sub_1C3379220();
    sub_1C3012A20(__src, &sub_1C2FFD940);
    sub_1C3012A20(__src, &sub_1C2FFD940);
    sub_1C2FF6D40((uint64_t)v40, (uint64_t)v37, &qword_1EF8194B8);
    v13 = sub_1C301FD48((uint64_t)v37);
    if (v13 == 1)
    {
      sub_1C3379220();
LABEL_18:
      sub_1C301192C(&v42[67], &sub_1C3012544);
      sub_1C301192C(&v42[67], &sub_1C3012544);
LABEL_19:
      sub_1C2FF6D40((uint64_t)&v42[67], (uint64_t)__dst, &qword_1EF8194B0);
      sub_1C3012A20(__dst, &sub_1C3012544);
      goto LABEL_20;
    }
    sub_1C2FF6D40((uint64_t)v40, (uint64_t)v35, &qword_1EF8194B8);
    sub_1C3379220();
    sub_1C3013A3C(v35, v36);
    v14 = sub_1C3013A50((uint64_t)v36);
    if (v14)
    {
      if (v14 == 1)
      {
        v15 = (const void *)sub_1C3013BF4((uint64_t)v36);
        memcpy(__dst, v15, 0x301uLL);
        TerminalElement.MatchingSpan.hash(into:)(v4);
        sub_1C301192C(&v42[67], &sub_1C3012544);
        sub_1C301192C(&v42[67], &sub_1C3012544);
        goto LABEL_20;
      }
      v16 = (uint64_t *)sub_1C3013BF4((uint64_t)v36);
      v32 = v16[4];
      if (v32)
      {
        v17 = *v16;
        v18 = v16[1];
        v19 = v16[3];
        sub_1C3379220();
        v31 = v7;
        if (v18 == 1)
        {
          sub_1C3379220();
          sub_1C2FF6D40((uint64_t)&v42[67], (uint64_t)__dst, &qword_1EF8194B0);
          sub_1C3012A20(__dst, &sub_1C2FFD940);
LABEL_37:
          sub_1C3379214();
          v22 = *(_QWORD *)(v32 + 16);
          if (v22)
          {
            swift_bridgeObjectRetain();
            v23 = 0;
            v24 = v32;
            do
            {
              if (v23 >= *(_QWORD *)(v24 + 16))
              {
                __break(1u);
                JUMPOUT(0x1C300FA68);
              }
              v25 = v32 + 32 + 32 * v23;
              v27 = *(_QWORD *)(v25 + 16);
              v26 = *(_QWORD *)(v25 + 24);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1C3378C38();
              swift_bridgeObjectRelease();
              sub_1C3379214();
              v28 = *(_QWORD *)(v27 + 16);
              if (v28)
              {
                swift_bridgeObjectRetain();
                v29 = v27 + 40;
                do
                {
                  swift_bridgeObjectRetain();
                  sub_1C3378C38();
                  swift_bridgeObjectRelease();
                  v29 += 16;
                  --v28;
                }
                while (v28);
                swift_bridgeObjectRelease();
                v24 = v32;
              }
              ++v23;
              swift_bridgeObjectRetain();
              sub_1C300EE40(v4, v26);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
            }
            while (v23 != v22);
            swift_bridgeObjectRelease();
            sub_1C301192C(&v42[67], &sub_1C3012544);
            sub_1C301192C(&v42[67], &sub_1C3012544);
            sub_1C301192C(&v42[67], &sub_1C3012544);
          }
          else
          {
            sub_1C301192C(&v42[67], &sub_1C3012544);
            sub_1C301192C(&v42[67], &sub_1C3012544);
            sub_1C2FF6D40((uint64_t)&v42[67], (uint64_t)__dst, &qword_1EF8194B0);
            sub_1C3012A20(__dst, &sub_1C3012544);
          }
          v5 = v30;
          v7 = v31;
          goto LABEL_20;
        }
        sub_1C3379220();
        if (v18)
        {
          sub_1C3379220();
          sub_1C301192C(&v42[67], &sub_1C2FFD940);
          sub_1C2FFDDEC(v17, v18);
          swift_bridgeObjectRetain();
          sub_1C3378C38();
          swift_bridgeObjectRelease();
          if (v19)
            goto LABEL_33;
LABEL_35:
          sub_1C3379220();
          v20 = v17;
          v21 = v18;
        }
        else
        {
          sub_1C3379220();
          sub_1C301192C(&v42[67], &sub_1C2FFD940);
          sub_1C2FFDDEC(v17, 0);
          if (!v19)
            goto LABEL_35;
LABEL_33:
          sub_1C3379220();
          swift_bridgeObjectRetain();
          sub_1C3378C38();
          swift_bridgeObjectRelease();
          v20 = v17;
          v21 = v18;
        }
        sub_1C30129EC(v20, v21);
        goto LABEL_37;
      }
    }
    else if (*(_QWORD *)(sub_1C3013BF4((uint64_t)v36) + 8))
    {
      sub_1C3379220();
      sub_1C2FF6D40((uint64_t)&v42[67], (uint64_t)v34, &qword_1EF8194B0);
      sub_1C3012A20(v34, &sub_1C2FFD940);
      sub_1C3378C38();
      goto LABEL_18;
    }
    sub_1C3379220();
    sub_1C301192C(&v42[67], &sub_1C3012544);
    sub_1C301192C(&v42[67], &sub_1C3012544);
    sub_1C2FF6D40((uint64_t)&v42[67], (uint64_t)v34, &qword_1EF8194B0);
    sub_1C3012A20(v34, &sub_1C3012544);
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1C300FAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C3379214();
  if (v3)
  {
    v5 = 0;
    v9 = a2 + 32;
    do
    {
      v6 = *(_QWORD *)(v9 + 16 * v5 + 8);
      sub_1C337922C();
      result = sub_1C3379214();
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
      {
        v8 = v6 + 52;
        do
        {
          sub_1C337922C();
          sub_1C337922C();
          sub_1C337922C();
          sub_1C337922C();
          sub_1C337922C();
          result = sub_1C337922C();
          v8 += 24;
          --v7;
        }
        while (v7);
      }
      ++v5;
    }
    while (v5 != v3);
  }
  return result;
}

uint64_t sub_1C300FB94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  int v6;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C3379214();
  if (v3)
  {
    v5 = (unsigned __int8 *)(a2 + 33);
    do
    {
      v6 = *v5;
      if (*(v5 - 1) != 2)
        sub_1C3379220();
      sub_1C3379220();
      if (v6 == 53)
      {
        result = sub_1C3379220();
      }
      else
      {
        sub_1C3379220();
        result = sub_1C3379214();
      }
      v5 += 2;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C300FC38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  int v6;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C3379214();
  if (v3)
  {
    v5 = (unsigned __int8 *)(a2 + 52);
    do
    {
      v6 = *v5;
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      sub_1C3379220();
      if (v6 != 1)
        sub_1C337922C();
      result = swift_bridgeObjectRelease();
      v5 += 24;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C300FCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  uint64_t v6;
  int v7;
  int v8;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C3379214();
  if (v3)
  {
    v5 = (unsigned __int8 *)(a2 + 76);
    do
    {
      v6 = *(_QWORD *)(v5 - 20);
      v7 = *(v5 - 8);
      v8 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      if (v6)
      {
        sub_1C3379220();
        swift_bridgeObjectRetain();
        sub_1C3378C38();
        swift_bridgeObjectRelease();
        if (v7)
          goto LABEL_7;
      }
      else
      {
        sub_1C3379220();
        if (v7)
        {
LABEL_7:
          sub_1C3379220();
          if (!v8)
            goto LABEL_11;
          goto LABEL_3;
        }
      }
      sub_1C3379220();
      sub_1C337922C();
      if (!v8)
      {
LABEL_11:
        sub_1C3379220();
        sub_1C337922C();
        goto LABEL_4;
      }
LABEL_3:
      sub_1C3379220();
LABEL_4:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 += 48;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C300FE38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;

  v23 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v22 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v10 = (v5 - 1) & v5;
      v11 = v9 | (v8 << 6);
      goto LABEL_20;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v12 >= v22)
      goto LABEL_34;
    v13 = *(_QWORD *)(v23 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v22)
        goto LABEL_34;
      v13 = *(_QWORD *)(v23 + 8 * v8);
      if (!v13)
        break;
    }
LABEL_19:
    v10 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_20:
    v15 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v11);
    sub_1C3379238();
    v16 = *(unsigned __int8 *)(v15 + 40);
    v24 = v10;
    if (v16 != 255)
    {
      v17 = *(_QWORD *)(v15 + 24);
      v18 = *(_QWORD *)(v15 + 32);
      sub_1C3379220();
      if ((v16 & 1) != 0)
      {
        sub_1C3379214();
        if (!v18)
        {
          sub_1C3379220();
          swift_retain();
          sub_1C301F70C(v17, 0, v16);
          v19 = v17;
          v20 = 0;
          goto LABEL_29;
        }
        sub_1C3379220();
        swift_retain();
        sub_1C301F6E4(v17, v18, v16);
        sub_1C3378C38();
      }
      else
      {
        sub_1C3379214();
        sub_1C3379220();
        if ((v18 & 1) == 0)
          sub_1C3379238();
        swift_retain();
      }
      v19 = v17;
      v20 = v18;
LABEL_29:
      sub_1C301F70C(v19, v20, v16);
      goto LABEL_30;
    }
    sub_1C3379220();
    swift_retain();
LABEL_30:
    sub_1C3379238();
    v21 = *(_QWORD *)(v15 + 96);
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
    if (v21 && (sub_1C3379220(), *(_QWORD *)(v21 + 24)))
    {
      sub_1C3379220();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C3378C38();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C3379220();
      swift_release();
    }
    v5 = v24;
    result = sub_1C3379244();
    v7 ^= result;
  }
  v14 = v12 + 2;
  if (v14 >= v22)
  {
LABEL_34:
    swift_release();
    return sub_1C3379214();
  }
  v13 = *(_QWORD *)(v23 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v22)
      goto LABEL_34;
    v13 = *(_QWORD *)(v23 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C3010208(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  int64_t v21;
  _OWORD v23[4];
  uint64_t v24;

  v20 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v21 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
    }
    else
    {
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_31;
      if (v11 >= v21)
      {
LABEL_29:
        swift_release();
        return sub_1C3379214();
      }
      v12 = *(_QWORD *)(v20 + 8 * v11);
      ++v8;
      if (!v12)
      {
        v8 = v11 + 1;
        if (v11 + 1 >= v21)
          goto LABEL_29;
        v12 = *(_QWORD *)(v20 + 8 * v8);
        if (!v12)
        {
          v13 = v11 + 2;
          if (v13 >= v21)
            goto LABEL_29;
          v12 = *(_QWORD *)(v20 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              v8 = v13 + 1;
              if (__OFADD__(v13, 1))
                goto LABEL_32;
              if (v8 >= v21)
                goto LABEL_29;
              v12 = *(_QWORD *)(v20 + 8 * v8);
              ++v13;
              if (v12)
                goto LABEL_18;
            }
          }
          v8 = v13;
        }
      }
LABEL_18:
      v5 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v8 << 6);
    }
    v14 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v10);
    v15 = *(_QWORD *)(a1 + 64);
    v16 = *(_OWORD *)(a1 + 16);
    v23[0] = *(_OWORD *)a1;
    v23[1] = v16;
    v17 = *(_OWORD *)(a1 + 48);
    v23[2] = *(_OWORD *)(a1 + 32);
    v23[3] = v17;
    v24 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1C3378FEC();
      swift_bridgeObjectRelease();
      sub_1C3379214();
      swift_bridgeObjectRetain();
      v18 = sub_1C3378FEC();
      result = swift_bridgeObjectRelease();
      if (!v18)
        goto LABEL_4;
    }
    else
    {
      result = sub_1C3379214();
      v18 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v18)
        goto LABEL_4;
    }
    if (v18 < 1)
      break;
    for (i = 0; i != v18; ++i)
    {
      if ((v14 & 0xC000000000000001) != 0)
        MEMORY[0x1C3BD10B4](i, v14);
      else
        swift_retain();
      Node.hash(into:)((uint64_t)v23);
      swift_release();
    }
LABEL_4:
    swift_bridgeObjectRelease();
    result = sub_1C3379244();
    v7 ^= result;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C301049C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_19;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
        break;
    }
LABEL_18:
    v4 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
    result = sub_1C3379244();
    v7 ^= result;
  }
  v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_1C3379214();
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1C3010660(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  v2 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v6)
      goto LABEL_19;
    v11 = *(_QWORD *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      v9 = v10 + 1;
      if (v10 + 1 >= v6)
        goto LABEL_19;
      v11 = *(_QWORD *)(v2 + 8 * v9);
      if (!v11)
        break;
    }
LABEL_18:
    v5 = (v11 - 1) & v11;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_1C3378C38();
    swift_bridgeObjectRelease();
    sub_1C3379238();
    result = sub_1C3379244();
    v8 ^= result;
  }
  v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_1C3379214();
  }
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
  {
    v9 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v9 >= v6)
      goto LABEL_19;
    v11 = *(_QWORD *)(v2 + 8 * v9);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

BOOL _s12SiriOntology15TerminalElementV11ScalarValueC2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  _BYTE v16[528];
  _BYTE __dst[528];
  _BYTE v18[528];
  _BYTE __src[528];
  _BYTE v20[528];
  uint64_t v21;
  _BYTE v22[528];
  uint64_t v23;
  _BYTE v24[528];
  _BYTE v25[528];
  _BYTE v26[528];

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v4 = (_QWORD *)v1;
  sub_1C2FF6D40(v1 + 16, (uint64_t)v24, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)(v3 + 2), (uint64_t)v25, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v24, (uint64_t)v22, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v25, (uint64_t)&v23, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v24, (uint64_t)v26, &qword_1EF8194A8);
  if (sub_1C30118DC((uint64_t)v26) == 1)
  {
    sub_1C2FF6D40((uint64_t)v25, (uint64_t)v20, &qword_1EF8194A8);
    if (sub_1C30118DC((uint64_t)v20) == 1)
      goto LABEL_8;
LABEL_6:
    sub_1C2FF6D40((uint64_t)v24, (uint64_t)v20, &qword_1EF8194A8);
    sub_1C2FF6D40((uint64_t)v25, (uint64_t)&v21, &qword_1EF8194A8);
    sub_1C2FFE080(v25, sub_1C2FFD5C0);
    sub_1C3013720(v20);
    return 0;
  }
  sub_1C2FF6D40((uint64_t)v24, (uint64_t)__src, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v25, (uint64_t)v20, &qword_1EF8194A8);
  if (sub_1C30118DC((uint64_t)v20) == 1)
  {
    sub_1C30118F0(__src, __dst);
    sub_1C2FF6D40((uint64_t)v24, (uint64_t)v18, &qword_1EF8194A8);
    sub_1C3012BF0(v18, sub_1C2FFD5C0);
    sub_1C3012BF0(v18, sub_1C2FFD5C0);
    sub_1C3012BF0(__dst, sub_1C2FFE4B0);
    goto LABEL_6;
  }
  sub_1C2FF6D40((uint64_t)v25, (uint64_t)v16, &qword_1EF8194A8);
  sub_1C30118F0(v16, &v15);
  sub_1C2FF6D40((uint64_t)v24, (uint64_t)__dst, &qword_1EF8194A8);
  sub_1C3012BF0(__dst, sub_1C2FFD5C0);
  sub_1C3012BF0(__dst, sub_1C2FFD5C0);
  v5 = _s12SiriOntology15TerminalElementV5ValueO2eeoiySbAE_AEtFZ_0(__src, &v15);
  sub_1C30118F0(__src, v18);
  sub_1C3012BF0(v18, sub_1C2FFE4B0);
  sub_1C2FFE080(v24, sub_1C2FFE4B0);
  if ((v5 & 1) == 0)
    return 0;
LABEL_8:
  v6 = v4[68];
  v7 = v4[69];
  v8 = v4[70];
  v9 = v4[71];
  v10 = v3[68];
  v11 = v3[69];
  v12 = v3[70];
  v13 = v3[71];
  if (v9)
  {
    if (v13)
    {
      if (v7)
      {
        if (!v11 || (v6 != v10 || v7 != v11) && (sub_1C3379184() & 1) == 0)
          return 0;
      }
      else if (v11)
      {
        return 0;
      }
      return v8 == v12 && v9 == v13 || (sub_1C3379184() & 1) != 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_19:
    sub_1C2FFDEF0(v10, v11, v12, v13);
    sub_1C2FFE7BC(v6, v7, v8, v9);
    sub_1C2FFE7BC(v10, v11, v12, v13);
    return 0;
  }
  if (v13)
    goto LABEL_19;
  return 1;
}

void _s12SiriOntology15TerminalElementV5ValueO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  char *v4;
  _BYTE __dst[528];
  _BYTE __src[528];
  _BYTE v7[528];
  uint64_t v8;
  _BYTE v9[528];

  v1 = (void *)MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  sub_1C30118F0(v1, __dst);
  sub_1C30118F0(v3, __src);
  sub_1C30118F0(__dst, v7);
  sub_1C30118F0(__src, &v8);
  sub_1C30118F0(__dst, v9);
  v4 = (char *)sub_1C3010C1C + 4 * byte_1C3388FD4[sub_1C3012BD4((uint64_t)v9)];
  __asm { BR              X10 }
}

BOOL sub_1C3010C1C()
{
  double v0;
  double v1;
  _BYTE v4[1056];
  _BYTE v5[528];
  _BYTE v6[1056];
  uint64_t v7;

  v0 = *(double *)sub_1C3012BE0((uint64_t)&v7);
  sub_1C30118F0(v5, v4);
  if (sub_1C3012BD4((uint64_t)v4))
  {
    sub_1C3012BF0(v5, sub_1C2FFD5C0);
    sub_1C302021C((uint64_t)v6);
    return 0;
  }
  else
  {
    v1 = *(double *)sub_1C3012BE0((uint64_t)v4);
    sub_1C302021C((uint64_t)v6);
    return v0 == v1;
  }
}

BOOL _s12SiriOntology15TerminalElementV6OriginV2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  int v4;
  int v5;
  char v6;
  BOOL v7;
  uint64_t v9;
  _BYTE v10[776];
  _BYTE __dst[776];
  _BYTE v12[776];
  _BYTE __src[776];
  _BYTE v14[776];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[776];
  _BYTE v19[776];
  _BYTE v20[776];

  v1 = (unsigned __int8 *)MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v4 = *v1;
  sub_1C2FF6D40((uint64_t)(v1 + 8), (uint64_t)v19, &qword_1EF8194B8);
  v5 = *v3;
  sub_1C2FF6D40((uint64_t)(v3 + 8), (uint64_t)v20, &qword_1EF8194B8);
  if (v4 == 9)
  {
    if (v5 != 9)
      return 0;
  }
  else
  {
    if (v5 == 9)
      return 0;
    sub_1C3036E58(v4);
    if ((v6 & 1) == 0)
      return 0;
  }
  sub_1C2FF6D40((uint64_t)v19, (uint64_t)&v16, &qword_1EF8194B8);
  sub_1C2FF6D40((uint64_t)v20, (uint64_t)&v17, &qword_1EF8194B8);
  sub_1C2FF6D40((uint64_t)v19, (uint64_t)v18, &qword_1EF8194B8);
  if (sub_1C301FD48((uint64_t)v18) == 1)
  {
    sub_1C2FF6D40((uint64_t)v20, (uint64_t)v14, &qword_1EF8194B8);
    if (sub_1C301FD48((uint64_t)v14) == 1)
      return 1;
    goto LABEL_11;
  }
  sub_1C2FF6D40((uint64_t)v19, (uint64_t)__src, &qword_1EF8194B8);
  sub_1C2FF6D40((uint64_t)v20, (uint64_t)v14, &qword_1EF8194B8);
  if (sub_1C301FD48((uint64_t)v14) == 1)
  {
    sub_1C3013A3C(__src, __dst);
    sub_1C2FF6D40((uint64_t)v19, (uint64_t)v12, &qword_1EF8194B8);
    sub_1C3013A5C(v12, &sub_1C2FFD940);
    sub_1C3013A5C(v12, &sub_1C2FFD940);
    sub_1C3013A5C(__dst, &sub_1C3012544);
LABEL_11:
    sub_1C2FF6D40((uint64_t)v19, (uint64_t)v14, &qword_1EF8194B8);
    sub_1C2FF6D40((uint64_t)v20, (uint64_t)&v15, &qword_1EF8194B8);
    sub_1C3013584(v20, &sub_1C2FFD940);
    sub_1C301FD60(v14);
    return 0;
  }
  sub_1C2FF6D40((uint64_t)v20, (uint64_t)v10, &qword_1EF8194B8);
  sub_1C3013A3C(v10, &v9);
  sub_1C2FF6D40((uint64_t)v19, (uint64_t)__dst, &qword_1EF8194B8);
  sub_1C3013A5C(__dst, &sub_1C2FFD940);
  sub_1C3013A5C(__dst, &sub_1C2FFD940);
  v7 = _s12SiriOntology15TerminalElementV12OriginDetailO2eeoiySbAE_AEtFZ_0((uint64_t)__src);
  sub_1C3013A3C(__src, v12);
  sub_1C3013A5C(v12, &sub_1C3012544);
  sub_1C3013584(v19, &sub_1C3012544);
  return v7;
}

BOOL _s12SiriOntology15TerminalElementV2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  BOOL v15;
  _BYTE v17[777];
  _BYTE v18[784];
  _BYTE __dst[784];
  _BYTE v20[784];
  _BYTE __src[784];
  _BYTE v22[528];
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[528];
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[784];
  _BYTE v29[528];
  _BYTE v30[784];
  _BYTE v31[528];
  _BYTE v32[784];
  _BYTE v33[536];

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v4 = v1;
  sub_1C2FF6D40(v1, (uint64_t)v29, &qword_1EF8194A8);
  v5 = *(_QWORD **)(v4 + 528);
  sub_1C2FF6D40(v4 + 536, (uint64_t)v30, &qword_1EF8194B0);
  v6 = *(unsigned __int8 *)(v4 + 1320);
  v7 = *(_QWORD *)(v4 + 1328);
  v8 = *(_QWORD *)(v4 + 1336);
  sub_1C2FF6D40((uint64_t)v3, (uint64_t)v31, &qword_1EF8194A8);
  v9 = (_QWORD *)v3[66];
  sub_1C2FF6D40((uint64_t)(v3 + 67), (uint64_t)v32, &qword_1EF8194B0);
  v10 = v3[165];
  v11 = v3[166];
  v12 = v3[167];
  sub_1C2FF6D40((uint64_t)v29, (uint64_t)v25, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v31, (uint64_t)&v26, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v29, (uint64_t)v33, &qword_1EF8194A8);
  if (sub_1C30118DC((uint64_t)v33) == 1)
  {
    sub_1C2FF6D40((uint64_t)v31, (uint64_t)v22, &qword_1EF8194A8);
    if (sub_1C30118DC((uint64_t)v22) == 1)
      goto LABEL_8;
LABEL_6:
    sub_1C2FF6D40((uint64_t)v29, (uint64_t)v22, &qword_1EF8194A8);
    sub_1C2FF6D40((uint64_t)v31, (uint64_t)&v23, &qword_1EF8194A8);
    sub_1C2FFE080(v31, sub_1C2FFD5C0);
    sub_1C3013720(v22);
    return 0;
  }
  sub_1C2FF6D40((uint64_t)v29, (uint64_t)v28, &qword_1EF8194A8);
  sub_1C2FF6D40((uint64_t)v31, (uint64_t)v22, &qword_1EF8194A8);
  if (sub_1C30118DC((uint64_t)v22) == 1)
  {
    sub_1C30118F0(v28, v20);
    sub_1C2FF6D40((uint64_t)v29, (uint64_t)__src, &qword_1EF8194A8);
    sub_1C3012BF0(__src, sub_1C2FFD5C0);
    sub_1C3012BF0(__src, sub_1C2FFD5C0);
    sub_1C3012BF0(v20, sub_1C2FFE4B0);
    goto LABEL_6;
  }
  sub_1C2FF6D40((uint64_t)v31, (uint64_t)__dst, &qword_1EF8194A8);
  sub_1C30118F0(__dst, v18);
  sub_1C2FF6D40((uint64_t)v29, (uint64_t)v20, &qword_1EF8194A8);
  sub_1C2FFE080(v29, sub_1C2FFD5C0);
  sub_1C3012BF0(v20, sub_1C2FFD5C0);
  _s12SiriOntology15TerminalElementV5ValueO2eeoiySbAE_AEtFZ_0((uint64_t)v28);
  v14 = v13;
  sub_1C30118F0(v28, __src);
  sub_1C3012BF0(__src, sub_1C2FFE4B0);
  sub_1C2FFE080(v29, sub_1C2FFE4B0);
  if ((v14 & 1) == 0)
    return 0;
LABEL_8:
  if ((sub_1C30020E8(v5, v9) & 1) == 0)
    return 0;
  sub_1C2FF6D40((uint64_t)v30, (uint64_t)v25, &qword_1EF8194B0);
  sub_1C2FF6D40((uint64_t)v32, (uint64_t)&v27, &qword_1EF8194B0);
  sub_1C2FF6D40((uint64_t)v30, (uint64_t)v28, &qword_1EF8194B0);
  if (sub_1C3011904((uint64_t)v28) != 1)
  {
    sub_1C2FF6D40((uint64_t)v30, (uint64_t)__src, &qword_1EF8194B0);
    sub_1C2FF6D40((uint64_t)v32, (uint64_t)v22, &qword_1EF8194B0);
    if (sub_1C3011904((uint64_t)v22) != 1)
    {
      sub_1C2FF6D40((uint64_t)v32, (uint64_t)v18, &qword_1EF8194B0);
      memcpy(v17, v18, sizeof(v17));
      sub_1C2FF6D40((uint64_t)v30, (uint64_t)__dst, &qword_1EF8194B0);
      sub_1C301192C(v30, &sub_1C2FFD940);
      sub_1C3012A20(__dst, &sub_1C2FFD940);
      v15 = _s12SiriOntology15TerminalElementV6OriginV2eeoiySbAE_AEtFZ_0((uint64_t)__src);
      memcpy(v20, __src, 0x309uLL);
      sub_1C3012A20(v20, &sub_1C3012544);
      sub_1C301192C(v30, &sub_1C3012544);
      if (!v15)
        return 0;
      goto LABEL_16;
    }
    memcpy(__dst, __src, 0x309uLL);
    sub_1C2FF6D40((uint64_t)v30, (uint64_t)v20, &qword_1EF8194B0);
    sub_1C3012A20(v20, &sub_1C2FFD940);
    sub_1C3012A20(v20, &sub_1C2FFD940);
    sub_1C3012A20(__dst, &sub_1C3012544);
LABEL_14:
    sub_1C2FF6D40((uint64_t)v30, (uint64_t)v22, &qword_1EF8194B0);
    sub_1C2FF6D40((uint64_t)v32, (uint64_t)&v24, &qword_1EF8194B0);
    sub_1C301192C(v32, &sub_1C2FFD940);
    sub_1C302052C(v22);
    return 0;
  }
  sub_1C2FF6D40((uint64_t)v32, (uint64_t)v22, &qword_1EF8194B0);
  if (sub_1C3011904((uint64_t)v22) != 1)
    goto LABEL_14;
LABEL_16:
  if (v8)
  {
    if (v12)
      return ((((v10 & 1) == 0) ^ v6) & 1) != 0 && (v7 == v11 && v8 == v12 || (sub_1C3379184() & 1) != 0);
    swift_bridgeObjectRetain();
  }
  else if (!v12)
  {
    return 1;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C30118DC(uint64_t a1)
{
  unsigned int v1;

  v1 = *(_DWORD *)(a1 + 145);
  if (v1 > 0x80000000)
    return -v1;
  else
    return 0;
}

void *sub_1C30118F0(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x20AuLL);
}

uint64_t sub_1C3011904(uint64_t a1)
{
  unsigned int v1;
  int v2;

  v1 = *(_DWORD *)(a1 + 546);
  v2 = -2 - v1;
  if ((int)(-2 - v1) < 0)
    v2 = -1;
  if (v1 > 0x80000000)
    return (v2 + 1);
  else
    return 0;
}

#error "1C3011AA8: call analysis failed (funcsize=105)"

#error "1C3011FAC: call analysis failed (funcsize=319)"

#error "1C3012540: call analysis failed (funcsize=348)"

#error "1C3012930: call analysis failed (funcsize=286)"

uint64_t sub_1C30129C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_1C30129EC(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C30129EC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

#error "1C3012BAC: call analysis failed (funcsize=109)"

uint64_t sub_1C3012BD4(uint64_t a1)
{
  return *(_WORD *)(a1 + 520) >> 4;
}

uint64_t sub_1C3012BE0(uint64_t result)
{
  *(_WORD *)(result + 520) &= 0xFF0Fu;
  return result;
}

#error "1C3012CA4: call analysis failed (funcsize=53)"

uint64_t sub_1C3012CC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = *(_QWORD *)(a1 + 160);
  v15 = *(_QWORD *)(a1 + 152);
  v12 = *(_QWORD *)(a1 + 176);
  v13 = *(_QWORD *)(a1 + 168);
  v10 = *(_QWORD *)(a1 + 192);
  v11 = *(_QWORD *)(a1 + 184);
  v8 = *(_QWORD *)(a1 + 208);
  v9 = *(_QWORD *)(a1 + 200);
  v5 = *(_OWORD *)(a1 + 216);
  v7 = *(_QWORD *)(a1 + 352);
  v6 = *(_QWORD *)(a1 + 360);
  v2 = *(_QWORD *)(a1 + 424);
  v4 = *(_QWORD *)(a1 + 432);
  sub_1C2FFD84C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  sub_1C2FFD84C(v15, v14, v13, v12, v11, v10, v9, v8, v5, *((uint64_t *)&v5 + 1));
  sub_1C2FFD8A0(v7, v6);
  sub_1C2FFD8A0(v2, v4);
  return a1;
}

uint64_t _s12SiriOntology15TerminalElementV13DerivedOriginV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v8 = *a2;
  v7 = a2[1];
  v10 = a2[2];
  v9 = a2[3];
  v11 = a2[4];
  if (v3 == 1)
  {
    if (v7 == 1)
      return sub_1C3002254(v6, v11);
    goto LABEL_6;
  }
  if (v7 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_6:
    sub_1C2FFDDEC(v8, v7);
    sub_1C30129EC(v2, v3);
    sub_1C30129EC(v8, v7);
    return 0;
  }
  if (v3)
  {
    if (!v7 || (v2 != v8 || v3 != v7) && (sub_1C3379184() & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if (v5)
  {
    if (v9 && (v4 == v10 && v5 == v9 || (sub_1C3379184() & 1) != 0))
      return sub_1C3002254(v6, v11);
  }
  else if (!v9)
  {
    return sub_1C3002254(v6, v11);
  }
  return 0;
}

BOOL _s12SiriOntology15TerminalElementV12OriginDetailO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  int v4;
  const void *v5;
  const void *v6;
  BOOL v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t *v27;
  char v28;
  uint64_t v29;
  uint64_t v30[97];
  uint64_t __dst[97];
  _BYTE v32[776];
  _BYTE __src[776];
  _BYTE v34[776];
  _BYTE v35[776];
  uint64_t v36;
  _BYTE v37[784];

  v1 = (void *)MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  sub_1C3013A3C(v1, __src);
  sub_1C3013A3C(v3, v34);
  sub_1C3013A3C(__src, v35);
  sub_1C3013A3C(v34, &v36);
  sub_1C3013A3C(__src, v37);
  v4 = sub_1C3013A50((uint64_t)v37);
  if (!v4)
  {
    v8 = (uint64_t *)sub_1C3013BF4((uint64_t)v37);
    v10 = *v8;
    v9 = v8[1];
    sub_1C3013A3C(v34, v32);
    if (sub_1C3013A50((uint64_t)v32))
      goto LABEL_16;
    v11 = (_QWORD *)sub_1C3013BF4((uint64_t)v32);
    v12 = v11[1];
    if (v9)
    {
      if (!v12)
        goto LABEL_16;
      if (v10 == *v11 && v9 == v12)
      {
        sub_1C3013A5C(v34, &sub_1C2FFD940);
        sub_1C3013A5C(__src, &sub_1C2FFD940);
        sub_1C301F8A0(v35);
      }
      else
      {
        v28 = sub_1C3379184();
        sub_1C3013A5C(v34, &sub_1C2FFD940);
        sub_1C3013A5C(__src, &sub_1C2FFD940);
        sub_1C301F8A0(v35);
        if ((v28 & 1) == 0)
          return 0;
      }
    }
    else
    {
      sub_1C3013A3C(v34, __dst);
      sub_1C3013BF4((uint64_t)__dst);
      swift_bridgeObjectRetain();
      sub_1C3013A5C(v34, &sub_1C2FFD940);
      sub_1C3013A5C(__src, &sub_1C2FFD940);
      sub_1C301F8A0(v35);
      if (v12)
      {
        sub_1C3013A5C(__src, &sub_1C3012544);
        sub_1C3013A5C(v34, &sub_1C3012544);
        return 0;
      }
    }
    return 1;
  }
  if (v4 != 1)
  {
    v13 = (uint64_t *)sub_1C3013BF4((uint64_t)v37);
    v14 = *v13;
    v15 = v13[1];
    v16 = v13[2];
    v17 = v13[3];
    v18 = v13[4];
    sub_1C3013A3C(v34, v32);
    if (sub_1C3013A50((uint64_t)v32) != 2)
      goto LABEL_16;
    v19 = (uint64_t *)sub_1C3013BF4((uint64_t)v32);
    v21 = *v19;
    v20 = v19[1];
    v23 = v19[2];
    v22 = v19[3];
    v24 = v19[4];
    if (v18)
    {
      __dst[0] = v14;
      __dst[1] = v15;
      __dst[2] = v16;
      __dst[3] = v17;
      __dst[4] = v18;
      if (v24)
      {
        v30[0] = v21;
        v30[1] = v20;
        v30[2] = v23;
        v30[3] = v22;
        v30[4] = v24;
        sub_1C3013A5C(__src, &sub_1C2FFD940);
        sub_1C3013A5C(v34, &sub_1C2FFD940);
        sub_1C3013A5C(__src, &sub_1C2FFD940);
        sub_1C3013A5C(v34, &sub_1C2FFD940);
        sub_1C3013A5C(__src, &sub_1C2FFD940);
        v25 = _s12SiriOntology15TerminalElementV13DerivedOriginV2eeoiySbAE_AEtFZ_0(__dst, v30);
        sub_1C301F8A0(v35);
        sub_1C3013A5C(v34, &sub_1C3012544);
        sub_1C30129EC(__dst[0], __dst[1]);
        swift_bridgeObjectRelease();
        sub_1C3013A5C(__src, &sub_1C3012544);
        return (v25 & 1) != 0;
      }
      v29 = v22;
      sub_1C3013A5C(__src, &sub_1C2FFD940);
      sub_1C3013A5C(v34, &sub_1C2FFD940);
      sub_1C3013A5C(__src, &sub_1C2FFD940);
      sub_1C3013A5C(v34, &sub_1C2FFD940);
      sub_1C3013A5C(__src, &sub_1C2FFD940);
      sub_1C301F8A0(v35);
      sub_1C30129EC(v14, v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = v19[3];
      sub_1C3013A3C(v34, __dst);
      v27 = (uint64_t *)sub_1C3013BF4((uint64_t)__dst);
      sub_1C2FFDDC0(*v27, v27[1], v27[2], v27[3], v27[4]);
      sub_1C3013A5C(v34, &sub_1C2FFD940);
      sub_1C3013A5C(__src, &sub_1C2FFD940);
      sub_1C301F8A0(v35);
      if (!v24)
        return 1;
    }
    sub_1C30129C0(v14, v15, v16, v17, v18);
    sub_1C30129C0(v21, v20, v23, v29, v24);
    return 0;
  }
  v5 = (const void *)sub_1C3013BF4((uint64_t)v37);
  sub_1C3013A3C(v34, v32);
  if (sub_1C3013A50((uint64_t)v32) != 1)
  {
LABEL_16:
    sub_1C3013A5C(v34, &sub_1C2FFD940);
    sub_1C3013A5C(__src, &sub_1C2FFD940);
    sub_1C301F8A0(v35);
    return 0;
  }
  v6 = (const void *)sub_1C3013BF4((uint64_t)v32);
  memcpy(__dst, v5, 0x301uLL);
  memcpy(v30, v6, 0x301uLL);
  sub_1C3013A5C(v34, &sub_1C2FFD940);
  sub_1C3013A5C(__src, &sub_1C2FFD940);
  sub_1C3013A5C(v34, &sub_1C2FFD940);
  sub_1C3013A5C(__src, &sub_1C2FFD940);
  v7 = static TerminalElement.MatchingSpan.== infix(_:_:)((uint64_t)__dst);
  sub_1C301F8A0(v35);
  sub_1C3013A5C(v34, &sub_1C3012544);
  sub_1C3013A5C(__src, &sub_1C3012544);
  return v7;
}

uint64_t _s12SiriOntology15TerminalElementV13SemanticValueV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (!v6)
    {
LABEL_11:
      if (v4 == v7 && v5 == v8)
        return 1;
      else
        return sub_1C3379184();
    }
    return 0;
  }
  if (!v6)
    return 0;
  if (*a1 == *a2 && v3 == v6)
    goto LABEL_11;
  v10 = sub_1C3379184();
  result = 0;
  if ((v10 & 1) != 0)
    goto LABEL_11;
  return result;
}

#error "1C30136F8: call analysis failed (funcsize=103)"

#error "1C30138FC: call analysis failed (funcsize=198)"

void *sub_1C3013A3C(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x301uLL);
}

uint64_t sub_1C3013A50(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 768) >> 6;
}

#error "1C3013BCC: call analysis failed (funcsize=102)"

uint64_t sub_1C3013BF4(uint64_t result)
{
  *(_BYTE *)(result + 768) &= 0x3Fu;
  return result;
}

uint64_t _s12SiriOntology15TerminalElementV16AdjustmentReasonV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_1C3379184(), result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8 && (v4 == v7 && v5 == v8 || (sub_1C3379184() & 1) != 0))
        return 1;
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

#error "1C3013ECC: call analysis failed (funcsize=163)"

#error "1C301415C: call analysis failed (funcsize=163)"

unint64_t sub_1C30141D8()
{
  unint64_t result;

  result = qword_1EF8194C0;
  if (!qword_1EF8194C0)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalElement.OriginType, &type metadata for TerminalElement.OriginType);
    atomic_store(result, (unint64_t *)&qword_1EF8194C0);
  }
  return result;
}

uint64_t sub_1C301421C()
{
  return sub_1C3014264(&qword_1EF8194C8, &qword_1EF8194D0);
}

uint64_t sub_1C3014240()
{
  return sub_1C3014264(&qword_1EF8194D8, &qword_1EF8194E0);
}

uint64_t sub_1C3014264(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C30142A8()
{
  unint64_t result;

  result = qword_1EF8194E8;
  if (!qword_1EF8194E8)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalElement.MatchType, &type metadata for TerminalElement.MatchType);
    atomic_store(result, (unint64_t *)&qword_1EF8194E8);
  }
  return result;
}

unint64_t sub_1C30142F0()
{
  unint64_t result;

  result = qword_1EF8194F0;
  if (!qword_1EF8194F0)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalIntentNode, &type metadata for TerminalIntentNode);
    atomic_store(result, (unint64_t *)&qword_1EF8194F0);
  }
  return result;
}

unint64_t sub_1C3014338()
{
  unint64_t result;

  result = qword_1EF8194F8;
  if (!qword_1EF8194F8)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalElement, &type metadata for TerminalElement);
    atomic_store(result, (unint64_t *)&qword_1EF8194F8);
  }
  return result;
}

unint64_t sub_1C3014380()
{
  unint64_t result;

  result = qword_1EF819500;
  if (!qword_1EF819500)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalElement.Value, &type metadata for TerminalElement.Value);
    atomic_store(result, (unint64_t *)&qword_1EF819500);
  }
  return result;
}

unint64_t sub_1C30143C8()
{
  unint64_t result;

  result = qword_1EF819508;
  if (!qword_1EF819508)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalElement.Origin, &type metadata for TerminalElement.Origin);
    atomic_store(result, (unint64_t *)&qword_1EF819508);
  }
  return result;
}

unint64_t sub_1C3014410()
{
  unint64_t result;

  result = qword_1EF819510;
  if (!qword_1EF819510)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalElement.OriginDetail, &type metadata for TerminalElement.OriginDetail);
    atomic_store(result, (unint64_t *)&qword_1EF819510);
  }
  return result;
}

unint64_t sub_1C3014458()
{
  unint64_t result;

  result = qword_1EF819518;
  if (!qword_1EF819518)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalElement.DerivedOrigin, &type metadata for TerminalElement.DerivedOrigin);
    atomic_store(result, (unint64_t *)&qword_1EF819518);
  }
  return result;
}

unint64_t sub_1C30144A0()
{
  unint64_t result;

  result = qword_1EF819520;
  if (!qword_1EF819520)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalElement.AdjustmentReason, &type metadata for TerminalElement.AdjustmentReason);
    atomic_store(result, (unint64_t *)&qword_1EF819520);
  }
  return result;
}

uint64_t sub_1C30144E4(uint64_t a1, uint64_t a2)
{
  return sub_1C301F860(&qword_1EF819528, a2, (uint64_t (*)(uint64_t))type metadata accessor for TerminalElement.ScalarValue, (uint64_t)&protocol conformance descriptor for TerminalElement.ScalarValue);
}

uint64_t type metadata accessor for TerminalElement.ScalarValue()
{
  return objc_opt_self();
}

unint64_t sub_1C3014534()
{
  unint64_t result;

  result = qword_1EF819530;
  if (!qword_1EF819530)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalElement.SemanticValue, &type metadata for TerminalElement.SemanticValue);
    atomic_store(result, (unint64_t *)&qword_1EF819530);
  }
  return result;
}

unint64_t sub_1C301457C()
{
  unint64_t result;

  result = qword_1EF819538;
  if (!qword_1EF819538)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalElement.OriginalValue, &type metadata for TerminalElement.OriginalValue);
    atomic_store(result, (unint64_t *)&qword_1EF819538);
  }
  return result;
}

unint64_t sub_1C30145C4()
{
  unint64_t result;

  result = qword_1EF819540;
  if (!qword_1EF819540)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for TerminalElement.MatchingSpan, &type metadata for TerminalElement.MatchingSpan);
    atomic_store(result, (unint64_t *)&qword_1EF819540);
  }
  return result;
}

uint64_t sub_1C3014608(uint64_t a1, uint64_t a2)
{
  return sub_1C301F860(&qword_1EF819548, a2, (uint64_t (*)(uint64_t))type metadata accessor for AnyMatchingSpan, (uint64_t)&protocol conformance descriptor for AnyMatchingSpan);
}

uint64_t type metadata accessor for AnyMatchingSpan()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for TerminalIntentNode()
{
  return &type metadata for TerminalIntentNode;
}

#error "1C3014A0C: call analysis failed (funcsize=247)"

#error "1C30155A8: call analysis failed (funcsize=931)"

#error "1C3017A94: call analysis failed (funcsize=2443)"

uint64_t sub_1C3017F04(uint64_t a1)
{
  destroy for TerminalElement.Value(a1);
  return a1;
}

uint64_t sub_1C3017F30(uint64_t a1)
{
  destroy for TerminalElement.OriginDetail(a1, &type metadata for TerminalElement.OriginDetail);
  return a1;
}

uint64_t sub_1C3017F5C(uint64_t a1)
{
  destroy for TerminalElement.Origin(a1, &type metadata for TerminalElement.Origin);
  return a1;
}

void *__swift_memcpy1344_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x540uLL);
}

#error "1C3018734: call analysis failed (funcsize=490)"

uint64_t getEnumTagSinglePayload for TerminalElement(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 1344))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 528);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TerminalElement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 1336) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 1344) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 528) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 1344) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TerminalElement()
{
  return &type metadata for TerminalElement;
}

uint64_t destroy for TerminalElement.Value(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v18 = *(_OWORD *)(a1 + 480);
  v16 = *(_OWORD *)(a1 + 448);
  v17 = *(_OWORD *)(a1 + 464);
  v14 = *(_OWORD *)(a1 + 416);
  v15 = *(_OWORD *)(a1 + 432);
  v12 = *(_OWORD *)(a1 + 384);
  v13 = *(_OWORD *)(a1 + 400);
  v10 = *(_OWORD *)(a1 + 352);
  v11 = *(_OWORD *)(a1 + 368);
  v8 = *(_OWORD *)(a1 + 320);
  v9 = *(_OWORD *)(a1 + 336);
  v6 = *(_OWORD *)(a1 + 288);
  v7 = *(_OWORD *)(a1 + 304);
  v4 = *(_OWORD *)(a1 + 256);
  v5 = *(_OWORD *)(a1 + 272);
  v2 = *(_OWORD *)(a1 + 224);
  v3 = *(_OWORD *)(a1 + 240);
  return sub_1C2FFE4B0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_QWORD *)(a1 + 184),
           *(_QWORD *)(a1 + 192),
           *(_QWORD *)(a1 + 200),
           *(_QWORD *)(a1 + 208),
           *(_QWORD *)(a1 + 216),
           v2,
           *((uint64_t *)&v2 + 1),
           v3,
           *((uint64_t *)&v3 + 1),
           v4,
           *((uint64_t *)&v4 + 1),
           v5,
           *((uint64_t *)&v5 + 1),
           v6,
           *((uint64_t *)&v6 + 1),
           v7,
           *((uint64_t *)&v7 + 1),
           v8,
           *((uint64_t *)&v8 + 1),
           v9,
           *((uint64_t *)&v9 + 1),
           v10,
           *((uint64_t *)&v10 + 1),
           v11,
           *((uint64_t *)&v11 + 1),
           v12,
           *((uint64_t *)&v12 + 1),
           v13,
           *((uint64_t *)&v13 + 1),
           v14,
           *((uint64_t *)&v14 + 1),
           v15,
           *((uint64_t *)&v15 + 1),
           v16,
           *((uint64_t *)&v16 + 1),
           v17,
           *((uint64_t *)&v17 + 1),
           v18,
           *((uint64_t *)&v18 + 1),
           *(_QWORD *)(a1 + 496));
}

uint64_t initializeWithCopy for TerminalElement.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v68 = *(_QWORD *)(a2 + 80);
  v69 = *(_QWORD *)(a2 + 72);
  v66 = *(_QWORD *)(a2 + 96);
  v67 = *(_QWORD *)(a2 + 88);
  v64 = *(_QWORD *)(a2 + 112);
  v65 = *(_QWORD *)(a2 + 104);
  v62 = *(_QWORD *)(a2 + 128);
  v63 = *(_QWORD *)(a2 + 120);
  v60 = *(_QWORD *)(a2 + 144);
  v61 = *(_QWORD *)(a2 + 136);
  v58 = *(_QWORD *)(a2 + 160);
  v59 = *(_QWORD *)(a2 + 152);
  v56 = *(_QWORD *)(a2 + 176);
  v57 = *(_QWORD *)(a2 + 168);
  v54 = *(_QWORD *)(a2 + 192);
  v55 = *(_QWORD *)(a2 + 184);
  v52 = *(_QWORD *)(a2 + 208);
  v53 = *(_QWORD *)(a2 + 200);
  v50 = *(_QWORD *)(a2 + 224);
  v51 = *(_QWORD *)(a2 + 216);
  v49 = *(_QWORD *)(a2 + 232);
  v48 = *(_QWORD *)(a2 + 240);
  v47 = *(_QWORD *)(a2 + 248);
  v46 = *(_QWORD *)(a2 + 256);
  v45 = *(_QWORD *)(a2 + 264);
  v44 = *(_QWORD *)(a2 + 272);
  v43 = *(_QWORD *)(a2 + 280);
  v42 = *(_QWORD *)(a2 + 288);
  v41 = *(_QWORD *)(a2 + 296);
  v13 = *(_QWORD *)(a2 + 304);
  v14 = *(_QWORD *)(a2 + 312);
  v15 = *(_QWORD *)(a2 + 320);
  v16 = *(_QWORD *)(a2 + 328);
  v17 = *(_QWORD *)(a2 + 336);
  v18 = *(_QWORD *)(a2 + 344);
  v19 = *(_QWORD *)(a2 + 352);
  v20 = *(_QWORD *)(a2 + 360);
  v21 = *(_QWORD *)(a2 + 368);
  v22 = *(_QWORD *)(a2 + 376);
  v23 = *(_QWORD *)(a2 + 384);
  v24 = *(_QWORD *)(a2 + 392);
  v25 = *(_QWORD *)(a2 + 400);
  v26 = *(_QWORD *)(a2 + 408);
  v27 = *(_QWORD *)(a2 + 416);
  v28 = *(_QWORD *)(a2 + 424);
  v29 = *(_QWORD *)(a2 + 432);
  v30 = *(_QWORD *)(a2 + 440);
  v31 = *(_QWORD *)(a2 + 448);
  v32 = *(_QWORD *)(a2 + 456);
  v33 = *(_QWORD *)(a2 + 464);
  v34 = *(_QWORD *)(a2 + 472);
  v35 = *(_QWORD *)(a2 + 480);
  v36 = *(_QWORD *)(a2 + 488);
  v37 = *(_QWORD *)(a2 + 496);
  v38 = *(_QWORD *)(a2 + 504);
  v39 = *(_QWORD *)(a2 + 512);
  v40 = *(_WORD *)(a2 + 520);
  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_1C2FFD5C0(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v3, v69, v68, v67, v66, v65, v64, v63, v62, v61, v60,
    v59,
    v58,
    v57,
    v56,
    v55,
    v54,
    v53,
    v52,
    v51,
    v50,
    v49,
    v48,
    v47,
    v46,
    v45,
    v44,
    v43,
    v42,
    v41,
    v13,
    v14,
    v15,
    v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 72) = v69;
  *(_QWORD *)(a1 + 80) = v68;
  *(_QWORD *)(a1 + 88) = v67;
  *(_QWORD *)(a1 + 96) = v66;
  *(_QWORD *)(a1 + 104) = v65;
  *(_QWORD *)(a1 + 112) = v64;
  *(_QWORD *)(a1 + 120) = v63;
  *(_QWORD *)(a1 + 128) = v62;
  *(_QWORD *)(a1 + 136) = v61;
  *(_QWORD *)(a1 + 144) = v60;
  *(_QWORD *)(a1 + 152) = v59;
  *(_QWORD *)(a1 + 160) = v58;
  *(_QWORD *)(a1 + 168) = v57;
  *(_QWORD *)(a1 + 176) = v56;
  *(_QWORD *)(a1 + 184) = v55;
  *(_QWORD *)(a1 + 192) = v54;
  *(_QWORD *)(a1 + 200) = v53;
  *(_QWORD *)(a1 + 208) = v52;
  *(_QWORD *)(a1 + 216) = v51;
  *(_QWORD *)(a1 + 224) = v50;
  *(_QWORD *)(a1 + 232) = v49;
  *(_QWORD *)(a1 + 240) = v48;
  *(_QWORD *)(a1 + 248) = v47;
  *(_QWORD *)(a1 + 256) = v46;
  *(_QWORD *)(a1 + 264) = v45;
  *(_QWORD *)(a1 + 272) = v44;
  *(_QWORD *)(a1 + 280) = v43;
  *(_QWORD *)(a1 + 288) = v42;
  *(_QWORD *)(a1 + 296) = v41;
  *(_QWORD *)(a1 + 304) = v13;
  *(_QWORD *)(a1 + 312) = v14;
  *(_QWORD *)(a1 + 320) = v15;
  *(_QWORD *)(a1 + 328) = v16;
  *(_QWORD *)(a1 + 336) = v17;
  *(_QWORD *)(a1 + 344) = v18;
  *(_QWORD *)(a1 + 352) = v19;
  *(_QWORD *)(a1 + 360) = v20;
  *(_QWORD *)(a1 + 368) = v21;
  *(_QWORD *)(a1 + 376) = v22;
  *(_QWORD *)(a1 + 384) = v23;
  *(_QWORD *)(a1 + 392) = v24;
  *(_QWORD *)(a1 + 400) = v25;
  *(_QWORD *)(a1 + 408) = v26;
  *(_QWORD *)(a1 + 416) = v27;
  *(_QWORD *)(a1 + 424) = v28;
  *(_QWORD *)(a1 + 432) = v29;
  *(_QWORD *)(a1 + 440) = v30;
  *(_QWORD *)(a1 + 448) = v31;
  *(_QWORD *)(a1 + 456) = v32;
  *(_QWORD *)(a1 + 464) = v33;
  *(_QWORD *)(a1 + 472) = v34;
  *(_QWORD *)(a1 + 480) = v35;
  *(_QWORD *)(a1 + 488) = v36;
  *(_QWORD *)(a1 + 496) = v37;
  *(_QWORD *)(a1 + 504) = v38;
  *(_QWORD *)(a1 + 512) = v39;
  *(_WORD *)(a1 + 520) = v40;
  return a1;
}

uint64_t assignWithCopy for TerminalElement.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int16 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v104 = *(_QWORD *)a2;
  v105 = *(_QWORD *)(a2 + 8);
  v102 = *(_QWORD *)(a2 + 24);
  v103 = *(_QWORD *)(a2 + 16);
  v100 = *(_QWORD *)(a2 + 40);
  v101 = *(_QWORD *)(a2 + 32);
  v98 = *(_QWORD *)(a2 + 56);
  v99 = *(_QWORD *)(a2 + 48);
  v96 = *(_QWORD *)(a2 + 72);
  v97 = *(_QWORD *)(a2 + 64);
  v94 = *(_QWORD *)(a2 + 88);
  v95 = *(_QWORD *)(a2 + 80);
  v92 = *(_QWORD *)(a2 + 104);
  v93 = *(_QWORD *)(a2 + 96);
  v90 = *(_QWORD *)(a2 + 120);
  v91 = *(_QWORD *)(a2 + 112);
  v89 = *(_QWORD *)(a2 + 128);
  v88 = *(_QWORD *)(a2 + 136);
  v87 = *(_QWORD *)(a2 + 144);
  v86 = *(_QWORD *)(a2 + 152);
  v85 = *(_QWORD *)(a2 + 160);
  v84 = *(_QWORD *)(a2 + 168);
  v83 = *(_QWORD *)(a2 + 176);
  v82 = *(_QWORD *)(a2 + 184);
  v81 = *(_QWORD *)(a2 + 192);
  v80 = *(_QWORD *)(a2 + 200);
  v79 = *(_QWORD *)(a2 + 208);
  v78 = *(_QWORD *)(a2 + 216);
  v77 = *(_QWORD *)(a2 + 224);
  v76 = *(_QWORD *)(a2 + 232);
  v75 = *(_QWORD *)(a2 + 240);
  v74 = *(_QWORD *)(a2 + 248);
  v73 = *(_QWORD *)(a2 + 256);
  v72 = *(_QWORD *)(a2 + 264);
  v71 = *(_QWORD *)(a2 + 272);
  v70 = *(_QWORD *)(a2 + 280);
  v69 = *(_QWORD *)(a2 + 288);
  v68 = *(_QWORD *)(a2 + 296);
  v4 = *(_QWORD *)(a2 + 312);
  v3 = *(_QWORD *)(a2 + 320);
  v6 = *(_QWORD *)(a2 + 328);
  v5 = *(_QWORD *)(a2 + 336);
  v8 = *(_QWORD *)(a2 + 344);
  v7 = *(_QWORD *)(a2 + 352);
  v10 = *(_QWORD *)(a2 + 360);
  v9 = *(_QWORD *)(a2 + 368);
  v11 = *(_QWORD *)(a2 + 376);
  v49 = *(_QWORD *)(a2 + 304);
  v50 = *(_QWORD *)(a2 + 384);
  v51 = *(_QWORD *)(a2 + 392);
  v52 = *(_QWORD *)(a2 + 400);
  v53 = *(_QWORD *)(a2 + 408);
  v54 = *(_QWORD *)(a2 + 416);
  v55 = *(_QWORD *)(a2 + 424);
  v56 = *(_QWORD *)(a2 + 432);
  v57 = *(_QWORD *)(a2 + 440);
  v58 = *(_QWORD *)(a2 + 448);
  v59 = *(_QWORD *)(a2 + 456);
  v60 = *(_QWORD *)(a2 + 464);
  v61 = *(_QWORD *)(a2 + 472);
  v62 = *(_QWORD *)(a2 + 480);
  v63 = *(_QWORD *)(a2 + 488);
  v64 = *(_QWORD *)(a2 + 496);
  v65 = *(_QWORD *)(a2 + 504);
  v66 = *(_QWORD *)(a2 + 512);
  v67 = *(_WORD *)(a2 + 520);
  sub_1C2FFD5C0(*(_QWORD *)a2, v105, v103, v102, v101, v100, v99, v98, v97, v96, v95, v94, v93, v92, v91, v90, v89, v88, v87,
    v86,
    v85,
    v84,
    v83,
    v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v49,
    v4,
    v3,
    v6,
    v5,
    v8,
    v7,
    v10,
    v9,
    v11,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v104;
  *(_QWORD *)(a1 + 8) = v105;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v103;
  *(_QWORD *)(a1 + 24) = v102;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v101;
  *(_QWORD *)(a1 + 40) = v100;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v99;
  *(_QWORD *)(a1 + 56) = v98;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v97;
  *(_QWORD *)(a1 + 72) = v96;
  *(_QWORD *)(a1 + 80) = v95;
  *(_QWORD *)(a1 + 88) = v94;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v93;
  *(_QWORD *)(a1 + 104) = v92;
  *(_QWORD *)(a1 + 112) = v91;
  *(_QWORD *)(a1 + 120) = v90;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v89;
  *(_QWORD *)(a1 + 136) = v88;
  *(_QWORD *)(a1 + 144) = v87;
  *(_QWORD *)(a1 + 152) = v86;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v85;
  *(_QWORD *)(a1 + 168) = v84;
  *(_QWORD *)(a1 + 176) = v83;
  *(_QWORD *)(a1 + 184) = v82;
  v28 = *(_OWORD *)(a1 + 192);
  v29 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 192) = v81;
  *(_QWORD *)(a1 + 200) = v80;
  *(_QWORD *)(a1 + 208) = v79;
  *(_QWORD *)(a1 + 216) = v78;
  v30 = *(_OWORD *)(a1 + 224);
  v31 = *(_OWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 224) = v77;
  *(_QWORD *)(a1 + 232) = v76;
  *(_QWORD *)(a1 + 240) = v75;
  *(_QWORD *)(a1 + 248) = v74;
  v32 = *(_OWORD *)(a1 + 256);
  v33 = *(_OWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 256) = v73;
  *(_QWORD *)(a1 + 264) = v72;
  *(_QWORD *)(a1 + 272) = v71;
  *(_QWORD *)(a1 + 280) = v70;
  v34 = *(_OWORD *)(a1 + 288);
  v35 = *(_OWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 288) = v69;
  *(_QWORD *)(a1 + 296) = v68;
  *(_QWORD *)(a1 + 304) = v49;
  *(_QWORD *)(a1 + 312) = v4;
  v36 = *(_OWORD *)(a1 + 320);
  v37 = *(_OWORD *)(a1 + 336);
  *(_QWORD *)(a1 + 320) = v3;
  *(_QWORD *)(a1 + 328) = v6;
  *(_QWORD *)(a1 + 336) = v5;
  *(_QWORD *)(a1 + 344) = v8;
  v38 = *(_OWORD *)(a1 + 352);
  v39 = *(_OWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 352) = v7;
  *(_QWORD *)(a1 + 360) = v10;
  *(_QWORD *)(a1 + 368) = v9;
  *(_QWORD *)(a1 + 376) = v11;
  v40 = *(_OWORD *)(a1 + 384);
  v41 = *(_OWORD *)(a1 + 400);
  *(_QWORD *)(a1 + 384) = v50;
  *(_QWORD *)(a1 + 392) = v51;
  *(_QWORD *)(a1 + 400) = v52;
  *(_QWORD *)(a1 + 408) = v53;
  v42 = *(_OWORD *)(a1 + 416);
  v43 = *(_OWORD *)(a1 + 432);
  *(_QWORD *)(a1 + 416) = v54;
  *(_QWORD *)(a1 + 424) = v55;
  *(_QWORD *)(a1 + 432) = v56;
  *(_QWORD *)(a1 + 440) = v57;
  v44 = *(_OWORD *)(a1 + 448);
  v45 = *(_OWORD *)(a1 + 464);
  *(_QWORD *)(a1 + 448) = v58;
  *(_QWORD *)(a1 + 456) = v59;
  *(_QWORD *)(a1 + 464) = v60;
  *(_QWORD *)(a1 + 472) = v61;
  v46 = *(_OWORD *)(a1 + 480);
  v47 = *(_OWORD *)(a1 + 496);
  *(_QWORD *)(a1 + 480) = v62;
  *(_QWORD *)(a1 + 488) = v63;
  *(_QWORD *)(a1 + 496) = v64;
  *(_QWORD *)(a1 + 504) = v65;
  *(_QWORD *)(a1 + 512) = v66;
  *(_WORD *)(a1 + 520) = v67;
  sub_1C2FFE4B0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47);
  return a1;
}

void *__swift_memcpy522_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x20AuLL);
}

uint64_t assignWithTake for TerminalElement.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_OWORD *)(a1 + 160);
  v19 = *(_OWORD *)(a1 + 176);
  v20 = *(_OWORD *)(a1 + 192);
  v21 = *(_OWORD *)(a1 + 208);
  v22 = *(_OWORD *)(a1 + 224);
  v23 = *(_OWORD *)(a1 + 240);
  v24 = *(_OWORD *)(a1 + 256);
  v25 = *(_OWORD *)(a1 + 272);
  v26 = *(_OWORD *)(a1 + 288);
  v27 = *(_OWORD *)(a1 + 304);
  v28 = *(_OWORD *)(a1 + 320);
  v29 = *(_OWORD *)(a1 + 336);
  v30 = *(_OWORD *)(a1 + 352);
  v31 = *(_OWORD *)(a1 + 368);
  v32 = *(_OWORD *)(a1 + 384);
  v33 = *(_OWORD *)(a1 + 400);
  v34 = *(_OWORD *)(a1 + 416);
  v35 = *(_OWORD *)(a1 + 432);
  v36 = *(_OWORD *)(a1 + 448);
  v37 = *(_OWORD *)(a1 + 464);
  v38 = *(_OWORD *)(a1 + 480);
  v39 = *(_OWORD *)(a1 + 496);
  v40 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v40;
  v41 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v41;
  v42 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v42;
  v43 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v43;
  v44 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v44;
  v45 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v45;
  v46 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v46;
  v47 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v47;
  v48 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v48;
  v49 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v49;
  v50 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v50;
  v51 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v51;
  v52 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v52;
  v53 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v53;
  v54 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v54;
  v55 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v55;
  v56 = *(_QWORD *)(a2 + 512);
  LOWORD(a2) = *(_WORD *)(a2 + 520);
  *(_QWORD *)(a1 + 512) = v56;
  *(_WORD *)(a1 + 520) = a2;
  sub_1C2FFE4B0(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for TerminalElement.Value(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 522))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 145);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for TerminalElement.Value(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 520) = 0;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 522) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_OWORD *)(result + 112) = 0u;
      *(_OWORD *)(result + 128) = 0u;
      *(_OWORD *)(result + 80) = 0u;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_QWORD *)(result + 144) = (unint64_t)-a2 << 8;
      *(_OWORD *)(result + 168) = 0u;
      *(_OWORD *)(result + 184) = 0u;
      *(_OWORD *)(result + 200) = 0u;
      *(_OWORD *)(result + 216) = 0u;
      *(_OWORD *)(result + 232) = 0u;
      *(_OWORD *)(result + 248) = 0u;
      *(_WORD *)(result + 520) = 0;
      *(_OWORD *)(result + 152) = 0u;
      result += 152;
      *(_OWORD *)(result + 112) = 0u;
      *(_OWORD *)(result + 128) = 0u;
      *(_OWORD *)(result + 144) = 0u;
      *(_OWORD *)(result + 160) = 0u;
      *(_OWORD *)(result + 176) = 0u;
      *(_OWORD *)(result + 192) = 0u;
      *(_OWORD *)(result + 208) = 0u;
      *(_OWORD *)(result + 224) = 0u;
      *(_OWORD *)(result + 240) = 0u;
      *(_OWORD *)(result + 256) = 0u;
      *(_OWORD *)(result + 272) = 0u;
      *(_OWORD *)(result + 288) = 0u;
      *(_OWORD *)(result + 304) = 0u;
      *(_OWORD *)(result + 320) = 0u;
      *(_OWORD *)(result + 336) = 0u;
      *(_OWORD *)(result + 352) = 0u;
      return result;
    }
    *(_BYTE *)(result + 522) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1C301979C(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;

  v2 = *(unsigned __int8 *)(result + 296);
  v3 = *(unsigned __int16 *)(result + 312);
  v4 = *(unsigned int *)(result + 328);
  v5 = *(unsigned __int16 *)(result + 344);
  v6 = *(_QWORD *)(result + 416) & 0xFFFFFFLL;
  v7 = *(_QWORD *)(result + 488) & 0xFFFFFFLL;
  v8 = *(_QWORD *)(result + 504) & 1;
  v9 = *(_WORD *)(result + 520) & 0xFF01 | (16 * (a2 & 0xF));
  *(_QWORD *)(result + 144) = *(unsigned __int8 *)(result + 144);
  *(_QWORD *)(result + 296) = v2;
  *(_QWORD *)(result + 312) = v3;
  *(_QWORD *)(result + 328) = v4;
  *(_QWORD *)(result + 344) = v5;
  *(_QWORD *)(result + 416) = v6;
  *(_QWORD *)(result + 488) = v7;
  *(_QWORD *)(result + 504) = v8;
  *(_WORD *)(result + 520) = v9;
  return result;
}

ValueMetadata *type metadata accessor for TerminalElement.Value()
{
  return &type metadata for TerminalElement.Value;
}

uint64_t getEnumTagSinglePayload for TerminalElement.SemanticValue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TerminalElement.SemanticValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TerminalElement.SemanticValue()
{
  return &type metadata for TerminalElement.SemanticValue;
}

uint64_t method lookup function for TerminalElement.ScalarValue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TerminalElement.ScalarValue.__allocating_init(value:unit:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

#error "1C3019AB4: call analysis failed (funcsize=134)"

#error "1C301A080: call analysis failed (funcsize=520)"

#error "1C301B068: call analysis failed (funcsize=1149)"

void *__swift_memcpy777_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x309uLL);
}

#error "1C301B950: call analysis failed (funcsize=286)"

uint64_t getEnumTagSinglePayload for TerminalElement.Origin(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 777))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_DWORD *)(a1 + 546);
  v4 = -2 - v3;
  if ((int)(-2 - v3) < 0)
    v4 = -1;
  if (v3 <= 0x80000000)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

void storeEnumTagSinglePayload for TerminalElement.Origin(uint64_t a1, unsigned int a2, unsigned int a3)
{
  unint64_t v4;

  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 776) = 0;
    *(_OWORD *)(a1 + 760) = 0u;
    *(_OWORD *)(a1 + 744) = 0u;
    *(_OWORD *)(a1 + 728) = 0u;
    *(_OWORD *)(a1 + 712) = 0u;
    *(_OWORD *)(a1 + 696) = 0u;
    *(_OWORD *)(a1 + 680) = 0u;
    *(_OWORD *)(a1 + 664) = 0u;
    *(_OWORD *)(a1 + 648) = 0u;
    *(_OWORD *)(a1 + 632) = 0u;
    *(_OWORD *)(a1 + 616) = 0u;
    *(_OWORD *)(a1 + 600) = 0u;
    *(_OWORD *)(a1 + 584) = 0u;
    *(_OWORD *)(a1 + 568) = 0u;
    *(_OWORD *)(a1 + 552) = 0u;
    *(_OWORD *)(a1 + 536) = 0u;
    *(_OWORD *)(a1 + 520) = 0u;
    *(_OWORD *)(a1 + 504) = 0u;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(_QWORD *)a1 = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(a1 + 777) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(a1 + 777) = 0;
    if (a2)
    {
      v4 = (unint64_t)~a2 << 16;
      bzero((void *)(a1 + 8), 0x218uLL);
      *(_QWORD *)(a1 + 544) = v4;
      *(_OWORD *)(a1 + 552) = 0u;
      *(_OWORD *)(a1 + 568) = 0u;
      *(_OWORD *)(a1 + 584) = 0u;
      *(_OWORD *)(a1 + 600) = 0u;
      *(_OWORD *)(a1 + 616) = 0u;
      *(_OWORD *)(a1 + 632) = 0u;
      *(_OWORD *)(a1 + 648) = 0u;
      *(_OWORD *)(a1 + 664) = 0u;
      *(_OWORD *)(a1 + 680) = 0u;
      *(_OWORD *)(a1 + 696) = 0u;
      *(_OWORD *)(a1 + 712) = 0u;
      *(_OWORD *)(a1 + 728) = 0u;
      *(_OWORD *)(a1 + 744) = 0u;
      *(_OWORD *)(a1 + 760) = 0u;
      *(_BYTE *)(a1 + 776) = 0;
    }
  }
}

ValueMetadata *type metadata accessor for TerminalElement.Origin()
{
  return &type metadata for TerminalElement.Origin;
}

#error "1C301BCE0: call analysis failed (funcsize=100)"

#error "1C301C248: call analysis failed (funcsize=500)"

#error "1C301C9E4: call analysis failed (funcsize=575)"

void *__swift_memcpy769_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x301uLL);
}

#error "1C301D024: call analysis failed (funcsize=157)"

uint64_t getEnumTagSinglePayload for TerminalElement.OriginDetail(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 769))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 538);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

void storeEnumTagSinglePayload for TerminalElement.OriginDetail(char *a1, int a2, int a3)
{
  unint64_t v4;

  if (a2 < 0)
  {
    *((_QWORD *)a1 + 95) = 0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 744) = 0u;
    *(_OWORD *)(a1 + 728) = 0u;
    *(_OWORD *)(a1 + 712) = 0u;
    *(_OWORD *)(a1 + 696) = 0u;
    *(_OWORD *)(a1 + 680) = 0u;
    *(_OWORD *)(a1 + 664) = 0u;
    *(_OWORD *)(a1 + 648) = 0u;
    *(_OWORD *)(a1 + 632) = 0u;
    *(_OWORD *)(a1 + 616) = 0u;
    *(_OWORD *)(a1 + 600) = 0u;
    *(_OWORD *)(a1 + 584) = 0u;
    *(_OWORD *)(a1 + 568) = 0u;
    *(_OWORD *)(a1 + 552) = 0u;
    *(_OWORD *)(a1 + 536) = 0u;
    *(_OWORD *)(a1 + 520) = 0u;
    a1[768] = 0;
    *(_OWORD *)(a1 + 504) = 0u;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      a1[769] = 1;
  }
  else
  {
    if (a3 < 0)
      a1[769] = 0;
    if (a2)
    {
      v4 = (unint64_t)-a2 << 16;
      bzero(a1, 0x218uLL);
      *((_QWORD *)a1 + 67) = v4;
      *((_OWORD *)a1 + 34) = 0u;
      *((_OWORD *)a1 + 35) = 0u;
      *((_OWORD *)a1 + 36) = 0u;
      *((_OWORD *)a1 + 37) = 0u;
      *((_OWORD *)a1 + 38) = 0u;
      *((_OWORD *)a1 + 39) = 0u;
      *((_OWORD *)a1 + 40) = 0u;
      *((_OWORD *)a1 + 41) = 0u;
      *((_OWORD *)a1 + 42) = 0u;
      *((_OWORD *)a1 + 43) = 0u;
      *((_OWORD *)a1 + 44) = 0u;
      *((_OWORD *)a1 + 45) = 0u;
      *((_OWORD *)a1 + 46) = 0u;
      *((_OWORD *)a1 + 47) = 0u;
      a1[768] = 0;
    }
  }
}

uint64_t sub_1C301D1EC(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(unsigned __int8 *)(result + 672);
  v3 = *(_QWORD *)(result + 640) & 0x1010101;
  v4 = *(_QWORD *)(result + 736) & 1;
  v5 = *(_QWORD *)(result + 752) & 1;
  v6 = *(_BYTE *)(result + 768) & 1 | (a2 << 6);
  *(_QWORD *)(result + 536) = *(unsigned __int16 *)(result + 536);
  *(_QWORD *)(result + 640) = v3;
  *(_QWORD *)(result + 672) = v2;
  *(_QWORD *)(result + 736) = v4;
  *(_QWORD *)(result + 752) = v5;
  *(_BYTE *)(result + 768) = v6;
  return result;
}

ValueMetadata *type metadata accessor for TerminalElement.OriginDetail()
{
  return &type metadata for TerminalElement.OriginDetail;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TerminalElement.OriginType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TerminalElement.OriginType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1C301D334 + 4 * byte_1C3388FE2[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1C301D368 + 4 * byte_1C3388FDD[v4]))();
}

uint64_t sub_1C301D368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C301D370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C301D378);
  return result;
}

uint64_t sub_1C301D384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C301D38CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1C301D390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C301D398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C301D3A4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1C301D3AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TerminalElement.OriginType()
{
  return &type metadata for TerminalElement.OriginType;
}

uint64_t destroy for TerminalElement.DerivedOrigin(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TerminalElement.DerivedOrigin(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TerminalElement.DerivedOrigin(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
  {
    if (v4 == 1)
    {
      v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 == 1)
  {
    sub_1C301D558(a1);
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C301D558(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for TerminalElement.DerivedOrigin(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  if (a1[1] != 1)
  {
    v4 = a2[1];
    if (v4 != 1)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C301D558((uint64_t)a1);
  }
  v5 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v5;
LABEL_6:
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TerminalElement.DerivedOrigin(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TerminalElement.DerivedOrigin(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TerminalElement.DerivedOrigin()
{
  return &type metadata for TerminalElement.DerivedOrigin;
}

uint64_t destroy for TerminalElement.MatchingSpan(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 160);
  v3 = *(_QWORD *)(a1 + 312);
  v4 = *(_QWORD *)(a1 + 328);
  v5 = *(_QWORD *)(a1 + 344);
  v6 = *(_QWORD *)(a1 + 360);
  v7 = *(_QWORD *)(a1 + 432);
  v8 = *(_QWORD *)(a1 + 504);
  v9 = *(_QWORD *)(a1 + 520) <= 1uLL && (v2 & 0xFFFFFFFFFFFFFF00) == 0xFFFFFFFF00;
  if (!v9
    || (v3 <= 0xFF ? (v10 = v4 >> 16 == 0) : (v10 = 0),
        v10 ? (v11 = HIDWORD(v5) == 0) : (v11 = 0),
        v11 ? (v12 = v6 >> 16 == 0) : (v12 = 0),
        v12 ? (v13 = (v8 | (unint64_t)v7) >> 24 == 0) : (v13 = 0),
        v13 ? (v14 = (*(_WORD *)(a1 + 536) & 0xFE) == 0) : (v14 = 0),
        !v14))
  {
    v15 = *(_OWORD *)(a1 + 80);
    v16 = *(_OWORD *)(a1 + 96);
    v17 = *(_OWORD *)(a1 + 112);
    v18 = *(_OWORD *)(a1 + 128);
    v19 = *(_OWORD *)(a1 + 168);
    v20 = *(_OWORD *)(a1 + 184);
    v21 = *(_OWORD *)(a1 + 200);
    v22 = *(_OWORD *)(a1 + 216);
    v23 = *(_OWORD *)(a1 + 232);
    v24 = *(_OWORD *)(a1 + 248);
    v25 = *(_OWORD *)(a1 + 264);
    sub_1C2FFE4B0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), v2,
      v19,
      *((uint64_t *)&v19 + 1),
      v20,
      *((uint64_t *)&v20 + 1),
      v21,
      *((uint64_t *)&v21 + 1),
      v22,
      *((uint64_t *)&v22 + 1),
      v23,
      *((uint64_t *)&v23 + 1),
      v24,
      *((uint64_t *)&v24 + 1),
      v25,
      *((uint64_t *)&v25 + 1),
      *(_QWORD *)(a1 + 280),
      *(_QWORD *)(a1 + 288),
      *(_QWORD *)(a1 + 296),
      *(_QWORD *)(a1 + 304),
      v3,
      *(_QWORD *)(a1 + 320),
      v4,
      *(_QWORD *)(a1 + 336),
      v5,
      *(_QWORD *)(a1 + 352),
      v6,
      *(_QWORD *)(a1 + 368),
      *(_QWORD *)(a1 + 376),
      *(_QWORD *)(a1 + 384),
      *(_QWORD *)(a1 + 392),
      *(_QWORD *)(a1 + 400),
      *(_QWORD *)(a1 + 408),
      *(_QWORD *)(a1 + 416),
      *(_QWORD *)(a1 + 424),
      v7,
      *(_QWORD *)(a1 + 440),
      *(_QWORD *)(a1 + 448),
      *(_QWORD *)(a1 + 456),
      *(_QWORD *)(a1 + 464),
      *(_QWORD *)(a1 + 472),
      *(_QWORD *)(a1 + 480),
      *(_QWORD *)(a1 + 488),
      *(_QWORD *)(a1 + 496),
      v8,
      *(_QWORD *)(a1 + 512));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TerminalElement.MatchingSpan(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int16 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v72 = *(_QWORD *)(a2 + 328);
  v73 = *(_QWORD *)(a2 + 312);
  v71 = *(_QWORD *)(a2 + 344);
  v75 = *(_QWORD *)(a2 + 360);
  v76 = *(_QWORD *)(a2 + 160);
  v74 = *(_QWORD *)(a2 + 432);
  v5 = *(_QWORD *)(a2 + 504);
  v6 = *(_QWORD *)(a2 + 520);
  v7 = *(_WORD *)(a2 + 536);
  swift_bridgeObjectRetain();
  v70 = v6;
  if (v6 > 1
    || (v76 & 0xFFFFFFFFFFFFFF00) != 0xFFFFFFFF00
    || v73 > 0xFF
    || v72 >> 16
    || HIDWORD(v71)
    || v75 >> 16
    || (v5 | (unint64_t)v74) >> 24
    || (v7 & 0xFE) != 0)
  {
    v55 = *(_QWORD *)(a2 + 80);
    v54 = *(_QWORD *)(a2 + 88);
    v53 = *(_QWORD *)(a2 + 96);
    v52 = *(_QWORD *)(a2 + 104);
    v51 = *(_QWORD *)(a2 + 112);
    v50 = *(_QWORD *)(a2 + 120);
    v49 = *(_QWORD *)(a2 + 128);
    v48 = *(_QWORD *)(a2 + 136);
    v47 = *(_QWORD *)(a2 + 144);
    v46 = *(_QWORD *)(a2 + 152);
    v56 = *(_QWORD *)(a2 + 168);
    v57 = *(_QWORD *)(a2 + 176);
    v58 = *(_QWORD *)(a2 + 184);
    v59 = *(_QWORD *)(a2 + 192);
    v60 = *(_QWORD *)(a2 + 200);
    v61 = *(_QWORD *)(a2 + 208);
    v68 = *(_QWORD *)(a2 + 232);
    v69 = *(_QWORD *)(a2 + 224);
    v66 = *(_QWORD *)(a2 + 248);
    v67 = *(_QWORD *)(a2 + 240);
    v64 = *(_QWORD *)(a2 + 264);
    v65 = *(_QWORD *)(a2 + 256);
    v62 = *(_QWORD *)(a2 + 216);
    v63 = *(_QWORD *)(a2 + 272);
    v19 = *(_QWORD *)(a2 + 280);
    v20 = *(_QWORD *)(a2 + 288);
    v21 = *(_QWORD *)(a2 + 296);
    v22 = *(_QWORD *)(a2 + 304);
    v23 = *(_QWORD *)(a2 + 320);
    v24 = *(_QWORD *)(a2 + 336);
    v25 = *(_QWORD *)(a2 + 352);
    v26 = *(_QWORD *)(a2 + 368);
    v27 = *(_QWORD *)(a2 + 376);
    v28 = *(_QWORD *)(a2 + 384);
    v29 = *(_QWORD *)(a2 + 392);
    v30 = *(_QWORD *)(a2 + 400);
    v31 = *(_QWORD *)(a2 + 408);
    v32 = *(_QWORD *)(a2 + 416);
    v33 = *(_QWORD *)(a2 + 424);
    v34 = *(_QWORD *)(a2 + 440);
    v35 = *(_QWORD *)(a2 + 448);
    v36 = *(_QWORD *)(a2 + 456);
    v37 = *(_QWORD *)(a2 + 464);
    v38 = *(_QWORD *)(a2 + 472);
    v39 = *(_QWORD *)(a2 + 480);
    v40 = *(_QWORD *)(a2 + 488);
    v41 = *(_QWORD *)(a2 + 496);
    v43 = *(_QWORD *)(a2 + 512);
    v44 = *(_QWORD *)(a2 + 528);
    v45 = v7;
    v42 = v5;
    v18 = v5;
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 40);
    v12 = *(_QWORD *)(a2 + 48);
    v13 = *(_QWORD *)(a2 + 56);
    v14 = *(_QWORD *)(a2 + 64);
    v15 = *(_QWORD *)(a2 + 72);
    sub_1C2FFD5C0(v8, v9, v10, v11, v12, v13, v14, v15, v55, v54, v53, v52, v51, v50, v49, v48, v47, v46, v76,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v69,
      v68,
      v67,
      v66,
      v65,
      v64,
      v63,
      v19,
      v20,
      v21,
      v22,
      v73,
      v23,
      v72,
      v24,
      v71,
      v25,
      v75,
      v26,
      v27,
      v28,
      v29,
      v30,
      v31,
      v32,
      v33,
      v74,
      v34,
      v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v18,
      v43);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 64) = v14;
    *(_QWORD *)(a1 + 72) = v15;
    *(_QWORD *)(a1 + 80) = v55;
    *(_QWORD *)(a1 + 88) = v54;
    *(_QWORD *)(a1 + 96) = v53;
    *(_QWORD *)(a1 + 104) = v52;
    *(_QWORD *)(a1 + 112) = v51;
    *(_QWORD *)(a1 + 120) = v50;
    *(_QWORD *)(a1 + 128) = v49;
    *(_QWORD *)(a1 + 136) = v48;
    *(_QWORD *)(a1 + 144) = v47;
    *(_QWORD *)(a1 + 152) = v46;
    *(_QWORD *)(a1 + 160) = v76;
    *(_QWORD *)(a1 + 168) = v56;
    *(_QWORD *)(a1 + 176) = v57;
    *(_QWORD *)(a1 + 184) = v58;
    *(_QWORD *)(a1 + 192) = v59;
    *(_QWORD *)(a1 + 200) = v60;
    *(_QWORD *)(a1 + 208) = v61;
    *(_QWORD *)(a1 + 216) = v62;
    *(_QWORD *)(a1 + 224) = v69;
    *(_QWORD *)(a1 + 232) = v68;
    *(_QWORD *)(a1 + 240) = v67;
    *(_QWORD *)(a1 + 248) = v66;
    *(_QWORD *)(a1 + 256) = v65;
    *(_QWORD *)(a1 + 264) = v64;
    *(_QWORD *)(a1 + 272) = v63;
    *(_QWORD *)(a1 + 280) = v19;
    *(_QWORD *)(a1 + 288) = v20;
    *(_QWORD *)(a1 + 296) = v21;
    *(_QWORD *)(a1 + 304) = v22;
    *(_QWORD *)(a1 + 312) = v73;
    *(_QWORD *)(a1 + 320) = v23;
    *(_QWORD *)(a1 + 328) = v72;
    *(_QWORD *)(a1 + 336) = v24;
    *(_QWORD *)(a1 + 344) = v71;
    *(_QWORD *)(a1 + 352) = v25;
    *(_QWORD *)(a1 + 360) = v75;
    *(_QWORD *)(a1 + 368) = v26;
    *(_QWORD *)(a1 + 376) = v27;
    *(_QWORD *)(a1 + 384) = v28;
    *(_QWORD *)(a1 + 392) = v29;
    *(_QWORD *)(a1 + 400) = v30;
    *(_QWORD *)(a1 + 408) = v31;
    *(_QWORD *)(a1 + 416) = v32;
    *(_QWORD *)(a1 + 424) = v33;
    *(_QWORD *)(a1 + 432) = v74;
    *(_QWORD *)(a1 + 440) = v34;
    *(_QWORD *)(a1 + 448) = v35;
    *(_QWORD *)(a1 + 456) = v36;
    *(_QWORD *)(a1 + 464) = v37;
    *(_QWORD *)(a1 + 472) = v38;
    *(_QWORD *)(a1 + 480) = v39;
    *(_QWORD *)(a1 + 488) = v40;
    *(_QWORD *)(a1 + 496) = v41;
    *(_QWORD *)(a1 + 504) = v42;
    *(_QWORD *)(a1 + 512) = v43;
    *(_QWORD *)(a1 + 520) = v70;
    *(_QWORD *)(a1 + 528) = v44;
    *(_WORD *)(a1 + 536) = v45;
  }
  else
  {
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x20AuLL);
  }
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  v16 = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 608) = v16;
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_DWORD *)(a1 + 640) = *(_DWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  *(_BYTE *)(a1 + 752) = *(_BYTE *)(a2 + 752);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_BYTE *)(a1 + 768) = *(_BYTE *)(a2 + 768);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TerminalElement.MatchingSpan(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v8;
  BOOL v10;
  BOOL v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __int16 v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;

  v173 = (_BYTE *)(a2 + 640);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 344);
  v5 = *(_QWORD *)(a2 + 432);
  v6 = *(_QWORD *)(a2 + 504);
  v168 = *(_QWORD *)(a2 + 360);
  v169 = *(_QWORD *)(a2 + 160);
  v165 = *(_QWORD *)(a2 + 328);
  v166 = *(_QWORD *)(a2 + 312);
  v8 = v169 >> 8 != 0xFFFFFFFF || *(_QWORD *)(a2 + 312) >= 0x100uLL || *(_QWORD *)(a2 + 328) >= 0x10000uLL;
  v164 = *(_QWORD *)(a2 + 344);
  v10 = v8 || HIDWORD(v4) != 0 || *(_QWORD *)(a2 + 360) >= 0x10000uLL;
  v171 = *(_QWORD *)(a2 + 504);
  v172 = *(_QWORD *)(a2 + 432);
  v11 = !v10 && (v6 | (unint64_t)v5) >> 24 == 0;
  v170 = *(_QWORD *)(a2 + 520);
  v13 = v11 && *(_QWORD *)(a2 + 520) < 2uLL;
  v167 = *(_WORD *)(a2 + 536);
  if ((v167 & 0xFE) != 0)
    v13 = 0;
  if (*(_QWORD *)(a1 + 520) > 1uLL
    || (*(_QWORD *)(a1 + 160) & 0xFFFFFFFFFFFFFF00) != 0xFFFFFFFF00
    || *(_QWORD *)(a1 + 312) > 0xFFuLL
    || *(_QWORD *)(a1 + 328) >> 16
    || HIDWORD(*(_QWORD *)(a1 + 344))
    || *(_QWORD *)(a1 + 360) >> 16
    || (*(_QWORD *)(a1 + 504) | *(_QWORD *)(a1 + 432)) >> 24
    || (*(_WORD *)(a1 + 536) & 0xFE) != 0)
  {
    if ((v13 & 1) == 0)
    {
      v23 = *(_QWORD *)(a2 + 16);
      v22 = *(_QWORD *)(a2 + 24);
      v133 = *(_QWORD *)(a2 + 72);
      v131 = *(_QWORD *)(a2 + 80);
      v129 = *(_QWORD *)(a2 + 88);
      v127 = *(_QWORD *)(a2 + 96);
      v125 = *(_QWORD *)(a2 + 104);
      v123 = *(_QWORD *)(a2 + 112);
      v121 = *(_QWORD *)(a2 + 120);
      v119 = *(_QWORD *)(a2 + 128);
      v117 = *(_QWORD *)(a2 + 136);
      v115 = *(_QWORD *)(a2 + 144);
      v113 = *(_QWORD *)(a2 + 152);
      v135 = *(_QWORD *)(a2 + 168);
      v137 = *(_OWORD *)(a2 + 176);
      v140 = *(_OWORD *)(a2 + 192);
      v143 = *(_QWORD *)(a2 + 208);
      v157 = *(_QWORD *)(a2 + 224);
      v159 = *(_QWORD *)(a2 + 216);
      v151 = *(_QWORD *)(a2 + 240);
      v153 = *(_QWORD *)(a2 + 248);
      v155 = *(_QWORD *)(a2 + 232);
      v149 = *(_QWORD *)(a2 + 256);
      v148 = *(_QWORD *)(a2 + 264);
      v146 = *(_QWORD *)(a2 + 272);
      v144 = *(_QWORD *)(a2 + 280);
      v24 = *(_QWORD *)(a2 + 296);
      v75 = *(_QWORD *)(a2 + 288);
      v77 = *(_QWORD *)(a2 + 304);
      v161 = *(_QWORD *)(a2 + 320);
      v83 = *(_QWORD *)(a2 + 336);
      v163 = *(_QWORD *)(a2 + 352);
      v85 = *(_QWORD *)(a2 + 368);
      v87 = *(_QWORD *)(a2 + 376);
      v89 = *(_QWORD *)(a2 + 384);
      v91 = *(_QWORD *)(a2 + 392);
      v93 = *(_QWORD *)(a2 + 400);
      v95 = *(_QWORD *)(a2 + 408);
      v97 = *(_QWORD *)(a2 + 416);
      v99 = *(_QWORD *)(a2 + 424);
      v101 = *(_QWORD *)(a2 + 440);
      v102 = *(_QWORD *)(a2 + 448);
      v103 = *(_QWORD *)(a2 + 456);
      v104 = *(_QWORD *)(a2 + 464);
      v105 = *(_QWORD *)(a2 + 472);
      v106 = *(_QWORD *)(a2 + 480);
      v107 = *(_QWORD *)(a2 + 488);
      v108 = *(_QWORD *)(a2 + 496);
      v109 = *(_QWORD *)(a2 + 512);
      v111 = *(_QWORD *)(a2 + 528);
      v25 = *(_QWORD *)(a2 + 32);
      v26 = *(_QWORD *)(a2 + 40);
      v27 = *(_QWORD *)(a2 + 48);
      v28 = *(_QWORD *)(a2 + 56);
      v29 = *(_QWORD *)(a2 + 64);
      sub_1C2FFD5C0(v23, v22, v25, v26, v27, v28, v29, v133, v131, v129, v127, v125, v123, v121, v119, v117, v115, v113, v169,
        v135,
        *(_QWORD *)(a2 + 176),
        *(_QWORD *)(a2 + 184),
        *(_QWORD *)(a2 + 192),
        *(_QWORD *)(a2 + 200),
        v143,
        v159,
        v157,
        v155,
        v151,
        v153,
        v149,
        v148,
        v146,
        v144,
        v75,
        v24,
        v77,
        v166,
        v161,
        v165,
        v83,
        v4,
        v163,
        v168,
        v85,
        v87,
        v89,
        v91,
        v93,
        v95,
        v97,
        v99,
        v5,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v6,
        v109);
      v30 = *(_QWORD *)(a1 + 16);
      v31 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v23;
      *(_QWORD *)(a1 + 24) = v22;
      v32 = *(_QWORD *)(a1 + 32);
      v33 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v25;
      *(_QWORD *)(a1 + 40) = v26;
      v34 = *(_QWORD *)(a1 + 48);
      v35 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 48) = v27;
      *(_QWORD *)(a1 + 56) = v28;
      v36 = *(_QWORD *)(a1 + 64);
      v37 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 64) = v29;
      *(_QWORD *)(a1 + 72) = v133;
      v38 = *(_OWORD *)(a1 + 80);
      v39 = *(_OWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 80) = v131;
      *(_QWORD *)(a1 + 88) = v129;
      *(_QWORD *)(a1 + 96) = v127;
      *(_QWORD *)(a1 + 104) = v125;
      v40 = *(_OWORD *)(a1 + 112);
      v41 = *(_OWORD *)(a1 + 128);
      *(_QWORD *)(a1 + 112) = v123;
      *(_QWORD *)(a1 + 120) = v121;
      *(_QWORD *)(a1 + 128) = v119;
      *(_QWORD *)(a1 + 136) = v117;
      v42 = *(_OWORD *)(a1 + 144);
      v43 = *(_OWORD *)(a1 + 160);
      *(_QWORD *)(a1 + 144) = v115;
      *(_QWORD *)(a1 + 152) = v113;
      *(_QWORD *)(a1 + 160) = v169;
      *(_QWORD *)(a1 + 168) = v135;
      v44 = *(_OWORD *)(a1 + 176);
      v45 = *(_OWORD *)(a1 + 192);
      *(_OWORD *)(a1 + 176) = v137;
      *(_OWORD *)(a1 + 192) = v140;
      v46 = *(_OWORD *)(a1 + 208);
      v47 = *(_OWORD *)(a1 + 224);
      *(_QWORD *)(a1 + 208) = v143;
      *(_QWORD *)(a1 + 216) = v159;
      *(_QWORD *)(a1 + 224) = v157;
      *(_QWORD *)(a1 + 232) = v155;
      v48 = *(_OWORD *)(a1 + 240);
      v49 = *(_OWORD *)(a1 + 256);
      *(_QWORD *)(a1 + 240) = v151;
      *(_QWORD *)(a1 + 248) = v153;
      *(_QWORD *)(a1 + 256) = v149;
      *(_QWORD *)(a1 + 264) = v148;
      v50 = *(_OWORD *)(a1 + 272);
      v51 = *(_OWORD *)(a1 + 288);
      *(_QWORD *)(a1 + 272) = v146;
      *(_QWORD *)(a1 + 280) = v144;
      *(_QWORD *)(a1 + 288) = v75;
      *(_QWORD *)(a1 + 296) = v24;
      v52 = *(_OWORD *)(a1 + 304);
      v53 = *(_OWORD *)(a1 + 320);
      *(_QWORD *)(a1 + 304) = v77;
      *(_QWORD *)(a1 + 312) = v166;
      *(_QWORD *)(a1 + 320) = v161;
      *(_QWORD *)(a1 + 328) = v165;
      v54 = *(_OWORD *)(a1 + 336);
      v55 = *(_OWORD *)(a1 + 352);
      *(_QWORD *)(a1 + 336) = v83;
      *(_QWORD *)(a1 + 344) = v164;
      *(_QWORD *)(a1 + 352) = v163;
      *(_QWORD *)(a1 + 360) = v168;
      v56 = *(_OWORD *)(a1 + 368);
      v57 = *(_OWORD *)(a1 + 384);
      *(_QWORD *)(a1 + 368) = v85;
      *(_QWORD *)(a1 + 376) = v87;
      *(_QWORD *)(a1 + 384) = v89;
      *(_QWORD *)(a1 + 392) = v91;
      v58 = *(_OWORD *)(a1 + 400);
      v59 = *(_OWORD *)(a1 + 416);
      *(_QWORD *)(a1 + 400) = v93;
      *(_QWORD *)(a1 + 408) = v95;
      *(_QWORD *)(a1 + 416) = v97;
      *(_QWORD *)(a1 + 424) = v99;
      v60 = *(_OWORD *)(a1 + 432);
      v61 = *(_OWORD *)(a1 + 448);
      *(_QWORD *)(a1 + 432) = v172;
      *(_QWORD *)(a1 + 440) = v101;
      *(_QWORD *)(a1 + 448) = v102;
      *(_QWORD *)(a1 + 456) = v103;
      v62 = *(_OWORD *)(a1 + 464);
      v63 = *(_OWORD *)(a1 + 480);
      *(_QWORD *)(a1 + 464) = v104;
      *(_QWORD *)(a1 + 472) = v105;
      *(_QWORD *)(a1 + 480) = v106;
      *(_QWORD *)(a1 + 488) = v107;
      v64 = *(_OWORD *)(a1 + 496);
      v65 = *(_OWORD *)(a1 + 512);
      *(_QWORD *)(a1 + 496) = v108;
      *(_QWORD *)(a1 + 504) = v171;
      *(_QWORD *)(a1 + 512) = v109;
      *(_QWORD *)(a1 + 520) = v170;
      *(_QWORD *)(a1 + 528) = v111;
      *(_WORD *)(a1 + 536) = v167;
      sub_1C2FFE4B0(v30, v31, v32, v33, v34, v35, v36, v37, v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43,
        *((uint64_t *)&v43 + 1),
        v44,
        *((uint64_t *)&v44 + 1),
        v45,
        *((uint64_t *)&v45 + 1),
        v46,
        *((uint64_t *)&v46 + 1),
        v47,
        *((uint64_t *)&v47 + 1),
        v48,
        *((uint64_t *)&v48 + 1),
        v49,
        *((uint64_t *)&v49 + 1),
        v50,
        *((uint64_t *)&v50 + 1),
        v51,
        *((uint64_t *)&v51 + 1),
        v52,
        *((uint64_t *)&v52 + 1),
        v53,
        *((uint64_t *)&v53 + 1),
        v54,
        *((uint64_t *)&v54 + 1),
        v55,
        *((uint64_t *)&v55 + 1),
        v56,
        *((uint64_t *)&v56 + 1),
        v57,
        *((uint64_t *)&v57 + 1),
        v58,
        *((uint64_t *)&v58 + 1),
        v59,
        *((uint64_t *)&v59 + 1),
        v60,
        *((uint64_t *)&v60 + 1),
        v61,
        *((uint64_t *)&v61 + 1),
        v62,
        *((uint64_t *)&v62 + 1),
        v63,
        *((uint64_t *)&v63 + 1),
        v64,
        *((uint64_t *)&v64 + 1),
        v65);
      goto LABEL_38;
    }
    sub_1C3017F04(a1 + 16);
    goto LABEL_36;
  }
  if ((v13 & 1) != 0)
  {
LABEL_36:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x20AuLL);
    goto LABEL_38;
  }
  v136 = *(_QWORD *)(a2 + 80);
  v139 = *(_QWORD *)(a2 + 88);
  v138 = *(_QWORD *)(a2 + 96);
  v130 = *(_QWORD *)(a2 + 104);
  v134 = *(_QWORD *)(a2 + 112);
  v132 = *(_QWORD *)(a2 + 120);
  v124 = *(_QWORD *)(a2 + 128);
  v128 = *(_QWORD *)(a2 + 136);
  v126 = *(_QWORD *)(a2 + 144);
  v122 = *(_QWORD *)(a2 + 152);
  v141 = *(_QWORD *)(a2 + 168);
  v142 = *(_OWORD *)(a2 + 176);
  v145 = *(_QWORD *)(a2 + 192);
  v160 = *(_QWORD *)(a2 + 200);
  v147 = *(_OWORD *)(a2 + 208);
  v156 = *(_QWORD *)(a2 + 232);
  v158 = *(_QWORD *)(a2 + 224);
  v152 = *(_QWORD *)(a2 + 248);
  v154 = *(_QWORD *)(a2 + 240);
  v150 = *(_QWORD *)(a2 + 256);
  v70 = *(_QWORD *)(a2 + 264);
  v71 = *(_QWORD *)(a2 + 272);
  v72 = *(_QWORD *)(a2 + 280);
  v73 = *(_QWORD *)(a2 + 288);
  v74 = *(_QWORD *)(a2 + 296);
  v76 = *(_QWORD *)(a2 + 304);
  v78 = *(_QWORD *)(a2 + 320);
  v162 = *(_QWORD *)(a2 + 336);
  v79 = *(_QWORD *)(a2 + 352);
  v80 = *(_QWORD *)(a2 + 368);
  v81 = *(_QWORD *)(a2 + 376);
  v82 = *(_QWORD *)(a2 + 384);
  v84 = *(_QWORD *)(a2 + 392);
  v86 = *(_QWORD *)(a2 + 400);
  v88 = *(_QWORD *)(a2 + 408);
  v90 = *(_QWORD *)(a2 + 416);
  v92 = *(_QWORD *)(a2 + 424);
  v94 = *(_QWORD *)(a2 + 440);
  v96 = *(_QWORD *)(a2 + 448);
  v98 = *(_QWORD *)(a2 + 456);
  v100 = *(_QWORD *)(a2 + 464);
  v110 = *(_QWORD *)(a2 + 472);
  v112 = *(_QWORD *)(a2 + 480);
  v114 = *(_QWORD *)(a2 + 488);
  v116 = *(_QWORD *)(a2 + 496);
  v118 = *(_QWORD *)(a2 + 512);
  v120 = *(_QWORD *)(a2 + 528);
  v14 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 32);
  v17 = *(_QWORD *)(a2 + 40);
  v18 = *(_QWORD *)(a2 + 48);
  v19 = *(_QWORD *)(a2 + 56);
  v20 = *(_QWORD *)(a2 + 64);
  v21 = *(_QWORD *)(a2 + 72);
  sub_1C2FFD5C0(v14, v15, v16, v17, v18, v19, v20, v21, v136, v139, v138, v130, v134, v132, v124, v128, v126, v122, v169,
    v141,
    *(_QWORD *)(a2 + 176),
    *(_QWORD *)(a2 + 184),
    v145,
    v160,
    *(_QWORD *)(a2 + 208),
    *(_QWORD *)(a2 + 216),
    v158,
    v156,
    v154,
    v152,
    v150,
    v70,
    v71,
    v72,
    v73,
    v74,
    v76,
    v166,
    v78,
    v165,
    v162,
    v4,
    v79,
    v168,
    v80,
    v81,
    v82,
    v84,
    v86,
    v88,
    v90,
    v92,
    v5,
    v94,
    v96,
    v98,
    v100,
    v110,
    v112,
    v114,
    v116,
    v6,
    v118);
  *(_QWORD *)(a1 + 16) = v14;
  *(_QWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v17;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v19;
  *(_QWORD *)(a1 + 64) = v20;
  *(_QWORD *)(a1 + 72) = v21;
  *(_QWORD *)(a1 + 80) = v136;
  *(_QWORD *)(a1 + 88) = v139;
  *(_QWORD *)(a1 + 96) = v138;
  *(_QWORD *)(a1 + 104) = v130;
  *(_QWORD *)(a1 + 112) = v134;
  *(_QWORD *)(a1 + 120) = v132;
  *(_QWORD *)(a1 + 128) = v124;
  *(_QWORD *)(a1 + 136) = v128;
  *(_QWORD *)(a1 + 144) = v126;
  *(_QWORD *)(a1 + 152) = v122;
  *(_QWORD *)(a1 + 160) = v169;
  *(_QWORD *)(a1 + 168) = v141;
  *(_OWORD *)(a1 + 176) = v142;
  *(_QWORD *)(a1 + 192) = v145;
  *(_QWORD *)(a1 + 200) = v160;
  *(_OWORD *)(a1 + 208) = v147;
  *(_QWORD *)(a1 + 224) = v158;
  *(_QWORD *)(a1 + 232) = v156;
  *(_QWORD *)(a1 + 240) = v154;
  *(_QWORD *)(a1 + 248) = v152;
  *(_QWORD *)(a1 + 256) = v150;
  *(_QWORD *)(a1 + 264) = v70;
  *(_QWORD *)(a1 + 272) = v71;
  *(_QWORD *)(a1 + 280) = v72;
  *(_QWORD *)(a1 + 288) = v73;
  *(_QWORD *)(a1 + 296) = v74;
  *(_QWORD *)(a1 + 304) = v76;
  *(_QWORD *)(a1 + 312) = v166;
  *(_QWORD *)(a1 + 320) = v78;
  *(_QWORD *)(a1 + 328) = v165;
  *(_QWORD *)(a1 + 336) = v162;
  *(_QWORD *)(a1 + 344) = v164;
  *(_QWORD *)(a1 + 352) = v79;
  *(_QWORD *)(a1 + 360) = v168;
  *(_QWORD *)(a1 + 368) = v80;
  *(_QWORD *)(a1 + 376) = v81;
  *(_QWORD *)(a1 + 384) = v82;
  *(_QWORD *)(a1 + 392) = v84;
  *(_QWORD *)(a1 + 400) = v86;
  *(_QWORD *)(a1 + 408) = v88;
  *(_QWORD *)(a1 + 416) = v90;
  *(_QWORD *)(a1 + 424) = v92;
  *(_QWORD *)(a1 + 432) = v172;
  *(_QWORD *)(a1 + 440) = v94;
  *(_QWORD *)(a1 + 448) = v96;
  *(_QWORD *)(a1 + 456) = v98;
  *(_QWORD *)(a1 + 464) = v100;
  *(_QWORD *)(a1 + 472) = v110;
  *(_QWORD *)(a1 + 480) = v112;
  *(_QWORD *)(a1 + 488) = v114;
  *(_QWORD *)(a1 + 496) = v116;
  *(_QWORD *)(a1 + 504) = v171;
  *(_QWORD *)(a1 + 512) = v118;
  *(_QWORD *)(a1 + 520) = v170;
  *(_QWORD *)(a1 + 528) = v120;
  *(_WORD *)(a1 + 536) = v167;
LABEL_38:
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 640) = *v173;
  *(_BYTE *)(a1 + 641) = v173[1];
  *(_BYTE *)(a1 + 642) = v173[2];
  *(_BYTE *)(a1 + 643) = v173[3];
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66 = *(_QWORD *)(a2 + 728);
  *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
  *(_QWORD *)(a1 + 728) = v66;
  v67 = *(_QWORD *)(a2 + 744);
  *(_BYTE *)(a1 + 752) = *(_BYTE *)(a2 + 752);
  *(_QWORD *)(a1 + 744) = v67;
  v68 = *(_QWORD *)(a2 + 760);
  *(_BYTE *)(a1 + 768) = *(_BYTE *)(a2 + 768);
  *(_QWORD *)(a1 + 760) = v68;
  return a1;
}

uint64_t assignWithTake for TerminalElement.MatchingSpan(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int16 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v4 = a2 + 264;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a1 + 160);
  v7 = *(_QWORD *)(a1 + 312);
  v8 = *(_QWORD *)(a1 + 328);
  v9 = *(_QWORD *)(a1 + 344);
  v10 = *(_QWORD *)(a1 + 360);
  v11 = *(_QWORD *)(a1 + 432);
  v12 = *(_QWORD *)(a1 + 504);
  v13 = *(_QWORD *)(a2 + 160);
  v14 = *(_QWORD *)(a2 + 312);
  v15 = *(_QWORD *)(a2 + 328);
  v16 = *(_QWORD *)(a2 + 344);
  v17 = *(_QWORD *)(a2 + 360);
  v18 = *(_QWORD *)(a2 + 432);
  v19 = *(_QWORD *)(a2 + 504);
  v20 = *(_QWORD *)(a2 + 520);
  v21 = *(_WORD *)(a2 + 536);
  if (*(_QWORD *)(a1 + 520) > 1uLL
    || (v6 & 0xFFFFFFFFFFFFFF00) != 0xFFFFFFFF00
    || v7 > 0xFF
    || v8 >> 16
    || HIDWORD(v9)
    || v10 >> 16
    || (v12 | (unint64_t)v11) >> 24
    || (*(_WORD *)(a1 + 536) & 0xFE) != 0)
  {
    if (v20 > 1
      || (v13 & 0xFFFFFFFFFFFFFF00) != 0xFFFFFFFF00
      || v14 > 0xFF
      || v15 >> 16
      || HIDWORD(v16)
      || v17 >> 16
      || (v19 | v18) >> 24
      || (v21 & 0xFE) != 0)
    {
      v77 = *(_QWORD *)(a1 + 24);
      v78 = *(_QWORD *)(a1 + 16);
      v75 = *(_QWORD *)(a1 + 40);
      v76 = *(_QWORD *)(a1 + 32);
      v73 = *(_QWORD *)(a1 + 56);
      v74 = *(_QWORD *)(a1 + 48);
      v71 = *(_QWORD *)(a1 + 72);
      v72 = *(_QWORD *)(a1 + 64);
      v22 = *(_OWORD *)(a1 + 80);
      v23 = *(_OWORD *)(a1 + 96);
      v24 = *(_OWORD *)(a1 + 112);
      v25 = *(_OWORD *)(a1 + 128);
      v26 = *(_QWORD *)(a1 + 152);
      v70 = *(_QWORD *)(a1 + 144);
      v27 = *(_OWORD *)(a1 + 168);
      v28 = *(_OWORD *)(a1 + 184);
      v29 = *(_OWORD *)(a1 + 200);
      v30 = *(_OWORD *)(a1 + 216);
      v31 = *(_OWORD *)(a1 + 232);
      v32 = *(_OWORD *)(a1 + 248);
      v33 = *(_OWORD *)(a1 + 264);
      v34 = *(_OWORD *)(a1 + 280);
      v36 = *(_QWORD *)(a1 + 296);
      v35 = *(_QWORD *)(a1 + 304);
      v37 = *(_OWORD *)(a1 + 368);
      v38 = *(_OWORD *)(a1 + 384);
      v39 = *(_OWORD *)(a1 + 400);
      v41 = *(_QWORD *)(a1 + 416);
      v40 = *(_QWORD *)(a1 + 424);
      v42 = *(_OWORD *)(a1 + 440);
      v43 = *(_OWORD *)(a1 + 456);
      v44 = *(_OWORD *)(a1 + 472);
      v46 = *(_QWORD *)(a1 + 488);
      v45 = *(_QWORD *)(a1 + 496);
      v47 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v47;
      v48 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v48;
      v49 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v49;
      v50 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v50;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      v51 = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      v52 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 216) = v51;
      v53 = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 232) = v52;
      *(_OWORD *)(a1 + 248) = v53;
      v54 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(a1 + 264) = *(_OWORD *)v4;
      *(_OWORD *)(a1 + 280) = v54;
      *(_OWORD *)(a1 + 296) = *(_OWORD *)(v4 + 32);
      v55 = *(_OWORD *)(a2 + 384);
      *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
      *(_OWORD *)(a1 + 384) = v55;
      v56 = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 416) = v56;
      v57 = *(_OWORD *)(v4 + 192);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(v4 + 176);
      *(_OWORD *)(a1 + 456) = v57;
      v58 = *(_OWORD *)(v4 + 224);
      *(_OWORD *)(a1 + 472) = *(_OWORD *)(v4 + 208);
      *(_OWORD *)(a1 + 488) = v58;
      v59 = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 160) = v13;
      v60 = *(_QWORD *)(a1 + 320);
      *(_QWORD *)(a1 + 312) = v14;
      *(_QWORD *)(a1 + 320) = v59;
      v61 = *(_QWORD *)(a2 + 336);
      v62 = *(_QWORD *)(a1 + 336);
      *(_QWORD *)(a1 + 328) = v15;
      *(_QWORD *)(a1 + 336) = v61;
      v63 = *(_QWORD *)(a2 + 352);
      v64 = *(_QWORD *)(a1 + 352);
      *(_QWORD *)(a1 + 344) = v16;
      *(_QWORD *)(a1 + 352) = v63;
      *(_QWORD *)(a1 + 360) = v17;
      v65 = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 432) = v18;
      v66 = *(_QWORD *)(a1 + 512);
      *(_QWORD *)(a1 + 504) = v19;
      *(_QWORD *)(a1 + 512) = v65;
      v67 = *(_QWORD *)(a2 + 528);
      *(_QWORD *)(a1 + 520) = v20;
      *(_QWORD *)(a1 + 528) = v67;
      *(_WORD *)(a1 + 536) = v21;
      sub_1C2FFE4B0(v78, v77, v76, v75, v74, v73, v72, v71, v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v70, v26, v6,
        v27,
        *((uint64_t *)&v27 + 1),
        v28,
        *((uint64_t *)&v28 + 1),
        v29,
        *((uint64_t *)&v29 + 1),
        v30,
        *((uint64_t *)&v30 + 1),
        v31,
        *((uint64_t *)&v31 + 1),
        v32,
        *((uint64_t *)&v32 + 1),
        v33,
        *((uint64_t *)&v33 + 1),
        v34,
        *((uint64_t *)&v34 + 1),
        v36,
        v35,
        v7,
        v60,
        v8,
        v62,
        v9,
        v64,
        v10,
        v37,
        *((uint64_t *)&v37 + 1),
        v38,
        *((uint64_t *)&v38 + 1),
        v39,
        *((uint64_t *)&v39 + 1),
        v41,
        v40,
        v11,
        v42,
        *((uint64_t *)&v42 + 1),
        v43,
        *((uint64_t *)&v43 + 1),
        v44,
        *((uint64_t *)&v44 + 1),
        v46,
        v45,
        v12,
        v66);
      goto LABEL_20;
    }
    sub_1C3017F04(a1 + 16);
  }
  memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x20AuLL);
LABEL_20:
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  swift_release();
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  swift_release();
  v68 = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 608) = v68;
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_BYTE *)(a1 + 640) = *(_BYTE *)(v4 + 376);
  *(_BYTE *)(a1 + 641) = *(_BYTE *)(v4 + 377);
  *(_BYTE *)(a1 + 642) = *(_BYTE *)(v4 + 378);
  *(_BYTE *)(a1 + 643) = *(_BYTE *)(v4 + 379);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_BYTE *)(a1 + 752) = *(_BYTE *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_BYTE *)(a1 + 768) = *(_BYTE *)(a2 + 768);
  return a1;
}

uint64_t getEnumTagSinglePayload for TerminalElement.MatchingSpan(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 769))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 696);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TerminalElement.MatchingSpan(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 760) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_BYTE *)(result + 768) = 0;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 769) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 696) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 769) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TerminalElement.MatchingSpan()
{
  return &type metadata for TerminalElement.MatchingSpan;
}

uint64_t getEnumTagSinglePayload for TerminalElement.MatchType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TerminalElement.MatchType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1C301F288 + 4 * byte_1C3388FEC[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1C301F2BC + 4 * byte_1C3388FE7[v4]))();
}

uint64_t sub_1C301F2BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C301F2C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C301F2CCLL);
  return result;
}

uint64_t sub_1C301F2D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C301F2E0);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1C301F2E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C301F2EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TerminalElement.MatchType()
{
  return &type metadata for TerminalElement.MatchType;
}

uint64_t destroy for SpanProperty()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s12SiriOntology15TerminalElementV13SemanticValueVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s12SiriOntology15TerminalElementV13SemanticValueVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s12SiriOntology15TerminalElementV13SemanticValueVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TerminalElement.AdjustmentReason(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TerminalElement.AdjustmentReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TerminalElement.AdjustmentReason()
{
  return &type metadata for TerminalElement.AdjustmentReason;
}

uint64_t destroy for TerminalElement.OriginalValue()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s12SiriOntology15TerminalElementV13OriginalValueVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TerminalElement.OriginalValue(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TerminalElement.OriginalValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TerminalElement.OriginalValue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TerminalElement.OriginalValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TerminalElement.OriginalValue()
{
  return &type metadata for TerminalElement.OriginalValue;
}

uint64_t method lookup function for AnyMatchingSpan()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnyMatchingSpan.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_1C301F65C()
{
  unint64_t result;

  result = qword_1EF807898[0];
  if (!qword_1EF807898[0])
  {
    result = MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEDCA0], MEMORY[0x1E0DEDC60]);
    atomic_store(result, qword_1EF807898);
  }
  return result;
}

unint64_t sub_1C301F6A0()
{
  unint64_t result;

  result = qword_1EF819698;
  if (!qword_1EF819698)
  {
    result = MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EF819698);
  }
  return result;
}

uint64_t sub_1C301F6E4(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1C301F6FC(result, a2, a3 & 1);
  return result;
}

uint64_t sub_1C301F6FC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1C301F70C(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1C301F724(result, a2, a3 & 1);
  return result;
}

uint64_t sub_1C301F724(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1C301F734(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_1C301F784(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[8];
  v3 = a1[9];
  sub_1C301F810(*a1, a1[1]);
  sub_1C301F810(v2, v3);
  return a1;
}

uint64_t sub_1C301F810(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C301F860(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1C3BD1B4C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

#error "1C301FB8C: call analysis failed (funcsize=298)"

uint64_t sub_1C301FD48(uint64_t a1)
{
  unsigned int v1;

  v1 = *(_DWORD *)(a1 + 538);
  if (v1 > 0x80000000)
    return -v1;
  else
    return 0;
}

#error "1C302005C: call analysis failed (funcsize=302)"

uint64_t sub_1C302021C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v54 = *(_QWORD *)(a1 + 528);
  v2 = *(_QWORD *)(a1 + 536);
  v3 = *(_QWORD *)(a1 + 544);
  v4 = *(_QWORD *)(a1 + 552);
  v5 = *(_QWORD *)(a1 + 560);
  v6 = *(_QWORD *)(a1 + 568);
  v7 = *(_QWORD *)(a1 + 576);
  v8 = *(_QWORD *)(a1 + 584);
  v53 = *(_OWORD *)(a1 + 592);
  v52 = *(_OWORD *)(a1 + 608);
  v51 = *(_OWORD *)(a1 + 624);
  v50 = *(_OWORD *)(a1 + 640);
  v49 = *(_OWORD *)(a1 + 656);
  v48 = *(_OWORD *)(a1 + 672);
  v47 = *(_OWORD *)(a1 + 688);
  v46 = *(_OWORD *)(a1 + 704);
  v45 = *(_OWORD *)(a1 + 720);
  v44 = *(_OWORD *)(a1 + 736);
  v43 = *(_OWORD *)(a1 + 752);
  v42 = *(_OWORD *)(a1 + 768);
  v41 = *(_OWORD *)(a1 + 784);
  v40 = *(_OWORD *)(a1 + 800);
  v39 = *(_OWORD *)(a1 + 816);
  v38 = *(_OWORD *)(a1 + 832);
  v37 = *(_OWORD *)(a1 + 848);
  v36 = *(_OWORD *)(a1 + 864);
  v35 = *(_OWORD *)(a1 + 880);
  v34 = *(_OWORD *)(a1 + 896);
  v33 = *(_OWORD *)(a1 + 912);
  v32 = *(_OWORD *)(a1 + 928);
  v31 = *(_OWORD *)(a1 + 944);
  v30 = *(_OWORD *)(a1 + 960);
  v29 = *(_OWORD *)(a1 + 976);
  v28 = *(_OWORD *)(a1 + 992);
  v27 = *(_OWORD *)(a1 + 1008);
  v26 = *(_OWORD *)(a1 + 1024);
  v25 = *(_OWORD *)(a1 + 480);
  v23 = *(_OWORD *)(a1 + 448);
  v24 = *(_OWORD *)(a1 + 464);
  v21 = *(_OWORD *)(a1 + 416);
  v22 = *(_OWORD *)(a1 + 432);
  v19 = *(_OWORD *)(a1 + 384);
  v20 = *(_OWORD *)(a1 + 400);
  v17 = *(_OWORD *)(a1 + 352);
  v18 = *(_OWORD *)(a1 + 368);
  v15 = *(_OWORD *)(a1 + 320);
  v16 = *(_OWORD *)(a1 + 336);
  v13 = *(_OWORD *)(a1 + 288);
  v14 = *(_OWORD *)(a1 + 304);
  v11 = *(_OWORD *)(a1 + 256);
  v12 = *(_OWORD *)(a1 + 272);
  v10 = *(_OWORD *)(a1 + 224);
  sub_1C2FFE4B0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v10,
    *((uint64_t *)&v10 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    *(_QWORD *)(a1 + 496));
  sub_1C2FFE4B0(v54, v2, v3, v4, v5, v6, v7, v8, v53, *((uint64_t *)&v53 + 1), v52, *((uint64_t *)&v52 + 1), v51, *((uint64_t *)&v51 + 1), v50, *((uint64_t *)&v50 + 1), v49, *((uint64_t *)&v49 + 1), v48,
    *((uint64_t *)&v48 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v26);
  return a1;
}

#error "1C302085C: call analysis failed (funcsize=316)"

#error "1C3020C5C: call analysis failed (funcsize=258)"

#error "1C302106C: call analysis failed (funcsize=258)"

uint64_t LandmarkIntentNode.intentNode.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t LandmarkIntentNode.ontologyNode.getter()
{
  return swift_retain();
}

__n128 LandmarkIntentNode.init(intentNode:ontologyNode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a3 = *(_QWORD *)a1;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(a3 + 24) = v3;
  *(_QWORD *)(a3 + 32) = a2;
  return result;
}

uint64_t static LandmarkIntentNode.from(intentNode:ontologyNode:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  *a3 = *a1;
  a3[1] = v3;
  a3[2] = v4;
  a3[3] = v5;
  a3[4] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1C3021304@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C302133C()
{
  return swift_retain();
}

uint64_t sub_1C3021344@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  *a3 = *a1;
  a3[1] = v3;
  a3[2] = v4;
  a3[3] = v5;
  a3[4] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t LandmarkIntentNodeContaining.venue.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C30213D4(a1, a2);
}

uint64_t LandmarkIntentNodeContaining.airport.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C30213D4(a1, a2);
}

uint64_t LandmarkIntentNodeContaining.theater.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C30213D4(a1, a2);
}

uint64_t LandmarkIntentNodeContaining.business.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C30213D4(a1, a2);
}

uint64_t LandmarkIntentNodeContaining.poi.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C30213D4(a1, a2);
}

uint64_t sub_1C30213D4(uint64_t a1, uint64_t a2)
{
  uint64_t *inited;
  uint64_t v5;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E8);
  inited = (uint64_t *)swift_initStaticObject();
  IntentNodeTraversable.value<A>(forNode:)(inited, a1, *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8), v5, (uint64_t)&v7);
  return v7;
}

uint64_t destroy for LandmarkIntentNode()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for LandmarkIntentNode(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for LandmarkIntentNode(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LandmarkIntentNode(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Name(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Name(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LandmarkIntentNode()
{
  return &type metadata for LandmarkIntentNode;
}

uint64_t static UsoEntitySpanUtils.MAX_GROUP_COMBINATIONS.getter()
{
  return 128;
}

uint64_t static UsoEntitySpanUtils.ASR_ALTERNATIVE_KEY.getter()
{
  return 0x65746C615F727361;
}

uint64_t static UsoEntitySpanUtils.DEFAULT_VALUE_FOR_IDENTIFIER.getter()
{
  return 0;
}

uint64_t static UsoEntitySpanUtils.IDENTIFIER_APP_ID_TO_SKIP.getter()
{
  return 0x736E656B6F54;
}

uint64_t static UsoEntitySpanUtils.IDENTIFIER_ITEM_ID_NAMESPACE.getter()
{
  return 0x64695F6D657469;
}

uint64_t static UsoEntitySpanUtils.getGroupedEntitySpans(spans:maxGroups:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  BOOL v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  BOOL v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _OWORD v93[2];
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _OWORD v104[2];
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  _OWORD v115[3];
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  _OWORD v126[3];

  v2 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v7 = (char *)MEMORY[0x1E0DEE9D8];
    v6 = (char *)MEMORY[0x1E0DEE9D8];
    goto LABEL_50;
  }
  v4 = a1 + 32;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (char *)MEMORY[0x1E0DEE9D8];
  v7 = (char *)MEMORY[0x1E0DEE9D8];
  v80 = v3;
  v81 = v4;
  do
  {
    v18 = (__int128 *)(v4 + 192 * v5);
    v19 = v18[9];
    v124 = v18[8];
    v125 = v19;
    v126[0] = v18[10];
    *(_OWORD *)((char *)v126 + 9) = *(__int128 *)((char *)v18 + 169);
    v20 = v18[5];
    v120 = v18[4];
    v121 = v20;
    v21 = v18[7];
    v122 = v18[6];
    v123 = v21;
    v22 = v18[1];
    v116 = *v18;
    v117 = v22;
    v23 = v18[3];
    v118 = v18[2];
    v119 = v23;
    if ((BYTE4(v124) & 1) == 0 && BYTE12(v124) != 1)
    {
      v24 = *((_QWORD *)&v123 + 1);
      v25 = *(_QWORD *)(*((_QWORD *)&v123 + 1) + 16);
      if (v25)
      {
        v82 = v7;
        swift_bridgeObjectRetain();
        sub_1C3029868((uint64_t)&v116);
        swift_bridgeObjectRetain();
        v26 = v24 + 56;
        while (1)
        {
          v28 = *(_QWORD *)(v26 - 24);
          v27 = *(_QWORD *)(v26 - 16);
          if (v28 == sub_1C3378BF0() && v27 == v29)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_31;
          }
          v31 = sub_1C3379184();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if ((v31 & 1) != 0)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_31;
          }
          if (v28 == sub_1C3378BF0() && v27 == v32)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_31;
          }
          v33 = sub_1C3379184();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v33 & 1) != 0)
            break;
          v26 += 48;
          if (!--v25)
          {
            swift_bridgeObjectRelease_n();
            v7 = v82;
            v3 = v80;
            goto LABEL_21;
          }
        }
        swift_bridgeObjectRelease();
LABEL_31:
        v3 = v80;
        swift_bridgeObjectRelease();
        v7 = v82;
        v53 = *((_QWORD *)v82 + 2);
        if (!v53)
          goto LABEL_38;
        swift_bridgeObjectRetain();
        v54 = *((_OWORD *)v82 + 11);
        v113 = *((_OWORD *)v82 + 10);
        v114 = v54;
        v115[0] = *((_OWORD *)v82 + 12);
        *(_OWORD *)((char *)v115 + 9) = *(_OWORD *)(v82 + 201);
        v55 = *((_OWORD *)v82 + 7);
        v109 = *((_OWORD *)v82 + 6);
        v110 = v55;
        v56 = *((_OWORD *)v82 + 9);
        v111 = *((_OWORD *)v82 + 8);
        v112 = v56;
        v57 = *((_OWORD *)v82 + 3);
        v105 = *((_OWORD *)v82 + 2);
        v106 = v57;
        v58 = *((_OWORD *)v82 + 5);
        v107 = *((_OWORD *)v82 + 4);
        v108 = v58;
        v102 = v113;
        v103 = v114;
        v104[0] = v115[0];
        *(_OWORD *)((char *)v104 + 9) = *(_OWORD *)((char *)v115 + 9);
        v98 = v109;
        v99 = v110;
        v100 = v111;
        v101 = v112;
        v94 = v105;
        v95 = v106;
        v96 = v107;
        v97 = v58;
        v91 = v124;
        v92 = v125;
        v93[0] = v126[0];
        *(_OWORD *)((char *)v93 + 9) = *(_OWORD *)((char *)v126 + 9);
        v87 = v120;
        v88 = v121;
        v89 = v122;
        v90 = v123;
        v83 = v116;
        v84 = v117;
        v85 = v118;
        v86 = v119;
        if (!_s12SiriOntology13UsoEntitySpanV2eeoiySbAC_ACtFZ_0((uint64_t)&v94, (uint64_t)&v83))
        {
          v59 = 224;
          while (--v53)
          {
            v60 = v59 + 192;
            v61 = &v82[v59];
            v62 = *(_OWORD *)v61;
            v63 = *((_OWORD *)v61 + 1);
            v64 = *((_OWORD *)v61 + 3);
            v107 = *((_OWORD *)v61 + 2);
            v108 = v64;
            v105 = v62;
            v106 = v63;
            v65 = *((_OWORD *)v61 + 4);
            v66 = *((_OWORD *)v61 + 5);
            v67 = *((_OWORD *)v61 + 7);
            v111 = *((_OWORD *)v61 + 6);
            v112 = v67;
            v109 = v65;
            v110 = v66;
            v68 = *((_OWORD *)v61 + 8);
            v69 = *((_OWORD *)v61 + 9);
            v70 = *((_OWORD *)v61 + 10);
            *(_OWORD *)((char *)v115 + 9) = *(_OWORD *)(v61 + 169);
            v114 = v69;
            v115[0] = v70;
            v113 = v68;
            v102 = v68;
            v103 = v69;
            v104[0] = v70;
            *(_OWORD *)((char *)v104 + 9) = *(_OWORD *)((char *)v115 + 9);
            v98 = v109;
            v99 = v110;
            v100 = v111;
            v101 = v67;
            v94 = v105;
            v95 = v106;
            v96 = v107;
            v97 = v108;
            v91 = v124;
            v92 = v125;
            v93[0] = v126[0];
            *(_OWORD *)((char *)v93 + 9) = *(_OWORD *)((char *)v126 + 9);
            v87 = v120;
            v88 = v121;
            v89 = v122;
            v90 = v123;
            v83 = v116;
            v84 = v117;
            v85 = v118;
            v86 = v119;
            v71 = _s12SiriOntology13UsoEntitySpanV2eeoiySbAC_ACtFZ_0((uint64_t)&v94, (uint64_t)&v83);
            v59 = v60;
            if (v71)
              goto LABEL_36;
          }
          swift_bridgeObjectRelease();
LABEL_38:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v7 = sub_1C30243F0(0, *((_QWORD *)v82 + 2) + 1, 1, v82);
          v73 = *((_QWORD *)v7 + 2);
          v72 = *((_QWORD *)v7 + 3);
          if (v73 >= v72 >> 1)
            v7 = sub_1C30243F0((char *)(v72 > 1), v73 + 1, 1, v7);
          *((_QWORD *)v7 + 2) = v73 + 1;
          v8 = &v7[192 * v73];
LABEL_4:
          v9 = v116;
          v10 = v117;
          v11 = v119;
          *((_OWORD *)v8 + 4) = v118;
          *((_OWORD *)v8 + 5) = v11;
          *((_OWORD *)v8 + 2) = v9;
          *((_OWORD *)v8 + 3) = v10;
          v12 = v120;
          v13 = v121;
          v14 = v123;
          *((_OWORD *)v8 + 8) = v122;
          *((_OWORD *)v8 + 9) = v14;
          *((_OWORD *)v8 + 6) = v12;
          *((_OWORD *)v8 + 7) = v13;
          v15 = v124;
          v16 = v125;
          v17 = v126[0];
          *(_OWORD *)(v8 + 201) = *(_OWORD *)((char *)v126 + 9);
          *((_OWORD *)v8 + 11) = v16;
          *((_OWORD *)v8 + 12) = v17;
          *((_OWORD *)v8 + 10) = v15;
          v4 = v81;
          goto LABEL_5;
        }
      }
      else
      {
        sub_1C3029868((uint64_t)&v116);
LABEL_21:
        v34 = *((_QWORD *)v6 + 2);
        if (!v34)
          goto LABEL_43;
        swift_bridgeObjectRetain();
        v35 = *((_OWORD *)v6 + 11);
        v113 = *((_OWORD *)v6 + 10);
        v114 = v35;
        v115[0] = *((_OWORD *)v6 + 12);
        *(_OWORD *)((char *)v115 + 9) = *(_OWORD *)(v6 + 201);
        v36 = *((_OWORD *)v6 + 7);
        v109 = *((_OWORD *)v6 + 6);
        v110 = v36;
        v37 = *((_OWORD *)v6 + 9);
        v111 = *((_OWORD *)v6 + 8);
        v112 = v37;
        v38 = *((_OWORD *)v6 + 3);
        v105 = *((_OWORD *)v6 + 2);
        v106 = v38;
        v39 = *((_OWORD *)v6 + 5);
        v107 = *((_OWORD *)v6 + 4);
        v108 = v39;
        v102 = v113;
        v103 = v114;
        v104[0] = v115[0];
        *(_OWORD *)((char *)v104 + 9) = *(_OWORD *)((char *)v115 + 9);
        v98 = v109;
        v99 = v110;
        v100 = v111;
        v101 = v112;
        v94 = v105;
        v95 = v106;
        v96 = v107;
        v97 = v39;
        v91 = v124;
        v92 = v125;
        v93[0] = v126[0];
        *(_OWORD *)((char *)v93 + 9) = *(_OWORD *)((char *)v126 + 9);
        v87 = v120;
        v88 = v121;
        v89 = v122;
        v90 = v123;
        v83 = v116;
        v84 = v117;
        v85 = v118;
        v86 = v119;
        if (!_s12SiriOntology13UsoEntitySpanV2eeoiySbAC_ACtFZ_0((uint64_t)&v94, (uint64_t)&v83))
        {
          v40 = 224;
          while (--v34)
          {
            v41 = v40 + 192;
            v42 = &v6[v40];
            v43 = *(_OWORD *)v42;
            v44 = *((_OWORD *)v42 + 1);
            v45 = *((_OWORD *)v42 + 3);
            v107 = *((_OWORD *)v42 + 2);
            v108 = v45;
            v105 = v43;
            v106 = v44;
            v46 = *((_OWORD *)v42 + 4);
            v47 = *((_OWORD *)v42 + 5);
            v48 = *((_OWORD *)v42 + 7);
            v111 = *((_OWORD *)v42 + 6);
            v112 = v48;
            v109 = v46;
            v110 = v47;
            v49 = *((_OWORD *)v42 + 8);
            v50 = *((_OWORD *)v42 + 9);
            v51 = *((_OWORD *)v42 + 10);
            *(_OWORD *)((char *)v115 + 9) = *(_OWORD *)(v42 + 169);
            v114 = v50;
            v115[0] = v51;
            v113 = v49;
            v102 = v49;
            v103 = v50;
            v104[0] = v51;
            *(_OWORD *)((char *)v104 + 9) = *(_OWORD *)((char *)v115 + 9);
            v98 = v109;
            v99 = v110;
            v100 = v111;
            v101 = v48;
            v94 = v105;
            v95 = v106;
            v96 = v107;
            v97 = v108;
            v91 = v124;
            v92 = v125;
            v93[0] = v126[0];
            *(_OWORD *)((char *)v93 + 9) = *(_OWORD *)((char *)v126 + 9);
            v87 = v120;
            v88 = v121;
            v89 = v122;
            v90 = v123;
            v83 = v116;
            v84 = v117;
            v85 = v118;
            v86 = v119;
            v52 = _s12SiriOntology13UsoEntitySpanV2eeoiySbAC_ACtFZ_0((uint64_t)&v94, (uint64_t)&v83);
            v40 = v41;
            if (v52)
              goto LABEL_36;
          }
          swift_bridgeObjectRelease();
LABEL_43:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v6 = sub_1C30243F0(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
          v75 = *((_QWORD *)v6 + 2);
          v74 = *((_QWORD *)v6 + 3);
          if (v75 >= v74 >> 1)
            v6 = sub_1C30243F0((char *)(v74 > 1), v75 + 1, 1, v6);
          *((_QWORD *)v6 + 2) = v75 + 1;
          v8 = &v6[192 * v75];
          goto LABEL_4;
        }
      }
LABEL_36:
      swift_bridgeObjectRelease();
      sub_1C30298D8((uint64_t)&v116);
      v4 = v81;
    }
LABEL_5:
    ++v5;
  }
  while (v5 != v3);
  swift_bridgeObjectRelease();
  v2 = a2;
LABEL_50:
  *(_QWORD *)&v116 = v6;
  swift_bridgeObjectRetain();
  sub_1C3026264((char **)&v116);
  swift_bridgeObjectRelease();
  v76 = sub_1C3021E7C(v116, v2);
  swift_release();
  v77 = sub_1C3029458((uint64_t)v7, v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v77;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> static UsoEntitySpanUtils.sortByStart(_:)()
{
  char *v0;

  swift_bridgeObjectRetain();
  sub_1C3026264(&v0);
}

uint64_t sub_1C3021E7C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 *v25;
  _OWORD v26[2];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[2];
  uint64_t v36;

  result = MEMORY[0x1E0DEE9D8];
  v36 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = 0;
    v7 = 32;
    do
    {
      ++v6;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CEF38);
      v8 = (__int128 *)swift_allocObject();
      v9 = *(_OWORD *)(a1 + v7 + 144);
      v11 = *(_OWORD *)(a1 + v7 + 112);
      v33 = *(_OWORD *)(a1 + v7 + 128);
      v10 = v33;
      v34 = v9;
      v12 = *(_OWORD *)(a1 + v7 + 144);
      v35[0] = *(_OWORD *)(a1 + v7 + 160);
      *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)(a1 + v7 + 169);
      v13 = *(_OWORD *)(a1 + v7 + 80);
      v15 = *(_OWORD *)(a1 + v7 + 48);
      v29 = *(_OWORD *)(a1 + v7 + 64);
      v14 = v29;
      v30 = v13;
      v16 = *(_OWORD *)(a1 + v7 + 80);
      v17 = *(_OWORD *)(a1 + v7 + 112);
      v31 = *(_OWORD *)(a1 + v7 + 96);
      v18 = v31;
      v32 = v17;
      v19 = *(_OWORD *)(a1 + v7 + 16);
      v26[0] = *(_OWORD *)(a1 + v7);
      v26[1] = v19;
      v20 = *(_OWORD *)(a1 + v7 + 48);
      v22 = *(_OWORD *)(a1 + v7);
      v21 = *(_OWORD *)(a1 + v7 + 16);
      v27 = *(_OWORD *)(a1 + v7 + 32);
      v23 = v27;
      v28 = v20;
      v24 = *(_OWORD *)(a1 + v7 + 160);
      v8[11] = v12;
      v8[12] = v24;
      *(__int128 *)((char *)v8 + 201) = *(_OWORD *)(a1 + v7 + 169);
      v8[7] = v16;
      v8[8] = v18;
      v8[9] = v11;
      v8[10] = v10;
      v8[1] = xmmword_1C3388720;
      v8[2] = v22;
      v8[3] = v21;
      v8[4] = v23;
      v8[5] = v15;
      v8[6] = v14;
      v25 = v8;
      sub_1C3029868((uint64_t)v26);
      sub_1C3021FC8(a1, &v25, v6, &v36, a2);
      swift_bridgeObjectRelease();
      v7 += 192;
    }
    while (v4 != v6);
    return v36;
  }
  return result;
}

uint64_t sub_1C3021FC8(uint64_t result, __int128 **a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char **v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  char *v21;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t k;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  char v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  char v56;
  int v57;
  char v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  char v66;
  __int128 v67;
  __int128 *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  __int128 *v88;
  uint64_t v89;
  __int128 *v90;
  __int128 *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  char v102;
  int v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t i;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t j;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  char v124;
  char *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t m;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  char v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v153;
  char v155;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  _QWORD *v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  char v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178[72];
  __int128 v179;
  _BYTE v180[112];
  __int128 v181;
  _BYTE v182[41];
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  _OWORD v193[2];
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  _OWORD v204[2];
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  _OWORD v215[2];
  uint64_t v216;
  char *v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  _OWORD v228[2];
  __int128 v229;
  _BYTE v230[112];
  __int128 v231;
  _BYTE v232[41];
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  _OWORD v243[3];

  v5 = *a4;
  v6 = *(_QWORD *)(*a4 + 16);
  if (v6 >= a5)
    return result;
  v7 = a4;
  v8 = (char **)a2;
  v9 = &v233;
  v10 = *(_QWORD *)(result + 16);
  if (v10 <= a3)
  {
    v9 = *a2;
    if (v6)
    {
      if (!*((_QWORD *)v9 + 2))
        return result;
      v105 = swift_bridgeObjectRetain();
      v106 = sub_1C3029360(v105);
      swift_bridgeObjectRelease();
      v107 = *(_QWORD *)(v5 + 16);
      if (v107)
      {
        swift_bridgeObjectRetain();
        sub_1C30299E8();
        for (i = 0; i != v107; ++i)
        {
          v109 = *(_QWORD *)(v5 + 32 + 8 * i);
          swift_bridgeObjectRetain_n();
          v110 = sub_1C3378E3C();
          *(_QWORD *)&v205 = v110;
          v111 = *(_QWORD *)(v109 + 16);
          if (v111)
          {
            v112 = v111 - 1;
            for (j = 32; ; j += 192)
            {
              v114 = *(_OWORD *)(v109 + j);
              v115 = *(_OWORD *)(v109 + j + 16);
              v116 = *(_OWORD *)(v109 + j + 48);
              v235 = *(_OWORD *)(v109 + j + 32);
              v236 = v116;
              v233 = v114;
              v234 = v115;
              v117 = *(_OWORD *)(v109 + j + 64);
              v118 = *(_OWORD *)(v109 + j + 80);
              v119 = *(_OWORD *)(v109 + j + 112);
              v239 = *(_OWORD *)(v109 + j + 96);
              v240 = v119;
              v237 = v117;
              v238 = v118;
              v120 = *(_OWORD *)(v109 + j + 128);
              v121 = *(_OWORD *)(v109 + j + 144);
              v122 = *(_OWORD *)(v109 + j + 160);
              *(_OWORD *)((char *)v243 + 9) = *(_OWORD *)(v109 + j + 169);
              v242 = v121;
              v243[0] = v122;
              v241 = v120;
              sub_1C3029868((uint64_t)&v233);
              sub_1C31E5ED8(&v218, &v233);
              v231 = v226;
              *(_OWORD *)v232 = v227;
              *(_OWORD *)&v232[16] = v228[0];
              *(_OWORD *)&v232[25] = *(_OWORD *)((char *)v228 + 9);
              *(_OWORD *)&v230[48] = v222;
              *(_OWORD *)&v230[64] = v223;
              *(_OWORD *)&v230[80] = v224;
              *(_OWORD *)&v230[96] = v225;
              v229 = v218;
              *(_OWORD *)v230 = v219;
              *(_OWORD *)&v230[16] = v220;
              *(_OWORD *)&v230[32] = v221;
              sub_1C30298D8((uint64_t)&v229);
              if (!v112)
                break;
              --v112;
            }
            swift_bridgeObjectRelease();
            v123 = v205;
          }
          else
          {
            v123 = v110;
            swift_bridgeObjectRelease();
          }
          v124 = sub_1C3022D6C(v123, v106);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v124 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = a4;
      }
      else
      {
        swift_bridgeObjectRelease();
        v7 = a4;
      }
    }
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    *v7 = v5;
    if ((result & 1) == 0)
      goto LABEL_90;
    goto LABEL_82;
  }
  v155 = 0;
  v153 = result;
  v158 = a3;
  v159 = result + 32;
  v11 = a3;
  v157 = *(_QWORD *)(result + 16);
  do
  {
    if (a3 < 0)
    {
      __break(1u);
      break;
    }
    v12 = (__int128 *)(v159 + 192 * v11);
    v13 = v12[3];
    v14 = v11 + 1;
    v220 = v12[2];
    v221 = v13;
    v15 = v12[7];
    v224 = v12[6];
    v225 = v15;
    v16 = v12[5];
    v222 = v12[4];
    v223 = v16;
    *(_OWORD *)((char *)v228 + 9) = *(__int128 *)((char *)v12 + 169);
    v17 = v12[10];
    v18 = v12[8];
    v227 = v12[9];
    v228[0] = v17;
    v226 = v18;
    v19 = v12[1];
    v218 = *v12;
    v219 = v19;
    v20 = *v8;
    v5 = *((_QWORD *)*v8 + 2);
    if (!v5)
      goto LABEL_42;
    if ((BYTE4(v226) & 1) == 0 && (BYTE12(v226) & 1) == 0)
    {
      v21 = &v20[192 * v5];
      if ((*(v21 - 28) & 1) == 0
        && (*(v21 - 20) & 1) == 0
        && v226 < *((_DWORD *)v21 - 6)
        && *((_DWORD *)v21 - 8) < DWORD2(v226))
      {
        goto LABEL_42;
      }
    }
    sub_1C3029868((uint64_t)&v218);
    swift_bridgeObjectRetain();
    v160 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v20 = sub_1C30243F0(0, v5 + 1, 1, v20);
    v24 = *((_QWORD *)v20 + 2);
    v23 = *((_QWORD *)v20 + 3);
    v5 = v24 + 1;
    if (v24 >= v23 >> 1)
      v20 = sub_1C30243F0((char *)(v23 > 1), v24 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v5;
    v25 = &v20[192 * v24];
    v26 = v218;
    v27 = v219;
    v28 = v221;
    *((_OWORD *)v25 + 4) = v220;
    *((_OWORD *)v25 + 5) = v28;
    *((_OWORD *)v25 + 2) = v26;
    *((_OWORD *)v25 + 3) = v27;
    v29 = v222;
    v30 = v223;
    v31 = v225;
    *((_OWORD *)v25 + 8) = v224;
    *((_OWORD *)v25 + 9) = v31;
    *((_OWORD *)v25 + 6) = v29;
    *((_OWORD *)v25 + 7) = v30;
    v32 = v226;
    v33 = v227;
    v34 = v228[0];
    *(_OWORD *)(v25 + 201) = *(_OWORD *)((char *)v228 + 9);
    *((_OWORD *)v25 + 11) = v33;
    *((_OWORD *)v25 + 12) = v34;
    *((_OWORD *)v25 + 10) = v32;
    v217 = v20;
    v161 = *v7;
    v162 = *(_QWORD **)(*v7 + 16);
    if (!v162)
      goto LABEL_39;
    sub_1C30299E8();
    swift_bridgeObjectRetain_n();
    v216 = sub_1C3378E3C();
    for (k = 32; ; k += 192)
    {
      v36 = *(_OWORD *)&v20[k];
      v37 = *(_OWORD *)&v20[k + 16];
      v38 = *(_OWORD *)&v20[k + 48];
      v235 = *(_OWORD *)&v20[k + 32];
      v236 = v38;
      v233 = v36;
      v234 = v37;
      v39 = *(_OWORD *)&v20[k + 64];
      v40 = *(_OWORD *)&v20[k + 80];
      v41 = *(_OWORD *)&v20[k + 112];
      v239 = *(_OWORD *)&v20[k + 96];
      v240 = v41;
      v237 = v39;
      v238 = v40;
      v42 = *(_OWORD *)&v20[k + 128];
      v43 = *(_OWORD *)&v20[k + 144];
      v44 = *(_OWORD *)&v20[k + 160];
      *(_OWORD *)((char *)v243 + 9) = *(_OWORD *)&v20[k + 169];
      v242 = v43;
      v243[0] = v44;
      v241 = v42;
      sub_1C3029868((uint64_t)&v233);
      sub_1C31E5ED8(&v194, &v233);
      v213 = v202;
      v214 = v203;
      v215[0] = v204[0];
      *(_OWORD *)((char *)v215 + 9) = *(_OWORD *)((char *)v204 + 9);
      v209 = v198;
      v210 = v199;
      v211 = v200;
      v212 = v201;
      v205 = v194;
      v206 = v195;
      v207 = v196;
      v208 = v197;
      sub_1C30298D8((uint64_t)&v205);
      if (!v24)
        break;
      --v24;
    }
    swift_bridgeObjectRelease();
    v163 = v216;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v45 = *(_QWORD *)(v161 + 32 + 8 * v5);
      swift_bridgeObjectRetain_n();
      v46 = sub_1C3378E3C();
      v177 = *(_QWORD *)(v45 + 16);
      if (v177)
      {
        v47 = v45;
        v48 = 0;
        v164 = (_QWORD *)v5;
        v176 = v47 + 32;
        while (1)
        {
          v68 = (__int128 *)(v176 + 192 * v48);
          v69 = *v68;
          v70 = v68[1];
          v71 = v68[3];
          v196 = v68[2];
          v197 = v71;
          v194 = v69;
          v195 = v70;
          v72 = v68[4];
          v73 = v68[5];
          v74 = v68[7];
          v200 = v68[6];
          v201 = v74;
          v198 = v72;
          v199 = v73;
          v75 = v68[8];
          v76 = v68[9];
          v77 = v68[10];
          *(_OWORD *)((char *)v204 + 9) = *(__int128 *)((char *)v68 + 169);
          v203 = v76;
          v204[0] = v77;
          v202 = v75;
          v78 = v68[9];
          v191 = v68[8];
          v192 = v78;
          v193[0] = v68[10];
          *(_OWORD *)((char *)v193 + 9) = *(__int128 *)((char *)v68 + 169);
          v79 = v68[5];
          v187 = v68[4];
          v188 = v79;
          v80 = v68[7];
          v81 = v68[8];
          v189 = v68[6];
          v190 = v80;
          v82 = v68[3];
          v185 = v68[2];
          v186 = v82;
          v83 = v68[1];
          v183 = *v68;
          v184 = v83;
          v181 = v81;
          *(_OWORD *)v182 = v68[9];
          *(_OWORD *)&v182[16] = v68[10];
          *(_OWORD *)&v182[25] = *(__int128 *)((char *)v68 + 169);
          *(_OWORD *)&v180[48] = v68[4];
          *(_OWORD *)&v180[64] = v68[5];
          *(_OWORD *)&v180[80] = v68[6];
          *(_OWORD *)&v180[96] = v68[7];
          v179 = *v68;
          *(_OWORD *)v180 = v68[1];
          *(_OWORD *)&v180[16] = v68[2];
          *(_OWORD *)&v180[32] = v68[3];
          sub_1C3379208();
          sub_1C3029868((uint64_t)&v194);
          swift_bridgeObjectRetain();
          UsoEntitySpan.hash(into:)((uint64_t)v178);
          v84 = sub_1C3379244();
          v85 = -1 << *(_BYTE *)(v46 + 32);
          v86 = v84 & ~v85;
          if (((*(_QWORD *)(v46 + 56 + ((v86 >> 3) & 0xFFFFFFFFFFFFF8)) >> v86) & 1) != 0)
          {
            v87 = 192 * v86;
            v88 = (__int128 *)(*(_QWORD *)(v46 + 48) + 192 * v86);
            v181 = v88[8];
            *(_OWORD *)v182 = v88[9];
            *(_OWORD *)&v182[16] = v88[10];
            *(_OWORD *)&v182[25] = *(__int128 *)((char *)v88 + 169);
            *(_OWORD *)&v180[48] = v88[4];
            *(_OWORD *)&v180[64] = v88[5];
            *(_OWORD *)&v180[80] = v88[6];
            *(_OWORD *)&v180[96] = v88[7];
            v179 = *v88;
            *(_OWORD *)v180 = v88[1];
            *(_OWORD *)&v180[16] = v88[2];
            *(_OWORD *)&v180[32] = v88[3];
            if (_s12SiriOntology13UsoEntitySpanV2eeoiySbAC_ACtFZ_0((uint64_t)&v179, (uint64_t)&v183))
            {
LABEL_33:
              swift_bridgeObjectRelease();
              sub_1C30298D8((uint64_t)&v194);
              v91 = (__int128 *)(*(_QWORD *)(v46 + 48) + v87);
              v92 = v91[8];
              v93 = v91[9];
              v94 = v91[10];
              *(_OWORD *)&v182[25] = *(__int128 *)((char *)v91 + 169);
              *(_OWORD *)v182 = v93;
              *(_OWORD *)&v182[16] = v94;
              v181 = v92;
              v95 = v91[4];
              v96 = v91[5];
              v97 = v91[7];
              *(_OWORD *)&v180[80] = v91[6];
              *(_OWORD *)&v180[96] = v97;
              *(_OWORD *)&v180[48] = v95;
              *(_OWORD *)&v180[64] = v96;
              v99 = *v91;
              v98 = v91[1];
              v100 = v91[3];
              *(_OWORD *)&v180[16] = v91[2];
              *(_OWORD *)&v180[32] = v100;
              v179 = v99;
              *(_OWORD *)v180 = v98;
              v175 = *(_QWORD *)&v182[32];
              v174 = v182[40];
              v173 = BYTE8(v94);
              v54 = *(_QWORD *)v182;
              v55 = DWORD2(v181);
              v101 = v48;
              v102 = BYTE12(v181);
              v103 = v181;
              v58 = BYTE4(v181);
              v59 = *(_QWORD *)&v180[104];
              v171 = *(_OWORD *)&v180[24];
              v172 = *(_OWORD *)&v182[8];
              v169 = *(_OWORD *)&v180[56];
              v170 = *(_OWORD *)&v180[40];
              v167 = *(_OWORD *)&v180[88];
              v168 = *(_OWORD *)&v180[72];
              v66 = v98;
              v165 = v99;
              v166 = *(_OWORD *)&v180[8];
              sub_1C3029868((uint64_t)&v179);
              v67 = v165;
              v65 = v166;
              v64 = v167;
              v63 = v168;
              v62 = v169;
              v61 = v170;
              v60 = v171;
              v53 = v172;
              v57 = v103;
              v56 = v102;
              v48 = v101;
              v52 = v173;
              v51 = v174;
              v50 = v175;
              goto LABEL_27;
            }
            v89 = ~v85;
            while (1)
            {
              v86 = (v86 + 1) & v89;
              if (((*(_QWORD *)(v46 + 56 + ((v86 >> 3) & 0xFFFFFFFFFFFFF8)) >> v86) & 1) == 0)
                break;
              v87 = 192 * v86;
              v90 = (__int128 *)(*(_QWORD *)(v46 + 48) + 192 * v86);
              v181 = v90[8];
              *(_OWORD *)v182 = v90[9];
              *(_OWORD *)&v182[16] = v90[10];
              *(_OWORD *)&v182[25] = *(__int128 *)((char *)v90 + 169);
              *(_OWORD *)&v180[48] = v90[4];
              *(_OWORD *)&v180[64] = v90[5];
              *(_OWORD *)&v180[80] = v90[6];
              *(_OWORD *)&v180[96] = v90[7];
              v179 = *v90;
              *(_OWORD *)v180 = v90[1];
              *(_OWORD *)&v180[16] = v90[2];
              *(_OWORD *)&v180[32] = v90[3];
              if (_s12SiriOntology13UsoEntitySpanV2eeoiySbAC_ACtFZ_0((uint64_t)&v179, (uint64_t)&v183))
                goto LABEL_33;
            }
          }
          swift_bridgeObjectRelease();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v231 = v191;
          *(_OWORD *)v232 = v192;
          *(_OWORD *)&v232[16] = v193[0];
          *(_OWORD *)&v232[25] = *(_OWORD *)((char *)v193 + 9);
          *(_OWORD *)&v230[48] = v187;
          *(_OWORD *)&v230[64] = v188;
          *(_OWORD *)&v230[80] = v189;
          *(_OWORD *)&v230[96] = v190;
          v229 = v183;
          *(_OWORD *)v230 = v184;
          *(_OWORD *)&v230[16] = v185;
          *(_OWORD *)&v230[32] = v186;
          *(_QWORD *)&v179 = v46;
          sub_1C3029868((uint64_t)&v229);
          sub_1C31E6928((uint64_t)&v229, v86, isUniquelyReferenced_nonNull_native);
          v46 = v179;
          swift_bridgeObjectRelease();
          v50 = *(_QWORD *)&v232[32];
          v51 = v232[40];
          v52 = v232[24];
          v53 = *(_OWORD *)&v232[8];
          v54 = *(_QWORD *)v232;
          v55 = DWORD2(v231);
          v56 = BYTE12(v231);
          v57 = v231;
          v58 = BYTE4(v231);
          v59 = *(_QWORD *)&v230[104];
          v60 = *(_OWORD *)&v230[24];
          v61 = *(_OWORD *)&v230[40];
          v62 = *(_OWORD *)&v230[56];
          v63 = *(_OWORD *)&v230[72];
          v64 = *(_OWORD *)&v230[88];
          v65 = *(_OWORD *)&v230[8];
          v66 = v230[0];
          v67 = v229;
LABEL_27:
          ++v48;
          v179 = v67;
          v180[0] = v66;
          *(_OWORD *)&v180[8] = v65;
          *(_OWORD *)&v180[24] = v60;
          *(_OWORD *)&v180[40] = v61;
          *(_OWORD *)&v180[56] = v62;
          *(_OWORD *)&v180[72] = v63;
          *(_OWORD *)&v180[88] = v64;
          *(_QWORD *)&v180[104] = v59;
          LODWORD(v181) = v57;
          BYTE4(v181) = v58;
          DWORD2(v181) = v55;
          BYTE12(v181) = v56;
          *(_QWORD *)v182 = v54;
          *(_OWORD *)&v182[8] = v53;
          v182[24] = v52;
          *(_QWORD *)&v182[32] = v50;
          v182[40] = v51;
          sub_1C30298D8((uint64_t)&v179);
          if (v48 == v177)
          {
            swift_bridgeObjectRelease();
            v9 = &v233;
            v5 = (uint64_t)v164;
            goto LABEL_36;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_36:
      v104 = sub_1C3022D6C(v46, v163);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v104 & 1) != 0)
        break;
      if ((_QWORD *)++v5 == v162)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = a4;
        v8 = (char **)a2;
LABEL_39:
        v14 = v160;
        sub_1C3021FC8(v153, &v217, v160, v7, a5);
        v155 = 1;
        goto LABEL_41;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = a4;
    v8 = (char **)a2;
    v14 = v160;
LABEL_41:
    result = swift_bridgeObjectRelease();
    v10 = v157;
    a3 = v158;
LABEL_42:
    if (v14 == v10)
    {
      if ((v155 & 1) != 0)
        return result;
      v125 = *v8;
      v126 = *((_QWORD *)*v8 + 2);
      if (v126 >= a5)
        return result;
      v127 = (_QWORD *)*v7;
      if (*(_QWORD *)(*v7 + 16))
      {
        if (!v126)
          return result;
        v128 = swift_bridgeObjectRetain();
        v129 = sub_1C3029360(v128);
        swift_bridgeObjectRelease();
        v130 = v127[2];
        if (v130)
        {
          swift_bridgeObjectRetain();
          sub_1C30299E8();
          v131 = 0;
          while (1)
          {
            v132 = v127[v131 + 4];
            swift_bridgeObjectRetain_n();
            v133 = sub_1C3378E3C();
            *(_QWORD *)&v183 = v133;
            v134 = *(_QWORD *)(v132 + 16);
            if (v134)
            {
              v135 = v134 - 1;
              for (m = 32; ; m += 192)
              {
                v137 = *(_OWORD *)(v132 + m);
                v138 = *(_OWORD *)(v132 + m + 16);
                v139 = *(_OWORD *)(v132 + m + 48);
                v220 = *(_OWORD *)(v132 + m + 32);
                v221 = v139;
                v218 = v137;
                v219 = v138;
                v140 = *(_OWORD *)(v132 + m + 64);
                v141 = *(_OWORD *)(v132 + m + 80);
                v142 = *(_OWORD *)(v132 + m + 112);
                v224 = *(_OWORD *)(v132 + m + 96);
                v225 = v142;
                v222 = v140;
                v223 = v141;
                v143 = *(_OWORD *)(v132 + m + 128);
                v144 = *(_OWORD *)(v132 + m + 144);
                v145 = *(_OWORD *)(v132 + m + 160);
                *(_OWORD *)((char *)v228 + 9) = *(_OWORD *)(v132 + m + 169);
                v227 = v144;
                v228[0] = v145;
                v226 = v143;
                sub_1C3029868((uint64_t)&v218);
                sub_1C31E5ED8(&v194, &v218);
                v213 = v202;
                v214 = v203;
                v215[0] = v204[0];
                *(_OWORD *)((char *)v215 + 9) = *(_OWORD *)((char *)v204 + 9);
                v209 = v198;
                v210 = v199;
                v211 = v200;
                v212 = v201;
                v205 = v194;
                v206 = v195;
                v207 = v196;
                v208 = v197;
                sub_1C30298D8((uint64_t)&v205);
                if (!v135)
                  break;
                --v135;
              }
              swift_bridgeObjectRelease();
              v146 = v183;
            }
            else
            {
              v146 = v133;
              swift_bridgeObjectRelease();
            }
            v147 = sub_1C3022D6C(v146, v129);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v147 & 1) != 0)
              break;
            if (++v131 == v130)
            {
              swift_bridgeObjectRelease();
              goto LABEL_74;
            }
          }
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
LABEL_74:
        swift_bridgeObjectRelease();
        v7 = a4;
      }
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      *v7 = (uint64_t)v127;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1C30256C0(0, v127[2] + 1, 1, v127, &qword_1EF819B30, &qword_1ED7CDC88);
        v127 = (_QWORD *)result;
        *v7 = result;
      }
      v149 = v127[2];
      v148 = v127[3];
      if (v149 >= v148 >> 1)
      {
        result = (uint64_t)sub_1C30256C0((_QWORD *)(v148 > 1), v149 + 1, 1, v127, &qword_1EF819B30, &qword_1ED7CDC88);
        v127 = (_QWORD *)result;
      }
      v127[2] = v149 + 1;
      v127[v149 + 4] = v125;
      *v7 = (uint64_t)v127;
      return result;
    }
    if (v14 < a3)
      break;
    v11 = v14;
  }
  while (v14 < v10);
  __break(1u);
LABEL_90:
  result = (uint64_t)sub_1C30256C0(0, *(_QWORD *)(v5 + 16) + 1, 1, (_QWORD *)v5, &qword_1EF819B30, &qword_1ED7CDC88);
  v5 = result;
  *v7 = result;
LABEL_82:
  v151 = *(_QWORD *)(v5 + 16);
  v150 = *(_QWORD *)(v5 + 24);
  if (v151 >= v150 >> 1)
  {
    result = (uint64_t)sub_1C30256C0((_QWORD *)(v150 > 1), v151 + 1, 1, (_QWORD *)v5, &qword_1EF819B30, &qword_1ED7CDC88);
    v5 = result;
  }
  *(_QWORD *)(v5 + 16) = v151 + 1;
  *(_QWORD *)(v5 + 8 * v151 + 32) = v9;
  *v7 = v5;
  return result;
}

uint64_t sub_1C3022D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __int128 *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  __int128 *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  int64_t v52;
  _BYTE v53[72];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _OWORD v64[2];
  _OWORD v65[10];
  _OWORD v66[2];
  _OWORD v67[10];
  _OWORD v68[3];

  if (*(_QWORD *)(a1 + 16) < *(_QWORD *)(a2 + 16))
    return 0;
  v51 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v52 = (unint64_t)(v4 + 63) >> 6;
  v7 = a1 + 56;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_21;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v12 >= v52)
      goto LABEL_32;
    v13 = *(_QWORD *)(v51 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v52)
        goto LABEL_32;
      v13 = *(_QWORD *)(v51 + 8 * v9);
      if (!v13)
        break;
    }
LABEL_20:
    v6 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_21:
    v15 = (__int128 *)(*(_QWORD *)(a2 + 48) + 192 * v11);
    v16 = v15[3];
    v18 = *v15;
    v17 = v15[1];
    v67[2] = v15[2];
    v67[3] = v16;
    v67[0] = v18;
    v67[1] = v17;
    v19 = v15[7];
    v21 = v15[4];
    v20 = v15[5];
    v67[6] = v15[6];
    v67[7] = v19;
    v67[4] = v21;
    v67[5] = v20;
    v23 = v15[9];
    v22 = v15[10];
    v24 = *(__int128 *)((char *)v15 + 169);
    v67[8] = v15[8];
    *(_OWORD *)((char *)v68 + 9) = v24;
    v67[9] = v23;
    v68[0] = v22;
    v25 = v15[9];
    v65[8] = v15[8];
    v65[9] = v25;
    v66[0] = v15[10];
    *(_OWORD *)((char *)v66 + 9) = *(__int128 *)((char *)v15 + 169);
    v26 = v15[5];
    v65[4] = v15[4];
    v65[5] = v26;
    v27 = v15[7];
    v65[6] = v15[6];
    v65[7] = v27;
    v28 = v15[1];
    v65[0] = *v15;
    v65[1] = v28;
    v29 = v15[3];
    v65[2] = v15[2];
    v65[3] = v29;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_29;
    v30 = v15[9];
    v62 = v15[8];
    v63 = v30;
    v64[0] = v15[10];
    *(_OWORD *)((char *)v64 + 9) = *(__int128 *)((char *)v15 + 169);
    v31 = v15[5];
    v58 = v15[4];
    v59 = v31;
    v32 = v15[7];
    v60 = v15[6];
    v61 = v32;
    v33 = v15[1];
    v54 = *v15;
    v55 = v33;
    v34 = v15[3];
    v56 = v15[2];
    v57 = v34;
    sub_1C3379208();
    sub_1C3029868((uint64_t)v67);
    UsoEntitySpan.hash(into:)((uint64_t)v53);
    v35 = sub_1C3379244();
    v36 = -1 << *(_BYTE *)(a1 + 32);
    v37 = v35 & ~v36;
    if (((*(_QWORD *)(v7 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
      goto LABEL_28;
    v38 = (__int128 *)(*(_QWORD *)(a1 + 48) + 192 * v37);
    v39 = v38[9];
    v62 = v38[8];
    v63 = v39;
    v64[0] = v38[10];
    *(_OWORD *)((char *)v64 + 9) = *(__int128 *)((char *)v38 + 169);
    v40 = v38[5];
    v58 = v38[4];
    v59 = v40;
    v41 = v38[7];
    v60 = v38[6];
    v61 = v41;
    v42 = v38[1];
    v54 = *v38;
    v55 = v42;
    v43 = v38[3];
    v56 = v38[2];
    v57 = v43;
    if (!_s12SiriOntology13UsoEntitySpanV2eeoiySbAC_ACtFZ_0((uint64_t)&v54, (uint64_t)v65))
    {
      v44 = ~v36;
      while (1)
      {
        v37 = (v37 + 1) & v44;
        if (((*(_QWORD *)(v7 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          break;
        v45 = (__int128 *)(*(_QWORD *)(a1 + 48) + 192 * v37);
        v46 = v45[9];
        v62 = v45[8];
        v63 = v46;
        v64[0] = v45[10];
        *(_OWORD *)((char *)v64 + 9) = *(__int128 *)((char *)v45 + 169);
        v47 = v45[5];
        v58 = v45[4];
        v59 = v47;
        v48 = v45[7];
        v60 = v45[6];
        v61 = v48;
        v49 = v45[1];
        v54 = *v45;
        v55 = v49;
        v50 = v45[3];
        v56 = v45[2];
        v57 = v50;
        if (_s12SiriOntology13UsoEntitySpanV2eeoiySbAC_ACtFZ_0((uint64_t)&v54, (uint64_t)v65))
          goto LABEL_6;
      }
LABEL_28:
      sub_1C30298D8((uint64_t)v67);
LABEL_29:
      swift_release();
      return 0;
    }
LABEL_6:
    result = sub_1C30298D8((uint64_t)v67);
  }
  v14 = v12 + 2;
  if (v14 >= v52)
  {
LABEL_32:
    swift_release();
    return 1;
  }
  v13 = *(_QWORD *)(v51 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v52)
      goto LABEL_32;
    v13 = *(_QWORD *)(v51 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t static UsoEntitySpanUtils.convert(from:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  int v49;
  char v50;
  char v51;
  int v52;
  char v53;
  uint64_t v54;
  _QWORD *v55;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v55 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1;
    v4 = 0;
    v41 = swift_bridgeObjectRetain();
    while (1)
    {
      v7 = *(_QWORD *)(v3 + v4 + 40);
      v42 = v2;
      v43 = *(_QWORD *)(v3 + v4 + 32);
      v8 = *(_QWORD *)(v3 + v4 + 56);
      v9 = *(_QWORD *)(v3 + v4 + 72);
      v44 = *(_QWORD *)(v3 + v4 + 48);
      v45 = *(_QWORD *)(v3 + v4 + 64);
      v46 = *(_QWORD *)(v3 + v4 + 80);
      v47 = *(_BYTE *)(v3 + v4 + 88);
      v48 = *(_BYTE *)(v3 + v4 + 89);
      v49 = *(_DWORD *)(v3 + v4 + 92);
      v50 = *(_BYTE *)(v3 + v4 + 96);
      v54 = *(_QWORD *)(v3 + v4 + 112);
      v53 = *(_BYTE *)(v3 + v4 + 104);
      v10 = v53 ? 0 : *(_DWORD *)(v3 + v4 + 100);
      v51 = *(_BYTE *)(v3 + v4 + 120);
      v52 = *(_DWORD *)(v3 + v4 + 100);
      v11 = sub_1C302B248(v10);
      v13 = v1[2];
      v14 = (v12 & 1) == 0;
      v15 = v13 + v14;
      if (__OFADD__(v13, v14))
        break;
      v16 = v11;
      v17 = v12;
      v18 = v1[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18 < v15)
      {
        sub_1C30287B0(v15, 1, (uint64_t *)&unk_1EF819CB0);
        v1 = v55;
        v19 = sub_1C302B248(v10);
        if ((v17 & 1) != (v20 & 1))
          goto LABEL_34;
        v16 = v19;
      }
      if ((v17 & 1) != 0)
      {
        v21 = v1[7];
        v22 = *(char **)(v21 + 8 * v16);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v21 + 8 * v16) = v22;
        v3 = v41;
        v40 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v22 = sub_1C302472C(0, *((_QWORD *)v22 + 2) + 1, 1, v22);
          *(_QWORD *)(v21 + 8 * v16) = v22;
        }
        v25 = *((_QWORD *)v22 + 2);
        v24 = *((_QWORD *)v22 + 3);
        if (v25 >= v24 >> 1)
        {
          v22 = sub_1C302472C((char *)(v24 > 1), v25 + 1, 1, v22);
          *(_QWORD *)(v40 + 8 * v16) = v22;
        }
        v5 = v42;
        *((_QWORD *)v22 + 2) = v25 + 1;
        v6 = &v22[96 * v25];
        *((_QWORD *)v6 + 4) = v43;
        *((_QWORD *)v6 + 5) = v7;
        *((_QWORD *)v6 + 6) = v44;
        *((_QWORD *)v6 + 7) = v8;
        *((_QWORD *)v6 + 8) = v45;
        *((_QWORD *)v6 + 9) = v9;
        *((_QWORD *)v6 + 10) = v46;
        v6[88] = v47;
        v6[89] = v48;
        *((_DWORD *)v6 + 23) = v49;
        v6[96] = v50;
        *((_DWORD *)v6 + 25) = v52;
        v6[104] = v53;
        *((_QWORD *)v6 + 14) = v54;
        v6[120] = v51;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CEEF0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1C3388720;
        *(_QWORD *)(v26 + 32) = v43;
        *(_QWORD *)(v26 + 40) = v7;
        *(_QWORD *)(v26 + 48) = v44;
        *(_QWORD *)(v26 + 56) = v8;
        *(_QWORD *)(v26 + 64) = v45;
        *(_QWORD *)(v26 + 72) = v9;
        *(_QWORD *)(v26 + 80) = v46;
        *(_BYTE *)(v26 + 88) = v47;
        *(_BYTE *)(v26 + 89) = v48;
        *(_DWORD *)(v26 + 92) = v49;
        *(_BYTE *)(v26 + 96) = v50;
        *(_DWORD *)(v26 + 100) = v52;
        *(_BYTE *)(v26 + 104) = v53;
        *(_QWORD *)(v26 + 112) = v54;
        *(_BYTE *)(v26 + 120) = v51;
        v1[(v16 >> 6) + 8] |= 1 << v16;
        *(_DWORD *)(v1[6] + 4 * v16) = v10;
        *(_QWORD *)(v1[7] + 8 * v16) = v26;
        v27 = v1[2];
        v28 = __OFADD__(v27, 1);
        v29 = v27 + 1;
        v3 = v41;
        if (v28)
          goto LABEL_33;
        v1[2] = v29;
        v5 = v42;
      }
      v4 += 96;
      v2 = v5 - 1;
      if (!v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    sub_1C33791A8();
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_20:
    v30 = swift_bridgeObjectRetain();
    v31 = sub_1C302609C(v30);
    swift_release();
    v55 = v31;
    sub_1C30262D4(&v55);
    swift_release();
    v32 = v55[2];
    if (v32)
    {
      v33 = v55 + 5;
      v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v35 = swift_bridgeObjectRetain();
        v36 = sub_1C3023524(v35);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v36 + 16))
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v34 = sub_1C30256C0(0, v34[2] + 1, 1, v34, &qword_1EF819B30, &qword_1ED7CDC88);
          v38 = v34[2];
          v37 = v34[3];
          if (v38 >= v37 >> 1)
            v34 = sub_1C30256C0((_QWORD *)(v37 > 1), v38 + 1, 1, v34, &qword_1EF819B30, &qword_1ED7CDC88);
          v34[2] = v38 + 1;
          v34[v38 + 4] = v36;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v33 += 2;
        --v32;
      }
      while (v32);
    }
    else
    {
      v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_release();
    return (uint64_t)v34;
  }
  return result;
}

uint64_t sub_1C3023524(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t i;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  int v59;
  char v60;
  char v61;
  int v62;
  char v63;
  uint64_t v64;
  _BYTE v65[192];
  _BYTE v66[106];
  _OWORD v67[10];
  _OWORD v68[3];

  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v67[0] = MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1;
    v4 = 0;
    v51 = swift_bridgeObjectRetain();
    while (1)
    {
      v7 = *(_QWORD *)(v3 + v4 + 40);
      v52 = v2;
      v53 = *(_QWORD *)(v3 + v4 + 32);
      v8 = *(_QWORD *)(v3 + v4 + 56);
      v9 = *(_QWORD *)(v3 + v4 + 72);
      v54 = *(_QWORD *)(v3 + v4 + 48);
      v55 = *(_QWORD *)(v3 + v4 + 64);
      v56 = *(_QWORD *)(v3 + v4 + 80);
      v57 = *(_BYTE *)(v3 + v4 + 88);
      v58 = *(_BYTE *)(v3 + v4 + 89);
      v62 = *(_DWORD *)(v3 + v4 + 100);
      v63 = *(_BYTE *)(v3 + v4 + 104);
      v64 = *(_QWORD *)(v3 + v4 + 112);
      v59 = *(_DWORD *)(v3 + v4 + 92);
      v60 = *(_BYTE *)(v3 + v4 + 96);
      v10 = v60 ? 0 : *(_DWORD *)(v3 + v4 + 92);
      v61 = *(_BYTE *)(v3 + v4 + 120);
      v11 = sub_1C302B248(v10);
      v13 = v1[2];
      v14 = (v12 & 1) == 0;
      v15 = v13 + v14;
      if (__OFADD__(v13, v14))
        break;
      v16 = v11;
      v17 = v12;
      v18 = v1[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18 < v15)
      {
        sub_1C30287B0(v15, 1, (uint64_t *)&unk_1EF819CB0);
        v1 = *(_QWORD **)&v67[0];
        v19 = sub_1C302B248(v10);
        if ((v17 & 1) != (v20 & 1))
          goto LABEL_35;
        v16 = v19;
      }
      if ((v17 & 1) != 0)
      {
        v21 = v1[7];
        v22 = *(char **)(v21 + 8 * v16);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v21 + 8 * v16) = v22;
        v3 = v51;
        v50 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v22 = sub_1C302472C(0, *((_QWORD *)v22 + 2) + 1, 1, v22);
          *(_QWORD *)(v21 + 8 * v16) = v22;
        }
        v25 = *((_QWORD *)v22 + 2);
        v24 = *((_QWORD *)v22 + 3);
        if (v25 >= v24 >> 1)
        {
          v22 = sub_1C302472C((char *)(v24 > 1), v25 + 1, 1, v22);
          *(_QWORD *)(v50 + 8 * v16) = v22;
        }
        v5 = v52;
        *((_QWORD *)v22 + 2) = v25 + 1;
        v6 = &v22[96 * v25];
        *((_QWORD *)v6 + 4) = v53;
        *((_QWORD *)v6 + 5) = v7;
        *((_QWORD *)v6 + 6) = v54;
        *((_QWORD *)v6 + 7) = v8;
        *((_QWORD *)v6 + 8) = v55;
        *((_QWORD *)v6 + 9) = v9;
        *((_QWORD *)v6 + 10) = v56;
        v6[88] = v57;
        v6[89] = v58;
        *((_DWORD *)v6 + 23) = v59;
        v6[96] = v60;
        *((_DWORD *)v6 + 25) = v62;
        v6[104] = v63;
        *((_QWORD *)v6 + 14) = v64;
        v6[120] = v61;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CEEF0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1C3388720;
        *(_QWORD *)(v26 + 32) = v53;
        *(_QWORD *)(v26 + 40) = v7;
        *(_QWORD *)(v26 + 48) = v54;
        *(_QWORD *)(v26 + 56) = v8;
        *(_QWORD *)(v26 + 64) = v55;
        *(_QWORD *)(v26 + 72) = v9;
        *(_QWORD *)(v26 + 80) = v56;
        *(_BYTE *)(v26 + 88) = v57;
        *(_BYTE *)(v26 + 89) = v58;
        *(_DWORD *)(v26 + 92) = v59;
        *(_BYTE *)(v26 + 96) = v60;
        *(_DWORD *)(v26 + 100) = v62;
        *(_BYTE *)(v26 + 104) = v63;
        *(_QWORD *)(v26 + 112) = v64;
        *(_BYTE *)(v26 + 120) = v61;
        v1[(v16 >> 6) + 8] |= 1 << v16;
        *(_DWORD *)(v1[6] + 4 * v16) = v10;
        *(_QWORD *)(v1[7] + 8 * v16) = v26;
        v27 = v1[2];
        v28 = __OFADD__(v27, 1);
        v29 = v27 + 1;
        v3 = v51;
        if (v28)
          goto LABEL_34;
        v1[2] = v29;
        v5 = v52;
      }
      v4 += 96;
      v2 = v5 - 1;
      if (!v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    sub_1C33791A8();
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_20:
    v30 = swift_bridgeObjectRetain();
    v31 = sub_1C302609C(v30);
    swift_release();
    *(_QWORD *)&v67[0] = v31;
    sub_1C30262D4((_QWORD **)v67);
    swift_release();
    v32 = *(_QWORD *)(*(_QWORD *)&v67[0] + 16);
    if (v32)
    {
      v33 = v32 - 1;
      v34 = (char *)MEMORY[0x1E0DEE9D8];
      for (i = 40; ; i += 16)
      {
        v36 = swift_bridgeObjectRetain();
        sub_1C30239D0(v36, (uint64_t)v65);
        swift_bridgeObjectRelease();
        sub_1C3029964((uint64_t)v65, (uint64_t)v66);
        sub_1C3029964((uint64_t)v66, (uint64_t)v67);
        if (sub_1C30299AC((uint64_t)v67) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v34 = sub_1C30243F0(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
          v38 = *((_QWORD *)v34 + 2);
          v37 = *((_QWORD *)v34 + 3);
          if (v38 >= v37 >> 1)
            v34 = sub_1C30243F0((char *)(v37 > 1), v38 + 1, 1, v34);
          *((_QWORD *)v34 + 2) = v38 + 1;
          v39 = &v34[192 * v38];
          v40 = v67[0];
          v41 = v67[1];
          v42 = v67[3];
          *((_OWORD *)v39 + 4) = v67[2];
          *((_OWORD *)v39 + 5) = v42;
          *((_OWORD *)v39 + 2) = v40;
          *((_OWORD *)v39 + 3) = v41;
          v43 = v67[4];
          v44 = v67[5];
          v45 = v67[7];
          *((_OWORD *)v39 + 8) = v67[6];
          *((_OWORD *)v39 + 9) = v45;
          *((_OWORD *)v39 + 6) = v43;
          *((_OWORD *)v39 + 7) = v44;
          v46 = v67[8];
          v47 = v67[9];
          v48 = v68[0];
          *(_OWORD *)(v39 + 201) = *(_OWORD *)((char *)v68 + 9);
          *((_OWORD *)v39 + 11) = v47;
          *((_OWORD *)v39 + 12) = v48;
          *((_OWORD *)v39 + 10) = v46;
        }
        if (!v33)
          break;
        --v33;
      }
      swift_release();
    }
    else
    {
      swift_release();
      return MEMORY[0x1E0DEE9D8];
    }
    return (uint64_t)v34;
  }
  return result;
}

uint64_t sub_1C30239D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  Swift::Int v5;
  char v6;
  uint64_t v7;
  char v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char v16;
  double v17;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  float v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  char v27;
  uint64_t v29;
  double v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char *v43;
  int v44;
  char v45;
  int v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    sub_1C30299C4(&v35);
    v7 = a2;
    return sub_1C3029964((uint64_t)&v35, v7);
  }
  v5 = *(unsigned __int8 *)(a1 + 89);
  if (v5 == 7)
  {
    v6 = 7;
  }
  else
  {
    UsoEntitySpan.SpanSource.init(rawValue:)(v5);
    v6 = v35;
  }
  v27 = v6;
  swift_bridgeObjectRetain();
  v29 = 0;
  v30 = 0.0;
  v32 = 0;
  v33 = 0;
  v8 = 0;
  v9 = (double *)(a1 + 48);
  v31 = (char *)MEMORY[0x1E0DEE9D8];
  v34 = (char *)MEMORY[0x1E0DEE9D8];
  do
  {
    v10 = *((_QWORD *)v9 - 2);
    v11 = *((_QWORD *)v9 - 1);
    v13 = *((_QWORD *)v9 + 1);
    v12 = *((_QWORD *)v9 + 2);
    v14 = *((_QWORD *)v9 + 3);
    v15 = v9[4];
    v16 = *((_BYTE *)v9 + 40);
    if ((v8 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = 1;
      if (!v14)
        goto LABEL_7;
    }
    else
    {
      v17 = *v9;
      v18 = *(_QWORD *)v9 == 0x736E656B6F54 && v13 == 0xE600000000000000;
      if (v18 || (sub_1C3379184() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v8 = 0;
        if (!v14)
          goto LABEL_7;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v8 = 1;
        v30 = v17;
        v33 = v13;
        if (!v14)
        {
LABEL_7:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_8:
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
    }
    if (v12 == 0x65746C615F727361 && v14 == 0xEF65766974616E72 || (sub_1C3379184() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
        goto LABEL_8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_1C3024618(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
      v20 = *((_QWORD *)v34 + 2);
      v19 = *((_QWORD *)v34 + 3);
      if (v20 >= v19 >> 1)
        v34 = sub_1C3024618((char *)(v19 > 1), v20 + 1, 1, v34);
      v21 = v15;
      *((_QWORD *)v34 + 2) = v20 + 1;
      v22 = &v34[24 * v20];
      *((_QWORD *)v22 + 4) = v10;
      *((_QWORD *)v22 + 5) = v11;
      *((float *)v22 + 12) = v21;
      v22[52] = 0;
    }
    else if (v12 == 0x64695F6D657469 && v14 == 0xE700000000000000 || (sub_1C3379184() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v10;
      v32 = v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_1C3024504(0, *((_QWORD *)v31 + 2) + 1, 1, v31);
      v24 = *((_QWORD *)v31 + 2);
      v23 = *((_QWORD *)v31 + 3);
      if (v24 >= v23 >> 1)
        v31 = sub_1C3024504((char *)(v23 > 1), v24 + 1, 1, v31);
      *((_QWORD *)v31 + 2) = v24 + 1;
      v25 = &v31[48 * v24];
      *((_QWORD *)v25 + 4) = v12;
      *((_QWORD *)v25 + 5) = v14;
      *((_QWORD *)v25 + 6) = v10;
      *((_QWORD *)v25 + 7) = v11;
      *((_DWORD *)v25 + 16) = 0;
      v25[68] = 1;
      *((_DWORD *)v25 + 18) = 0;
      v25[76] = 1;
    }
LABEL_9:
    v9 += 12;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  if (v33)
  {
    *(double *)&v35 = v30;
    *((_QWORD *)&v35 + 1) = v33;
    v36 = v27;
    v37 = 0u;
    v38 = 0u;
    v39 = 0u;
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = v31;
    v44 = 0;
    v45 = 1;
    v46 = 0;
    v47 = 1;
    v48 = v34;
    v49 = v29;
    v50 = v32;
    v51 = 3;
    v52 = 0;
    v53 = 1;
    nullsub_1(&v35);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C30299C4(&v35);
  }
  v7 = a2;
  return sub_1C3029964((uint64_t)&v35, v7);
}

unint64_t static UsoEntitySpanUtils.getAlignedString(from:using:base:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v7;
  unint64_t v8;
  unsigned int v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  uint32x2_t v14;
  __int32 *v15;
  unint64_t v16;
  uint32x2_t v17;
  uint32x2_t v18;
  uint32x2_t v19;
  uint32x2_t v20;
  unint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  char v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;

  if ((*(_BYTE *)(a1 + 132) & 1) != 0)
    return 0;
  v4 = 0;
  if ((*(_BYTE *)(a1 + 140) & 1) != 0 || !a4)
    return v4;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
    return 0;
  v10 = *(_DWORD *)(a1 + 128);
  v11 = *(_DWORD *)(v7 + 32);
  v12 = v8 - 1;
  if (v8 != 1)
  {
    if (v8 >= 5)
    {
      v13 = v12 & 0xFFFFFFFFFFFFFFFCLL | 1;
      v14 = (uint32x2_t)vdup_n_s32(v11);
      v15 = (__int32 *)(v7 + 80);
      v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
      v17 = v14;
      do
      {
        v18.i32[0] = *(v15 - 6);
        v18.i32[1] = *v15;
        v19.i32[0] = v15[6];
        v19.i32[1] = v15[12];
        v14 = vmin_u32(v18, v14);
        v17 = vmin_u32(v19, v17);
        v15 += 24;
        v16 -= 4;
      }
      while (v16);
      v20 = vmin_u32(v14, v17);
      v11 = vpmin_u32(v20, v20).u32[0];
      if (v12 == (v12 & 0xFFFFFFFFFFFFFFFCLL))
        goto LABEL_18;
    }
    else
    {
      v13 = 1;
    }
    v21 = v8 - v13;
    v22 = (unsigned int *)(v7 + 24 * v13 + 32);
    do
    {
      v24 = *v22;
      v22 += 6;
      v23 = v24;
      if (v24 < v11)
        v11 = v23;
      --v21;
    }
    while (v21);
  }
LABEL_18:
  v25 = v10 - v11;
  if (v10 < v11)
    return 0;
  v26 = *(_DWORD *)(a1 + 136);
  result = sub_1C3378CB0();
  if ((v27 & 1) != 0)
    return 0;
  if (v26 < v10)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (__CFADD__(v26 - v10, v25))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v28 = result;
  result = sub_1C3378CB0();
  if ((v29 & 1) != 0)
    return 0;
  v30 = result;
  if (result >> 14 >= v28 >> 14)
  {
    swift_bridgeObjectRetain();
    v31 = MEMORY[0x1C3BD0E38](v28, v30, a3, a4);
    v4 = MEMORY[0x1C3BD0E68](v31);
    swift_bridgeObjectRelease();
    return v4;
  }
LABEL_27:
  __break(1u);
  return result;
}

_QWORD *sub_1C3024048(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CEF08);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[10 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 80 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CEA88);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_1C302417C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3024E1C(a1, a2, a3, a4, &qword_1EF819748, &qword_1EF819750);
}

char *sub_1C3024190(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7CE100);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_1C3024290(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819758);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[15 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 120 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819760);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_1C30243C8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3024E1C(a1, a2, a3, a4, &qword_1EF7DFAE0, &qword_1EF7DF4F0);
}

_QWORD *sub_1C30243DC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3024E1C(a1, a2, a3, a4, &qword_1EF7DFAE8, &qword_1EF7DF4F8);
}

char *sub_1C30243F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CEF38);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 192);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[192 * v8])
      memmove(v12, v13, 192 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C3024504(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819A90);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C3024618(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819A98);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C302472C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CEEF0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[96 * v8])
      memmove(v12, v13, 96 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C3024840(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF808AE8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C3024940(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CEF00);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C3024A40(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CDD20);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C3024B40(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819AA8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 24 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C3024C54(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE0F8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1C3024D54(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C302594C(a1, a2, a3, a4, &qword_1EF819B08, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceAlignment);
}

size_t sub_1C3024D68(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C302594C(a1, a2, a3, a4, &qword_1EF819B10, type metadata accessor for Siri_Nl_Core_Protocol_UtteranceSpan);
}

size_t sub_1C3024D7C(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C302594C(a1, a2, a3, a4, &qword_1EF819B18, type metadata accessor for Siri_Nl_Core_Protocol_UsoEntityIdentifier);
}

size_t sub_1C3024D90(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C302594C(a1, a2, a3, a4, &qword_1EF819B20, type metadata accessor for Siri_Nl_Core_Protocol_UsoEdge);
}

size_t sub_1C3024DA4(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C302594C(a1, a2, a3, a4, &qword_1EF819B28, type metadata accessor for Siri_Nl_Core_Protocol_UsoNode);
}

_QWORD *sub_1C3024DB8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819AE0, &qword_1EF819AE8);
}

_QWORD *sub_1C3024DCC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819AD0, &qword_1EF819AD8);
}

_QWORD *sub_1C3024DE0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819AC0, &qword_1EF819AC8);
}

_QWORD *sub_1C3024DF4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819AB0, &qword_1EF819AB8);
}

_QWORD *sub_1C3024E08(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3024E1C(a1, a2, a3, a4, &qword_1EF819AF8, &qword_1EF819B00);
}

_QWORD *sub_1C3024E1C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

char *sub_1C3024F54(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819A88);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C302503C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819A70);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8])
      memmove(v13, v14, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 2 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C3025130(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C30257F8(a1, a2, a3, a4, &qword_1EF819768);
}

char *sub_1C3025144(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DFAF0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 1344);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[1344 * v8])
      memmove(v12, v13, 1344 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C3025264(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C30254A8(a1, a2, a3, a4, &qword_1EF819A80);
}

_QWORD *sub_1C3025270(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819A78);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF500);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C30253A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8087E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C302549C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C30254A8(a1, a2, a3, a4, qword_1EF7DFE68);
}

char *sub_1C30254A8(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v6 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v9])
      memmove(v13, v14, v9);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v9);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_1C302558C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819A60);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819A68);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_1C30256AC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C30256C0(a1, a2, a3, a4, &qword_1EF819A50, &qword_1ED7B33D8);
}

_QWORD *sub_1C30256C0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[v11 + 4])
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

char *sub_1C30257E4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C30257F8(a1, a2, a3, a4, &qword_1EF7DFAF8);
}

char *sub_1C30257F8(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v6 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9])
      memmove(v14, v15, 32 * v9);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v11;
}

size_t sub_1C30258FC(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C302594C(a1, a2, a3, a4, &qword_1EF819740, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

size_t sub_1C3025910(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C302594C(a1, a2, a3, a4, &qword_1EF819738, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
}

size_t sub_1C3025924(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C302594C(a1, a2, a3, a4, &qword_1EF819730, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue);
}

size_t sub_1C3025938(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C302594C(a1, a2, a3, a4, &qword_1EF819728, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode);
}

size_t sub_1C302594C(size_t result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  unint64_t v19;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_29;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  v18 = *(_QWORD *)(a6(0) - 8);
  if ((v8 & 1) != 0)
  {
    if (v16 < a4
      || (v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(_QWORD *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

_QWORD *sub_1C3025AC0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819A40, &qword_1EF819A48);
}

_QWORD *sub_1C3025AD4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819A30, &qword_1EF819A38);
}

_QWORD *sub_1C3025AE8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819A20, &qword_1EF819A28);
}

_QWORD *sub_1C3025AFC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819A10, &qword_1EF819A18);
}

_QWORD *sub_1C3025B10(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819A00, &qword_1EF819A08);
}

_QWORD *sub_1C3025B24(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8199F0, &qword_1EF8199F8);
}

_QWORD *sub_1C3025B38(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8199E0, &qword_1EF8199E8);
}

_QWORD *sub_1C3025B4C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8199D0, &qword_1EF8199D8);
}

_QWORD *sub_1C3025B60(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8199C0, &qword_1EF8199C8);
}

_QWORD *sub_1C3025B74(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8199B0, &qword_1EF8199B8);
}

_QWORD *sub_1C3025B88(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8199A0, &qword_1EF8199A8);
}

_QWORD *sub_1C3025B9C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819990, &qword_1EF819998);
}

_QWORD *sub_1C3025BB0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819980, &qword_1EF819988);
}

_QWORD *sub_1C3025BC4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819970, &qword_1EF819978);
}

_QWORD *sub_1C3025BD8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819960, &qword_1EF819968);
}

_QWORD *sub_1C3025BEC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819950, &qword_1EF819958);
}

_QWORD *sub_1C3025C00(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819940, &qword_1EF819948);
}

_QWORD *sub_1C3025C14(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819930, &qword_1EF819938);
}

_QWORD *sub_1C3025C28(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819920, &qword_1EF819928);
}

_QWORD *sub_1C3025C3C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819910, &qword_1EF819918);
}

_QWORD *sub_1C3025C50(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819900, &qword_1EF819908);
}

_QWORD *sub_1C3025C64(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8198F0, &qword_1EF8198F8);
}

_QWORD *sub_1C3025C78(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8198E0, &qword_1EF8198E8);
}

_QWORD *sub_1C3025C8C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8198D0, &qword_1EF8198D8);
}

_QWORD *sub_1C3025CA0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8198C0, &qword_1EF8198C8);
}

_QWORD *sub_1C3025CB4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8198B0, &qword_1EF8198B8);
}

_QWORD *sub_1C3025CC8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8198A0, &qword_1EF8198A8);
}

_QWORD *sub_1C3025CDC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819890, &qword_1EF819898);
}

_QWORD *sub_1C3025CF0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819880, &qword_1EF819888);
}

_QWORD *sub_1C3025D04(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819870, &qword_1EF819878);
}

_QWORD *sub_1C3025D18(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819860, &qword_1EF819868);
}

_QWORD *sub_1C3025D2C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819850, &qword_1EF819858);
}

_QWORD *sub_1C3025D40(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819840, &qword_1EF819848);
}

_QWORD *sub_1C3025D54(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819830, &qword_1EF819838);
}

_QWORD *sub_1C3025D68(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819820, &qword_1EF819828);
}

_QWORD *sub_1C3025D7C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819810, &qword_1EF819818);
}

_QWORD *sub_1C3025D90(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819800, &qword_1EF819808);
}

_QWORD *sub_1C3025DA4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8197F0, &qword_1EF8197F8);
}

_QWORD *sub_1C3025DB8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8197E0, &qword_1EF8197E8);
}

_QWORD *sub_1C3025DCC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8197D0, &qword_1EF8197D8);
}

_QWORD *sub_1C3025DE0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8197C0, &qword_1EF8197C8);
}

_QWORD *sub_1C3025DF4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8197B0, &qword_1EF8197B8);
}

_QWORD *sub_1C3025E08(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF8197A0, &qword_1EF8197A8);
}

_QWORD *sub_1C3025E1C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819790, &qword_1EF819798);
}

_QWORD *sub_1C3025E30(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C3025E44(a1, a2, a3, a4, &qword_1EF819780, &qword_1EF819788);
}

_QWORD *sub_1C3025E44(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 17;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[2 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

_QWORD *sub_1C3025F68(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819770);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[10 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 80 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819778);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_1C302609C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819B48);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1C3028FCC((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1C302995C();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1C3026180(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819A58);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 29;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * (v5 >> 2);
  v6 = sub_1C30291CC(&v8, (_DWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1C302995C();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1C3026264(char **a1)
{
  char *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1C31C2530((uint64_t)v2);
    *a1 = v2;
  }
  v4 = *((_QWORD *)v2 + 2);
  v6[0] = (uint64_t)(v2 + 32);
  v6[1] = v4;
  result = sub_1C3026344(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1C30262D4(_QWORD **a1)
{
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1C31C2544(v2);
    *a1 = v2;
  }
  v4 = v2[2];
  v6[0] = (uint64_t)(v2 + 4);
  v6[1] = v4;
  result = sub_1C3026BD0(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1C3026344(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  BOOL v27;
  BOOL v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  char v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *__src;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  _BYTE v136[25];
  _BYTE v137[25];

  v2 = a1;
  v3 = a1[1];
  result = sub_1C3379154();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_182;
    if (v3)
      return sub_1C3027270(0, v3, 1, v2);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_181;
  v112 = result;
  if (v3 <= 1)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    __src = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v111 = MEMORY[0x1E0DEE9D8];
    if (v3 != 1)
    {
      v10 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v10 < 2)
        goto LABEL_159;
      goto LABEL_147;
    }
  }
  else
  {
    v6 = v5 >> 1;
    result = sub_1C3378DC4();
    *(_QWORD *)(result + 16) = v6;
    v111 = result;
    __src = (char *)(result + 32);
  }
  v8 = 0;
  v9 = *v2;
  v110 = *v2 + 140;
  v108 = v2;
  v109 = *v2 - 192;
  v7 = MEMORY[0x1E0DEE9D8];
  v113 = v3;
  while (1)
  {
    v11 = v8;
    v12 = v8 + 1;
    if (v8 + 1 >= v3)
      goto LABEL_58;
    v13 = v9 + 192 * v12;
    if ((*(_BYTE *)(v13 + 132) & 1) == 0 && (*(_BYTE *)(v13 + 140) & 1) == 0)
    {
      v14 = v9 + 192 * v11;
      if ((*(_BYTE *)(v14 + 132) & 1) == 0 && (*(_BYTE *)(v14 + 140) & 1) == 0)
      {
        v15 = *(_DWORD *)(v13 + 128);
        v16 = *(_DWORD *)(v14 + 128);
        if (v15 < v16)
          goto LABEL_61;
        if (v16 >= v15)
        {
          v33 = *(_DWORD *)(v13 + 136);
          v34 = *(_DWORD *)(v14 + 136);
          if (v34 >= v33)
          {
            v35 = *(unsigned __int8 *)(v13 + 16);
            v17 = v11 + 2;
            if (v33 != v34 || v35 == 7 || v35 != 2)
            {
              if (v17 >= v3)
                goto LABEL_71;
              goto LABEL_23;
            }
            if (v17 >= v3)
              goto LABEL_51;
          }
          else
          {
LABEL_61:
            v17 = v11 + 2;
            if (v11 + 2 >= v3)
              goto LABEL_51;
          }
          v18 = 1;
          goto LABEL_24;
        }
      }
    }
    v17 = v11 + 2;
    if (v11 + 2 >= v3)
      goto LABEL_71;
LABEL_23:
    v18 = 0;
LABEL_24:
    if (v3 <= v17 + 1)
      v19 = v17 + 1;
    else
      v19 = v3;
    v20 = (_BYTE *)(v110 + 192 * v17);
    do
    {
      if ((*(v20 - 8) & 1) != 0)
        goto LABEL_28;
      if ((*v20 & 1) != 0)
        goto LABEL_28;
      v21 = v9 + 192 * v12;
      if ((*(_BYTE *)(v21 + 132) & 1) != 0 || (*(_BYTE *)(v21 + 140) & 1) != 0)
        goto LABEL_28;
      v22 = *((_DWORD *)v20 - 3);
      v23 = *(_DWORD *)(v21 + 128);
      if (v22 >= v23
        && (v23 < v22
         || (v24 = *((_DWORD *)v20 - 1), v25 = *(_DWORD *)(v21 + 136), v25 >= v24)
         && ((v26 = *(v20 - 124), v24 == v25) ? (v27 = v26 == 7) : (v27 = 1),
             !v27 ? (v28 = v26 == 2) : (v28 = 0),
             !v28)))
      {
LABEL_28:
        if ((v18 & 1) != 0)
        {
          v19 = v17;
          goto LABEL_50;
        }
      }
      else if ((v18 & 1) == 0)
      {
        goto LABEL_71;
      }
      v12 = v17;
      v20 += 192;
      ++v17;
    }
    while (v17 < v3);
    if (!v18)
      goto LABEL_81;
LABEL_50:
    v17 = v19;
    if (v19 < v11)
      goto LABEL_185;
LABEL_51:
    if (v11 < v17)
    {
      v29 = (_OWORD *)(v109 + 192 * v17);
      v30 = v17;
      v31 = v11;
      v32 = (__int128 *)(v9 + 192 * v11);
      do
      {
        if (v31 != --v30)
        {
          if (!v9)
            goto LABEL_188;
          v132 = v32[8];
          v134 = v32[9];
          *(_OWORD *)v136 = v32[10];
          *(_OWORD *)&v136[9] = *(__int128 *)((char *)v32 + 169);
          v124 = v32[4];
          v126 = v32[5];
          v128 = v32[6];
          v130 = v32[7];
          v116 = *v32;
          v118 = v32[1];
          v120 = v32[2];
          v122 = v32[3];
          result = (uint64_t)memmove(v32, v29, 0xC0uLL);
          v29[8] = v132;
          v29[9] = v134;
          v29[10] = *(_OWORD *)v136;
          *(_OWORD *)((char *)v29 + 169) = *(_OWORD *)&v136[9];
          v29[4] = v124;
          v29[5] = v126;
          v29[6] = v128;
          v29[7] = v130;
          *v29 = v116;
          v29[1] = v118;
          v29[2] = v120;
          v29[3] = v122;
        }
        ++v31;
        v29 -= 12;
        v32 += 12;
      }
      while (v31 < v30);
      v12 = v17;
      v3 = v113;
LABEL_58:
      if (v12 >= v3)
        goto LABEL_80;
      goto LABEL_72;
    }
LABEL_71:
    v12 = v17;
    if (v17 >= v3)
      goto LABEL_80;
LABEL_72:
    if (__OFSUB__(v12, v11))
      goto LABEL_180;
    if (v12 - v11 >= v112)
    {
LABEL_80:
      v19 = v12;
      goto LABEL_81;
    }
    if (__OFADD__(v11, v112))
      goto LABEL_183;
    v19 = v11 + v112 >= v3 ? v3 : v11 + v112;
    if (v19 < v11)
      break;
    if (v12 == v19)
      goto LABEL_80;
    v87 = v109 + 192 * v12;
    do
    {
      v88 = v11;
      v89 = v87;
      do
      {
        if ((*(_BYTE *)(v89 + 324) & 1) != 0)
          break;
        if ((*(_BYTE *)(v89 + 332) & 1) != 0)
          break;
        if ((*(_BYTE *)(v89 + 132) & 1) != 0)
          break;
        if ((*(_BYTE *)(v89 + 140) & 1) != 0)
          break;
        v90 = *(_DWORD *)(v89 + 320);
        v91 = *(_DWORD *)(v89 + 128);
        if (v90 >= v91)
        {
          if (v91 < v90)
            break;
          v92 = *(_DWORD *)(v89 + 328);
          v93 = *(_DWORD *)(v89 + 136);
          if (v93 >= v92 && (v92 != v93 || *(_BYTE *)(v89 + 208) != 2))
            break;
        }
        if (!v9)
          goto LABEL_186;
        v94 = v89 + 192;
        v133 = *(_OWORD *)(v89 + 320);
        v135 = *(_OWORD *)(v89 + 336);
        *(_OWORD *)v137 = *(_OWORD *)(v89 + 352);
        *(_OWORD *)&v137[9] = *(_OWORD *)(v89 + 361);
        v125 = *(_OWORD *)(v89 + 256);
        v127 = *(_OWORD *)(v89 + 272);
        v129 = *(_OWORD *)(v89 + 288);
        v131 = *(_OWORD *)(v89 + 304);
        v117 = *(_OWORD *)(v89 + 192);
        v119 = *(_OWORD *)(v89 + 208);
        v121 = *(_OWORD *)(v89 + 224);
        v123 = *(_OWORD *)(v89 + 240);
        v95 = *(_OWORD *)(v89 + 144);
        *(_OWORD *)(v89 + 320) = *(_OWORD *)(v89 + 128);
        *(_OWORD *)(v89 + 336) = v95;
        v96 = *(_OWORD *)(v89 + 176);
        *(_OWORD *)(v89 + 352) = *(_OWORD *)(v89 + 160);
        *(_OWORD *)(v89 + 368) = v96;
        v97 = *(_OWORD *)(v89 + 80);
        *(_OWORD *)(v89 + 256) = *(_OWORD *)(v89 + 64);
        *(_OWORD *)(v89 + 272) = v97;
        v98 = *(_OWORD *)(v89 + 112);
        *(_OWORD *)(v89 + 288) = *(_OWORD *)(v89 + 96);
        *(_OWORD *)(v89 + 304) = v98;
        v99 = *(_OWORD *)(v89 + 16);
        *(_OWORD *)(v89 + 192) = *(_OWORD *)v89;
        *(_OWORD *)(v89 + 208) = v99;
        v100 = *(_OWORD *)(v89 + 32);
        v101 = *(_OWORD *)(v89 + 48);
        *(_OWORD *)(v89 + 128) = v133;
        *(_OWORD *)(v89 + 144) = v135;
        *(_OWORD *)(v89 + 160) = *(_OWORD *)v137;
        *(_OWORD *)(v89 + 169) = *(_OWORD *)&v137[9];
        *(_OWORD *)(v89 + 64) = v125;
        *(_OWORD *)(v89 + 80) = v127;
        *(_OWORD *)(v89 + 96) = v129;
        *(_OWORD *)(v89 + 112) = v131;
        *(_OWORD *)v89 = v117;
        *(_OWORD *)(v89 + 16) = v119;
        *(_OWORD *)(v89 + 32) = v121;
        *(_OWORD *)(v89 + 48) = v123;
        v89 -= 192;
        ++v88;
        *(_OWORD *)(v94 + 32) = v100;
        *(_OWORD *)(v94 + 48) = v101;
      }
      while (v12 != v88);
      ++v12;
      v87 += 192;
    }
    while (v12 != v19);
LABEL_81:
    if (v19 < v11)
      goto LABEL_175;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C31C2410(0, *(_QWORD *)(v7 + 16) + 1, 1, (char *)v7);
      v7 = result;
    }
    v39 = *(_QWORD *)(v7 + 16);
    v38 = *(_QWORD *)(v7 + 24);
    v10 = v39 + 1;
    if (v39 >= v38 >> 1)
    {
      result = (uint64_t)sub_1C31C2410((char *)(v38 > 1), v39 + 1, 1, (char *)v7);
      v7 = result;
    }
    *(_QWORD *)(v7 + 16) = v10;
    v40 = v7 + 32;
    v41 = (uint64_t *)(v7 + 32 + 16 * v39);
    *v41 = v11;
    v41[1] = v19;
    v114 = v19;
    if (v39)
    {
      while (1)
      {
        v42 = v10 - 1;
        if (v10 >= 4)
        {
          v47 = v40 + 16 * v10;
          v48 = *(_QWORD *)(v47 - 64);
          v49 = *(_QWORD *)(v47 - 56);
          v53 = __OFSUB__(v49, v48);
          v50 = v49 - v48;
          if (v53)
            goto LABEL_164;
          v52 = *(_QWORD *)(v47 - 48);
          v51 = *(_QWORD *)(v47 - 40);
          v53 = __OFSUB__(v51, v52);
          v45 = v51 - v52;
          v46 = v53;
          if (v53)
            goto LABEL_165;
          v54 = v10 - 2;
          v55 = (uint64_t *)(v40 + 16 * (v10 - 2));
          v57 = *v55;
          v56 = v55[1];
          v53 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          if (v53)
            goto LABEL_166;
          v53 = __OFADD__(v45, v58);
          v59 = v45 + v58;
          if (v53)
            goto LABEL_168;
          if (v59 >= v50)
          {
            v77 = (uint64_t *)(v40 + 16 * v42);
            v79 = *v77;
            v78 = v77[1];
            v53 = __OFSUB__(v78, v79);
            v80 = v78 - v79;
            if (v53)
              goto LABEL_174;
            v70 = v45 < v80;
            goto LABEL_118;
          }
        }
        else
        {
          if (v10 != 3)
          {
            v71 = *(_QWORD *)(v7 + 32);
            v72 = *(_QWORD *)(v7 + 40);
            v53 = __OFSUB__(v72, v71);
            v64 = v72 - v71;
            v65 = v53;
            goto LABEL_112;
          }
          v44 = *(_QWORD *)(v7 + 32);
          v43 = *(_QWORD *)(v7 + 40);
          v53 = __OFSUB__(v43, v44);
          v45 = v43 - v44;
          v46 = v53;
        }
        if ((v46 & 1) != 0)
          goto LABEL_167;
        v54 = v10 - 2;
        v60 = (uint64_t *)(v40 + 16 * (v10 - 2));
        v62 = *v60;
        v61 = v60[1];
        v63 = __OFSUB__(v61, v62);
        v64 = v61 - v62;
        v65 = v63;
        if (v63)
          goto LABEL_169;
        v66 = (uint64_t *)(v40 + 16 * v42);
        v68 = *v66;
        v67 = v66[1];
        v53 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v53)
          goto LABEL_171;
        if (__OFADD__(v64, v69))
          goto LABEL_173;
        if (v64 + v69 >= v45)
        {
          v70 = v45 < v69;
LABEL_118:
          if (v70)
            v42 = v54;
          goto LABEL_120;
        }
LABEL_112:
        if ((v65 & 1) != 0)
          goto LABEL_170;
        v73 = (uint64_t *)(v40 + 16 * v42);
        v75 = *v73;
        v74 = v73[1];
        v53 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v53)
          goto LABEL_172;
        if (v76 < v64)
          goto LABEL_14;
LABEL_120:
        v81 = v42 - 1;
        if (v42 - 1 >= v10)
        {
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
          goto LABEL_184;
        }
        if (!v9)
          goto LABEL_187;
        v82 = (uint64_t *)(v40 + 16 * v81);
        v83 = *v82;
        v84 = (_QWORD *)(v40 + 16 * v42);
        v85 = v84[1];
        result = sub_1C30273DC((char *)(v9 + 192 * *v82), (char *)(v9 + 192 * *v84), v9 + 192 * v85, __src);
        if (v1)
          goto LABEL_159;
        if (v85 < v83)
          goto LABEL_161;
        if (v42 > *(_QWORD *)(v7 + 16))
          goto LABEL_162;
        *v82 = v83;
        *(_QWORD *)(v40 + 16 * v81 + 8) = v85;
        v86 = *(_QWORD *)(v7 + 16);
        if (v42 >= v86)
          goto LABEL_163;
        v10 = v86 - 1;
        result = (uint64_t)memmove((void *)(v40 + 16 * v42), v84 + 2, 16 * (v86 - 1 - v42));
        *(_QWORD *)(v7 + 16) = v86 - 1;
        if (v86 <= 2)
          goto LABEL_14;
      }
    }
    v10 = 1;
LABEL_14:
    v3 = v113;
    v8 = v114;
    if (v114 >= v113)
    {
      v2 = v108;
      if (v10 < 2)
      {
LABEL_159:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v111 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
LABEL_147:
      v102 = *v2;
      while (1)
      {
        v103 = v10 - 2;
        if (v10 < 2)
          goto LABEL_176;
        if (!v102)
          goto LABEL_189;
        v104 = *(_QWORD *)(v7 + 32 + 16 * v103);
        v105 = *(_QWORD *)(v7 + 32 + 16 * (v10 - 1) + 8);
        result = sub_1C30273DC((char *)(v102 + 192 * v104), (char *)(v102 + 192 * *(_QWORD *)(v7 + 32 + 16 * (v10 - 1))), v102 + 192 * v105, __src);
        if (v1)
          goto LABEL_159;
        if (v105 < v104)
          goto LABEL_177;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1C31C2508(v7);
          v7 = result;
        }
        if (v103 >= *(_QWORD *)(v7 + 16))
          goto LABEL_178;
        v106 = (_QWORD *)(v7 + 32 + 16 * v103);
        *v106 = v104;
        v106[1] = v105;
        v107 = *(_QWORD *)(v7 + 16);
        if (v10 > v107)
          goto LABEL_179;
        result = (uint64_t)memmove((void *)(v7 + 32 + 16 * (v10 - 1)), (const void *)(v7 + 32 + 16 * v10), 16 * (v107 - v10));
        *(_QWORD *)(v7 + 16) = v107 - 1;
        v10 = v107 - 1;
        if (v107 <= 2)
          goto LABEL_159;
      }
    }
  }
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
  return result;
}

uint64_t sub_1C3026BD0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t i;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;

  v3 = a1[1];
  result = sub_1C3379154();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v83 = 0;
      v84 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v86 = *(_DWORD *)(v84 + 16 * i);
        v87 = v83;
        do
        {
          if (v86 >= *(_DWORD *)(v84 + v87))
            break;
          if (!v84)
            goto LABEL_141;
          v88 = v84 + v87;
          v89 = *(_QWORD *)(v84 + v87 + 24);
          *(_OWORD *)(v84 + v87 + 16) = *(_OWORD *)(v84 + v87);
          *(_DWORD *)v88 = v86;
          *(_QWORD *)(v88 + 8) = v89;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_136;
    v6 = result;
    v98 = a1;
    if (v3 > 1)
    {
      v7 = v5 >> 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819B40);
      result = sub_1C3378DC4();
      *(_QWORD *)(result + 16) = v7;
      v100 = result;
      v104 = (char *)(result + 32);
LABEL_13:
      v9 = 0;
      v10 = *a1;
      v99 = *a1 + 32;
      v97 = *a1 - 16;
      v11 = MEMORY[0x1E0DEE9D8];
      v101 = v6;
      v102 = v3;
      v103 = v10;
      while (1)
      {
        v13 = v9++;
        if (v9 < v3)
        {
          v14 = *(_DWORD *)(v10 + 16 * v9);
          v15 = 16 * v13;
          v16 = *(_DWORD *)(v10 + 16 * v13);
          v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            v17 = (unsigned int *)(v99 + 16 * v13);
            v18 = v14;
            while (1)
            {
              v20 = *v17;
              v17 += 4;
              v19 = v20;
              if (v14 < v16 == v20 >= v18)
                break;
              ++v9;
              v18 = v19;
              if (v3 == v9)
              {
                v9 = v3;
                break;
              }
            }
          }
          if (v14 < v16)
          {
            if (v9 < v13)
              goto LABEL_138;
            if (v13 < v9)
            {
              v21 = 16 * v9;
              v22 = v9;
              v23 = v13;
              do
              {
                if (v23 != --v22)
                {
                  if (!v10)
                    goto LABEL_144;
                  v24 = v10 + v21;
                  v25 = *(_DWORD *)(v10 + v15);
                  v26 = *(_QWORD *)(v10 + v15 + 8);
                  *(_OWORD *)(v10 + v15) = *(_OWORD *)(v10 + v21 - 16);
                  *(_DWORD *)(v24 - 16) = v25;
                  *(_QWORD *)(v24 - 8) = v26;
                }
                ++v23;
                v21 -= 16;
                v15 += 16;
              }
              while (v23 < v22);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13))
            goto LABEL_135;
          if (v9 - v13 < v6)
          {
            v27 = v13 + v6;
            if (__OFADD__(v13, v6))
              goto LABEL_139;
            if (v27 >= v3)
              v27 = v3;
            if (v27 < v13)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v9 != v27)
            {
              v28 = v97 + 16 * v9;
              do
              {
                v29 = *(_DWORD *)(v10 + 16 * v9);
                v30 = v13;
                v31 = v28;
                do
                {
                  if (v29 >= *(_DWORD *)v31)
                    break;
                  if (!v10)
                    goto LABEL_142;
                  v32 = *(_QWORD *)(v31 + 24);
                  *(_OWORD *)(v31 + 16) = *(_OWORD *)v31;
                  *(_DWORD *)v31 = v29;
                  *(_QWORD *)(v31 + 8) = v32;
                  v31 -= 16;
                  ++v30;
                }
                while (v9 != v30);
                ++v9;
                v28 += 16;
              }
              while (v9 != v27);
              v9 = v27;
            }
          }
        }
        if (v9 < v13)
          goto LABEL_130;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1C31C2410(0, *(_QWORD *)(v11 + 16) + 1, 1, (char *)v11);
          v11 = result;
        }
        v34 = *(_QWORD *)(v11 + 16);
        v33 = *(_QWORD *)(v11 + 24);
        v12 = v34 + 1;
        v10 = v103;
        if (v34 >= v33 >> 1)
        {
          result = (uint64_t)sub_1C31C2410((char *)(v33 > 1), v34 + 1, 1, (char *)v11);
          v10 = v103;
          v11 = result;
        }
        *(_QWORD *)(v11 + 16) = v12;
        v35 = v11 + 32;
        v36 = (uint64_t *)(v11 + 32 + 16 * v34);
        *v36 = v13;
        v36[1] = v9;
        if (v34)
        {
          while (1)
          {
            v37 = v12 - 1;
            if (v12 >= 4)
            {
              v42 = v35 + 16 * v12;
              v43 = *(_QWORD *)(v42 - 64);
              v44 = *(_QWORD *)(v42 - 56);
              v48 = __OFSUB__(v44, v43);
              v45 = v44 - v43;
              if (v48)
                goto LABEL_119;
              v47 = *(_QWORD *)(v42 - 48);
              v46 = *(_QWORD *)(v42 - 40);
              v48 = __OFSUB__(v46, v47);
              v40 = v46 - v47;
              v41 = v48;
              if (v48)
                goto LABEL_120;
              v49 = v12 - 2;
              v50 = (uint64_t *)(v35 + 16 * (v12 - 2));
              v52 = *v50;
              v51 = v50[1];
              v48 = __OFSUB__(v51, v52);
              v53 = v51 - v52;
              if (v48)
                goto LABEL_121;
              v48 = __OFADD__(v40, v53);
              v54 = v40 + v53;
              if (v48)
                goto LABEL_123;
              if (v54 >= v45)
              {
                v72 = (uint64_t *)(v35 + 16 * v37);
                v74 = *v72;
                v73 = v72[1];
                v48 = __OFSUB__(v73, v74);
                v75 = v73 - v74;
                if (v48)
                  goto LABEL_129;
                v65 = v40 < v75;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                v66 = *(_QWORD *)(v11 + 32);
                v67 = *(_QWORD *)(v11 + 40);
                v48 = __OFSUB__(v67, v66);
                v59 = v67 - v66;
                v60 = v48;
                goto LABEL_77;
              }
              v39 = *(_QWORD *)(v11 + 32);
              v38 = *(_QWORD *)(v11 + 40);
              v48 = __OFSUB__(v38, v39);
              v40 = v38 - v39;
              v41 = v48;
            }
            if ((v41 & 1) != 0)
              goto LABEL_122;
            v49 = v12 - 2;
            v55 = (uint64_t *)(v35 + 16 * (v12 - 2));
            v57 = *v55;
            v56 = v55[1];
            v58 = __OFSUB__(v56, v57);
            v59 = v56 - v57;
            v60 = v58;
            if (v58)
              goto LABEL_124;
            v61 = (uint64_t *)(v35 + 16 * v37);
            v63 = *v61;
            v62 = v61[1];
            v48 = __OFSUB__(v62, v63);
            v64 = v62 - v63;
            if (v48)
              goto LABEL_126;
            if (__OFADD__(v59, v64))
              goto LABEL_128;
            if (v59 + v64 >= v40)
            {
              v65 = v40 < v64;
LABEL_83:
              if (v65)
                v37 = v49;
              goto LABEL_85;
            }
LABEL_77:
            if ((v60 & 1) != 0)
              goto LABEL_125;
            v68 = (uint64_t *)(v35 + 16 * v37);
            v70 = *v68;
            v69 = v68[1];
            v48 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v48)
              goto LABEL_127;
            if (v71 < v59)
              goto LABEL_15;
LABEL_85:
            v76 = v37 - 1;
            if (v37 - 1 >= v12)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v10)
              goto LABEL_143;
            v77 = v11;
            v78 = (uint64_t *)(v35 + 16 * v76);
            v79 = *v78;
            v80 = (_QWORD *)(v35 + 16 * v37);
            v81 = v80[1];
            result = sub_1C30276D0((char *)(v10 + 16 * *v78), (char *)(v10 + 16 * *v80), v10 + 16 * v81, v104);
            if (v1)
              goto LABEL_93;
            if (v81 < v79)
              goto LABEL_116;
            if (v37 > *(_QWORD *)(v77 + 16))
              goto LABEL_117;
            *v78 = v79;
            *(_QWORD *)(v35 + 16 * v76 + 8) = v81;
            v82 = *(_QWORD *)(v77 + 16);
            if (v37 >= v82)
              goto LABEL_118;
            v11 = v77;
            v12 = v82 - 1;
            result = (uint64_t)memmove((void *)(v35 + 16 * v37), v80 + 2, 16 * (v82 - 1 - v37));
            *(_QWORD *)(v77 + 16) = v82 - 1;
            v10 = v103;
            if (v82 <= 2)
              goto LABEL_15;
          }
        }
        v12 = 1;
LABEL_15:
        v6 = v101;
        v3 = v102;
        if (v9 >= v102)
        {
          v8 = v100;
          goto LABEL_102;
        }
      }
    }
    v8 = MEMORY[0x1E0DEE9D8];
    v104 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 == 1)
    {
      v100 = MEMORY[0x1E0DEE9D8];
      goto LABEL_13;
    }
    v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_102:
    result = v11;
    v100 = v8;
    if (v12 >= 2)
    {
      v90 = *v98;
      do
      {
        v91 = v12 - 2;
        if (v12 < 2)
          goto LABEL_131;
        if (!v90)
          goto LABEL_145;
        v92 = result;
        v93 = *(_QWORD *)(result + 32 + 16 * v91);
        v94 = *(_QWORD *)(result + 32 + 16 * (v12 - 1) + 8);
        result = sub_1C30276D0((char *)(v90 + 16 * v93), (char *)(v90 + 16 * *(_QWORD *)(result + 32 + 16 * (v12 - 1))), v90 + 16 * v94, v104);
        if (v1)
          break;
        if (v94 < v93)
          goto LABEL_132;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1C31C2508(v92);
          v92 = result;
        }
        if (v91 >= *(_QWORD *)(v92 + 16))
          goto LABEL_133;
        v95 = (_QWORD *)(v92 + 32 + 16 * v91);
        *v95 = v93;
        v95[1] = v94;
        v96 = *(_QWORD *)(v92 + 16);
        if (v12 > v96)
          goto LABEL_134;
        memmove((void *)(v92 + 32 + 16 * (v12 - 1)), (const void *)(v92 + 32 + 16 * v12), 16 * (v96 - v12));
        result = v92;
        *(_QWORD *)(v92 + 16) = v96 - 1;
        v12 = v96 - 1;
      }
      while (v96 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v100 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C3027270(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[25];

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 192 * a3 - 192;
LABEL_5:
    v6 = result;
    v7 = v5;
    while (1)
    {
      if ((*(_BYTE *)(v7 + 324) & 1) != 0
        || (*(_BYTE *)(v7 + 332) & 1) != 0
        || (*(_BYTE *)(v7 + 132) & 1) != 0
        || (*(_BYTE *)(v7 + 140) & 1) != 0
        || (v8 = *(_DWORD *)(v7 + 320), v9 = *(_DWORD *)(v7 + 128), v8 >= v9)
        && (v9 < v8
         || (v10 = *(_DWORD *)(v7 + 328), v11 = *(_DWORD *)(v7 + 136), v11 >= v10)
         && (v10 != v11 || *(_BYTE *)(v7 + 208) != 2)))
      {
LABEL_4:
        ++a3;
        v5 += 192;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      v12 = v7 + 192;
      v28 = *(_OWORD *)(v7 + 320);
      v29 = *(_OWORD *)(v7 + 336);
      *(_OWORD *)v30 = *(_OWORD *)(v7 + 352);
      *(_OWORD *)&v30[9] = *(_OWORD *)(v7 + 361);
      v24 = *(_OWORD *)(v7 + 256);
      v25 = *(_OWORD *)(v7 + 272);
      v26 = *(_OWORD *)(v7 + 288);
      v27 = *(_OWORD *)(v7 + 304);
      v20 = *(_OWORD *)(v7 + 192);
      v21 = *(_OWORD *)(v7 + 208);
      v22 = *(_OWORD *)(v7 + 224);
      v23 = *(_OWORD *)(v7 + 240);
      v13 = *(_OWORD *)(v7 + 144);
      *(_OWORD *)(v7 + 320) = *(_OWORD *)(v7 + 128);
      *(_OWORD *)(v7 + 336) = v13;
      v14 = *(_OWORD *)(v7 + 176);
      *(_OWORD *)(v7 + 352) = *(_OWORD *)(v7 + 160);
      *(_OWORD *)(v7 + 368) = v14;
      v15 = *(_OWORD *)(v7 + 80);
      *(_OWORD *)(v7 + 256) = *(_OWORD *)(v7 + 64);
      *(_OWORD *)(v7 + 272) = v15;
      v16 = *(_OWORD *)(v7 + 112);
      *(_OWORD *)(v7 + 288) = *(_OWORD *)(v7 + 96);
      *(_OWORD *)(v7 + 304) = v16;
      v17 = *(_OWORD *)(v7 + 16);
      *(_OWORD *)(v7 + 192) = *(_OWORD *)v7;
      *(_OWORD *)(v7 + 208) = v17;
      v18 = *(_OWORD *)(v7 + 32);
      v19 = *(_OWORD *)(v7 + 48);
      *(_OWORD *)(v7 + 128) = v28;
      *(_OWORD *)(v7 + 144) = v29;
      *(_OWORD *)(v7 + 160) = *(_OWORD *)v30;
      *(_OWORD *)(v7 + 169) = *(_OWORD *)&v30[9];
      *(_OWORD *)(v7 + 64) = v24;
      *(_OWORD *)(v7 + 80) = v25;
      *(_OWORD *)(v7 + 96) = v26;
      *(_OWORD *)(v7 + 112) = v27;
      *(_OWORD *)v7 = v20;
      *(_OWORD *)(v7 + 16) = v21;
      *(_OWORD *)(v7 + 32) = v22;
      *(_OWORD *)(v7 + 48) = v23;
      v7 -= 192;
      ++v6;
      *(_OWORD *)(v12 + 32) = v18;
      *(_OWORD *)(v12 + 48) = v19;
      if (a3 == v6)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C30273DC(char *__dst, char *a2, unint64_t a3, char *__src)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  BOOL v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  size_t v30;

  v4 = __src;
  v6 = a2;
  v7 = __dst;
  v8 = a2 - __dst;
  v9 = (a2 - __dst) / 192;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 192;
  if (v9 >= v11)
  {
    v21 = 192 * v11;
    if (__src != a2 || &a2[v21] <= __src)
      memmove(__src, a2, 192 * v11);
    v13 = &v4[v21];
    if (v7 >= v6 || v10 < 192)
      goto LABEL_59;
    v22 = (char *)(a3 - 192);
    while (1)
    {
      v23 = v22 + 192;
      if ((*(v13 - 60) & 1) != 0
        || (*(v13 - 52) & 1) != 0
        || (*(v6 - 60) & 1) != 0
        || (*(v6 - 52) & 1) != 0
        || (v26 = *((_DWORD *)v13 - 16), v27 = *((_DWORD *)v6 - 16), v26 >= v27)
        && (v27 < v26
         || (v28 = *((_DWORD *)v13 - 14), v29 = *((_DWORD *)v6 - 14), v29 >= v28) && (v28 != v29 || *(v13 - 176) != 2)))
      {
        v24 = v13 - 192;
        if (v23 != v13)
        {
          v13 -= 192;
LABEL_48:
          memmove(v22, v24, 0xC0uLL);
          goto LABEL_49;
        }
        v25 = v22 >= v13;
        v13 -= 192;
        if (v25)
          goto LABEL_48;
      }
      else
      {
        v24 = v6 - 192;
        if (v23 != v6)
        {
          v6 -= 192;
          goto LABEL_48;
        }
        v25 = v22 >= v6;
        v6 -= 192;
        if (v25)
          goto LABEL_48;
      }
LABEL_49:
      if (v6 > v7)
      {
        v22 -= 192;
        if (v13 > v4)
          continue;
      }
      goto LABEL_59;
    }
  }
  v12 = 192 * v9;
  if (__src != __dst || &__dst[v12] <= __src)
    memmove(__src, __dst, v12);
  v13 = &v4[v12];
  if ((unint64_t)v6 < a3 && v8 >= 192)
  {
    while (1)
    {
      if ((v6[132] & 1) != 0
        || (v6[140] & 1) != 0
        || (v4[132] & 1) != 0
        || (v4[140] & 1) != 0
        || (v17 = *((_DWORD *)v6 + 32), v18 = *((_DWORD *)v4 + 32), v17 >= v18)
        && (v18 < v17
         || (v19 = *((_DWORD *)v6 + 34), v20 = *((_DWORD *)v4 + 34), v20 >= v19) && (v19 != v20 || v6[16] != 2)))
      {
        v14 = v4 + 192;
        v15 = v4;
        v16 = v6;
        if (v7 == v4)
        {
          v4 += 192;
          if (v7 < v14)
            goto LABEL_20;
        }
        else
        {
          v4 += 192;
        }
      }
      else
      {
        v16 = v6 + 192;
        v15 = v6;
        if (v7 == v6 && v7 < v16)
          goto LABEL_20;
      }
      memmove(v7, v15, 0xC0uLL);
LABEL_20:
      v7 += 192;
      if (v4 < v13)
      {
        v6 = v16;
        if ((unint64_t)v16 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_59:
  v30 = 192 * ((v13 - v4) / 192);
  if (v6 != v4 || v6 >= &v4[v30])
    memmove(v6, v4, v30);
  return 1;
}

uint64_t sub_1C30276D0(char *__dst, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  BOOL v16;
  char *v17;
  char *v18;
  char *v19;
  BOOL v20;
  int64_t v21;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = __src - __dst;
  v9 = __src - __dst + 15;
  if (__src - __dst >= 0)
    v9 = __src - __dst;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 15;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4)
      memmove(a4, __src, 16 * v13);
    v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16)
      goto LABEL_40;
    v17 = (char *)(a3 - 16);
    while (1)
    {
      v18 = v17 + 16;
      v19 = v6 - 16;
      if (*((_DWORD *)v14 - 4) >= *((_DWORD *)v6 - 4))
      {
        v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
          goto LABEL_37;
        }
        v20 = v17 >= v14;
        v14 -= 16;
        if (v20)
          goto LABEL_37;
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
LABEL_37:
          *(_OWORD *)v17 = *(_OWORD *)v19;
          goto LABEL_38;
        }
        v20 = v17 >= v6;
        v6 -= 16;
        if (v20)
          goto LABEL_37;
      }
LABEL_38:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4)
          continue;
      }
      goto LABEL_40;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4)
    memmove(a4, __dst, 16 * v10);
  v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (*(_DWORD *)v6 < *(_DWORD *)v4)
    {
      v15 = v6;
      v16 = v7 == v6;
      v6 += 16;
      if (!v16)
        goto LABEL_16;
LABEL_17:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
        goto LABEL_19;
    }
    v15 = v4;
    v16 = v7 == v4;
    v4 += 16;
    if (v16)
      goto LABEL_17;
LABEL_16:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_17;
  }
LABEL_19:
  v6 = v7;
LABEL_40:
  v21 = v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0);
  if (v6 != v4 || v6 >= &v4[v21 & 0xFFFFFFFFFFFFFFF0])
    memmove(v6, v4, 16 * (v21 >> 4));
  return 1;
}

uint64_t sub_1C30278DC(uint64_t a1, char a2)
{
  return sub_1C3027C84(a1, a2, &qword_1ED7CE130);
}

uint64_t sub_1C30278E8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t i;
  char v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DFAD0);
  v41 = a2;
  v6 = sub_1C3379004();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v23 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v24 = v23 | (v13 << 6);
      goto LABEL_31;
    }
    v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v25 >= v38)
      break;
    v26 = v39;
    v27 = v39[v25];
    ++v13;
    if (!v27)
    {
      v13 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v27 = v39[v13];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v38)
        {
LABEL_33:
          swift_release();
          v3 = v37;
          if ((v41 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v27 = v39[v28];
        if (!v27)
        {
          while (1)
          {
            v13 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_42;
            if (v13 >= v38)
              goto LABEL_33;
            v27 = v39[v13];
            ++v28;
            if (v27)
              goto LABEL_30;
          }
        }
        v13 = v28;
      }
    }
LABEL_30:
    v10 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_31:
    v33 = 8 * v24;
    v34 = *(_QWORD **)(*(_QWORD *)(v5 + 48) + v33);
    v35 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v33);
    if ((v41 & 1) == 0)
    {
      swift_retain();
      swift_retain();
    }
    sub_1C3379208();
    v15 = v34[5];
    v14 = v34[6];
    __swift_project_boxed_opaque_existential_1(v34 + 2, v15);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    sub_1C3378C38();
    swift_bridgeObjectRelease();
    v16 = v34[5];
    v17 = v34[6];
    __swift_project_boxed_opaque_existential_1(v34 + 2, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
    sub_1C3379220();
    result = sub_1C3379244();
    v18 = -1 << *(_BYTE *)(v7 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v31 = v20 == v30;
        if (v20 == v30)
          v20 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v20);
      }
      while (v32 == -1);
      v21 = __clz(__rbit64(~v32)) + (v20 << 6);
    }
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = 8 * v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v22) = v34;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v22) = v35;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v37;
  v26 = v39;
  if ((v41 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v26, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C3027C6C(uint64_t a1, char a2)
{
  return sub_1C30287B0(a1, a2, (uint64_t *)&unk_1EF819CB0);
}

uint64_t sub_1C3027C78(uint64_t a1, char a2)
{
  return sub_1C3027C84(a1, a2, &qword_1ED7B3400);
}

uint64_t sub_1C3027C84(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_1C3379004();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C3379208();
    sub_1C3378C38();
    result = sub_1C3379244();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1C3027F94(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CEEE8);
  result = sub_1C3379004();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_1C33791FC();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C3028248(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819AF0);
  result = sub_1C3379004();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v10;
    v31 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v30;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v17);
      result = sub_1C33791FC();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      *(_DWORD *)(*(_QWORD *)(v7 + 56) + 4 * v15) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1C30284E4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819CD0);
  result = sub_1C3379004();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v9;
    v32 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero(v34, 8 * v33);
                else
                  *v34 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(unsigned int *)(*(_QWORD *)(v5 + 48) + 4 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 16 * v19;
      v29 = *(_DWORD *)v28;
      v30 = *(_QWORD *)(v28 + 8);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = MEMORY[0x1C3BD1360](*(_QWORD *)(v7 + 40), v27, 4);
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 16 * v16;
      *(_DWORD *)v17 = v29;
      *(_QWORD *)(v17 + 8) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C30287A4(uint64_t a1, char a2)
{
  return sub_1C30287B0(a1, a2, &qword_1EF819AA0);
}

uint64_t sub_1C30287B0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1C3379004();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v30 = -1 << v11;
    v31 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v32 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v32)
          goto LABEL_33;
        v22 = v10[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v32)
            goto LABEL_33;
          v22 = v10[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v32)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v31 >= 64)
                  bzero((void *)(v6 + 64), 8 * v32);
                else
                  *v10 = v30;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v22 = v10[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v9 >= v32)
                  goto LABEL_33;
                v22 = v10[v9];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v9 = v23;
          }
        }
LABEL_30:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(unsigned int *)(*(_QWORD *)(v6 + 48) + 4 * v20);
      v29 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v20);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = MEMORY[0x1C3BD1360](*(_QWORD *)(v8 + 40), v28, 4);
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_DWORD *)(*(_QWORD *)(v8 + 48) + 4 * v18) = v28;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v29;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1C3028A5C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  __int128 v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF819CC0);
  result = sub_1C3379004();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v29 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v30 = 1 << *(_BYTE *)(v5 + 32);
    v31 = v3;
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_40;
              }
              if (v30 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v29;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v32 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        swift_unownedRetain();
      }
      result = sub_1C33791FC();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v32;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1C3028D18(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DFAD8);
  result = sub_1C3379004();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1C33791FC();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C3028FCC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *(_DWORD *)v11 = *(_DWORD *)(*(_QWORD *)(a4 + 48) + 4 * v16);
    *(_QWORD *)(v11 + 8) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 16;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1C30291CC(_QWORD *result, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_DWORD *)(*(_QWORD *)(a4 + 48) + 4 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C3029360(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10[10];
  _OWORD v11[2];
  _OWORD v12[10];
  _OWORD v13[2];
  uint64_t v14;
  __int128 v15[10];
  _OWORD v16[2];

  v2 = *(_QWORD *)(a1 + 16);
  sub_1C30299E8();
  result = sub_1C3378E3C();
  v14 = result;
  if (v2)
  {
    v4 = (__int128 *)(a1 + 32);
    do
    {
      v5 = v4[9];
      v15[8] = v4[8];
      v15[9] = v5;
      v16[0] = v4[10];
      *(_OWORD *)((char *)v16 + 9) = *(__int128 *)((char *)v4 + 169);
      v6 = v4[5];
      v15[4] = v4[4];
      v15[5] = v6;
      v7 = v4[7];
      v15[6] = v4[6];
      v15[7] = v7;
      v8 = v4[1];
      v15[0] = *v4;
      v15[1] = v8;
      v9 = v4[3];
      v15[2] = v4[2];
      v15[3] = v9;
      sub_1C3029868((uint64_t)v15);
      sub_1C31E5ED8(v10, v15);
      v12[8] = v10[8];
      v12[9] = v10[9];
      v13[0] = v11[0];
      *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)((char *)v11 + 9);
      v12[4] = v10[4];
      v12[5] = v10[5];
      v12[6] = v10[6];
      v12[7] = v10[7];
      v12[0] = v10[0];
      v12[1] = v10[1];
      v12[2] = v10[2];
      v12[3] = v10[3];
      sub_1C30298D8((uint64_t)v12);
      v4 += 12;
      --v2;
    }
    while (v2);
    return v14;
  }
  return result;
}

uint64_t sub_1C3029458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t result;
  int v34;
  int v35;
  char v36;
  uint64_t v37;
  uint64_t i;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  _OWORD v80[2];
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _OWORD v91[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v62 = *(_QWORD *)(a2 + 16);
    if (v62)
    {
      v61 = a2 + 32;
      swift_bridgeObjectRetain();
      v4 = 0;
      v65 = v2 - 1;
      v64 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v5 = *(_QWORD *)(v61 + 8 * v4);
        v6 = *(_QWORD *)(v5 + 16);
        if (!v6)
        {
          v9 = (char *)MEMORY[0x1E0DEE9D8];
          goto LABEL_38;
        }
        v63 = v4;
        v7 = v5 + 32;
        swift_bridgeObjectRetain();
        v8 = 0;
        v9 = (char *)MEMORY[0x1E0DEE9D8];
        v67 = v6;
        v68 = v5;
        v66 = v5 + 32;
        while (2)
        {
          v10 = (__int128 *)(v7 + 192 * v8);
          v11 = *v10;
          v12 = v10[1];
          v13 = v10[3];
          v83 = v10[2];
          v84 = v13;
          v81 = v11;
          v82 = v12;
          v14 = v10[4];
          v15 = v10[5];
          v16 = v10[7];
          v87 = v10[6];
          v88 = v16;
          v85 = v14;
          v86 = v15;
          v17 = v10[8];
          v18 = v10[9];
          v19 = v10[10];
          *(_OWORD *)((char *)v91 + 9) = *(__int128 *)((char *)v10 + 169);
          v90 = v18;
          v91[0] = v19;
          v89 = v17;
          sub_1C3029868((uint64_t)&v81);
          sub_1C3029868((uint64_t)&v81);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1C30243F0(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
          v21 = *((_QWORD *)v9 + 2);
          v20 = *((_QWORD *)v9 + 3);
          if (v21 >= v20 >> 1)
            v9 = sub_1C30243F0((char *)(v20 > 1), v21 + 1, 1, v9);
          v22 = v82;
          *((_QWORD *)v9 + 2) = v21 + 1;
          v23 = &v9[192 * v21];
          v24 = v81;
          v25 = v82;
          v26 = v84;
          *((_OWORD *)v23 + 4) = v83;
          *((_OWORD *)v23 + 5) = v26;
          *((_OWORD *)v23 + 2) = v24;
          *((_OWORD *)v23 + 3) = v25;
          v27 = v85;
          v28 = v86;
          v29 = v88;
          *((_OWORD *)v23 + 8) = v87;
          *((_OWORD *)v23 + 9) = v29;
          *((_OWORD *)v23 + 6) = v27;
          *((_OWORD *)v23 + 7) = v28;
          v30 = v89;
          v31 = v90;
          v32 = v91[0];
          *(_OWORD *)(v23 + 201) = *(_OWORD *)((char *)v91 + 9);
          *((_OWORD *)v23 + 11) = v31;
          *((_OWORD *)v23 + 12) = v32;
          *((_OWORD *)v23 + 10) = v30;
          if (v22 == 1)
          {
            result = sub_1C30298D8((uint64_t)&v81);
            goto LABEL_33;
          }
          v69 = DWORD2(v89);
          v34 = BYTE12(v89);
          v35 = v89;
          v36 = BYTE4(v89);
          swift_bridgeObjectRetain();
          v37 = 32;
          for (i = v65; ; --i)
          {
            v39 = *(_OWORD *)(a1 + v37 + 144);
            v78 = *(_OWORD *)(a1 + v37 + 128);
            v79 = v39;
            v80[0] = *(_OWORD *)(a1 + v37 + 160);
            *(_OWORD *)((char *)v80 + 9) = *(_OWORD *)(a1 + v37 + 169);
            v40 = *(_OWORD *)(a1 + v37 + 80);
            v74 = *(_OWORD *)(a1 + v37 + 64);
            v75 = v40;
            v41 = *(_OWORD *)(a1 + v37 + 112);
            v76 = *(_OWORD *)(a1 + v37 + 96);
            v77 = v41;
            v42 = *(_OWORD *)(a1 + v37 + 16);
            v70 = *(_OWORD *)(a1 + v37);
            v71 = v42;
            v43 = *(_OWORD *)(a1 + v37 + 48);
            v72 = *(_OWORD *)(a1 + v37 + 32);
            v73 = v43;
            if ((BYTE4(v78) & 1) != 0)
            {
              if ((v36 & 1) == 0)
                goto LABEL_30;
            }
            else
            {
              if ((_DWORD)v78 == v35)
                v44 = v36;
              else
                v44 = 1;
              if ((v44 & 1) != 0)
                goto LABEL_30;
            }
            if ((BYTE12(v78) & 1) != 0)
            {
              if (!v34)
                goto LABEL_30;
            }
            else
            {
              if (DWORD2(v78) == v69)
                v45 = v34;
              else
                v45 = 1;
              if ((v45 & 1) != 0)
                goto LABEL_30;
            }
            sub_1C3029868((uint64_t)&v70);
            v47 = *((_QWORD *)v9 + 2);
            v46 = *((_QWORD *)v9 + 3);
            if (v47 >= v46 >> 1)
              v9 = sub_1C30243F0((char *)(v46 > 1), v47 + 1, 1, v9);
            *((_QWORD *)v9 + 2) = v47 + 1;
            v48 = &v9[192 * v47];
            v49 = v70;
            v50 = v71;
            v51 = v73;
            *((_OWORD *)v48 + 4) = v72;
            *((_OWORD *)v48 + 5) = v51;
            *((_OWORD *)v48 + 2) = v49;
            *((_OWORD *)v48 + 3) = v50;
            v52 = v74;
            v53 = v75;
            v54 = v77;
            *((_OWORD *)v48 + 8) = v76;
            *((_OWORD *)v48 + 9) = v54;
            *((_OWORD *)v48 + 6) = v52;
            *((_OWORD *)v48 + 7) = v53;
            v55 = v78;
            v56 = v79;
            v57 = v80[0];
            *(_OWORD *)(v48 + 201) = *(_OWORD *)((char *)v80 + 9);
            *((_OWORD *)v48 + 11) = v56;
            *((_OWORD *)v48 + 12) = v57;
            *((_OWORD *)v48 + 10) = v55;
LABEL_30:
            if (!i)
              break;
            v37 += 192;
          }
          swift_bridgeObjectRelease();
          result = sub_1C30298D8((uint64_t)&v81);
          v6 = v67;
          v5 = v68;
          v7 = v66;
LABEL_33:
          if (++v8 != v6)
          {
            if (v8 >= *(_QWORD *)(v5 + 16))
            {
              __break(1u);
              return result;
            }
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease();
        v4 = v63;
LABEL_38:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v64 = sub_1C30256C0(0, v64[2] + 1, 1, v64, &qword_1EF819B30, &qword_1ED7CDC88);
        v59 = v64[2];
        v58 = v64[3];
        if (v59 >= v58 >> 1)
          v64 = sub_1C30256C0((_QWORD *)(v58 > 1), v59 + 1, 1, v64, &qword_1EF819B30, &qword_1ED7CDC88);
        ++v4;
        v64[2] = v59 + 1;
        v64[v59 + 4] = v9;
        if (v4 == v62)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)v64;
        }
      }
    }
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1C3029868(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C30298D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UsoEntitySpanUtils()
{
  return &type metadata for UsoEntitySpanUtils;
}

uint64_t sub_1C302995C()
{
  return swift_release();
}

uint64_t sub_1C3029964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C30299AC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 120);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1C30299C4(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 169) = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

unint64_t sub_1C30299E8()
{
  unint64_t result;

  result = qword_1EF819B50;
  if (!qword_1EF819B50)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for UsoEntitySpan, &type metadata for UsoEntitySpan);
    atomic_store(result, (unint64_t *)&qword_1EF819B50);
  }
  return result;
}

uint64_t sub_1C3029A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v7 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 48);
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1C302B1E4(a1, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!(v12 >> 62))
  {
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v15 = sub_1C3378FEC();
  result = swift_bridgeObjectRelease();
  if (!v15)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    v14 = 0;
    goto LABEL_13;
  }
LABEL_5:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v14 = MEMORY[0x1C3BD10B4](0, v12);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(_QWORD *)(v12 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1C302A4E8(v14, a3, a4);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3029B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t result;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 48);
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1C302B1E4(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!(v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1C3378FEC();
  result = swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    v12 = 0;
    goto LABEL_13;
  }
LABEL_5:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v12 = (uint64_t *)MEMORY[0x1C3BD10B4](0, v10);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(uint64_t **)(v10 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_13:
    v14 = sub_1C302A7AC(v12, a3);
    swift_release();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3029CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 48);
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1C302B1E4(a1, a2);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v9);
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v12 = sub_1C302ABB8(a4, v11, a4, a4);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t CodeGenBase.entity.getter()
{
  return swift_retain();
}

uint64_t CodeGenBase.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  CodeGenBase.init(from:)(a1);
  return v2;
}

uint64_t *CodeGenBase.init(from:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];

  v4 = *v1;
  sub_1C2FFCF44(a1, (uint64_t)v11);
  sub_1C319B948(v11);
  if (v2)
    goto LABEL_11;
  if (!v5)
  {
    sub_1C302BADC();
    swift_allocError();
    swift_willThrow();
LABEL_10:
    swift_release();
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1(a1);
    type metadata accessor for CodeGenBase();
    swift_deallocPartialClassInstance();
    return v1;
  }
  swift_retain();
  v6 = _s12SiriOntology25UsoBuilderConversionUtilsO013convertEntityd2ToH006entityD0AA0cH0CSgAA0chD0C_tFZ_0();
  if (!v6)
  {
    sub_1C302BADC();
    swift_allocError();
    swift_willThrow();
LABEL_9:
    swift_release_n();
    goto LABEL_10;
  }
  v7 = v6;
  v8 = swift_retain();
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(v8, v4, v4, (uint64_t)v11);
  swift_release();
  v9 = v11[0];
  swift_release();
  if (!v9)
  {
    sub_1C302BADC();
    swift_allocError();
    swift_willThrow();
    swift_release();
    goto LABEL_9;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release_n();
  swift_release();
  v1[2] = v7;
  return v1;
}

uint64_t sub_1C3029F3C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = *(_QWORD **)(v1 + 16);
  swift_retain();
  sub_1C319D65C(a1, v3);
  return swift_release();
}

uint64_t sub_1C3029F80()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3029F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 48) + 24);
  swift_unownedRetainStrong();
  v2 = *(_QWORD *)(v1 + 112);
  swift_bridgeObjectRetain();
  swift_release();
  return v2;
}

uint64_t sub_1C3029FD0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3029FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 32);
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1C302B1E4(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!(v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1C3378FEC();
  result = swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = MEMORY[0x1C3BD10B4](0, v8);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(_QWORD *)(v8 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v10 + 24);
    swift_unownedRetainStrong();
    v12 = *(_QWORD *)(v11 + 104);
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C302A120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 32);
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1C302B1E4(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!(v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1C3378FEC();
  result = swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = MEMORY[0x1C3BD10B4](0, v8);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(_QWORD *)(v8 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v10 + 24);
    swift_unownedRetainStrong();
    v12 = *(_QWORD *)(v11 + 112);
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C302A264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 32);
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1C302B1E4(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!(v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1C3378FEC();
  result = swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = MEMORY[0x1C3BD10B4](0, v8);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(_QWORD *)(v8 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v10 + 24);
    swift_unownedRetainStrong();
    v12 = *(_QWORD *)(v11 + 120);
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C302A3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v7 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 32);
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1C302B1E4(a1, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!(v12 >> 62))
  {
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v15 = sub_1C3378FEC();
  result = swift_bridgeObjectRelease();
  if (!v15)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    v14 = 0;
    goto LABEL_13;
  }
LABEL_5:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v14 = MEMORY[0x1C3BD10B4](0, v12);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(_QWORD *)(v12 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1C302A4E8(v14, a3, a4);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C302A4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  int v10;
  int v11;

  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 1, 1, a2);
  v5 = MEMORY[0x1E0DEA968];
  if (a2 == MEMORY[0x1E0DEA968])
  {
    sub_1C30BF814();
    v9 = (uint64_t *)&unk_1EF819030;
LABEL_9:
    __swift_instantiateConcreteTypeFromMangledName(v9);
    v10 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a3, v10 ^ 1u, 1, v5);
  }
  v5 = MEMORY[0x1E0DEDC60];
  if (a2 == MEMORY[0x1E0DEDC60])
  {
    Node.int64Value.getter();
    v9 = (uint64_t *)&unk_1EF819C60;
    goto LABEL_9;
  }
  v6 = type metadata accessor for UsoEntity();
  v7 = sub_1C30BF954();
  if (v6 == a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C68);
    v11 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, v11 ^ 1u, 1, a2);
  }
  else
  {
    static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(v7, a2, a2, a3);
    return swift_release();
  }
}

uint64_t sub_1C302A668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t result;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 32);
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1C302B1E4(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!(v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1C3378FEC();
  result = swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    v12 = 0;
    goto LABEL_13;
  }
LABEL_5:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v12 = (uint64_t *)MEMORY[0x1C3BD10B4](0, v10);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(uint64_t **)(v10 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_13:
    v14 = sub_1C302A7AC(v12, a3);
    swift_release();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1C302A7AC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v44;

  v3 = a1;
  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C3378E90();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v44 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v44 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v44 - v18;
  if (v3)
  {
    v20 = sub_1C30C0098();
    if (!v20)
      return 0;
    v21 = v20[4];
    if (a2 == MEMORY[0x1E0DEA968])
    {
      v24 = (uint64_t)v20;
      if (v21)
      {
        swift_retain();
        v25 = sub_1C30BF814();
        v27 = v26;
        swift_release();
      }
      else
      {
        v25 = 0;
        v27 = 0;
      }
      *(_QWORD *)&v44 = v25;
      *((_QWORD *)&v44 + 1) = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819030);
      v35 = MEMORY[0x1E0DEA968];
      v36 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v19, v36 ^ 1u, 1, v35);
      type metadata accessor for CodeGenExpression(0, v35, v37, v38);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v19, v7);
      v3 = sub_1C302AFD8(v24, (uint64_t)v17);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v19, v7);
    }
    else
    {
      if (a2 != MEMORY[0x1E0DEDC60])
      {
        v22 = (uint64_t)v20;
        v23 = swift_retain();
        sub_1C302A4E8(v23, a2, (uint64_t)v11);
        swift_release();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, a2) != 1)
        {
          v32 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
          v32(v6, v11, a2);
          type metadata accessor for CodeGenExpression(0, a2, v33, v34);
          v32(v17, v6, a2);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v17, 0, 1, a2);
          return sub_1C302AFD8(v22, (uint64_t)v17);
        }
        swift_release();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
        return 0;
      }
      v28 = (uint64_t)v20;
      if (v21)
      {
        v44 = *(_OWORD *)(v21 + 16);
        v29 = Node.int64Value.getter();
        v31 = v30 & 1;
      }
      else
      {
        v29 = 0;
        v31 = 1;
      }
      *(_QWORD *)&v44 = v29;
      BYTE8(v44) = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C60);
      v39 = MEMORY[0x1E0DEDC60];
      v40 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v14, v40 ^ 1u, 1, v39);
      type metadata accessor for CodeGenExpression(0, v39, v41, v42);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v14, v7);
      v3 = sub_1C302AFD8(v28, (uint64_t)v17);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    }
  }
  return v3;
}

uint64_t sub_1C302AB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 32);
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1C302B1E4(a1, a2);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v9);
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v12 = sub_1C302ABB8(a4, v11, a4, a4);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C302ABB8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!a2)
    return 0;
  type metadata accessor for CodeGenListEntry(0, a3, a3, a4);
  v6 = sub_1C3378DB8();
  v12 = v6;
  if (!(a2 >> 62))
  {
    v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_4;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  result = sub_1C3378FEC();
  v7 = result;
  if (!result)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v6;
  }
LABEL_4:
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v10 = MEMORY[0x1C3BD10B4](v9, a2);
      }
      else
      {
        v10 = *(_QWORD *)(a2 + 8 * v9 + 32);
        swift_retain();
      }
      ++v9;
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = a1;
      *(_QWORD *)(v11 + 24) = v10;
      sub_1C3378DE8();
      sub_1C3378DDC();
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C302AD00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = sub_1C3378E90();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - v7;
  v9 = *(_QWORD **)(v2 + 16);
  v10 = v9[3];
  v20 = v9[2];
  v21 = v10;
  swift_bridgeObjectRetain();
  sub_1C3378D40();
  v11 = *(_QWORD *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, a1) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, a1);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, a1);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v9[4];
  if (!*(_QWORD *)(v12 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, a1);
  swift_bridgeObjectRetain();
  v13 = sub_1C302B1E4(0x5664656E69666564, 0xEC00000065756C61);
  if ((v14 & 1) == 0)
    goto LABEL_14;
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1C3378FEC();
    result = swift_bridgeObjectRelease();
    if (v19)
      goto LABEL_6;
LABEL_14:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, a1);
  }
  if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_14;
LABEL_6:
  if ((v15 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C3BD10B4](0, v15);
  }
  else
  {
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  v17 = sub_1C30BF954();
  swift_release();
  if (v17)
  {
    v18 = *(_QWORD *)(v17 + 24);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = v18;
    swift_bridgeObjectRetain();
    sub_1C3378D40();
    return swift_release();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, a1);
}

uint64_t CodeGenBase.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1C302AF64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 96))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1C302AF90(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = *(_QWORD **)(*(_QWORD *)v1 + 16);
  swift_retain();
  sub_1C319D65C(a1, v3);
  return swift_release();
}

uint64_t *sub_1C302AFD8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = (uint64_t *)swift_allocObject();
  v5 = *v4;
  v4[2] = a1;
  v6 = (char *)v4 + *(_QWORD *)(v5 + 96);
  v7 = sub_1C3378E90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a2, v7);
  return v4;
}

uint64_t sub_1C302B04C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C302B07C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = sub_1C3378E90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CodeGenExpression.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1C3378E90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t CodeGenExpression.__deallocating_deinit()
{
  CodeGenExpression.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C302B148(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_1C302B184@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1C302A4E8(v1[3], *(_QWORD *)(*v1 + 80), a1);
}

uint64_t *sub_1C302B194()
{
  uint64_t **v0;

  return sub_1C302A7AC(v0[3], (*v0)[10]);
}

uint64_t CodeGenListEntry.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t CodeGenListEntry.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1C302B1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C3379208();
  sub_1C3378C38();
  v4 = sub_1C3379244();
  return sub_1C302B3E8(a1, a2, v4);
}

unint64_t sub_1C302B248(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x1C3BD1360](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_1C302B4C8(a1, v3);
}

unint64_t sub_1C302B27C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C3379208();
  v2 = a1[5];
  v3 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  sub_1C3378C38();
  swift_bridgeObjectRelease();
  v4 = a1[5];
  v5 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  sub_1C3379220();
  v6 = sub_1C3379244();
  return sub_1C302B564((uint64_t)a1, v6);
}

unint64_t sub_1C302B348(uint64_t *a1)
{
  uint64_t v2;

  sub_1C3379208();
  Name.hash(into:)();
  v2 = sub_1C3379244();
  return sub_1C302B644(a1, v2);
}

unint64_t sub_1C302B3B0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C33791FC();
  return sub_1C302BA20(a1, v2);
}

unint64_t sub_1C302B3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C3379184() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C3379184() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1C302B4C8(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1C302B564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  char v13;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = v2;
    v7 = ~v4;
    v8 = a1 + 16;
    do
    {
      v9 = *(_QWORD **)(*(_QWORD *)(v6 + 48) + 8 * v5);
      v10 = v9[5];
      v11 = v9[6];
      __swift_project_boxed_opaque_existential_1(v9 + 2, v10);
      v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
      swift_retain();
      v13 = v12(v8, v10, v11);
      swift_release();
      if ((v13 & 1) != 0)
        break;
      v5 = (v5 + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_1C302B644(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  BOOL v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89[17];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v84 = ~v3;
    v5 = *a1;
    v6 = a1[1];
    v7 = (_QWORD *)a1[4];
    v87 = a1[3];
    v88 = a1[2];
    v62 = *a1;
    do
    {
      v8 = (_QWORD *)(*(_QWORD *)(v86 + 48) + 40 * v4);
      v9 = v8[2];
      v10 = v8[3];
      v11 = (_QWORD *)v8[4];
      v12 = *v8 == v5 && v8[1] == v6;
      if (v12 || (sub_1C3379184() & 1) != 0)
      {
        v13 = v9 == v88 && v10 == v87;
        if (v13 || (sub_1C3379184() & 1) != 0)
        {
          if (!v11)
          {
            if (!v7)
              return v4;
            goto LABEL_4;
          }
          if (v7)
          {
            v14 = v11[2];
            v15 = v11[3];
            v16 = v11[4];
            v17 = v11[5];
            v19 = v11[6];
            v18 = v11[7];
            v20 = v7[3];
            v21 = v7[4];
            v22 = v7[5];
            v23 = v7[6];
            v24 = v7[7];
            v25 = v7[9];
            v81 = v7[8];
            v82 = v11[8];
            v83 = v11[9];
            if (!v15)
            {
              if (!v20)
                return v4;
              v60 = v7[9];
              v63 = v7[7];
              v65 = v7[6];
              v69 = v11[6];
              v72 = v7[5];
              v77 = v11[5];
              v79 = v11[7];
              v75 = v7[4];
              v67 = v11[4];
              v42 = v7[2];
              v43 = v6;
              v44 = v11[2];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain();
              v45 = v44;
              v6 = v43;
              v46 = v42;
              v47 = v75;
              v48 = v77;
              v5 = v62;
              v49 = v63;
              v51 = v67;
              v50 = v69;
              v52 = v72;
              v54 = v79;
              v53 = v81;
              v55 = v65;
              v56 = v82;
              v57 = v83;
              v25 = v60;
              goto LABEL_43;
            }
            if (!v20)
            {
              v73 = v7[5];
              v76 = v7[4];
              v64 = v7[7];
              v66 = v7[6];
              v68 = v11[4];
              v70 = v11[6];
              v78 = v11[5];
              v80 = v11[7];
              v59 = v7[2];
              v61 = v11[2];
              sub_1C301F734(v14, v15);
              sub_1C301F734(v61, v15);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v46 = v59;
              v45 = v61;
              v47 = v76;
              v48 = v78;
              v51 = v68;
              v50 = v70;
              v52 = v73;
              v54 = v80;
              v53 = v81;
              v49 = v64;
              v55 = v66;
              v56 = v82;
              v57 = v83;
LABEL_43:
              v89[0] = v45;
              v89[1] = v15;
              v89[2] = v51;
              v89[3] = v48;
              v89[4] = v50;
              v89[5] = v54;
              v89[6] = v56;
              v89[7] = v57;
              v89[8] = v46;
              v89[9] = v20;
              v89[10] = v47;
              v89[11] = v52;
              v89[12] = v55;
              v89[13] = v49;
              v89[14] = v53;
              v89[15] = v25;
              sub_1C301F734(v46, v20);
              sub_1C301F784(v89);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release();
              goto LABEL_4;
            }
            if (v14 == v7[2] && v15 == v20)
              goto LABEL_38;
            v71 = v7[5];
            v74 = v7[4];
            v27 = v7[6];
            v28 = v7[7];
            v29 = v11[6];
            v30 = v18;
            v31 = v16;
            v32 = v17;
            v33 = sub_1C3379184();
            v17 = v32;
            v5 = v62;
            v16 = v31;
            v22 = v71;
            v21 = v74;
            v18 = v30;
            v19 = v29;
            v24 = v28;
            v23 = v27;
            if ((v33 & 1) != 0)
            {
LABEL_38:
              if (v16 == v21 && v17 == v22)
                goto LABEL_48;
              v35 = v23;
              v36 = v24;
              v37 = v19;
              v38 = v18;
              v39 = sub_1C3379184();
              v18 = v38;
              v19 = v37;
              v24 = v36;
              v23 = v35;
              if ((v39 & 1) != 0)
              {
LABEL_48:
                v40 = v19 == v23 && v18 == v24;
                if (v40 || (sub_1C3379184() & 1) != 0)
                {
                  v41 = v82 == v81 && v83 == v25;
                  if (v41 || (sub_1C3379184() & 1) != 0)
                    return v4;
                }
              }
            }
          }
        }
      }
LABEL_4:
      v4 = (v4 + 1) & v84;
    }
    while (((*(_QWORD *)(v85 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1C302BA20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for CodeGenBase()
{
  return objc_opt_self();
}

unint64_t sub_1C302BADC()
{
  unint64_t result;

  result = qword_1EF819B58[0];
  if (!qword_1EF819B58[0])
  {
    result = MEMORY[0x1C3BD1B4C](&unk_1C3397EC0, &type metadata for UsoEntityCodableError);
    atomic_store(result, qword_1EF819B58);
  }
  return result;
}

uint64_t method lookup function for CodeGenBase()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CodeGenBase.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of CodeGenBase.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of CodeGenBase.usoIdentifiers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of CodeGenBase.utteranceAlignments.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CodeGenBase.entitySpans.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of CodeGenBase.getUsoIdentifiersHelper(attributeName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of CodeGenBase.getUtteranceAlignmentsHelper(attributeName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of CodeGenBase.getEntitySpansHelper(attributeName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of CodeGenBase.getAsHelper<A>(attributeName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CodeGenBase.getAsExpressionHelper<A>(attributeName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CodeGenBase.getAsListHelper<A>(attributeName:entryType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CodeGenBase.getDefinedValueHelper<A>()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t sub_1C302BBD8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C3378E90();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CodeGenExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodeGenExpression);
}

uint64_t method lookup function for CodeGenExpression()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CodeGenExpression.operatorAsString.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of CodeGenExpression.operand.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t type metadata accessor for CodeGenTaskBase()
{
  return objc_opt_self();
}

uint64_t method lookup function for CodeGenTaskBase()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CodeGenTaskBase.getAsHelper<A>(argumentName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of CodeGenTaskBase.getAsExpressionHelper<A>(argumentName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of CodeGenTaskBase.getAsListHelper<A>(argumentName:entryType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_1C302BCD8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CodeGenListEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodeGenListEntry);
}

uint64_t method lookup function for CodeGenListEntry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CodeGenListEntry.entry.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

unint64_t sub_1C302BD58(uint64_t a1)
{
  return sub_1C302BFA8(a1, &qword_1ED7CE130);
}

unint64_t sub_1C302BD64(uint64_t a1)
{
  return sub_1C302BD88(a1, &qword_1ED7CDCE8);
}

unint64_t sub_1C302BD70(uint64_t a1)
{
  return sub_1C302BFA8(a1, &qword_1ED7CDCF0);
}

unint64_t sub_1C302BD7C(uint64_t a1)
{
  return sub_1C302BD88(a1, (uint64_t *)&unk_1EF807880);
}

unint64_t sub_1C302BD88(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1C337901C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    result = sub_1C302B1E4(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C302BE94(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DFAD0);
  v2 = (_QWORD *)sub_1C337901C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = (_QWORD *)*(v4 - 1);
    v5 = *v4;
    swift_retain();
    swift_retain();
    result = sub_1C302B27C(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C302BF9C(uint64_t a1)
{
  return sub_1C302BFA8(a1, &qword_1ED7B3400);
}

unint64_t sub_1C302BFA8(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1C337901C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1C302B1E4(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C302C0BC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819D28);
  v2 = (_QWORD *)sub_1C337901C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_DWORD *)(a1 + 72);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 4);
    v6 = *((_QWORD *)v4 - 3);
    v7 = *((_QWORD *)v4 - 2);
    v8 = *((_QWORD *)v4 - 1);
    v9 = *v4;
    *(_QWORD *)&v17 = *((_QWORD *)v4 - 5);
    *((_QWORD *)&v17 + 1) = v5;
    *(_QWORD *)&v18 = v6;
    *((_QWORD *)&v18 + 1) = v7;
    v19 = v8;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1C302B348((uint64_t *)&v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = v2[6] + 40 * result;
    v13 = v18;
    *(_OWORD *)v12 = v17;
    *(_OWORD *)(v12 + 16) = v13;
    *(_QWORD *)(v12 + 32) = v19;
    *(_DWORD *)(v2[7] + 4 * result) = v9;
    v14 = v2[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4 += 12;
    v2[2] = v16;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C302C204(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819CA8);
  v2 = (_QWORD *)sub_1C337901C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1C302B1E4(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C302C314(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819CA0);
  v2 = (_QWORD *)sub_1C337901C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1C302B1E4(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C302C434(uint64_t a1)
{
  return sub_1C302C46C(a1, (uint64_t *)&unk_1EF7DFA90, (uint64_t *)&unk_1EF819D18, type metadata accessor for Com_Apple_Siri_Product_Proto_StatefulValues);
}

unint64_t sub_1C302C450(uint64_t a1)
{
  return sub_1C302C46C(a1, &qword_1EF7DFAA0, (uint64_t *)&unk_1EF819D08, type metadata accessor for Com_Apple_Siri_Product_Proto_MultiCardinalStateCombos);
}

unint64_t sub_1C302C46C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t *v31;

  v31 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_1C337901C();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = (uint64_t)v10 + *(int *)(v7 + 48);
  v29[1] = a1;
  v30 = v14;
  v15 = v11 + 64;
  v16 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v17 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_1C2FF6CFC(v16, (uint64_t)v10, v31);
    v18 = *v10;
    v19 = v10[1];
    result = sub_1C302B1E4(*v10, v19);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v23 = (uint64_t *)(v12[6] + 16 * result);
    *v23 = v18;
    v23[1] = v19;
    v24 = v12[7];
    v25 = a4(0);
    result = sub_1C2FF6C38(v30, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v22, a4);
    v26 = v12[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v12[2] = v28;
    v16 += v17;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C302C604(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF819CD8);
  v2 = (_QWORD *)sub_1C337901C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    v7 = v4[1];
    v8 = v4[2];
    v10 = v4[3];
    v9 = v4[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1C302B1E4(v5, v6);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v5;
    v13[1] = v6;
    v14 = (uint64_t *)(v2[7] + 32 * result);
    *v14 = v7;
    v14[1] = v8;
    v14[2] = v10;
    v14[3] = v9;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v2[2] = v17;
    v4 += 6;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_QWORD *sub_1C302C740(uint64_t a1)
{
  _QWORD *result;
  int v3;
  char v4;
  uint64_t v5;

  result = (_QWORD *)sub_1C302FC78(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_QWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_1C302FD00(&v5, (uint64_t)result, v3, 0, a1);
}

uint64_t static UsoConversionUtils.convertUserDialogActToTasks(userDialogAct:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t inited;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;

  v64 = type metadata accessor for Siri_Nl_Core_Protocol_UserContinued(0);
  v2 = MEMORY[0x1E0C80A78](v64);
  v62 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v59 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C70);
  v7 = MEMORY[0x1E0C80A78](v6);
  v61 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v63 = (uint64_t)&v59 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v59 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C78);
  v14 = MEMORY[0x1E0C80A78](v13);
  v59 = (uint64_t)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v59 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v59 - v19;
  v21 = type metadata accessor for Siri_Nl_Core_Protocol_UserStarted(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph(0);
  v69 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x1E0C80A78](v24);
  v65 = (uint64_t *)((char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = MEMORY[0x1E0C80A78](v25);
  v60 = (char *)&v59 - v28;
  MEMORY[0x1E0C80A78](v27);
  v30 = (uint64_t *)((char *)&v59 - v29);
  v68 = a1;
  sub_1C2FF6CFC(a1, (uint64_t)v20, &qword_1EF819C78);
  v31 = type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct(0);
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48);
  if (v67(v20, 1, v31) == 1)
  {
    sub_1C2FF9138((uint64_t)v20, &qword_1EF819C78);
LABEL_5:
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    v32 = v69;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(&v23[*(int *)(v21 + 20)], 1, 1, v24);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1C2FF6CC0((uint64_t)v20, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
    goto LABEL_5;
  }
  sub_1C2FF6C38((uint64_t)v20, (uint64_t)v23, type metadata accessor for Siri_Nl_Core_Protocol_UserStarted);
  v32 = v69;
LABEL_6:
  sub_1C2FF6CFC((uint64_t)&v23[*(int *)(v21 + 20)], (uint64_t)v12, &qword_1EF819C70);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v33(v12, 1, v24) == 1)
  {
    v34 = MEMORY[0x1E0DEE9D8];
    *v30 = MEMORY[0x1E0DEE9D8];
    v30[1] = v34;
    v30[2] = v34;
    v30[3] = v34;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    v35 = (char *)v30 + *(int *)(v24 + 36);
    v36 = type metadata accessor for Siri_Nl_Core_Protocol_SemVer();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
    sub_1C2FF9138((uint64_t)v12, &qword_1EF819C70);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v12, (uint64_t)v30, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph);
  }
  sub_1C2FF6CC0((uint64_t)v23, type metadata accessor for Siri_Nl_Core_Protocol_UserStarted);
  sub_1C2FF6CFC(v68, (uint64_t)v18, &qword_1EF819C78);
  v37 = v67(v18, 1, v31);
  v38 = v64;
  if (v37 == 1)
  {
    sub_1C2FF9138((uint64_t)v18, &qword_1EF819C78);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1C2FF6C38((uint64_t)v18, (uint64_t)v5, type metadata accessor for Siri_Nl_Core_Protocol_UserContinued);
      goto LABEL_15;
    }
    sub_1C2FF6CC0((uint64_t)v18, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
  }
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v39 = &v5[*(int *)(v38 + 20)];
  v40 = type metadata accessor for Siri_Nl_Core_Protocol_UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(&v5[*(int *)(v38 + 24)], 1, 1, v24);
LABEL_15:
  v41 = v63;
  sub_1C2FF6CFC((uint64_t)&v5[*(int *)(v38 + 24)], v63, &qword_1EF819C70);
  v42 = v33((char *)v41, 1, v24);
  sub_1C2FF9138(v41, &qword_1EF819C70);
  sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Siri_Nl_Core_Protocol_UserContinued);
  if (v42 == 1)
    goto LABEL_27;
  v43 = v59;
  sub_1C2FF6CFC(v68, v59, &qword_1EF819C78);
  if (v67((char *)v43, 1, v31) == 1)
  {
    sub_1C2FF9138(v43, &qword_1EF819C78);
    v45 = (uint64_t)v61;
    v44 = v62;
    v46 = v60;
LABEL_22:
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    v48 = v44 + *(int *)(v38 + 20);
    v49 = type metadata accessor for Siri_Nl_Core_Protocol_UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 1, 1, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v44 + *(int *)(v38 + 24), 1, 1, v24);
    goto LABEL_23;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v44 = v62;
  v46 = v60;
  if (EnumCaseMultiPayload != 1)
  {
    sub_1C2FF6CC0(v43, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
    v45 = (uint64_t)v61;
    goto LABEL_22;
  }
  sub_1C2FF6C38(v43, v62, type metadata accessor for Siri_Nl_Core_Protocol_UserContinued);
  v45 = (uint64_t)v61;
LABEL_23:
  sub_1C2FF6CFC(v44 + *(int *)(v38 + 24), v45, &qword_1EF819C70);
  if (v33((char *)v45, 1, v24) == 1)
  {
    v50 = MEMORY[0x1E0DEE9D8];
    *v46 = MEMORY[0x1E0DEE9D8];
    v46[1] = v50;
    v46[2] = v50;
    v46[3] = v50;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    v51 = (char *)v46 + *(int *)(v24 + 36);
    v52 = type metadata accessor for Siri_Nl_Core_Protocol_SemVer();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 1, 1, v52);
    sub_1C2FF9138(v45, &qword_1EF819C70);
  }
  else
  {
    sub_1C2FF6C38(v45, (uint64_t)v46, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph);
  }
  sub_1C2FF6CC0(v44, type metadata accessor for Siri_Nl_Core_Protocol_UserContinued);
  sub_1C2FF6CC0((uint64_t)v30, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph);
  sub_1C2FF6C38((uint64_t)v46, (uint64_t)v30, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph);
LABEL_27:
  if (qword_1EF808BE0 != -1)
    swift_once();
  type metadata accessor for UsoGraphVocabManager();
  inited = swift_initStackObject();
  v54 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(inited + 16) = sub_1C302FE90(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(inited + 24) = sub_1C302C0BC(v54);
  v55 = v65;
  sub_1C2FF6C7C((uint64_t)v30, (uint64_t)v65, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph);
  swift_retain();
  v56 = v66;
  v57 = (_QWORD *)sub_1C31D6E38(v55, inited);
  if (v56)
  {
    sub_1C2FF6CC0((uint64_t)v30, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    inited = _s12SiriOntology18UsoConversionUtilsO19convertGraphToTasks5graphSayAA0C4TaskCGAA0G0C_tFZ_0(v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C2FF6CC0((uint64_t)v30, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph);
  }
  return inited;
}

uint64_t static UsoConversionUtils.convertUserDialogActToTasks(userDialogAct:)()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  objc_opt_self();
  v0 = swift_dynamicCastObjCClass();
  if (v0)
  {
    v1 = (void *)v0;
    swift_unknownObjectRetain();
    v2 = objc_msgSend(v1, sel_task);
    USOSerializedGraph.usoSerializedGraphToUsoGraphSiriNl()();
    v4 = v3;

    if (v4)
    {
      v5 = _s12SiriOntology18UsoConversionUtilsO19convertGraphToTasks5graphSayAA0C4TaskCGAA0G0C_tFZ_0(v4);
      swift_unknownObjectRelease();
      swift_release();
      return v5;
    }
    swift_unknownObjectRelease();
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t static UsoConversionUtils.extractFirstEntityFromGraph(graph:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];
  uint64_t v27[2];
  _QWORD v28[2];

  swift_beginAccess();
  v2 = a1[4];
  result = swift_unownedRetainStrong();
  if (!v2)
    goto LABEL_40;
  swift_retain();
  swift_unownedRetain();
  swift_release();
  v28[0] = a1;
  v28[1] = v2;
  v27[0] = 0;
  v27[1] = 0;
  v26[0] = 0;
  v26[1] = 0;
  v4 = sub_1C31E4FC0((uint64_t)v28, v27, v26);
  swift_release();
  swift_unownedRelease();
  v5 = _s12SiriOntology18UsoConversionUtilsO19convertGraphToTasks5graphSayAA0C4TaskCGAA0G0C_tFZ_0(a1);
  v6 = v5;
  if (!(v5 >> 62))
  {
    v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_4;
LABEL_27:
    swift_bridgeObjectRelease();
LABEL_28:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 16) == 1)
    {
      v20 = *(_QWORD *)(v4 + 96);
      v21 = *(_QWORD *)(v4 + 104);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unownedRetain();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for UsoValue();
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v20;
      *(_QWORD *)(v22 + 24) = v21;
      goto LABEL_30;
    }
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1C3378FEC();
  if (!v7)
    goto LABEL_27;
LABEL_4:
  v8 = v6 & 0xC000000000000001;
  if ((v6 & 0xC000000000000001) != 0)
  {
    v24 = MEMORY[0x1C3BD10B4](0, v6);
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v24 + 16);
    v7 = *(_QWORD *)(v24 + 24);
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_33;
    }
    v9 = *(_QWORD *)(v6 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v9 + 16);
    v7 = *(_QWORD *)(v9 + 24);
    swift_bridgeObjectRetain();
    swift_release();
  }
  if (v10 == 0x627265566F6ELL && v7 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = sub_1C3379184();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      goto LABEL_28;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x1C3BD10B4](0, v6);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v25 = sub_1C3378FEC();
    result = swift_bridgeObjectRelease();
    if (v25)
      goto LABEL_22;
    goto LABEL_35;
  }
  v12 = *(_QWORD *)(v6 + 32);
  swift_retain();
LABEL_15:
  v13 = *(_QWORD *)(v12 + 48);
  swift_bridgeObjectRetain();
  swift_release();
  v14 = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRelease();
  if (v14 != 1)
    goto LABEL_28;
  swift_bridgeObjectRelease();
  if (v8)
  {
    v15 = MEMORY[0x1C3BD10B4](0, v6);
  }
  else
  {
    v15 = *(_QWORD *)(v6 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 48);
  swift_bridgeObjectRetain();
  swift_release();
  sub_1C302C740(v16);
  v18 = v17;
  v4 = v19;
  swift_bridgeObjectRelease();
  if (!v18)
    return 0;
  result = swift_bridgeObjectRelease();
  v7 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v4 >> 62)
    goto LABEL_34;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_22:
  if ((v4 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C3BD10B4](0, v4);
    goto LABEL_25;
  }
  if (*(_QWORD *)(v7 + 16))
  {
    swift_retain();
LABEL_25:
    swift_bridgeObjectRelease();
LABEL_30:
    v23 = sub_1C30BF954();
    swift_release();
    return v23;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t static UsoConversionUtils.arrayOfNonPrimitives(usoEntity:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x1E0DEE9E8];
  v1 = sub_1C302D430(a1, &v3);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C302D430(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t i;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  if (qword_1ED7CEAB8 != -1)
    goto LABEL_63;
LABEL_2:
  v6 = v4 == (_QWORD)xmmword_1ED7CEA90 && v5 == *((_QWORD *)&xmmword_1ED7CEA90 + 1);
  if (v6 || (sub_1C3379184() & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  if (qword_1ED7CEAF0 != -1)
LABEL_65:
    swift_once();
  v7 = v4 == (_QWORD)xmmword_1ED7CEAC0 && v5 == *((_QWORD *)&xmmword_1ED7CEAC0 + 1);
  if (v7 || (sub_1C3379184() & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE110);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C3389BF0;
  *(_QWORD *)(v9 + 32) = v3;
  v40 = v9;
  sub_1C3378DA0();
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 24);
  swift_unownedRetainStrong();
  v5 = *(_QWORD *)(v10 + 56);
  swift_retain();
  swift_release();
  sub_1C31E5DE0(&v39, v5);
  v11 = *(_QWORD *)(v3 + 32);
  v12 = *(_QWORD *)(v11 + 64);
  v34 = v11 + 64;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  if (v13 < 64)
    v14 = ~(-1 << v13);
  else
    v14 = -1;
  v4 = v14 & v12;
  v35 = (unint64_t)(v13 + 63) >> 6;
  v36 = *(_QWORD *)(v3 + 32);
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v38)
  {
    if (v4)
    {
      v16 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v17 = v16 | (i << 6);
      goto LABEL_35;
    }
    v18 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_65;
    }
    if (v18 >= v35)
      goto LABEL_60;
    v19 = *(_QWORD *)(v34 + 8 * v18);
    ++i;
    if (!v19)
    {
      i = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_60;
      v19 = *(_QWORD *)(v34 + 8 * i);
      if (!v19)
      {
        i = v18 + 2;
        if (v18 + 2 >= v35)
          goto LABEL_60;
        v19 = *(_QWORD *)(v34 + 8 * i);
        if (!v19)
          break;
      }
    }
LABEL_34:
    v4 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (i << 6);
LABEL_35:
    v37 = v4;
    v38 = i;
    v5 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v17);
    if ((unint64_t)v5 >> 62)
    {
      if (v5 < 0)
        v4 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v17);
      else
        v4 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v21 = sub_1C3378FEC();
      if (!v21)
        goto LABEL_18;
LABEL_37:
      v22 = 0;
      v3 = v5 + 32;
      while (1)
      {
        if ((v5 & 0xC000000000000001) != 0)
        {
          v23 = MEMORY[0x1C3BD10B4](v22, v5);
          v24 = __OFADD__(v22++, 1);
          if (v24)
            goto LABEL_61;
        }
        else
        {
          if (v22 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_62;
          v23 = *(_QWORD *)(v3 + 8 * v22);
          swift_retain();
          v24 = __OFADD__(v22++, 1);
          if (v24)
          {
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            swift_once();
            goto LABEL_2;
          }
        }
        v4 = v23;
        v25 = sub_1C30BF954();
        if (v25)
          break;
LABEL_38:
        swift_release();
        if (v22 == v21)
          goto LABEL_18;
      }
      v26 = v25;
      v27 = *a2;
      v4 = *(_QWORD *)(swift_unownedRetainStrong() + 56);
      swift_release();
      if (*(_QWORD *)(v27 + 16))
      {
        v28 = sub_1C33791FC();
        v29 = -1 << *(_BYTE *)(v27 + 32);
        v30 = v28 & ~v29;
        if (((*(_QWORD *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0)
        {
          v31 = *(_QWORD *)(v27 + 48);
          if (*(_QWORD *)(v31 + 8 * v30) == v4)
          {
LABEL_54:
            swift_release();
            goto LABEL_38;
          }
          v32 = ~v29;
          while (1)
          {
            v30 = (v30 + 1) & v32;
            if (((*(_QWORD *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
              break;
            if (*(_QWORD *)(v31 + 8 * v30) == v4)
              goto LABEL_54;
          }
        }
      }
      v33 = sub_1C302D430(v26, a2);
      v4 = (unint64_t)&v40;
      sub_1C306E6A0(v33);
      goto LABEL_54;
    }
    v21 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21)
      goto LABEL_37;
LABEL_18:
    result = swift_bridgeObjectRelease();
    v4 = v37;
  }
  v20 = v18 + 3;
  if (v20 >= v35)
  {
LABEL_60:
    swift_release();
    return v40;
  }
  v19 = *(_QWORD *)(v34 + 8 * v20);
  if (v19)
  {
    i = v20;
    goto LABEL_34;
  }
  while (1)
  {
    i = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (i >= v35)
      goto LABEL_60;
    v19 = *(_QWORD *)(v34 + 8 * i);
    ++v20;
    if (v19)
      goto LABEL_34;
  }
  __break(1u);
  return result;
}

uint64_t Siri_Nl_Core_Protocol_UUID.init(uuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  type metadata accessor for Siri_Nl_Core_Protocol_UUID();
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  *(_QWORD *)(a2 + 8) = bswap64(sub_1C33787B8());
  v5 = bswap64(v4);
  v6 = sub_1C33787D0();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  *(_QWORD *)a2 = v5;
  return result;
}

uint64_t Siri_Nl_Core_Protocol_UUID.uuid.getter()
{
  return sub_1C33787AC();
}

uint64_t Siri_Nl_Core_Protocol_UserDialogAct.taskId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  _QWORD v62[12];
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;

  v89 = a1;
  v81 = type metadata accessor for Siri_Nl_Core_Protocol_UserWantedToRepeat(0);
  MEMORY[0x1E0C80A78](v81);
  v86 = (char *)v62 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for Siri_Nl_Core_Protocol_UserWantedToProceed(0);
  MEMORY[0x1E0C80A78](v63);
  v64 = (char *)v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for Siri_Nl_Core_Protocol_UserWantedToPause(0);
  MEMORY[0x1E0C80A78](v78);
  v85 = (char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for Siri_Nl_Core_Protocol_UserResponded(0);
  MEMORY[0x1E0C80A78](v77);
  v84 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for Siri_Nl_Core_Protocol_UserRejected(0);
  MEMORY[0x1E0C80A78](v76);
  v83 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Siri_Nl_Core_Protocol_UserDisambiguated(0);
  MEMORY[0x1E0C80A78](v75);
  v82 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Siri_Nl_Core_Protocol_UserContinued(0);
  MEMORY[0x1E0C80A78](v74);
  v80 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for Siri_Nl_Core_Protocol_UserCancelled(0);
  MEMORY[0x1E0C80A78](v73);
  v79 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for Siri_Nl_Core_Protocol_UserAcknowledged(0);
  MEMORY[0x1E0C80A78](v72);
  v87 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C80);
  v11 = MEMORY[0x1E0C80A78](v10);
  v62[10] = (char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v71 = (char *)v62 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v62[1] = (char *)v62 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v62[11] = (char *)v62 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v62[9] = (char *)v62 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v70 = (char *)v62 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v62[8] = (char *)v62 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v69 = (char *)v62 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v62[7] = (char *)v62 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v68 = (char *)v62 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v62[6] = (char *)v62 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v67 = (char *)v62 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v62[5] = (char *)v62 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v65 = (char *)v62 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v62[4] = (char *)v62 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v42 = MEMORY[0x1E0C80A78](v41);
  v62[3] = (char *)v62 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v45 = MEMORY[0x1E0C80A78](v44);
  v62[2] = (char *)v62 - v46;
  MEMORY[0x1E0C80A78](v45);
  v47 = type metadata accessor for Siri_Nl_Core_Protocol_UserAccepted(0);
  MEMORY[0x1E0C80A78](v47);
  v66 = (char *)v62 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C78);
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)v62 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = MEMORY[0x1E0C80A78](v52);
  v56 = (char *)v62 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v54);
  v58 = (char *)v62 - v57;
  sub_1C2FF6CFC(v88, (uint64_t)v51, &qword_1EF819C78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52) != 1)
  {
    sub_1C2FF6C38((uint64_t)v51, (uint64_t)v58, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
    sub_1C2FF6C7C((uint64_t)v58, (uint64_t)v56, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
    v60 = (char *)&loc_1C302DFB8 + 4 * word_1C3389C00[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_1C2FF9138((uint64_t)v51, &qword_1EF819C78);
  v59 = type metadata accessor for Siri_Nl_Core_Protocol_UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v89, 1, 1, v59);
}

id Siri_Nl_Core_Protocol_UserDialogAct.convertToUserDialogAct()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  int v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v37 = type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph(0);
  v2 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v35 = (_QWORD **)((char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C70);
  v5 = MEMORY[0x1E0C80A78](v4);
  v36 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v35 - v7;
  v9 = type metadata accessor for Siri_Nl_Core_Protocol_UserStarted(0);
  MEMORY[0x1E0C80A78](v9);
  v38 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C78);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v35 - v19;
  sub_1C2FF6CFC(v1, (uint64_t)v13, &qword_1EF819C78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C2FF9138((uint64_t)v13, &qword_1EF819C78);
    return 0;
  }
  sub_1C2FF6C38((uint64_t)v13, (uint64_t)v20, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
  sub_1C2FF6C7C((uint64_t)v20, (uint64_t)v18, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1C2FF6CC0((uint64_t)v20, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
    v21 = (uint64_t)v18;
LABEL_7:
    sub_1C2FF6CC0(v21, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
    return 0;
  }
  v22 = v38;
  sub_1C2FF6C38((uint64_t)v18, v38, type metadata accessor for Siri_Nl_Core_Protocol_UserStarted);
  v23 = v22 + *(int *)(v9 + 20);
  sub_1C2FF6CFC(v23, (uint64_t)v8, &qword_1EF819C70);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
  v25 = v37;
  v26 = v24(v8, 1, v37);
  sub_1C2FF9138((uint64_t)v8, &qword_1EF819C70);
  if (v26 == 1)
  {
    sub_1C2FF6CC0(v22, type metadata accessor for Siri_Nl_Core_Protocol_UserStarted);
    v21 = (uint64_t)v20;
    goto LABEL_7;
  }
  v29 = v36;
  sub_1C2FF6CFC(v23, v36, &qword_1EF819C70);
  if (v24((char *)v29, 1, v25) == 1)
  {
    v30 = MEMORY[0x1E0DEE9D8];
    v31 = v35;
    *v35 = MEMORY[0x1E0DEE9D8];
    v31[1] = v30;
    v31[2] = v30;
    v31[3] = v30;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    v32 = (char *)v31 + *(int *)(v25 + 36);
    v33 = type metadata accessor for Siri_Nl_Core_Protocol_SemVer();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
    sub_1C2FF9138(v29, &qword_1EF819C70);
  }
  else
  {
    v31 = v35;
    sub_1C2FF6C38(v29, (uint64_t)v35, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph);
  }
  v34 = (void *)_sSo18USOSerializedGraphC12SiriOntologyE9fromProto05protoB0AbC0c21_Nl_Core_Protocol_UsoB0V_tFZ_0(v31);
  sub_1C2FF6CC0((uint64_t)v31, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph);
  v27 = objc_msgSend(objc_allocWithZone((Class)SIRINLUUserStatedTask), sel_initWithTask_, v34);

  sub_1C2FF6CC0(v22, type metadata accessor for Siri_Nl_Core_Protocol_UserStarted);
  sub_1C2FF6CC0((uint64_t)v20, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
  return v27;
}

void __swiftcall Siri_Nl_Core_Protocol_UserParse.convertToUserParse()(SIRINLUUserParse *__return_ptr retstr)
{
  double *v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  int v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  void *v59;
  void *v60;
  void *v61;
  double v62;
  double *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v2 = v1;
  v71 = type metadata accessor for Siri_Nl_Core_Protocol_UUID();
  v69 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v64 = (_QWORD *)((char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph(0);
  v79 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v74 = (_QWORD *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C70);
  v7 = MEMORY[0x1E0C80A78](v6);
  v73 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v78 = (uint64_t)&v62 - v9;
  v77 = type metadata accessor for Siri_Nl_Core_Protocol_UserStarted(0);
  MEMORY[0x1E0C80A78](v77);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C78);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct(0);
  v84 = *(_QWORD *)(v15 - 8);
  v85 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v81 = (uint64_t)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v80 = (uint64_t)&v62 - v18;
  v19 = type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct(0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C80);
  v24 = MEMORY[0x1E0C80A78](v23);
  v65 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v66 = (uint64_t)&v62 - v26;
  v70 = sub_1C33787D0();
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v67 = (char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v2;
  v86 = MEMORY[0x1E0DEE9D8];
  v29 = *(_QWORD *)(*(_QWORD *)&v28 + 16);
  if (v29)
  {
    v82 = v14;
    v63 = v2;
    v30 = *(_QWORD *)&v28
        + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v83 = *(_QWORD *)(v20 + 72);
    v62 = v28;
    swift_bridgeObjectRetain_n();
    v72 = v4;
    v31 = v80;
    v75 = v11;
    v76 = v22;
    while (1)
    {
      sub_1C2FF6C7C(v30, (uint64_t)v22, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct);
      v32 = (uint64_t)v82;
      sub_1C2FF6CFC((uint64_t)v22, (uint64_t)v82, &qword_1EF819C78);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v32, 1, v85) == 1)
      {
        sub_1C2FF9138(v32, &qword_1EF819C78);
      }
      else
      {
        sub_1C2FF6C38(v32, v31, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
        v33 = v81;
        sub_1C2FF6C7C(v31, v81, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
        if (swift_getEnumCaseMultiPayload())
        {
          sub_1C2FF6CC0(v31, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
          sub_1C2FF6CC0(v33, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
        }
        else
        {
          sub_1C2FF6C38(v33, (uint64_t)v11, type metadata accessor for Siri_Nl_Core_Protocol_UserStarted);
          v34 = v78;
          v35 = (uint64_t)&v11[*(int *)(v77 + 20)];
          sub_1C2FF6CFC(v35, v78, &qword_1EF819C70);
          v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
          v37 = v36(v34, 1, v4);
          sub_1C2FF9138(v34, &qword_1EF819C70);
          if (v37 != 1)
          {
            v39 = (uint64_t)v75;
            v40 = v35;
            v41 = v73;
            sub_1C2FF6CFC(v40, v73, &qword_1EF819C70);
            if (v36(v41, 1, v4) == 1)
            {
              v42 = v74;
              v43 = MEMORY[0x1E0DEE9D8];
              *v74 = MEMORY[0x1E0DEE9D8];
              v42[1] = v43;
              v42[2] = v43;
              v42[3] = v43;
              _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
              v44 = v41;
              v45 = (char *)v42 + *(int *)(v4 + 36);
              v46 = type metadata accessor for Siri_Nl_Core_Protocol_SemVer();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 1, 1, v46);
              sub_1C2FF9138(v44, &qword_1EF819C70);
            }
            else
            {
              v42 = v74;
              sub_1C2FF6C38(v41, (uint64_t)v74, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph);
            }
            v11 = (char *)v39;
            v22 = v76;
            v47 = (void *)_sSo18USOSerializedGraphC12SiriOntologyE9fromProto05protoB0AbC0c21_Nl_Core_Protocol_UsoB0V_tFZ_0(v42);
            sub_1C2FF6CC0((uint64_t)v42, type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph);
            objc_msgSend(objc_allocWithZone((Class)SIRINLUUserStatedTask), sel_initWithTask_, v47);

            sub_1C2FF6CC0(v39, type metadata accessor for Siri_Nl_Core_Protocol_UserStarted);
            sub_1C2FF6CC0(v80, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
            v48 = sub_1C2FF6CC0((uint64_t)v22, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct);
            MEMORY[0x1C3BD0EEC](v48);
            if (*(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1C3378DAC();
            sub_1C3378DD0();
            sub_1C3378DA0();
            v4 = v72;
            v31 = v80;
            goto LABEL_10;
          }
          v38 = (uint64_t)v75;
          sub_1C2FF6CC0((uint64_t)v75, type metadata accessor for Siri_Nl_Core_Protocol_UserStarted);
          v31 = v80;
          sub_1C2FF6CC0(v80, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct.OneOf_UserDialogAct);
          v11 = (char *)v38;
          v22 = v76;
        }
      }
      sub_1C2FF6CC0((uint64_t)v22, type metadata accessor for Siri_Nl_Core_Protocol_UserDialogAct);
LABEL_10:
      v30 += v83;
      if (!--v29)
      {
        swift_bridgeObjectRelease();
        v2 = v63;
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_19:
  swift_bridgeObjectRelease();
  v49 = v2[1];
  v50 = (uint64_t)v2 + *(int *)(type metadata accessor for Siri_Nl_Core_Protocol_UserParse(0) + 32);
  v51 = v66;
  sub_1C2FF6CFC(v50, v66, &qword_1EF819C80);
  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  v53 = v71;
  v54 = v52(v51, 1, v71);
  sub_1C2FF9138(v51, &qword_1EF819C80);
  v55 = v67;
  if (v54 == 1)
  {
    sub_1C33787C4();
  }
  else
  {
    v56 = v65;
    sub_1C2FF6CFC(v50, v65, &qword_1EF819C80);
    if (v52(v56, 1, v53) == 1)
    {
      v57 = v64;
      *v64 = 0;
      v57[1] = 0;
      v57[2] = 0;
      *((_BYTE *)v57 + 24) = 1;
      _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
      sub_1C2FF9138(v56, &qword_1EF819C80);
    }
    else
    {
      v57 = v64;
      sub_1C2FF6C38(v56, (uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for Siri_Nl_Core_Protocol_UUID);
    }
    Siri_Nl_Core_Protocol_UUID.uuid.getter();
    sub_1C2FF6CC0((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for Siri_Nl_Core_Protocol_UUID);
  }
  v58 = objc_allocWithZone((Class)SIRINLUUserParse);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C88);
  v59 = (void *)sub_1C3378D88();
  swift_bridgeObjectRelease();
  v60 = (void *)sub_1C33787A0();
  v61 = (void *)sub_1C3378BE4();
  swift_bridgeObjectRelease();
  objc_msgSend(v58, sel_initWithUserDialogActs_probability_nsUUID_parserId_, v59, v60, v61, v49);

  (*(void (**)(char *, uint64_t))(v68 + 8))(v55, v70);
}

SIRINLURequestID __swiftcall Siri_Nl_Core_Protocol_RequestID.convertToRequestId()()
{
  id v0;
  void *v1;
  void *v2;
  objc_class *v3;
  NSString *v4;
  NSUUID *v5;
  NSString *v6;
  objc_class *v7;
  SIRINLURequestID result;

  v0 = objc_allocWithZone((Class)SIRINLURequestID);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1C3378BE4();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1C3378BE4();
  swift_bridgeObjectRelease();
  v3 = (objc_class *)objc_msgSend(v0, sel_initWithIdAsString_connectionID_, v1, v2);

  v7 = v3;
  result._connectionID = v6;
  result._nluRequestId = v5;
  result._idAsString = v4;
  result.super.isa = v7;
  return result;
}

void __swiftcall Siri_Nl_Core_Protocol_NluResponse.convertToResponse()(SIRINLUResponse *__return_ptr retstr)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  id v18;
  void *v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  SIRINLUUserParse *v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v2 = type metadata accessor for Siri_Nl_Core_Protocol_UserParse(0);
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Siri_Nl_Core_Protocol_RequestID();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819C90);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v35 - v13;
  v15 = *(int *)(type metadata accessor for Siri_Nl_Core_Protocol_NluResponse(0) + 28);
  v37 = v1;
  v16 = (uint64_t)v1 + v15;
  sub_1C2FF6CFC((uint64_t)v1 + v15, (uint64_t)v14, &qword_1EF819C90);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  LODWORD(v6) = v17(v14, 1, v5);
  sub_1C2FF9138((uint64_t)v14, &qword_1EF819C90);
  if ((_DWORD)v6 == 1)
  {
    v18 = objc_allocWithZone((Class)SIRINLURequestID);
    v19 = (void *)sub_1C3378BE4();
    v20 = (void *)sub_1C3378BE4();
    v21 = objc_msgSend(v18, sel_initWithIdAsString_connectionID_, v19, v20);

  }
  else
  {
    sub_1C2FF6CFC(v16, (uint64_t)v12, &qword_1EF819C90);
    if (v17(v12, 1, v5) == 1)
    {
      *v8 = 0;
      v8[1] = 0xE000000000000000;
      v8[2] = 0;
      v8[3] = 0xE000000000000000;
      _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
      v22 = (char *)v8 + *(int *)(v5 + 28);
      v23 = type metadata accessor for Siri_Nl_Core_Protocol_UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
      sub_1C2FF9138((uint64_t)v12, &qword_1EF819C90);
    }
    else
    {
      sub_1C2FF6C38((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Siri_Nl_Core_Protocol_RequestID);
    }
    v24 = objc_allocWithZone((Class)SIRINLURequestID);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = (void *)sub_1C3378BE4();
    swift_bridgeObjectRelease();
    v26 = (void *)sub_1C3378BE4();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v24, sel_initWithIdAsString_connectionID_, v25, v26);

    sub_1C2FF6CC0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Siri_Nl_Core_Protocol_RequestID);
  }
  v27 = *v37;
  v38 = MEMORY[0x1E0DEE9D8];
  v28 = *(_QWORD *)(v27 + 16);
  if (v28)
  {
    v29 = v27 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    v30 = *(_QWORD *)(v36 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C2FF6C7C(v29, (uint64_t)v4, type metadata accessor for Siri_Nl_Core_Protocol_UserParse);
      Siri_Nl_Core_Protocol_UserParse.convertToUserParse()(v31);
      v32 = sub_1C2FF6CC0((uint64_t)v4, type metadata accessor for Siri_Nl_Core_Protocol_UserParse);
      MEMORY[0x1C3BD0EEC](v32);
      if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1C3378DAC();
      sub_1C3378DD0();
      sub_1C3378DA0();
      v29 += v30;
      --v28;
    }
    while (v28);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v33 = objc_allocWithZone((Class)SIRINLUResponse);
  sub_1C303121C();
  v34 = (void *)sub_1C3378D88();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_initWithRequestId_parses_, v21, v34);

}

uint64_t SIRINLUUserDialogAct.taskId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for Siri_Nl_Core_Protocol_UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1C302FC78(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_QWORD *sub_1C302FD00(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    *result = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (_QWORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_1C302FD94(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CEEE8);
  v3 = (_QWORD *)sub_1C337901C();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_1C302BD54(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_1C302BD54(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C302FE90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819D30);
  v3 = (_QWORD *)sub_1C337901C();
  v4 = *(_DWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  result = sub_1C302B248(v4);
  if ((v11 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v12 = (_QWORD *)(a1 + 120);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    v13 = (_QWORD *)(v3[7] + 40 * result);
    *v13 = v6;
    v13[1] = v5;
    v13[2] = v8;
    v13[3] = v7;
    v13[4] = v9;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      break;
    v3[2] = v16;
    if (!--v1)
      goto LABEL_8;
    v4 = *((_DWORD *)v12 - 10);
    v17 = *(v12 - 3);
    v21 = v12 + 6;
    v22 = *(v12 - 4);
    v8 = *(v12 - 2);
    v18 = *(v12 - 1);
    v19 = *v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_1C302B248(v4);
    v9 = v19;
    v7 = v18;
    v5 = v17;
    v12 = v21;
    v6 = v22;
    if ((v20 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C302FFF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819CF0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (unsigned int *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF819CF8);
    v7 = (_QWORD *)sub_1C337901C();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1C2FF6CFC(v9, (uint64_t)v5, &qword_1EF819CF0);
      v11 = *v5;
      result = sub_1C302B248(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v7[6] + 4 * result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList(0);
      result = sub_1C2FF6C38(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1C3030160(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int *i;
  unsigned int v5;
  int v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819CE8);
    v3 = (_QWORD *)sub_1C337901C();
    for (i = (int *)(a1 + 36); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_1C302B248(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 4 * result;
      *(_DWORD *)(v3[6] + v9) = v5;
      *(_DWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1C3030234(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _DWORD *i;
  uint64_t v5;
  int v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819AF0);
    v3 = (_QWORD *)sub_1C337901C();
    for (i = (_DWORD *)(a1 + 40); ; i += 4)
    {
      v5 = *((_QWORD *)i - 1);
      v6 = *i;
      result = sub_1C302BD54(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_DWORD *)(v3[7] + 4 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1C3030308(uint64_t a1)
{
  return sub_1C3030438(a1, (uint64_t *)&unk_1EF819CB0);
}

unint64_t sub_1C3030314(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819CD0);
  v3 = (_QWORD *)sub_1C337901C();
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  result = sub_1C302B248(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    v10 = v3[7] + 16 * result;
    *(_DWORD *)v10 = v5;
    *(_QWORD *)(v10 + 8) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *((_DWORD *)v9 - 4);
    v5 = *((_DWORD *)v9 - 2);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1C302B248(v4);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C303042C(uint64_t a1)
{
  return sub_1C3030438(a1, &qword_1EF819AA0);
}

unint64_t sub_1C3030438(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = (_QWORD *)sub_1C337901C();
  v5 = *(_DWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  result = sub_1C302B248(v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  v9 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v4[6] + 4 * result) = v5;
    *(_QWORD *)(v4[7] + 8 * result) = v6;
    v10 = v4[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v4[2] = v12;
    if (!--v2)
      goto LABEL_8;
    v13 = v9 + 2;
    v5 = *((_DWORD *)v9 - 2);
    v14 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1C302B248(v5);
    v9 = v13;
    v6 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C3030534(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  _OWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  char v11;
  __int128 v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF819CC0);
  v3 = (_QWORD *)sub_1C337901C();
  v4 = *(_QWORD *)(a1 + 32);
  v12 = *(_OWORD *)(a1 + 40);
  result = sub_1C302B3B0(v4);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x1E0DEE9E0];
  }
  v7 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v12;
    v8 = v3[2];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      break;
    v3[2] = v10;
    swift_retain();
    swift_unownedRetain();
    if (!--v1)
      return (unint64_t)v3;
    v4 = *((_QWORD *)v7 - 1);
    v12 = *v7;
    result = sub_1C302B3B0(v4);
    v7 = (_OWORD *)((char *)v7 + 24);
    if ((v11 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C3030648(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DFAD8);
  v3 = (_QWORD *)sub_1C337901C();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_1C302B3B0(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1C302B3B0(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t _s12SiriOntology18UsoConversionUtilsO19convertGraphToTasks5graphSayAA0C4TaskCGAA0G0C_tFZ_0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  _QWORD *v55;
  uint64_t (*v56)();
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  char v61;
  unint64_t v62;
  uint64_t v63;
  _BOOL8 v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t result;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99[3];
  uint64_t v100[3];
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;

  v103 = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  v2 = a1[4];
  swift_unownedRetainStrong();
  if (!v2)
    goto LABEL_63;
  swift_retain();
  swift_unownedRetain();
  swift_release();
  v97 = a1;
  v98 = v2;
  v100[0] = 0;
  v100[1] = 0;
  v99[0] = 0;
  v99[1] = 0;
  v3 = sub_1C31E4FC0((uint64_t)&v97, v100, v99);
  swift_release();
  swift_unownedRelease();
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v5 = 0;
  v86 = v3 + 32;
  v84 = *(_QWORD *)(v3 + 16);
  v85 = v3;
  while (1)
  {
    if (v5 >= *(_QWORD *)(v3 + 16))
      goto LABEL_61;
    v6 = (_QWORD *)(v86 + 80 * v5);
    v7 = v6[3];
    v8 = v6[4];
    v10 = v6[8];
    v9 = v6[9];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unownedRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_unownedRetain();
    swift_release();
    swift_unownedRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_1ED7CE0C8 != -1)
      swift_once();
    if (v7 == qword_1ED7CE0A0 && v8 == *(_QWORD *)algn_1ED7CE0A8)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = sub_1C3379184();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unownedRelease();
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_unownedRetain();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unownedRetainStrong();
    v14 = *(_QWORD **)(v9 + 64);
    v13 = *(_QWORD *)(v9 + 72);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    swift_unownedRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v97 = v14;
    v98 = v13;
    v101 = 14906;
    v102 = 0xE200000000000000;
    sub_1C3031268();
    v15 = (_QWORD *)sub_1C3378EA8();
    swift_bridgeObjectRelease();
    if (v15[2] == 2)
      break;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unownedRelease();
    v4 = v84;
    v3 = v85;
LABEL_5:
    if (++v5 == v4)
    {
      swift_bridgeObjectRelease();
      return v103;
    }
  }
  v87 = v10;
  v88 = v9;
  v16 = v15[5];
  v97 = (_QWORD *)v15[4];
  v98 = v16;
  swift_bridgeObjectRetain();
  v17 = sub_1C3378D04();
  if (v15[2] < 2uLL)
    goto LABEL_62;
  v81 = v18;
  v82 = v17;
  v20 = (_QWORD *)v15[6];
  v19 = v15[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v97 = v20;
  v98 = v19;
  v21 = sub_1C3378D04();
  v79 = v22;
  v80 = v21;
  v23 = MEMORY[0x1E0DEE9D8];
  v101 = sub_1C302BFA8(MEMORY[0x1E0DEE9D8], &qword_1ED7CE130);
  swift_beginAccess();
  v24 = *(_QWORD *)(v10 + 16);
  v25 = *(_QWORD *)(v24 + 16);
  v83 = v5;
  if (v25)
  {
    swift_bridgeObjectRetain();
    v90 = (uint64_t *)(v10 + 24);
    swift_beginAccess();
    v26 = (int *)(v24 + 48);
    v92 = (_QWORD *)v23;
    do
    {
      v27 = *((_QWORD *)v26 - 2);
      v28 = *((_QWORD *)v26 - 1);
      v95 = *v26;
      v29 = *((_QWORD *)v26 + 2);
      v93 = *((_QWORD *)v26 + 1);
      v30 = *((_QWORD *)v26 + 3);
      v31 = *((_QWORD *)v26 + 4);
      v32 = *((_QWORD *)v26 + 5);
      swift_unownedRetainStrong();
      v33 = *(_QWORD *)(v88 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      if (v27 == v33 && (v34 = *v90, *(_QWORD *)(*v90 + 16)) && (v35 = sub_1C302BD54(v28), (v36 & 1) != 0))
      {
        v37 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v35);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_unownedRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v38 = v92;
        else
          v38 = sub_1C3024048(0, v92[2] + 1, 1, v92);
        v40 = v38[2];
        v39 = v38[3];
        v41 = v40 + 1;
        if (v40 >= v39 >> 1)
        {
          v43 = sub_1C3024048((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
          v41 = v40 + 1;
          v38 = v43;
        }
        v38[2] = v41;
        v92 = v38;
        v42 = &v38[10 * v40];
        v42[4] = v27;
        v42[5] = v28;
        *((_DWORD *)v42 + 12) = v95;
        v42[7] = v93;
        v42[8] = v29;
        v42[9] = v30;
        v42[10] = v31;
        v42[11] = v32;
        v42[12] = v87;
        v42[13] = v37;
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v26 += 16;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    v23 = (uint64_t)v92;
  }
  v44 = sub_1C31B6E3C(v23);
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(v44 + 16);
  if (!v45)
  {
LABEL_54:
    swift_bridgeObjectRelease();
    v75 = v101;
    type metadata accessor for UsoTask();
    v76 = (_QWORD *)swift_allocObject();
    v76[2] = v82;
    v76[3] = v81;
    v76[4] = v80;
    v76[5] = v79;
    v76[6] = v75;
    swift_bridgeObjectRetain();
    v77 = swift_retain();
    MEMORY[0x1C3BD0EEC](v77);
    if (*(_QWORD *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1C3378DAC();
    sub_1C3378DD0();
    sub_1C3378DA0();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_unownedRelease();
    swift_bridgeObjectRelease();
    v4 = v84;
    v3 = v85;
    v5 = v83;
    goto LABEL_5;
  }
  v46 = (uint64_t *)(v44 + 104);
  while (2)
  {
    v48 = *(v46 - 5);
    v94 = *(v46 - 6);
    v49 = *(v46 - 1);
    v50 = *v46;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unownedRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_unownedRetain();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for UsoValue();
    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 16) = v49;
    *(_QWORD *)(v51 + 24) = v50;
    v96 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_unownedRetain();
    swift_release();
    swift_unownedRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v52 = v101;
    if (*(_QWORD *)(v101 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1C302B1E4(v94, v48);
      v54 = v53;
      swift_bridgeObjectRelease();
      if ((v54 & 1) != 0)
      {
        v56 = sub_1C31E8814(&v97, v94, v48);
        if (*v55)
        {
          v57 = v55;
          v58 = swift_retain();
          MEMORY[0x1C3BD0EEC](v58);
          if (*(_QWORD *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1C3378DAC();
          sub_1C3378DD0();
          sub_1C3378DA0();
          ((void (*)(_QWORD **, _QWORD))v56)(&v97, 0);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_unownedRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          ((void (*)(_QWORD **, _QWORD))v56)(&v97, 0);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_unownedRelease();
          swift_bridgeObjectRelease();
        }
LABEL_36:
        v46 += 10;
        if (!--v45)
          goto LABEL_54;
        continue;
      }
    }
    break;
  }
  v89 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7CE110);
  v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_1C3389BF0;
  *(_QWORD *)(v59 + 32) = v96;
  v97 = (_QWORD *)v59;
  sub_1C3378DA0();
  v91 = v97;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v97 = (_QWORD *)v52;
  v62 = sub_1C302B1E4(v94, v48);
  v63 = *(_QWORD *)(v52 + 16);
  v64 = (v61 & 1) == 0;
  v65 = v63 + v64;
  if (!__OFADD__(v63, v64))
  {
    v66 = v61;
    if (*(_QWORD *)(v52 + 24) >= v65)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1C30C0A74();
      v67 = v94;
    }
    else
    {
      sub_1C30278DC(v65, isUniquelyReferenced_nonNull_native);
      v67 = v94;
      v68 = sub_1C302B1E4(v94, v48);
      if ((v66 & 1) != (v69 & 1))
        goto LABEL_64;
      v62 = v68;
    }
    v70 = v97;
    if ((v66 & 1) != 0)
    {
      v47 = v97[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v47 + 8 * v62) = v91;
    }
    else
    {
      v97[(v62 >> 6) + 8] |= 1 << v62;
      v71 = (uint64_t *)(v70[6] + 16 * v62);
      *v71 = v67;
      v71[1] = v48;
      *(_QWORD *)(v70[7] + 8 * v62) = v91;
      v72 = v70[2];
      v73 = __OFADD__(v72, 1);
      v74 = v72 + 1;
      if (v73)
        goto LABEL_60;
      v70[2] = v74;
      swift_bridgeObjectRetain();
    }
    v101 = (unint64_t)v70;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_unownedRelease();
    swift_release();
    v45 = v89;
    goto LABEL_36;
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  result = sub_1C33791A8();
  __break(1u);
  return result;
}

unint64_t sub_1C303121C()
{
  unint64_t result;

  result = qword_1EF819C98;
  if (!qword_1EF819C98)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF819C98);
  }
  return result;
}

ValueMetadata *type metadata accessor for UsoConversionUtils()
{
  return &type metadata for UsoConversionUtils;
}

unint64_t sub_1C3031268()
{
  unint64_t result;

  result = qword_1EF808CF8[0];
  if (!qword_1EF808CF8[0])
  {
    result = MEMORY[0x1C3BD1B4C](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, qword_1EF808CF8);
  }
  return result;
}

uint64_t UtteranceAlignment.asrHypothesisIndex.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t UtteranceAlignment.spans.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UtteranceAlignment.init(asrHypothesisIndex:spans:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_DWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

uint64_t UtteranceAlignment.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  sub_1C337922C();
  return sub_1C300EC70(a1, v3);
}

uint64_t static UtteranceAlignment.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
    return sub_1C3002050(*(int32x2_t **)(a1 + 8), *(int32x2_t **)(a2 + 8));
  else
    return 0;
}

BOOL sub_1C3031328(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C3031340()
{
  _BYTE *v0;

  if (*v0)
    return 0x736E617073;
  else
    return 0xD000000000000012;
}

uint64_t sub_1C303137C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C30329CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C30313A0()
{
  return 0;
}

void sub_1C30313AC(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C30313B8()
{
  sub_1C3032148();
  return sub_1C3379274();
}

uint64_t sub_1C30313E0()
{
  sub_1C3032148();
  return sub_1C3379280();
}

uint64_t UtteranceAlignment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819D38);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3032148();
  sub_1C337925C();
  v11 = 0;
  sub_1C3379148();
  if (!v2)
  {
    v9[1] = v9[0];
    v10 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819D48);
    sub_1C30321D0(&qword_1EF819D50, (uint64_t (*)(void))sub_1C303218C, MEMORY[0x1E0DEAF10]);
    sub_1C3379130();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t UtteranceAlignment.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_1C3379208();
  sub_1C337922C();
  sub_1C300EC70((uint64_t)v3, v1);
  return sub_1C3379244();
}

uint64_t UtteranceAlignment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819D60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3032148();
  sub_1C3379250();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_1C33790B8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819D48);
    v13 = 1;
    sub_1C30321D0(&qword_1EF819D68, (uint64_t (*)(void))sub_1C3032238, MEMORY[0x1E0DEAF40]);
    sub_1C3379094();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12[1];
    *(_DWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C3031750()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_1C3379208();
  sub_1C337922C();
  sub_1C300EC70((uint64_t)v3, v1);
  return sub_1C3379244();
}

uint64_t sub_1C30317AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1C337922C();
  v2 = *(_QWORD *)(v1 + 16);
  result = sub_1C3379214();
  if (v2)
  {
    v4 = v1 + 52;
    do
    {
      sub_1C337922C();
      sub_1C337922C();
      sub_1C337922C();
      sub_1C337922C();
      sub_1C337922C();
      result = sub_1C337922C();
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C3031848()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_1C3379208();
  sub_1C337922C();
  sub_1C300EC70((uint64_t)v3, v1);
  return sub_1C3379244();
}

uint64_t sub_1C30318A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UtteranceAlignment.init(from:)(a1, a2);
}

uint64_t sub_1C30318B4(_QWORD *a1)
{
  return UtteranceAlignment.encode(to:)(a1);
}

uint64_t sub_1C30318C8(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
    return sub_1C3002050(*(int32x2_t **)(a1 + 8), *(int32x2_t **)(a2 + 8));
  else
    return 0;
}

uint64_t UtteranceSpan.startIndex.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t UtteranceSpan.endIndex.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t UtteranceSpan.startUnicodeScalarIndex.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t UtteranceSpan.endUnicodeScalarIndex.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 12);
}

uint64_t UtteranceSpan.startMilliSeconds.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t UtteranceSpan.endMilliSeconds.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 20);
}

uint64_t UtteranceSpan.init(startIndex:endIndex:startUnicodeScalarIndex:endUnicodeScalarIndex:startMilliSeconds:endMilliSeconds:)@<X0>(uint64_t result@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, _DWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t UtteranceSpan.hash(into:)()
{
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  return sub_1C337922C();
}

uint64_t sub_1C30319A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C30319D8
                                                            + 4 * asc_1C3389C50[a1]))(0x646E497472617473, 0xEA00000000007865);
}

uint64_t sub_1C30319D8()
{
  return 0x7865646E49646E65;
}

unint64_t sub_1C30319F0()
{
  return 0xD000000000000017;
}

unint64_t sub_1C3031A28()
{
  return 0xD000000000000011;
}

uint64_t sub_1C3031A44()
{
  return 0x696C6C694D646E65;
}

uint64_t sub_1C3031A68()
{
  unsigned __int8 *v0;

  return sub_1C30319A0(*v0);
}

uint64_t sub_1C3031A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C3032AB0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C3031A94(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1C3031AA0()
{
  sub_1C30322CC();
  return sub_1C3379274();
}

uint64_t sub_1C3031AC8()
{
  sub_1C30322CC();
  return sub_1C3379280();
}

uint64_t UtteranceSpan.encode(to:)(_QWORD *a1)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  int v9;
  _DWORD v11[8];
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819D78);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v11[6] = v1[2];
  v11[7] = v8;
  v9 = v1[3];
  v11[4] = v1[4];
  v11[5] = v9;
  v11[3] = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C30322CC();
  sub_1C337925C();
  v17 = 0;
  sub_1C3379148();
  if (!v2)
  {
    v16 = 1;
    sub_1C3379148();
    v15 = 2;
    sub_1C3379148();
    v14 = 3;
    sub_1C3379148();
    v13 = 4;
    sub_1C337913C();
    v12 = 5;
    sub_1C337913C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t UtteranceSpan.hashValue.getter()
{
  sub_1C3379208();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  return sub_1C3379244();
}

uint64_t UtteranceSpan.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819D88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C30322CC();
  sub_1C3379250();
  if (!v2)
  {
    v22 = 0;
    v9 = sub_1C33790B8();
    v21 = 1;
    v10 = sub_1C33790B8();
    v20 = 2;
    v16 = sub_1C33790B8();
    v19 = 3;
    v15 = sub_1C33790B8();
    v18 = 4;
    HIDWORD(v14) = sub_1C33790A0();
    v17 = 5;
    v12 = sub_1C33790A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
    v13 = v15;
    a2[2] = v16;
    a2[3] = v13;
    a2[4] = HIDWORD(v14);
    a2[5] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C3031F70()
{
  sub_1C3379208();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  return sub_1C3379244();
}

uint64_t sub_1C3032010()
{
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  return sub_1C337922C();
}

uint64_t sub_1C3032080()
{
  sub_1C3379208();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  sub_1C337922C();
  return sub_1C3379244();
}

uint64_t sub_1C303211C@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return UtteranceSpan.init(from:)(a1, a2);
}

uint64_t sub_1C3032130(_QWORD *a1)
{
  return UtteranceSpan.encode(to:)(a1);
}

unint64_t sub_1C3032148()
{
  unint64_t result;

  result = qword_1EF819D40;
  if (!qword_1EF819D40)
  {
    result = MEMORY[0x1C3BD1B4C](&unk_1C3389FEC, &type metadata for UtteranceAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF819D40);
  }
  return result;
}

unint64_t sub_1C303218C()
{
  unint64_t result;

  result = qword_1EF819D58;
  if (!qword_1EF819D58)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for UtteranceSpan, &type metadata for UtteranceSpan);
    atomic_store(result, (unint64_t *)&qword_1EF819D58);
  }
  return result;
}

uint64_t sub_1C30321D0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF819D48);
    v8 = a2();
    result = MEMORY[0x1C3BD1B4C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C3032238()
{
  unint64_t result;

  result = qword_1EF819D70;
  if (!qword_1EF819D70)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for UtteranceSpan, &type metadata for UtteranceSpan);
    atomic_store(result, (unint64_t *)&qword_1EF819D70);
  }
  return result;
}

BOOL _s12SiriOntology13UtteranceSpanV2eeoiySbAC_ACtFZ_0(int32x4_t *a1, int32x4_t *a2)
{
  _BOOL8 result;

  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(*a1, *a2)), 0xFuLL))) & 1) != 0
    && a1[1].i32[0] == a2[1].i32[0])
  {
    return a1[1].i32[1] == a2[1].i32[1];
  }
  return result;
}

unint64_t sub_1C30322CC()
{
  unint64_t result;

  result = qword_1EF819D80;
  if (!qword_1EF819D80)
  {
    result = MEMORY[0x1C3BD1B4C](&unk_1C3389F9C, &type metadata for UtteranceSpan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF819D80);
  }
  return result;
}

unint64_t sub_1C3032314()
{
  unint64_t result;

  result = qword_1EF819D90;
  if (!qword_1EF819D90)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for UtteranceAlignment, &type metadata for UtteranceAlignment);
    atomic_store(result, (unint64_t *)&qword_1EF819D90);
  }
  return result;
}

unint64_t sub_1C303235C()
{
  unint64_t result;

  result = qword_1EF819D98;
  if (!qword_1EF819D98)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for UtteranceSpan, &type metadata for UtteranceSpan);
    atomic_store(result, (unint64_t *)&qword_1EF819D98);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for UtteranceAlignment(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for Kind()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for UtteranceAlignment(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UtteranceAlignment(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Kind(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Kind(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UtteranceAlignment()
{
  return &type metadata for UtteranceAlignment;
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for UtteranceSpan(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UtteranceSpan(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for UtteranceSpan()
{
  return &type metadata for UtteranceSpan;
}

uint64_t getEnumTagSinglePayload for UtteranceSpan.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UtteranceSpan.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C3032634 + 4 * byte_1C3389C5B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C3032668 + 4 * byte_1C3389C56[v4]))();
}

uint64_t sub_1C3032668(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C3032670(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C3032678);
  return result;
}

uint64_t sub_1C3032684(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C303268CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C3032690(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C3032698(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UtteranceSpan.CodingKeys()
{
  return &type metadata for UtteranceSpan.CodingKeys;
}

uint64_t getEnumTagSinglePayload for UtteranceAlignment.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UtteranceAlignment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C3032790 + 4 * byte_1C3389C65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C30327C4 + 4 * byte_1C3389C60[v4]))();
}

uint64_t sub_1C30327C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C30327CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C30327D4);
  return result;
}

uint64_t sub_1C30327E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C30327E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C30327EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C30327F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1C3032800(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UtteranceAlignment.CodingKeys()
{
  return &type metadata for UtteranceAlignment.CodingKeys;
}

unint64_t sub_1C3032820()
{
  unint64_t result;

  result = qword_1EF819DA0;
  if (!qword_1EF819DA0)
  {
    result = MEMORY[0x1C3BD1B4C](&unk_1C3389EBC, &type metadata for UtteranceAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF819DA0);
  }
  return result;
}

unint64_t sub_1C3032868()
{
  unint64_t result;

  result = qword_1EF819DA8;
  if (!qword_1EF819DA8)
  {
    result = MEMORY[0x1C3BD1B4C](&unk_1C3389F74, &type metadata for UtteranceSpan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF819DA8);
  }
  return result;
}

unint64_t sub_1C30328B0()
{
  unint64_t result;

  result = qword_1EF819DB0;
  if (!qword_1EF819DB0)
  {
    result = MEMORY[0x1C3BD1B4C](&unk_1C3389EE4, &type metadata for UtteranceSpan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF819DB0);
  }
  return result;
}

unint64_t sub_1C30328F8()
{
  unint64_t result;

  result = qword_1EF819DB8;
  if (!qword_1EF819DB8)
  {
    result = MEMORY[0x1C3BD1B4C](&unk_1C3389F0C, &type metadata for UtteranceSpan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF819DB8);
  }
  return result;
}

unint64_t sub_1C3032940()
{
  unint64_t result;

  result = qword_1EF819DC0;
  if (!qword_1EF819DC0)
  {
    result = MEMORY[0x1C3BD1B4C](&unk_1C3389E2C, &type metadata for UtteranceAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF819DC0);
  }
  return result;
}

unint64_t sub_1C3032988()
{
  unint64_t result;

  result = qword_1EF819DC8;
  if (!qword_1EF819DC8)
  {
    result = MEMORY[0x1C3BD1B4C](&unk_1C3389E54, &type metadata for UtteranceAlignment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF819DC8);
  }
  return result;
}

uint64_t sub_1C30329CC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001C33F13E0 || (sub_1C3379184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E617073 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1C3379184();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C3032AB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x646E497472617473 && a2 == 0xEA00000000007865;
  if (v2 || (sub_1C3379184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7865646E49646E65 && a2 == 0xE800000000000000 || (sub_1C3379184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C33F1400 || (sub_1C3379184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C33F1420 || (sub_1C3379184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C33F1440 || (sub_1C3379184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x696C6C694D646E65 && a2 == 0xEF73646E6F636553)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1C3379184();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1C3032D48(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000002ALL;
  else
    v3 = 0xD00000000000002CLL;
  if (v2)
    v4 = 0x80000001C33CACE0;
  else
    v4 = 0x80000001C33CAD10;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000002ALL;
  else
    v5 = 0xD00000000000002CLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33CAD10;
  else
    v6 = 0x80000001C33CACE0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C3032DF0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3032E3C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C3032EDC + 4 * byte_1C338A048[a2]))(v2 + 2);
}

uint64_t sub_1C3032EDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 2 && v2 == 0x80000001C33CAB90)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C3032FB4(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3033004(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C30330A0 + 4 * byte_1C338A058[a2]))(v2 + 2);
}

uint64_t sub_1C30330A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 2 && v2 == 0x80000001C33CAA10)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C303316C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C30331B8(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C3033278 + 4 * byte_1C338A06A[a2]))(v2 - 4);
}

uint64_t sub_1C3033278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 - 4 && v2 == 0x80000001C33CA830)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C3033370(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C30333BC(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C303340C + 4 * byte_1C338A078[a2]))(a3 + 2);
}

uint64_t sub_1C303340C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 2 && v3 == 0x80000001C33CA760)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C3033494(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  char v5;

  v2 = 0x80000001C33CA6A0;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x80000001C33CA6D0;
    else
      v3 = 0x80000001C33CA700;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  else
  {
    v3 = 0x80000001C33CA6A0;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v2 = 0x80000001C33CA6D0;
      else
        v2 = 0x80000001C33CA700;
    }
  }
  if (v3 == v2)
    v5 = 1;
  else
    v5 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_1C3033570(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C30335BC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1C3033628 + 4 * byte_1C338A082[a2]))();
}

uint64_t sub_1C3033628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0x80000001C33CA5B0)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1C30336C8(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3033714(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C3033778 + 4 * byte_1C338A08C[a2]))(v2 + 2);
}

uint64_t sub_1C3033778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 2 && v2 == 0x80000001C33CA500)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C3033814(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3033864(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C30338F0 + 4 * byte_1C338A097[a2]))(v2 - 1);
}

uint64_t sub_1C30338F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 - 1 && v2 == 0x80000001C33CA3F0)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C30339B8(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001ELL;
  else
    v3 = 0xD00000000000001FLL;
  if (v2)
    v4 = 0x80000001C33CA390;
  else
    v4 = 0x80000001C33CA3B0;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001ELL;
  else
    v5 = 0xD00000000000001FLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33CA3B0;
  else
    v6 = 0x80000001C33CA390;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C3033A60(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_MultipliedNumber.Operators.rawValue.getter);
}

uint64_t sub_1C3033A6C(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_MediaItemVersion.DefinedValues.rawValue.getter);
}

void sub_1C3033A78(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3033AC4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C3033B64 + 4 * byte_1C338A0A6[a2]))(v2 + 7);
}

uint64_t sub_1C3033B64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 7 && v2 == 0x80000001C33CA040)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C3033C3C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD00000000000001FLL;
  v3 = 0x80000001C33C9F90;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000021;
    else
      v5 = 0xD000000000000024;
    if (v4 == 1)
      v6 = 0x80000001C33C9FB0;
    else
      v6 = 0x80000001C33C9FE0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD00000000000001FLL;
  v6 = 0x80000001C33C9F90;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000021;
    else
      v2 = 0xD000000000000024;
    if (v7 == 1)
      v3 = 0x80000001C33C9FB0;
    else
      v3 = 0x80000001C33C9FE0;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C3033D38(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD00000000000001ELL;
  v3 = 0x80000001C33C9F10;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000025;
    else
      v5 = 0xD000000000000028;
    if (v4 == 1)
      v6 = 0x80000001C33C9F30;
    else
      v6 = 0x80000001C33C9F60;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD00000000000001ELL;
  v6 = 0x80000001C33C9F10;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000025;
    else
      v2 = 0xD000000000000028;
    if (v7 == 1)
      v3 = 0x80000001C33C9F30;
    else
      v3 = 0x80000001C33C9F60;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1C3033E34(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3033E84(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C3033F30 + 4 * byte_1C338A0B7[a2]))(v2 - 2);
}

uint64_t sub_1C3033F30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 - 2 && v2 == 0x80000001C33C9DF0)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C3034014(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3034064(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C3034104 + 4 * byte_1C338A0C8[a2]))(v2 + 4);
}

uint64_t sub_1C3034104(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 4 && v2 == 0x80000001C33C9CD0)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C30341D4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001DLL;
  else
    v3 = 0xD00000000000001CLL;
  if (v2)
    v4 = 0x80000001C33C9C70;
  else
    v4 = 0x80000001C33C9C90;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001DLL;
  else
    v5 = 0xD00000000000001CLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C9C90;
  else
    v6 = 0x80000001C33C9C70;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C303427C(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_MeasurementUnit.DefinedValues.rawValue.getter);
}

uint64_t sub_1C3034288(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000019;
  else
    v3 = 0xD00000000000001ALL;
  if (v2)
    v4 = 0x80000001C33C92E0;
  else
    v4 = 0x80000001C33C9300;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000019;
  else
    v5 = 0xD00000000000001ALL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C9300;
  else
    v6 = 0x80000001C33C92E0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C303432C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3034378(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C3034408 + 4 * byte_1C338A0D7[a2]))(v2 - 3);
}

uint64_t sub_1C3034408(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 - 3 && v2 == 0x80000001C33C91D0)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C30344D0(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000001C33C9180;
  else
    v2 = 0x80000001C33C9160;
  if ((a2 & 1) != 0)
    v3 = 0x80000001C33C9180;
  else
    v3 = 0x80000001C33C9160;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C303456C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001ALL;
  else
    v3 = 0xD00000000000001CLL;
  if (v2)
    v4 = 0x80000001C33C9120;
  else
    v4 = 0x80000001C33C9140;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001ALL;
  else
    v5 = 0xD00000000000001CLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C9140;
  else
    v6 = 0x80000001C33C9120;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C3034614(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_CurrencyAmount.Operators.rawValue.getter);
}

void sub_1C3034620(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C303466C(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C30346DC + 4 * byte_1C338A0E4[a2]))(a3 - 5);
}

uint64_t sub_1C30346DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 - 5 && v3 == 0x80000001C33C9050)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C3034780(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_AttachmentType.DefinedValues.rawValue.getter);
}

void sub_1C303478C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C30347D8(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3034828 + 4 * byte_1C338A0EE[a2]))(a3 + 2);
}

uint64_t sub_1C3034828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 2 && v3 == 0x80000001C33C8A70)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1C30348AC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C30348F8(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C303494C + 4 * byte_1C338A0F6[a2]))(a3 + 8);
}

uint64_t sub_1C303494C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 8 && v3 == 0x80000001C33C89E0)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1C30349D4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3034A20(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3034AD0 + 4 * byte_1C338A104[a2]))(a3 - 1);
}

uint64_t sub_1C3034AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 - 1 && v3 == 0x80000001C33C8890)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1C3034BB4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3034C00(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3034C70 + 4 * byte_1C338A114[a2]))(a3 - 1);
}

uint64_t sub_1C3034C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 - 1 && v3 == 0x80000001C33C87D0)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C3034D14(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000026;
  else
    v3 = 0xD000000000000028;
  if (v2)
    v4 = 0x80000001C33C8750;
  else
    v4 = 0x80000001C33C8780;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000026;
  else
    v5 = 0xD000000000000028;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C8780;
  else
    v6 = 0x80000001C33C8750;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C3034DBC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3034E08(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3034E64 + 4 * byte_1C338A11F[a2]))(a3 - 1);
}

uint64_t sub_1C3034E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 - 1 && v3 == 0x80000001C33C86C0)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1C3034EF4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3034F40(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3034F9C + 4 * byte_1C338A129[a2]))(a3 + 1);
}

uint64_t sub_1C3034F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 1 && v3 == 0x80000001C33C8620)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C303502C(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_MixedFraction.Operators.rawValue.getter);
}

uint64_t sub_1C3035038(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_MediaItemType.DefinedValues.rawValue.getter);
}

uint64_t sub_1C3035044(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_DateTimeRange.DefinedValues.rawValue.getter);
}

void sub_1C3035050(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C303509C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3035100 + 4 * byte_1C338A132[a2]))(0xD00000000000001BLL);
}

uint64_t sub_1C3035100(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD00000000000001BLL && v1 == 0x80000001C33C7D50)
    v2 = 1;
  else
    v2 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C3035194(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001DLL;
  else
    v3 = 0xD00000000000001CLL;
  if (v2)
    v4 = 0x80000001C33C7CF0;
  else
    v4 = 0x80000001C33C7D10;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001DLL;
  else
    v5 = 0xD00000000000001CLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C7D10;
  else
    v6 = 0x80000001C33C7CF0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C303523C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3035288(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C3035308 + 4 * byte_1C338A13C[a2]))(v2 + 1);
}

uint64_t sub_1C3035308(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 1 && v2 == 0x80000001C33C7C30)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C30353C0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C303540C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C30354BC + 4 * byte_1C338A14B[a2]))(v2 + 3);
}

uint64_t sub_1C30354BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 3 && v2 == 0x80000001C33C7B10)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C30355A4(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_ListPosition.DefinedValues.rawValue.getter);
}

void sub_1C30355B0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3035600(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C303567C + 4 * byte_1C338A15A[a2]))(v2 - 8);
}

uint64_t sub_1C303567C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 - 8 && v2 == 0x80000001C33C75B0)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C3035734(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3035780(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C30357D4 + 4 * byte_1C338A164[a2]))(a3 + 14);
}

uint64_t sub_1C30357D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 14 && v3 == 0x80000001C33C7510)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C303585C(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000001C33C74D0;
  else
    v2 = 0x80000001C33C74B0;
  if ((a2 & 1) != 0)
    v3 = 0x80000001C33C74D0;
  else
    v3 = 0x80000001C33C74B0;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C30358F8(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_MonthOfYear.DefinedValues.rawValue.getter);
}

uint64_t sub_1C3035904(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001ELL;
  else
    v3 = 0xD00000000000001FLL;
  if (v2)
    v4 = 0x80000001C33C72F0;
  else
    v4 = 0x80000001C33C7310;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001ELL;
  else
    v5 = 0xD00000000000001FLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C7310;
  else
    v6 = 0x80000001C33C72F0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C30359AC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C30359F8(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3035A44 + 4 * byte_1C338A16C[a2]))(a3 - 1);
}

uint64_t sub_1C3035A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 - 1 && v3 == 0x80000001C33C7290)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C3035AC4(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_Measurement.Operators.rawValue.getter);
}

uint64_t sub_1C3035AD0(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001FLL;
  else
    v3 = 0xD00000000000001BLL;
  if (v2)
    v4 = 0x80000001C33C7190;
  else
    v4 = 0x80000001C33C71B0;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001FLL;
  else
    v5 = 0xD00000000000001BLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C71B0;
  else
    v6 = 0x80000001C33C7190;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C3035B78(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3035BC4(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3035C50 + 4 * byte_1C338A178[a2]))(a3 - 1);
}

uint64_t sub_1C3035C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 - 1 && v3 == 0x80000001C33C70B0)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C3035D10(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000018;
  else
    v3 = 0xD00000000000001ALL;
  if (v2)
    v4 = 0x80000001C33C7050;
  else
    v4 = 0x80000001C33C7070;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000018;
  else
    v5 = 0xD00000000000001ALL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C7070;
  else
    v6 = 0x80000001C33C7050;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C3035DB8(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000001C33C7030;
  else
    v2 = 0x80000001C33C7010;
  if ((a2 & 1) != 0)
    v3 = 0x80000001C33C7030;
  else
    v3 = 0x80000001C33C7010;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1C3035E54(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3035EA0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3035F30 + 4 * byte_1C338A187[a2]))(0xD000000000000016);
}

uint64_t sub_1C3035F30(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000016 && v1 == 0x80000001C33C6F50)
    v2 = 1;
  else
    v2 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C3035FF8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000018;
  v3 = 0x80000001C33C6ED0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD00000000000001BLL;
    else
      v5 = 0xD00000000000001ALL;
    if (v4 == 1)
      v6 = 0x80000001C33C6EF0;
    else
      v6 = 0x80000001C33C6F10;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000018;
  v6 = 0x80000001C33C6ED0;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD00000000000001BLL;
    else
      v2 = 0xD00000000000001ALL;
    if (v7 == 1)
      v3 = 0x80000001C33C6EF0;
    else
      v3 = 0x80000001C33C6F10;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C30360F4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001ALL;
  else
    v3 = 0xD00000000000001BLL;
  if (v2)
    v4 = 0x80000001C33C6E90;
  else
    v4 = 0x80000001C33C6EB0;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001ALL;
  else
    v5 = 0xD00000000000001BLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C6EB0;
  else
    v6 = 0x80000001C33C6E90;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C303619C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C30361E8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1C3036240 + 4 * byte_1C338A193[a2]))();
}

uint64_t sub_1C3036240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0x80000001C33C6E10)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1C30362CC(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3036318(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C30363A4 + 4 * byte_1C338A19F[a2]))(v2 + 3);
}

uint64_t sub_1C30363A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 3 && v2 == 0x80000001C33C6D30)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C3036468(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_TimeUnit.DefinedValues.rawValue.getter);
}

uint64_t sub_1C3036474(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000001C33C6B50;
  else
    v2 = 0x80000001C33C6B30;
  if ((a2 & 1) != 0)
    v3 = 0x80000001C33C6B50;
  else
    v3 = 0x80000001C33C6B30;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C3036510(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_Duration.Operators.rawValue.getter);
}

uint64_t sub_1C303651C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD00000000000001DLL;
  v3 = 0x80000001C33C6AD0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000016;
    else
      v5 = 0xD00000000000001ALL;
    if (v4 == 1)
      v6 = 0x80000001C33C6AF0;
    else
      v6 = 0x80000001C33C6B10;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD00000000000001DLL;
  v6 = 0x80000001C33C6AD0;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000016;
    else
      v2 = 0xD00000000000001ALL;
    if (v7 == 1)
      v3 = 0x80000001C33C6AF0;
    else
      v3 = 0x80000001C33C6B10;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C3036610(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001BLL;
  else
    v3 = 0xD000000000000017;
  if (v2)
    v4 = 0x80000001C33C6A90;
  else
    v4 = 0x80000001C33C6AB0;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001BLL;
  else
    v5 = 0xD000000000000017;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C6AB0;
  else
    v6 = 0x80000001C33C6A90;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C30366B8(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000017;
  else
    v3 = 0xD000000000000019;
  if (v2)
    v4 = 0x80000001C33C6A30;
  else
    v4 = 0x80000001C33C6A50;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000017;
  else
    v5 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C6A50;
  else
    v6 = 0x80000001C33C6A30;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C3036760(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, PrimitiveIntegerOperators.rawValue.getter);
}

uint64_t sub_1C303676C(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_Integer.Operators.rawValue.getter);
}

uint64_t sub_1C3036778(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_Decimal.Operators.rawValue.getter);
}

void sub_1C3036784(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C30367F0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C303688C + 4 * byte_1C338A1AC[a2]))(0xD000000000000010);
}

uint64_t sub_1C303688C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000010 && v1 == 0x80000001C33C69F0)
    v2 = 1;
  else
    v2 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C303697C(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_Number.Operators.rawValue.getter);
}

uint64_t sub_1C3036988(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_common_Number.DefinedValues.rawValue.getter);
}

uint64_t sub_1C3036994(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000014;
  else
    v3 = 0xD000000000000017;
  if (v2)
    v4 = 0x80000001C33C6660;
  else
    v4 = 0x80000001C33C6680;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000014;
  else
    v5 = 0xD000000000000017;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C6680;
  else
    v6 = 0x80000001C33C6660;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C3036A3C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3036A88(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3036AFC + 4 * byte_1C338A1B7[a2]))(0xD000000000000010);
}

uint64_t sub_1C3036AFC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000010 && v1 == 0x80000001C33C65C0)
    v2 = 1;
  else
    v2 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C3036BA0(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C61757145746F6ELL;
  else
    v3 = 0xD000000000000012;
  if (v2)
    v4 = 0x80000001C33C6580;
  else
    v4 = 0xE900000000000073;
  if ((a2 & 1) != 0)
    v5 = 0x6C61757145746F6ELL;
  else
    v5 = 0xD000000000000012;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000073;
  else
    v6 = 0x80000001C33C6580;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C3036C4C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3036C98(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C3036D0C + 4 * byte_1C338A1C1[a2]))(v2 + 13);
}

uint64_t sub_1C3036D0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 13 && v2 == 0x80000001C33C6500)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C3036DB0(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000011;
  else
    v3 = 0xD000000000000013;
  if (v2)
    v4 = 0x80000001C33C64A0;
  else
    v4 = 0x80000001C33C64C0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000011;
  else
    v5 = 0xD000000000000013;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C64C0;
  else
    v6 = 0x80000001C33C64A0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C3036E58(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C3036EB4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3036FE4 + 4 * byte_1C338A1CF[a2]))(0x7272754372657375);
}

uint64_t sub_1C3036FE4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7272754372657375 && v1 == 0xEB00000000746E65)
    v2 = 1;
  else
    v2 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1C3037164(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C30371B0(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3037258 + 4 * byte_1C338A1DE[a2]))(a3 + 5);
}

uint64_t sub_1C3037258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 5 && v3 == 0x80000001C33C63E0)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

BOOL sub_1C3037350(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
    a1 = qword_1C338BE10[a1];
  if ((a4 & 1) != 0)
    a3 = qword_1C338BE10[a3];
  return a1 == a3;
}

void sub_1C3037374(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C30373AC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C303740C + 4 * byte_1C338A1E9[a2]))(28271);
}

uint64_t sub_1C303740C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 28271 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C303749C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C3037508(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C30375B4 + 4 * byte_1C338A1F6[a2]))(0x6D41206874756F53);
}

uint64_t sub_1C30375B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x6D41206874756F53 && v2 == v1)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C30376C8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 31085;
  else
    v3 = 6647407;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE200000000000000;
  if ((a2 & 1) != 0)
    v5 = 31085;
  else
    v5 = 6647407;
  if ((a2 & 1) != 0)
    v6 = 0xE200000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C3037758(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, AddressOntologyNode.CountryCode.rawValue.getter);
}

uint64_t sub_1C3037764(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, AddressOntologyNode.StreetType.rawValue.getter);
}

uint64_t sub_1C3037770(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x79627261656ELL;
  else
    v3 = 6647407;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x79627261656ELL;
  else
    v5 = 6647407;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C3037808(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C3037850(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C30378C0 + 4 * byte_1C338A202[a2]))(0x73726574656DLL);
}

uint64_t sub_1C30378C0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x73726574656DLL && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C3037974(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, PersonOntologyNode.PersonNamePostfix.rawValue.getter);
}

uint64_t sub_1C3037980(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, PersonOntologyNode.PersonNamePrefix.rawValue.getter);
}

void sub_1C303798C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C30379D8(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3037A2C + 4 * byte_1C338A20A[a2]))(a3 + 2);
}

uint64_t sub_1C3037A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 2 && v3 == 0x80000001C33C5CB0)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C3037AB4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000002ALL;
  else
    v3 = 0xD000000000000028;
  if (v2)
    v4 = 0x80000001C33C5BC0;
  else
    v4 = 0x80000001C33C5BF0;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000002ALL;
  else
    v5 = 0xD000000000000028;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C5BF0;
  else
    v6 = 0x80000001C33C5BC0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C3037B5C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3037BA8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3037C30 + 4 * byte_1C338A215[a2]))(0xD000000000000024);
}

uint64_t sub_1C3037C30(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000024 && v1 == 0x80000001C33C5A50)
    v2 = 1;
  else
    v2 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C3037CF0(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.rawValue.getter);
}

uint64_t sub_1C3037CFC(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000026;
  else
    v3 = 0xD00000000000002CLL;
  if (v2)
    v4 = 0x80000001C33C5640;
  else
    v4 = 0x80000001C33C5670;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000026;
  else
    v5 = 0xD00000000000002CLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C5670;
  else
    v6 = 0x80000001C33C5640;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C3037DA4(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_appleNotebook_NotebookAttribute.DefinedValues.rawValue.getter);
}

void sub_1C3037DB0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3037E00(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C3037E9C + 4 * byte_1C338A224[a2]))(v2 - 15);
}

uint64_t sub_1C3037E9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 - 15 && v2 == 0x80000001C33C4C00)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C3037F74(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_appleMessage_MessageAttribute.DefinedValues.rawValue.getter);
}

void sub_1C3037F80(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3037FD0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3038048 + 4 * byte_1C338A232[a2]))(0xD000000000000037);
}

uint64_t sub_1C3038048(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000037 && v1 == 0x80000001C33C41F0)
    v2 = 1;
  else
    v2 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C30380FC(uint64_t a1, uint64_t a2)
{
  return sub_1C3038108(a1, a2, UsoEntity_commonStock_StockAttribute.DefinedValues.rawValue.getter);
}

uint64_t sub_1C3038108(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1C30381A0(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000021;
  else
    v3 = 0xD00000000000001BLL;
  if (v2)
    v4 = 0x80000001C33C3DB0;
  else
    v4 = 0x80000001C33C3DD0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000021;
  else
    v5 = 0xD00000000000001BLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C33C3DD0;
  else
    v6 = 0x80000001C33C3DB0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C3038248(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3038294(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C30382F8 + 4 * byte_1C338A23C[a2]))(v2 + 6);
}

uint64_t sub_1C30382F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 6 && v2 == 0x80000001C33C3D20)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C303838C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C30383D8(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C303844C + 4 * byte_1C338A245[a2]))(v2 + 1);
}

uint64_t sub_1C303844C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 1 && v2 == 0x80000001C33C3C70)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C30384F0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C3038540(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C30385C4 + 4 * byte_1C338A250[a2]))(v2 + 8);
}

uint64_t sub_1C30385C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 8 && v2 == 0x80000001C33C3B50)
    v3 = 1;
  else
    v3 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C3038678(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C30386C8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3038790 + 4 * byte_1C338A261[a2]))(0xD000000000000030);
}

uint64_t sub_1C3038790(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000030 && v1 == 0x80000001C33C38F0)
    v2 = 1;
  else
    v2 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1C3038894(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C30388E0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C3038940 + 4 * byte_1C338A270[a2]))(0xD00000000000002ELL);
}

uint64_t sub_1C3038940(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD00000000000002ELL && v1 == 0x80000001C33C3830)
    v2 = 1;
  else
    v2 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C30389D0(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000001C33C37D0;
  else
    v2 = 0x80000001C33C37A0;
  if ((a2 & 1) != 0)
    v3 = 0x80000001C33C37D0;
  else
    v3 = 0x80000001C33C37A0;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1C3379184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

BOOL sub_1C3038A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

void Com_Apple_Siri_Product_Proto_ValueType.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t Com_Apple_Siri_Product_Proto_ValueType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 0xA;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_ValueType.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_1C3038AA8(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_1C3038ABC()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_1C3038AC4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Com_Apple_Siri_Product_Proto_ValueType.init(rawValue:)(*a1, a2);
}

void sub_1C3038ACC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1C3038ADC()
{
  sub_1C304B888();
  return sub_1C337895C();
}

BOOL sub_1C3038B18(uint64_t a1, uint64_t *a2)
{
  return sub_1C3038A6C(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_1C3038B34()
{
  qword_1EF819DD0 = (uint64_t)&unk_1E7D0EF90;
}

uint64_t static Com_Apple_Siri_Product_Proto_ValueType.allCases.getter()
{
  return sub_1C3038FDC(&qword_1EF80A5E0);
}

uint64_t static Com_Apple_Siri_Product_Proto_ValueType.allCases.setter(uint64_t a1)
{
  return sub_1C3039050(a1, &qword_1EF80A5E0, &qword_1EF819DD0);
}

uint64_t (*static Com_Apple_Siri_Product_Proto_ValueType.allCases.modify())()
{
  if (qword_1EF80A5E0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C3038BF0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C303913C(&qword_1EF80A5E0, &qword_1EF819DD0, a1);
}

uint64_t sub_1C3038C0C()
{
  sub_1C304B844();
  return sub_1C337895C();
}

void sub_1C3038C44()
{
  qword_1EF819DD8 = (uint64_t)&unk_1E7D0F050;
}

uint64_t static Com_Apple_Siri_Product_Proto_OriginType.allCases.getter()
{
  return sub_1C3038FDC(&qword_1EF80A5E8);
}

uint64_t static Com_Apple_Siri_Product_Proto_OriginType.allCases.setter(uint64_t a1)
{
  return sub_1C3039050(a1, &qword_1EF80A5E8, &qword_1EF819DD8);
}

uint64_t (*static Com_Apple_Siri_Product_Proto_OriginType.allCases.modify())()
{
  if (qword_1EF80A5E8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C3038CFC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C303913C(&qword_1EF80A5E8, &qword_1EF819DD8, a1);
}

unint64_t Com_Apple_Siri_Product_Proto_MitigatorClassification.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 4;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_1C3038D34@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Com_Apple_Siri_Product_Proto_MitigatorClassification.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C3038D3C()
{
  sub_1C3055348();
  return sub_1C337895C();
}

void sub_1C3038D74()
{
  qword_1EF819DE0 = (uint64_t)&unk_1E7D0F110;
}

uint64_t static Com_Apple_Siri_Product_Proto_MitigatorClassification.allCases.getter()
{
  return sub_1C3038FDC(&qword_1EF80A5F0);
}

uint64_t static Com_Apple_Siri_Product_Proto_MitigatorClassification.allCases.setter(uint64_t a1)
{
  return sub_1C3039050(a1, &qword_1EF80A5F0, &qword_1EF819DE0);
}

uint64_t (*static Com_Apple_Siri_Product_Proto_MitigatorClassification.allCases.modify())()
{
  if (qword_1EF80A5F0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C3038E2C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C303913C(&qword_1EF80A5F0, &qword_1EF819DE0, a1);
}

unint64_t Com_Apple_Siri_Product_Proto_MetaDomainAction.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_1C3038E60@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

_QWORD *sub_1C3038E78@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 3uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_1C3038E94()
{
  sub_1C3379208();
  sub_1C3378BC0();
  return sub_1C3379244();
}

uint64_t sub_1C3038EFC()
{
  sub_1C3055304();
  return sub_1C337895C();
}

uint64_t sub_1C3038F34()
{
  sub_1C3379208();
  sub_1C3378BC0();
  return sub_1C3379244();
}

BOOL sub_1C3038F98(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_1C3038FAC()
{
  qword_1EF819DE8 = (uint64_t)&unk_1E7D0F170;
}

uint64_t static Com_Apple_Siri_Product_Proto_MetaDomainAction.allCases.getter()
{
  return sub_1C3038FDC(&qword_1EF80A5F8);
}

uint64_t sub_1C3038FDC(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static Com_Apple_Siri_Product_Proto_MetaDomainAction.allCases.setter(uint64_t a1)
{
  return sub_1C3039050(a1, &qword_1EF80A5F8, &qword_1EF819DE8);
}

uint64_t sub_1C3039050(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Com_Apple_Siri_Product_Proto_MetaDomainAction.allCases.modify())()
{
  if (qword_1EF80A5F8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C3039120@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C303913C(&qword_1EF80A5F8, &qword_1EF819DE8, a1);
}

uint64_t sub_1C303913C@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t (*Com_Apple_Siri_Product_Proto_AdjustmentReason.explanation.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_AdjustmentReason.sourceClass.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Com_Apple_Siri_Product_Proto_AdjustmentReason.sourceClass.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_AdjustmentReason.sourceClass.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_AdjustmentReason.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303A584(type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, a1);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DEB20);
}

uint64_t Com_Apple_Siri_Product_Proto_AdjustmentReason.unknownFields.setter(uint64_t a1)
{
  return sub_1C303A5DC(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
}

uint64_t (*Com_Apple_Siri_Product_Proto_AdjustmentReason.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_AdjustmentReason.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t Com_Apple_Siri_Product_Proto_DerivedOrigin.adjustmentReason.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1EF7DEB60);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, (uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF7DEB60);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DE7A8);
}

uint64_t sub_1C30393B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_1EF7DEB60);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, (uint64_t)a2, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1EF7DEB60);
}

uint64_t Com_Apple_Siri_Product_Proto_DerivedOrigin.adjustmentReason.setter(uint64_t a1)
{
  return sub_1C303CC34(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, &qword_1EF7DEB60, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
}

void (*Com_Apple_Siri_Product_Proto_DerivedOrigin.adjustmentReason.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0) + 24);
  *((_DWORD *)v3 + 12) = v10;
  sub_1C2FF6CFC(v1 + v10, (uint64_t)v5, &qword_1EF7DEB60);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DEB60);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
  }
  return sub_1C30395E8;
}

void sub_1C30395E8(uint64_t a1, char a2)
{
  sub_1C303CE20(a1, a2, &qword_1EF7DEB60, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
}

BOOL Com_Apple_Siri_Product_Proto_DerivedOrigin.hasAdjustmentReason.getter()
{
  return sub_1C303CF3C(&qword_1EF7DEB60, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_DerivedOrigin.clearAdjustmentReason()()
{
  sub_1C303D014(type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, &qword_1EF7DEB60, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
}

uint64_t (*Com_Apple_Siri_Product_Proto_DerivedOrigin.derivedFrom.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_DerivedOrigin.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303BA80(type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_DerivedOrigin.unknownFields.setter(uint64_t a1)
{
  return sub_1C303BAD8(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
}

uint64_t (*Com_Apple_Siri_Product_Proto_DerivedOrigin.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_DerivedOrigin.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;

  *a1 = MEMORY[0x1E0DEE9D8];
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v3 = (char *)a1 + *(int *)(v2 + 24);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
}

void Com_Apple_Siri_Product_Proto_Origin.originType.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.originType.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Origin.originType.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.originDetail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  return sub_1C2FF6CFC(v1 + *(int *)(v3 + 20), a1, &qword_1EF7DDBD8);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DDC68);
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.originDetail.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  return sub_1C2FF6D84(a1, v1 + *(int *)(v3 + 20), &qword_1EF7DDBD8);
}

uint64_t (*Com_Apple_Siri_Product_Proto_Origin.originDetail.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.reason.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  sub_1C2FF6CFC(v0 + *(int *)(v4 + 20), (uint64_t)v3, &qword_1EF7DDBD8);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1C2FF9138((uint64_t)v3, &qword_1EF7DDBD8);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1C2FF6CC0((uint64_t)v3, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    return 0;
  }
  return *(_QWORD *)v3;
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DDBA0);
}

uint64_t sub_1C30398D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 20), (uint64_t)v6, &qword_1EF7DDBD8);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    result = sub_1C2FF9138((uint64_t)v6, &qword_1EF7DDBD8);
  }
  else
  {
    result = swift_getEnumCaseMultiPayload();
    if (!(_DWORD)result)
    {
      v10 = *v6;
      v11 = v6[1];
      goto LABEL_7;
    }
    result = sub_1C2FF6CC0((uint64_t)v6, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  }
  v10 = 0;
  v11 = 0xE000000000000000;
LABEL_7:
  *a2 = v10;
  a2[1] = v11;
  return result;
}

uint64_t sub_1C30399D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0) + 20));
  swift_bridgeObjectRetain();
  sub_1C2FF9138((uint64_t)v4, &qword_1EF7DDBD8);
  *v4 = v3;
  v4[1] = v2;
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.reason.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0) + 20));
  sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDBD8);
  *v5 = a1;
  v5[1] = a2;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
}

void (*Com_Apple_Siri_Product_Proto_Origin.reason.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[2] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  v5 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[3] = v5;
  v6 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0) + 20);
  *((_DWORD *)v3 + 12) = v6;
  sub_1C2FF6CFC(v1 + v6, (uint64_t)v5, &qword_1EF7DDBD8);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v3[4] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[5] = v8;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDBD8);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      v9 = *v5;
      v10 = v5[1];
      goto LABEL_7;
    }
    sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  }
  v9 = 0;
  v10 = 0xE000000000000000;
LABEL_7:
  *v3 = v9;
  v3[1] = v10;
  return sub_1C3039BDC;
}

void sub_1C3039BDC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v5 = (*a1)[4];
  v6 = (*a1)[5];
  v7 = *((int *)*a1 + 12);
  v8 = (void *)(*a1)[3];
  v9 = (_QWORD *)((*a1)[2] + v7);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C2FF9138((uint64_t)v9, &qword_1EF7DDBD8);
    *v9 = v4;
    v9[1] = v3;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C2FF9138((*a1)[2] + v7, &qword_1EF7DDBD8);
    *v9 = v4;
    v9[1] = v3;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
  }
  free(v8);
  free(v2);
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.matchingSpan.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_1EF7DDBD8);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDBD8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      return sub_1C2FF6C38((uint64_t)v5, a1, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
    sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  }
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v9 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0) + 20);
  if (qword_1EF7DE220 != -1)
    swift_once();
  *(_QWORD *)(a1 + v9) = qword_1EF7DE210;
  return swift_retain();
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.matchingSpan.setter(uint64_t a1)
{
  return sub_1C303A348(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
}

void (*Com_Apple_Siri_Product_Proto_Origin.matchingSpan.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[2] = malloc(v7);
  v8 = (char *)malloc(v7);
  v3[3] = v8;
  v9 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0) + 20);
  *((_DWORD *)v3 + 12) = v9;
  sub_1C2FF6CFC(v1 + v9, (uint64_t)v5, &qword_1EF7DDBD8);
  v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v3[4] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[5] = v11;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
  {
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDBD8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1C2FF6C38((uint64_t)v5, (uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
      return sub_1C3039FA0;
    }
    sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  }
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v12 = *(int *)(v6 + 20);
  if (qword_1EF7DE220 != -1)
    swift_once();
  *(_QWORD *)&v8[v12] = qword_1EF7DE210;
  swift_retain();
  return sub_1C3039FA0;
}

void sub_1C3039FA0(uint64_t a1, char a2)
{
  sub_1C303C570(a1, a2, &qword_1EF7DDBD8, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.derivedOrigin.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_1EF7DDBD8);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDBD8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
      return sub_1C2FF6C38((uint64_t)v5, (uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
    sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  }
  *a1 = MEMORY[0x1E0DEE9D8];
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v10 = (char *)a1 + *(int *)(v9 + 24);
  v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
}

uint64_t sub_1C303A104@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 20), (uint64_t)v6, &qword_1EF7DDBD8);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_1C2FF9138((uint64_t)v6, &qword_1EF7DDBD8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
      return sub_1C2FF6C38((uint64_t)v6, (uint64_t)a2, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
    sub_1C2FF6CC0((uint64_t)v6, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  }
  *a2 = MEMORY[0x1E0DEE9D8];
  v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v11 = (char *)a2 + *(int *)(v10 + 24);
  v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
}

uint64_t sub_1C303A254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8 = a5(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  sub_1C2FF6C7C(a1, (uint64_t)&v14 - v9, a5);
  v11 = a2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0) + 20);
  sub_1C2FF9138(v11, &qword_1EF7DDBD8);
  sub_1C2FF6C38((uint64_t)v10, v11, a5);
  v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.derivedOrigin.setter(uint64_t a1)
{
  return sub_1C303A348(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
}

uint64_t sub_1C303A348(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0) + 20);
  sub_1C2FF9138(v5, &qword_1EF7DDBD8);
  sub_1C2FF6C38(a1, v5, a2);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
}

void (*Com_Apple_Siri_Product_Proto_Origin.derivedOrigin.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[2] = malloc(v7);
  v8 = malloc(v7);
  v3[3] = v8;
  v9 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0) + 20);
  *((_DWORD *)v3 + 12) = v9;
  sub_1C2FF6CFC(v1 + v9, (uint64_t)v5, &qword_1EF7DDBD8);
  v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v3[4] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[5] = v11;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
  {
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDBD8);
LABEL_6:
    *v8 = MEMORY[0x1E0DEE9D8];
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    v12 = (char *)v8 + *(int *)(v6 + 24);
    v13 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    return sub_1C303A560;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    goto LABEL_6;
  }
  sub_1C2FF6C38((uint64_t)v5, (uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
  return sub_1C303A560;
}

void sub_1C303A560(uint64_t a1, char a2)
{
  sub_1C303C570(a1, a2, &qword_1EF7DDBD8, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303A584(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin, a1);
}

uint64_t sub_1C303A584@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 24);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.unknownFields.setter(uint64_t a1)
{
  return sub_1C303A5DC(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
}

uint64_t sub_1C303A5DC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 24);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*Com_Apple_Siri_Product_Proto_Origin.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  v1 = a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0) + 20);
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t Com_Apple_Siri_Product_Proto_OriginalElementValue.isFresh.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t Com_Apple_Siri_Product_Proto_OriginalElementValue.isFresh.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_OriginalElementValue.isFresh.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_OriginalElementValue.input.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Com_Apple_Siri_Product_Proto_OriginalElementValue.input.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_OriginalElementValue.input.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_OriginalElementValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303A584(type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_OriginalElementValue.unknownFields.setter(uint64_t a1)
{
  return sub_1C303A5DC(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
}

uint64_t (*Com_Apple_Siri_Product_Proto_OriginalElementValue.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_OriginalElementValue.init()@<X0>(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t (*Com_Apple_Siri_Product_Proto_ElementValue.semanticTags.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.origin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_1EF7DDCA8);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  v8 = a1 + *(int *)(v7 + 20);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDCA8);
}

uint64_t sub_1C303A900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 28), (uint64_t)v6, &qword_1EF7DDCA8);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  v9 = a2 + *(int *)(v8 + 20);
  v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1EF7DDCA8);
}

uint64_t sub_1C303AA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2FF6C7C(a1, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
  v8 = a2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 28);
  sub_1C2FF9138(v8, &qword_1EF7DDCA8);
  sub_1C2FF6C38((uint64_t)v7, v8, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.origin.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 28);
  sub_1C2FF9138(v3, &qword_1EF7DDCA8);
  sub_1C2FF6C38(a1, v3, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Com_Apple_Siri_Product_Proto_ElementValue.origin.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 28);
  *((_DWORD *)v3 + 12) = v10;
  sub_1C2FF6CFC(v1 + v10, (uint64_t)v5, &qword_1EF7DDCA8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_QWORD *)v9 = 0;
    v9[8] = 1;
    v11 = &v9[*(int *)(v6 + 20)];
    v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDCA8);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
  }
  return sub_1C303ACB0;
}

void sub_1C303ACB0(uint64_t a1, char a2)
{
  sub_1C303CE20(a1, a2, &qword_1EF7DDCA8, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
}

BOOL Com_Apple_Siri_Product_Proto_ElementValue.hasOrigin.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  sub_1C2FF6CFC(v0 + *(int *)(v4 + 28), (uint64_t)v3, &qword_1EF7DDCA8);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1C2FF9138((uint64_t)v3, &qword_1EF7DDCA8);
  return v6;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_ElementValue.clearOrigin()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 28);
  sub_1C2FF9138(v1, &qword_1EF7DDCA8);
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.originalValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 32), (uint64_t)v5, &qword_1EF7DEC98);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, a1, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF7DEC98);
}

uint64_t sub_1C303AEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 32), (uint64_t)v6, &qword_1EF7DEC98);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  *(_BYTE *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0xE000000000000000;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1EF7DEC98);
}

uint64_t sub_1C303AFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2FF6C7C(a1, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  v8 = a2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 32);
  sub_1C2FF9138(v8, &qword_1EF7DEC98);
  sub_1C2FF6C38((uint64_t)v7, v8, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.originalValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 32);
  sub_1C2FF9138(v3, &qword_1EF7DEC98);
  sub_1C2FF6C38(a1, v3, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Com_Apple_Siri_Product_Proto_ElementValue.originalValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 32);
  *((_DWORD *)v3 + 12) = v10;
  sub_1C2FF6CFC(v1 + v10, (uint64_t)v5, &qword_1EF7DEC98);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_BYTE *)v9 = 0;
    v9[1] = 0;
    v9[2] = 0xE000000000000000;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DEC98);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  }
  return sub_1C303B214;
}

void sub_1C303B214(uint64_t a1, char a2)
{
  sub_1C303CE20(a1, a2, &qword_1EF7DEC98, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
}

BOOL Com_Apple_Siri_Product_Proto_ElementValue.hasOriginalValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  sub_1C2FF6CFC(v0 + *(int *)(v4 + 32), (uint64_t)v3, &qword_1EF7DEC98);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1C2FF9138((uint64_t)v3, &qword_1EF7DEC98);
  return v6;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_ElementValue.clearOriginalValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 32);
  sub_1C2FF9138(v1, &qword_1EF7DEC98);
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

void Com_Apple_Siri_Product_Proto_ElementValue.valueType.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.valueType.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 8) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_ElementValue.valueType.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 36), (uint64_t)v5, &qword_1EF7DDB38);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v8 = *(int *)(v7 + 20);
  if (qword_1EF7DDA10 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_1EF7DDA08;
  swift_retain();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDB38);
}

uint64_t sub_1C303B484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 36), (uint64_t)v6, &qword_1EF7DDB38);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v9 = *(int *)(v8 + 20);
  if (qword_1EF7DDA10 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_1EF7DDA08;
  swift_retain();
  return sub_1C2FF9138((uint64_t)v6, &qword_1EF7DDB38);
}

uint64_t sub_1C303B5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2FF6C7C(a1, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
  v8 = a2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 36);
  sub_1C2FF9138(v8, &qword_1EF7DDB38);
  sub_1C2FF6C38((uint64_t)v7, v8, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 36);
  sub_1C2FF9138(v3, &qword_1EF7DDB38);
  sub_1C2FF6C38(a1, v3, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Com_Apple_Siri_Product_Proto_ElementValue.value.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 36);
  *((_DWORD *)v3 + 12) = v10;
  sub_1C2FF6CFC(v1 + v10, (uint64_t)v5, &qword_1EF7DDB38);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    v11 = *(int *)(v6 + 20);
    if (qword_1EF7DDA10 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_1EF7DDA08;
    swift_retain();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDB38);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
  }
  return sub_1C303B834;
}

void sub_1C303B834(uint64_t a1, char a2)
{
  sub_1C303CE20(a1, a2, &qword_1EF7DDB38, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
}

BOOL Com_Apple_Siri_Product_Proto_ElementValue.hasValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  sub_1C2FF6CFC(v0 + *(int *)(v4 + 36), (uint64_t)v3, &qword_1EF7DDB38);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1C2FF9138((uint64_t)v3, &qword_1EF7DDB38);
  return v6;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_ElementValue.clearValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0) + 36);
  sub_1C2FF9138(v1, &qword_1EF7DDB38);
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303A584(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.unknownFields.setter(uint64_t a1)
{
  return sub_1C303A5DC(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue);
}

uint64_t (*Com_Apple_Siri_Product_Proto_ElementValue.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.init()@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v2 = (int *)type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v3 = a1 + v2[7];
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = a1 + v2[8];
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = a1 + v2[9];
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
}

uint64_t (*Com_Apple_Siri_Product_Proto_TerminalElement.elementValue.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_TerminalElement.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303BA80(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, a1);
}

uint64_t sub_1C303BA80@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 20);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t Com_Apple_Siri_Product_Proto_TerminalElement.unknownFields.setter(uint64_t a1)
{
  return sub_1C303BAD8(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

uint64_t sub_1C303BAD8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 20);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*Com_Apple_Siri_Product_Proto_TerminalElement.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_TerminalElement.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C3040440((void (*)(_QWORD))type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, a1);
}

uint64_t (*Com_Apple_Siri_Product_Proto_NonTerminalElement.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Element.ontologyNodeName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Com_Apple_Siri_Product_Proto_Element.ontologyNodeName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Element.ontologyNodeName.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Element.resultIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Com_Apple_Siri_Product_Proto_Element.resultIds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Element.resultIds.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Element.node.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  return sub_1C2FF6CFC(v1 + *(int *)(v3 + 24), a1, &qword_1EF7DDD48);
}

uint64_t Com_Apple_Siri_Product_Proto_Element.node.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  return sub_1C2FF6D84(a1, v1 + *(int *)(v3 + 24), &qword_1EF7DDD48);
}

uint64_t (*Com_Apple_Siri_Product_Proto_Element.node.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Element.terminalElement.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1EF7DDD48);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDD48);
LABEL_5:
    *a1 = MEMORY[0x1E0DEE9D8];
    type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
    return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    goto LABEL_5;
  }
  return sub_1C2FF6C38((uint64_t)v5, (uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

uint64_t sub_1C303BDDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_1EF7DDD48);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_1C2FF9138((uint64_t)v6, &qword_1EF7DDD48);
LABEL_5:
    *a2 = MEMORY[0x1E0DEE9D8];
    type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
    return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C2FF6CC0((uint64_t)v6, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    goto LABEL_5;
  }
  return sub_1C2FF6C38((uint64_t)v6, (uint64_t)a2, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

uint64_t Com_Apple_Siri_Product_Proto_Element.terminalElement.setter(uint64_t a1)
{
  return sub_1C303C380(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

void (*Com_Apple_Siri_Product_Proto_Element.terminalElement.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  size_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) - 8) + 64);
  v3[2] = malloc(v6);
  v7 = malloc(v6);
  v3[3] = v7;
  v8 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0) + 24);
  *((_DWORD *)v3 + 12) = v8;
  sub_1C2FF6CFC(v1 + v8, (uint64_t)v5, &qword_1EF7DDD48);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v3[4] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDD48);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1C2FF6C38((uint64_t)v5, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
      return sub_1C303C068;
    }
    sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
  }
  *v7 = MEMORY[0x1E0DEE9D8];
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C303C068;
}

void sub_1C303C068(uint64_t a1, char a2)
{
  sub_1C303C570(a1, a2, &qword_1EF7DDD48, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

uint64_t Com_Apple_Siri_Product_Proto_Element.nonTerminalElement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1EF7DDD48);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDD48);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      return sub_1C2FF6C38((uint64_t)v5, a1, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
    sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
  }
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t sub_1C303C184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_1EF7DDD48);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_1C2FF9138((uint64_t)v6, &qword_1EF7DDD48);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      return sub_1C2FF6C38((uint64_t)v6, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
    sub_1C2FF6CC0((uint64_t)v6, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
  }
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t sub_1C303C28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8 = a5(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  sub_1C2FF6C7C(a1, (uint64_t)&v14 - v9, a5);
  v11 = a2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0) + 24);
  sub_1C2FF9138(v11, &qword_1EF7DDD48);
  sub_1C2FF6C38((uint64_t)v10, v11, a5);
  v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
}

uint64_t Com_Apple_Siri_Product_Proto_Element.nonTerminalElement.setter(uint64_t a1)
{
  return sub_1C303C380(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
}

uint64_t sub_1C303C380(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0) + 24);
  sub_1C2FF9138(v5, &qword_1EF7DDD48);
  sub_1C2FF6C38(a1, v5, a2);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
}

void (*Com_Apple_Siri_Product_Proto_Element.nonTerminalElement.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement(0) - 8)
                 + 64);
  v3[2] = malloc(v6);
  v7 = malloc(v6);
  v3[3] = v7;
  v8 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0) + 24);
  *((_DWORD *)v3 + 12) = v8;
  sub_1C2FF6CFC(v1 + v8, (uint64_t)v5, &qword_1EF7DDD48);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v3[4] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDD48);
LABEL_6:
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    return sub_1C303C558;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    goto LABEL_6;
  }
  sub_1C2FF6C38((uint64_t)v5, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
  return sub_1C303C558;
}

void sub_1C303C558(uint64_t a1, char a2)
{
  sub_1C303C570(a1, a2, &qword_1EF7DDD48, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
}

void sub_1C303C570(uint64_t a1, char a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v6 = *(void **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v9 = *(int *)(*(_QWORD *)a1 + 48);
  v10 = *(void **)(*(_QWORD *)a1 + 16);
  v11 = *(void **)(*(_QWORD *)a1 + 24);
  v12 = *(void **)(*(_QWORD *)a1 + 8);
  v13 = **(_QWORD **)a1 + v9;
  if ((a2 & 1) != 0)
  {
    sub_1C2FF6C7C(*(_QWORD *)(*(_QWORD *)a1 + 24), (uint64_t)v10, a4);
    sub_1C2FF9138(v13, a3);
    sub_1C2FF6C38((uint64_t)v10, v13, a4);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    sub_1C2FF6CC0((uint64_t)v11, a4);
  }
  else
  {
    sub_1C2FF9138(**(_QWORD **)a1 + v9, a3);
    sub_1C2FF6C38((uint64_t)v11, v13, a4);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  free(v11);
  free(v10);
  free(v12);
  free(v6);
}

uint64_t Com_Apple_Siri_Product_Proto_Element.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0) + 28);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_Element.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0) + 28);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Com_Apple_Siri_Product_Proto_Element.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  return nullsub_1;
}

uint64_t static Com_Apple_Siri_Product_Proto_TerminalElement.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_1C3049868(a1, a2, sub_1C3005378, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement) & 1;
}

uint64_t static Com_Apple_Siri_Product_Proto_NonTerminalElement.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v4 = sub_1C3378914();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)&v15 - v10, a1, v4);
  v12(v9, a2, v4);
  sub_1C2FF6DE0(&qword_1EF819450, v5, MEMORY[0x1E0DA3720]);
  LOBYTE(a2) = sub_1C3378BD8();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v4);
  v13(v11, v4);
  return a2 & 1;
}

uint64_t Com_Apple_Siri_Product_Proto_Element.init()@<X0>(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t v2;

  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = MEMORY[0x1E0DEE9D8];
  v1 = (char *)a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0) + 24);
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t Com_Apple_Siri_Product_Proto_IntentNode.element.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1EF7DDE18);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, (uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = MEMORY[0x1E0DEE9D8];
  v8 = (char *)a1 + *(int *)(v7 + 24);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDE18);
}

uint64_t sub_1C303CA24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_1EF7DDE18);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, (uint64_t)a2, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = MEMORY[0x1E0DEE9D8];
  v9 = (char *)a2 + *(int *)(v8 + 24);
  v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1EF7DDE18);
}

uint64_t sub_1C303CB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD), uint64_t *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v12 = a5(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v18 - v14;
  sub_1C2FF6C7C(a1, (uint64_t)&v18 - v14, a5);
  v16 = a2 + *(int *)(a6(0) + 24);
  sub_1C2FF9138(v16, a7);
  sub_1C2FF6C38((uint64_t)v15, v16, a5);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
}

uint64_t Com_Apple_Siri_Product_Proto_IntentNode.element.setter(uint64_t a1)
{
  return sub_1C303CC34(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, &qword_1EF7DDE18, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
}

uint64_t sub_1C303CC34(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = v4 + *(int *)(a2(0) + 24);
  sub_1C2FF9138(v8, a3);
  sub_1C2FF6C38(a1, v8, a4);
  v9 = a4(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
}

void (*Com_Apple_Siri_Product_Proto_IntentNode.element.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode(0) + 24);
  *((_DWORD *)v3 + 12) = v10;
  sub_1C2FF6CFC(v1 + v10, (uint64_t)v5, &qword_1EF7DDE18);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = MEMORY[0x1E0DEE9D8];
    v11 = (char *)v9 + *(int *)(v6 + 24);
    v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDE18);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
  }
  return sub_1C303CE0C;
}

void sub_1C303CE0C(uint64_t a1, char a2)
{
  sub_1C303CE20(a1, a2, &qword_1EF7DDE18, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
}

void sub_1C303CE20(uint64_t a1, char a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v6 = *(void **)a1;
  v7 = *(int *)(*(_QWORD *)a1 + 48);
  v8 = *(void **)(*(_QWORD *)a1 + 32);
  v9 = *(void **)(*(_QWORD *)a1 + 40);
  v10 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v11 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v12 = *(void **)(*(_QWORD *)a1 + 8);
  v13 = **(_QWORD **)a1 + v7;
  if ((a2 & 1) != 0)
  {
    sub_1C2FF6C7C(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v8, a4);
    sub_1C2FF9138(v13, a3);
    sub_1C2FF6C38((uint64_t)v8, v13, a4);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
    sub_1C2FF6CC0((uint64_t)v9, a4);
  }
  else
  {
    sub_1C2FF9138(**(_QWORD **)a1 + v7, a3);
    sub_1C2FF6C38((uint64_t)v9, v13, a4);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  }
  free(v9);
  free(v8);
  free(v12);
  free(v6);
}

BOOL Com_Apple_Siri_Product_Proto_IntentNode.hasElement.getter()
{
  return sub_1C303CF3C(&qword_1EF7DDE18, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
}

BOOL sub_1C303CF3C(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2(0);
  sub_1C2FF6CFC(v3 + *(int *)(v10 + 24), (uint64_t)v9, a1);
  v11 = a3(0);
  v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_1C2FF9138((uint64_t)v9, a1);
  return v12;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_IntentNode.clearElement()()
{
  sub_1C303D014(type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, &qword_1EF7DDE18, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
}

uint64_t sub_1C303D014(uint64_t (*a1)(_QWORD), uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 24);
  sub_1C2FF9138(v6, a2);
  v7 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

uint64_t Com_Apple_Siri_Product_Proto_IntentNode.parentIndex.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t Com_Apple_Siri_Product_Proto_IntentNode.parentIndex.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_IntentNode.parentIndex.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_IntentNode.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303BA80(type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_IntentNode.unknownFields.setter(uint64_t a1)
{
  return sub_1C303BAD8(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode);
}

uint64_t (*Com_Apple_Siri_Product_Proto_IntentNode.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_IntentNode.init()@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;

  *a1 = 0;
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode(0);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v3 = (char *)a1 + *(int *)(v2 + 24);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
}

double Com_Apple_Siri_Product_Proto_ProtoIntent.score.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  swift_beginAccess();
  return *(double *)(v1 + 16);
}

uint64_t sub_1C303D184(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_1C304609C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 16) = v3;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.score.setter(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_1C304609C(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(double *)(v5 + 16) = a1;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.score.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v5 + 16);
  return sub_1C303D348;
}

void sub_1C303D348(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 88);
    v7 = *(_QWORD *)(v3 + 80);
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_1C304609C(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 80) + *(int *)(v3 + 88)) + 16);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.originalInput.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C303D478@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  *a2 = *(_QWORD *)(v3 + 24);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C303D4D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_1C304609C(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 24) = v4;
  *(_QWORD *)(v7 + 32) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.originalInput.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_1C304609C(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a2;
  return swift_bridgeObjectRelease();
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.originalInput.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 32);
  v3[9] = *(_QWORD *)(v5 + 24);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C303D6B8;
}

void sub_1C303D6B8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_1C304609C(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 24) = v3;
    *(_QWORD *)(v8 + 32) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_1C304609C(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 24) = v3;
    *(_QWORD *)(v12 + 32) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.allWordsMatched.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 40);
}

uint64_t sub_1C303D85C(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_1C304609C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 40) = v3;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.allWordsMatched.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_1C304609C(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 40) = a1 & 1;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.allWordsMatched.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *(_BYTE *)(v5 + 40);
  return sub_1C303DA24;
}

void sub_1C303DA24(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_1C304609C(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 40);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.primary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 41);
}

uint64_t sub_1C303DB40(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_1C304609C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 41) = v3;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.primary.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_1C304609C(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 41) = a1 & 1;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.primary.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *(_BYTE *)(v5 + 41);
  return sub_1C303DD08;
}

void sub_1C303DD08(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_1C304609C(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 41);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.usingExplicitInput.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 42);
}

uint64_t sub_1C303DE24(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_1C304609C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 42) = v3;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.usingExplicitInput.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_1C304609C(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 42) = a1 & 1;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.usingExplicitInput.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *(_BYTE *)(v5 + 42);
  return sub_1C303DFEC;
}

void sub_1C303DFEC(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_1C304609C(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 42);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.intentRank.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 44);
}

uint64_t sub_1C303E108(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_1C304609C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v6 + 44) = v3;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.intentRank.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_1C304609C(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_DWORD *)(v5 + 44) = a1;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.intentRank.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 44);
  return sub_1C303E2CC;
}

void sub_1C303E2CC(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_1C304609C(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84)) + 44);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.nerbasedParse.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 48);
}

uint64_t sub_1C303E3EC(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_1C304609C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 48) = v3;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.nerbasedParse.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_1C304609C(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 48) = a1 & 1;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.nerbasedParse.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *(_BYTE *)(v5 + 48);
  return sub_1C303E5B4;
}

void sub_1C303E5B4(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_1C304609C(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 48);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.intentID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 52);
}

uint64_t sub_1C303E6D0(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_1C304609C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v6 + 52) = v3;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.intentID.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_1C304609C(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_DWORD *)(v5 + 52) = a1;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.intentID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 52);
  return sub_1C303E894;
}

void sub_1C303E894(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_1C304609C(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84)) + 52);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.nlState.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDED0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
  swift_beginAccess();
  sub_1C2FF6CFC(v6, (uint64_t)v5, &qword_1EF7DDED0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_NLState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, (uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  v8 = MEMORY[0x1E0DEE9D8];
  a1[2] = sub_1C302C434(MEMORY[0x1E0DEE9D8]);
  a1[3] = sub_1C302C450(v8);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDED0);
}

uint64_t sub_1C303EA9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_NLState(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2FF6C7C(a1, (uint64_t)v4, v5);
  return Com_Apple_Siri_Product_Proto_ProtoIntent.nlState.setter((uint64_t)v4);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.nlState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDED0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_1C304609C(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_1C2FF6C38(a1, (uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
  v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_NLState(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_1C2FF6D40((uint64_t)v8, (uint64_t)v6, &qword_1EF7DDED0);
  v13 = v11
      + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
  swift_beginAccess();
  swift_retain();
  sub_1C2FF6D84((uint64_t)v6, v13, &qword_1EF7DDED0);
  swift_endAccess();
  return swift_release();
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.nlState.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDED0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_NLState(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1EF7DDED0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v11 = MEMORY[0x1E0DEE9D8];
    v9[2] = sub_1C302C434(MEMORY[0x1E0DEE9D8]);
    v9[3] = sub_1C302C450(v11);
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDED0);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
  }
  return sub_1C303EDFC;
}

void sub_1C303EDFC(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 40);
  v4 = *(void **)(*(_QWORD *)a1 + 48);
  v5 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    sub_1C2FF6C7C(*(_QWORD *)(*(_QWORD *)a1 + 48), (uint64_t)v3, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
    Com_Apple_Siri_Product_Proto_ProtoIntent.nlState.setter((uint64_t)v3);
    sub_1C2FF6CC0((uint64_t)v4, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
  }
  else
  {
    Com_Apple_Siri_Product_Proto_ProtoIntent.nlState.setter(*(_QWORD *)(*(_QWORD *)a1 + 48));
  }
  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

BOOL Com_Apple_Siri_Product_Proto_ProtoIntent.hasNlState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDED0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
  swift_beginAccess();
  sub_1C2FF6CFC(v4, (uint64_t)v3, &qword_1EF7DDED0);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_NLState(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1C2FF9138((uint64_t)v3, &qword_1EF7DDED0);
  return v6;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_ProtoIntent.clearNlState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDED0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_1C304609C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_NLState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
  swift_beginAccess();
  swift_retain();
  sub_1C2FF6D84((uint64_t)v3, v8, &qword_1EF7DDED0);
  swift_endAccess();
  swift_release();
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.mitigatorClassification.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification;
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_1C303F0FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification;
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1C303F164(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_1C304609C(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5)
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification;
  result = swift_beginAccess();
  *(_QWORD *)v7 = v3;
  *(_BYTE *)(v7 + 8) = v4;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.mitigatorClassification.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v1 + v4) = sub_1C304609C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification;
  result = swift_beginAccess();
  *(_QWORD *)v6 = v2;
  *(_BYTE *)(v6 + 8) = v3;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.mitigatorClassification.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification;
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 8);
  v3[9] = *(_QWORD *)v5;
  *((_BYTE *)v3 + 80) = v6;
  return sub_1C303F364;
}

void sub_1C303F364(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(v8 + v7) = sub_1C304609C(v9);
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84))
      + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification;
  swift_beginAccess();
  *(_QWORD *)v10 = v4;
  *(_BYTE *)(v10 + 8) = v5;
  free((void *)v3);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.strippedVoiceTrigger.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*(_QWORD *)(v0
                             + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20))
                 + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C303F4B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*(_QWORD *)(a1
                            + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20))
                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C303F514(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_1C304609C(v6);
    swift_release();
  }
  v7 = (_QWORD *)(*(_QWORD *)(a2 + v5)
                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
  swift_beginAccess();
  *v7 = v4;
  v7[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.strippedVoiceTrigger.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_1C304609C(v6);
    swift_release();
  }
  v7 = (_QWORD *)(*(_QWORD *)(v2 + v5)
                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
  swift_beginAccess();
  *v7 = a1;
  v7[1] = a2;
  return swift_bridgeObjectRelease();
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.strippedVoiceTrigger.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C303F720;
}

void sub_1C303F720(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_1C304609C(v7);
      swift_release();
    }
    v8 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96))
                  + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
    swift_beginAccess();
    *v8 = v3;
    v8[1] = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_1C304609C(v11);
      swift_release();
    }
    v12 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96))
                   + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
    swift_beginAccess();
    *v12 = v3;
    v12[1] = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.invalidVoiceTrigger.getter()
{
  return sub_1C303F944(&OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.invalidVoiceTrigger.setter(char a1)
{
  return sub_1C303FA58(a1, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger);
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.invalidVoiceTrigger.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_1C303F92C;
}

void sub_1C303F92C(uint64_t *a1, char a2)
{
  sub_1C303FB9C(a1, a2, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.suggested.getter()
{
  return sub_1C303F944(&OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested);
}

uint64_t sub_1C303F944(_QWORD *a1)
{
  uint64_t v1;
  unsigned __int8 *v2;

  v2 = (unsigned __int8 *)(*(_QWORD *)(v1
                                     + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0)
                                              + 20))
                         + *a1);
  swift_beginAccess();
  return *v2;
}

uint64_t sub_1C303F998(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;

  v7 = *a1;
  v8 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(a2 + v8) = sub_1C304609C(v9);
    swift_release();
  }
  v10 = (_BYTE *)(*(_QWORD *)(a2 + v8) + *a5);
  result = swift_beginAccess();
  *v10 = v7;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.suggested.setter(char a1)
{
  return sub_1C303FA58(a1, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested);
}

uint64_t sub_1C303FA58(char a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;

  v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_1C304609C(v6);
    swift_release();
  }
  v7 = (_BYTE *)(*(_QWORD *)(v2 + v5) + *a2);
  result = swift_beginAccess();
  *v7 = a1 & 1;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.suggested.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_1C303FB90;
}

void sub_1C303FB90(uint64_t *a1, char a2)
{
  sub_1C303FB9C(a1, a2, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested);
}

void sub_1C303FB9C(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;

  v5 = *a1;
  v6 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v8 = *(int *)(v5 + 80);
    v9 = *(_QWORD *)(v5 + 72);
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v9 + v8) = sub_1C304609C(v10);
    swift_release();
  }
LABEL_4:
  v11 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v5 + 72) + *(int *)(v5 + 80)) + *a3);
  swift_beginAccess();
  *v11 = v6;
  free((void *)v5);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.metaDomainAction.getter()
{
  return sub_1C303FD30();
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.metaDomainAction.setter(uint64_t a1)
{
  return sub_1C303FEC4(a1, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__metaDomainAction);
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.metaDomainAction.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__metaDomainAction);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_1C303FD18;
}

void sub_1C303FD18(uint64_t *a1, char a2)
{
  sub_1C3040014(a1, a2, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__metaDomainAction);
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.intentTree.getter()
{
  return sub_1C303FD30();
}

uint64_t sub_1C303FD30()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0);
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C303FD88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;

  v4 = (_QWORD *)(*(_QWORD *)(a1
                            + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20))
                + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C303FDF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v7 = *a1;
  v8 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(a2 + v8) = sub_1C304609C(v9);
    swift_release();
  }
  v10 = (_QWORD *)(*(_QWORD *)(a2 + v8) + *a5);
  swift_beginAccess();
  *v10 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.intentTree.setter(uint64_t a1)
{
  return sub_1C303FEC4(a1, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__intentTree);
}

uint64_t sub_1C303FEC4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_1C304609C(v6);
    swift_release();
  }
  v7 = (_QWORD *)(*(_QWORD *)(v2 + v5) + *a2);
  swift_beginAccess();
  *v7 = a1;
  return swift_bridgeObjectRelease();
}

void (*Com_Apple_Siri_Product_Proto_ProtoIntent.intentTree.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__intentTree);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_1C3040008;
}

void sub_1C3040008(uint64_t *a1, char a2)
{
  sub_1C3040014(a1, a2, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__intentTree);
}

void sub_1C3040014(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v6 = *(int *)(v4 + 88);
      v7 = *(_QWORD *)(v4 + 80);
      type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
      swift_allocObject();
      v8 = swift_retain();
      *(_QWORD *)(v7 + v6) = sub_1C304609C(v8);
      swift_release();
    }
    v9 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 80) + *(int *)(v4 + 88)) + *a3);
    swift_beginAccess();
    *v9 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(int *)(v4 + 88);
      v11 = *(_QWORD *)(v4 + 80);
      type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
      swift_allocObject();
      v12 = swift_retain();
      *(_QWORD *)(v11 + v10) = sub_1C304609C(v12);
      swift_release();
    }
    v13 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 80) + *(int *)(v4 + 88)) + *a3);
    swift_beginAccess();
    *v13 = v5;
  }
  swift_bridgeObjectRelease();
  free((void *)v4);
}

uint64_t (*Com_Apple_Siri_Product_Proto_ProtoIntent.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v2 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if (qword_1EF7DEDB0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v2) = qword_1EF7DEDA0;
  return swift_retain();
}

uint64_t (*Com_Apple_Siri_Product_Proto_IntentHierarchy.intents.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_IntentHierarchy.languageContainerTopLevelIntents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Com_Apple_Siri_Product_Proto_IntentHierarchy.languageContainerTopLevelIntents.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_IntentHierarchy.languageContainerTopLevelIntents.modify())()
{
  return nullsub_1;
}

uint64_t (*Com_Apple_Siri_Product_Proto_IntentHierarchy.previousIntentsIndices.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_IntentHierarchy.alternativeIntentsIndices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Com_Apple_Siri_Product_Proto_IntentHierarchy.alternativeIntentsIndices.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_IntentHierarchy.alternativeIntentsIndices.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_IntentHierarchy.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy(0) + 32);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_IntentHierarchy.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy(0) + 32);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Com_Apple_Siri_Product_Proto_IntentHierarchy.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_IntentHierarchy.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9D8];
  *a1 = MEMORY[0x1E0DEE9D8];
  a1[1] = sub_1C302FFF4(v2);
  a1[2] = sub_1C3030160(v2);
  a1[3] = sub_1C302FFF4(v2);
  type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy(0);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t Com_Apple_Siri_Product_Proto_IntegerList.integerValue.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Com_Apple_Siri_Product_Proto_IntegerList.integerValue.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_IntegerList.integerValue.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_IntegerList.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303BA80(type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_IntegerList.unknownFields.setter(uint64_t a1)
{
  return sub_1C303BAD8(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList);
}

uint64_t (*Com_Apple_Siri_Product_Proto_IntegerList.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_IntegerList.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C3040440((void (*)(_QWORD))type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, a1);
}

uint64_t sub_1C3040440@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  *a2 = MEMORY[0x1E0DEE9D8];
  a1(0);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t sub_1C3040480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v27;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF819DF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF819DF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C338BE50;
  v5 = v27 + v4;
  v6 = v27 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v27 + v4) = 0;
  *(_QWORD *)v6 = "NULL_VALUE_TYPE";
  *(_QWORD *)(v6 + 8) = 15;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0DA38C8];
  v8 = sub_1C3378B78();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "DOUBLE";
  *(_QWORD *)(v10 + 8) = 6;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 2;
  *(_QWORD *)v12 = "FLOAT";
  *((_QWORD *)v12 + 1) = 5;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "INT";
  *((_QWORD *)v14 + 1) = 3;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "LONG";
  *((_QWORD *)v16 + 1) = 4;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "STRING";
  *((_QWORD *)v18 + 1) = 6;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "DATE_TIME";
  *((_QWORD *)v20 + 1) = 9;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "SCALAR";
  *((_QWORD *)v22 + 1) = 6;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 8;
  *(_QWORD *)v23 = "SEMANTIC_TAG";
  *(_QWORD *)(v23 + 8) = 12;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v5 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "SEMANTIC_VALUE";
  *((_QWORD *)v25 + 1) = 14;
  v25[16] = 2;
  v9();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_ValueType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A600, (uint64_t)qword_1EF819DF0, a1);
}

uint64_t sub_1C3040790@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A600, (uint64_t)qword_1EF819DF0, a1);
}

uint64_t sub_1C30407AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v27;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF819E08);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF819E08);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C338BE50;
  v5 = v27 + v4;
  v6 = v27 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v27 + v4) = 0;
  *(_QWORD *)v6 = "NULL_ORIGIN_TYPE";
  *(_QWORD *)(v6 + 8) = 16;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0DA38C8];
  v8 = sub_1C3378B78();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v27 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "USER_CONTEXT";
  *(_QWORD *)(v10 + 8) = 12;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v27 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 2;
  *(_QWORD *)v12 = "USER_CURRENT";
  *((_QWORD *)v12 + 1) = 12;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v27 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "USER_INFERRED";
  *((_QWORD *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v27 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "AGENT_DEFAULT";
  *((_QWORD *)v16 + 1) = 13;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v27 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "AGENT_DEVICE";
  *((_QWORD *)v18 + 1) = 12;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v27 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "AGENT_DROPPED";
  *((_QWORD *)v20 + 1) = 13;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v27 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "AGENT_INFERRED";
  *((_QWORD *)v22 + 1) = 14;
  v22[16] = 2;
  v9();
  v23 = v27 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 8;
  *(_QWORD *)v23 = "AGENT_DERIVED";
  *(_QWORD *)(v23 + 8) = 13;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v27 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "AGENT_RELAXED";
  *((_QWORD *)v25 + 1) = 13;
  v25[16] = 2;
  v9();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_OriginType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A608, (uint64_t)qword_1EF819E08, a1);
}

uint64_t sub_1C3040AC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A608, (uint64_t)qword_1EF819E08, a1);
}

uint64_t sub_1C3040ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF819E20);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF819E20);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C338BE60;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "MITIGATOR_NOT_SET";
  *(_QWORD *)(v7 + 8) = 17;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "OK";
  *(_QWORD *)(v11 + 8) = 2;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "SORRY";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "SILENT";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_MitigatorClassification._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A610, (uint64_t)qword_1EF819E20, a1);
}

uint64_t sub_1C3040CB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A610, (uint64_t)qword_1EF819E20, a1);
}

uint64_t sub_1C3040CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF819E38);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF819E38);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C338BE70;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "META_DOMAIN_ACTION_NOT_SET";
  *(_QWORD *)(v7 + 8) = 26;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "READ";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "DATA_RESOLUTION_COMPLETED";
  *(_QWORD *)(v12 + 8) = 25;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_MetaDomainAction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A618, (uint64_t)qword_1EF819E38, a1);
}

uint64_t sub_1C3040E78@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A618, (uint64_t)qword_1EF819E38, a1);
}

unint64_t static Com_Apple_Siri_Product_Proto_AdjustmentReason.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_1C3040EB0(uint64_t a1)
{
  return sub_1C3041224(a1, qword_1EF819E50, (uint64_t)"explanation", 11, (uint64_t)"sourceClass");
}

uint64_t static Com_Apple_Siri_Product_Proto_AdjustmentReason._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A620, (uint64_t)qword_1EF819E50, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_AdjustmentReason.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1C3378980();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
        sub_1C3378A34();
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_AdjustmentReason.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_1C3378B3C(), !v1))
  {
    v5 = v0[3];
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_1C3378B3C(), !v1))
    {
      type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      return sub_1C33788FC();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_AdjustmentReason.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, &qword_1EF819F70, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
}

uint64_t sub_1C3041074@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C304109C()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_1C30410C0()
{
  return Com_Apple_Siri_Product_Proto_AdjustmentReason.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C30410D4()
{
  return Com_Apple_Siri_Product_Proto_AdjustmentReason.traverse<A>(visitor:)();
}

uint64_t sub_1C30410E8()
{
  sub_1C2FF6DE0(&qword_1EF81A290, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
  return sub_1C3378950();
}

uint64_t sub_1C3041138@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A620, (uint64_t)qword_1EF819E50, a1);
}

uint64_t sub_1C3041154()
{
  sub_1C2FF6DE0(&qword_1EF7DEB10, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
  return sub_1C3378AA0();
}

uint64_t sub_1C3041194()
{
  sub_1C2FF6DE0(&qword_1EF7DEB10, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_DerivedOrigin.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_1C3041204(uint64_t a1)
{
  return sub_1C3041224(a1, qword_1EF819E68, (uint64_t)"adjustmentReason", 16, (uint64_t)"derivedFrom");
}

uint64_t sub_1C3041224(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  char *v19;

  v8 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v8, a2);
  __swift_project_value_buffer(v8, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C3388730;
  v14 = (_QWORD *)(v13 + v12);
  v15 = v13 + v12 + *(int *)(v9 + 48);
  *v14 = 1;
  *(_QWORD *)v15 = a3;
  *(_QWORD *)(v15 + 8) = a4;
  *(_BYTE *)(v15 + 16) = 2;
  v16 = *MEMORY[0x1E0DA38C8];
  v17 = sub_1C3378B78();
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v18)(v15, v16, v17);
  v19 = (char *)v14 + v11 + *(int *)(v9 + 48);
  *(_QWORD *)((char *)v14 + v11) = 2;
  *(_QWORD *)v19 = a5;
  *((_QWORD *)v19 + 1) = 11;
  v19[16] = 2;
  v18();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_DerivedOrigin._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A628, (uint64_t)qword_1EF819E68, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_DerivedOrigin.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_1C3378980();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
        sub_1C2FF6DE0(&qword_1EF7DEA68, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
        sub_1C3378A64();
      }
      else if (result == 1)
      {
        sub_1C3045708(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, &qword_1EF7DEB10, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_DerivedOrigin.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[2];
  uint64_t v15;

  v3 = v1;
  v14[1] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  v11 = *(int *)(v14[0] + 24);
  v15 = v3;
  sub_1C2FF6CFC(v3 + v11, (uint64_t)v6, &qword_1EF7DEB60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C2FF9138((uint64_t)v6, &qword_1EF7DEB60);
    v12 = v15;
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v6, (uint64_t)v10, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
    sub_1C2FF6DE0(&qword_1EF7DEB10, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
    sub_1C3378B6C();
    result = sub_1C2FF6CC0((uint64_t)v10, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
    v12 = v15;
    if (v2)
      return result;
  }
  if (!*(_QWORD *)(*(_QWORD *)v12 + 16))
    return sub_1C33788FC();
  type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
  sub_1C2FF6DE0(&qword_1EF7DEA68, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
  result = sub_1C3378B60();
  if (!v2)
    return sub_1C33788FC();
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_DerivedOrigin.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, &qword_1EF819F78, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
}

uint64_t sub_1C30416F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = MEMORY[0x1E0DEE9D8];
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_1C3041758()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_1C304177C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_DerivedOrigin.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C3041790(uint64_t a1)
{
  return Com_Apple_Siri_Product_Proto_DerivedOrigin.traverse<A>(visitor:)(a1);
}

uint64_t sub_1C30417A4()
{
  sub_1C2FF6DE0(&qword_1EF81A288, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
  return sub_1C3378950();
}

uint64_t sub_1C30417F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A628, (uint64_t)qword_1EF819E68, a1);
}

uint64_t sub_1C3041810()
{
  sub_1C2FF6DE0(&qword_1EF7DE798, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
  return sub_1C3378AA0();
}

uint64_t sub_1C3041850()
{
  sub_1C2FF6DE0(&qword_1EF7DE798, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_Origin.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_1C30418C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF819E80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF819E80);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C338BE60;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "originType";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "reason";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "matchingSpan";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "derivedOrigin";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_Origin._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A630, (uint64_t)qword_1EF819E80, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_1C3378980();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1C304B844();
          v12 = v11;
          sub_1C33789B0();
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_1C3041BBC(v5);
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_1C3041D40(v5, a1, a2, a3);
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_1C304213C(v5, a1, a2, a3);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t sub_1C3041BBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0) + 20));
  sub_1C2FF6CFC((uint64_t)v6, (uint64_t)v5, &qword_1EF7DDBD8);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v14 = *(_QWORD *)(v7 - 8);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v5, 1, v7);
  sub_1C2FF9138((uint64_t)v5, &qword_1EF7DDBD8);
  if (v8 == 1 || (result = sub_1C337898C(), !v1))
  {
    v12 = 0;
    v13 = 0;
    result = sub_1C3378A28();
    v10 = v13;
    if (v1)
    {
      return swift_bridgeObjectRelease();
    }
    else if (v13)
    {
      v11 = v12;
      sub_1C2FF9138((uint64_t)v6, &qword_1EF7DDBD8);
      *v6 = v11;
      v6[1] = v10;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v7);
    }
  }
  return result;
}

uint64_t sub_1C3041D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v48 = a4;
  v51 = a3;
  v47 = a2;
  v50 = a1;
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v43 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v39 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DE730);
  v21 = MEMORY[0x1E0C80A78](v20);
  v44 = (uint64_t)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v39 - v23;
  v45 = v5;
  v46 = v4;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v25((char *)&v39 - v23, 1, 1, v4);
  v26 = v50 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0) + 20);
  sub_1C2FF6CFC(v26, (uint64_t)v12, &qword_1EF7DDBD8);
  v42 = v14;
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v50 = v13;
  v28 = v27(v12, 1, v13);
  v41 = v26;
  if (v28 == 1)
  {
    sub_1C2FF9138((uint64_t)v12, &qword_1EF7DDBD8);
    v29 = v46;
    v30 = v49;
  }
  else
  {
    v40 = v25;
    sub_1C2FF6C38((uint64_t)v12, (uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    v33 = v49;
    sub_1C337898C();
    v30 = v33;
    if (v33)
    {
      sub_1C2FF6CC0((uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
      goto LABEL_8;
    }
    sub_1C2FF6C38((uint64_t)v19, (uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v29 = v46;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C2FF9138((uint64_t)v24, &qword_1EF7DE730);
      sub_1C2FF6C38((uint64_t)v17, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
      sub_1C2FF6C38((uint64_t)v9, (uint64_t)v24, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
      v40(v24, 0, 1, v29);
    }
    else
    {
      sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    }
  }
  sub_1C2FF6DE0(&qword_1EF7DE6E8, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_MatchingSpan);
  sub_1C3378A70();
  if (v30)
  {
LABEL_8:
    v32 = (uint64_t)v24;
    return sub_1C2FF9138(v32, &qword_1EF7DE730);
  }
  v31 = v44;
  sub_1C2FF6D40((uint64_t)v24, v44, &qword_1EF7DE730);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v31, 1, v29) != 1)
  {
    v36 = v43;
    sub_1C2FF6C38(v31, v43, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
    v37 = v41;
    sub_1C2FF9138(v41, &qword_1EF7DDBD8);
    sub_1C2FF6C38(v36, v37, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
    v38 = v50;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v37, 0, 1, v38);
  }
  v32 = v31;
  return sub_1C2FF9138(v32, &qword_1EF7DE730);
}

uint64_t sub_1C304213C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v48 = a4;
  v51 = a3;
  v47 = a2;
  v50 = a1;
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v43 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v39 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DE7E8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v44 = (uint64_t)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v39 - v23;
  v45 = v5;
  v46 = v4;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v25((char *)&v39 - v23, 1, 1, v4);
  v26 = v50 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0) + 20);
  sub_1C2FF6CFC(v26, (uint64_t)v12, &qword_1EF7DDBD8);
  v42 = v14;
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v50 = v13;
  v28 = v27(v12, 1, v13);
  v41 = v26;
  if (v28 == 1)
  {
    sub_1C2FF9138((uint64_t)v12, &qword_1EF7DDBD8);
    v29 = v46;
    v30 = v49;
  }
  else
  {
    v40 = v25;
    sub_1C2FF6C38((uint64_t)v12, (uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    v33 = v49;
    sub_1C337898C();
    v30 = v33;
    if (v33)
    {
      sub_1C2FF6CC0((uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
      goto LABEL_8;
    }
    sub_1C2FF6C38((uint64_t)v19, (uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v29 = v46;
    if (EnumCaseMultiPayload == 2)
    {
      sub_1C2FF9138((uint64_t)v24, &qword_1EF7DE7E8);
      sub_1C2FF6C38((uint64_t)v17, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
      sub_1C2FF6C38((uint64_t)v9, (uint64_t)v24, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
      v40(v24, 0, 1, v29);
    }
    else
    {
      sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    }
  }
  sub_1C2FF6DE0(&qword_1EF7DE798, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
  sub_1C3378A70();
  if (v30)
  {
LABEL_8:
    v32 = (uint64_t)v24;
    return sub_1C2FF9138(v32, &qword_1EF7DE7E8);
  }
  v31 = v44;
  sub_1C2FF6D40((uint64_t)v24, v44, &qword_1EF7DE7E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v31, 1, v29) != 1)
  {
    v36 = v43;
    sub_1C2FF6C38(v31, v43, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
    v37 = v41;
    sub_1C2FF9138(v41, &qword_1EF7DDBD8);
    sub_1C2FF6C38(v36, v37, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
    v38 = v50;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v37, 0, 1, v38);
  }
  v32 = v31;
  return sub_1C2FF9138(v32, &qword_1EF7DE7E8);
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)v0
    || (v5 = *(_BYTE *)(v0 + 8), v10 = *(_QWORD *)v0, v11 = v5, sub_1C304B844(), result = sub_1C3378AF4(), !v1))
  {
    v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
    sub_1C2FF6CFC(v0 + *(int *)(v7 + 20), (uint64_t)v4, &qword_1EF7DDBD8);
    v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
      return sub_1C33788FC();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
      result = sub_1C3042710(v0);
      if (v1)
        return result;
      return sub_1C33788FC();
    }
    if (EnumCaseMultiPayload == 1)
      sub_1C3042840(v0);
    else
      sub_1C30429EC(v0);
    result = sub_1C2FF6CC0((uint64_t)v4, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    if (!v1)
      return sub_1C33788FC();
  }
  return result;
}

uint64_t sub_1C3042710(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  sub_1C2FF6CFC(a1 + *(int *)(v5 + 20), (uint64_t)v4, &qword_1EF7DDBD8);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) == 1)
  {
    sub_1C2FF9138((uint64_t)v4, &qword_1EF7DDBD8);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_1C3378B3C();
    return swift_bridgeObjectRelease();
  }
  result = sub_1C2FF6CC0((uint64_t)v4, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  __break(1u);
  return result;
}

uint64_t sub_1C3042840(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  sub_1C2FF6CFC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_1EF7DDBD8);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1C2FF9138((uint64_t)v4, &qword_1EF7DDBD8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C2FF6C38((uint64_t)v4, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
    sub_1C2FF6DE0(&qword_1EF7DE6E8, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_MatchingSpan);
    sub_1C3378B6C();
    return sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
  }
  result = sub_1C2FF6CC0((uint64_t)v4, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  __break(1u);
  return result;
}

uint64_t sub_1C30429EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  sub_1C2FF6CFC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_1EF7DDBD8);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1C2FF9138((uint64_t)v4, &qword_1EF7DDBD8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1C2FF6C38((uint64_t)v4, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
    sub_1C2FF6DE0(&qword_1EF7DE798, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
    sub_1C3378B6C();
    return sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
  }
  result = sub_1C2FF6CC0((uint64_t)v4, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  __break(1u);
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Origin.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_Origin, &qword_1EF819F80, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Origin);
}

uint64_t sub_1C3042BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  v2 = a2 + *(int *)(a1 + 20);
  v3 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C3042C24()
{
  return 0xD000000000000023;
}

uint64_t sub_1C3042C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_Origin.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C3042C54()
{
  return Com_Apple_Siri_Product_Proto_Origin.traverse<A>(visitor:)();
}

uint64_t sub_1C3042C68()
{
  sub_1C2FF6DE0(&qword_1EF81A280, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Origin);
  return sub_1C3378950();
}

uint64_t sub_1C3042CB8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A630, (uint64_t)qword_1EF819E80, a1);
}

uint64_t sub_1C3042CD4()
{
  sub_1C2FF6DE0(&qword_1EF7DDC58, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Origin);
  return sub_1C3378AA0();
}

uint64_t sub_1C3042D14()
{
  sub_1C2FF6DE0(&qword_1EF7DDC58, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Origin);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_OriginalElementValue.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_1C3042D84(uint64_t a1)
{
  return sub_1C2FF1DD4(a1, qword_1EF819E98, (uint64_t)"isFresh", (uint64_t)"input", 5);
}

uint64_t static Com_Apple_Siri_Product_Proto_OriginalElementValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A638, (uint64_t)qword_1EF819E98, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_OriginalElementValue.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1C3378980();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1C3378A34();
      }
      else if (result == 1)
      {
        sub_1C33789A4();
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_OriginalElementValue.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  if (*(_BYTE *)v0 != 1 || (result = sub_1C3378AE8(), !v1))
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v4 = *(_QWORD *)(v0 + 8) & 0xFFFFFFFFFFFFLL;
    if (!v4 || (result = sub_1C3378B3C(), !v1))
    {
      type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
      return sub_1C33788FC();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_OriginalElementValue.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue, &qword_1EF819F88, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
}

uint64_t sub_1C3042F50@<X0>(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C3042F78()
{
  return 0xD000000000000031;
}

uint64_t sub_1C3042F94()
{
  return Com_Apple_Siri_Product_Proto_OriginalElementValue.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3042FA8()
{
  return Com_Apple_Siri_Product_Proto_OriginalElementValue.traverse<A>(visitor:)();
}

uint64_t sub_1C3042FBC()
{
  sub_1C2FF6DE0(&qword_1EF81A278, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  return sub_1C3378950();
}

uint64_t sub_1C304300C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A638, (uint64_t)qword_1EF819E98, a1);
}

uint64_t sub_1C3043028()
{
  sub_1C2FF6DE0(&qword_1EF7DEC48, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  return sub_1C3378AA0();
}

uint64_t sub_1C3043068()
{
  sub_1C2FF6DE0(&qword_1EF7DEC48, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_ElementValue.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_1C30430D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF819EB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF819EB0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C338BE80;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "semanticTags";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "origin";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "originalValue";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "valueType";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "value";
  *(_QWORD *)(v16 + 8) = 5;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_ElementValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A640, (uint64_t)qword_1EF819EB0, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1C3378980();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v4 = v3;
          sub_1C33789F8();
          goto LABEL_5;
        case 2:
          v4 = v3;
          sub_1C3043430();
          goto LABEL_5;
        case 3:
          v4 = v3;
          sub_1C30434C4();
          goto LABEL_5;
        case 4:
          sub_1C304B888();
          v4 = v3;
          sub_1C33789B0();
          goto LABEL_5;
        case 5:
          v4 = v3;
          sub_1C3043558();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t sub_1C3043430()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  sub_1C2FF6DE0(&qword_1EF7DDC58, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Origin);
  return sub_1C3378A70();
}

uint64_t sub_1C30434C4()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  sub_1C2FF6DE0(&qword_1EF7DEC48, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  return sub_1C3378A70();
}

uint64_t sub_1C3043558()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  sub_1C2FF6DE0(&qword_1EF7DDAF0, type metadata accessor for Com_Apple_Siri_Product_Proto_Value, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Value);
  return sub_1C3378A70();
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
  MEMORY[0x1E0C80A78](v7);
  v34 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v32 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
  MEMORY[0x1E0C80A78](v10);
  v38 = (uint64_t)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v36 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v3;
  v20 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v40 = a1;
  v41 = a3;
  if (v20)
  {
    result = sub_1C3378B24();
    v22 = v44;
    if (v4)
      return result;
  }
  else
  {
    v22 = v44;
  }
  v23 = (int *)type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  sub_1C2FF6CFC(v22 + v23[7], (uint64_t)v15, &qword_1EF7DDCA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1C2FF9138((uint64_t)v15, &qword_1EF7DDCA8);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v15, (uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
    sub_1C2FF6DE0(&qword_1EF7DDC58, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Origin);
    sub_1C3378B6C();
    result = sub_1C2FF6CC0((uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
    if (v4)
      return result;
  }
  v24 = v38;
  sub_1C2FF6CFC(v22 + v23[8], v38, &qword_1EF7DEC98);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v24, 1, v39) == 1)
  {
    sub_1C2FF9138(v24, &qword_1EF7DEC98);
  }
  else
  {
    v25 = v24;
    v26 = v36;
    sub_1C2FF6C38(v25, v36, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
    sub_1C2FF6DE0(&qword_1EF7DEC48, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
    sub_1C3378B6C();
    v22 = v44;
    result = sub_1C2FF6CC0(v26, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
    if (v4)
      return result;
  }
  if (!*(_QWORD *)(v22 + 8)
    || (v27 = *(_BYTE *)(v22 + 16), v42 = *(_QWORD *)(v22 + 8),
                                    v43 = v27,
                                    sub_1C304B888(),
                                    result = sub_1C3378AF4(),
                                    !v4))
  {
    v28 = v22 + v23[9];
    v29 = v34;
    sub_1C2FF6CFC(v28, v34, &qword_1EF7DDB38);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v29, 1, v35) == 1)
    {
      sub_1C2FF9138(v29, &qword_1EF7DDB38);
    }
    else
    {
      v30 = v29;
      v31 = v32;
      sub_1C2FF6C38(v30, v32, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
      sub_1C2FF6DE0(&qword_1EF7DDAF0, type metadata accessor for Com_Apple_Siri_Product_Proto_Value, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Value);
      sub_1C3378B6C();
      result = sub_1C2FF6CC0(v31, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
      if (v4)
        return result;
    }
    return sub_1C33788FC();
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_ElementValue.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, &qword_1EF819F98, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ElementValue);
}

uint64_t sub_1C3043AA8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v4 = a2 + a1[7];
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a2 + a1[8];
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = a2 + a1[9];
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
}

unint64_t sub_1C3043B70()
{
  return 0xD000000000000029;
}

uint64_t sub_1C3043B8C()
{
  return Com_Apple_Siri_Product_Proto_ElementValue.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3043BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_ElementValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C3043BB4()
{
  sub_1C2FF6DE0(&qword_1EF81A270, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ElementValue);
  return sub_1C3378950();
}

uint64_t sub_1C3043C04@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A640, (uint64_t)qword_1EF819EB0, a1);
}

uint64_t sub_1C3043C20()
{
  sub_1C2FF6DE0(&qword_1EF7DE140, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ElementValue);
  return sub_1C3378AA0();
}

uint64_t sub_1C3043C60()
{
  sub_1C2FF6DE0(&qword_1EF7DE140, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ElementValue);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_TerminalElement.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1C3043CD0(uint64_t a1)
{
  return sub_1C3048A38(a1, qword_1EF819EC8, (uint64_t)"elementValue");
}

uint64_t static Com_Apple_Siri_Product_Proto_TerminalElement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A648, (uint64_t)qword_1EF819EC8, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_TerminalElement.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1C3378980();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
        sub_1C2FF6DE0(&qword_1EF7DE140, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ElementValue);
        sub_1C3378A64();
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_TerminalElement.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0),
        sub_1C2FF6DE0(&qword_1EF7DE140, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ElementValue), result = sub_1C3378B60(), !v1))
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
    return sub_1C33788FC();
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_TerminalElement.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, &qword_1EF819FA0, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

unint64_t sub_1C3043ED0()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1C3043EEC()
{
  return Com_Apple_Siri_Product_Proto_TerminalElement.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3043F00()
{
  return Com_Apple_Siri_Product_Proto_TerminalElement.traverse<A>(visitor:)();
}

uint64_t sub_1C3043F14()
{
  sub_1C2FF6DE0(&qword_1EF81A268, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
  return sub_1C3378950();
}

uint64_t sub_1C3043F64@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A648, (uint64_t)qword_1EF819EC8, a1);
}

uint64_t sub_1C3043F80()
{
  sub_1C2FF6DE0(&qword_1EF7DEA68, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
  return sub_1C3378AA0();
}

uint64_t sub_1C3043FC0()
{
  sub_1C2FF6DE0(&qword_1EF7DEA68, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
  return sub_1C3378AAC();
}

uint64_t sub_1C3044010(_QWORD *a1, char *a2)
{
  return sub_1C3049868(a1, a2, sub_1C3005378, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement) & 1;
}

unint64_t static Com_Apple_Siri_Product_Proto_NonTerminalElement.protoMessageName.getter()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_1C3044054()
{
  uint64_t v0;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF819EE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF819EE0);
  return sub_1C3378B90();
}

uint64_t static Com_Apple_Siri_Product_Proto_NonTerminalElement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A650, (uint64_t)qword_1EF819EE0, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_NonTerminalElement.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  do
    result = sub_1C3378980();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_NonTerminalElement.traverse<A>(visitor:)()
{
  return sub_1C33788FC();
}

uint64_t Com_Apple_Siri_Product_Proto_NonTerminalElement.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement, &qword_1EF819FA8, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
}

unint64_t sub_1C304412C()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_1C3044148()
{
  return Com_Apple_Siri_Product_Proto_NonTerminalElement.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C304415C()
{
  return Com_Apple_Siri_Product_Proto_NonTerminalElement.traverse<A>(visitor:)();
}

uint64_t sub_1C3044170()
{
  sub_1C2FF6DE0(&qword_1EF81A260, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
  return sub_1C3378950();
}

uint64_t sub_1C30441C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A650, (uint64_t)qword_1EF819EE0, a1);
}

uint64_t sub_1C30441DC()
{
  sub_1C2FF6DE0(&qword_1EF7DEBC8, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
  return sub_1C3378AA0();
}

uint64_t sub_1C304421C()
{
  sub_1C2FF6DE0(&qword_1EF7DEBC8, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
  return sub_1C3378AAC();
}

uint64_t sub_1C304426C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v4 = sub_1C3378914();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)&v15 - v10, a1, v4);
  v12(v9, a2, v4);
  sub_1C2FF6DE0(&qword_1EF819450, v5, MEMORY[0x1E0DA3720]);
  LOBYTE(a2) = sub_1C3378BD8();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v4);
  v13(v11, v4);
  return a2 & 1;
}

unint64_t static Com_Apple_Siri_Product_Proto_Element.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_1C3044394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF819EF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF819EF8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C338BE60;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "ontologyNodeName";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "resultIds";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "terminalElement";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "nonTerminalElement";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_Element._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A658, (uint64_t)qword_1EF819EF8, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_Element.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_1C3378980();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1C3378A34();
          break;
        case 2:
          sub_1C33789F8();
          break;
        case 3:
          sub_1C304465C(v5, a1, a2, a3);
          break;
        case 4:
          sub_1C3044A58(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t sub_1C304465C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v48 = a4;
  v51 = a3;
  v47 = a2;
  v50 = a1;
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v43 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v39 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEAB0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v44 = (uint64_t)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v39 - v23;
  v45 = v5;
  v46 = v4;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v25((char *)&v39 - v23, 1, 1, v4);
  v26 = v50 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0) + 24);
  sub_1C2FF6CFC(v26, (uint64_t)v12, &qword_1EF7DDD48);
  v42 = v14;
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v50 = v13;
  v28 = v27(v12, 1, v13);
  v41 = v26;
  if (v28 == 1)
  {
    sub_1C2FF9138((uint64_t)v12, &qword_1EF7DDD48);
    v29 = v46;
    v30 = v49;
  }
  else
  {
    v40 = v25;
    sub_1C2FF6C38((uint64_t)v12, (uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    v33 = v49;
    sub_1C337898C();
    v30 = v33;
    if (v33)
    {
      sub_1C2FF6CC0((uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
      goto LABEL_8;
    }
    sub_1C2FF6C38((uint64_t)v19, (uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v29 = v46;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    }
    else
    {
      sub_1C2FF9138((uint64_t)v24, &qword_1EF7DEAB0);
      sub_1C2FF6C38((uint64_t)v17, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
      sub_1C2FF6C38((uint64_t)v9, (uint64_t)v24, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
      v40(v24, 0, 1, v29);
    }
  }
  sub_1C2FF6DE0(&qword_1EF7DEA68, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
  sub_1C3378A70();
  if (v30)
  {
LABEL_8:
    v32 = (uint64_t)v24;
    return sub_1C2FF9138(v32, &qword_1EF7DEAB0);
  }
  v31 = v44;
  sub_1C2FF6D40((uint64_t)v24, v44, &qword_1EF7DEAB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v31, 1, v29) != 1)
  {
    v36 = v43;
    sub_1C2FF6C38(v31, v43, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
    v37 = v41;
    sub_1C2FF9138(v41, &qword_1EF7DDD48);
    sub_1C2FF6C38(v36, v37, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
    v38 = v50;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v37, 0, 1, v38);
  }
  v32 = v31;
  return sub_1C2FF9138(v32, &qword_1EF7DEAB0);
}

uint64_t sub_1C3044A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v48 = a4;
  v51 = a3;
  v47 = a2;
  v50 = a1;
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v43 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v39 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEBE8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v44 = (uint64_t)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v39 - v23;
  v45 = v5;
  v46 = v4;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v25((char *)&v39 - v23, 1, 1, v4);
  v26 = v50 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0) + 24);
  sub_1C2FF6CFC(v26, (uint64_t)v12, &qword_1EF7DDD48);
  v42 = v14;
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v50 = v13;
  v28 = v27(v12, 1, v13);
  v41 = v26;
  if (v28 == 1)
  {
    sub_1C2FF9138((uint64_t)v12, &qword_1EF7DDD48);
    v29 = v46;
    v30 = v49;
  }
  else
  {
    v40 = v25;
    sub_1C2FF6C38((uint64_t)v12, (uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    v33 = v49;
    sub_1C337898C();
    v30 = v33;
    if (v33)
    {
      sub_1C2FF6CC0((uint64_t)v19, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
      goto LABEL_8;
    }
    sub_1C2FF6C38((uint64_t)v19, (uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v29 = v46;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C2FF9138((uint64_t)v24, &qword_1EF7DEBE8);
      sub_1C2FF6C38((uint64_t)v17, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
      sub_1C2FF6C38((uint64_t)v9, (uint64_t)v24, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
      v40(v24, 0, 1, v29);
    }
    else
    {
      sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    }
  }
  sub_1C2FF6DE0(&qword_1EF7DEBC8, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
  sub_1C3378A70();
  if (v30)
  {
LABEL_8:
    v32 = (uint64_t)v24;
    return sub_1C2FF9138(v32, &qword_1EF7DEBE8);
  }
  v31 = v44;
  sub_1C2FF6D40((uint64_t)v24, v44, &qword_1EF7DEBE8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v31, 1, v29) != 1)
  {
    v36 = v43;
    sub_1C2FF6C38(v31, v43, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
    v37 = v41;
    sub_1C2FF9138(v41, &qword_1EF7DDD48);
    sub_1C2FF6C38(v36, v37, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
    v38 = v50;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v37, 0, 1, v38);
  }
  v32 = v31;
  return sub_1C2FF9138(v32, &qword_1EF7DEBE8);
}

uint64_t Com_Apple_Siri_Product_Proto_Element.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0[1];
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v6 || (result = sub_1C3378B3C(), !v1))
  {
    if (!*(_QWORD *)(v0[2] + 16) || (result = sub_1C3378B24(), !v1))
    {
      v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
      sub_1C2FF6CFC((uint64_t)v0 + *(int *)(v8 + 24), (uint64_t)v4, &qword_1EF7DDD48);
      v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
        return sub_1C33788FC();
      if (swift_getEnumCaseMultiPayload() == 1)
        sub_1C30451C0((uint64_t)v0);
      else
        sub_1C3045014((uint64_t)v0);
      result = sub_1C2FF6CC0((uint64_t)v4, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
      if (!v1)
        return sub_1C33788FC();
    }
  }
  return result;
}

uint64_t sub_1C3045014(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  sub_1C2FF6CFC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_1EF7DDD48);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1C2FF9138((uint64_t)v4, &qword_1EF7DDD48);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C2FF6C38((uint64_t)v4, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
    sub_1C2FF6DE0(&qword_1EF7DEA68, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
    sub_1C3378B6C();
    return sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
  }
  result = sub_1C2FF6CC0((uint64_t)v4, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
  __break(1u);
  return result;
}

uint64_t sub_1C30451C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  sub_1C2FF6CFC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_1EF7DDD48);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1C2FF9138((uint64_t)v4, &qword_1EF7DDD48);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C2FF6C38((uint64_t)v4, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
    sub_1C2FF6DE0(&qword_1EF7DEBC8, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
    sub_1C3378B6C();
    return sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
  }
  result = sub_1C2FF6CC0((uint64_t)v4, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
  __break(1u);
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Element.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_Element, &qword_1EF819FB0, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Element);
}

uint64_t sub_1C304538C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v2;
  uint64_t v3;

  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = MEMORY[0x1E0DEE9D8];
  v2 = (char *)a2 + *(int *)(a1 + 24);
  v3 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C3045400()
{
  return 0xD000000000000024;
}

uint64_t sub_1C304541C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C304545C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_1C304549C())()
{
  return nullsub_1;
}

uint64_t sub_1C30454B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_Element.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C30454C4()
{
  return Com_Apple_Siri_Product_Proto_Element.traverse<A>(visitor:)();
}

uint64_t sub_1C30454D8()
{
  sub_1C2FF6DE0(&qword_1EF81A258, type metadata accessor for Com_Apple_Siri_Product_Proto_Element, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Element);
  return sub_1C3378950();
}

uint64_t sub_1C3045528@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A658, (uint64_t)qword_1EF819EF8, a1);
}

uint64_t sub_1C3045544()
{
  sub_1C2FF6DE0(&qword_1EF7DDDC8, type metadata accessor for Com_Apple_Siri_Product_Proto_Element, (uint64_t)"퍘$ll\n");
  return sub_1C3378AA0();
}

uint64_t sub_1C3045584()
{
  sub_1C2FF6DE0(&qword_1EF7DDDC8, type metadata accessor for Com_Apple_Siri_Product_Proto_Element, (uint64_t)"퍘$ll\n");
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_IntentNode.protoMessageName.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_1C30455F4(uint64_t a1)
{
  return sub_1C2FF1DD4(a1, qword_1EF819F10, (uint64_t)"element", (uint64_t)"parentIndex", 11);
}

uint64_t static Com_Apple_Siri_Product_Proto_IntentNode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A660, (uint64_t)qword_1EF819F10, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_IntentNode.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_1C3378980();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1C33789D4();
      }
      else if (result == 1)
      {
        sub_1C3045708(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, type metadata accessor for Com_Apple_Siri_Product_Proto_Element, &qword_1EF7DDDC8, (uint64_t)"퍘$ll\n");
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t sub_1C3045708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_1C2FF6DE0(a7, a6, a8);
  return sub_1C3378A70();
}

uint64_t Com_Apple_Siri_Product_Proto_IntentNode.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  _QWORD v14[4];

  v5 = v3;
  v14[3] = a3;
  v14[1] = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode(0);
  sub_1C2FF6CFC((uint64_t)v5 + *(int *)(v14[0] + 24), (uint64_t)v8, &qword_1EF7DDE18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C2FF9138((uint64_t)v8, &qword_1EF7DDE18);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v8, (uint64_t)v12, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
    sub_1C2FF6DE0(&qword_1EF7DDDC8, type metadata accessor for Com_Apple_Siri_Product_Proto_Element, (uint64_t)"퍘$ll\n");
    sub_1C3378B6C();
    result = sub_1C2FF6CC0((uint64_t)v12, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
    if (v4)
      return result;
  }
  if (!*v5)
    return sub_1C33788FC();
  result = sub_1C3378B0C();
  if (!v4)
    return sub_1C33788FC();
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_IntentNode.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, &qword_1EF819FB8, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentNode);
}

uint64_t sub_1C30459B0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = 0;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_1C3045A08()
{
  return 0xD000000000000027;
}

uint64_t sub_1C3045A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_IntentNode.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C3045A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_IntentNode.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C3045A4C()
{
  sub_1C2FF6DE0(&qword_1EF81A250, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentNode);
  return sub_1C3378950();
}

uint64_t sub_1C3045A9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A660, (uint64_t)qword_1EF819F10, a1);
}

uint64_t sub_1C3045AB8()
{
  sub_1C2FF6DE0(&qword_1EF7DDFE8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentNode);
  return sub_1C3378AA0();
}

uint64_t sub_1C3045AF8()
{
  sub_1C2FF6DE0(&qword_1EF7DDFE8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentNode);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_ProtoIntent.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_1C3045B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  uint64_t v37;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF819F28);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF819F28);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1C338BE90;
  v5 = v37 + v4;
  v6 = v37 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v37 + v4) = 1;
  *(_QWORD *)v6 = "score";
  *(_QWORD *)(v6 + 8) = 5;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0DA38C8];
  v8 = sub_1C3378B78();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v37 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "originalInput";
  *(_QWORD *)(v10 + 8) = 13;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v37 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 4;
  *(_QWORD *)v12 = "allWordsMatched";
  *((_QWORD *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v37 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 5;
  *(_QWORD *)v14 = "primary";
  *((_QWORD *)v14 + 1) = 7;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v37 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 6;
  *(_QWORD *)v16 = "usingExplicitInput";
  *((_QWORD *)v16 + 1) = 18;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v37 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 7;
  *(_QWORD *)v18 = "intentRank";
  *((_QWORD *)v18 + 1) = 10;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v37 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 8;
  *(_QWORD *)v20 = "NERBasedParse";
  *((_QWORD *)v20 + 1) = 13;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v37 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 9;
  *(_QWORD *)v22 = "intentId";
  *((_QWORD *)v22 + 1) = 8;
  v22[16] = 2;
  v9();
  v23 = v37 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 10;
  *(_QWORD *)v23 = "nlState";
  *(_QWORD *)(v23 + 8) = 7;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v37 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 11;
  *(_QWORD *)v25 = "mitigatorClassification";
  *((_QWORD *)v25 + 1) = 23;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v37 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 12;
  *(_QWORD *)v27 = "strippedVoiceTrigger";
  *((_QWORD *)v27 + 1) = 20;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v37 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 13;
  *(_QWORD *)v29 = "invalidVoiceTrigger";
  *((_QWORD *)v29 + 1) = 19;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v37 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 14;
  *(_QWORD *)v31 = "suggested";
  *((_QWORD *)v31 + 1) = 9;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v37 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 15;
  *(_QWORD *)v33 = "metaDomainAction";
  *((_QWORD *)v33 + 1) = 16;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v37 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 16;
  *(_QWORD *)v35 = "intentTree";
  *((_QWORD *)v35 + 1) = 10;
  v35[16] = 2;
  v9();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_ProtoIntent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(qword_1EF80A668, (uint64_t)qword_1EF819F28, a1);
}

uint64_t sub_1C3045F8C()
{
  uint64_t result;

  type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
  swift_allocObject();
  result = sub_1C3045FC8();
  qword_1EF7DEDA0 = result;
  return result;
}

uint64_t sub_1C3045FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0xE000000000000000;
  *(_WORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 42) = 0;
  *(_DWORD *)(v0 + 44) = 0;
  *(_BYTE *)(v0 + 48) = 0;
  *(_DWORD *)(v0 + 52) = 0;
  v1 = v0
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_NLState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification;
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger) = 0;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested) = 0;
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__metaDomainAction) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__intentTree) = v5;
  return v0;
}

uint64_t sub_1C304609C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD v38[2];
  _BYTE *v39;
  _DWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _BYTE *v45;
  _BYTE *v46;
  _QWORD *v47;
  _QWORD *v48;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDED0);
  MEMORY[0x1E0C80A78](v4);
  v43 = (uint64_t)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 24) = 0;
  v6 = (_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 32) = 0xE000000000000000;
  *(_WORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 42) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  *(_BYTE *)(v1 + 48) = 0;
  v38[1] = v1 + 41;
  v39 = (_BYTE *)(v1 + 48);
  *(_DWORD *)(v1 + 52) = 0;
  v40 = (_DWORD *)(v1 + 52);
  v7 = v1
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
  v41 = v1
      + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_NLState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = v1
     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification;
  v42 = v9;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
  v44 = v10;
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v45 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger);
  *v45 = 0;
  v46 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested);
  *v46 = 0;
  v47 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__metaDomainAction);
  v11 = MEMORY[0x1E0DEE9D8];
  *v47 = MEMORY[0x1E0DEE9D8];
  v48 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__intentTree);
  *v48 = v11;
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v12;
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  *v6 = v14;
  *(_QWORD *)(v2 + 32) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LOBYTE(v13) = *(_BYTE *)(a1 + 40);
  swift_beginAccess();
  *(_BYTE *)(v2 + 40) = v13;
  swift_beginAccess();
  LOBYTE(v13) = *(_BYTE *)(a1 + 41);
  swift_beginAccess();
  *(_BYTE *)(v2 + 41) = v13;
  swift_beginAccess();
  LOBYTE(v13) = *(_BYTE *)(a1 + 42);
  swift_beginAccess();
  *(_BYTE *)(v2 + 42) = v13;
  swift_beginAccess();
  LODWORD(v13) = *(_DWORD *)(a1 + 44);
  swift_beginAccess();
  *(_DWORD *)(v2 + 44) = v13;
  swift_beginAccess();
  LOBYTE(v13) = *(_BYTE *)(a1 + 48);
  v15 = v39;
  swift_beginAccess();
  *v15 = v13;
  swift_beginAccess();
  LODWORD(v13) = *(_DWORD *)(a1 + 52);
  v16 = v40;
  swift_beginAccess();
  *v16 = v13;
  v17 = a1
      + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
  swift_beginAccess();
  v18 = v43;
  sub_1C2FF6CFC(v17, v43, &qword_1EF7DDED0);
  v19 = v41;
  swift_beginAccess();
  sub_1C2FF6D84(v18, v19, &qword_1EF7DDED0);
  swift_endAccess();
  v20 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification);
  swift_beginAccess();
  v21 = *v20;
  LOBYTE(v20) = *((_BYTE *)v20 + 8);
  v22 = v42;
  swift_beginAccess();
  *(_QWORD *)v22 = v21;
  *(_BYTE *)(v22 + 8) = (_BYTE)v20;
  v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
  swift_beginAccess();
  v25 = *v23;
  v24 = v23[1];
  v26 = v44;
  swift_beginAccess();
  *v26 = v25;
  v26[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger);
  swift_beginAccess();
  LOBYTE(v27) = *v27;
  v28 = v45;
  swift_beginAccess();
  *v28 = (_BYTE)v27;
  v29 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested);
  swift_beginAccess();
  LOBYTE(v29) = *v29;
  v30 = v46;
  swift_beginAccess();
  *v30 = (_BYTE)v29;
  v31 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__metaDomainAction);
  swift_beginAccess();
  v32 = *v31;
  v33 = v47;
  swift_beginAccess();
  *v33 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__intentTree);
  swift_beginAccess();
  v35 = *v34;
  swift_bridgeObjectRetain();
  swift_release();
  v36 = v48;
  swift_beginAccess();
  *v36 = v35;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C304660C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState, &qword_1EF7DDED0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_1C304609C(v2);
    swift_release();
  }
  swift_retain();
  sub_1C3046748();
  return swift_release();
}

uint64_t sub_1C3046748()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1C3378980();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1C3046984();
          break;
        case 2:
          sub_1C3046A00();
          break;
        case 4:
          sub_1C3046A7C();
          break;
        case 5:
          sub_1C3046AF8();
          break;
        case 6:
          sub_1C3046B74();
          break;
        case 7:
          sub_1C3046BF0();
          break;
        case 8:
          sub_1C3046C6C();
          break;
        case 9:
          sub_1C3046CE8();
          break;
        case 10:
          sub_1C3046D64();
          break;
        case 11:
          sub_1C3046E18();
          break;
        case 12:
          sub_1C3046EAC();
          break;
        case 13:
        case 14:
          sub_1C2FF3368();
          break;
        case 15:
          sub_1C3046F30();
          break;
        case 16:
          sub_1C3046FC4();
          break;
        default:
          break;
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t sub_1C3046984()
{
  swift_beginAccess();
  sub_1C3378A1C();
  return swift_endAccess();
}

uint64_t sub_1C3046A00()
{
  swift_beginAccess();
  sub_1C3378A34();
  return swift_endAccess();
}

uint64_t sub_1C3046A7C()
{
  swift_beginAccess();
  sub_1C33789A4();
  return swift_endAccess();
}

uint64_t sub_1C3046AF8()
{
  swift_beginAccess();
  sub_1C33789A4();
  return swift_endAccess();
}

uint64_t sub_1C3046B74()
{
  swift_beginAccess();
  sub_1C33789A4();
  return swift_endAccess();
}

uint64_t sub_1C3046BF0()
{
  swift_beginAccess();
  sub_1C3378A4C();
  return swift_endAccess();
}

uint64_t sub_1C3046C6C()
{
  swift_beginAccess();
  sub_1C33789A4();
  return swift_endAccess();
}

uint64_t sub_1C3046CE8()
{
  swift_beginAccess();
  sub_1C3378A4C();
  return swift_endAccess();
}

uint64_t sub_1C3046D64()
{
  swift_beginAccess();
  type metadata accessor for Com_Apple_Siri_Product_Proto_NLState(0);
  sub_1C2FF6DE0(&qword_1EF7DDE80, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NLState);
  sub_1C3378A70();
  return swift_endAccess();
}

uint64_t sub_1C3046E18()
{
  swift_beginAccess();
  sub_1C3055348();
  sub_1C33789B0();
  return swift_endAccess();
}

uint64_t sub_1C3046EAC()
{
  swift_beginAccess();
  sub_1C3378A34();
  return swift_endAccess();
}

uint64_t sub_1C3046F30()
{
  swift_beginAccess();
  sub_1C3055304();
  sub_1C3378998();
  return swift_endAccess();
}

uint64_t sub_1C3046FC4()
{
  swift_beginAccess();
  type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode(0);
  sub_1C2FF6DE0(&qword_1EF7DDFE8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentNode);
  sub_1C3378A64();
  return swift_endAccess();
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t result;

  type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0);
  v7 = swift_retain();
  sub_1C3047108(v7, a1, a2, a3);
  result = swift_release();
  if (!v3)
    return sub_1C33788FC();
  return result;
}

uint64_t sub_1C3047108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  v5 = v4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDED0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for Com_Apple_Siri_Product_Proto_NLState(0);
  v11 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v30 = (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(double *)(a1 + 16) == 0.0 || (result = sub_1C3378B30(), !v4))
  {
    v13 = a4;
    swift_beginAccess();
    v14 = *(_QWORD *)(a1 + 32);
    v15 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0)
      v15 = *(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFLL;
    if (v15)
    {
      swift_bridgeObjectRetain();
      sub_1C3378B3C();
      if (v4)
        return swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    if (*(_BYTE *)(a1 + 40) != 1 || (result = sub_1C3378AE8(), !v4))
    {
      swift_beginAccess();
      if (*(_BYTE *)(a1 + 41) != 1 || (result = sub_1C3378AE8(), !v4))
      {
        swift_beginAccess();
        if (*(_BYTE *)(a1 + 42) != 1 || (result = sub_1C3378AE8(), !v4))
        {
          swift_beginAccess();
          if (!*(_DWORD *)(a1 + 44) || (result = sub_1C3378B48(), !v4))
          {
            swift_beginAccess();
            if (*(_BYTE *)(a1 + 48) != 1 || (result = sub_1C3378AE8(), !v4))
            {
              swift_beginAccess();
              if (!*(_DWORD *)(a1 + 52) || (result = sub_1C3378B48(), !v4))
              {
                v29 = v13;
                v17 = a1
                    + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
                swift_beginAccess();
                sub_1C2FF6CFC(v17, (uint64_t)v10, &qword_1EF7DDED0);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v33) == 1)
                {
                  sub_1C2FF9138((uint64_t)v10, &qword_1EF7DDED0);
                }
                else
                {
                  v18 = v30;
                  sub_1C2FF6C38((uint64_t)v10, v30, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
                  sub_1C2FF6DE0(&qword_1EF7DDE80, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NLState);
                  sub_1C3378B6C();
                  result = sub_1C2FF6CC0(v18, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
                  if (v4)
                    return result;
                }
                v19 = (uint64_t *)(a1
                                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification);
                swift_beginAccess();
                if (!*v19
                  || (v20 = *((_BYTE *)v19 + 8), v31 = *v19, v32 = v20, sub_1C3055348(), result = sub_1C3378AF4(), !v4))
                {
                  v21 = (uint64_t *)(a1
                                  + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
                  swift_beginAccess();
                  v22 = *v21;
                  v23 = v21[1];
                  v24 = HIBYTE(v23) & 0xF;
                  if ((v23 & 0x2000000000000000) == 0)
                    v24 = v22 & 0xFFFFFFFFFFFFLL;
                  if (!v24 || (swift_bridgeObjectRetain(), sub_1C3378B3C(), result = swift_bridgeObjectRelease(), !v5))
                  {
                    v25 = (_BYTE *)(a1
                                  + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger);
                    swift_beginAccess();
                    if (*v25 != 1 || (result = sub_1C3378AE8(), !v5))
                    {
                      v26 = (_BYTE *)(a1
                                    + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested);
                      swift_beginAccess();
                      if (*v26 != 1 || (result = sub_1C3378AE8(), !v5))
                      {
                        v27 = a1
                            + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__metaDomainAction;
                        swift_beginAccess();
                        if (!*(_QWORD *)(*(_QWORD *)v27 + 16)
                          || (sub_1C3055304(),
                              swift_bridgeObjectRetain(),
                              sub_1C3378AD0(),
                              result = swift_bridgeObjectRelease(),
                              !v5))
                        {
                          v28 = a1
                              + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__intentTree;
                          result = swift_beginAccess();
                          if (*(_QWORD *)(*(_QWORD *)v28 + 16))
                          {
                            type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode(0);
                            sub_1C2FF6DE0(&qword_1EF7DDFE8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentNode);
                            swift_bridgeObjectRetain();
                            sub_1C3378B60();
                            return swift_bridgeObjectRelease();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C3047738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unsigned __int8 *v45;
  int v46;
  unsigned __int8 *v47;
  unsigned __int8 *v48;
  int v49;
  unsigned __int8 *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_NLState(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A2A8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDED0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v58 - v15;
  swift_beginAccess();
  v17 = *(double *)(a1 + 16);
  swift_beginAccess();
  if (v17 != *(double *)(a2 + 16))
  {
LABEL_14:
    v20 = 0;
    return v20 & 1;
  }
  v59 = v7;
  v60 = v10;
  swift_beginAccess();
  v19 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  if (v19 == *(_QWORD *)(a2 + 24) && v18 == *(_QWORD *)(a2 + 32) || (v20 = 0, (sub_1C3379184() & 1) != 0))
  {
    swift_beginAccess();
    v21 = *(unsigned __int8 *)(a1 + 40);
    swift_beginAccess();
    if (v21 == *(unsigned __int8 *)(a2 + 40))
    {
      swift_beginAccess();
      v22 = *(unsigned __int8 *)(a1 + 41);
      swift_beginAccess();
      if (v22 == *(unsigned __int8 *)(a2 + 41))
      {
        swift_beginAccess();
        v23 = *(unsigned __int8 *)(a1 + 42);
        swift_beginAccess();
        if (v23 == *(unsigned __int8 *)(a2 + 42))
        {
          swift_beginAccess();
          v24 = *(_DWORD *)(a1 + 44);
          swift_beginAccess();
          if (v24 == *(_DWORD *)(a2 + 44))
          {
            swift_beginAccess();
            v25 = *(unsigned __int8 *)(a1 + 48);
            swift_beginAccess();
            if (v25 == *(unsigned __int8 *)(a2 + 48))
            {
              swift_beginAccess();
              v26 = *(_DWORD *)(a1 + 52);
              swift_beginAccess();
              if (v26 == *(_DWORD *)(a2 + 52))
              {
                v27 = a1
                    + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
                swift_beginAccess();
                sub_1C2FF6CFC(v27, (uint64_t)v16, &qword_1EF7DDED0);
                v28 = a2
                    + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__nlState;
                swift_beginAccess();
                v29 = (uint64_t)v60;
                v30 = (uint64_t)&v60[*(int *)(v8 + 48)];
                sub_1C2FF6CFC((uint64_t)v16, (uint64_t)v60, &qword_1EF7DDED0);
                v58 = v30;
                sub_1C2FF6CFC(v28, v30, &qword_1EF7DDED0);
                v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
                if (v31(v29, 1, v4) == 1)
                {
                  swift_retain();
                  swift_retain();
                  sub_1C2FF9138((uint64_t)v16, &qword_1EF7DDED0);
                  if (v31(v58, 1, v4) == 1)
                  {
                    sub_1C2FF9138(v29, &qword_1EF7DDED0);
LABEL_20:
                    v37 = (uint64_t *)(a1
                                    + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification);
                    swift_beginAccess();
                    v38 = *v37;
                    v39 = (uint64_t *)(a2
                                    + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__mitigatorClassification);
                    swift_beginAccess();
                    v40 = *v39;
                    if (*((_BYTE *)v39 + 8) == 1)
                      __asm { BR              X10 }
                    if (v38 == v40)
                    {
                      v41 = (uint64_t *)(a1
                                      + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
                      swift_beginAccess();
                      v42 = *v41;
                      v43 = v41[1];
                      v44 = (_QWORD *)(a2
                                     + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__strippedVoiceTrigger);
                      swift_beginAccess();
                      if (v42 != *v44 || v43 != v44[1])
                      {
                        v20 = 0;
                        if ((sub_1C3379184() & 1) == 0)
                          goto LABEL_31;
                      }
                      v45 = (unsigned __int8 *)(a1
                                              + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger);
                      swift_beginAccess();
                      v46 = *v45;
                      v47 = (unsigned __int8 *)(a2
                                              + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger);
                      swift_beginAccess();
                      if (v46 == *v47)
                      {
                        v48 = (unsigned __int8 *)(a1
                                                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested);
                        swift_beginAccess();
                        v49 = *v48;
                        v50 = (unsigned __int8 *)(a2
                                                + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested);
                        swift_beginAccess();
                        if (v49 == *v50)
                        {
                          v51 = (uint64_t *)(a1
                                          + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__metaDomainAction);
                          swift_beginAccess();
                          v52 = *v51;
                          v53 = (uint64_t *)(a2
                                          + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__metaDomainAction);
                          swift_beginAccess();
                          if ((sub_1C3005914(v52, *v53) & 1) != 0)
                          {
                            v54 = (uint64_t *)(a1
                                            + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__intentTree);
                            swift_beginAccess();
                            v55 = *v54;
                            v56 = (uint64_t *)(a2
                                            + OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__intentTree);
                            swift_beginAccess();
                            v57 = *v56;
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            v20 = sub_1C300599C(v55, v57);
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
LABEL_31:
                            swift_release();
                            swift_release();
                            return v20 & 1;
                          }
                        }
                      }
                    }
LABEL_30:
                    v20 = 0;
                    goto LABEL_31;
                  }
                }
                else
                {
                  sub_1C2FF6CFC(v29, (uint64_t)v14, &qword_1EF7DDED0);
                  v33 = v58;
                  if (v31(v58, 1, v4) != 1)
                  {
                    v34 = v33;
                    v35 = (uint64_t)v59;
                    sub_1C2FF6C38(v34, (uint64_t)v59, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
                    swift_retain();
                    swift_retain();
                    v36 = static Com_Apple_Siri_Product_Proto_NLState.== infix(_:_:)(v14, v35);
                    sub_1C2FF6CC0(v35, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
                    sub_1C2FF9138((uint64_t)v16, &qword_1EF7DDED0);
                    sub_1C2FF6CC0((uint64_t)v14, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
                    sub_1C2FF9138(v29, &qword_1EF7DDED0);
                    if ((v36 & 1) == 0)
                      goto LABEL_30;
                    goto LABEL_20;
                  }
                  swift_retain();
                  swift_retain();
                  sub_1C2FF9138((uint64_t)v16, &qword_1EF7DDED0);
                  sub_1C2FF6CC0((uint64_t)v14, type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
                }
                sub_1C2FF9138(v29, &qword_1EF81A2A8);
                goto LABEL_30;
              }
            }
          }
        }
      }
    }
    goto LABEL_14;
  }
  return v20 & 1;
}

uint64_t Com_Apple_Siri_Product_Proto_ProtoIntent.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent, &qword_1EF819FC0, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ProtoIntent);
}

uint64_t sub_1C3047EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v4 = *(int *)(a1 + 20);
  if (qword_1EF7DEDB0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v4) = qword_1EF7DEDA0;
  return swift_retain();
}

unint64_t sub_1C3047F14()
{
  return 0xD000000000000028;
}

uint64_t sub_1C3047F30()
{
  return Com_Apple_Siri_Product_Proto_ProtoIntent.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3047F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_ProtoIntent.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C3047F58()
{
  sub_1C2FF6DE0(&qword_1EF81A248, type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ProtoIntent);
  return sub_1C3378950();
}

uint64_t sub_1C3047FA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(qword_1EF80A668, (uint64_t)qword_1EF819F28, a1);
}

uint64_t sub_1C3047FC4()
{
  sub_1C2FF6DE0((unint64_t *)&qword_1EF7DF070, type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ProtoIntent);
  return sub_1C3378AA0();
}

uint64_t sub_1C3048004()
{
  sub_1C2FF6DE0((unint64_t *)&qword_1EF7DF070, type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ProtoIntent);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_IntentHierarchy.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1C3048074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF819F40);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF819F40);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C338BE60;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "intents";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "languageContainerTopLevelIntents";
  *(_QWORD *)(v11 + 8) = 32;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "previousIntentsIndices";
  *((_QWORD *)v13 + 1) = 22;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "alternativeIntentsIndices";
  *((_QWORD *)v15 + 1) = 25;
  v15[16] = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_IntentHierarchy._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A678, (uint64_t)qword_1EF819F40, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_IntentHierarchy.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1C3378980();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0);
          sub_1C2FF6DE0((unint64_t *)&qword_1EF7DF070, type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ProtoIntent);
          v4 = v3;
          sub_1C3378A64();
          goto LABEL_5;
        case 2:
          v4 = v3;
          sub_1C30483B8();
          goto LABEL_5;
        case 3:
          sub_1C33788F0();
          v4 = v3;
          sub_1C3378974();
          goto LABEL_5;
        case 4:
          v4 = v3;
          sub_1C3048484();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t sub_1C30483B8()
{
  sub_1C33788F0();
  type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList(0);
  sub_1C2FF6DE0(&qword_1EF819FC8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
  sub_1C2FF6DE0(&qword_1EF819FD0, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
  return sub_1C3378968();
}

uint64_t sub_1C3048484()
{
  sub_1C33788F0();
  type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList(0);
  sub_1C2FF6DE0(&qword_1EF819FC8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
  sub_1C2FF6DE0(&qword_1EF819FD0, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
  return sub_1C3378968();
}

uint64_t Com_Apple_Siri_Product_Proto_IntentHierarchy.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*v0 + 16)
    || (type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0),
        sub_1C2FF6DE0((unint64_t *)&qword_1EF7DF070, type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ProtoIntent), result = sub_1C3378B60(), !v1))
  {
    if (!*(_QWORD *)(v0[1] + 16)
      || (sub_1C33788F0(),
          type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList(0),
          sub_1C2FF6DE0(&qword_1EF819FC8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList), sub_1C2FF6DE0(&qword_1EF819FD0, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList), result = sub_1C3378AB8(), !v1))
    {
      if (!*(_QWORD *)(v0[2] + 16) || (sub_1C33788F0(), result = sub_1C3378AC4(), !v1))
      {
        if (!*(_QWORD *)(v0[3] + 16)
          || (sub_1C33788F0(),
              type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList(0),
              sub_1C2FF6DE0(&qword_1EF819FC8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList), sub_1C2FF6DE0(&qword_1EF819FD0, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList), result = sub_1C3378AB8(), !v1))
        {
          type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy(0);
          return sub_1C33788FC();
        }
      }
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_IntentHierarchy.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy, &qword_1EF819FD8, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentHierarchy);
}

uint64_t sub_1C30487CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9D8];
  *a1 = MEMORY[0x1E0DEE9D8];
  a1[1] = sub_1C302FFF4(v2);
  a1[2] = sub_1C3030160(v2);
  a1[3] = sub_1C302FFF4(v2);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C3048830()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1C304884C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C304888C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 32);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_1C30488CC())()
{
  return nullsub_1;
}

uint64_t sub_1C30488E0()
{
  return Com_Apple_Siri_Product_Proto_IntentHierarchy.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C30488F4()
{
  return Com_Apple_Siri_Product_Proto_IntentHierarchy.traverse<A>(visitor:)();
}

uint64_t sub_1C3048908()
{
  sub_1C2FF6DE0(&qword_1EF81A240, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentHierarchy);
  return sub_1C3378950();
}

uint64_t sub_1C3048958@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A678, (uint64_t)qword_1EF819F40, a1);
}

uint64_t sub_1C3048974()
{
  sub_1C2FF6DE0(&qword_1EF81A0C0, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentHierarchy);
  return sub_1C3378AA0();
}

uint64_t sub_1C30489B4()
{
  sub_1C2FF6DE0(&qword_1EF81A0C0, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentHierarchy);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_IntegerList.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_1C3048A24(uint64_t a1)
{
  return sub_1C3048A38(a1, qword_1EF819F58, (uint64_t)"integerValue");
}

uint64_t sub_1C3048A38(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v5, a2);
  __swift_project_value_buffer(v5, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C3388720;
  v10 = v9 + v8 + *(int *)(v6 + 48);
  *(_QWORD *)(v9 + v8) = 1;
  *(_QWORD *)v10 = a3;
  *(_QWORD *)(v10 + 8) = 12;
  *(_BYTE *)(v10 + 16) = 2;
  v11 = *MEMORY[0x1E0DA38C8];
  v12 = sub_1C3378B78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_IntegerList._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A680, (uint64_t)qword_1EF819F58, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_IntegerList.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1C3378980();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_1C3378A04();
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_IntegerList.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (result = sub_1C3378ADC(), !v1))
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList(0);
    return sub_1C33788FC();
  }
  return result;
}

uint64_t static Com_Apple_Siri_Product_Proto_IntegerList.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_1C3049868(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1C300501C, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList) & 1;
}

uint64_t Com_Apple_Siri_Product_Proto_IntegerList.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, &qword_1EF819FD0, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
}

uint64_t sub_1C3048C9C@<X0>(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C3048CC4()
{
  return 0xD000000000000028;
}

uint64_t sub_1C3048CE0()
{
  return Com_Apple_Siri_Product_Proto_IntegerList.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3048CF4()
{
  return Com_Apple_Siri_Product_Proto_IntegerList.traverse<A>(visitor:)();
}

uint64_t sub_1C3048D08()
{
  sub_1C2FF6DE0(&qword_1EF81A238, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
  return sub_1C3378950();
}

uint64_t sub_1C3048D58@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A680, (uint64_t)qword_1EF819F58, a1);
}

uint64_t sub_1C3048D74()
{
  sub_1C2FF6DE0(&qword_1EF819FC8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
  return sub_1C3378AA0();
}

uint64_t sub_1C3048DB4()
{
  sub_1C2FF6DE0(&qword_1EF819FC8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
  return sub_1C3378AAC();
}

uint64_t sub_1C3048E04(_QWORD *a1, char *a2)
{
  return sub_1C3049868(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1C300501C, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList) & 1;
}

uint64_t _s12SiriOntology010Com_Apple_a15_Product_Proto_F6IntentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a2 + v11);
  if (v12 == v13
    || (swift_retain(), swift_retain(), v14 = sub_1C3047738(v12, v13), swift_release(), swift_release(), (v14 & 1) != 0))
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    v15(v8, a2, v4);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v16 = sub_1C3378BD8();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A35_Product_Proto_OriginalElementValueV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  BOOL v12;
  uint64_t v13;
  unsigned __int8 *v14;
  void (*v15)(char *, unsigned __int8 *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - v9;
  if (*a1 == *a2)
  {
    v12 = *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && *((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2);
    if (v12 || (v11 = 0, (sub_1C3379184() & 1) != 0))
    {
      v13 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
      v14 = &a1[*(int *)(v13 + 24)];
      v15 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, &a2[*(int *)(v13 + 24)], v4);
      sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v11 = sub_1C3378BD8();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A31_Product_Proto_AdjustmentReasonV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_1C3379184() & 1) != 0))
  {
    v13 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v13 || (v12 = 0, (sub_1C3379184() & 1) != 0))
    {
      v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      v15 = (char *)a1 + *(int *)(v14 + 24);
      v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v10, v15, v4);
      v16(v8, &a2[*(int *)(v14 + 24)], v4);
      sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v12 = sub_1C3378BD8();
      v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
    }
  }
  return v12 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A30_Product_Proto_IntentHierarchyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_1C3004E20(*(_QWORD *)a1, *a2) & 1) != 0
    && (sub_1C300B5EC(*(_QWORD *)(a1 + 8), a2[1]) & 1) != 0
    && (sub_1C300BAA0(*(_QWORD *)(a1 + 16), a2[2]) & 1) != 0
    && (sub_1C300B5EC(*(_QWORD *)(a1 + 24), a2[3]) & 1) != 0)
  {
    v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy(0);
    v12 = (char *)(a1 + *(int *)(v11 + 32));
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, (char *)a2 + *(int *)(v11 + 32), v4);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v14 = sub_1C3378BD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A28_Product_Proto_DerivedOriginV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  char v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  uint64_t *v51;

  v51 = a2;
  v3 = sub_1C3378914();
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v44 - v6;
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A2D8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v44 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v44 - v20;
  v22 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  v23 = *(int *)(v22 + 24);
  v49 = a1;
  sub_1C2FF6CFC((uint64_t)a1 + v23, (uint64_t)v21, &qword_1EF7DEB60);
  v44 = v22;
  sub_1C2FF6CFC((uint64_t)v51 + *(int *)(v22 + 24), (uint64_t)v19, &qword_1EF7DEB60);
  v24 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1C2FF6CFC((uint64_t)v21, (uint64_t)v12, &qword_1EF7DEB60);
  sub_1C2FF6CFC((uint64_t)v19, v24, &qword_1EF7DEB60);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v25((uint64_t)v12, 1, v7) == 1)
  {
    sub_1C2FF9138((uint64_t)v19, &qword_1EF7DEB60);
    sub_1C2FF9138((uint64_t)v21, &qword_1EF7DEB60);
    if (v25(v24, 1, v7) == 1)
    {
      sub_1C2FF9138((uint64_t)v12, &qword_1EF7DEB60);
      goto LABEL_17;
    }
    goto LABEL_6;
  }
  v26 = v50;
  sub_1C2FF6CFC((uint64_t)v12, (uint64_t)v16, &qword_1EF7DEB60);
  if (v25(v24, 1, v7) == 1)
  {
    sub_1C2FF9138((uint64_t)v19, &qword_1EF7DEB60);
    sub_1C2FF9138((uint64_t)v21, &qword_1EF7DEB60);
    sub_1C2FF6CC0((uint64_t)v16, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
LABEL_6:
    v27 = &qword_1EF81A2D8;
    v28 = (uint64_t)v12;
LABEL_7:
    sub_1C2FF9138(v28, v27);
LABEL_19:
    v41 = 0;
    return v41 & 1;
  }
  sub_1C2FF6C38(v24, (uint64_t)v26, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
  v29 = *v16 == *v26 && v16[1] == v26[1];
  if (!v29 && (sub_1C3379184() & 1) == 0 || (v16[2] != v26[2] || v16[3] != v26[3]) && (sub_1C3379184() & 1) == 0)
  {
    sub_1C2FF6CC0((uint64_t)v26, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
    sub_1C2FF9138((uint64_t)v19, &qword_1EF7DEB60);
    sub_1C2FF9138((uint64_t)v21, &qword_1EF7DEB60);
    sub_1C2FF6CC0((uint64_t)v16, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
    v28 = (uint64_t)v12;
    v27 = &qword_1EF7DEB60;
    goto LABEL_7;
  }
  sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
  v30 = sub_1C3378BD8();
  sub_1C2FF6CC0((uint64_t)v26, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
  sub_1C2FF9138((uint64_t)v19, &qword_1EF7DEB60);
  sub_1C2FF9138((uint64_t)v21, &qword_1EF7DEB60);
  sub_1C2FF6CC0((uint64_t)v16, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
  sub_1C2FF9138((uint64_t)v12, &qword_1EF7DEB60);
  if ((v30 & 1) == 0)
    goto LABEL_19;
LABEL_17:
  v31 = v49;
  v32 = v51;
  if ((sub_1C3005088(*v49, *v51) & 1) == 0)
    goto LABEL_19;
  v33 = v44;
  v34 = v45;
  v35 = (char *)v31 + *(int *)(v44 + 20);
  v37 = v47;
  v36 = v48;
  v38 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v38(v45, v35, v48);
  v39 = (char *)v32 + *(int *)(v33 + 20);
  v40 = v46;
  v38(v46, v39, v36);
  sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
  v41 = sub_1C3378BD8();
  v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v40, v36);
  v42(v34, v36);
  return v41 & 1;
}

uint64_t sub_1C3049868(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v8 = sub_1C3378914();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  if ((a3(*a1, *(_QWORD *)a2) & 1) != 0)
  {
    v15 = a4(0);
    v16 = (char *)a1 + *(int *)(v15 + 20);
    v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v17(v14, v16, v8);
    v17(v12, &a2[*(int *)(v15 + 20)], v8);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v18 = sub_1C3378BD8();
    v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v12, v8);
    v19(v14, v8);
  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A25_Product_Proto_IntentNodeV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;

  v4 = sub_1C3378914();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v43 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v42 = (char *)&v41 - v7;
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v46 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819720);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v41 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v41 - v21;
  v23 = type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode(0);
  v24 = *(int *)(v23 + 24);
  v47 = a1;
  v25 = (uint64_t)&a1[v24];
  v26 = v23;
  sub_1C2FF6CFC(v25, (uint64_t)v22, &qword_1EF7DDE18);
  v27 = *(int *)(v26 + 24);
  v48 = a2;
  sub_1C2FF6CFC((uint64_t)&a2[v27], (uint64_t)v20, &qword_1EF7DDE18);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1C2FF6CFC((uint64_t)v22, (uint64_t)v13, &qword_1EF7DDE18);
  sub_1C2FF6CFC((uint64_t)v20, v28, &qword_1EF7DDE18);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_1C2FF9138((uint64_t)v20, &qword_1EF7DDE18);
    sub_1C2FF9138((uint64_t)v22, &qword_1EF7DDE18);
    if (v29(v28, 1, v8) == 1)
    {
      sub_1C2FF9138((uint64_t)v13, &qword_1EF7DDE18);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1C2FF6CFC((uint64_t)v13, (uint64_t)v17, &qword_1EF7DDE18);
  if (v29(v28, 1, v8) == 1)
  {
    sub_1C2FF9138((uint64_t)v20, &qword_1EF7DDE18);
    sub_1C2FF9138((uint64_t)v22, &qword_1EF7DDE18);
    sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
LABEL_6:
    sub_1C2FF9138((uint64_t)v13, &qword_1EF819720);
LABEL_10:
    v38 = 0;
    return v38 & 1;
  }
  v30 = v46;
  sub_1C2FF6C38(v28, v46, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
  v31 = _s12SiriOntology010Com_Apple_A22_Product_Proto_ElementV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v30);
  sub_1C2FF6CC0(v30, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
  sub_1C2FF9138((uint64_t)v20, &qword_1EF7DDE18);
  sub_1C2FF9138((uint64_t)v22, &qword_1EF7DDE18);
  sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
  sub_1C2FF9138((uint64_t)v13, &qword_1EF7DDE18);
  if ((v31 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v32 = v48;
  if (*(_DWORD *)v47 != *(_DWORD *)v48)
    goto LABEL_10;
  v34 = v44;
  v33 = v45;
  v35 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v36 = v42;
  v35(v42, &v47[*(int *)(v26 + 20)], v45);
  v37 = v43;
  v35(v43, &v32[*(int *)(v26 + 20)], v33);
  sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
  v38 = sub_1C3378BD8();
  v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  v39(v37, v33);
  v39(v36, v33);
  return v38 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A22_Product_Proto_ElementV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v4 = sub_1C3378914();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v40 - v7;
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v43 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF819718);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v40 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v40 - v21;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v23 = 0, (sub_1C3379184() & 1) != 0))
  {
    if ((sub_1C30020E8(*(_QWORD **)(a1 + 16), *(_QWORD **)(a2 + 16)) & 1) != 0)
    {
      v42 = v17;
      v24 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
      sub_1C2FF6CFC(a1 + *(int *)(v24 + 24), (uint64_t)v22, &qword_1EF7DDD48);
      v41 = v24;
      sub_1C2FF6CFC(a2 + *(int *)(v24 + 24), (uint64_t)v20, &qword_1EF7DDD48);
      v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_1C2FF6CFC((uint64_t)v22, (uint64_t)v13, &qword_1EF7DDD48);
      sub_1C2FF6CFC((uint64_t)v20, v25, &qword_1EF7DDD48);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v26((uint64_t)v13, 1, v8) == 1)
      {
        sub_1C2FF9138((uint64_t)v20, &qword_1EF7DDD48);
        sub_1C2FF9138((uint64_t)v22, &qword_1EF7DDD48);
        if (v26(v25, 1, v8) == 1)
        {
          sub_1C2FF9138((uint64_t)v13, &qword_1EF7DDD48);
LABEL_14:
          v31 = v41;
          v32 = a1 + *(int *)(v41 + 28);
          v34 = v46;
          v33 = v47;
          v35 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
          v36 = v44;
          v35(v44, v32, v47);
          v37 = a2 + *(int *)(v31 + 28);
          v38 = v45;
          v35(v45, v37, v33);
          sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
          v23 = sub_1C3378BD8();
          v39 = *(void (**)(char *, uint64_t))(v34 + 8);
          v39(v38, v33);
          v39(v36, v33);
          return v23 & 1;
        }
      }
      else
      {
        v27 = (uint64_t)v42;
        sub_1C2FF6CFC((uint64_t)v13, (uint64_t)v42, &qword_1EF7DDD48);
        if (v26(v25, 1, v8) != 1)
        {
          v29 = v43;
          sub_1C2FF6C38(v25, v43, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
          v30 = _s12SiriOntology010Com_Apple_A22_Product_Proto_ElementV10OneOf_NodeO2eeoiySbAE_AEtFZ_0(v27, v29);
          sub_1C2FF6CC0(v29, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
          sub_1C2FF9138((uint64_t)v20, &qword_1EF7DDD48);
          sub_1C2FF9138((uint64_t)v22, &qword_1EF7DDD48);
          sub_1C2FF6CC0(v27, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
          sub_1C2FF9138((uint64_t)v13, &qword_1EF7DDD48);
          if ((v30 & 1) != 0)
            goto LABEL_14;
          goto LABEL_11;
        }
        sub_1C2FF9138((uint64_t)v20, &qword_1EF7DDD48);
        sub_1C2FF9138((uint64_t)v22, &qword_1EF7DDD48);
        sub_1C2FF6CC0(v27, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
      }
      sub_1C2FF9138((uint64_t)v13, &qword_1EF819718);
    }
LABEL_11:
    v23 = 0;
  }
  return v23 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A27_Product_Proto_ElementValueV2eeoiySbAC_ACtFZ_0(char *a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  _QWORD **v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  unsigned __int8 *v69;
  unsigned __int8 *v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t *v85;
  char *v86;
  char *v87;
  char *v88;
  _QWORD **v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 *v102;
  unsigned __int8 *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v100 = sub_1C3378914();
  v93 = *(_QWORD *)(v100 - 8);
  v4 = MEMORY[0x1E0C80A78](v100);
  v92 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v91 = (char *)&v85 - v6;
  v98 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  v96 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v90 = (uint64_t)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A2B0);
  MEMORY[0x1E0C80A78](v95);
  v99 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
  v10 = MEMORY[0x1E0C80A78](v9);
  v94 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v101 = (uint64_t)&v85 - v13;
  MEMORY[0x1E0C80A78](v12);
  v97 = (uint64_t)&v85 - v14;
  v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  v105 = *(_QWORD *)(v15 - 8);
  v106 = v15;
  MEMORY[0x1E0C80A78](v15);
  v102 = (unsigned __int8 *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A2B8);
  MEMORY[0x1E0C80A78](v104);
  v107 = (uint64_t)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
  v19 = MEMORY[0x1E0C80A78](v18);
  v103 = (unsigned __int8 *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v85 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v85 - v24;
  v26 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  v108 = *(_QWORD *)(v26 - 8);
  v109 = v26;
  MEMORY[0x1E0C80A78](v26);
  v28 = (uint64_t *)((char *)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A2C0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
  v33 = MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v85 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x1E0C80A78](v33);
  v38 = (char *)&v85 - v37;
  MEMORY[0x1E0C80A78](v36);
  v40 = (char *)&v85 - v39;
  if ((sub_1C30020E8(*(_QWORD **)a1, *a2) & 1) == 0)
    goto LABEL_28;
  v87 = v35;
  v85 = v28;
  v86 = v23;
  v88 = v25;
  v41 = type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(0);
  v42 = a1;
  sub_1C2FF6CFC((uint64_t)&a1[*(int *)(v41 + 28)], (uint64_t)v40, &qword_1EF7DDCA8);
  v43 = *(int *)(v41 + 28);
  v89 = a2;
  sub_1C2FF6CFC((uint64_t)a2 + v43, (uint64_t)v38, &qword_1EF7DDCA8);
  v44 = (uint64_t)&v31[*(int *)(v29 + 48)];
  sub_1C2FF6CFC((uint64_t)v40, (uint64_t)v31, &qword_1EF7DDCA8);
  sub_1C2FF6CFC((uint64_t)v38, v44, &qword_1EF7DDCA8);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
  if (v45((uint64_t)v31, 1, v109) == 1)
  {
    v46 = v41;
    sub_1C2FF9138((uint64_t)v38, &qword_1EF7DDCA8);
    sub_1C2FF9138((uint64_t)v40, &qword_1EF7DDCA8);
    if (v45(v44, 1, v109) == 1)
    {
      sub_1C2FF9138((uint64_t)v31, &qword_1EF7DDCA8);
      goto LABEL_10;
    }
LABEL_7:
    v48 = &qword_1EF81A2C0;
LABEL_8:
    v49 = (uint64_t)v31;
LABEL_27:
    sub_1C2FF9138(v49, v48);
    goto LABEL_28;
  }
  v47 = v87;
  sub_1C2FF6CFC((uint64_t)v31, (uint64_t)v87, &qword_1EF7DDCA8);
  if (v45(v44, 1, v109) == 1)
  {
    sub_1C2FF9138((uint64_t)v38, &qword_1EF7DDCA8);
    sub_1C2FF9138((uint64_t)v40, &qword_1EF7DDCA8);
    sub_1C2FF6CC0((uint64_t)v47, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
    goto LABEL_7;
  }
  v46 = v41;
  v50 = v85;
  sub_1C2FF6C38(v44, (uint64_t)v85, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
  v51 = _s12SiriOntology010Com_Apple_A21_Product_Proto_OriginV2eeoiySbAC_ACtFZ_0(v47, v50);
  sub_1C2FF6CC0((uint64_t)v50, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
  sub_1C2FF9138((uint64_t)v38, &qword_1EF7DDCA8);
  sub_1C2FF9138((uint64_t)v40, &qword_1EF7DDCA8);
  sub_1C2FF6CC0((uint64_t)v47, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
  sub_1C2FF9138((uint64_t)v31, &qword_1EF7DDCA8);
  if ((v51 & 1) == 0)
    goto LABEL_28;
LABEL_10:
  v52 = v46;
  v53 = (uint64_t)v88;
  sub_1C2FF6CFC((uint64_t)&v42[*(int *)(v46 + 32)], (uint64_t)v88, &qword_1EF7DEC98);
  v54 = (uint64_t)v86;
  sub_1C2FF6CFC((uint64_t)v89 + *(int *)(v46 + 32), (uint64_t)v86, &qword_1EF7DEC98);
  v55 = v107;
  v56 = v107 + *(int *)(v104 + 48);
  sub_1C2FF6CFC(v53, v107, &qword_1EF7DEC98);
  sub_1C2FF6CFC(v54, v56, &qword_1EF7DEC98);
  v57 = v106;
  v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48);
  if (v58(v55, 1, v106) == 1)
  {
    v59 = v42;
    v60 = v54;
    v61 = v89;
    sub_1C2FF9138(v60, &qword_1EF7DEC98);
    sub_1C2FF9138(v53, &qword_1EF7DEC98);
    if (v58(v56, 1, v57) == 1)
    {
      v62 = v52;
      sub_1C2FF9138(v55, &qword_1EF7DEC98);
      goto LABEL_13;
    }
LABEL_19:
    v48 = &qword_1EF81A2B8;
    v49 = v55;
    goto LABEL_27;
  }
  v69 = v103;
  sub_1C2FF6CFC(v55, (uint64_t)v103, &qword_1EF7DEC98);
  if (v58(v56, 1, v57) == 1)
  {
    sub_1C2FF9138(v54, &qword_1EF7DEC98);
    sub_1C2FF9138((uint64_t)v88, &qword_1EF7DEC98);
    sub_1C2FF6CC0((uint64_t)v69, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
    goto LABEL_19;
  }
  v70 = v102;
  sub_1C2FF6C38(v56, (uint64_t)v102, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  if (*v69 != *v70
    || (*((_QWORD *)v69 + 1) != *((_QWORD *)v70 + 1) || *((_QWORD *)v69 + 2) != *((_QWORD *)v70 + 2))
    && (sub_1C3379184() & 1) == 0)
  {
    sub_1C2FF6CC0((uint64_t)v70, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
    sub_1C2FF9138(v54, &qword_1EF7DEC98);
    sub_1C2FF9138((uint64_t)v88, &qword_1EF7DEC98);
    sub_1C2FF6CC0((uint64_t)v69, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
    v49 = v55;
    v48 = &qword_1EF7DEC98;
    goto LABEL_27;
  }
  v59 = v42;
  v62 = v52;
  v71 = v54;
  v61 = v89;
  sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
  v72 = sub_1C3378BD8();
  sub_1C2FF6CC0((uint64_t)v70, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  sub_1C2FF9138(v71, &qword_1EF7DEC98);
  sub_1C2FF9138((uint64_t)v88, &qword_1EF7DEC98);
  sub_1C2FF6CC0((uint64_t)v69, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
  sub_1C2FF9138(v55, &qword_1EF7DEC98);
  if ((v72 & 1) == 0)
    goto LABEL_28;
LABEL_13:
  if (sub_1C3038A6C(*((_QWORD *)v59 + 1), v59[16], (uint64_t)v61[1]))
  {
    v63 = v97;
    sub_1C2FF6CFC((uint64_t)&v59[*(int *)(v62 + 36)], v97, &qword_1EF7DDB38);
    v64 = v62;
    v65 = v101;
    sub_1C2FF6CFC((uint64_t)v61 + *(int *)(v62 + 36), v101, &qword_1EF7DDB38);
    v31 = v99;
    v66 = (uint64_t)&v99[*(int *)(v95 + 48)];
    sub_1C2FF6CFC(v63, (uint64_t)v99, &qword_1EF7DDB38);
    sub_1C2FF6CFC(v65, v66, &qword_1EF7DDB38);
    v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
    v68 = v98;
    if (v67((uint64_t)v31, 1, v98) == 1)
    {
      sub_1C2FF9138(v65, &qword_1EF7DDB38);
      sub_1C2FF9138(v63, &qword_1EF7DDB38);
      if (v67(v66, 1, v68) == 1)
      {
        sub_1C2FF9138((uint64_t)v31, &qword_1EF7DDB38);
LABEL_34:
        v78 = v93;
        v79 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
        v80 = v91;
        v81 = v100;
        v79(v91, &v59[*(int *)(v64 + 24)], v100);
        v82 = (char *)v89 + *(int *)(v64 + 24);
        v83 = v92;
        v79(v92, v82, v81);
        sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
        v73 = sub_1C3378BD8();
        v84 = *(void (**)(char *, uint64_t))(v78 + 8);
        v84(v83, v81);
        v84(v80, v81);
        return v73 & 1;
      }
      goto LABEL_32;
    }
    v75 = v94;
    sub_1C2FF6CFC((uint64_t)v31, v94, &qword_1EF7DDB38);
    if (v67(v66, 1, v68) == 1)
    {
      sub_1C2FF9138(v101, &qword_1EF7DDB38);
      sub_1C2FF9138(v63, &qword_1EF7DDB38);
      sub_1C2FF6CC0(v75, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
LABEL_32:
      v48 = &qword_1EF81A2B0;
      goto LABEL_8;
    }
    v76 = v90;
    sub_1C2FF6C38(v66, v90, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
    v77 = static Com_Apple_Siri_Product_Proto_Value.== infix(_:_:)(v75, v76);
    sub_1C2FF6CC0(v76, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
    sub_1C2FF9138(v101, &qword_1EF7DDB38);
    sub_1C2FF9138(v63, &qword_1EF7DDB38);
    sub_1C2FF6CC0(v75, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
    sub_1C2FF9138((uint64_t)v31, &qword_1EF7DDB38);
    if ((v77 & 1) != 0)
      goto LABEL_34;
  }
LABEL_28:
  v73 = 0;
  return v73 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A22_Product_Proto_ElementV10OneOf_NodeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v3 = type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v24 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A2D0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_1C2FF6C7C(a1, (uint64_t)v18, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
  sub_1C2FF6C7C(v25, v19, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C2FF6C7C((uint64_t)v18, (uint64_t)v14, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1C2FF6C38(v19, (uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
      if ((sub_1C3005378(*v14, *v8) & 1) != 0)
      {
        sub_1C3378914();
        sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
        if ((sub_1C3378BD8() & 1) != 0)
        {
          sub_1C2FF6CC0((uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
          sub_1C2FF6CC0((uint64_t)v14, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
          sub_1C2FF6CC0((uint64_t)v18, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
          v20 = 1;
          return v20 & 1;
        }
      }
      sub_1C2FF6CC0((uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
      sub_1C2FF6CC0((uint64_t)v14, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
      sub_1C2FF6CC0((uint64_t)v18, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
LABEL_12:
      v20 = 0;
      return v20 & 1;
    }
    v21 = type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement;
    v22 = (uint64_t)v14;
LABEL_7:
    sub_1C2FF6CC0(v22, v21);
    sub_1C2FF9138((uint64_t)v18, &qword_1EF81A2D0);
    goto LABEL_12;
  }
  sub_1C2FF6C7C((uint64_t)v18, (uint64_t)v12, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v21 = type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement;
    v22 = (uint64_t)v12;
    goto LABEL_7;
  }
  sub_1C2FF6C38(v19, (uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
  sub_1C3378914();
  sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
  v20 = sub_1C3378BD8();
  sub_1C2FF6CC0((uint64_t)v5, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
  sub_1C2FF6CC0((uint64_t)v12, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
  sub_1C2FF6CC0((uint64_t)v18, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
  return v20 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A21_Product_Proto_OriginV2eeoiySbAC_ACtFZ_0(char *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  char v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;

  v4 = sub_1C3378914();
  v42 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v41 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v38 - v7;
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v39 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A2C8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v38 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v38 - v21;
  v43 = a1;
  v23 = *a2;
  if (*((_BYTE *)a2 + 8) == 1)
    __asm { BR              X11 }
  if (*(_QWORD *)a1 != v23)
    goto LABEL_12;
  v38 = v4;
  v24 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  sub_1C2FF6CFC((uint64_t)&v43[*(int *)(v24 + 20)], (uint64_t)v22, &qword_1EF7DDBD8);
  sub_1C2FF6CFC((uint64_t)a2 + *(int *)(v24 + 20), (uint64_t)v20, &qword_1EF7DDBD8);
  v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1C2FF6CFC((uint64_t)v22, (uint64_t)v13, &qword_1EF7DDBD8);
  sub_1C2FF6CFC((uint64_t)v20, v25, &qword_1EF7DDBD8);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v26((uint64_t)v13, 1, v8) != 1)
  {
    sub_1C2FF6CFC((uint64_t)v13, (uint64_t)v17, &qword_1EF7DDBD8);
    if (v26(v25, 1, v8) != 1)
    {
      v27 = v39;
      sub_1C2FF6C38(v25, v39, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
      v28 = _s12SiriOntology010Com_Apple_A21_Product_Proto_OriginV06OneOf_G6DetailO2eeoiySbAE_AEtFZ_0((uint64_t)v17, v27);
      sub_1C2FF6CC0(v27, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
      sub_1C2FF9138((uint64_t)v20, &qword_1EF7DDBD8);
      sub_1C2FF9138((uint64_t)v22, &qword_1EF7DDBD8);
      sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
      sub_1C2FF9138((uint64_t)v13, &qword_1EF7DDBD8);
      if ((v28 & 1) != 0)
        goto LABEL_11;
LABEL_12:
      v35 = 0;
      return v35 & 1;
    }
    sub_1C2FF9138((uint64_t)v20, &qword_1EF7DDBD8);
    sub_1C2FF9138((uint64_t)v22, &qword_1EF7DDBD8);
    sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
LABEL_9:
    sub_1C2FF9138((uint64_t)v13, &qword_1EF81A2C8);
    goto LABEL_12;
  }
  sub_1C2FF9138((uint64_t)v20, &qword_1EF7DDBD8);
  sub_1C2FF9138((uint64_t)v22, &qword_1EF7DDBD8);
  if (v26(v25, 1, v8) != 1)
    goto LABEL_9;
  sub_1C2FF9138((uint64_t)v13, &qword_1EF7DDBD8);
LABEL_11:
  v29 = v42;
  v30 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  v31 = v40;
  v32 = v38;
  v30(v40, &v43[*(int *)(v24 + 24)], v38);
  v33 = (char *)a2 + *(int *)(v24 + 24);
  v34 = v41;
  v30(v41, v33, v32);
  sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
  v35 = sub_1C3378BD8();
  v36 = *(void (**)(char *, uint64_t))(v29 + 8);
  v36(v34, v32);
  v36(v31, v32);
  return v35 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A21_Product_Proto_OriginV06OneOf_G6DetailO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int EnumCaseMultiPayload;
  uint64_t (*v24)(uint64_t);
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  char v34;
  uint64_t v35;
  uint64_t *v36;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  MEMORY[0x1E0C80A78](v4);
  v36 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v35 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (uint64_t *)((char *)&v35 - v16);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A2E0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = &v21[*(int *)(v19 + 48)];
  sub_1C2FF6C7C(a1, (uint64_t)v21, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  sub_1C2FF6C7C(a2, (uint64_t)v22, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1C2FF6C7C((uint64_t)v21, (uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    v28 = *v17;
    v27 = v17[1];
    if (!swift_getEnumCaseMultiPayload())
    {
      if (v28 == *(_QWORD *)v22 && v27 == *((_QWORD *)v22 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v34 = sub_1C3379184();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0)
        {
          sub_1C2FF6CC0((uint64_t)v21, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
          goto LABEL_14;
        }
      }
      sub_1C2FF6CC0((uint64_t)v21, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
      v25 = 1;
      return v25 & 1;
    }
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1C2FF9138((uint64_t)v21, &qword_1EF81A2E0);
LABEL_14:
    v25 = 0;
    return v25 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1C2FF6C7C((uint64_t)v21, (uint64_t)v12, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v24 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin;
      v29 = v36;
      sub_1C2FF6C38((uint64_t)v22, (uint64_t)v36, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
      v25 = _s12SiriOntology010Com_Apple_A28_Product_Proto_DerivedOriginV2eeoiySbAC_ACtFZ_0(v12, v29);
      sub_1C2FF6CC0((uint64_t)v29, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
      v26 = (uint64_t)v12;
      goto LABEL_9;
    }
    v30 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin;
    v31 = (uint64_t)v12;
    goto LABEL_12;
  }
  sub_1C2FF6C7C((uint64_t)v21, (uint64_t)v15, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v30 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan;
    v31 = (uint64_t)v15;
LABEL_12:
    sub_1C2FF6CC0(v31, v30);
    goto LABEL_13;
  }
  v24 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan;
  sub_1C2FF6C38((uint64_t)v22, (uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
  v25 = sub_1C3244C54((uint64_t)v15, (uint64_t)v8);
  sub_1C2FF6CC0((uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
  v26 = (uint64_t)v15;
LABEL_9:
  sub_1C2FF6CC0(v26, v24);
  sub_1C2FF6CC0((uint64_t)v21, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  return v25 & 1;
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DEC58);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DE150);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DEA78);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_Element(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DDDD8);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DDD10);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement(uint64_t a1)
{
  return sub_1C2FE8350(a1, (uint64_t *)&unk_1EF7DEBD8);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DDFF8);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DF080);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(uint64_t a1)
{
  return sub_1C2FE8350(a1, (uint64_t *)&unk_1EF7DEDE0);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF81A160);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF81A200);
}

unint64_t sub_1C304B844()
{
  unint64_t result;

  result = qword_1EF7DE090;
  if (!qword_1EF7DE090)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginType, &type metadata for Com_Apple_Siri_Product_Proto_OriginType);
    atomic_store(result, (unint64_t *)&qword_1EF7DE090);
  }
  return result;
}

unint64_t sub_1C304B888()
{
  unint64_t result;

  result = qword_1EF819F90;
  if (!qword_1EF819F90)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ValueType, &type metadata for Com_Apple_Siri_Product_Proto_ValueType);
    atomic_store(result, (unint64_t *)&qword_1EF819F90);
  }
  return result;
}

unint64_t sub_1C304B8D0()
{
  unint64_t result;

  result = qword_1EF819FE0;
  if (!qword_1EF819FE0)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ValueType, &type metadata for Com_Apple_Siri_Product_Proto_ValueType);
    atomic_store(result, (unint64_t *)&qword_1EF819FE0);
  }
  return result;
}

unint64_t sub_1C304B918()
{
  unint64_t result;

  result = qword_1EF819FE8;
  if (!qword_1EF819FE8)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ValueType, &type metadata for Com_Apple_Siri_Product_Proto_ValueType);
    atomic_store(result, (unint64_t *)&qword_1EF819FE8);
  }
  return result;
}

unint64_t sub_1C304B960()
{
  unint64_t result;

  result = qword_1EF819FF0;
  if (!qword_1EF819FF0)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ValueType, &type metadata for Com_Apple_Siri_Product_Proto_ValueType);
    atomic_store(result, (unint64_t *)&qword_1EF819FF0);
  }
  return result;
}

uint64_t sub_1C304B9A4()
{
  return sub_1C3014264(&qword_1EF819FF8, &qword_1EF81A000);
}

unint64_t sub_1C304B9CC()
{
  unint64_t result;

  result = qword_1EF7DE098;
  if (!qword_1EF7DE098)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginType, &type metadata for Com_Apple_Siri_Product_Proto_OriginType);
    atomic_store(result, (unint64_t *)&qword_1EF7DE098);
  }
  return result;
}

unint64_t sub_1C304BA14()
{
  unint64_t result;

  result = qword_1EF7DE0A8;
  if (!qword_1EF7DE0A8)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginType, &type metadata for Com_Apple_Siri_Product_Proto_OriginType);
    atomic_store(result, (unint64_t *)&qword_1EF7DE0A8);
  }
  return result;
}

unint64_t sub_1C304BA5C()
{
  unint64_t result;

  result = qword_1EF7DE0A0;
  if (!qword_1EF7DE0A0)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginType, &type metadata for Com_Apple_Siri_Product_Proto_OriginType);
    atomic_store(result, (unint64_t *)&qword_1EF7DE0A0);
  }
  return result;
}

uint64_t sub_1C304BAA0()
{
  return sub_1C3014264(&qword_1EF81A008, &qword_1EF81A010);
}

unint64_t sub_1C304BAC8()
{
  unint64_t result;

  result = qword_1EF81A018;
  if (!qword_1EF81A018)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_MitigatorClassification, &type metadata for Com_Apple_Siri_Product_Proto_MitigatorClassification);
    atomic_store(result, (unint64_t *)&qword_1EF81A018);
  }
  return result;
}

unint64_t sub_1C304BB10()
{
  unint64_t result;

  result = qword_1EF81A020;
  if (!qword_1EF81A020)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_MitigatorClassification, &type metadata for Com_Apple_Siri_Product_Proto_MitigatorClassification);
    atomic_store(result, (unint64_t *)&qword_1EF81A020);
  }
  return result;
}

unint64_t sub_1C304BB58()
{
  unint64_t result;

  result = qword_1EF81A028;
  if (!qword_1EF81A028)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_MitigatorClassification, &type metadata for Com_Apple_Siri_Product_Proto_MitigatorClassification);
    atomic_store(result, (unint64_t *)&qword_1EF81A028);
  }
  return result;
}

uint64_t sub_1C304BB9C()
{
  return sub_1C3014264(&qword_1EF81A030, &qword_1EF81A038);
}

unint64_t sub_1C304BBC4()
{
  unint64_t result;

  result = qword_1EF81A040;
  if (!qword_1EF81A040)
  {
    result = MEMORY[0x1C3BD1B4C]("혘$xv\n", &type metadata for Com_Apple_Siri_Product_Proto_MetaDomainAction);
    atomic_store(result, (unint64_t *)&qword_1EF81A040);
  }
  return result;
}

unint64_t sub_1C304BC0C()
{
  unint64_t result;

  result = qword_1EF81A048;
  if (!qword_1EF81A048)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_MetaDomainAction, &type metadata for Com_Apple_Siri_Product_Proto_MetaDomainAction);
    atomic_store(result, (unint64_t *)&qword_1EF81A048);
  }
  return result;
}

unint64_t sub_1C304BC54()
{
  unint64_t result;

  result = qword_1EF81A050;
  if (!qword_1EF81A050)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_MetaDomainAction, &type metadata for Com_Apple_Siri_Product_Proto_MetaDomainAction);
    atomic_store(result, (unint64_t *)&qword_1EF81A050);
  }
  return result;
}

uint64_t sub_1C304BC98()
{
  return sub_1C3014264(&qword_1EF81A058, &qword_1EF81A060);
}

uint64_t sub_1C304BCBC()
{
  return sub_1C2FF6DE0(&qword_1EF7DEB18, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
}

uint64_t sub_1C304BCE8()
{
  return sub_1C2FF6DE0(&qword_1EF7DEB10, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
}

uint64_t sub_1C304BD14()
{
  return sub_1C2FF6DE0(&qword_1EF819F70, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
}

uint64_t sub_1C304BD40()
{
  return sub_1C2FF6DE0(&qword_1EF81A068, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
}

uint64_t sub_1C304BD6C()
{
  return sub_1C2FF6DE0(&qword_1EF7DE7A0, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
}

uint64_t sub_1C304BD98()
{
  return sub_1C2FF6DE0(&qword_1EF7DE798, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
}

uint64_t sub_1C304BDC4()
{
  return sub_1C2FF6DE0(&qword_1EF819F78, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
}

uint64_t sub_1C304BDF0()
{
  return sub_1C2FF6DE0(&qword_1EF81A070, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
}

uint64_t sub_1C304BE1C()
{
  return sub_1C2FF6DE0(&qword_1EF7DDC60, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Origin);
}

uint64_t sub_1C304BE48()
{
  return sub_1C2FF6DE0(&qword_1EF7DDC58, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Origin);
}

uint64_t sub_1C304BE74()
{
  return sub_1C2FF6DE0(&qword_1EF819F80, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Origin);
}

uint64_t sub_1C304BEA0()
{
  return sub_1C2FF6DE0(&qword_1EF81A078, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Origin);
}

uint64_t sub_1C304BECC()
{
  return sub_1C2FF6DE0(&qword_1EF7DEC50, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
}

uint64_t sub_1C304BEF8()
{
  return sub_1C2FF6DE0(&qword_1EF7DEC48, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
}

uint64_t sub_1C304BF24()
{
  return sub_1C2FF6DE0(&qword_1EF819F88, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
}

uint64_t sub_1C304BF50()
{
  return sub_1C2FF6DE0(&qword_1EF81A080, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
}

uint64_t sub_1C304BF7C()
{
  return sub_1C2FF6DE0(&qword_1EF7DE148, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ElementValue);
}

uint64_t sub_1C304BFA8()
{
  return sub_1C2FF6DE0(&qword_1EF7DE140, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ElementValue);
}

uint64_t sub_1C304BFD4()
{
  return sub_1C2FF6DE0(&qword_1EF819F98, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ElementValue);
}

uint64_t sub_1C304C000()
{
  return sub_1C2FF6DE0(&qword_1EF81A088, type metadata accessor for Com_Apple_Siri_Product_Proto_ElementValue, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ElementValue);
}

uint64_t sub_1C304C02C()
{
  return sub_1C2FF6DE0(&qword_1EF7DEA70, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

uint64_t sub_1C304C058()
{
  return sub_1C2FF6DE0(&qword_1EF7DEA68, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

uint64_t sub_1C304C084()
{
  return sub_1C2FF6DE0(&qword_1EF819FA0, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

uint64_t sub_1C304C0B0()
{
  return sub_1C2FF6DE0(&qword_1EF81A090, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

uint64_t sub_1C304C0DC()
{
  return sub_1C2FF6DE0(&qword_1EF7DEBD0, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
}

uint64_t sub_1C304C108()
{
  return sub_1C2FF6DE0(&qword_1EF7DEBC8, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
}

uint64_t sub_1C304C134()
{
  return sub_1C2FF6DE0(&qword_1EF819FA8, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
}

uint64_t sub_1C304C160()
{
  return sub_1C2FF6DE0(&qword_1EF81A098, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
}

uint64_t sub_1C304C18C()
{
  return sub_1C2FF6DE0(&qword_1EF7DDDD0, type metadata accessor for Com_Apple_Siri_Product_Proto_Element, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Element);
}

uint64_t sub_1C304C1B8()
{
  return sub_1C2FF6DE0(&qword_1EF7DDDC8, type metadata accessor for Com_Apple_Siri_Product_Proto_Element, (uint64_t)"퍘$ll\n");
}

uint64_t sub_1C304C1E4()
{
  return sub_1C2FF6DE0(&qword_1EF819FB0, type metadata accessor for Com_Apple_Siri_Product_Proto_Element, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Element);
}

uint64_t sub_1C304C210()
{
  return sub_1C2FF6DE0(&qword_1EF81A0A0, type metadata accessor for Com_Apple_Siri_Product_Proto_Element, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Element);
}

uint64_t sub_1C304C23C()
{
  return sub_1C2FF6DE0(&qword_1EF7DDFF0, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentNode);
}

uint64_t sub_1C304C268()
{
  return sub_1C2FF6DE0(&qword_1EF7DDFE8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentNode);
}

uint64_t sub_1C304C294()
{
  return sub_1C2FF6DE0(&qword_1EF819FB8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentNode);
}

uint64_t sub_1C304C2C0()
{
  return sub_1C2FF6DE0(&qword_1EF81A0A8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentNode);
}

uint64_t sub_1C304C2EC()
{
  return sub_1C2FF6DE0(&qword_1EF7DF078, type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ProtoIntent);
}

uint64_t sub_1C304C318()
{
  return sub_1C2FF6DE0((unint64_t *)&qword_1EF7DF070, type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ProtoIntent);
}

uint64_t sub_1C304C344()
{
  return sub_1C2FF6DE0(&qword_1EF819FC0, type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ProtoIntent);
}

uint64_t sub_1C304C370()
{
  return sub_1C2FF6DE0(&qword_1EF81A0B0, type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_ProtoIntent);
}

uint64_t sub_1C304C39C()
{
  return sub_1C2FF6DE0(&qword_1EF81A0B8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentHierarchy);
}

uint64_t sub_1C304C3C8()
{
  return sub_1C2FF6DE0(&qword_1EF81A0C0, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentHierarchy);
}

uint64_t sub_1C304C3F4()
{
  return sub_1C2FF6DE0(&qword_1EF819FD8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentHierarchy);
}

uint64_t sub_1C304C420()
{
  return sub_1C2FF6DE0(&qword_1EF81A0C8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentHierarchy, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntentHierarchy);
}

uint64_t sub_1C304C44C()
{
  return sub_1C2FF6DE0(&qword_1EF81A0D0, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
}

uint64_t sub_1C304C478()
{
  return sub_1C2FF6DE0(&qword_1EF819FC8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
}

uint64_t sub_1C304C4A4()
{
  return sub_1C2FF6DE0(&qword_1EF819FD0, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
}

uint64_t sub_1C304C4D0()
{
  return sub_1C2FF6DE0(qword_1EF81A0D8, type metadata accessor for Com_Apple_Siri_Product_Proto_IntegerList, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_IntegerList);
}

uint64_t sub_1C304C500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C303CB48(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin, &qword_1EF7DEB60);
}

uint64_t sub_1C304C534@<X0>(uint64_t a1@<X8>)
{
  return Com_Apple_Siri_Product_Proto_Origin.matchingSpan.getter(a1);
}

uint64_t sub_1C304C554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C303A254(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan);
}

uint64_t sub_1C304C578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C303A254(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin);
}

uint64_t sub_1C304C5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C303C28C(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement);
}

uint64_t sub_1C304C5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C303C28C(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_NonTerminalElement);
}

uint64_t sub_1C304C5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C303CB48(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_Element, type metadata accessor for Com_Apple_Siri_Product_Proto_IntentNode, &qword_1EF7DDE18);
}

double sub_1C304C628@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  swift_beginAccess();
  result = *(double *)(v3 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1C304C688@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 40);
  return result;
}

uint64_t sub_1C304C6E0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 41);
  return result;
}

uint64_t sub_1C304C738@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 42);
  return result;
}

uint64_t sub_1C304C790@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 44);
  return result;
}

uint64_t sub_1C304C7E8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 48);
  return result;
}

uint64_t sub_1C304C840@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 52);
  return result;
}

uint64_t sub_1C304C898@<X0>(_QWORD *a1@<X8>)
{
  return Com_Apple_Siri_Product_Proto_ProtoIntent.nlState.getter(a1);
}

uint64_t sub_1C304C8CC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_41Tm(a1, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger, a2);
}

uint64_t sub_1C304C8D8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C303F998(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__invalidVoiceTrigger);
}

uint64_t sub_1C304C8F4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_41Tm(a1, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested, a2);
}

uint64_t keypath_get_41Tm@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent(0) + 20))
               + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_1C304C968(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C303F998(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__suggested);
}

uint64_t sub_1C304C984@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C303FD88(a1, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__metaDomainAction, a2);
}

uint64_t sub_1C304C9A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C303FDF4(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__metaDomainAction);
}

uint64_t sub_1C304C9BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C303FD88(a1, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__intentTree, a2);
}

uint64_t sub_1C304C9D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C303FDF4(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology40Com_Apple_Siri_Product_Proto_ProtoIntentP33_942AB7175EC71BF9D0D08DC04D18C2E013_StorageClass__intentTree);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_ValueType(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_ValueType(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1C304CA58(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1C304CA74(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Com_Apple_Siri_Product_Proto_ValueType()
{
  return &type metadata for Com_Apple_Siri_Product_Proto_ValueType;
}

ValueMetadata *type metadata accessor for Com_Apple_Siri_Product_Proto_OriginType()
{
  return &type metadata for Com_Apple_Siri_Product_Proto_OriginType;
}

ValueMetadata *type metadata accessor for Com_Apple_Siri_Product_Proto_MitigatorClassification()
{
  return &type metadata for Com_Apple_Siri_Product_Proto_MitigatorClassification;
}

ValueMetadata *type metadata accessor for Com_Apple_Siri_Product_Proto_MetaDomainAction()
{
  return &type metadata for Com_Apple_Siri_Product_Proto_MetaDomainAction;
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_AdjustmentReason(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C3378914();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_AdjustmentReason(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for Com_Apple_Siri_Product_Proto_AdjustmentReason(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for Com_Apple_Siri_Product_Proto_AdjustmentReason(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for Com_Apple_Siri_Product_Proto_AdjustmentReason(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for Com_Apple_Siri_Product_Proto_AdjustmentReason(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_AdjustmentReason()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C304CDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C3378914();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_AdjustmentReason()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C304CE68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C3378914();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C304CEDC()
{
  return sub_1C304FA1C();
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_DerivedOrigin(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C3378914();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v7 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = v15[1];
      *v14 = *v15;
      v14[1] = v19;
      v20 = v15[3];
      v14[2] = v15[2];
      v14[3] = v20;
      v21 = *(int *)(v16 + 24);
      v22 = (char *)v14 + v21;
      v23 = (char *)v15 + v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v22, v23, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_DerivedOrigin(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C3378914();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 24), v5);
  }
  return result;
}

_QWORD *initializeWithCopy for Com_Apple_Siri_Product_Proto_DerivedOrigin(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = v13[1];
    *v12 = *v13;
    v12[1] = v17;
    v18 = v13[3];
    v12[2] = v13[2];
    v12[3] = v18;
    v19 = *(int *)(v14 + 24);
    v20 = (char *)v12 + v19;
    v21 = (char *)v13 + v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v20, v21, v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *assignWithCopy for Com_Apple_Siri_Product_Proto_DerivedOrigin(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v9);
      return a1;
    }
    sub_1C2FF6CC0((uint64_t)v13, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
  v19 = *(int *)(v15 + 24);
  v20 = &v13[v19];
  v21 = &v14[v19];
  v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v20, v21, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_QWORD *initializeWithTake for Com_Apple_Siri_Product_Proto_DerivedOrigin(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = v13[1];
    *v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *assignWithTake for Com_Apple_Siri_Product_Proto_DerivedOrigin(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      v22 = *((_QWORD *)v14 + 1);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = v22;
      swift_bridgeObjectRelease();
      v23 = *((_QWORD *)v14 + 3);
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = v23;
      swift_bridgeObjectRelease();
      v11(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v9);
      return a1;
    }
    sub_1C2FF6CC0((uint64_t)v13, type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  v19 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v19;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_DerivedOrigin()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C304D694(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C3378914();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_DerivedOrigin()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1C304D744(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1C3378914();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1C304D7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C305475C(a1, a2, a3, MEMORY[0x1E0DE9D18] + 64, &qword_1EF7DEB68, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason);
}

_QWORD *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_Origin(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v8 = *v9;
        v17 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
        v18 = *(int *)(v17 + 20);
        v37 = (char *)v9 + v18;
        v39 = (char *)v8 + v18;
        v19 = sub_1C3378914();
        v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v39, v37, v19);
        v20 = *(int *)(v17 + 24);
        v21 = (_QWORD *)((char *)v8 + v20);
        v22 = (_QWORD *)((char *)v9 + v20);
        v23 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
        v38 = *(_QWORD *)(v23 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48))(v22, 1, v23))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v26 = v22[1];
          *v21 = *v22;
          v21[1] = v26;
          v27 = v22[3];
          v21[2] = v22[2];
          v21[3] = v27;
          v28 = *(int *)(v23 + 24);
          v35 = (char *)v21 + v28;
          v29 = (char *)v22 + v28;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v36(v35, v29, v19);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v21, 0, 1, v23);
        }
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v15 = sub_1C3378914();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v8, v9, v15);
        v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
        *(_QWORD *)((char *)v8 + *(int *)(v16 + 20)) = *(_QWORD *)((char *)v9 + *(int *)(v16 + 20));
        swift_retain();
      }
      else
      {
        v25 = v9[1];
        *v8 = *v9;
        v8[1] = v25;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v30 = *(int *)(a3 + 24);
    v31 = (char *)v4 + v30;
    v32 = (uint64_t)a2 + v30;
    v33 = sub_1C3378914();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  }
  return v4;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_Origin(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        swift_bridgeObjectRelease();
        v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
        v11 = v4 + *(int *)(v10 + 20);
        v12 = sub_1C3378914();
        v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
        v13(v11, v12);
        v14 = v4 + *(int *)(v10 + 24);
        v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v13(v14 + *(int *)(v15 + 24), v12);
        }
        break;
      case 1:
        v16 = sub_1C3378914();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v4, v16);
        type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
        swift_release();
        break;
      case 0:
        swift_bridgeObjectRelease();
        break;
    }
  }
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for Com_Apple_Siri_Product_Proto_Origin(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *v7 = *v8;
      v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
      v16 = *(int *)(v15 + 20);
      v35 = (char *)v8 + v16;
      v37 = (char *)v7 + v16;
      v17 = sub_1C3378914();
      v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v34(v37, v35, v17);
      v18 = *(int *)(v15 + 24);
      v19 = (_QWORD *)((char *)v7 + v18);
      v20 = (_QWORD *)((char *)v8 + v18);
      v21 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      v36 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(v20, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v24 = v20[1];
        *v19 = *v20;
        v19[1] = v24;
        v25 = v20[3];
        v19[2] = v20[2];
        v19[3] = v25;
        v26 = *(int *)(v21 + 24);
        v33 = (char *)v19 + v26;
        v27 = (char *)v20 + v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34(v33, v27, v17);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v19, 0, 1, v21);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v13 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v7, v8, v13);
      v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
      *(_QWORD *)((char *)v7 + *(int *)(v14 + 20)) = *(_QWORD *)((char *)v8 + *(int *)(v14 + 20));
      swift_retain();
    }
    else
    {
      v23 = v8[1];
      *v7 = *v8;
      v7[1] = v23;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v28 = *(int *)(a3 + 24);
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

uint64_t assignWithCopy for Com_Apple_Siri_Product_Proto_Origin(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v8 = *v9;
        v22 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
        v23 = *(int *)(v22 + 20);
        v52 = (char *)v9 + v23;
        v55 = (char *)v8 + v23;
        v24 = sub_1C3378914();
        v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v51(v55, v52, v24);
        v25 = *(int *)(v22 + 24);
        v26 = (_QWORD *)((char *)v8 + v25);
        v27 = (_QWORD *)((char *)v9 + v25);
        v28 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
        v53 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v53 + 48))(v27, 1, v28))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          *v26 = *v27;
          v26[1] = v27[1];
          v26[2] = v27[2];
          v26[3] = v27[3];
          v41 = *(int *)(v28 + 24);
          v50 = (char *)v26 + v41;
          v42 = (char *)v27 + v41;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v51(v50, v42, v24);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v26, 0, 1, v28);
        }
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v16 = sub_1C3378914();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v8, v9, v16);
        v17 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
        *(_QWORD *)((char *)v8 + *(int *)(v17 + 20)) = *(_QWORD *)((char *)v9 + *(int *)(v17 + 20));
        swift_retain();
      }
      else
      {
        *v8 = *v9;
        v8[1] = v9[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_22;
    }
LABEL_8:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_22;
  }
  if (v14)
  {
    sub_1C2FF6CC0((uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    goto LABEL_8;
  }
  if ((uint64_t *)a1 != a2)
  {
    sub_1C2FF6CC0((uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 2)
    {
      *v8 = *v9;
      v30 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
      v31 = *(int *)(v30 + 20);
      v56 = (char *)v9 + v31;
      v58 = (char *)v8 + v31;
      v32 = sub_1C3378914();
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
      swift_bridgeObjectRetain();
      v34 = v56;
      v57 = v33;
      v33(v58, v34, v32);
      v35 = *(int *)(v30 + 24);
      v36 = (_QWORD *)((char *)v8 + v35);
      v37 = (_QWORD *)((char *)v9 + v35);
      v38 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        *v36 = *v37;
        v36[1] = v37[1];
        v36[2] = v37[2];
        v36[3] = v37[3];
        v48 = *(int *)(v38 + 24);
        v54 = (char *)v36 + v48;
        v49 = (char *)v37 + v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v57(v54, v49, v32);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
    }
    else if (v19 == 1)
    {
      v20 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v9, v20);
      v21 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
      *(_QWORD *)((char *)v8 + *(int *)(v21 + 20)) = *(_QWORD *)((char *)v9 + *(int *)(v21 + 20));
      swift_retain();
    }
    else
    {
      *v8 = *v9;
      v8[1] = v9[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_22:
  v43 = *(int *)(a3 + 24);
  v44 = a1 + v43;
  v45 = (uint64_t)a2 + v43;
  v46 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for Com_Apple_Siri_Product_Proto_Origin(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(char *, char *);
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *v7 = *v8;
      v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
      v16 = *(int *)(v15 + 20);
      v17 = (char *)v7 + v16;
      v18 = (char *)v8 + v16;
      v19 = sub_1C3378914();
      v32 = *(void (**)(char *, char *))(*(_QWORD *)(v19 - 8) + 32);
      v33 = v19;
      v32(v17, v18);
      v20 = *(int *)(v15 + 24);
      v21 = (_OWORD *)((char *)v7 + v20);
      v22 = (_OWORD *)((char *)v8 + v20);
      v23 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        v26 = v22[1];
        *v21 = *v22;
        v21[1] = v26;
        ((void (*)(char *, char *, uint64_t))v32)((char *)v21 + *(int *)(v23 + 24), (char *)v22 + *(int *)(v23 + 24), v33);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v7, v8, *(_QWORD *)(v10 + 64));
LABEL_11:
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
        goto LABEL_12;
      }
      v13 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
      v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
      *(_QWORD *)((char *)v7 + *(int *)(v14 + 20)) = *(_QWORD *)((char *)v8 + *(int *)(v14 + 20));
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_11;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_12:
  v27 = *(int *)(a3 + 24);
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for Com_Apple_Siri_Product_Proto_Origin(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v49;
  void (*v50)(char *, char *);
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v7 = *v8;
        v21 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
        v22 = *(int *)(v21 + 20);
        v23 = (char *)v7 + v22;
        v24 = (char *)v8 + v22;
        v25 = sub_1C3378914();
        v50 = *(void (**)(char *, char *))(*(_QWORD *)(v25 - 8) + 32);
        v51 = v25;
        v50(v23, v24);
        v26 = *(int *)(v21 + 24);
        v27 = (_OWORD *)((char *)v7 + v26);
        v28 = (_OWORD *)((char *)v8 + v26);
        v29 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v43 = v28[1];
          *v27 = *v28;
          v27[1] = v43;
          ((void (*)(char *, char *, uint64_t))v50)((char *)v27 + *(int *)(v29 + 24), (char *)v28 + *(int *)(v29 + 24), v51);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(v7, v8, *(_QWORD *)(v10 + 64));
LABEL_22:
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
          goto LABEL_23;
        }
        v15 = sub_1C3378914();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v7, v8, v15);
        v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
        *(_QWORD *)((char *)v7 + *(int *)(v16 + 20)) = *(_QWORD *)((char *)v8 + *(int *)(v16 + 20));
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_22;
    }
    goto LABEL_8;
  }
  if (v13)
  {
    sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
LABEL_8:
    v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8) - 8) + 64);
LABEL_9:
    memcpy(v7, v8, v17);
    goto LABEL_23;
  }
  if (a1 == a2)
    goto LABEL_23;
  sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  v18 = swift_getEnumCaseMultiPayload();
  if (v18 != 2)
  {
    if (v18 == 1)
    {
      v19 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v7, v8, v19);
      v20 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
      *(_QWORD *)((char *)v7 + *(int *)(v20 + 20)) = *(_QWORD *)((char *)v8 + *(int *)(v20 + 20));
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    }
    v17 = *(_QWORD *)(v10 + 64);
    goto LABEL_9;
  }
  *v7 = *v8;
  v32 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
  v33 = *(int *)(v32 + 20);
  v34 = (char *)v7 + v33;
  v35 = (char *)v8 + v33;
  v36 = sub_1C3378914();
  v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32);
  v52(v34, v35, v36);
  v37 = *(int *)(v32 + 24);
  v38 = (_OWORD *)((char *)v7 + v37);
  v39 = (_OWORD *)((char *)v8 + v37);
  v40 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v49 = v39[1];
    *v38 = *v39;
    v38[1] = v49;
    v52((char *)v38 + *(int *)(v40 + 24), (char *)v39 + *(int *)(v40 + 24), v36);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  swift_storeEnumTagMultiPayload();
LABEL_23:
  v44 = *(int *)(a3 + 24);
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v45, v46, v47);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_Origin()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C304E9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 20);
  }
  else
  {
    v8 = sub_1C3378914();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_Origin()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C304EA2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 20);
  }
  else
  {
    v10 = sub_1C3378914();
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_1C304EAA8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C2FF90EC(319, &qword_1EF7DDBE0, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
  if (v0 <= 0x3F)
  {
    sub_1C3378914();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
      v11 = *(int *)(v10 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1C3378914();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      v16 = *(int *)(v10 + 24);
      v17 = (uint64_t *)((char *)a1 + v16);
      v18 = (uint64_t *)((char *)a2 + v16);
      v19 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v23 = v18[1];
        *v17 = *v18;
        v17[1] = v23;
        v24 = v18[3];
        v17[2] = v18[2];
        v17[3] = v24;
        v25 = *(int *)(v19 + 24);
        v26 = (char *)v17 + v25;
        v27 = (char *)v18 + v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15(v26, v27, v14);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_1C3378914();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
      swift_retain();
    }
    else
    {
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
      v4 = a1 + *(int *)(v3 + 20);
      v5 = sub_1C3378914();
      v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v9(v4, v5);
      v6 = a1 + *(int *)(v3 + 24);
      v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
      if (!(_DWORD)result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 24), v5);
      }
      break;
    case 1:
      v8 = sub_1C3378914();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
      return swift_release();
    case 0:
      return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
    v8 = *(int *)(v7 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C3378914();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(v7 + 24);
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v20 = v15[1];
      *v14 = *v15;
      v14[1] = v20;
      v21 = v15[3];
      v14[2] = v15[2];
      v14[3] = v21;
      v22 = *(int *)(v16 + 24);
      v23 = (char *)v14 + v22;
      v24 = (char *)v15 + v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v23, v24, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_1C3378914();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
    *(_QWORD *)((char *)a1 + *(int *)(v6 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 20));
    swift_retain();
  }
  else
  {
    v19 = a2[1];
    *a1 = *a2;
    a1[1] = v19;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  if (a1 != a2)
  {
    sub_1C2FF6CC0((uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
      v8 = *(int *)(v7 + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1C3378914();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      v13 = *(int *)(v7 + 24);
      v14 = (_QWORD *)((char *)a1 + v13);
      v15 = (_QWORD *)((char *)a2 + v13);
      v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        *v14 = *v15;
        v14[1] = v15[1];
        v14[2] = v15[2];
        v14[3] = v15[3];
        v19 = *(int *)(v16 + 24);
        v20 = (char *)v14 + v19;
        v21 = (char *)v15 + v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v12(v20, v21, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
      *(_QWORD *)((char *)a1 + *(int *)(v6 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 20));
      swift_retain();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
    v10 = *(int *)(v9 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1C3378914();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
    v14(v11, v12, v13);
    v15 = *(int *)(v9 + 24);
    v16 = (_OWORD *)((char *)a1 + v15);
    v17 = (_OWORD *)((char *)a2 + v15);
    v18 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v21 = v17[1];
      *v16 = *v17;
      v16[1] = v21;
      v14((char *)v16 + *(int *)(v18 + 24), (char *)v17 + *(int *)(v18 + 24), v13);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1C3378914();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
    *(_QWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 20));
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithTake for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  if (a1 != a2)
  {
    sub_1C2FF6CC0((uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
      v10 = *(int *)(v9 + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1C3378914();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
      v14(v11, v12, v13);
      v15 = *(int *)(v9 + 24);
      v16 = (_OWORD *)((char *)a1 + v15);
      v17 = (_OWORD *)((char *)a2 + v15);
      v18 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v21 = v17[1];
        *v16 = *v17;
        v16[1] = v21;
        v14((char *)v16 + *(int *)(v18 + 24), (char *)v17 + *(int *)(v18 + 24), v13);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      goto LABEL_9;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
      *(_QWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 20));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_Value.OneOf_Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_Value.OneOf_Value(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1C304F5AC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C304F5BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_OriginalElementValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1C3378914();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_OriginalElementValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for Com_Apple_Siri_Product_Proto_OriginalElementValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1C3378914();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for Com_Apple_Siri_Product_Proto_OriginalElementValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for Com_Apple_Siri_Product_Proto_OriginalElementValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for Com_Apple_Siri_Product_Proto_OriginalElementValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_OriginalElementValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C304F914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C3378914();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_OriginalElementValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C304F99C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C3378914();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C304FA10()
{
  return sub_1C304FA1C();
}

uint64_t sub_1C304FA1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C3378914();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_ElementValue(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, _QWORD, uint64_t, uint64_t);
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[6];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1C3378914();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = (_BYTE *)(v7 + v13);
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v66 = v11;
      v67 = v17;
      v68 = v12;
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v14[8] = v15[8];
      v19 = *(int *)(v16 + 20);
      v20 = &v14[v19];
      v21 = &v15[v19];
      v22 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v25 = v67;
        v12 = v68;
        v11 = v66;
        v68((uint64_t)&v14[*(int *)(v16 + 24)], (uint64_t)&v15[*(int *)(v16 + 24)], v66);
      }
      else
      {
        v64 = v23;
        v65 = v20;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v63 = v22;
        if (EnumCaseMultiPayload == 2)
        {
          *v20 = *v21;
          v28 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
          v29 = *(int *)(v28 + 20);
          v59 = (char *)v21 + v29;
          v61 = (char *)v20 + v29;
          swift_bridgeObjectRetain();
          v11 = v66;
          v68((uint64_t)v61, (uint64_t)v59, v66);
          v30 = *(int *)(v28 + 24);
          v31 = (_QWORD *)((char *)v20 + v30);
          v32 = (_QWORD *)((char *)v21 + v30);
          v33 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
          v60 = *(_QWORD *)(v33 - 8);
          v62 = v33;
          if ((*(unsigned int (**)(_QWORD *, uint64_t))(v60 + 48))(v32, 1))
          {
            v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            v36 = v32[1];
            *v31 = *v32;
            v31[1] = v36;
            v37 = v32[3];
            v31[2] = v32[2];
            v31[3] = v37;
            v38 = *(int *)(v62 + 24);
            v58 = (char *)v31 + v38;
            v39 = (char *)v32 + v38;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v68((uint64_t)v58, (uint64_t)v39, v66);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v31, 0, 1, v62);
          }
          v20 = v65;
        }
        else
        {
          v11 = v66;
          if (EnumCaseMultiPayload == 1)
          {
            v68((uint64_t)v20, (uint64_t)v21, v66);
            v27 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
            *(_QWORD *)((char *)v20 + *(int *)(v27 + 20)) = *(_QWORD *)((char *)v21 + *(int *)(v27 + 20));
            swift_retain();
          }
          else
          {
            v35 = v21[1];
            *v20 = *v21;
            v20[1] = v35;
            swift_bridgeObjectRetain();
          }
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v20, 0, 1, v63);
        v25 = v67;
        v12 = v68;
        v68((uint64_t)&v14[*(int *)(v16 + 24)], (uint64_t)&v15[*(int *)(v16 + 24)], v11);
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v14, 0, 1, v16);
    }
    v40 = a3[8];
    v41 = (_QWORD *)(v7 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      *(_BYTE *)v41 = *(_BYTE *)v42;
      v46 = v42[2];
      v41[1] = v42[1];
      v41[2] = v46;
      v47 = *(int *)(v43 + 24);
      v48 = (char *)v41 + v47;
      v49 = (char *)v42 + v47;
      swift_bridgeObjectRetain();
      v12((uint64_t)v48, (uint64_t)v49, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    v50 = a3[9];
    v51 = (char *)(v7 + v50);
    v52 = (char *)a2 + v50;
    v53 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      v12((uint64_t)v51, (uint64_t)v52, v11);
      *(_QWORD *)&v51[*(int *)(v53 + 20)] = *(_QWORD *)&v52[*(int *)(v53 + 20)];
      v56 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56);
      swift_retain();
      v56(v51, 0, 1, v53);
    }
  }
  return v7;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_ElementValue(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_1C3378914();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = a1 + a2[7];
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = v7 + *(int *)(v8 + 20);
    v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 2:
          swift_bridgeObjectRelease();
          v17 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
          v6(v9 + *(int *)(v17 + 20), v5);
          v18 = v9 + *(int *)(v17 + 24);
          v19 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v6(v18 + *(int *)(v19 + 24), v5);
          }
          break;
        case 1:
          v6(v9, v5);
          type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
          swift_release();
          break;
        case 0:
          swift_bridgeObjectRelease();
          break;
      }
    }
    v6(v7 + *(int *)(v8 + 24), v5);
  }
  v11 = a1 + a2[8];
  v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    swift_bridgeObjectRelease();
    v6(v11 + *(int *)(v12 + 24), v5);
  }
  v13 = a1 + a2[9];
  v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14);
  if (!(_DWORD)result)
  {
    v6(v13, v5);
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for Com_Apple_Siri_Product_Proto_ElementValue(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C3378914();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = (_BYTE *)(a1 + v12);
  v14 = (_BYTE *)(a2 + v12);
  v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v65 = v10;
    v66 = v16;
    v67 = v11;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v18 = *(int *)(v15 + 20);
    v19 = &v13[v18];
    v20 = &v14[v18];
    v21 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      v24 = v66;
      v11 = v67;
      v10 = v65;
      v67((uint64_t)&v13[*(int *)(v15 + 24)], (uint64_t)&v14[*(int *)(v15 + 24)], v65);
    }
    else
    {
      v63 = v22;
      v64 = v19;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v62 = v21;
      if (EnumCaseMultiPayload == 2)
      {
        *v19 = *v20;
        v27 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
        v28 = *(int *)(v27 + 20);
        v58 = (char *)v20 + v28;
        v60 = (char *)v19 + v28;
        swift_bridgeObjectRetain();
        v10 = v65;
        v67((uint64_t)v60, (uint64_t)v58, v65);
        v29 = *(int *)(v27 + 24);
        v30 = (_QWORD *)((char *)v19 + v29);
        v31 = (_QWORD *)((char *)v20 + v29);
        v32 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
        v59 = *(_QWORD *)(v32 - 8);
        v61 = v32;
        if ((*(unsigned int (**)(_QWORD *, uint64_t))(v59 + 48))(v31, 1))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          v35 = v31[1];
          *v30 = *v31;
          v30[1] = v35;
          v36 = v31[3];
          v30[2] = v31[2];
          v30[3] = v36;
          v37 = *(int *)(v61 + 24);
          v57 = (char *)v30 + v37;
          v38 = (char *)v31 + v37;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v67((uint64_t)v57, (uint64_t)v38, v65);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v30, 0, 1, v61);
        }
        v19 = v64;
      }
      else
      {
        v10 = v65;
        if (EnumCaseMultiPayload == 1)
        {
          v67((uint64_t)v19, (uint64_t)v20, v65);
          v26 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
          *(_QWORD *)((char *)v19 + *(int *)(v26 + 20)) = *(_QWORD *)((char *)v20 + *(int *)(v26 + 20));
          swift_retain();
        }
        else
        {
          v34 = v20[1];
          *v19 = *v20;
          v19[1] = v34;
          swift_bridgeObjectRetain();
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v19, 0, 1, v62);
      v24 = v66;
      v11 = v67;
      v67((uint64_t)&v13[*(int *)(v15 + 24)], (uint64_t)&v14[*(int *)(v15 + 24)], v10);
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v15);
  }
  v39 = a3[8];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  v42 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    *(_BYTE *)v40 = *(_BYTE *)v41;
    v45 = v41[2];
    v40[1] = v41[1];
    v40[2] = v45;
    v46 = *(int *)(v42 + 24);
    v47 = (char *)v40 + v46;
    v48 = (char *)v41 + v46;
    swift_bridgeObjectRetain();
    v11((uint64_t)v47, (uint64_t)v48, v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v49 = a3[9];
  v50 = (char *)(a1 + v49);
  v51 = (char *)(a2 + v49);
  v52 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    v11((uint64_t)v50, (uint64_t)v51, v10);
    *(_QWORD *)&v50[*(int *)(v52 + 20)] = *(_QWORD *)&v51[*(int *)(v52 + 20)];
    v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56);
    swift_retain();
    v55(v50, 0, 1, v52);
  }
  return a1;
}

uint64_t assignWithCopy for Com_Apple_Siri_Product_Proto_ElementValue(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  unsigned int (**v24)(_QWORD *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD *, uint64_t, uint64_t);
  int v33;
  size_t v34;
  void *v35;
  int EnumCaseMultiPayload;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void (**v40)(_QWORD *, _QWORD, uint64_t, uint64_t);
  int v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(_QWORD *, uint64_t, uint64_t);
  int v81;
  int v82;
  uint64_t v83;
  char *v84;
  char *v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(char *, uint64_t, uint64_t);
  int v94;
  int v95;
  void (*v96)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  void (*v109)(char *, char *, uint64_t);
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  _QWORD *__dst;
  void *__dsta;
  int *__dstc;
  _QWORD *__dstb;
  int *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t, uint64_t, uint64_t);
  uint64_t v127;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C3378914();
  v127 = *(_QWORD *)(v10 - 8);
  v126 = *(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 24);
  v126(v8, v9, v10);
  v11 = a3[7];
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      v122 = a3;
      v124 = v10;
      v19 = *(_QWORD *)v13;
      v12[8] = v13[8];
      *(_QWORD *)v12 = v19;
      v20 = *(int *)(v14 + 20);
      v21 = &v12[v20];
      v22 = &v13[v20];
      v23 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
      v24 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v23 - 8);
      if (v24[6](v22, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        a3 = v122;
LABEL_34:
        v10 = v124;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v127 + 16))(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v124);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        goto LABEL_43;
      }
      v115 = v23;
      __dsta = v24;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v37 = v21;
        *v21 = *v22;
        v45 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
        v46 = *(int *)(v45 + 20);
        v101 = (char *)v22 + v46;
        v104 = (char *)v37 + v46;
        v47 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
        swift_bridgeObjectRetain();
        v109 = v47;
        v47(v104, v101, v124);
        v48 = *(int *)(v45 + 24);
        v49 = (_QWORD *)((char *)v37 + v48);
        v50 = (_QWORD *)((char *)v22 + v48);
        v51 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
        v105 = *(_QWORD *)(v51 - 8);
        v52 = v51;
        if ((*(unsigned int (**)(_QWORD *, uint64_t))(v105 + 48))(v50, 1))
        {
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          *v49 = *v50;
          v49[1] = v50[1];
          v49[2] = v50[2];
          v49[3] = v50[3];
          v64 = *(int *)(v52 + 24);
          v103 = (char *)v49 + v64;
          v65 = (char *)v50 + v64;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v109(v103, v65, v124);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v49, 0, 1, v52);
        }
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          v37 = v21;
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v127 + 16))(v21, v22, v124);
          v38 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
          *(_QWORD *)((char *)v21 + *(int *)(v38 + 20)) = *(_QWORD *)((char *)v22 + *(int *)(v38 + 20));
          swift_retain();
          v39 = v23;
          v40 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dsta;
          a3 = v122;
LABEL_33:
          swift_storeEnumTagMultiPayload();
          v40[7](v37, 0, 1, v39);
          goto LABEL_34;
        }
        v37 = v21;
        *v21 = *v22;
        v21[1] = v22[1];
        swift_bridgeObjectRetain();
      }
      v39 = v115;
      v40 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dsta;
      a3 = v122;
      goto LABEL_33;
    }
LABEL_7:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_43;
  }
  if (v18)
  {
    sub_1C2FF6CC0((uint64_t)v12, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
    goto LABEL_7;
  }
  v125 = v10;
  v27 = *(_QWORD *)v13;
  v12[8] = v13[8];
  *(_QWORD *)v12 = v27;
  v28 = *(int *)(v14 + 20);
  v29 = &v12[v28];
  v30 = &v13[v28];
  v31 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  __dst = *(_QWORD **)(v31 - 8);
  v123 = v29;
  v32 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))__dst[6];
  LODWORD(v29) = v32(v29, 1, v31);
  v33 = v32(v30, 1, v31);
  if (!(_DWORD)v29)
  {
    if (!v33)
    {
      if (a1 != a2)
      {
        sub_1C2FF6CC0((uint64_t)v123, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
        v54 = swift_getEnumCaseMultiPayload();
        if (v54 == 2)
        {
          *v123 = *v30;
          v66 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
          v67 = *(int *)(v66 + 20);
          v116 = (char *)v123 + v67;
          __dstc = (int *)v66;
          v113 = (char *)v30 + v67;
          v68 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
          swift_bridgeObjectRetain();
          v68(v116, v113, v125);
          v69 = __dstc[6];
          __dstb = (_QWORD *)((char *)v123 + v69);
          v70 = (_QWORD *)((char *)v30 + v69);
          v71 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
          v114 = *(_QWORD *)(v71 - 8);
          v117 = v71;
          if ((*(unsigned int (**)(_QWORD *, uint64_t))(v114 + 48))(v70, 1))
          {
            v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
            memcpy(__dstb, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          }
          else
          {
            *__dstb = *v70;
            __dstb[1] = v70[1];
            __dstb[2] = v70[2];
            __dstb[3] = v70[3];
            v99 = *(int *)(v117 + 24);
            v108 = (char *)__dstb + v99;
            v100 = (char *)v70 + v99;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v68(v108, v100, v125);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v114 + 56))(__dstb, 0, 1, v117);
          }
        }
        else if (v54 == 1)
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v127 + 16))(v123, v30, v125);
          v55 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
          *(_QWORD *)((char *)v123 + *(int *)(v55 + 20)) = *(_QWORD *)((char *)v30 + *(int *)(v55 + 20));
          swift_retain();
        }
        else
        {
          *v123 = *v30;
          v123[1] = v30[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_42;
    }
    sub_1C2FF6CC0((uint64_t)v123, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
    v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8) - 8) + 64);
    v35 = v123;
    goto LABEL_16;
  }
  if (!v33)
  {
    v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 2)
    {
      *v123 = *v30;
      v111 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
      v56 = *(int *)(v111 + 20);
      v102 = (char *)v30 + v56;
      v106 = (char *)v123 + v56;
      v57 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
      swift_bridgeObjectRetain();
      v110 = v57;
      v57(v106, v102, v125);
      v58 = *(int *)(v111 + 24);
      v59 = (_QWORD *)((char *)v123 + v58);
      v60 = (_QWORD *)((char *)v30 + v58);
      v61 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      v62 = *(_QWORD *)(v61 - 8);
      v112 = v61;
      if ((*(unsigned int (**)(_QWORD *, uint64_t))(v62 + 48))(v60, 1))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        *v59 = *v60;
        v59[1] = v60[1];
        v59[2] = v60[2];
        v59[3] = v60[3];
        v73 = *(int *)(v112 + 24);
        v107 = (char *)v59 + v73;
        v74 = (char *)v60 + v73;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v110(v107, v74, v125);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v112);
      }
      v42 = v123;
    }
    else
    {
      if (v41 == 1)
      {
        v42 = v123;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v127 + 16))(v123, v30, v125);
        v43 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
        *(_QWORD *)((char *)v123 + *(int *)(v43 + 20)) = *(_QWORD *)((char *)v30 + *(int *)(v43 + 20));
        swift_retain();
        v44 = __dst;
LABEL_41:
        swift_storeEnumTagMultiPayload();
        ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v44[7])(v42, 0, 1, v31);
        goto LABEL_42;
      }
      v42 = v123;
      *v123 = *v30;
      v123[1] = v30[1];
      swift_bridgeObjectRetain();
    }
    v44 = __dst;
    goto LABEL_41;
  }
  v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8) - 8) + 64);
  v35 = v123;
LABEL_16:
  memcpy(v35, v30, v34);
LABEL_42:
  v10 = v125;
  v126((uint64_t)&v12[*(int *)(v14 + 24)], (uint64_t)&v13[*(int *)(v14 + 24)], v125);
LABEL_43:
  v75 = a3[8];
  v76 = (_QWORD *)(a1 + v75);
  v77 = (_QWORD *)(a2 + v75);
  v78 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  v79 = *(_QWORD *)(v78 - 8);
  v80 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v79 + 48);
  v81 = v80(v76, 1, v78);
  v82 = v80(v77, 1, v78);
  if (v81)
  {
    if (!v82)
    {
      *(_BYTE *)v76 = *(_BYTE *)v77;
      v76[1] = v77[1];
      v76[2] = v77[2];
      v83 = *(int *)(v78 + 24);
      v84 = (char *)v76 + v83;
      v85 = (char *)v77 + v83;
      v86 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
      swift_bridgeObjectRetain();
      v86(v84, v85, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v82)
  {
    sub_1C2FF6CC0((uint64_t)v76, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
LABEL_48:
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_49;
  }
  *(_BYTE *)v76 = *(_BYTE *)v77;
  v76[1] = v77[1];
  v76[2] = v77[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v126((uint64_t)v76 + *(int *)(v78 + 24), (uint64_t)v77 + *(int *)(v78 + 24), v10);
LABEL_49:
  v88 = a3[9];
  v89 = (char *)(a1 + v88);
  v90 = (char *)(a2 + v88);
  v91 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  v92 = *(_QWORD *)(v91 - 8);
  v93 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48);
  v94 = v93(v89, 1, v91);
  v95 = v93(v90, 1, v91);
  if (!v94)
  {
    if (!v95)
    {
      v126((uint64_t)v89, (uint64_t)v90, v10);
      *(_QWORD *)&v89[*(int *)(v91 + 20)] = *(_QWORD *)&v90[*(int *)(v91 + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1C2FF6CC0((uint64_t)v89, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
    goto LABEL_54;
  }
  if (v95)
  {
LABEL_54:
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
    memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v89, v90, v10);
  *(_QWORD *)&v89[*(int *)(v91 + 20)] = *(_QWORD *)&v90[*(int *)(v91 + 20)];
  v96 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56);
  swift_retain();
  v96(v89, 0, 1, v91);
  return a1;
}

uint64_t initializeWithTake for Com_Apple_Siri_Product_Proto_ElementValue(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  _OWORD *__dst;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C3378914();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = (_BYTE *)(a1 + v12);
  v14 = (_BYTE *)(a2 + v12);
  v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_16;
  }
  v54 = v10;
  v55 = v16;
  v56 = (void (*)(char *, char *, uint64_t))v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v18 = *(int *)(v15 + 20);
  v19 = &v13[v18];
  v20 = &v14[v18];
  v21 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v52 = v22;
    v53 = v19;
    v51 = v21;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *v19 = *(_QWORD *)v20;
      v28 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
      v10 = v54;
      v56((char *)v19 + *(int *)(v28 + 20), &v20[*(int *)(v28 + 20)], v54);
      v29 = *(int *)(v28 + 24);
      __dst = (_OWORD *)((char *)v19 + v29);
      v30 = &v20[v29];
      v31 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      v49 = *(_QWORD *)(v31 - 8);
      v32 = v30;
      v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v30, 1, v31);
      v24 = v55;
      if (v33)
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
        memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v35 = *((_OWORD *)v32 + 1);
        *__dst = *(_OWORD *)v32;
        __dst[1] = v35;
        v56((char *)__dst + *(int *)(v31 + 24), &v32[*(int *)(v31 + 24)], v54);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v49 + 56))(__dst, 0, 1, v31);
      }
      v19 = v53;
      v27 = v51;
    }
    else
    {
      v10 = v54;
      v24 = v55;
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v19, v20, *(_QWORD *)(v52 + 64));
        v27 = v51;
LABEL_14:
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v19, 0, 1, v27);
        v11 = (void (*)(uint64_t, uint64_t, uint64_t))v56;
        v56(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v10);
        goto LABEL_15;
      }
      v56((char *)v19, v20, v54);
      v26 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
      *(_QWORD *)((char *)v19 + *(int *)(v26 + 20)) = *(_QWORD *)&v20[*(int *)(v26 + 20)];
      v27 = v51;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
  memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  v24 = v55;
  v11 = (void (*)(uint64_t, uint64_t, uint64_t))v56;
  v10 = v54;
  v56(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v54);
LABEL_15:
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v15);
LABEL_16:
  v36 = a3[8];
  v37 = (_BYTE *)(a1 + v36);
  v38 = (_BYTE *)(a2 + v36);
  v39 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    *v37 = *v38;
    *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
    v11((uint64_t)&v37[*(int *)(v39 + 24)], (uint64_t)&v38[*(int *)(v39 + 24)], v10);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = a3[9];
  v43 = (char *)(a1 + v42);
  v44 = (char *)(a2 + v42);
  v45 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v11((uint64_t)v43, (uint64_t)v44, v10);
    *(_QWORD *)&v43[*(int *)(v45 + 20)] = *(_QWORD *)&v44[*(int *)(v45 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  return a1;
}

uint64_t assignWithTake for Com_Apple_Siri_Product_Proto_ElementValue(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_BYTE *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  size_t v31;
  char *v32;
  int v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int EnumCaseMultiPayload;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  uint64_t v47;
  uint64_t v48;
  const void *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(_QWORD *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(char *, uint64_t, uint64_t);
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  void (*v89)(char *, char *, uint64_t);
  _OWORD *__dst;
  char *__dsta;
  void (*__dstb)(char *, char *, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  int *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t, uint64_t);
  uint64_t v102;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1C3378914();
  v102 = *(_QWORD *)(v9 - 8);
  v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 40);
  v101(v7, v8, v9);
  v10 = a3[7];
  v11 = (_BYTE *)(a1 + v10);
  v12 = (_BYTE *)(a2 + v10);
  v13 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_1C2FF6CC0((uint64_t)v11, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
      goto LABEL_7;
    }
    v100 = v9;
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
    v25 = *(int *)(v13 + 20);
    v26 = &v11[v25];
    v27 = &v12[v25];
    v28 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
    v95 = *(_QWORD *)(v28 - 8);
    v98 = v26;
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
    LODWORD(v26) = v29(v26, 1, v28);
    v30 = v29(v27, 1, v28);
    if ((_DWORD)v26)
    {
      if (!v30)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *(_QWORD *)v98 = *(_QWORD *)v27;
          v52 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
          v89 = *(void (**)(char *, char *, uint64_t))(v102 + 32);
          v89(&v98[*(int *)(v52 + 20)], &v27[*(int *)(v52 + 20)], v100);
          v53 = *(int *)(v52 + 24);
          __dsta = &v98[v53];
          v54 = &v27[v53];
          v55 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
          v56 = *(_QWORD *)(v55 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
          {
            v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
            memcpy(__dsta, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
          }
          else
          {
            v65 = *((_OWORD *)v54 + 1);
            *(_OWORD *)__dsta = *(_OWORD *)v54;
            *((_OWORD *)__dsta + 1) = v65;
            v89(&__dsta[*(int *)(v55 + 24)], &v54[*(int *)(v55 + 24)], v100);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(__dsta, 0, 1, v55);
          }
          v43 = v95;
          v41 = v98;
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v41 = v98;
          (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v98, v27, v100);
          v42 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
          *(_QWORD *)&v98[*(int *)(v42 + 20)] = *(_QWORD *)&v27[*(int *)(v42 + 20)];
          swift_storeEnumTagMultiPayload();
          v43 = v95;
        }
        else
        {
          v43 = v95;
          v41 = v98;
          memcpy(v98, v27, *(_QWORD *)(v95 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v41, 0, 1, v28);
        goto LABEL_42;
      }
      v31 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8) - 8) + 64);
      v32 = v98;
    }
    else
    {
      if (v30)
      {
        v38 = v98;
        sub_1C2FF6CC0((uint64_t)v98, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
        v39 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8) - 8);
      }
      else
      {
        if (a1 == a2)
          goto LABEL_42;
        v38 = v98;
        sub_1C2FF6CC0((uint64_t)v98, type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail);
        v50 = swift_getEnumCaseMultiPayload();
        if (v50 == 2)
        {
          *(_QWORD *)v98 = *(_QWORD *)v27;
          v59 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
          __dstb = *(void (**)(char *, char *, uint64_t))(v102 + 32);
          __dstb(&v98[*(int *)(v59 + 20)], &v27[*(int *)(v59 + 20)], v100);
          v60 = *(int *)(v59 + 24);
          v94 = &v98[v60];
          v61 = &v27[v60];
          v62 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
          v63 = *(_QWORD *)(v62 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
          {
            v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
            memcpy(v94, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
          }
          else
          {
            v86 = *((_OWORD *)v61 + 1);
            *(_OWORD *)v94 = *(_OWORD *)v61;
            *((_OWORD *)v94 + 1) = v86;
            __dstb(&v94[*(int *)(v62 + 24)], &v61[*(int *)(v62 + 24)], v100);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v94, 0, 1, v62);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_42;
        }
        if (v50 == 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v98, v27, v100);
          v51 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
          *(_QWORD *)&v98[*(int *)(v51 + 20)] = *(_QWORD *)&v27[*(int *)(v51 + 20)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_42;
        }
        v39 = v95;
      }
      v31 = *(_QWORD *)(v39 + 64);
      v32 = v38;
    }
    memcpy(v32, v27, v31);
LABEL_42:
    v9 = v100;
    v101((uint64_t)&v11[*(int *)(v13 + 24)], (uint64_t)&v12[*(int *)(v13 + 24)], v100);
    goto LABEL_43;
  }
  if (v17)
  {
LABEL_7:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_43;
  }
  v97 = a3;
  v99 = v9;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  v18 = *(int *)(v13 + 20);
  v19 = &v11[v18];
  v20 = &v12[v18];
  v21 = type metadata accessor for Com_Apple_Siri_Product_Proto_Origin.OneOf_OriginDetail(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDBD8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    a3 = v97;
  }
  else
  {
    v93 = v21;
    v96 = v22;
    v33 = swift_getEnumCaseMultiPayload();
    if (v33 == 2)
    {
      v34 = v19;
      *v19 = *v20;
      v44 = type metadata accessor for Com_Apple_Siri_Product_Proto_DerivedOrigin(0);
      v88 = *(void (**)(char *, char *, uint64_t))(v102 + 32);
      v88((char *)v19 + *(int *)(v44 + 20), (char *)v20 + *(int *)(v44 + 20), v99);
      v45 = *(int *)(v44 + 24);
      __dst = (_OWORD *)((char *)v19 + v45);
      v46 = (_OWORD *)((char *)v20 + v45);
      v47 = type metadata accessor for Com_Apple_Siri_Product_Proto_AdjustmentReason(0);
      v87 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v87 + 48))(v46, 1, v47))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEB60);
        memcpy(__dst, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v58 = v46[1];
        *__dst = *v46;
        __dst[1] = v58;
        v88((char *)__dst + *(int *)(v47 + 24), (char *)v46 + *(int *)(v47 + 24), v99);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v47);
      }
      v36 = v93;
      v37 = v96;
      a3 = v97;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v34 = v19;
      if (v33 == 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v102 + 32))(v19, v20, v99);
        v35 = type metadata accessor for Com_Apple_Siri_Product_Proto_MatchingSpan(0);
        *(_QWORD *)((char *)v19 + *(int *)(v35 + 20)) = *(_QWORD *)((char *)v20 + *(int *)(v35 + 20));
        v36 = v21;
        swift_storeEnumTagMultiPayload();
        v37 = v96;
      }
      else
      {
        v49 = v20;
        v37 = v96;
        memcpy(v19, v49, *(_QWORD *)(v96 + 64));
        v36 = v21;
      }
      a3 = v97;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  v9 = v99;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v102 + 32))(&v11[*(int *)(v13 + 24)], &v12[*(int *)(v13 + 24)], v99);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_43:
  v66 = a3[8];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (_QWORD *)(a2 + v66);
  v69 = type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue(0);
  v70 = *(_QWORD *)(v69 - 8);
  v71 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v70 + 48);
  v72 = v71(v67, 1, v69);
  v73 = v71(v68, 1, v69);
  if (v72)
  {
    if (!v73)
    {
      *(_BYTE *)v67 = *(_BYTE *)v68;
      *(_OWORD *)(v67 + 1) = *(_OWORD *)(v68 + 1);
      (*(void (**)(char *, char *, uint64_t))(v102 + 32))((char *)v67 + *(int *)(v69 + 24), (char *)v68 + *(int *)(v69 + 24), v9);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v73)
  {
    sub_1C2FF6CC0((uint64_t)v67, type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
LABEL_48:
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_49;
  }
  *(_BYTE *)v67 = *(_BYTE *)v68;
  v85 = v68[2];
  v67[1] = v68[1];
  v67[2] = v85;
  swift_bridgeObjectRelease();
  v101((uint64_t)v67 + *(int *)(v69 + 24), (uint64_t)v68 + *(int *)(v69 + 24), v9);
LABEL_49:
  v75 = a3[9];
  v76 = (char *)(a1 + v75);
  v77 = (char *)(a2 + v75);
  v78 = type metadata accessor for Com_Apple_Siri_Product_Proto_Value(0);
  v79 = *(_QWORD *)(v78 - 8);
  v80 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
  v81 = v80(v76, 1, v78);
  v82 = v80(v77, 1, v78);
  if (!v81)
  {
    if (!v82)
    {
      v101((uint64_t)v76, (uint64_t)v77, v9);
      *(_QWORD *)&v76[*(int *)(v78 + 20)] = *(_QWORD *)&v77[*(int *)(v78 + 20)];
      swift_release();
      return a1;
    }
    sub_1C2FF6CC0((uint64_t)v76, type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
    goto LABEL_54;
  }
  if (v82)
  {
LABEL_54:
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v76, v77, v9);
  *(_QWORD *)&v76[*(int *)(v78 + 20)] = *(_QWORD *)&v77[*(int *)(v78 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_ElementValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3051D6C(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C3378914();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[8];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[9];
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_ElementValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1C3051E6C(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1C3378914();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDCA8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DEC98);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[8];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDB38);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[9];
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1C3051F5C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1C3378914();
  if (v0 <= 0x3F)
  {
    sub_1C2FF90EC(319, &qword_1EF7DDCB0, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_Origin);
    if (v1 <= 0x3F)
    {
      sub_1C2FF90EC(319, &qword_1EF7DECA0, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_OriginalElementValue);
      if (v2 <= 0x3F)
      {
        sub_1C2FF90EC(319, &qword_1EF7DDB40, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_Value);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_TerminalElement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_TerminalElement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_NonTerminalElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C3378914();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_NonTerminalElement(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for Com_Apple_Siri_Product_Proto_NonTerminalElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for Com_Apple_Siri_Product_Proto_NonTerminalElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for Com_Apple_Siri_Product_Proto_NonTerminalElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for Com_Apple_Siri_Product_Proto_NonTerminalElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_NonTerminalElement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3052228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_NonTerminalElement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3052270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1C30522B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C3378914();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_Element(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v26;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = *(int *)(a3 + 24);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v16 = sub_1C3378914();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      }
      else
      {
        *v9 = *v10;
        v17 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
        v18 = (char *)v9 + v17;
        v26 = (char *)v10 + v17;
        v19 = sub_1C3378914();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v18, v26, v19);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v21 = *(int *)(a3 + 28);
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_1C3378914();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return v4;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      swift_bridgeObjectRelease();
      v4 += *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
    }
    v6 = sub_1C3378914();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *initializeWithCopy for Com_Apple_Siri_Product_Proto_Element(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
    }
    else
    {
      *v8 = *v9;
      v15 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
      v16 = (char *)v8 + v15;
      v24 = (char *)v9 + v15;
      v17 = sub_1C3378914();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v16, v24, v17);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = *(int *)(a3 + 28);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

_QWORD *assignWithCopy for Com_Apple_Siri_Product_Proto_Element(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v14 = sub_1C3378914();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      }
      else
      {
        *v7 = *v8;
        v17 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
        v18 = (char *)v7 + v17;
        v31 = (char *)v8 + v17;
        v19 = sub_1C3378914();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v18, v31, v19);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_14;
    }
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_14;
  }
  if (v13)
  {
    sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1C2FF6CC0((uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v7, v8, v16);
    }
    else
    {
      *v7 = *v8;
      v26 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
      v27 = (char *)v7 + v26;
      v28 = (char *)v8 + v26;
      v29 = sub_1C3378914();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v30(v27, v28, v29);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  v21 = *(int *)(a3 + 28);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t initializeWithTake for Com_Apple_Siri_Product_Proto_Element(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    }
    else
    {
      *v7 = *v8;
      v13 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
      v14 = (char *)v7 + v13;
      v15 = (char *)v8 + v13;
      v16 = sub_1C3378914();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = *(int *)(a3 + 28);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithTake for Com_Apple_Siri_Product_Proto_Element(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = sub_1C3378914();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
      }
      else
      {
        *v8 = *v9;
        v18 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
        v19 = (char *)v8 + v18;
        v20 = (char *)v9 + v18;
        v21 = sub_1C3378914();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_14;
    }
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_14;
  }
  if (v14)
  {
    sub_1C2FF6CC0((uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1C2FF6CC0((uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v8, v9, v17);
    }
    else
    {
      *v8 = *v9;
      v27 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
      v28 = (char *)v8 + v27;
      v29 = (char *)v9 + v27;
      v30 = sub_1C3378914();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  v22 = *(int *)(a3 + 28);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_Element()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3052DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_1C3378914();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_Element()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3052E98(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_1C3378914();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1C3052F38()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C2FF90EC(319, &qword_1EF7DDD50, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
  if (v0 <= 0x3F)
  {
    sub_1C3378914();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1C3378914();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1C3378914();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    a1 += *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
  }
  v2 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *initializeWithCopy for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1C3378914();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1C3378914();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1C2FF6CC0((uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_1C3378914();
      v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1C3378914();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1C3378914();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithTake for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1C2FF6CC0((uint64_t)a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1C3378914();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_1C3378914();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C30534AC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(319);
  if (v1 <= 0x3F)
  {
    result = sub_1C3378914();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_IntentNode(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  _QWORD *__dst;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C3378914();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v35 = v16;
      v36 = v11;
      v19 = v14[1];
      *v13 = *v14;
      v13[1] = v19;
      v13[2] = v14[2];
      v20 = *(int *)(v15 + 24);
      __dst = (_QWORD *)((char *)v13 + v20);
      v21 = (_QWORD *)((char *)v14 + v20);
      v22 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48);
      v25 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v24(v21, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        v27 = v36;
      }
      else
      {
        v28 = __dst;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v27 = v36;
          v36((char *)__dst, (char *)v21, v10);
        }
        else
        {
          *__dst = *v21;
          v29 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
          v30 = (char *)__dst + v29;
          v31 = (char *)v21 + v29;
          swift_bridgeObjectRetain();
          v32 = v30;
          v28 = __dst;
          v27 = v36;
          v36(v32, v31, v10);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v25);
      }
      v27((char *)v13 + *(int *)(v15 + 28), (char *)v14 + *(int *)(v15 + 28), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_IntentNode(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C3378914();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v6 + *(int *)(v7 + 24);
    v10 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        v9 += *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
      }
      v11(v9, v5);
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v6 + *(int *)(v7 + 28), v5);
  }
  return result;
}

_DWORD *initializeWithCopy for Com_Apple_Siri_Product_Proto_IntentNode(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(_QWORD *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  _QWORD *__dst;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v33 = v15;
    v34 = v10;
    v17 = v13[1];
    *v12 = *v13;
    v12[1] = v17;
    v12[2] = v13[2];
    v18 = *(int *)(v14 + 24);
    __dst = (_QWORD *)((char *)v12 + v18);
    v19 = (_QWORD *)((char *)v13 + v18);
    v20 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48);
    v23 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      v25 = v34;
    }
    else
    {
      v26 = __dst;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v25 = v34;
        v34((char *)__dst, (char *)v19, v9);
      }
      else
      {
        *__dst = *v19;
        v27 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
        v28 = (char *)__dst + v27;
        v29 = (char *)v19 + v27;
        swift_bridgeObjectRetain();
        v30 = v28;
        v26 = __dst;
        v25 = v34;
        v34(v30, v29, v9);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v26, 0, 1, v23);
    }
    v25((char *)v12 + *(int *)(v14 + 28), (char *)v13 + *(int *)(v14 + 28), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *assignWithCopy for Com_Apple_Siri_Product_Proto_IntentNode(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  size_t v34;
  void *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  uint64_t v52;
  char *__dst;
  _QWORD *__dsta;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  v57 = *(_QWORD *)(v9 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v57 + 24);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_1C2FF6CC0((uint64_t)v12, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
      goto LABEL_7;
    }
    v56 = v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v27 = *(int *)(v14 + 24);
    v28 = &v12[v27];
    v29 = &v13[v27];
    v30 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
    v52 = *(_QWORD *)(v30 - 8);
    __dsta = v28;
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
    LODWORD(v28) = v31(v28, 1, v30);
    v32 = v31(v29, 1, v30);
    if ((_DWORD)v28)
    {
      v33 = v56;
      if (!v32)
      {
        v39 = __dsta;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          (*(void (**)(_QWORD *, char *, uint64_t))(v57 + 16))(__dsta, v29, v56);
        }
        else
        {
          *__dsta = *(_QWORD *)v29;
          v40 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
          v41 = (char *)__dsta + v40;
          v42 = &v29[v40];
          v43 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
          swift_bridgeObjectRetain();
          v44 = v41;
          v33 = v56;
          v43(v44, v42, v56);
          v39 = __dsta;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v39, 0, 1, v30);
        goto LABEL_27;
      }
      v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48) - 8) + 64);
      v35 = __dsta;
    }
    else
    {
      v33 = v56;
      if (!v32)
      {
        if (a1 != a2)
        {
          sub_1C2FF6CC0((uint64_t)__dsta, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            (*(void (**)(_QWORD *, char *, uint64_t))(v57 + 16))(__dsta, v29, v56);
          }
          else
          {
            *__dsta = *(_QWORD *)v29;
            v46 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
            v47 = (char *)__dsta + v46;
            v48 = &v29[v46];
            v49 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
            swift_bridgeObjectRetain();
            v50 = v47;
            v33 = v56;
            v49(v50, v48, v56);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      }
      sub_1C2FF6CC0((uint64_t)__dsta, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
      v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48) - 8) + 64);
      v35 = __dsta;
    }
    memcpy(v35, v29, v34);
LABEL_27:
    v10(&v12[*(int *)(v14 + 28)], &v13[*(int *)(v14 + 28)], v33);
    return a1;
  }
  if (v18)
  {
LABEL_7:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  v55 = v9;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  v19 = *(int *)(v14 + 24);
  __dst = &v12[v19];
  v20 = &v13[v19];
  v21 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v24 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v24))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
    memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(&v12[*(int *)(v14 + 28)], &v13[*(int *)(v14 + 28)], v9);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v36 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
      v36(__dst, v20, v55);
    }
    else
    {
      *(_QWORD *)__dst = *(_QWORD *)v20;
      v37 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
      v51 = &__dst[v37];
      v38 = &v20[v37];
      v36 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
      swift_bridgeObjectRetain();
      v36(v51, v38, v55);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v24);
    v36(&v12[*(int *)(v14 + 28)], &v13[*(int *)(v14 + 28)], v55);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

_DWORD *initializeWithTake for Com_Apple_Siri_Product_Proto_IntentNode(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *__dst;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v12[2] = v13[2];
    v17 = *(int *)(v14 + 24);
    __dst = (_QWORD *)((char *)v12 + v17);
    v18 = (_QWORD *)((char *)v13 + v17);
    v19 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v10((char *)__dst, (char *)v18, v9);
      }
      else
      {
        *__dst = *v18;
        v22 = type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
        v10((char *)__dst + *(int *)(v22 + 20), (char *)v18 + *(int *)(v22 + 20), v9);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    v10((char *)v12 + *(int *)(v14 + 28), (char *)v13 + *(int *)(v14 + 28), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *assignWithTake for Com_Apple_Siri_Product_Proto_IntentNode(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  void (*v34)(char *, char *, uint64_t);
  size_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  char *__src;
  char *v47;
  void (*v48)(char *, char *);
  uint64_t v49;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *))(v10 + 40);
  v49 = v9;
  v11(v7, v8);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_1C2FF6CC0((uint64_t)v13, type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
      goto LABEL_7;
    }
    v48 = v11;
    v27 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v27;
    swift_bridgeObjectRelease();
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    swift_bridgeObjectRelease();
    v28 = *(int *)(v15 + 24);
    v29 = &v13[v28];
    v30 = &v14[v28];
    v31 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
    v45 = *(_QWORD *)(v31 - 8);
    v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
    v47 = v29;
    LODWORD(v29) = v32(v29, 1, v31);
    __src = v30;
    v33 = v32(v30, 1, v31);
    if ((_DWORD)v29)
    {
      v34 = (void (*)(char *, char *, uint64_t))v48;
      if (!v33)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, __src, v49);
        }
        else
        {
          *(_QWORD *)v47 = *(_QWORD *)__src;
          v42 = type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
          (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v47[*(int *)(v42 + 20)], &__src[*(int *)(v42 + 20)], v49);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v47, 0, 1, v31);
        goto LABEL_27;
      }
      v35 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48) - 8) + 64);
      v36 = v47;
    }
    else
    {
      v34 = (void (*)(char *, char *, uint64_t))v48;
      if (!v33)
      {
        if (a1 != a2)
        {
          sub_1C2FF6CC0((uint64_t)v47, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, __src, v49);
          }
          else
          {
            *(_QWORD *)v47 = *(_QWORD *)__src;
            v44 = type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0);
            (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v47[*(int *)(v44 + 20)], &__src[*(int *)(v44 + 20)], v49);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      }
      sub_1C2FF6CC0((uint64_t)v47, type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node);
      v35 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48) - 8) + 64);
      v36 = v47;
    }
    memcpy(v36, __src, v35);
LABEL_27:
    v34(&v13[*(int *)(v15 + 28)], &v14[*(int *)(v15 + 28)], v49);
    return a1;
  }
  if (v19)
  {
LABEL_7:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  v20 = *(int *)(v15 + 24);
  v21 = &v13[v20];
  v22 = &v14[v20];
  v23 = type metadata accessor for Com_Apple_Siri_Product_Proto_Element.OneOf_Node(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDD48);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[*(int *)(v15 + 28)], &v14[*(int *)(v15 + 28)], v49);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v37 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v38 = v22;
      v39 = v49;
      v37(v21, v38, v49);
    }
    else
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      v40 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_TerminalElement(0) + 20);
      v41 = &v22[v40];
      v37 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v39 = v49;
      v37(&v21[v40], v41, v49);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    v37(&v13[*(int *)(v15 + 28)], &v14[*(int *)(v15 + 28)], v39);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_IntentNode()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3054640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1C3378914();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 20);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_IntentNode()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C30546C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_1C3378914();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 20);
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DDE18);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_1C305473C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C305475C(a1, a2, a3, MEMORY[0x1E0DE9D30] + 64, &qword_1EF7DDE20, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_Element);
}

void sub_1C305475C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v8;
  unint64_t v9;

  sub_1C3378914();
  if (v8 <= 0x3F)
  {
    sub_1C2FF90EC(319, a5, a6);
    if (v9 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_ProtoIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3054808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1C3378914();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_ProtoIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3054890(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1C3378914();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_IntentHierarchy(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    a1[3] = a2[3];
    v7 = *(int *)(a3 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C3378914();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_IntentHierarchy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for Com_Apple_Siri_Product_Proto_IntentHierarchy(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for Com_Apple_Siri_Product_Proto_IntentHierarchy(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for Com_Apple_Siri_Product_Proto_IntentHierarchy(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for Com_Apple_Siri_Product_Proto_IntentHierarchy(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_IntentHierarchy()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3054C98(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C3378914();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_IntentHierarchy()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1C3054D20(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1C3378914();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C3054D94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C3378914();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Siri_Nl_Core_Protocol_SystemGaveOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1C3378914();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for Siri_Nl_Core_Protocol_SystemGaveOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for Siri_Nl_Core_Protocol_SystemGaveOptions(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C3378914();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for Siri_Nl_Core_Protocol_SystemGaveOptions(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *initializeWithTake for Siri_Nl_Core_Protocol_SystemGaveOptions(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for Siri_Nl_Core_Protocol_SystemGaveOptions(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_IntegerList()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_57Tm(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C3378914();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_IntegerList()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_58Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1C3378914();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C30551AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C3378914();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C3055224()
{
  return type metadata accessor for Com_Apple_Siri_Product_Proto_ProtoIntent._StorageClass(0);
}

void sub_1C305522C()
{
  unint64_t v0;

  sub_1C2FF90EC(319, &qword_1EF7DDED8, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_NLState);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t sub_1C3055304()
{
  unint64_t result;

  result = qword_1EF81A298;
  if (!qword_1EF81A298)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_MetaDomainAction, &type metadata for Com_Apple_Siri_Product_Proto_MetaDomainAction);
    atomic_store(result, (unint64_t *)&qword_1EF81A298);
  }
  return result;
}

unint64_t sub_1C3055348()
{
  unint64_t result;

  result = qword_1EF81A2A0;
  if (!qword_1EF81A2A0)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_MitigatorClassification, &type metadata for Com_Apple_Siri_Product_Proto_MitigatorClassification);
    atomic_store(result, (unint64_t *)&qword_1EF81A2A0);
  }
  return result;
}

uint64_t Graph.__allocating_init<A>(task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  __int128 v10[2];
  _BYTE v11[40];

  v5 = type metadata accessor for DynamicTask(0, a2, a3, a4);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v6 + 16))(v10, a1, v5);
  DynamicTask<A>.init<A>(_:)(v10, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A2E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3388720;
  sub_1C2FF6CFC((uint64_t)v11, inited + 32, &qword_1EF81A2F0);
  v8 = _s12SiriOntology5GraphC5tasksACSayAA11DynamicTaskVyypGG_tcfC_0(inited);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  sub_1C2FF9138((uint64_t)v11, &qword_1EF81A2F0);
  return v8;
}

uint64_t Graph.__allocating_init<A>(entity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  _BYTE v15[40];
  uint64_t v16;
  uint64_t v17[5];

  v6 = type metadata accessor for Entity(0, a2, a3, a4);
  v7 = MEMORY[0x1C3BD1B4C](&unk_1C33BAD10, v6);
  sub_1C310F574(v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  v8 = DynamicTask<A>.init(verbName:entityName:)(0x627265566F6ELL, 0xE600000000000000, v17);
  v9 = *(_QWORD *)(v6 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v9 + 16))(v15, a1, v6, v8);
  Entity<A>.init<A>(_:)((uint64_t)v15, a2, v10, v11, (uint64_t)&v16);
  sub_1C305563C((uint64_t)&v16, 0x797469746E65, 0xE600000000000000);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A2E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3388720;
  sub_1C2FF6CFC((uint64_t)v17, inited + 32, &qword_1EF81A2F0);
  v13 = _s12SiriOntology5GraphC5tasksACSayAA11DynamicTaskVyypGG_tcfC_0(inited);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v6);
  sub_1C2FF9138((uint64_t)v17, &qword_1EF81A2F0);
  return v13;
}

uint64_t sub_1C305563C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  ValueMetadata *v5;
  _UNKNOWN **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  ValueMetadata *v45;
  _UNKNOWN **v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  _UNKNOWN **v62;

  sub_1C2FF6CFC(a1, (uint64_t)&v60, &qword_1EF81A2F8);
  v35 = a1;
  if (!*((_QWORD *)&v61 + 1))
  {
    sub_1C2FF9138((uint64_t)&v60, &qword_1EF81A2F8);
    v8 = 0;
    goto LABEL_5;
  }
  sub_1C2FFCF44((uint64_t)&v60, (uint64_t)&v44);
  sub_1C2FF9138((uint64_t)&v60, &qword_1EF81A300);
  v5 = v45;
  v6 = v46;
  __swift_project_boxed_opaque_existential_1(&v44, (uint64_t)v45);
  ((void (*)(uint64_t *__return_ptr, ValueMetadata *, _UNKNOWN **))v6[9])(&v47, v5, v6);
  v8 = v47;
  v7 = v48;
  v10 = v49;
  v9 = v50;
  v39 = v52;
  v40 = v51;
  v37 = v54;
  v38 = v53;
  v11 = v55;
  v12 = v58;
  v42 = v57;
  v43 = v56;
  v13 = v59;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
  v41 = v7;
  if (!v7)
  {
LABEL_5:
    v41 = 0;
    v62 = 0;
    v60 = 0u;
    v61 = 0u;
    goto LABEL_6;
  }
  *((_QWORD *)&v61 + 1) = &type metadata for BuilderNode;
  v62 = &off_1E7D1B810;
  v14 = swift_allocObject();
  *(_QWORD *)&v60 = v14;
  *(_QWORD *)(v14 + 16) = v8;
  *(_QWORD *)(v14 + 24) = v7;
  *(_QWORD *)(v14 + 32) = v10;
  *(_QWORD *)(v14 + 40) = v9;
  *(_QWORD *)(v14 + 48) = v40;
  *(_QWORD *)(v14 + 56) = v39;
  *(_QWORD *)(v14 + 64) = v38;
  *(_QWORD *)(v14 + 72) = v37;
  *(_BYTE *)(v14 + 80) = v11;
  *(_QWORD *)(v14 + 88) = v43;
  *(_QWORD *)(v14 + 96) = v42;
  *(_QWORD *)(v14 + 104) = v12;
  *(_QWORD *)(v14 + 112) = v13;
LABEL_6:
  v31 = (uint64_t)v3;
  v15 = v3[3];
  v16 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v15);
  v17 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v16 + 72);
  v32 = v8;
  sub_1C2FFCE34(v8, v41);
  v17(&v47, v15, v16);
  sub_1C310F650((uint64_t)&v47, (uint64_t)&v60, a2, a3);
  v19 = v47;
  v18 = v48;
  v20 = v50;
  v34 = v49;
  v21 = v51;
  v22 = v53;
  v29 = v54;
  v30 = v52;
  LOBYTE(v17) = v55;
  v23 = v56;
  v24 = v57;
  v26 = v58;
  v25 = v59;
  v45 = &type metadata for BuilderNode;
  v46 = &off_1E7D1B810;
  v27 = swift_allocObject();
  *(_QWORD *)&v44 = v27;
  *(_QWORD *)(v27 + 16) = v19;
  *(_QWORD *)(v27 + 24) = v18;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v20;
  *(_QWORD *)(v27 + 48) = v21;
  *(_QWORD *)(v27 + 56) = v30;
  *(_QWORD *)(v27 + 64) = v22;
  *(_QWORD *)(v27 + 72) = v29;
  *(_BYTE *)(v27 + 80) = (_BYTE)v17;
  *(_QWORD *)(v27 + 88) = v23;
  *(_QWORD *)(v27 + 96) = v24;
  *(_QWORD *)(v27 + 104) = v26;
  *(_QWORD *)(v27 + 112) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1(v31);
  sub_1C2FFD1BC(&v44, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2FFCEBC(v32, v41);
  sub_1C2FF9138(v35, &qword_1EF81A2F8);
  return sub_1C2FF9138((uint64_t)&v60, &qword_1EF819488);
}

uint64_t sub_1C30559E0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char **v38;
  char *v39;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v50 = *a1;
  v49 = a1[1];
  v8 = a1[3];
  v48 = a1[2];
  v52 = a1[4];
  v9 = a2[3];
  v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  if (v12)
  {
    v13 = v11;
    v14 = v12;
    v15 = a2[3];
    v16 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v15);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v16 + 16))(&v60, v15, v16);
    v56 = v60;
    v57 = v61;
    v58 = v62;
    v59 = v63;
    if (qword_1ED7CEAB8 != -1)
      swift_once();
    v53 = xmmword_1ED7CEA90;
    v54 = *(_OWORD *)&qword_1ED7CEAA0;
    v55 = qword_1ED7CEAB0;
    v17 = _s12SiriOntology4NameV2eeoiySbAC_ACtFZ_0(&v56, &v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if ((v17 & 1) != 0)
    {
      v60 = xmmword_1ED7CEA90;
      v61 = qword_1ED7CEAA0;
      v62 = unk_1ED7CEAA8;
      v63 = qword_1ED7CEAB0;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = (_QWORD *)sub_1C31E4950((uint64_t *)&v60, v13, v14, 1u, MEMORY[0x1E0DEE9D8]);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_retain();
      swift_unownedRetain();
      swift_bridgeObjectRelease();
      swift_release();
      v19 = v8;
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
  }
  v20 = a2[3];
  v21 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v20);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
  v19 = v8;
  if ((v23 & 1) != 0)
    goto LABEL_12;
  v24 = v22;
  v25 = a2[3];
  v26 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v25);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 16))(&v60, v25, v26);
  v56 = v60;
  v57 = v61;
  v58 = v62;
  v59 = v63;
  if (qword_1ED7CEAF0 != -1)
    swift_once();
  v53 = xmmword_1ED7CEAC0;
  v54 = *(_OWORD *)&qword_1ED7CEAD0;
  v55 = qword_1ED7CEAE0;
  v27 = _s12SiriOntology4NameV2eeoiySbAC_ACtFZ_0(&v56, &v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if ((v27 & 1) == 0)
  {
LABEL_12:
    v28 = a2[3];
    v29 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v28);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v29 + 16))(&v60, v28, v29);
    v56 = v60;
    v57 = v61;
    v58 = v62;
    v59 = v63;
    v18 = (_QWORD *)sub_1C31E4950((uint64_t *)&v56, 0, 0, 0xFFu, MEMORY[0x1E0DEE9D8]);
    swift_retain();
    swift_unownedRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v60 = xmmword_1ED7CEAC0;
    v61 = qword_1ED7CEAD0;
    v62 = unk_1ED7CEAD8;
    v63 = qword_1ED7CEAE0;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = (_QWORD *)sub_1C31E4950((uint64_t *)&v60, v24, 0, 0, MEMORY[0x1E0DEE9D8]);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_retain();
    swift_unownedRetain();
  }
  swift_release();
LABEL_14:
  v30 = a2[3];
  v31 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v30);
  v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 40);
  swift_retain();
  swift_unownedRetain();
  v33 = v32(v30, v31);
  swift_unownedRetainStrong();
  v18[13] = v33;
  swift_release();
  swift_bridgeObjectRelease();
  v34 = a5[3];
  v35 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v34);
  v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 48))(v34, v35);
  swift_unownedRetainStrong();
  v18[14] = v36;
  swift_release();
  swift_bridgeObjectRelease();
  swift_unownedRetainStrong();
  v37 = v18[7];
  swift_release();
  swift_release();
  swift_unownedRelease();
  v38 = (char **)(a4 + 16);
  swift_beginAccess();
  v39 = *(char **)(a4 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v39;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v39 = sub_1C3024940(0, *((_QWORD *)v39 + 2) + 1, 1, v39);
    *v38 = v39;
  }
  v42 = *((_QWORD *)v39 + 2);
  v41 = *((_QWORD *)v39 + 3);
  if (v42 >= v41 >> 1)
  {
    v39 = sub_1C3024940((char *)(v41 > 1), v42 + 1, 1, v39);
    *v38 = v39;
  }
  *((_QWORD *)v39 + 2) = v42 + 1;
  v43 = &v39[64 * v42];
  *((_QWORD *)v43 + 4) = a6;
  *((_QWORD *)v43 + 5) = v37;
  *((_DWORD *)v43 + 12) = 0;
  *((_QWORD *)v43 + 7) = v50;
  *((_QWORD *)v43 + 8) = v49;
  *((_QWORD *)v43 + 9) = v48;
  *((_QWORD *)v43 + 10) = v19;
  *((_QWORD *)v43 + 11) = v52;
  swift_unownedRetainStrong();
  swift_release();
  v44 = a2[4];
  v45 = __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  MEMORY[0x1E0C80A78](v45);
  (*(void (**)(uint64_t (*)()))(v44 + 80))(sub_1C3056508);
  swift_release();
  return swift_unownedRelease();
}

uint64_t _s12SiriOntology5GraphC5tasksACSayAA11DynamicTaskVyypGG_tcfC_0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  char **v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;

  type metadata accessor for Graph();
  swift_allocObject();
  v2 = Graph.init()();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = v2 + 4;
    v6 = (char **)(v2 + 2);
    v40 = a1;
    v7 = a1 + 32;
    swift_retain();
    v42 = v5;
    swift_beginAccess();
    v39 = v6;
    swift_beginAccess();
    v41 = v3;
    while (1)
    {
      v46 = v4;
      v45 = v7;
      sub_1C2FF6CFC(v7, (uint64_t)v53, &qword_1EF81A2F0);
      v8 = v54;
      v9 = v55;
      __swift_project_boxed_opaque_existential_1(v53, v54);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v9 + 16))(v50, v8, v9);
      v47[0] = v50[0];
      v47[1] = v50[1];
      v47[2] = v50[2];
      v48 = v51;
      v49 = v52;
      v10 = (_QWORD *)sub_1C31E4950(v47, 0, 0, 0xFFu, MEMORY[0x1E0DEE9D8]);
      swift_retain();
      swift_unownedRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_1C2FFCF44((uint64_t)v53, (uint64_t)v50);
      v11 = v51;
      v12 = v52;
      __swift_project_boxed_opaque_existential_1(v50, v51);
      v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 40);
      swift_retain();
      swift_unownedRetain();
      v14 = v13(v11, v12);
      swift_unownedRetainStrong();
      v10[13] = v14;
      swift_release();
      swift_bridgeObjectRelease();
      v15 = v51;
      v16 = v52;
      __swift_project_boxed_opaque_existential_1(v50, v51);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 48))(v15, v16);
      swift_unownedRetainStrong();
      v10[14] = v17;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_unownedRelease();
      if (qword_1ED7CE0C8 != -1)
        swift_once();
      v19 = qword_1ED7CE0A0;
      v18 = *(_QWORD *)algn_1ED7CE0A8;
      v21 = qword_1ED7CE0B0;
      v20 = unk_1ED7CE0B8;
      v22 = qword_1ED7CE0C0;
      v23 = *v42;
      result = swift_unownedRetainStrong();
      if (!v23)
        break;
      v44 = v19;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unownedRetain();
      swift_release();
      swift_unownedRetainStrong();
      v25 = *(_QWORD *)(v23 + 56);
      swift_release();
      swift_unownedRetainStrong();
      v43 = v10[7];
      swift_release();
      v26 = v3;
      v27 = (char *)v3[2];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26[2] = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v27 = sub_1C3024940(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
        *v39 = v27;
      }
      v30 = *((_QWORD *)v27 + 2);
      v29 = *((_QWORD *)v27 + 3);
      if (v30 >= v29 >> 1)
      {
        v27 = sub_1C3024940((char *)(v29 > 1), v30 + 1, 1, v27);
        *v39 = v27;
      }
      *((_QWORD *)v27 + 2) = v30 + 1;
      v31 = &v27[64 * v30];
      v32 = v43;
      *((_QWORD *)v31 + 4) = v25;
      *((_QWORD *)v31 + 5) = v32;
      *((_DWORD *)v31 + 12) = 0;
      *((_QWORD *)v31 + 7) = v44;
      *((_QWORD *)v31 + 8) = v18;
      *((_QWORD *)v31 + 9) = v21;
      *((_QWORD *)v31 + 10) = v20;
      *((_QWORD *)v31 + 11) = v22;
      v3 = v41;
      swift_release();
      swift_unownedRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1C2FFCF44((uint64_t)v53, (uint64_t)v47);
      swift_unownedRetainStrong();
      v33 = v10[7];
      swift_release();
      v34 = v49;
      v35 = __swift_project_boxed_opaque_existential_1(v47, v48);
      MEMORY[0x1E0C80A78](v35);
      v36 = v3;
      v37 = v47;
      v38 = v33;
      (*(void (**)(uint64_t (*)(uint64_t *, _QWORD *, uint64_t)))(v34 + 80))(sub_1C30564FC);
      swift_release();
      swift_unownedRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
      sub_1C2FF9138((uint64_t)v50, &qword_1EF81A308);
      sub_1C2FF9138((uint64_t)v53, &qword_1EF81A2F0);
      v7 = v45 + 40;
      v4 = v46 - 1;
      if (v46 == 1)
      {
        swift_release();
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_1C30564A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C30564FC(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C30559E0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD **)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t PersonPlaceIntentNode.intentNode.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PersonPlaceIntentNode.ontologyNode.getter()
{
  return swift_retain();
}

__n128 PersonPlaceIntentNode.init(intentNode:ontologyNode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a3 = *(_QWORD *)a1;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(a3 + 24) = v3;
  *(_QWORD *)(a3 + 32) = a2;
  return result;
}

uint64_t static PersonPlaceIntentNode.from(intentNode:ontologyNode:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  *a3 = *a1;
  a3[1] = v3;
  a3[2] = v4;
  a3[3] = v5;
  a3[4] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t PersonPlaceIntentNode.name.getter()
{
  return sub_1C30565D4();
}

uint64_t PersonPlaceIntentNode.id.getter()
{
  return sub_1C30565D4();
}

uint64_t sub_1C30565D4()
{
  __int128 *v0;
  __int128 v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _BYTE v8[528];
  _OWORD __dst[84];
  _BYTE __src[528];
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v1 = v0[1];
  v11 = *v0;
  v12 = v1;
  v13 = *((_QWORD *)v0 + 4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E8);
  inited = swift_initStaticObject();
  sub_1C3056D44(inited, &qword_1EF7DF4E8, __dst);
  v3 = *((_QWORD *)&__dst[0] + 1);
  if (*((_QWORD *)&__dst[0] + 1))
  {
    v4 = *(_QWORD *)&__dst[0];
    v5 = *(_QWORD *)(*((_QWORD *)&__dst[1] + 1) + 16);
    if (v5)
    {
      memcpy(__dst, (const void *)(*((_QWORD *)&__dst[1] + 1) + 1344 * v5 - 1312), sizeof(__dst));
      sub_1C3020A20(__dst);
      sub_1C3056C48(v4, v3);
      sub_1C2FFE080(__dst, sub_1C2FFD5C0);
      sub_1C3020E30(__dst);
      sub_1C3056C84((uint64_t)__dst, (uint64_t)__src);
      if (sub_1C30118DC((uint64_t)__src) != 1)
      {
        sub_1C30118F0(__src, v8);
        v6 = sub_1C3012BD4((uint64_t)v8);
        if (v6 == 4 || v6 == 7)
          return *(_QWORD *)sub_1C3012BE0((uint64_t)v8);
        sub_1C2FFE080(__dst, sub_1C2FFE4B0);
      }
    }
    else
    {
      sub_1C3056C48(*(uint64_t *)&__dst[0], *((uint64_t *)&__dst[0] + 1));
    }
  }
  return 0;
}

void PersonPlaceIntentNode.reference.getter(char *a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[84];
  _BYTE __src[528];
  _BYTE __dst[528];
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v3 = v1[1];
  v11 = *v1;
  v12 = v3;
  v13 = *((_QWORD *)v1 + 4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A310);
  inited = swift_initStaticObject();
  sub_1C3056D44(inited, &qword_1EF81A310, v8);
  v5 = *((_QWORD *)&v8[0] + 1);
  if (*((_QWORD *)&v8[0] + 1))
  {
    v6 = *(_QWORD *)&v8[0];
    v7 = *(_QWORD *)(*((_QWORD *)&v8[1] + 1) + 16);
    if (v7)
    {
      memcpy(v8, (const void *)(*((_QWORD *)&v8[1] + 1) + 1344 * v7 - 1312), sizeof(v8));
      sub_1C3020A20(v8);
      sub_1C3056C48(v6, v5);
      sub_1C2FFE080(v8, sub_1C2FFD5C0);
      sub_1C3020E30(v8);
      sub_1C3056C84((uint64_t)v8, (uint64_t)__src);
      if (sub_1C30118DC((uint64_t)__src) != 1)
      {
        sub_1C30118F0(__src, __dst);
        sub_1C3056BA4(__dst, a1);
        sub_1C2FFE080(v8, sub_1C2FFE4B0);
        return;
      }
    }
    else
    {
      sub_1C3056C48(*(uint64_t *)&v8[0], *((uint64_t *)&v8[0] + 1));
    }
  }
  *a1 = 2;
}

double PersonPlaceIntentNode.occupant.getter@<D0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v3 = v1[1];
  v13 = *v1;
  v14 = v3;
  v15 = *((_QWORD *)v1 + 4);
  if (qword_1EF80A788 != -1)
    swift_once();
  sub_1C30569A4(qword_1EF81B4A0, &v10);
  if ((_QWORD)v11)
  {
    v9 = v11;
    v4 = v10;
    v5 = v12;
    type metadata accessor for AddressOntologyNode.OccupantNode();
    v6 = swift_allocObject();
    if (qword_1EF80AA70 != -1)
      swift_once();
    v7 = qword_1EF8AEF70;
    *(_QWORD *)(v6 + 16) = 0x746E61707563636FLL;
    *(_QWORD *)(v6 + 24) = 0xE800000000000000;
    *(_BYTE *)(v6 + 32) = 0;
    *(_QWORD *)(v6 + 40) = v7;
    *(_QWORD *)a1 = v4;
    *(_OWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double sub_1C30569A4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  double result;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD v13[2];

  v5 = *(_OWORD *)(v2 + 16);
  v13[0] = *(_OWORD *)v2;
  v13[1] = v5;
  v6 = *(_QWORD *)(v2 + 32);
  swift_retain();
  sub_1C305735C((uint64_t)v13);
  swift_retain();
  v7 = (_QWORD *)sub_1C305710C(a1, v6);
  swift_release();
  if (v7[2])
  {
    v8 = sub_1C31CB0F0(v7);
    swift_bridgeObjectRelease();
    sub_1C30573A0((uint64_t)v13);
    swift_release();
    if (*(_QWORD *)(v8 + 16))
    {
LABEL_3:
      sub_1C2FFCF44(v8 + 32, (uint64_t)&v10);
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C30573A0((uint64_t)v13);
    swift_release();
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v10 = 0u;
  v11 = 0u;
LABEL_6:
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v11 + 1))
  {
    sub_1C30573E4((uint64_t)&v10);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4F8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1C3056AE0@<X0>(void *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1C3056B04(a1, a2);
}

uint64_t sub_1C3056AEC@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1C3056BA4(a1, a2);
}

uint64_t sub_1C3056AF8@<X0>(void *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1C3056B04(a1, a2);
}

uint64_t sub_1C3056B04@<X0>(void *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  BOOL v5;
  _BYTE v6[528];

  sub_1C30118F0(a1, v6);
  result = sub_1C3012BD4((uint64_t)v6);
  v5 = 1;
  if ((_DWORD)result == 8)
  {
    sub_1C3012BE0((uint64_t)v6);
    swift_bridgeObjectRetain();
    v4 = sub_1C3379028();
    result = swift_bridgeObjectRelease();
    if (!v4)
      v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C3056B98@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1C3056BA4(a1, a2);
}

uint64_t sub_1C3056BA4@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  _BYTE v6[528];

  sub_1C30118F0(a1, v6);
  result = sub_1C3012BD4((uint64_t)v6);
  if ((_DWORD)result != 8)
    goto LABEL_5;
  sub_1C3012BE0((uint64_t)v6);
  swift_bridgeObjectRetain();
  v4 = sub_1C3379028();
  result = swift_bridgeObjectRelease();
  if (v4 == 1)
  {
    v5 = 1;
    goto LABEL_7;
  }
  if (v4)
LABEL_5:
    v5 = 2;
  else
    v5 = 0;
LABEL_7:
  *a2 = v5;
  return result;
}

uint64_t sub_1C3056C48(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C3056C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF8194A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1C3056CCC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C3056D44(a1, &qword_1EF7DF4E8, a2);
}

double sub_1C3056CD8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C3056D44(a1, &qword_1EF7DF4D0, a2);
}

double sub_1C3056CE4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C3056D44(a1, &qword_1EF7DF4D8, a2);
}

double sub_1C3056CF0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C3056D44(a1, &qword_1EF81A348, a2);
}

double sub_1C3056CFC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C3056D44(a1, &qword_1EF81A340, a2);
}

double sub_1C3056D08@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C3056D44(a1, &qword_1EF81A338, a2);
}

double sub_1C3056D14@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C3056D44(a1, &qword_1EF81A330, a2);
}

double sub_1C3056D20@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C3056D44(a1, &qword_1EF81A328, a2);
}

double sub_1C3056D2C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C3056D44(a1, &qword_1EF81A320, a2);
}

double sub_1C3056D38@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C3056D44(a1, &qword_1EF81A318, a2);
}

double sub_1C3056D44@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double result;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _OWORD v15[2];

  v7 = *(_OWORD *)(v3 + 16);
  v15[0] = *(_OWORD *)v3;
  v15[1] = v7;
  v8 = *(_QWORD *)(v3 + 32);
  swift_retain();
  sub_1C305735C((uint64_t)v15);
  swift_retain();
  v9 = (_QWORD *)sub_1C3056E98(a1, v8, a2);
  swift_release();
  if (v9[2])
  {
    v10 = sub_1C31CB0F0(v9);
    swift_bridgeObjectRelease();
    sub_1C30573A0((uint64_t)v15);
    swift_release();
    if (*(_QWORD *)(v10 + 16))
    {
LABEL_3:
      sub_1C2FFCF44(v10 + 32, (uint64_t)&v12);
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C30573A0((uint64_t)v15);
    swift_release();
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      goto LABEL_3;
  }
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
LABEL_6:
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v13 + 1))
  {
    sub_1C30573E4((uint64_t)&v12);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4F8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonPlaceIntentNode()
{
  return &type metadata for PersonPlaceIntentNode;
}

uint64_t sub_1C3056E98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  unint64_t v21;
  _QWORD v22[5];

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v22[3] = v5;
  v22[4] = &protocol witness table for TerminalOntologyNode<A>;
  v22[0] = a1;
  swift_retain();
  v21 = sub_1C302BE94(MEMORY[0x1E0DEE9D8]);
  sub_1C308A6A8(a2, *(_QWORD *)(a2 + 40), (uint64_t *)&v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DFAE0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C3388720;
  sub_1C2FFCF44((uint64_t)v22, v6 + 32);
  v19 = v5;
  v20 = &protocol witness table for TerminalOntologyNode<A>;
  *(_QWORD *)&v18 = a1;
  type metadata accessor for AnyOntologyNode();
  v7 = swift_allocObject();
  sub_1C2FFD1BC(&v18, v7 + 16);
  swift_retain();
  while (1)
  {
    v8 = v21;
    if ((v21 & 0xC000000000000001) == 0)
      break;
    swift_retain();
    if (!sub_1C3378FC8())
      goto LABEL_12;
    type metadata accessor for NonTerminalOntologyNode();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v9 = v18;
    swift_unknownObjectRelease();
LABEL_8:
    swift_release();
    if (!v9)
      goto LABEL_13;
    v14 = *(_QWORD *)(v6 + 16);
    v13 = *(_QWORD *)(v6 + 24);
    swift_retain();
    if (v14 >= v13 >> 1)
      v6 = (uint64_t)sub_1C30243C8((_QWORD *)(v13 > 1), v14 + 1, 1, (_QWORD *)v6);
    v15 = type metadata accessor for NonTerminalOntologyNode();
    v19 = v15;
    v20 = &protocol witness table for NonTerminalOntologyNode;
    *(_QWORD *)&v18 = v9;
    *(_QWORD *)(v6 + 16) = v14 + 1;
    sub_1C2FFD1BC(&v18, v6 + 40 * v14 + 32);
    swift_release();
    v19 = v15;
    v20 = &protocol witness table for NonTerminalOntologyNode;
    *(_QWORD *)&v18 = v9;
    v16 = swift_allocObject();
    sub_1C2FFD1BC(&v18, v16 + 16);
  }
  if (!*(_QWORD *)(v21 + 16))
    goto LABEL_13;
  v10 = (_QWORD *)swift_retain();
  v11 = sub_1C302B27C(v10);
  if ((v12 & 1) != 0)
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v11);
    swift_retain();
    goto LABEL_8;
  }
LABEL_12:
  swift_release();
LABEL_13:
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v6;
}

uint64_t sub_1C305710C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;
  unint64_t v19;
  _QWORD v20[5];

  v4 = type metadata accessor for NonTerminalOntologyNode();
  v20[3] = v4;
  v20[4] = &protocol witness table for NonTerminalOntologyNode;
  v20[0] = a1;
  swift_retain();
  v19 = sub_1C302BE94(MEMORY[0x1E0DEE9D8]);
  sub_1C308A6A8(a2, *(_QWORD *)(a2 + 40), (uint64_t *)&v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DFAE0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C3388720;
  sub_1C2FFCF44((uint64_t)v20, v5 + 32);
  v17 = v4;
  v18 = &protocol witness table for NonTerminalOntologyNode;
  *(_QWORD *)&v16 = a1;
  type metadata accessor for AnyOntologyNode();
  v6 = swift_allocObject();
  sub_1C2FFD1BC(&v16, v6 + 16);
  swift_retain();
  while (1)
  {
    v7 = v19;
    if ((v19 & 0xC000000000000001) == 0)
      break;
    swift_retain();
    if (!sub_1C3378FC8())
      goto LABEL_12;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v8 = v16;
    swift_unknownObjectRelease();
LABEL_8:
    swift_release();
    if (!v8)
      goto LABEL_13;
    v13 = *(_QWORD *)(v5 + 16);
    v12 = *(_QWORD *)(v5 + 24);
    swift_retain();
    if (v13 >= v12 >> 1)
      v5 = (uint64_t)sub_1C30243C8((_QWORD *)(v12 > 1), v13 + 1, 1, (_QWORD *)v5);
    v17 = v4;
    v18 = &protocol witness table for NonTerminalOntologyNode;
    *(_QWORD *)&v16 = v8;
    *(_QWORD *)(v5 + 16) = v13 + 1;
    sub_1C2FFD1BC(&v16, v5 + 40 * v13 + 32);
    swift_release();
    v17 = v4;
    v18 = &protocol witness table for NonTerminalOntologyNode;
    *(_QWORD *)&v16 = v8;
    v14 = swift_allocObject();
    sub_1C2FFD1BC(&v16, v14 + 16);
  }
  if (!*(_QWORD *)(v19 + 16))
    goto LABEL_13;
  v9 = (_QWORD *)swift_retain();
  v10 = sub_1C302B27C(v9);
  if ((v11 & 1) != 0)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v10);
    swift_retain();
    goto LABEL_8;
  }
LABEL_12:
  swift_release();
LABEL_13:
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v5;
}

uint64_t sub_1C305735C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C30573A0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C30573E4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF500);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C3057424(uint64_t a1)
{
  uint64_t v1;

  return sub_1C30574E4(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C3057430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[40];
  _QWORD v12[4];
  _QWORD v13[4];

  v13[0] = a2;
  v13[1] = a3;
  v13[2] = a4;
  v13[3] = a5;
  sub_1C2FFCF44(a1, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4F8);
  if (swift_dynamicCast() && v8)
  {
    v12[0] = v7;
    v12[1] = v8;
    v12[2] = v9;
    v12[3] = v10;
    v5 = static NonTerminalIntentNode.== infix(_:_:)(v12, v13);
    sub_1C3056C48(v7, v8);
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1C30574E4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t result;
  BOOL v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _BYTE v16[40];

  sub_1C2FFCF44(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4F8);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v10 = v12 == a2 && v13 == a3;
    if ((v10 || (sub_1C3379184() & 1) != 0) && (sub_1C30020E8(v14, a4) & 1) != 0)
    {
      v11 = sub_1C30021AC(v15, a5);
      sub_1C3056C48(v12, v13);
      if (v11)
        return 1;
    }
    else
    {
      sub_1C3056C48(v12, v13);
    }
    return 0;
  }
  return result;
}

uint64_t IntentNode<>.isEqualTo(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  char v14;
  _BYTE v17[40];

  v4 = sub_1C3378E90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v17[-v7 - 8];
  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v6);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C2FFCF44(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4F8);
  v12 = swift_dynamicCast();
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v12)
  {
    v13(v8, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, a2);
    v14 = sub_1C3378BD8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  }
  else
  {
    v13(v8, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t dispatch thunk of IntentNode.ontologyNodeName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of IntentNode.resultIDs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of IntentNode.isEqualTo(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1C3057768(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C3057430(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t static PersonOntologyNode.personCompanyNode.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E8);
  return swift_initStaticObject();
}

uint64_t static PersonOntologyNode.personFirstNameNode.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E8);
  return swift_initStaticObject();
}

uint64_t static PersonOntologyNode.personFullNameNode.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E8);
  return swift_initStaticObject();
}

uint64_t static PersonOntologyNode.personLastNameNode.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E8);
  return swift_initStaticObject();
}

uint64_t static PersonOntologyNode.personMiddleNameNode.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E8);
  return swift_initStaticObject();
}

uint64_t static PersonOntologyNode.personNamePostfixNode.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4D8);
  return swift_initStaticObject();
}

uint64_t static PersonOntologyNode.personNamePrefixNode.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4D0);
  return swift_initStaticObject();
}

uint64_t static PersonOntologyNode.personNickNameNode.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E8);
  return swift_initStaticObject();
}

uint64_t static PersonOntologyNode.personRelationshipNode.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E8);
  return swift_initStaticObject();
}

uint64_t static PersonOntologyNode.personSelfReferenceNode.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E0);
  return swift_initStaticObject();
}

uint64_t PersonOntologyNode.__allocating_init(name:multicardinal:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  PersonOntologyNode.init(name:multicardinal:)(a1, a2, a3);
  return v6;
}

uint64_t PersonOntologyNode.init(name:multicardinal:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DFAE0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C338BE50;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E8);
  inited = swift_initStaticObject();
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = &protocol witness table for TerminalOntologyNode<A>;
  *(_QWORD *)(v7 + 32) = inited;
  v10 = swift_initStaticObject();
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = &protocol witness table for TerminalOntologyNode<A>;
  *(_QWORD *)(v7 + 72) = v10;
  v11 = swift_initStaticObject();
  *(_QWORD *)(v7 + 136) = v8;
  *(_QWORD *)(v7 + 144) = &protocol witness table for TerminalOntologyNode<A>;
  *(_QWORD *)(v7 + 112) = v11;
  v12 = swift_initStaticObject();
  *(_QWORD *)(v7 + 176) = v8;
  *(_QWORD *)(v7 + 184) = &protocol witness table for TerminalOntologyNode<A>;
  *(_QWORD *)(v7 + 152) = v12;
  v13 = swift_initStaticObject();
  *(_QWORD *)(v7 + 216) = v8;
  *(_QWORD *)(v7 + 224) = &protocol witness table for TerminalOntologyNode<A>;
  *(_QWORD *)(v7 + 192) = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4D8);
  v15 = swift_initStaticObject();
  *(_QWORD *)(v7 + 256) = v14;
  *(_QWORD *)(v7 + 264) = &protocol witness table for TerminalOntologyNode<A>;
  *(_QWORD *)(v7 + 232) = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4D0);
  v17 = swift_initStaticObject();
  *(_QWORD *)(v7 + 296) = v16;
  *(_QWORD *)(v7 + 304) = &protocol witness table for TerminalOntologyNode<A>;
  *(_QWORD *)(v7 + 272) = v17;
  v18 = swift_initStaticObject();
  *(_QWORD *)(v7 + 336) = v8;
  *(_QWORD *)(v7 + 344) = &protocol witness table for TerminalOntologyNode<A>;
  *(_QWORD *)(v7 + 312) = v18;
  v19 = swift_initStaticObject();
  *(_QWORD *)(v7 + 376) = v8;
  *(_QWORD *)(v7 + 384) = &protocol witness table for TerminalOntologyNode<A>;
  *(_QWORD *)(v7 + 352) = v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7DF4E0);
  v21 = swift_initStaticObject();
  *(_QWORD *)(v7 + 416) = v20;
  *(_QWORD *)(v7 + 424) = &protocol witness table for TerminalOntologyNode<A>;
  *(_QWORD *)(v7 + 392) = v21;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 32) = a3;
  *(_QWORD *)(v3 + 40) = v7;
  return v3;
}

uint64_t PersonOntologyNode.PersonSelfReference.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1C3379028();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static PersonOntologyNode.PersonSelfReference.allCases.getter()
{
  return &unk_1E7D0F1F8;
}

uint64_t PersonOntologyNode.PersonSelfReference.rawValue.getter()
{
  return 25965;
}

uint64_t sub_1C3057B38()
{
  sub_1C3379208();
  sub_1C3378C38();
  return sub_1C3379244();
}

uint64_t sub_1C3057B7C()
{
  return sub_1C3378C38();
}

uint64_t sub_1C3057B88()
{
  sub_1C3379208();
  sub_1C3378C38();
  return sub_1C3379244();
}

uint64_t sub_1C3057BC8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1C3379028();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C3057C18(_QWORD *a1@<X8>)
{
  *a1 = 25965;
  a1[1] = 0xE200000000000000;
}

void sub_1C3057C28(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7D0F220;
}

SiriOntology::PersonOntologyNode::PersonNamePrefix_optional __swiftcall PersonOntologyNode.PersonNamePrefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriOntology::PersonOntologyNode::PersonNamePrefix_optional)sub_1C3057F40(v1);
}

void *static PersonOntologyNode.PersonNamePrefix.allCases.getter()
{
  return &unk_1E7D0F248;
}

uint64_t PersonOntologyNode.PersonNamePrefix.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C3057C7C + 4 * byte_1C338BF10[*v0]))(29293, 0xE200000000000000);
}

uint64_t sub_1C3057C7C()
{
  return 7565933;
}

uint64_t sub_1C3057C8C()
{
  return 29549;
}

uint64_t sub_1C3057C94()
{
  return 29284;
}

uint64_t sub_1C3057C9C()
{
  return 1718579824;
}

uint64_t sub_1C3057CAC()
{
  return 0x636F737361;
}

uint64_t sub_1C3057CC0()
{
  return 7759218;
}

uint64_t sub_1C3057CD0()
{
  return 29286;
}

uint64_t sub_1C3057CD8()
{
  return 2037675105;
}

uint64_t sub_1C3057CE8()
{
  return 7237480;
}

uint64_t sub_1C3057CFC()
{
  return 1936028272;
}

uint64_t sub_1C3057D0C()
{
  return 7761767;
}

uint64_t sub_1C3057D20()
{
  return 0x6863616F63;
}

uint64_t sub_1C3057D34()
{
  return 6514287;
}

uint64_t sub_1C3057D44()
{
  return 1953522019;
}

uint64_t sub_1C3057D54()
{
  return 7106403;
}

uint64_t sub_1C3057D64()
{
  return 0x6C6F6320746CLL;
}

uint64_t sub_1C3057D78()
{
  return 6971757;
}

uint64_t sub_1C3057D88()
{
  return 29804;
}

uint64_t sub_1C3057D90()
{
  return 7628659;
}

uint64_t sub_1C3057DA4()
{
  return 7499892;
}

uint64_t sub_1C3057DB4()
{
  return 1919184227;
}

uint64_t sub_1C3057DC4()
{
  return 0x72646D6320746CLL;
}

uint64_t sub_1C3057DDC()
{
  return 7106659;
}

uint64_t sub_1C3057DF0()
{
  return 7628132;
}

uint64_t sub_1C3057E00()
{
  return 7234919;
}

uint64_t sub_1C3057E10()
{
  return 7632496;
}

uint64_t sub_1C3057E20()
{
  return 7169121;
}

uint64_t sub_1C3057E30()
{
  return 29299;
}

uint64_t sub_1C3057E38()
{
  return 0x726F696E756ALL;
}

uint64_t sub_1C3057E50()
{
  return 0x726F696E6573;
}

uint64_t sub_1C3057E64()
{
  return 0x746361746E6F63;
}

uint64_t sub_1C3057E7C()
{
  return 7237491;
}

uint64_t sub_1C3057E90()
{
  return 0x6E6F73646E617267;
}

uint64_t sub_1C3057EA8()
{
  return 0x77656870656ELL;
}

uint64_t sub_1C3057EBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C3037980(*a1, *a2);
}

uint64_t sub_1C3057EC8(uint64_t a1, uint64_t a2)
{
  return sub_1C3058350(a1, a2, (void (*)(uint64_t))PersonOntologyNode.PersonNamePrefix.rawValue.getter);
}

uint64_t sub_1C3057ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C30583C4(a1, a2, a3, (void (*)(void))PersonOntologyNode.PersonNamePrefix.rawValue.getter);
}

uint64_t sub_1C3057EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3058420(a1, a2, a3, (void (*)(uint64_t))PersonOntologyNode.PersonNamePrefix.rawValue.getter);
}

SiriOntology::PersonOntologyNode::PersonNamePrefix_optional sub_1C3057EEC(Swift::String *a1)
{
  return PersonOntologyNode.PersonNamePrefix.init(rawValue:)(*a1);
}

uint64_t sub_1C3057EF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PersonOntologyNode.PersonNamePrefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C3057F1C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7D0F248;
}

SiriOntology::PersonOntologyNode::PersonNamePostfix_optional __swiftcall PersonOntologyNode.PersonNamePostfix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriOntology::PersonOntologyNode::PersonNamePostfix_optional)sub_1C3057F40(v1);
}

uint64_t sub_1C3057F40@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;
  char v5;

  v2 = sub_1C3379190();
  result = swift_bridgeObjectRelease();
  v4 = 0;
  v5 = 17;
  switch(v2)
  {
    case 0:
      goto LABEL_19;
    case 1:
      v4 = 1;
      goto LABEL_19;
    case 2:
      v4 = 2;
      goto LABEL_19;
    case 3:
      v4 = 3;
      goto LABEL_19;
    case 4:
      v4 = 4;
      goto LABEL_19;
    case 5:
      v4 = 5;
      goto LABEL_19;
    case 6:
      v4 = 6;
      goto LABEL_19;
    case 7:
      v4 = 7;
      goto LABEL_19;
    case 8:
      v4 = 8;
      goto LABEL_19;
    case 9:
      v4 = 9;
      goto LABEL_19;
    case 10:
      v4 = 10;
      goto LABEL_19;
    case 11:
      v4 = 11;
      goto LABEL_19;
    case 12:
      v4 = 12;
      goto LABEL_19;
    case 13:
      v4 = 13;
      goto LABEL_19;
    case 14:
      v4 = 14;
      goto LABEL_19;
    case 15:
      v4 = 15;
      goto LABEL_19;
    case 16:
      v4 = 16;
LABEL_19:
      v5 = v4;
      break;
    case 17:
      break;
    case 18:
      v5 = 18;
      break;
    case 19:
      v5 = 19;
      break;
    case 20:
      v5 = 20;
      break;
    case 21:
      v5 = 21;
      break;
    case 22:
      v5 = 22;
      break;
    case 23:
      v5 = 23;
      break;
    case 24:
      v5 = 24;
      break;
    case 25:
      v5 = 25;
      break;
    case 26:
      v5 = 26;
      break;
    case 27:
      v5 = 27;
      break;
    case 28:
      v5 = 28;
      break;
    case 29:
      v5 = 29;
      break;
    case 30:
      v5 = 30;
      break;
    case 31:
      v5 = 31;
      break;
    case 32:
      v5 = 32;
      break;
    case 33:
      v5 = 33;
      break;
    case 34:
      v5 = 34;
      break;
    default:
      v5 = 35;
      break;
  }
  *a1 = v5;
  return result;
}

void *static PersonOntologyNode.PersonNamePostfix.allCases.getter()
{
  return &unk_1E7D0F290;
}

uint64_t PersonOntologyNode.PersonNamePostfix.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C30580FC + 4 * byte_1C338BF56[*v0]))(0x726F696E756ALL, 0xE600000000000000);
}

uint64_t sub_1C30580FC()
{
  return 0x726F696E6573;
}

uint64_t sub_1C305810C()
{
  return 0x746361746E6F63;
}

uint64_t sub_1C3058124()
{
  return 7237491;
}

uint64_t sub_1C3058138()
{
  return 0x6E6F73646E617267;
}

uint64_t sub_1C3058150()
{
  return 0x77656870656ELL;
}

uint64_t sub_1C3058160()
{
  return 29293;
}

uint64_t sub_1C305816C()
{
  return 7565933;
}

uint64_t sub_1C305817C()
{
  return 29549;
}

uint64_t sub_1C3058188()
{
  return 29284;
}

uint64_t sub_1C3058194()
{
  return 1718579824;
}

uint64_t sub_1C30581A4()
{
  return 0x636F737361;
}

uint64_t sub_1C30581B8()
{
  return 7759218;
}

uint64_t sub_1C30581C8()
{
  return 29286;
}

uint64_t sub_1C30581D4()
{
  return 2037675105;
}

uint64_t sub_1C30581E4()
{
  return 7237480;
}

uint64_t sub_1C30581F8()
{
  return 1936028272;
}

uint64_t sub_1C3058208()
{
  return 7761767;
}

uint64_t sub_1C305821C()
{
  return 0x6863616F63;
}

uint64_t sub_1C3058230()
{
  return 6514287;
}

uint64_t sub_1C3058240()
{
  return 1953522019;
}

uint64_t sub_1C3058250()
{
  return 7106403;
}

uint64_t sub_1C3058260()
{
  return 0x6C6F6320746CLL;
}

uint64_t sub_1C3058270()
{
  return 6971757;
}

uint64_t sub_1C3058280()
{
  return 29804;
}

uint64_t sub_1C305828C()
{
  return 7628659;
}

uint64_t sub_1C30582A0()
{
  return 7499892;
}

uint64_t sub_1C30582B0()
{
  return 1919184227;
}

uint64_t sub_1C30582C0()
{
  return 0x72646D6320746CLL;
}

uint64_t sub_1C30582D8()
{
  return 7106659;
}

uint64_t sub_1C30582EC()
{
  return 7628132;
}

uint64_t sub_1C30582FC()
{
  return 7234919;
}

uint64_t sub_1C305830C()
{
  return 7632496;
}

uint64_t sub_1C305831C()
{
  return 7169121;
}

uint64_t sub_1C305832C()
{
  return 29299;
}

uint64_t sub_1C3058338(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C3037974(*a1, *a2);
}

uint64_t sub_1C3058344(uint64_t a1, uint64_t a2)
{
  return sub_1C3058350(a1, a2, (void (*)(uint64_t))PersonOntologyNode.PersonNamePostfix.rawValue.getter);
}

uint64_t sub_1C3058350(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = sub_1C3379208();
  a3(v4);
  sub_1C3378C38();
  swift_bridgeObjectRelease();
  return sub_1C3379244();
}

uint64_t sub_1C30583B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C30583C4(a1, a2, a3, (void (*)(void))PersonOntologyNode.PersonNamePostfix.rawValue.getter);
}

uint64_t sub_1C30583C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_1C3378C38();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3058414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3058420(a1, a2, a3, (void (*)(uint64_t))PersonOntologyNode.PersonNamePostfix.rawValue.getter);
}

uint64_t sub_1C3058420(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  v5 = sub_1C3379208();
  a4(v5);
  sub_1C3378C38();
  swift_bridgeObjectRelease();
  return sub_1C3379244();
}

SiriOntology::PersonOntologyNode::PersonNamePostfix_optional sub_1C3058484(Swift::String *a1)
{
  return PersonOntologyNode.PersonNamePostfix.init(rawValue:)(*a1);
}

uint64_t sub_1C3058490@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PersonOntologyNode.PersonNamePostfix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C30584B4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7D0F290;
}

void PersonOntologyNode.__allocating_init(name:multicardinal:childNodes:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PersonOntologyNode.init(name:multicardinal:childNodes:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t PersonOntologyNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PersonOntologyNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1C3058570()
{
  unint64_t result;

  result = qword_1EF7DF380;
  if (!qword_1EF7DF380)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for PersonOntologyNode.PersonSelfReference, &type metadata for PersonOntologyNode.PersonSelfReference);
    atomic_store(result, (unint64_t *)&qword_1EF7DF380);
  }
  return result;
}

unint64_t sub_1C30585B4(uint64_t a1)
{
  unint64_t result;

  result = sub_1C30585D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C30585D8()
{
  unint64_t result;

  result = qword_1EF81A350;
  if (!qword_1EF81A350)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for PersonOntologyNode.PersonSelfReference, &type metadata for PersonOntologyNode.PersonSelfReference);
    atomic_store(result, (unint64_t *)&qword_1EF81A350);
  }
  return result;
}

uint64_t sub_1C305861C()
{
  return sub_1C3014264(&qword_1EF81A358, &qword_1EF81A360);
}

unint64_t sub_1C3058640(uint64_t a1)
{
  unint64_t result;

  result = sub_1C3058664();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C3058664()
{
  unint64_t result;

  result = qword_1EF7DF378;
  if (!qword_1EF7DF378)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for PersonOntologyNode.PersonSelfReference, &type metadata for PersonOntologyNode.PersonSelfReference);
    atomic_store(result, (unint64_t *)&qword_1EF7DF378);
  }
  return result;
}

unint64_t sub_1C30586AC()
{
  unint64_t result;

  result = qword_1EF7DF360;
  if (!qword_1EF7DF360)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for PersonOntologyNode.PersonNamePrefix, &type metadata for PersonOntologyNode.PersonNamePrefix);
    atomic_store(result, (unint64_t *)&qword_1EF7DF360);
  }
  return result;
}

unint64_t sub_1C30586F0(uint64_t a1)
{
  unint64_t result;

  result = sub_1C3058714();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C3058714()
{
  unint64_t result;

  result = qword_1EF81A368;
  if (!qword_1EF81A368)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for PersonOntologyNode.PersonNamePrefix, &type metadata for PersonOntologyNode.PersonNamePrefix);
    atomic_store(result, (unint64_t *)&qword_1EF81A368);
  }
  return result;
}

uint64_t sub_1C3058758()
{
  return sub_1C3014264(&qword_1EF81A370, &qword_1EF81A378);
}

unint64_t sub_1C305877C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C30587A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C30587A0()
{
  unint64_t result;

  result = qword_1EF7DF358;
  if (!qword_1EF7DF358)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for PersonOntologyNode.PersonNamePrefix, &type metadata for PersonOntologyNode.PersonNamePrefix);
    atomic_store(result, (unint64_t *)&qword_1EF7DF358);
  }
  return result;
}

unint64_t sub_1C30587E8()
{
  unint64_t result;

  result = qword_1EF7DF370;
  if (!qword_1EF7DF370)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for PersonOntologyNode.PersonNamePostfix, &type metadata for PersonOntologyNode.PersonNamePostfix);
    atomic_store(result, (unint64_t *)&qword_1EF7DF370);
  }
  return result;
}

unint64_t sub_1C305882C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C3058850();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C3058850()
{
  unint64_t result;

  result = qword_1EF81A380;
  if (!qword_1EF81A380)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for PersonOntologyNode.PersonNamePostfix, &type metadata for PersonOntologyNode.PersonNamePostfix);
    atomic_store(result, (unint64_t *)&qword_1EF81A380);
  }
  return result;
}

uint64_t sub_1C3058894()
{
  return sub_1C3014264(&qword_1EF81A388, &qword_1EF81A390);
}

unint64_t sub_1C30588B8(uint64_t a1)
{
  unint64_t result;

  result = sub_1C30588DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C30588DC()
{
  unint64_t result;

  result = qword_1EF7DF368;
  if (!qword_1EF7DF368)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for PersonOntologyNode.PersonNamePostfix, &type metadata for PersonOntologyNode.PersonNamePostfix);
    atomic_store(result, (unint64_t *)&qword_1EF7DF368);
  }
  return result;
}

uint64_t type metadata accessor for PersonOntologyNode()
{
  return objc_opt_self();
}

uint64_t method lookup function for PersonOntologyNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonOntologyNode.__allocating_init(name:multicardinal:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t getEnumTagSinglePayload for PersonOntologyNode.PersonSelfReference(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for PersonOntologyNode.PersonSelfReference(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C30589E8 + 4 * byte_1C338BF79[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C3058A08 + 4 * byte_1C338BF7E[v4]))();
}

_BYTE *sub_1C30589E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C3058A08(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C3058A10(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C3058A18(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C3058A20(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C3058A28(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1C3058A34()
{
  return 0;
}

ValueMetadata *type metadata accessor for PersonOntologyNode.PersonSelfReference()
{
  return &type metadata for PersonOntologyNode.PersonSelfReference;
}

ValueMetadata *type metadata accessor for PersonOntologyNode.PersonNamePrefix()
{
  return &type metadata for PersonOntologyNode.PersonNamePrefix;
}

uint64_t getEnumTagSinglePayload for UsoEntity_appleMessage_MessageAttribute.DefinedValues(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xDE)
    goto LABEL_17;
  if (a2 + 34 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 34) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 34;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 34;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 34;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x23;
  v8 = v6 - 35;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12SiriOntology18PersonOntologyNodeC16PersonNamePrefixOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 34 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 34) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDD)
    return ((uint64_t (*)(void))((char *)&loc_1C3058B40 + 4 * byte_1C338BF88[v4]))();
  *a1 = a2 + 34;
  return ((uint64_t (*)(void))((char *)sub_1C3058B74 + 4 * byte_1C338BF83[v4]))();
}

uint64_t sub_1C3058B74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C3058B7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C3058B84);
  return result;
}

uint64_t sub_1C3058B90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C3058B98);
  *(_BYTE *)result = a2 + 34;
  return result;
}

uint64_t sub_1C3058B9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C3058BA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonOntologyNode.PersonNamePostfix()
{
  return &type metadata for PersonOntologyNode.PersonNamePostfix;
}

void Com_Apple_Siri_Product_Proto_Period.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t Com_Apple_Siri_Product_Proto_Period.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 0x37;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Period.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_1C3058BF8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Com_Apple_Siri_Product_Proto_Period.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C3058C00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Com_Apple_Siri_Product_Proto_Period.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C3058C24()
{
  sub_1C306684C();
  return sub_1C337895C();
}

BOOL sub_1C3058C5C()
{
  uint64_t v0;

  v0 = Com_Apple_Siri_Product_Proto_Period.rawValue.getter();
  return v0 == Com_Apple_Siri_Product_Proto_Period.rawValue.getter();
}

void sub_1C3058CB8()
{
  qword_1EF81A398 = (uint64_t)&unk_1E7D0F2D8;
}

uint64_t static Com_Apple_Siri_Product_Proto_Period.allCases.getter()
{
  return sub_1C3038FDC(&qword_1EF80A688);
}

uint64_t static Com_Apple_Siri_Product_Proto_Period.allCases.setter(uint64_t a1)
{
  return sub_1C3039050(a1, &qword_1EF80A688, &qword_1EF81A398);
}

uint64_t (*static Com_Apple_Siri_Product_Proto_Period.allCases.modify())()
{
  if (qword_1EF80A688 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C3058D70@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C303913C(&qword_1EF80A688, &qword_1EF81A398, a1);
}

unint64_t Com_Apple_Siri_Product_Proto_Qualifier.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 0x14;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_1C3058DA8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Com_Apple_Siri_Product_Proto_Qualifier.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C3058DB0()
{
  sub_1C3066890();
  return sub_1C337895C();
}

BOOL sub_1C3058DE8(uint64_t a1, uint64_t *a2)
{
  return sub_1C3055390(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_1C3058E04()
{
  qword_1EF81A3A0 = (uint64_t)&unk_1E7D0F668;
}

uint64_t static Com_Apple_Siri_Product_Proto_Qualifier.allCases.getter()
{
  return sub_1C3038FDC(&qword_1EF80A690);
}

uint64_t static Com_Apple_Siri_Product_Proto_Qualifier.allCases.setter(uint64_t a1)
{
  return sub_1C3039050(a1, &qword_1EF80A690, &qword_1EF81A3A0);
}

uint64_t (*static Com_Apple_Siri_Product_Proto_Qualifier.allCases.modify())()
{
  if (qword_1EF80A690 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C3058EBC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C303913C(&qword_1EF80A690, &qword_1EF81A3A0, a1);
}

unint64_t Com_Apple_Siri_Product_Proto_CalendarSystem.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 0xD;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_1C3058EF4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Com_Apple_Siri_Product_Proto_CalendarSystem.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C3058EFC()
{
  sub_1C30668D4();
  return sub_1C337895C();
}

void sub_1C3058F34()
{
  qword_1EF81A3A8 = (uint64_t)&unk_1E7D0F7C8;
}

uint64_t static Com_Apple_Siri_Product_Proto_CalendarSystem.allCases.getter()
{
  return sub_1C3038FDC(&qword_1EF80A698);
}

uint64_t static Com_Apple_Siri_Product_Proto_CalendarSystem.allCases.setter(uint64_t a1)
{
  return sub_1C3039050(a1, &qword_1EF80A698, &qword_1EF81A3A8);
}

uint64_t (*static Com_Apple_Siri_Product_Proto_CalendarSystem.allCases.modify())()
{
  if (qword_1EF80A698 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C3058FEC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C303913C(&qword_1EF80A698, &qword_1EF81A3A8, a1);
}

unint64_t Com_Apple_Siri_Product_Proto_DayOfWeek.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 8;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_1C3059024@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Com_Apple_Siri_Product_Proto_DayOfWeek.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C305902C()
{
  sub_1C3066918();
  return sub_1C337895C();
}

void sub_1C3059064()
{
  qword_1EF81A3B0 = (uint64_t)&unk_1E7D0F8B8;
}

uint64_t static Com_Apple_Siri_Product_Proto_DayOfWeek.allCases.getter()
{
  return sub_1C3038FDC(&qword_1EF80A6A0);
}

uint64_t static Com_Apple_Siri_Product_Proto_DayOfWeek.allCases.setter(uint64_t a1)
{
  return sub_1C3039050(a1, &qword_1EF80A6A0, &qword_1EF81A3B0);
}

uint64_t (*static Com_Apple_Siri_Product_Proto_DayOfWeek.allCases.modify())()
{
  if (qword_1EF80A6A0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C305911C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C303913C(&qword_1EF80A6A0, &qword_1EF81A3B0, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimePeriod.isStart.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimePeriod.isStart.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_DateTimePeriod.isStart.modify())()
{
  return nullsub_1;
}

uint64_t (*Com_Apple_Siri_Product_Proto_DateTimePeriod.period.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimePeriod.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303A584(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, a1);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF81A808);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimePeriod.unknownFields.setter(uint64_t a1)
{
  return sub_1C303A5DC(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
}

uint64_t (*Com_Apple_Siri_Product_Proto_DateTimePeriod.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimePeriod.init()@<X0>(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t Com_Apple_Siri_Product_Proto_FractionalPeriod.numerator.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t Com_Apple_Siri_Product_Proto_FractionalPeriod.numerator.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_FractionalPeriod.numerator.modify())()
{
  return nullsub_1;
}

uint64_t (*Com_Apple_Siri_Product_Proto_FractionalPeriod.denominator.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_FractionalPeriod.ordinalValue.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t Com_Apple_Siri_Product_Proto_FractionalPeriod.ordinalValue.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_FractionalPeriod.ordinalValue.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_FractionalPeriod.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0) + 28);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF81A8A0);
}

uint64_t Com_Apple_Siri_Product_Proto_FractionalPeriod.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0) + 28);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Com_Apple_Siri_Product_Proto_FractionalPeriod.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_FractionalPeriod.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t Com_Apple_Siri_Product_Proto_Time.meridiem.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.meridiem.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Time.meridiem.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.hourOfDay.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t Com_Apple_Siri_Product_Proto_Time.hourOfDay.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Time.hourOfDay.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.minute.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 20);
}

uint64_t Com_Apple_Siri_Product_Proto_Time.minute.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Time.minute.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.period.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 52), (uint64_t)v5, &qword_1EF81A518);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, a1, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF81A518);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_Time(uint64_t a1)
{
  return sub_1C2FE8350(a1, (uint64_t *)&unk_1EF81A938);
}

uint64_t sub_1C3059504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 52), (uint64_t)v6, &qword_1EF81A518);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  *(_BYTE *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1EF81A518);
}

uint64_t sub_1C30595F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2FF6C7C(a1, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  v8 = a2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0) + 52);
  sub_1C2FF9138(v8, &qword_1EF81A518);
  sub_1C2FF6C38((uint64_t)v7, v8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_Time.period.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0) + 52);
  sub_1C2FF9138(v3, &qword_1EF81A518);
  sub_1C2FF6C38(a1, v3, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Com_Apple_Siri_Product_Proto_Time.period.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0) + 52);
  *((_DWORD *)v3 + 12) = v10;
  sub_1C2FF6CFC(v1 + v10, (uint64_t)v5, &qword_1EF81A518);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_BYTE *)v9 = 0;
    v9[1] = 0;
    *((_BYTE *)v9 + 16) = 1;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF81A518);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  }
  return sub_1C3059864;
}

void sub_1C3059864(uint64_t a1, char a2)
{
  sub_1C303CE20(a1, a2, &qword_1EF81A518, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
}

BOOL Com_Apple_Siri_Product_Proto_Time.hasPeriod.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  sub_1C2FF6CFC(v0 + *(int *)(v4 + 52), (uint64_t)v3, &qword_1EF81A518);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1C2FF9138((uint64_t)v3, &qword_1EF81A518);
  return v6;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_Time.clearPeriod()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0) + 52);
  sub_1C2FF9138(v1, &qword_1EF81A518);
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

void Com_Apple_Siri_Product_Proto_Time.qualifier.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.qualifier.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 32) = v2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Time.qualifier.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.timeZoneID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.timeZoneID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Time.timeZoneID.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.isStart.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t Com_Apple_Siri_Product_Proto_Time.isStart.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Time.isStart.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.isUserDefined.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t Com_Apple_Siri_Product_Proto_Time.isUserDefined.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 57) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Time.isUserDefined.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.is24HourStyleInput.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t Com_Apple_Siri_Product_Proto_Time.is24HourStyleInput.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 58) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Time.is24HourStyleInput.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0) + 48);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_Time.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0) + 48);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Com_Apple_Siri_Product_Proto_Time.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_WORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 58) = 0;
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v3 = a1 + *(int *)(v2 + 52);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
}

uint64_t (*Com_Apple_Siri_Product_Proto_DateTimeHoliday.id.modify())()
{
  return nullsub_1;
}

uint64_t (*Com_Apple_Siri_Product_Proto_DateTimeHoliday.calendarSystem.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimeHoliday.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303A584(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday, a1);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF81A9F0);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimeHoliday.unknownFields.setter(uint64_t a1)
{
  return sub_1C303A5DC(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
}

uint64_t (*Com_Apple_Siri_Product_Proto_DateTimeHoliday.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimeHoliday.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t Com_Apple_Siri_Product_Proto_Date.year.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.year.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Date.year.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.month.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t Com_Apple_Siri_Product_Proto_Date.month.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Date.month.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.dayOfMonth.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t Com_Apple_Siri_Product_Proto_Date.dayOfMonth.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Date.dayOfMonth.modify())()
{
  return nullsub_1;
}

void Com_Apple_Siri_Product_Proto_Date.dayOfWeek.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.dayOfWeek.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Date.dayOfWeek.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.dateTimeHoliday.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A520);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 60), (uint64_t)v5, &qword_1EF81A520);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, a1, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF81A520);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_Date(uint64_t a1)
{
  return sub_1C2FE8350(a1, (uint64_t *)&unk_1EF81AA88);
}

uint64_t sub_1C3059E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A520);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 60), (uint64_t)v6, &qword_1EF81A520);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1EF81A520);
}

uint64_t sub_1C3059F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2FF6C7C(a1, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  v8 = a2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0) + 60);
  sub_1C2FF9138(v8, &qword_1EF81A520);
  sub_1C2FF6C38((uint64_t)v7, v8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_Date.dateTimeHoliday.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0) + 60);
  sub_1C2FF9138(v3, &qword_1EF81A520);
  sub_1C2FF6C38(a1, v3, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Com_Apple_Siri_Product_Proto_Date.dateTimeHoliday.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A520);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0) + 60);
  *((_DWORD *)v3 + 12) = v10;
  sub_1C2FF6CFC(v1 + v10, (uint64_t)v5, &qword_1EF81A520);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    *((_BYTE *)v9 + 24) = 1;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF81A520);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  }
  return sub_1C305A180;
}

void sub_1C305A180(uint64_t a1, char a2)
{
  sub_1C303CE20(a1, a2, &qword_1EF81A520, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
}

BOOL Com_Apple_Siri_Product_Proto_Date.hasDateTimeHoliday.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A520);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  sub_1C2FF6CFC(v0 + *(int *)(v4 + 60), (uint64_t)v3, &qword_1EF81A520);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1C2FF9138((uint64_t)v3, &qword_1EF81A520);
  return v6;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_Date.clearDateTimeHoliday()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0) + 60);
  sub_1C2FF9138(v1, &qword_1EF81A520);
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

void Com_Apple_Siri_Product_Proto_Date.qualifier.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.qualifier.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 40) = v2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Date.qualifier.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.isStart.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t Com_Apple_Siri_Product_Proto_Date.isStart.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Date.isStart.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.isUserDefined.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t Com_Apple_Siri_Product_Proto_Date.isUserDefined.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 42) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Date.isUserDefined.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.periods.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Com_Apple_Siri_Product_Proto_Date.periods.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Date.periods.modify())()
{
  return nullsub_1;
}

void Com_Apple_Siri_Product_Proto_Date.calendarSystem.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 64);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.calendarSystem.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 56) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 64) = v2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Date.calendarSystem.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.fractionalPeriod.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A528);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  sub_1C2FF6CFC(v1 + *(int *)(v6 + 64), (uint64_t)v5, &qword_1EF81A528);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, a1, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF81A528);
}

uint64_t sub_1C305A478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A528);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  sub_1C2FF6CFC(a1 + *(int *)(v7 + 64), (uint64_t)v6, &qword_1EF81A528);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
  *(_QWORD *)a2 = 0;
  *(_DWORD *)(a2 + 8) = 0;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1EF81A528);
}

uint64_t sub_1C305A564(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2FF6C7C(a1, (uint64_t)v7, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
  v8 = a2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0) + 64);
  sub_1C2FF9138(v8, &qword_1EF81A528);
  sub_1C2FF6C38((uint64_t)v7, v8, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_Date.fractionalPeriod.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0) + 64);
  sub_1C2FF9138(v3, &qword_1EF81A528);
  sub_1C2FF6C38(a1, v3, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Com_Apple_Siri_Product_Proto_Date.fractionalPeriod.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _DWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A528);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0) + 64);
  *((_DWORD *)v3 + 12) = v10;
  sub_1C2FF6CFC(v1 + v10, (uint64_t)v5, &qword_1EF81A528);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_QWORD *)v9 = 0;
    v9[2] = 0;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF81A528);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
  }
  return sub_1C305A7C8;
}

void sub_1C305A7C8(uint64_t a1, char a2)
{
  sub_1C303CE20(a1, a2, &qword_1EF81A528, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
}

BOOL Com_Apple_Siri_Product_Proto_Date.hasFractionalPeriod.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A528);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  sub_1C2FF6CFC(v0 + *(int *)(v4 + 64), (uint64_t)v3, &qword_1EF81A528);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1C2FF9138((uint64_t)v3, &qword_1EF81A528);
  return v6;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_Date.clearFractionalPeriod()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0) + 64);
  sub_1C2FF9138(v1, &qword_1EF81A528);
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t Com_Apple_Siri_Product_Proto_Date.dayOfWeekOrdinalValue.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 68);
}

uint64_t Com_Apple_Siri_Product_Proto_Date.dayOfWeekOrdinalValue.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 68) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Date.dayOfWeekOrdinalValue.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0) + 56);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Com_Apple_Siri_Product_Proto_Date.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0) + 56);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Com_Apple_Siri_Product_Proto_Date.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_WORD *)(a1 + 41) = 0;
  *(_QWORD *)(a1 + 48) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 1;
  *(_DWORD *)(a1 + 68) = 0;
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v3 = a1 + *(int *)(v2 + 60);
  v4 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = a1 + *(int *)(v2 + 64);
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
}

double Com_Apple_Siri_Product_Proto_Duration.duration.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void Com_Apple_Siri_Product_Proto_Duration.duration.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Duration.duration.modify())()
{
  return nullsub_1;
}

void Com_Apple_Siri_Product_Proto_Duration.period.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t Com_Apple_Siri_Product_Proto_Duration.period.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 8) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Duration.period.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Duration.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303A584(type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, a1);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF81AB58);
}

uint64_t Com_Apple_Siri_Product_Proto_Duration.unknownFields.setter(uint64_t a1)
{
  return sub_1C303A5DC(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
}

uint64_t (*Com_Apple_Siri_Product_Proto_Duration.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Duration.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(0);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t (*Com_Apple_Siri_Product_Proto_Interval.quantity.modify())()
{
  return nullsub_1;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Interval.period.modify())()
{
  return nullsub_1;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Interval.qualifier.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Interval.isUserDefined.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t Com_Apple_Siri_Product_Proto_Interval.isUserDefined.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Interval.isUserDefined.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Interval.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0) + 32);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF81ABF0);
}

uint64_t Com_Apple_Siri_Product_Proto_Interval.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0) + 32);
  v4 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Com_Apple_Siri_Product_Proto_Interval.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Interval.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t (*Com_Apple_Siri_Product_Proto_Recurrence.magnitude.modify())()
{
  return nullsub_1;
}

uint64_t (*Com_Apple_Siri_Product_Proto_Recurrence.period.modify())()
{
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Recurrence.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C303A584(type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, a1);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF81AC90);
}

uint64_t Com_Apple_Siri_Product_Proto_Recurrence.unknownFields.setter(uint64_t a1)
{
  return sub_1C303A5DC(a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
}

uint64_t (*Com_Apple_Siri_Product_Proto_Recurrence.unknownFields.modify())(_QWORD)
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(0);
  return nullsub_1;
}

uint64_t Com_Apple_Siri_Product_Proto_Recurrence.init()@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(0);
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C305AFEC(&OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate, a1);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(uint64_t a1)
{
  return sub_1C2FE8350(a1, qword_1EF7DDF38);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.startDate.setter(uint64_t a1)
{
  return sub_1C305C3D8(a1, &qword_1EF81A530, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate);
}

uint64_t type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime._StorageClass(uint64_t a1)
{
  return sub_1C2FE8350(a1, (uint64_t *)&unk_1EF81ACF8);
}

void (*Com_Apple_Siri_Product_Proto_DateTime.startDate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A530);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1EF81A530);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_QWORD *)v9 = 0;
    *((_DWORD *)v9 + 2) = 0;
    *((_QWORD *)v9 + 2) = 0;
    v9[24] = 1;
    *((_QWORD *)v9 + 4) = 0;
    v9[40] = 1;
    *(_WORD *)(v9 + 41) = 0;
    *((_QWORD *)v9 + 6) = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)v9 + 7) = 0;
    v9[64] = 1;
    *((_DWORD *)v9 + 17) = 0;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    v11 = &v9[*(int *)(v6 + 60)];
    v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v13 = &v9[*(int *)(v6 + 64)];
    v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
    sub_1C2FF9138((uint64_t)v5, &qword_1EF81A530);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  }
  return sub_1C305AF94;
}

void sub_1C305AF94(uint64_t a1, char a2)
{
  sub_1C2FF0834(a1, a2, (void (*)(void *))Com_Apple_Siri_Product_Proto_DateTime.startDate.setter, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
}

BOOL Com_Apple_Siri_Product_Proto_DateTime.hasStartDate.getter()
{
  return sub_1C305B398(&qword_1EF81A530, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_DateTime.clearStartDate()()
{
  sub_1C305B494(&qword_1EF81A530, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C305AFEC(&OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate, a1);
}

uint64_t sub_1C305AFEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A530);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20)) + *a1;
  swift_beginAccess();
  sub_1C2FF6CFC(v8, (uint64_t)v7, &qword_1EF81A530);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) != 1)
    return sub_1C2FF6C38((uint64_t)v7, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  *(_QWORD *)a2 = 0;
  *(_DWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  *(_WORD *)(a2 + 41) = 0;
  *(_QWORD *)(a2 + 48) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 56) = 0;
  *(_BYTE *)(a2 + 64) = 1;
  *(_DWORD *)(a2 + 68) = 0;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v10 = a2 + *(int *)(v9 + 60);
  v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = a2 + *(int *)(v9 + 64);
  v13 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  return sub_1C2FF9138((uint64_t)v7, &qword_1EF81A530);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.endDate.setter(uint64_t a1)
{
  return sub_1C305C3D8(a1, &qword_1EF81A530, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate);
}

void (*Com_Apple_Siri_Product_Proto_DateTime.endDate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A530);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1EF81A530);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_QWORD *)v9 = 0;
    *((_DWORD *)v9 + 2) = 0;
    *((_QWORD *)v9 + 2) = 0;
    v9[24] = 1;
    *((_QWORD *)v9 + 4) = 0;
    v9[40] = 1;
    *(_WORD *)(v9 + 41) = 0;
    *((_QWORD *)v9 + 6) = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)v9 + 7) = 0;
    v9[64] = 1;
    *((_DWORD *)v9 + 17) = 0;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    v11 = &v9[*(int *)(v6 + 60)];
    v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v13 = &v9[*(int *)(v6 + 64)];
    v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
    sub_1C2FF9138((uint64_t)v5, &qword_1EF81A530);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  }
  return sub_1C305B368;
}

void sub_1C305B368(uint64_t a1, char a2)
{
  sub_1C2FF0834(a1, a2, (void (*)(void *))Com_Apple_Siri_Product_Proto_DateTime.endDate.setter, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
}

BOOL Com_Apple_Siri_Product_Proto_DateTime.hasEndDate.getter()
{
  return sub_1C305B398(&qword_1EF81A530, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
}

BOOL sub_1C305B398(uint64_t *a1, _QWORD *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20)) + *a2;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v9, a1);
  v11 = a3(0);
  v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_1C2FF9138((uint64_t)v9, a1);
  return v12;
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_DateTime.clearEndDate()()
{
  sub_1C305B494(&qword_1EF81A530, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate);
}

uint64_t sub_1C305B494(uint64_t *a1, uint64_t (*a2)(_QWORD), _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v7 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime._StorageClass(0);
    swift_allocObject();
    v12 = swift_retain();
    v13 = sub_1C30661C0(v12);
    swift_release();
    *(_QWORD *)(v7 + v11) = v13;
    swift_release();
  }
  v14 = *(_QWORD *)(v7 + v11);
  v15 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
  v16 = v14 + *a3;
  swift_beginAccess();
  swift_retain();
  sub_1C2FF6D84((uint64_t)v10, v16, a1);
  swift_endAccess();
  return swift_release();
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.duration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A548);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration;
  swift_beginAccess();
  sub_1C2FF6CFC(v6, (uint64_t)v5, &qword_1EF81A548);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF81A548);
}

uint64_t sub_1C305B6E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A548);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration;
  swift_beginAccess();
  sub_1C2FF6CFC(v7, (uint64_t)v6, &qword_1EF81A548);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1EF81A548);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.duration.setter(uint64_t a1)
{
  return sub_1C305C3D8(a1, &qword_1EF81A548, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration);
}

void (*Com_Apple_Siri_Product_Proto_DateTime.duration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A548);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1EF81A548);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0;
    *((_BYTE *)v9 + 16) = 1;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF81A548);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
  }
  return sub_1C305B95C;
}

void sub_1C305B95C(uint64_t a1, char a2)
{
  sub_1C2FF0834(a1, a2, (void (*)(void *))Com_Apple_Siri_Product_Proto_DateTime.duration.setter, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
}

BOOL Com_Apple_Siri_Product_Proto_DateTime.hasDuration.getter()
{
  return sub_1C305B398(&qword_1EF81A548, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_DateTime.clearDuration()()
{
  sub_1C305B494(&qword_1EF81A548, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.interval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A558);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval;
  swift_beginAccess();
  sub_1C2FF6CFC(v6, (uint64_t)v5, &qword_1EF81A558);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF81A558);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.interval.setter(uint64_t a1)
{
  return sub_1C305C3D8(a1, &qword_1EF81A558, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval);
}

void (*Com_Apple_Siri_Product_Proto_DateTime.interval.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A558);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1EF81A558);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0;
    *((_BYTE *)v9 + 16) = 1;
    v9[3] = 0;
    *((_WORD *)v9 + 16) = 1;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF81A558);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval);
  }
  return sub_1C305BC2C;
}

void sub_1C305BC2C(uint64_t a1, char a2)
{
  sub_1C2FF0834(a1, a2, (void (*)(void *))Com_Apple_Siri_Product_Proto_DateTime.interval.setter, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval);
}

BOOL Com_Apple_Siri_Product_Proto_DateTime.hasInterval.getter()
{
  return sub_1C305B398(&qword_1EF81A558, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval);
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_DateTime.clearInterval()()
{
  sub_1C305B494(&qword_1EF81A558, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.recurrence.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A568);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence;
  swift_beginAccess();
  sub_1C2FF6CFC(v6, (uint64_t)v5, &qword_1EF81A568);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_1C2FF6C38((uint64_t)v5, a1, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v5, &qword_1EF81A568);
}

uint64_t sub_1C305BD90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A568);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence;
  swift_beginAccess();
  sub_1C2FF6CFC(v7, (uint64_t)v6, &qword_1EF81A568);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_1C2FF6C38((uint64_t)v6, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  return sub_1C2FF9138((uint64_t)v6, &qword_1EF81A568);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.recurrence.setter(uint64_t a1)
{
  return sub_1C305C3D8(a1, &qword_1EF81A568, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence);
}

void (*Com_Apple_Siri_Product_Proto_DateTime.recurrence.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A568);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1EF81A568);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_DWORD *)v9 = 0;
    v9[1] = 0;
    *((_BYTE *)v9 + 16) = 1;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    sub_1C2FF9138((uint64_t)v5, &qword_1EF81A568);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
  }
  return sub_1C305C010;
}

void sub_1C305C010(uint64_t a1, char a2)
{
  sub_1C2FF0834(a1, a2, (void (*)(void *))Com_Apple_Siri_Product_Proto_DateTime.recurrence.setter, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
}

BOOL Com_Apple_Siri_Product_Proto_DateTime.hasRecurrence.getter()
{
  return sub_1C305B398(&qword_1EF81A568, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_DateTime.clearRecurrence()()
{
  sub_1C305B494(&qword_1EF81A568, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C305C260(&OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.startTime.setter(uint64_t a1)
{
  return sub_1C305C3D8(a1, &qword_1EF81A578, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime);
}

void (*Com_Apple_Siri_Product_Proto_DateTime.startTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A578);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1EF81A578);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0;
    *((_BYTE *)v9 + 32) = 1;
    v9[5] = 0;
    v9[6] = 0xE000000000000000;
    *((_WORD *)v9 + 28) = 0;
    *((_BYTE *)v9 + 58) = 0;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    v11 = (char *)v9 + *(int *)(v6 + 52);
    v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_1C2FF9138((uint64_t)v5, &qword_1EF81A578);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
  }
  return sub_1C305C208;
}

void sub_1C305C208(uint64_t a1, char a2)
{
  sub_1C2FF0834(a1, a2, (void (*)(void *))Com_Apple_Siri_Product_Proto_DateTime.startTime.setter, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
}

BOOL Com_Apple_Siri_Product_Proto_DateTime.hasStartTime.getter()
{
  return sub_1C305B398(&qword_1EF81A578, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_DateTime.clearStartTime()()
{
  sub_1C305B494(&qword_1EF81A578, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.endTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C305C260(&OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime, a1);
}

uint64_t sub_1C305C260@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A578);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20)) + *a1;
  swift_beginAccess();
  sub_1C2FF6CFC(v8, (uint64_t)v7, &qword_1EF81A578);
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) != 1)
    return sub_1C2FF6C38((uint64_t)v7, a2, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 1;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0xE000000000000000;
  *(_WORD *)(a2 + 56) = 0;
  *(_BYTE *)(a2 + 58) = 0;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v10 = a2 + *(int *)(v9 + 52);
  v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  return sub_1C2FF9138((uint64_t)v7, &qword_1EF81A578);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.endTime.setter(uint64_t a1)
{
  return sub_1C305C3D8(a1, &qword_1EF81A578, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime);
}

uint64_t sub_1C305C3D8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v8 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - v14;
  v16 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime._StorageClass(0);
    swift_allocObject();
    v17 = swift_retain();
    v18 = sub_1C30661C0(v17);
    swift_release();
    *(_QWORD *)(v8 + v16) = v18;
    swift_release();
  }
  v19 = *(_QWORD *)(v8 + v16);
  sub_1C2FF6C38(a1, (uint64_t)v15, a3);
  v20 = a3(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v15, 0, 1, v20);
  sub_1C2FF6D40((uint64_t)v15, (uint64_t)v13, a2);
  v21 = v19 + *a4;
  swift_beginAccess();
  swift_retain();
  sub_1C2FF6D84((uint64_t)v13, v21, a2);
  swift_endAccess();
  return swift_release();
}

void (*Com_Apple_Siri_Product_Proto_DateTime.endTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A578);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime;
  swift_beginAccess();
  sub_1C2FF6CFC(v10, (uint64_t)v5, &qword_1EF81A578);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0;
    *((_BYTE *)v9 + 32) = 1;
    v9[5] = 0;
    v9[6] = 0xE000000000000000;
    *((_WORD *)v9 + 28) = 0;
    *((_BYTE *)v9 + 58) = 0;
    _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
    v11 = (char *)v9 + *(int *)(v6 + 52);
    v12 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_1C2FF9138((uint64_t)v5, &qword_1EF81A578);
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v5, (uint64_t)v9, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
  }
  return sub_1C305C6E4;
}

void sub_1C305C6E4(uint64_t a1, char a2)
{
  sub_1C2FF0834(a1, a2, (void (*)(void *))Com_Apple_Siri_Product_Proto_DateTime.endTime.setter, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
}

BOOL Com_Apple_Siri_Product_Proto_DateTime.hasEndTime.getter()
{
  return sub_1C305B398(&qword_1EF81A578, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
}

Swift::Void __swiftcall Com_Apple_Siri_Product_Proto_DateTime.clearEndTime()()
{
  sub_1C305B494(&qword_1EF81A578, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.startPosition.getter()
{
  return sub_1C305C7E0(&OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.startPosition.setter(int a1)
{
  return sub_1C305C8F8(a1, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition);
}

void (*Com_Apple_Siri_Product_Proto_DateTime.startPosition.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = (_DWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_1C305C7C8;
}

void sub_1C305C7C8(uint64_t *a1, char a2)
{
  sub_1C305CA3C(a1, a2, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.endPosition.getter()
{
  return sub_1C305C7E0(&OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition);
}

uint64_t sub_1C305C7E0(_QWORD *a1)
{
  uint64_t v1;
  unsigned int *v2;

  v2 = (unsigned int *)(*(_QWORD *)(v1
                                  + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
                      + *a1);
  swift_beginAccess();
  return *v2;
}

uint64_t sub_1C305C834(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t result;

  v7 = *a1;
  v8 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_1C30661C0(v9);
    swift_release();
    *(_QWORD *)(a2 + v8) = v10;
    swift_release();
  }
  v11 = (_DWORD *)(*(_QWORD *)(a2 + v8) + *a5);
  result = swift_beginAccess();
  *v11 = v7;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.endPosition.setter(int a1)
{
  return sub_1C305C8F8(a1, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition);
}

uint64_t sub_1C305C8F8(int a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  uint64_t result;

  v4 = v2;
  v6 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime._StorageClass(0);
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_1C30661C0(v7);
    swift_release();
    *(_QWORD *)(v4 + v6) = v8;
    swift_release();
  }
  v9 = (_DWORD *)(*(_QWORD *)(v4 + v6) + *a2);
  result = swift_beginAccess();
  *v9 = a1;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_DateTime.endPosition.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = (_DWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_1C305CA30;
}

void sub_1C305CA30(uint64_t *a1, char a2)
{
  sub_1C305CA3C(a1, a2, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition);
}

void sub_1C305CA3C(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  int v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;

  v5 = *a1;
  v6 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v8 = *(int *)(v5 + 84);
    v9 = *(_QWORD *)(v5 + 72);
    type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    v11 = sub_1C30661C0(v10);
    swift_release();
    *(_QWORD *)(v9 + v8) = v11;
    swift_release();
  }
LABEL_4:
  v12 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 72) + *(int *)(v5 + 84)) + *a3);
  swift_beginAccess();
  *v12 = v6;
  free((void *)v5);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.temporalIntent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent;
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_1C305CB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent;
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1C305CBEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_1C30661C0(v6);
    swift_release();
    *(_QWORD *)(a2 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(a2 + v5)
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent;
  result = swift_beginAccess();
  *(_QWORD *)v8 = v3;
  *(_BYTE *)(v8 + 8) = v4;
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.temporalIntent.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v2 = v1;
  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_1C30661C0(v6);
    swift_release();
    *(_QWORD *)(v2 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v2 + v5)
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent;
  result = swift_beginAccess();
  *(_QWORD *)v8 = v3;
  *(_BYTE *)(v8 + 8) = v4;
  return result;
}

void (*Com_Apple_Siri_Product_Proto_DateTime.temporalIntent.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent;
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 8);
  v3[9] = *(_QWORD *)v5;
  *((_BYTE *)v3 + 80) = v6;
  return sub_1C305CDF4;
}

void sub_1C305CDF4(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_1C30661C0(v9);
    swift_release();
    *(_QWORD *)(v8 + v7) = v10;
    swift_release();
  }
LABEL_4:
  v11 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84))
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent;
  swift_beginAccess();
  *(_QWORD *)v11 = v4;
  *(_BYTE *)(v11 + 8) = v5;
  free((void *)v3);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*Com_Apple_Siri_Product_Proto_DateTime.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 4;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_1C305CF7C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C305CF84()
{
  sub_1C306A968();
  return sub_1C337895C();
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v2 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  if (qword_1EF80A718 != -1)
    swift_once();
  *(_QWORD *)(a1 + v2) = qword_1EF81A4F8;
  return swift_retain();
}

void sub_1C305D01C()
{
  qword_1EF81A3B8 = (uint64_t)&unk_1E7D0F958;
}

uint64_t static Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent.allCases.getter()
{
  return sub_1C3038FDC(&qword_1EF80A6A8);
}

uint64_t static Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent.allCases.setter(uint64_t a1)
{
  return sub_1C3039050(a1, &qword_1EF80A6A8, &qword_1EF81A3B8);
}

uint64_t (*static Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent.allCases.modify())()
{
  if (qword_1EF80A6A8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C305D0D4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C303913C(&qword_1EF80A6A8, &qword_1EF81A3B8, a1);
}

uint64_t sub_1C305D0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  _QWORD *v51;
  char *v52;
  _QWORD *v53;
  char *v54;
  _QWORD *v55;
  char *v56;
  _QWORD *v57;
  char *v58;
  _QWORD *v59;
  char *v60;
  _QWORD *v61;
  char *v62;
  _QWORD *v63;
  char *v64;
  _QWORD *v65;
  char *v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  _QWORD *v72;
  char *v73;
  _QWORD *v74;
  char *v75;
  _QWORD *v76;
  char *v77;
  _QWORD *v78;
  char *v79;
  _QWORD *v80;
  char *v81;
  _QWORD *v82;
  char *v83;
  _QWORD *v84;
  char *v85;
  _QWORD *v86;
  char *v87;
  _QWORD *v88;
  char *v89;
  _QWORD *v90;
  char *v91;
  _QWORD *v92;
  char *v93;
  _QWORD *v94;
  char *v95;
  _QWORD *v96;
  char *v97;
  _QWORD *v98;
  char *v99;
  _QWORD *v100;
  char *v101;
  _QWORD *v102;
  char *v103;
  _QWORD *v104;
  char *v105;
  _QWORD *v106;
  char *v107;
  _QWORD *v108;
  char *v109;
  _QWORD *v110;
  char *v111;
  _QWORD *v112;
  char *v113;
  uint64_t v115;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF81A3C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF81A3C0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v115 = swift_allocObject();
  *(_OWORD *)(v115 + 16) = xmmword_1C338C460;
  v5 = v115 + v4;
  v6 = v115 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v115 + v4) = 0;
  *(_QWORD *)v6 = "PERIOD_NOT_SET";
  *(_QWORD *)(v6 + 8) = 14;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0DA38C8];
  v8 = sub_1C3378B78();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v115 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "NULL";
  *(_QWORD *)(v10 + 8) = 4;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v115 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 2;
  *(_QWORD *)v12 = "NOW";
  *((_QWORD *)v12 + 1) = 3;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v115 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "MIDNIGHT";
  *((_QWORD *)v14 + 1) = 8;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v115 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "MILLISECOND";
  *((_QWORD *)v16 + 1) = 11;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v115 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "SECOND";
  *((_QWORD *)v18 + 1) = 6;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v115 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "MINUTE";
  *((_QWORD *)v20 + 1) = 6;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v115 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "HOUR";
  *((_QWORD *)v22 + 1) = 4;
  v22[16] = 2;
  v9();
  v23 = v115 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 8;
  *(_QWORD *)v23 = "MORNING";
  *(_QWORD *)(v23 + 8) = 7;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v115 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "BREAKFAST";
  *((_QWORD *)v25 + 1) = 9;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v115 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "BRUNCH";
  *((_QWORD *)v27 + 1) = 6;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v115 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "LUNCH";
  *((_QWORD *)v29 + 1) = 5;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v115 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "NOON";
  *((_QWORD *)v31 + 1) = 4;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v115 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "AFTERNOON";
  *((_QWORD *)v33 + 1) = 9;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v115 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "EVENING";
  *((_QWORD *)v35 + 1) = 7;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v115 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "HAPPYHOUR";
  *((_QWORD *)v37 + 1) = 9;
  v37[16] = 2;
  v9();
  v38 = v115 + v4 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 16;
  *(_QWORD *)v38 = "DINNER";
  *(_QWORD *)(v38 + 8) = 6;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v115 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 17;
  *(_QWORD *)v40 = "BEDTIME";
  *((_QWORD *)v40 + 1) = 7;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v115 + v4 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 18;
  *(_QWORD *)v42 = "DAYTIME";
  *((_QWORD *)v42 + 1) = 7;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v115 + v4 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 19;
  *(_QWORD *)v44 = "NIGHT";
  *((_QWORD *)v44 + 1) = 5;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v115 + v4 + 20 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 20;
  *(_QWORD *)v46 = "OVERNIGHT";
  *((_QWORD *)v46 + 1) = 9;
  v46[16] = 2;
  v9();
  v47 = (_QWORD *)(v115 + v4 + 21 * v3);
  v48 = (char *)v47 + *(int *)(v1 + 48);
  *v47 = 21;
  *(_QWORD *)v48 = "TONIGHT";
  *((_QWORD *)v48 + 1) = 7;
  v48[16] = 2;
  v9();
  v49 = (_QWORD *)(v115 + v4 + 22 * v3);
  v50 = (char *)v49 + *(int *)(v1 + 48);
  *v49 = 22;
  *(_QWORD *)v50 = "DAYPERIOD";
  *((_QWORD *)v50 + 1) = 9;
  v50[16] = 2;
  v9();
  v51 = (_QWORD *)(v115 + v4 + 23 * v3);
  v52 = (char *)v51 + *(int *)(v1 + 48);
  *v51 = 23;
  *(_QWORD *)v52 = "TWO_DAYS_BEFORE_YESTERDAY";
  *((_QWORD *)v52 + 1) = 25;
  v52[16] = 2;
  v9();
  v53 = (_QWORD *)(v115 + v4 + 24 * v3);
  v54 = (char *)v53 + *(int *)(v1 + 48);
  *v53 = 24;
  *(_QWORD *)v54 = "DAY_BEFORE_YESTERDAY";
  *((_QWORD *)v54 + 1) = 20;
  v54[16] = 2;
  v9();
  v55 = (_QWORD *)(v115 + v4 + 25 * v3);
  v56 = (char *)v55 + *(int *)(v1 + 48);
  *v55 = 25;
  *(_QWORD *)v56 = "YESTERDAY";
  *((_QWORD *)v56 + 1) = 9;
  v56[16] = 2;
  v9();
  v57 = (_QWORD *)(v115 + v4 + 26 * v3);
  v58 = (char *)v57 + *(int *)(v1 + 48);
  *v57 = 26;
  *(_QWORD *)v58 = "TODAY";
  *((_QWORD *)v58 + 1) = 5;
  v58[16] = 2;
  v9();
  v59 = (_QWORD *)(v115 + v4 + 27 * v3);
  v60 = (char *)v59 + *(int *)(v1 + 48);
  *v59 = 27;
  *(_QWORD *)v60 = "TOMORROW";
  *((_QWORD *)v60 + 1) = 8;
  v60[16] = 2;
  v9();
  v61 = (_QWORD *)(v115 + v4 + 28 * v3);
  v62 = (char *)v61 + *(int *)(v1 + 48);
  *v61 = 28;
  *(_QWORD *)v62 = "DAY_AFTER_TOMORROW";
  *((_QWORD *)v62 + 1) = 18;
  v62[16] = 2;
  v9();
  v63 = (_QWORD *)(v115 + v4 + 29 * v3);
  v64 = (char *)v63 + *(int *)(v1 + 48);
  *v63 = 29;
  *(_QWORD *)v64 = "TWO_DAYS_AFTER_TOMORROW";
  *((_QWORD *)v64 + 1) = 23;
  v64[16] = 2;
  v9();
  v65 = (_QWORD *)(v115 + v4 + 30 * v3);
  v66 = (char *)v65 + *(int *)(v1 + 48);
  *v65 = 30;
  *(_QWORD *)v66 = "DAY";
  *((_QWORD *)v66 + 1) = 3;
  v66[16] = 2;
  v9();
  v67 = (_QWORD *)(v115 + v4 + 31 * v3);
  v68 = (char *)v67 + *(int *)(v1 + 48);
  *v67 = 31;
  *(_QWORD *)v68 = "SUNDAY";
  *((_QWORD *)v68 + 1) = 6;
  v68[16] = 2;
  v9();
  v69 = v115 + v4 + 32 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 32 * v3) = 32;
  *(_QWORD *)v69 = "MONDAY";
  *(_QWORD *)(v69 + 8) = 6;
  *(_BYTE *)(v69 + 16) = 2;
  v9();
  v70 = (_QWORD *)(v115 + v4 + 33 * v3);
  v71 = (char *)v70 + *(int *)(v1 + 48);
  *v70 = 33;
  *(_QWORD *)v71 = "TUESDAY";
  *((_QWORD *)v71 + 1) = 7;
  v71[16] = 2;
  v9();
  v72 = (_QWORD *)(v115 + v4 + 34 * v3);
  v73 = (char *)v72 + *(int *)(v1 + 48);
  *v72 = 34;
  *(_QWORD *)v73 = "WEDNESDAY";
  *((_QWORD *)v73 + 1) = 9;
  v73[16] = 2;
  v9();
  v74 = (_QWORD *)(v115 + v4 + 35 * v3);
  v75 = (char *)v74 + *(int *)(v1 + 48);
  *v74 = 35;
  *(_QWORD *)v75 = "THURSDAY";
  *((_QWORD *)v75 + 1) = 8;
  v75[16] = 2;
  v9();
  v76 = (_QWORD *)(v115 + v4 + 36 * v3);
  v77 = (char *)v76 + *(int *)(v1 + 48);
  *v76 = 36;
  *(_QWORD *)v77 = "FRIDAY";
  *((_QWORD *)v77 + 1) = 6;
  v77[16] = 2;
  v9();
  v78 = (_QWORD *)(v115 + v4 + 37 * v3);
  v79 = (char *)v78 + *(int *)(v1 + 48);
  *v78 = 37;
  *(_QWORD *)v79 = "SATURDAY";
  *((_QWORD *)v79 + 1) = 8;
  v79[16] = 2;
  v9();
  v80 = (_QWORD *)(v115 + v4 + 38 * v3);
  v81 = (char *)v80 + *(int *)(v1 + 48);
  *v80 = 38;
  *(_QWORD *)v81 = "DAYOFWEEK";
  *((_QWORD *)v81 + 1) = 9;
  v81[16] = 2;
  v9();
  v82 = (_QWORD *)(v115 + v4 + 39 * v3);
  v83 = (char *)v82 + *(int *)(v1 + 48);
  *v82 = 39;
  *(_QWORD *)v83 = "WEEKEND";
  *((_QWORD *)v83 + 1) = 7;
  v83[16] = 2;
  v9();
  v84 = (_QWORD *)(v115 + v4 + 40 * v3);
  v85 = (char *)v84 + *(int *)(v1 + 48);
  *v84 = 40;
  *(_QWORD *)v85 = "WEEKDAY";
  *((_QWORD *)v85 + 1) = 7;
  v85[16] = 2;
  v9();
  v86 = (_QWORD *)(v115 + v4 + 41 * v3);
  v87 = (char *)v86 + *(int *)(v1 + 48);
  *v86 = 41;
  *(_QWORD *)v87 = "WEEK";
  *((_QWORD *)v87 + 1) = 4;
  v87[16] = 2;
  v9();
  v88 = (_QWORD *)(v115 + v4 + 42 * v3);
  v89 = (char *)v88 + *(int *)(v1 + 48);
  *v88 = 42;
  *(_QWORD *)v89 = "FORTNIGHT";
  *((_QWORD *)v89 + 1) = 9;
  v89[16] = 2;
  v9();
  v90 = (_QWORD *)(v115 + v4 + 43 * v3);
  v91 = (char *)v90 + *(int *)(v1 + 48);
  *v90 = 43;
  *(_QWORD *)v91 = "DAYOFMONTH";
  *((_QWORD *)v91 + 1) = 10;
  v91[16] = 2;
  v9();
  v92 = (_QWORD *)(v115 + v4 + 44 * v3);
  v93 = (char *)v92 + *(int *)(v1 + 48);
  *v92 = 44;
  *(_QWORD *)v93 = "MONTH";
  *((_QWORD *)v93 + 1) = 5;
  v93[16] = 2;
  v9();
  v94 = (_QWORD *)(v115 + v4 + 45 * v3);
  v95 = (char *)v94 + *(int *)(v1 + 48);
  *v94 = 45;
  *(_QWORD *)v95 = "QUARTER";
  *((_QWORD *)v95 + 1) = 7;
  v95[16] = 2;
  v9();
  v96 = (_QWORD *)(v115 + v4 + 46 * v3);
  v97 = (char *)v96 + *(int *)(v1 + 48);
  *v96 = 46;
  *(_QWORD *)v97 = "SPRING";
  *((_QWORD *)v97 + 1) = 6;
  v97[16] = 2;
  v9();
  v98 = (_QWORD *)(v115 + v4 + 47 * v3);
  v99 = (char *)v98 + *(int *)(v1 + 48);
  *v98 = 47;
  *(_QWORD *)v99 = "SUMMER";
  *((_QWORD *)v99 + 1) = 6;
  v99[16] = 2;
  v9();
  v100 = (_QWORD *)(v115 + v4 + 48 * v3);
  v101 = (char *)v100 + *(int *)(v1 + 48);
  *v100 = 48;
  *(_QWORD *)v101 = "WINTER";
  *((_QWORD *)v101 + 1) = 6;
  v101[16] = 2;
  v9();
  v102 = (_QWORD *)(v115 + v4 + 49 * v3);
  v103 = (char *)v102 + *(int *)(v1 + 48);
  *v102 = 49;
  *(_QWORD *)v103 = "FALL";
  *((_QWORD *)v103 + 1) = 4;
  v103[16] = 2;
  v9();
  v104 = (_QWORD *)(v115 + v4 + 50 * v3);
  v105 = (char *)v104 + *(int *)(v1 + 48);
  *v104 = 50;
  *(_QWORD *)v105 = "SEASON";
  *((_QWORD *)v105 + 1) = 6;
  v105[16] = 2;
  v9();
  v106 = (_QWORD *)(v115 + v4 + 51 * v3);
  v107 = (char *)v106 + *(int *)(v1 + 48);
  *v106 = 51;
  *(_QWORD *)v107 = "SEMESTER";
  *((_QWORD *)v107 + 1) = 8;
  v107[16] = 2;
  v9();
  v108 = (_QWORD *)(v115 + v4 + 52 * v3);
  v109 = (char *)v108 + *(int *)(v1 + 48);
  *v108 = 52;
  *(_QWORD *)v109 = "YEAR";
  *((_QWORD *)v109 + 1) = 4;
  v109[16] = 2;
  v9();
  v110 = (_QWORD *)(v115 + v4 + 53 * v3);
  v111 = (char *)v110 + *(int *)(v1 + 48);
  *v110 = 53;
  *(_QWORD *)v111 = "DECADE";
  *((_QWORD *)v111 + 1) = 6;
  v111[16] = 2;
  v9();
  v112 = (_QWORD *)(v115 + v4 + 54 * v3);
  v113 = (char *)v112 + *(int *)(v1 + 48);
  *v112 = 54;
  *(_QWORD *)v113 = "CENTURY";
  *((_QWORD *)v113 + 1) = 7;
  v113[16] = 2;
  v9();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_Period._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A6B0, (uint64_t)qword_1EF81A3C0, a1);
}

uint64_t sub_1C305DD0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A6B0, (uint64_t)qword_1EF81A3C0, a1);
}

uint64_t sub_1C305DD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v46;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF81A3D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF81A3D8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1C338C470;
  v5 = v46 + v4;
  v6 = v46 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v46 + v4) = 0;
  *(_QWORD *)v6 = "QUALIFIER_NOT_SET";
  *(_QWORD *)(v6 + 8) = 17;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0DA38C8];
  v8 = sub_1C3378B78();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v46 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "NONE";
  *(_QWORD *)(v10 + 8) = 4;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v46 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 2;
  *(_QWORD *)v12 = "PLUS";
  *((_QWORD *)v12 + 1) = 4;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v46 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "MINUS";
  *((_QWORD *)v14 + 1) = 5;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v46 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "APPROX";
  *((_QWORD *)v16 + 1) = 6;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v46 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "EARLY";
  *((_QWORD *)v18 + 1) = 5;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v46 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "LATE";
  *((_QWORD *)v20 + 1) = 4;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v46 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "EVERY";
  *((_QWORD *)v22 + 1) = 5;
  v22[16] = 2;
  v9();
  v23 = v46 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 8;
  *(_QWORD *)v23 = "BEGINOF";
  *(_QWORD *)(v23 + 8) = 7;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v46 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "MIDDLEOF";
  *((_QWORD *)v25 + 1) = 8;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v46 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "ENDOF";
  *((_QWORD *)v27 + 1) = 5;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v46 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "ALLOF";
  *((_QWORD *)v29 + 1) = 5;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v46 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "RESTOF";
  *((_QWORD *)v31 + 1) = 6;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v46 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "BEFORE";
  *((_QWORD *)v33 + 1) = 6;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v46 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "AFTER";
  *((_QWORD *)v35 + 1) = 5;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v46 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "THIS";
  *((_QWORD *)v37 + 1) = 4;
  v37[16] = 2;
  v9();
  v38 = v46 + v4 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 16;
  *(_QWORD *)v38 = "NEXT";
  *(_QWORD *)(v38 + 8) = 4;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v46 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 17;
  *(_QWORD *)v40 = "UPCOMING";
  *((_QWORD *)v40 + 1) = 8;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v46 + v4 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 18;
  *(_QWORD *)v42 = "NEXT_NEXT";
  *((_QWORD *)v42 + 1) = 9;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v46 + v4 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 19;
  *(_QWORD *)v44 = "LAST";
  *((_QWORD *)v44 + 1) = 4;
  v44[16] = 2;
  v9();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_Qualifier._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A6B8, (uint64_t)qword_1EF81A3D8, a1);
}

uint64_t sub_1C305E248@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A6B8, (uint64_t)qword_1EF81A3D8, a1);
}

uint64_t sub_1C305E264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  uint64_t v33;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF81A3F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF81A3F0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C338C480;
  v5 = v33 + v4;
  v6 = v33 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v33 + v4) = 0;
  *(_QWORD *)v6 = "CALENDAR_SYSTEM_NOT_SET";
  *(_QWORD *)(v6 + 8) = 23;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0DA38C8];
  v8 = sub_1C3378B78();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v33 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "BUDDHIST";
  *(_QWORD *)(v10 + 8) = 8;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v33 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 2;
  *(_QWORD *)v12 = "CHINESE";
  *((_QWORD *)v12 + 1) = 7;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v33 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "HEBREW";
  *((_QWORD *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v33 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "HIJRI";
  *((_QWORD *)v16 + 1) = 5;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v33 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "HINDU";
  *((_QWORD *)v18 + 1) = 5;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v33 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "ISLAMIC_UMALQURA";
  *((_QWORD *)v20 + 1) = 16;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v33 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "ISLAMIC";
  *((_QWORD *)v22 + 1) = 7;
  v22[16] = 2;
  v9();
  v23 = v33 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 8;
  *(_QWORD *)v23 = "GREGORIAN";
  *(_QWORD *)(v23 + 8) = 9;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v33 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "JAPANESE";
  *((_QWORD *)v25 + 1) = 8;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v33 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "JULIAN";
  *((_QWORD *)v27 + 1) = 6;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v33 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "PERSIAN";
  *((_QWORD *)v29 + 1) = 7;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v33 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "ROC";
  *((_QWORD *)v31 + 1) = 3;
  v31[16] = 2;
  v9();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_CalendarSystem._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A6C0, (uint64_t)qword_1EF81A3F0, a1);
}

uint64_t sub_1C305E618@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A6C0, (uint64_t)qword_1EF81A3F0, a1);
}

uint64_t sub_1C305E634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF81A408);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF81A408);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C338C490;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "DOW_NOT_SET";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "DOW_MONDAY";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "DOW_TUESDAY";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "DOW_WEDNESDAY";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "DOW_THURSDAY";
  *((_QWORD *)v17 + 1) = 12;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "DOW_FRIDAY";
  *((_QWORD *)v19 + 1) = 10;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "DOW_SATURDAY";
  *((_QWORD *)v21 + 1) = 12;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "DOW_SUNDAY";
  *((_QWORD *)v23 + 1) = 10;
  v23[16] = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_DayOfWeek._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A6C8, (uint64_t)qword_1EF81A408, a1);
}

uint64_t sub_1C305E8F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A6C8, (uint64_t)qword_1EF81A408, a1);
}

unint64_t static Com_Apple_Siri_Product_Proto_DateTimePeriod.protoMessageName.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_1C305E928(uint64_t a1)
{
  return sub_1C3061A00(a1, qword_1EF81A420, (uint64_t)"isStart", 7);
}

uint64_t static Com_Apple_Siri_Product_Proto_DateTimePeriod._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A6D0, (uint64_t)qword_1EF81A420, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimePeriod.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1C3378980();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1C306684C();
        sub_1C33789B0();
      }
      else if (result == 1)
      {
        sub_1C33789A4();
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimePeriod.traverse<A>(visitor:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  if (*v0 != 1 || (result = sub_1C3378AE8(), !v1))
  {
    if (!Com_Apple_Siri_Product_Proto_Period.rawValue.getter() || (sub_1C306684C(), result = sub_1C3378AF4(), !v1))
    {
      type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
      return sub_1C33788FC();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimePeriod.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, &qword_1EF81A5B0, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
}

uint64_t sub_1C305EB5C@<X0>(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C305EB88()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_1C305EBA4()
{
  return Com_Apple_Siri_Product_Proto_DateTimePeriod.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C305EBB8()
{
  return Com_Apple_Siri_Product_Proto_DateTimePeriod.traverse<A>(visitor:)();
}

uint64_t sub_1C305EBCC()
{
  sub_1C2FF6DE0(&qword_1EF81AF28, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  return sub_1C3378950();
}

uint64_t sub_1C305EC1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A6D0, (uint64_t)qword_1EF81A420, a1);
}

uint64_t sub_1C305EC38()
{
  sub_1C2FF6DE0(&qword_1EF81A5C8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  return sub_1C3378AA0();
}

uint64_t sub_1C305EC78()
{
  sub_1C2FF6DE0(&qword_1EF81A5C8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_FractionalPeriod.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_1C305ECE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF81A438);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF81A438);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C338BE70;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "numerator";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "denominator";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "ordinalValue";
  *(_QWORD *)(v12 + 8) = 12;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_FractionalPeriod._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A6D8, (uint64_t)qword_1EF81A438, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_FractionalPeriod.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1C3378980();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2 || result == 1)
        sub_1C3378A4C();
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_FractionalPeriod.traverse<A>(visitor:)()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (result = sub_1C3378B48(), !v1))
  {
    if (!v0[1] || (result = sub_1C3378B48(), !v1))
    {
      if (!v0[2] || (result = sub_1C3378B48(), !v1))
      {
        type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
        return sub_1C33788FC();
      }
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_FractionalPeriod.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod, &qword_1EF81A5B8, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
}

uint64_t sub_1C305F03C@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C305F060()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_1C305F07C()
{
  return Com_Apple_Siri_Product_Proto_FractionalPeriod.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C305F090()
{
  return Com_Apple_Siri_Product_Proto_FractionalPeriod.traverse<A>(visitor:)();
}

uint64_t sub_1C305F0A4()
{
  sub_1C2FF6DE0(&qword_1EF81AF20, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
  return sub_1C3378950();
}

uint64_t sub_1C305F0F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A6D8, (uint64_t)qword_1EF81A438, a1);
}

uint64_t sub_1C305F110()
{
  sub_1C2FF6DE0(&qword_1EF81A5F0, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
  return sub_1C3378AA0();
}

uint64_t sub_1C305F150()
{
  sub_1C2FF6DE0(&qword_1EF81A5F0, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_Time.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1C305F1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF81A450);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF81A450);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C338C4A0;
  v5 = v25 + v4;
  v6 = v25 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v25 + v4) = 1;
  *(_QWORD *)v6 = "meridiem";
  *(_QWORD *)(v6 + 8) = 8;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0DA38C8];
  v8 = sub_1C3378B78();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "hourOfDay";
  *(_QWORD *)(v10 + 8) = 9;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "minute";
  *((_QWORD *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "period";
  *((_QWORD *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "qualifier";
  *((_QWORD *)v16 + 1) = 9;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "timeZoneId";
  *((_QWORD *)v18 + 1) = 10;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "isStart";
  *((_QWORD *)v20 + 1) = 7;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "isUserDefined";
  *((_QWORD *)v22 + 1) = 13;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "is24HourStyleInput";
  *(_QWORD *)(v23 + 8) = 18;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_Time._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A6E0, (uint64_t)qword_1EF81A450, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_Time.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1C3378980();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 6:
          v4 = v3;
          sub_1C3378A34();
          goto LABEL_10;
        case 2:
        case 3:
          v4 = v3;
          sub_1C3378A4C();
          goto LABEL_10;
        case 4:
          v4 = v3;
          sub_1C305F630();
          goto LABEL_10;
        case 5:
          sub_1C3066890();
          v4 = v3;
          sub_1C33789B0();
          goto LABEL_10;
        case 7:
        case 8:
        case 9:
          v4 = v3;
          sub_1C33789A4();
LABEL_10:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t sub_1C305F630()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  sub_1C2FF6DE0(&qword_1EF81A5C8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  return sub_1C3378A70();
}

uint64_t Com_Apple_Siri_Product_Proto_Time.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + 8);
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v10 || (result = sub_1C3378B3C(), !v1))
  {
    if (!*(_DWORD *)(v0 + 16) || (result = sub_1C3378B48(), !v1))
    {
      if (!*(_DWORD *)(v0 + 20) || (result = sub_1C3378B48(), !v1))
      {
        v17 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
        sub_1C2FF6CFC(v0 + *(int *)(v17 + 52), (uint64_t)v4, &qword_1EF81A518);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        {
          sub_1C2FF9138((uint64_t)v4, &qword_1EF81A518);
        }
        else
        {
          sub_1C2FF6C38((uint64_t)v4, (uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
          sub_1C2FF6DE0(&qword_1EF81A5C8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
          sub_1C3378B6C();
          result = sub_1C2FF6CC0((uint64_t)v8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
          if (v1)
            return result;
        }
        if (!*(_QWORD *)(v0 + 24)
          || (v12 = *(_BYTE *)(v0 + 32),
              v15 = *(_QWORD *)(v0 + 24),
              v16 = v12,
              sub_1C3066890(),
              result = sub_1C3378AF4(),
              !v1))
        {
          v13 = *(_QWORD *)(v0 + 48);
          v14 = HIBYTE(v13) & 0xF;
          if ((v13 & 0x2000000000000000) == 0)
            v14 = *(_QWORD *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
          if (!v14 || (result = sub_1C3378B3C(), !v1))
          {
            if (*(_BYTE *)(v0 + 56) != 1 || (result = sub_1C3378AE8(), !v1))
            {
              if (*(_BYTE *)(v0 + 57) != 1 || (result = sub_1C3378AE8(), !v1))
              {
                if (*(_BYTE *)(v0 + 58) != 1)
                  return sub_1C33788FC();
                result = sub_1C3378AE8();
                if (!v1)
                  return sub_1C33788FC();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Time.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_Time, &qword_1EF81A5D0, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Time);
}

uint64_t sub_1C305FA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 1;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0xE000000000000000;
  *(_WORD *)(a2 + 56) = 0;
  *(_BYTE *)(a2 + 58) = 0;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v4 = a2 + *(int *)(a1 + 52);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_1C305FA78()
{
  return 0xD000000000000021;
}

uint64_t sub_1C305FA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 48);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C305FAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 48);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_1C305FB14())()
{
  return nullsub_1;
}

uint64_t sub_1C305FB28()
{
  return Com_Apple_Siri_Product_Proto_Time.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C305FB3C()
{
  return Com_Apple_Siri_Product_Proto_Time.traverse<A>(visitor:)();
}

uint64_t sub_1C305FB50()
{
  sub_1C2FF6DE0(&qword_1EF81AF18, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Time);
  return sub_1C3378950();
}

uint64_t sub_1C305FBA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A6E0, (uint64_t)qword_1EF81A450, a1);
}

uint64_t sub_1C305FBBC()
{
  sub_1C2FF6DE0(&qword_1EF81A718, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Time);
  return sub_1C3378AA0();
}

uint64_t sub_1C305FBFC()
{
  sub_1C2FF6DE0(&qword_1EF81A718, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Time);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_DateTimeHoliday.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1C305FC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF81A468);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF81A468);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C3388730;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "id";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "calendarSystem";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_DateTimeHoliday._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A6E8, (uint64_t)qword_1EF81A468, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimeHoliday.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1C3378980();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1C30668D4();
        sub_1C33789B0();
      }
      else if (result == 1)
      {
        sub_1C3378A34();
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimeHoliday.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_1C3378B3C(), !v1))
  {
    if (!v0[2] || (sub_1C30668D4(), result = sub_1C3378AF4(), !v1))
    {
      type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
      return sub_1C33788FC();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTimeHoliday.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday, &qword_1EF81A5E0, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
}

uint64_t sub_1C305FFC4@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C305FFF4()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1C3060010()
{
  return Com_Apple_Siri_Product_Proto_DateTimeHoliday.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3060024()
{
  return Com_Apple_Siri_Product_Proto_DateTimeHoliday.traverse<A>(visitor:)();
}

uint64_t sub_1C3060038()
{
  sub_1C2FF6DE0(&qword_1EF81AF10, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  return sub_1C3378950();
}

uint64_t sub_1C3060088@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A6E8, (uint64_t)qword_1EF81A468, a1);
}

uint64_t sub_1C30600A4()
{
  sub_1C2FF6DE0(&qword_1EF81A5F8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  return sub_1C3378AA0();
}

uint64_t sub_1C30600E4()
{
  sub_1C2FF6DE0(&qword_1EF81A5F8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_Date.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1C3060154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  uint64_t v31;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF81A480);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF81A480);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C338C4B0;
  v5 = v31 + v4;
  v6 = v31 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v31 + v4) = 1;
  *(_QWORD *)v6 = "year";
  *(_QWORD *)(v6 + 8) = 4;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0DA38C8];
  v8 = sub_1C3378B78();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v31 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "month";
  *(_QWORD *)(v10 + 8) = 5;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v31 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "dayOfMonth";
  *((_QWORD *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v31 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "dayOfWeek";
  *((_QWORD *)v14 + 1) = 9;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v31 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "dateTimeHoliday";
  *((_QWORD *)v16 + 1) = 15;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v31 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "qualifier";
  *((_QWORD *)v18 + 1) = 9;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v31 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "isStart";
  *((_QWORD *)v20 + 1) = 7;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v31 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "isUserDefined";
  *((_QWORD *)v22 + 1) = 13;
  v22[16] = 2;
  v9();
  v23 = v31 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "periods";
  *(_QWORD *)(v23 + 8) = 7;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v31 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "calendarSystem";
  *((_QWORD *)v25 + 1) = 14;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v31 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "fractionalPeriod";
  *((_QWORD *)v27 + 1) = 16;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v31 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "dayOfWeekOrdinalValue";
  *((_QWORD *)v29 + 1) = 21;
  v29[16] = 2;
  v9();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_Date._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A6F0, (uint64_t)qword_1EF81A480, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_Date.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1C3378980();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          sub_1C3378A4C();
          break;
        case 4:
          sub_1C3066918();
          goto LABEL_12;
        case 5:
          sub_1C306071C();
          break;
        case 6:
          sub_1C3066890();
          goto LABEL_12;
        case 7:
        case 8:
          sub_1C33789A4();
          break;
        case 9:
          type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
          sub_1C2FF6DE0(&qword_1EF81A5C8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
          sub_1C3378A64();
          break;
        case 10:
          sub_1C30668D4();
LABEL_12:
          sub_1C33789B0();
          break;
        case 11:
          sub_1C30607B0();
          break;
        case 12:
          sub_1C33789D4();
          break;
        default:
          break;
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t sub_1C306071C()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  sub_1C2FF6DE0(&qword_1EF81A5F8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  return sub_1C3378A70();
}

uint64_t sub_1C30607B0()
{
  type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  sub_1C2FF6DE0(&qword_1EF81A5F0, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
  return sub_1C3378A70();
}

uint64_t Com_Apple_Siri_Product_Proto_Date.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A528);
  MEMORY[0x1E0C80A78](v2);
  v22 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  v21 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v20 = (uint64_t)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A520);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_DWORD *)v0 || (result = sub_1C3378B48(), !v1))
  {
    if (!*(_DWORD *)(v0 + 4) || (result = sub_1C3378B48(), !v1))
    {
      if (!*(_DWORD *)(v0 + 8) || (result = sub_1C3378B48(), !v1))
      {
        if (!*(_QWORD *)(v0 + 16)
          || (v13 = *(_BYTE *)(v0 + 24),
              v23 = *(_QWORD *)(v0 + 16),
              v24 = v13,
              sub_1C3066918(),
              result = sub_1C3378AF4(),
              !v1))
        {
          v19 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
          sub_1C2FF6CFC(v0 + *(int *)(v19 + 60), (uint64_t)v7, &qword_1EF81A520);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
          {
            sub_1C2FF9138((uint64_t)v7, &qword_1EF81A520);
          }
          else
          {
            sub_1C2FF6C38((uint64_t)v7, (uint64_t)v11, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
            sub_1C2FF6DE0(&qword_1EF81A5F8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
            sub_1C3378B6C();
            result = sub_1C2FF6CC0((uint64_t)v11, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
            if (v1)
              return result;
          }
          if (!*(_QWORD *)(v0 + 32)
            || (v14 = *(_BYTE *)(v0 + 40),
                v23 = *(_QWORD *)(v0 + 32),
                v24 = v14,
                sub_1C3066890(),
                result = sub_1C3378AF4(),
                !v1))
          {
            if (*(_BYTE *)(v0 + 41) != 1 || (result = sub_1C3378AE8(), !v1))
            {
              if (*(_BYTE *)(v0 + 42) != 1 || (result = sub_1C3378AE8(), !v1))
              {
                if (!*(_QWORD *)(*(_QWORD *)(v0 + 48) + 16)
                  || (type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0),
                      sub_1C2FF6DE0(&qword_1EF81A5C8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod), result = sub_1C3378B60(), !v1))
                {
                  if (!*(_QWORD *)(v0 + 56)
                    || (v15 = *(_BYTE *)(v0 + 64),
                        v23 = *(_QWORD *)(v0 + 56),
                        v24 = v15,
                        sub_1C30668D4(),
                        result = sub_1C3378AF4(),
                        !v1))
                  {
                    v16 = v22;
                    sub_1C2FF6CFC(v0 + *(int *)(v19 + 64), v22, &qword_1EF81A528);
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v16, 1, v25) == 1)
                    {
                      sub_1C2FF9138(v16, &qword_1EF81A528);
                    }
                    else
                    {
                      v17 = v16;
                      v18 = v20;
                      sub_1C2FF6C38(v17, v20, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
                      sub_1C2FF6DE0(&qword_1EF81A5F0, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
                      sub_1C3378B6C();
                      result = sub_1C2FF6CC0(v18, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
                      if (v1)
                        return result;
                    }
                    if (!*(_DWORD *)(v0 + 68))
                      return sub_1C33788FC();
                    result = sub_1C3378B0C();
                    if (!v1)
                      return sub_1C33788FC();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Date.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_Date, &qword_1EF81A600, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Date);
}

uint64_t sub_1C3060D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a2 = 0;
  *(_DWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  *(_WORD *)(a2 + 41) = 0;
  *(_QWORD *)(a2 + 48) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 56) = 0;
  *(_BYTE *)(a2 + 64) = 1;
  *(_DWORD *)(a2 + 68) = 0;
  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v4 = a2 + *(int *)(a1 + 60);
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a2 + *(int *)(a1 + 64);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

unint64_t sub_1C3060E14()
{
  return 0xD000000000000021;
}

uint64_t sub_1C3060E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 56);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C3060E70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 56);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_1C3060EB0())()
{
  return nullsub_1;
}

uint64_t sub_1C3060EC4()
{
  return Com_Apple_Siri_Product_Proto_Date.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3060ED8()
{
  return Com_Apple_Siri_Product_Proto_Date.traverse<A>(visitor:)();
}

uint64_t sub_1C3060EEC()
{
  sub_1C2FF6DE0(&qword_1EF81AF08, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Date);
  return sub_1C3378950();
}

uint64_t sub_1C3060F3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A6F0, (uint64_t)qword_1EF81A480, a1);
}

uint64_t sub_1C3060F58()
{
  sub_1C2FF6DE0(&qword_1EF81A740, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Date);
  return sub_1C3378AA0();
}

uint64_t sub_1C3060F98()
{
  sub_1C2FF6DE0(&qword_1EF81A740, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Date);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_Duration.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_1C3061008(uint64_t a1)
{
  return sub_1C3061A00(a1, qword_1EF81A498, (uint64_t)"duration", 8);
}

uint64_t static Com_Apple_Siri_Product_Proto_Duration._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A6F8, (uint64_t)qword_1EF81A498, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_Duration.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1C3378980();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1C306684C();
        sub_1C33789B0();
      }
      else if (result == 1)
      {
        sub_1C3378A1C();
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Duration.traverse<A>(visitor:)()
{
  double *v0;
  uint64_t v1;
  uint64_t result;

  if (*v0 == 0.0 || (result = sub_1C3378B30(), !v1))
  {
    if (!Com_Apple_Siri_Product_Proto_Period.rawValue.getter() || (sub_1C306684C(), result = sub_1C3378AF4(), !v1))
    {
      type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(0);
      return sub_1C33788FC();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Duration.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, &qword_1EF81A608, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Duration);
}

uint64_t sub_1C3061238@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C3061260()
{
  return 0xD000000000000025;
}

uint64_t sub_1C306127C()
{
  return Com_Apple_Siri_Product_Proto_Duration.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3061290()
{
  return Com_Apple_Siri_Product_Proto_Duration.traverse<A>(visitor:)();
}

uint64_t sub_1C30612A4()
{
  sub_1C2FF6DE0(&qword_1EF81AF00, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Duration);
  return sub_1C3378950();
}

uint64_t sub_1C30612F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A6F8, (uint64_t)qword_1EF81A498, a1);
}

uint64_t sub_1C3061310()
{
  sub_1C2FF6DE0(&qword_1EF81A758, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Duration);
  return sub_1C3378AA0();
}

uint64_t sub_1C3061350()
{
  sub_1C2FF6DE0(&qword_1EF81A758, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Duration);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_Interval.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_1C30613C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF81A4B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF81A4B0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C338BE60;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "quantity";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "period";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "qualifier";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "isUserDefined";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_Interval._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A700, (uint64_t)qword_1EF81A4B0, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_Interval.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1C3378980();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v4 = v3;
          sub_1C3378A1C();
          goto LABEL_5;
        case 2:
          sub_1C306684C();
          goto LABEL_11;
        case 3:
          sub_1C3066890();
LABEL_11:
          v4 = v3;
          sub_1C33789B0();
          goto LABEL_5;
        case 4:
          v4 = v3;
          sub_1C33789A4();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Interval.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(double *)v0 == 0.0 || (result = sub_1C3378B30(), !v1))
  {
    if (!Com_Apple_Siri_Product_Proto_Period.rawValue.getter() || (sub_1C306684C(), result = sub_1C3378AF4(), !v1))
    {
      if (!*(_QWORD *)(v0 + 24) || (sub_1C3066890(), result = sub_1C3378AF4(), !v1))
      {
        if (*(_BYTE *)(v0 + 33) != 1 || (result = sub_1C3378AE8(), !v1))
        {
          type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0);
          return sub_1C33788FC();
        }
      }
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Interval.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, &qword_1EF81A610, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Interval);
}

uint64_t sub_1C3061858@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C3061888()
{
  return 0xD000000000000025;
}

uint64_t sub_1C30618A4()
{
  return Com_Apple_Siri_Product_Proto_Interval.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C30618B8()
{
  return Com_Apple_Siri_Product_Proto_Interval.traverse<A>(visitor:)();
}

uint64_t sub_1C30618CC()
{
  sub_1C2FF6DE0(&qword_1EF81AEF8, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Interval);
  return sub_1C3378950();
}

uint64_t sub_1C306191C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A700, (uint64_t)qword_1EF81A4B0, a1);
}

uint64_t sub_1C3061938()
{
  sub_1C2FF6DE0(&qword_1EF81A770, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Interval);
  return sub_1C3378AA0();
}

uint64_t sub_1C3061978()
{
  sub_1C2FF6DE0(&qword_1EF81A770, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Interval);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_Recurrence.protoMessageName.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_1C30619E8(uint64_t a1)
{
  return sub_1C3061A00(a1, qword_1EF81A4C8, (uint64_t)"magnitude", 9);
}

uint64_t sub_1C3061A00(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  char *v18;

  v7 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C3388730;
  v13 = (_QWORD *)(v12 + v11);
  v14 = v12 + v11 + *(int *)(v8 + 48);
  *v13 = 1;
  *(_QWORD *)v14 = a3;
  *(_QWORD *)(v14 + 8) = a4;
  *(_BYTE *)(v14 + 16) = 2;
  v15 = *MEMORY[0x1E0DA38C8];
  v16 = sub_1C3378B78();
  v17 = *(void (**)(void))(*(_QWORD *)(v16 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v14, v15, v16);
  v18 = (char *)v13 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)((char *)v13 + v10) = 2;
  *(_QWORD *)v18 = "period";
  *((_QWORD *)v18 + 1) = 6;
  v18[16] = 2;
  v17();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_Recurrence._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A708, (uint64_t)qword_1EF81A4C8, a1);
}

uint64_t Com_Apple_Siri_Product_Proto_Recurrence.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1C3378980();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1C306684C();
        sub_1C33789B0();
      }
      else if (result == 1)
      {
        sub_1C33789D4();
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Recurrence.traverse<A>(visitor:)()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (result = sub_1C3378B0C(), !v1))
  {
    if (!Com_Apple_Siri_Product_Proto_Period.rawValue.getter() || (sub_1C306684C(), result = sub_1C3378AF4(), !v1))
    {
      type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(0);
      return sub_1C33788FC();
    }
  }
  return result;
}

uint64_t Com_Apple_Siri_Product_Proto_Recurrence.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, &qword_1EF81A618, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Recurrence);
}

uint64_t sub_1C3061D5C@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  return _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
}

unint64_t sub_1C3061D88()
{
  return 0xD000000000000027;
}

uint64_t sub_1C3061DA4()
{
  return Com_Apple_Siri_Product_Proto_Recurrence.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3061DB8()
{
  return Com_Apple_Siri_Product_Proto_Recurrence.traverse<A>(visitor:)();
}

uint64_t sub_1C3061DCC()
{
  sub_1C2FF6DE0(&qword_1EF81AEF0, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Recurrence);
  return sub_1C3378950();
}

uint64_t sub_1C3061E1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A708, (uint64_t)qword_1EF81A4C8, a1);
}

uint64_t sub_1C3061E38()
{
  sub_1C2FF6DE0(&qword_1EF81A788, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Recurrence);
  return sub_1C3378AA0();
}

uint64_t sub_1C3061E78()
{
  sub_1C2FF6DE0(&qword_1EF81A788, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Recurrence);
  return sub_1C3378AAC();
}

unint64_t static Com_Apple_Siri_Product_Proto_DateTime.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_1C3061EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF81A4E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF81A4E0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C338BE50;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "startDate";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "endDate";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "duration";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "interval";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "recurrence";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "startTime";
  *((_QWORD *)v19 + 1) = 9;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "endTime";
  *((_QWORD *)v21 + 1) = 7;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "startPosition";
  *((_QWORD *)v23 + 1) = 13;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 8 * v3) = 9;
  *(_QWORD *)v24 = "endPosition";
  *(_QWORD *)(v24 + 8) = 11;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v3);
  v26 = (char *)v25 + *(int *)(v1 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "temporalIntent";
  *((_QWORD *)v26 + 1) = 14;
  v26[16] = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_DateTime._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A710, (uint64_t)qword_1EF81A4E0, a1);
}

uint64_t sub_1C3062214()
{
  uint64_t result;

  type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime._StorageClass(0);
  swift_allocObject();
  result = sub_1C3062250();
  qword_1EF81A4F8 = result;
  return result;
}

uint64_t sub_1C3062250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v1 = v0
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate;
  v2 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0+ OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate, 1, 1, v2);
  v4 = v0
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration;
  v5 = type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = v0
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval;
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = v0
     + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence;
  v9 = type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = v0
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime;
  v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(v0+ OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime, 1, 1, v11);
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition) = 0;
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition) = 0;
  v13 = v0
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  return v0;
}

uint64_t sub_1C30623DC()
{
  uint64_t v0;

  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate, &qword_1EF81A530);
  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate, &qword_1EF81A530);
  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration, &qword_1EF81A548);
  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval, &qword_1EF81A558);
  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence, &qword_1EF81A568);
  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime, &qword_1EF81A578);
  sub_1C2FF9138(v0+ OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime, &qword_1EF81A578);
  return swift_deallocClassInstance();
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = v3;
  v8 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_1C30661C0(v9);
    swift_release();
    *(_QWORD *)(v4 + v8) = v10;
    swift_release();
  }
  v11 = swift_retain();
  sub_1C3062578(v11, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C3062578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t (*v16)(uint64_t);
  unint64_t *v17;
  void *v18;

  result = sub_1C3378980();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate;
          goto LABEL_5;
        case 2:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate;
LABEL_5:
          v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date;
          v17 = &qword_1EF81A740;
          v18 = &protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Date;
          goto LABEL_6;
        case 3:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration;
          v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_Duration;
          v17 = &qword_1EF81A758;
          v18 = &protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Duration;
          goto LABEL_6;
        case 4:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval;
          v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_Interval;
          v17 = &qword_1EF81A770;
          v18 = &protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Interval;
          goto LABEL_6;
        case 5:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence;
          v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence;
          v17 = &qword_1EF81A788;
          v18 = &protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Recurrence;
          goto LABEL_6;
        case 6:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime;
          goto LABEL_16;
        case 7:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime;
LABEL_16:
          v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time;
          v17 = &qword_1EF81A718;
          v18 = &protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Time;
LABEL_6:
          sub_1C2FF32A4(v11, v12, v13, v14, (uint64_t)v15, v16, v17, (uint64_t)v18);
          break;
        case 8:
        case 9:
          sub_1C30627C0();
          break;
        case 10:
          sub_1C3062840();
          break;
        default:
          break;
      }
      result = sub_1C3378980();
    }
  }
  return result;
}

uint64_t sub_1C30627C0()
{
  swift_beginAccess();
  sub_1C33789D4();
  return swift_endAccess();
}

uint64_t sub_1C3062840()
{
  swift_beginAccess();
  sub_1C306A968();
  sub_1C33789B0();
  return swift_endAccess();
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t result;

  type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0);
  v7 = swift_retain();
  sub_1C3062964(v7, a1, a2, a3);
  result = swift_release();
  if (!v3)
    return sub_1C33788FC();
  return result;
}

uint64_t sub_1C3062964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _DWORD *v66;
  _DWORD *v67;
  uint64_t *v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;

  v91 = a4;
  v92 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A578);
  v6 = MEMORY[0x1E0C80A78](v5);
  v89 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v75 = (uint64_t)&v70 - v8;
  v80 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  v74 = *(_QWORD *)(v80 - 8);
  v9 = MEMORY[0x1E0C80A78](v80);
  v71 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v72 = (uint64_t)&v70 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A568);
  MEMORY[0x1E0C80A78](v12);
  v86 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(0);
  v77 = *(_QWORD *)(v14 - 8);
  v78 = v14;
  MEMORY[0x1E0C80A78](v14);
  v73 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A558);
  MEMORY[0x1E0C80A78](v16);
  v88 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0);
  v81 = *(_QWORD *)(v18 - 8);
  v82 = v18;
  MEMORY[0x1E0C80A78](v18);
  v76 = (uint64_t)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A548);
  MEMORY[0x1E0C80A78](v20);
  v87 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(0);
  v84 = *(_QWORD *)(v22 - 8);
  v85 = v22;
  MEMORY[0x1E0C80A78](v22);
  v79 = (uint64_t)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A530);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v70 - v28;
  v30 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x1E0C80A78](v30);
  v83 = (uint64_t)&v70 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v70 - v34;
  v95 = a1;
  v36 = a1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate;
  swift_beginAccess();
  sub_1C2FF6CFC(v36, (uint64_t)v29, &qword_1EF81A530);
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v37(v29, 1, v30) == 1)
  {
    sub_1C2FF9138((uint64_t)v29, &qword_1EF81A530);
    v38 = v90;
  }
  else
  {
    sub_1C2FF6C38((uint64_t)v29, (uint64_t)v35, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
    sub_1C2FF6DE0(&qword_1EF81A740, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Date);
    v39 = v90;
    sub_1C3378B6C();
    v38 = v39;
    if (v39)
      return sub_1C2FF6CC0((uint64_t)v35, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
    sub_1C2FF6CC0((uint64_t)v35, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  }
  v40 = (uint64_t)v87;
  v41 = v95
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate;
  swift_beginAccess();
  sub_1C2FF6CFC(v41, (uint64_t)v27, &qword_1EF81A530);
  if (v37(v27, 1, v30) == 1)
  {
    sub_1C2FF9138((uint64_t)v27, &qword_1EF81A530);
    v43 = (uint64_t)v88;
    v42 = v89;
    goto LABEL_11;
  }
  v44 = (uint64_t)v27;
  v45 = v83;
  sub_1C2FF6C38(v44, v83, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  sub_1C2FF6DE0(&qword_1EF81A740, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Date);
  sub_1C3378B6C();
  v43 = (uint64_t)v88;
  v42 = v89;
  if (v38)
  {
    v35 = (char *)v45;
    return sub_1C2FF6CC0((uint64_t)v35, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  }
  sub_1C2FF6CC0(v45, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
LABEL_11:
  v47 = v95
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration;
  swift_beginAccess();
  sub_1C2FF6CFC(v47, v40, &qword_1EF81A548);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v40, 1, v85) == 1)
  {
    sub_1C2FF9138(v40, &qword_1EF81A548);
    v48 = (uint64_t)v86;
  }
  else
  {
    v49 = v40;
    v50 = v79;
    sub_1C2FF6C38(v49, v79, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
    sub_1C2FF6DE0(&qword_1EF81A758, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Duration);
    sub_1C3378B6C();
    result = sub_1C2FF6CC0(v50, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
    v48 = (uint64_t)v86;
    if (v38)
      return result;
  }
  v51 = v95
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval;
  swift_beginAccess();
  sub_1C2FF6CFC(v51, v43, &qword_1EF81A558);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v43, 1, v82) == 1)
  {
    sub_1C2FF9138(v43, &qword_1EF81A558);
  }
  else
  {
    v52 = v43;
    v53 = v76;
    sub_1C2FF6C38(v52, v76, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval);
    sub_1C2FF6DE0(&qword_1EF81A770, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Interval);
    sub_1C3378B6C();
    result = sub_1C2FF6CC0(v53, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval);
    if (v38)
      return result;
  }
  v54 = v95
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence;
  swift_beginAccess();
  sub_1C2FF6CFC(v54, v48, &qword_1EF81A568);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v48, 1, v78) == 1)
  {
    sub_1C2FF9138(v48, &qword_1EF81A568);
  }
  else
  {
    v55 = v48;
    v56 = v73;
    sub_1C2FF6C38(v55, v73, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
    sub_1C2FF6DE0(&qword_1EF81A788, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Recurrence);
    sub_1C3378B6C();
    result = sub_1C2FF6CC0(v56, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
    if (v38)
      return result;
  }
  v57 = (uint64_t)v42;
  v58 = v95
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime;
  swift_beginAccess();
  v59 = v75;
  sub_1C2FF6CFC(v58, v75, &qword_1EF81A578);
  v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  if (v60(v59, 1, v80) == 1)
  {
    sub_1C2FF9138(v59, &qword_1EF81A578);
    v61 = v57;
  }
  else
  {
    v62 = v72;
    sub_1C2FF6C38(v59, v72, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
    sub_1C2FF6DE0(&qword_1EF81A718, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Time);
    v61 = (uint64_t)v89;
    sub_1C3378B6C();
    result = sub_1C2FF6CC0(v62, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
    if (v38)
      return result;
  }
  v63 = v95
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime;
  swift_beginAccess();
  sub_1C2FF6CFC(v63, v61, &qword_1EF81A578);
  if (v60(v61, 1, v80) == 1)
  {
    sub_1C2FF9138(v61, &qword_1EF81A578);
  }
  else
  {
    v64 = v61;
    v65 = v71;
    sub_1C2FF6C38(v64, v71, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
    sub_1C2FF6DE0(&qword_1EF81A718, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Time);
    sub_1C3378B6C();
    result = sub_1C2FF6CC0(v65, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
    if (v38)
      return result;
  }
  v66 = (_DWORD *)(v95
                 + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition);
  swift_beginAccess();
  if (!*v66 || (result = sub_1C3378B0C(), !v38))
  {
    v67 = (_DWORD *)(v95
                   + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition);
    swift_beginAccess();
    if (!*v67 || (result = sub_1C3378B0C(), !v38))
    {
      v68 = (uint64_t *)(v95
                      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent);
      result = swift_beginAccess();
      if (*v68)
      {
        v69 = *((_BYTE *)v68 + 8);
        v93 = *v68;
        v94 = v69;
        sub_1C306A968();
        return sub_1C3378AF4();
      }
    }
  }
  return result;
}

BOOL sub_1C3063380(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unsigned int (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  int *v146;
  int v147;
  _DWORD *v148;
  int *v149;
  int v150;
  _DWORD *v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t (*v193)(uint64_t, uint64_t, uint64_t);
  uint64_t v194;

  v194 = a2;
  v166 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  v162 = *(_QWORD *)(v166 - 8);
  MEMORY[0x1E0C80A78](v166);
  v157 = (uint64_t)&v156 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81AF38);
  v4 = MEMORY[0x1E0C80A78](v165);
  v159 = (uint64_t)&v156 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v163 = (uint64_t)&v156 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A578);
  v8 = MEMORY[0x1E0C80A78](v7);
  v156 = (uint64_t)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v158 = (uint64_t)&v156 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v160 = (uint64_t)&v156 - v13;
  MEMORY[0x1E0C80A78](v12);
  v167 = (uint64_t)&v156 - v14;
  v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(0);
  v170 = *(_QWORD *)(v15 - 8);
  v171 = v15;
  MEMORY[0x1E0C80A78](v15);
  v161 = (uint64_t)&v156 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81AF40);
  MEMORY[0x1E0C80A78](v169);
  v172 = (uint64_t)&v156 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A568);
  v19 = MEMORY[0x1E0C80A78](v18);
  v164 = (uint64_t)&v156 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v190 = (uint64_t)&v156 - v21;
  v22 = type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0);
  v176 = *(_QWORD *)(v22 - 8);
  v177 = v22;
  MEMORY[0x1E0C80A78](v22);
  v168 = (uint64_t)&v156 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81AF48);
  MEMORY[0x1E0C80A78](v175);
  v178 = (uint64_t)&v156 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A558);
  v26 = MEMORY[0x1E0C80A78](v25);
  v173 = (uint64_t)&v156 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v184 = (uint64_t)&v156 - v28;
  v29 = type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(0);
  v181 = *(_QWORD *)(v29 - 8);
  v182 = v29;
  MEMORY[0x1E0C80A78](v29);
  v174 = (uint64_t)&v156 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81AF50);
  MEMORY[0x1E0C80A78](v180);
  v183 = (uint64_t)&v156 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A548);
  v33 = MEMORY[0x1E0C80A78](v32);
  v179 = (uint64_t)&v156 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v186 = (uint64_t)&v156 - v35;
  v36 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  v193 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v187 = (uint64_t)&v156 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81AF58);
  v39 = MEMORY[0x1E0C80A78](v38);
  v189 = (uint64_t)&v156 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v42 = (char *)&v156 - v41;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A530);
  v44 = MEMORY[0x1E0C80A78](v43);
  v185 = (uint64_t)&v156 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x1E0C80A78](v44);
  v192 = (uint64_t)&v156 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v191 = (uint64_t)&v156 - v49;
  MEMORY[0x1E0C80A78](v48);
  v51 = (char *)&v156 - v50;
  v52 = a1;
  v53 = a1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate;
  swift_beginAccess();
  sub_1C2FF6CFC(v53, (uint64_t)v51, &qword_1EF81A530);
  v54 = v194;
  v55 = v194
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate;
  swift_beginAccess();
  v188 = v38;
  v56 = (uint64_t)&v42[*(int *)(v38 + 48)];
  sub_1C2FF6CFC((uint64_t)v51, (uint64_t)v42, &qword_1EF81A530);
  sub_1C2FF6CFC(v55, v56, &qword_1EF81A530);
  v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v193 + 6);
  if (v57((uint64_t)v42, 1, v36) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1C2FF9138((uint64_t)v51, &qword_1EF81A530);
    v58 = v54;
    if (v57(v56, 1, v36) == 1)
    {
      v193 = v57;
      sub_1C2FF9138((uint64_t)v42, &qword_1EF81A530);
      v59 = v52;
      goto LABEL_8;
    }
LABEL_6:
    sub_1C2FF9138((uint64_t)v42, &qword_1EF81AF58);
    goto LABEL_37;
  }
  v59 = v52;
  v60 = v191;
  sub_1C2FF6CFC((uint64_t)v42, v191, &qword_1EF81A530);
  if (v57(v56, 1, v36) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1C2FF9138((uint64_t)v51, &qword_1EF81A530);
    sub_1C2FF6CC0(v60, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
    goto LABEL_6;
  }
  v193 = v57;
  v61 = v187;
  sub_1C2FF6C38(v56, v187, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  swift_retain();
  swift_retain();
  v62 = _s12SiriOntology010Com_Apple_A19_Product_Proto_DateV2eeoiySbAC_ACtFZ_0(v60, v61);
  sub_1C2FF6CC0(v61, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  sub_1C2FF9138((uint64_t)v51, &qword_1EF81A530);
  v63 = v60;
  v58 = v54;
  sub_1C2FF6CC0(v63, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  sub_1C2FF9138((uint64_t)v42, &qword_1EF81A530);
  if ((v62 & 1) == 0)
    goto LABEL_37;
LABEL_8:
  v64 = v59
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate;
  swift_beginAccess();
  v65 = v192;
  sub_1C2FF6CFC(v64, v192, &qword_1EF81A530);
  v66 = v58
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate;
  swift_beginAccess();
  v67 = v189;
  v68 = v189 + *(int *)(v188 + 48);
  sub_1C2FF6CFC(v65, v189, &qword_1EF81A530);
  sub_1C2FF6CFC(v66, v68, &qword_1EF81A530);
  v69 = v193;
  if (v193(v67, 1, v36) == 1)
  {
    sub_1C2FF9138(v65, &qword_1EF81A530);
    v70 = v69(v68, 1, v36);
    v71 = v190;
    if (v70 == 1)
    {
      sub_1C2FF9138(v67, &qword_1EF81A530);
      goto LABEL_15;
    }
LABEL_13:
    v74 = &qword_1EF81AF58;
    v75 = v67;
LABEL_36:
    sub_1C2FF9138(v75, v74);
    goto LABEL_37;
  }
  v72 = v185;
  sub_1C2FF6CFC(v67, v185, &qword_1EF81A530);
  v73 = v69(v68, 1, v36);
  v71 = v190;
  if (v73 == 1)
  {
    sub_1C2FF9138(v192, &qword_1EF81A530);
    sub_1C2FF6CC0(v72, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
    goto LABEL_13;
  }
  v76 = v187;
  sub_1C2FF6C38(v68, v187, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  v77 = _s12SiriOntology010Com_Apple_A19_Product_Proto_DateV2eeoiySbAC_ACtFZ_0(v72, v76);
  sub_1C2FF6CC0(v76, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  sub_1C2FF9138(v192, &qword_1EF81A530);
  sub_1C2FF6CC0(v72, type metadata accessor for Com_Apple_Siri_Product_Proto_Date);
  sub_1C2FF9138(v67, &qword_1EF81A530);
  if ((v77 & 1) == 0)
    goto LABEL_37;
LABEL_15:
  v78 = v59
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration;
  swift_beginAccess();
  v79 = v186;
  sub_1C2FF6CFC(v78, v186, &qword_1EF81A548);
  v80 = v58
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration;
  swift_beginAccess();
  v81 = v183;
  v82 = v183 + *(int *)(v180 + 48);
  sub_1C2FF6CFC(v79, v183, &qword_1EF81A548);
  v83 = v80;
  v84 = v81;
  sub_1C2FF6CFC(v83, v82, &qword_1EF81A548);
  v85 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v181 + 48);
  v86 = v81;
  v87 = v182;
  if (v85(v86, 1, v182) == 1)
  {
    sub_1C2FF9138(v79, &qword_1EF81A548);
    v88 = v85(v82, 1, v87);
    v89 = v184;
    if (v88 == 1)
    {
      sub_1C2FF9138(v84, &qword_1EF81A548);
      goto LABEL_22;
    }
LABEL_20:
    v74 = &qword_1EF81AF50;
LABEL_35:
    v75 = v84;
    goto LABEL_36;
  }
  v90 = v179;
  sub_1C2FF6CFC(v84, v179, &qword_1EF81A548);
  v91 = v85(v82, 1, v87);
  v89 = v184;
  if (v91 == 1)
  {
    sub_1C2FF9138(v186, &qword_1EF81A548);
    sub_1C2FF6CC0(v90, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
    goto LABEL_20;
  }
  v92 = v71;
  v93 = v90;
  v94 = v174;
  sub_1C2FF6C38(v82, v174, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
  v95 = _s12SiriOntology010Com_Apple_A23_Product_Proto_DurationV2eeoiySbAC_ACtFZ_0(v93, v94);
  sub_1C2FF6CC0(v94, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
  sub_1C2FF9138(v186, &qword_1EF81A548);
  v96 = v93;
  v71 = v92;
  sub_1C2FF6CC0(v96, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration);
  sub_1C2FF9138(v84, &qword_1EF81A548);
  if ((v95 & 1) == 0)
    goto LABEL_37;
LABEL_22:
  v97 = v59
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval;
  swift_beginAccess();
  sub_1C2FF6CFC(v97, v89, &qword_1EF81A558);
  v98 = v58
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval;
  swift_beginAccess();
  v99 = v178;
  v100 = v178 + *(int *)(v175 + 48);
  sub_1C2FF6CFC(v89, v178, &qword_1EF81A558);
  v101 = v98;
  v84 = v99;
  sub_1C2FF6CFC(v101, v100, &qword_1EF81A558);
  v102 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v176 + 48);
  v103 = v99;
  v104 = v177;
  if (v102(v103, 1, v177) == 1)
  {
    sub_1C2FF9138(v89, &qword_1EF81A558);
    if (v102(v100, 1, v104) == 1)
    {
      sub_1C2FF9138(v84, &qword_1EF81A558);
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  v105 = v173;
  sub_1C2FF6CFC(v84, v173, &qword_1EF81A558);
  if (v102(v100, 1, v104) == 1)
  {
    sub_1C2FF9138(v184, &qword_1EF81A558);
    sub_1C2FF6CC0(v105, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval);
LABEL_27:
    v74 = &qword_1EF81AF48;
    goto LABEL_35;
  }
  v106 = v168;
  sub_1C2FF6C38(v100, v168, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval);
  v107 = _s12SiriOntology010Com_Apple_A23_Product_Proto_IntervalV2eeoiySbAC_ACtFZ_0(v105, v106);
  sub_1C2FF6CC0(v106, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval);
  sub_1C2FF9138(v184, &qword_1EF81A558);
  sub_1C2FF6CC0(v105, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval);
  sub_1C2FF9138(v84, &qword_1EF81A558);
  if ((v107 & 1) == 0)
    goto LABEL_37;
LABEL_29:
  v108 = v59
       + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence;
  swift_beginAccess();
  sub_1C2FF6CFC(v108, v71, &qword_1EF81A568);
  v109 = v58
       + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence;
  swift_beginAccess();
  v110 = v172;
  v111 = v172 + *(int *)(v169 + 48);
  sub_1C2FF6CFC(v71, v172, &qword_1EF81A568);
  v112 = v109;
  v84 = v110;
  sub_1C2FF6CFC(v112, v111, &qword_1EF81A568);
  v113 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v170 + 48);
  v114 = v110;
  v115 = v171;
  if (v113(v114, 1, v171) == 1)
  {
    sub_1C2FF9138(v71, &qword_1EF81A568);
    if (v113(v111, 1, v115) == 1)
    {
      sub_1C2FF9138(v84, &qword_1EF81A568);
      goto LABEL_41;
    }
    goto LABEL_34;
  }
  v116 = v164;
  sub_1C2FF6CFC(v84, v164, &qword_1EF81A568);
  if (v113(v111, 1, v115) == 1)
  {
    sub_1C2FF9138(v190, &qword_1EF81A568);
    sub_1C2FF6CC0(v116, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
LABEL_34:
    v74 = &qword_1EF81AF40;
    goto LABEL_35;
  }
  v118 = v161;
  sub_1C2FF6C38(v111, v161, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
  v119 = _s12SiriOntology010Com_Apple_A25_Product_Proto_RecurrenceV2eeoiySbAC_ACtFZ_0(v116, v118);
  sub_1C2FF6CC0(v118, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
  sub_1C2FF9138(v190, &qword_1EF81A568);
  sub_1C2FF6CC0(v116, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence);
  sub_1C2FF9138(v84, &qword_1EF81A568);
  if ((v119 & 1) == 0)
    goto LABEL_37;
LABEL_41:
  v194 = v59;
  v120 = v59
       + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime;
  swift_beginAccess();
  v121 = v167;
  sub_1C2FF6CFC(v120, v167, &qword_1EF81A578);
  v122 = v58
       + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime;
  swift_beginAccess();
  v123 = v163;
  v124 = v163 + *(int *)(v165 + 48);
  sub_1C2FF6CFC(v121, v163, &qword_1EF81A578);
  v125 = v122;
  v126 = v123;
  sub_1C2FF6CFC(v125, v124, &qword_1EF81A578);
  v127 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v162 + 48);
  v128 = v166;
  if (v127(v126, 1, v166) == 1)
  {
    sub_1C2FF9138(v121, &qword_1EF81A578);
    if (v127(v124, 1, v128) == 1)
    {
      sub_1C2FF9138(v126, &qword_1EF81A578);
      goto LABEL_48;
    }
LABEL_46:
    sub_1C2FF9138(v126, &qword_1EF81AF38);
    goto LABEL_37;
  }
  v129 = v160;
  sub_1C2FF6CFC(v126, v160, &qword_1EF81A578);
  if (v127(v124, 1, v128) == 1)
  {
    sub_1C2FF9138(v167, &qword_1EF81A578);
    sub_1C2FF6CC0(v129, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
    goto LABEL_46;
  }
  v130 = v126;
  v131 = v157;
  sub_1C2FF6C38(v124, v157, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
  v132 = _s12SiriOntology010Com_Apple_A19_Product_Proto_TimeV2eeoiySbAC_ACtFZ_0(v129, v131);
  sub_1C2FF6CC0(v131, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
  sub_1C2FF9138(v167, &qword_1EF81A578);
  sub_1C2FF6CC0(v129, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
  sub_1C2FF9138(v130, &qword_1EF81A578);
  if ((v132 & 1) == 0)
    goto LABEL_37;
LABEL_48:
  v133 = v194
       + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime;
  swift_beginAccess();
  v134 = v158;
  sub_1C2FF6CFC(v133, v158, &qword_1EF81A578);
  v135 = v58
       + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime;
  swift_beginAccess();
  v136 = v159;
  v137 = v159 + *(int *)(v165 + 48);
  sub_1C2FF6CFC(v134, v159, &qword_1EF81A578);
  v138 = v136;
  sub_1C2FF6CFC(v135, v137, &qword_1EF81A578);
  v139 = v166;
  if (v127(v136, 1, v166) != 1)
  {
    v142 = v136;
    v143 = v156;
    sub_1C2FF6CFC(v142, v156, &qword_1EF81A578);
    if (v127(v137, 1, v139) == 1)
    {
      sub_1C2FF9138(v134, &qword_1EF81A578);
      sub_1C2FF6CC0(v143, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
      goto LABEL_53;
    }
    v144 = v157;
    sub_1C2FF6C38(v137, v157, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
    v145 = _s12SiriOntology010Com_Apple_A19_Product_Proto_TimeV2eeoiySbAC_ACtFZ_0(v143, v144);
    sub_1C2FF6CC0(v144, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
    sub_1C2FF9138(v134, &qword_1EF81A578);
    sub_1C2FF6CC0(v143, type metadata accessor for Com_Apple_Siri_Product_Proto_Time);
    sub_1C2FF9138(v138, &qword_1EF81A578);
    v141 = v194;
    if ((v145 & 1) != 0)
      goto LABEL_56;
LABEL_37:
    swift_release();
    swift_release();
    return 0;
  }
  sub_1C2FF9138(v134, &qword_1EF81A578);
  v140 = v127(v137, 1, v139);
  v141 = v194;
  if (v140 != 1)
  {
LABEL_53:
    sub_1C2FF9138(v138, &qword_1EF81AF38);
    goto LABEL_37;
  }
  sub_1C2FF9138(v136, &qword_1EF81A578);
LABEL_56:
  v146 = (int *)(v141
               + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition);
  swift_beginAccess();
  v147 = *v146;
  v148 = (_DWORD *)(v58
                  + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition);
  swift_beginAccess();
  if (v147 != *v148)
    goto LABEL_37;
  v149 = (int *)(v141
               + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition);
  swift_beginAccess();
  v150 = *v149;
  v151 = (_DWORD *)(v58
                  + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition);
  swift_beginAccess();
  if (v150 != *v151)
    goto LABEL_37;
  v152 = (uint64_t *)(v141
                   + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent);
  swift_beginAccess();
  v153 = *v152;
  swift_release();
  v154 = (uint64_t *)(v58
                   + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent);
  swift_beginAccess();
  v155 = *v154;
  LODWORD(v154) = *((unsigned __int8 *)v154 + 8);
  swift_release();
  if ((_DWORD)v154 == 1)
    __asm { BR              X9 }
  return v153 == v155;
}

uint64_t Com_Apple_Siri_Product_Proto_DateTime.hashValue.getter()
{
  return sub_1C2FF55C4(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime, &qword_1EF81A620, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTime);
}

uint64_t sub_1C30646B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0();
  v4 = *(int *)(a1 + 20);
  if (qword_1EF80A718 != -1)
    swift_once();
  *(_QWORD *)(a2 + v4) = qword_1EF81A4F8;
  return swift_retain();
}

unint64_t sub_1C3064714()
{
  return 0xD000000000000025;
}

uint64_t sub_1C3064730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_DateTime.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C3064744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Com_Apple_Siri_Product_Proto_DateTime.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C3064758()
{
  sub_1C2FF6DE0(&qword_1EF81AEE8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTime);
  return sub_1C3378950();
}

uint64_t sub_1C30647A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A710, (uint64_t)qword_1EF81A4E0, a1);
}

uint64_t sub_1C30647C4()
{
  sub_1C2FF6DE0(&qword_1EF81A7A0, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTime);
  return sub_1C3378AA0();
}

uint64_t sub_1C3064804()
{
  sub_1C2FF6DE0(&qword_1EF81A7A0, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTime);
  return sub_1C3378AAC();
}

uint64_t sub_1C3064858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1C3378B9C();
  __swift_allocate_value_buffer(v0, qword_1EF81A500);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF81A500);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7B3428);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7B33F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C338BE60;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "UNKNOWN";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0DA38C8];
  v9 = sub_1C3378B78();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "PAST";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "PRESENT";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "FUTURE";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  return sub_1C3378B84();
}

uint64_t static Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF19A8(&qword_1EF80A720, (uint64_t)qword_1EF81A500, a1);
}

uint64_t sub_1C3064A34@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2FF1C98(&qword_1EF80A720, (uint64_t)qword_1EF81A500, a1);
}

uint64_t _s12SiriOntology010Com_Apple_A31_Product_Proto_FractionalPeriodV2eeoiySbAC_ACtFZ_0(_DWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *(_DWORD *)a2 && a1[1] == *((_DWORD *)a2 + 1) && a1[2] == *((_DWORD *)a2 + 2))
  {
    v11 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
    v12 = (char *)a1 + *(int *)(v11 + 28);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 28)], v4);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v14 = sub_1C3378BD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A30_Product_Proto_DateTimeHolidayV2eeoiySbAC_ACtFZ_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_1C3379184() & 1) != 0))
  {
    v13 = *(_QWORD *)(a2 + 16);
    if (*(_BYTE *)(a2 + 24) == 1)
      __asm { BR              X11 }
    if (a1[2] == v13)
    {
      v14 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
      v15 = (char *)a1 + *(int *)(v14 + 24);
      v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v10, v15, v4);
      v16(v8, (char *)(a2 + *(int *)(v14 + 24)), v4);
      sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v12 = sub_1C3378BD8();
      v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A25_Product_Proto_RecurrenceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - v9;
  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    goto LABEL_4;
  v11 = *(_BYTE *)(a1 + 16);
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_BYTE *)(a2 + 16);
  v23 = *(_QWORD *)(a1 + 8);
  v24 = v11;
  v21 = v12;
  v22 = v13;
  v14 = Com_Apple_Siri_Product_Proto_Period.rawValue.getter();
  if (v14 == Com_Apple_Siri_Product_Proto_Period.rawValue.getter())
  {
    v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(0);
    v16 = a1 + *(int *)(v15 + 24);
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v17(v10, v16, v4);
    v17(v8, a2 + *(int *)(v15 + 24), v4);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v18 = sub_1C3378BD8();
    v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v8, v4);
    v19(v10, v4);
  }
  else
  {
LABEL_4:
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A23_Product_Proto_IntervalV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - v9;
  if (*(double *)a1 != *(double *)a2)
    goto LABEL_5;
  v11 = *(_BYTE *)(a1 + 16);
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_BYTE *)(a2 + 16);
  v23 = *(_QWORD *)(a1 + 8);
  v24 = v11;
  v21 = v12;
  v22 = v13;
  v14 = Com_Apple_Siri_Product_Proto_Period.rawValue.getter();
  if (v14 != Com_Apple_Siri_Product_Proto_Period.rawValue.getter())
    goto LABEL_5;
  if (sub_1C3055390(*(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), *(_QWORD *)(a2 + 24))
    && *(unsigned __int8 *)(a1 + 33) == *(unsigned __int8 *)(a2 + 33))
  {
    v17 = type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0);
    v18 = a1 + *(int *)(v17 + 32);
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v19(v10, v18, v4);
    v19(v8, a2 + *(int *)(v17 + 32), v4);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v15 = sub_1C3378BD8();
    v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    v20(v8, v4);
    v20(v10, v4);
  }
  else
  {
LABEL_5:
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A23_Product_Proto_DurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - v9;
  if (*(double *)a1 != *(double *)a2)
    goto LABEL_4;
  v11 = *(_BYTE *)(a1 + 16);
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_BYTE *)(a2 + 16);
  v23 = *(_QWORD *)(a1 + 8);
  v24 = v11;
  v21 = v12;
  v22 = v13;
  v14 = Com_Apple_Siri_Product_Proto_Period.rawValue.getter();
  if (v14 == Com_Apple_Siri_Product_Proto_Period.rawValue.getter())
  {
    v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(0);
    v16 = a1 + *(int *)(v15 + 24);
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v17(v10, v16, v4);
    v17(v8, a2 + *(int *)(v15 + 24), v4);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v18 = sub_1C3378BD8();
    v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v8, v4);
    v19(v10, v4);
  }
  else
  {
LABEL_4:
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A23_Product_Proto_DateTimeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a2 + v11);
  if (v12 == v13
    || (swift_retain(), swift_retain(), v14 = sub_1C3063380(v12, v13), swift_release(), swift_release(), v14))
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    v15(v8, a2, v4);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v16 = sub_1C3378BD8();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A29_Product_Proto_DateTimePeriodV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unsigned __int8 v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  void (*v17)(char *, unsigned __int8 *, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unsigned __int8 v24;

  v4 = sub_1C3378914();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - v9;
  if (*a1 != *a2)
    goto LABEL_4;
  v11 = a1[16];
  v12 = *((_QWORD *)a2 + 1);
  v13 = a2[16];
  v23 = *((_QWORD *)a1 + 1);
  v24 = v11;
  v21 = v12;
  v22 = v13;
  v14 = Com_Apple_Siri_Product_Proto_Period.rawValue.getter();
  if (v14 == Com_Apple_Siri_Product_Proto_Period.rawValue.getter())
  {
    v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
    v16 = &a1[*(int *)(v15 + 24)];
    v17 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v17(v10, v16, v4);
    v17(v8, &a2[*(int *)(v15 + 24)], v4);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v18 = sub_1C3378BD8();
    v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v8, v4);
    v19(v10, v4);
  }
  else
  {
LABEL_4:
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A19_Product_Proto_TimeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 *v27;
  char v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;

  v4 = sub_1C3378914();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v41 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v39 - v7;
  v8 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v44 = (unsigned __int8 *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81AF70);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (unsigned __int8 *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v39 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v39 - v21;
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v23 = 0;
    if ((sub_1C3379184() & 1) == 0)
      return v23 & 1;
  }
  if (*(_DWORD *)(a1 + 16) != *(_DWORD *)(a2 + 16) || *(_DWORD *)(a1 + 20) != *(_DWORD *)(a2 + 20))
    goto LABEL_20;
  v24 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  sub_1C2FF6CFC(a1 + *(int *)(v24 + 52), (uint64_t)v22, &qword_1EF81A518);
  v39 = v24;
  sub_1C2FF6CFC(a2 + *(int *)(v24 + 52), (uint64_t)v20, &qword_1EF81A518);
  v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1C2FF6CFC((uint64_t)v22, (uint64_t)v13, &qword_1EF81A518);
  sub_1C2FF6CFC((uint64_t)v20, v25, &qword_1EF81A518);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v26((uint64_t)v13, 1, v8) == 1)
  {
    sub_1C2FF9138((uint64_t)v20, &qword_1EF81A518);
    sub_1C2FF9138((uint64_t)v22, &qword_1EF81A518);
    if (v26(v25, 1, v8) == 1)
    {
      sub_1C2FF9138((uint64_t)v13, &qword_1EF81A518);
      goto LABEL_13;
    }
LABEL_11:
    sub_1C2FF9138((uint64_t)v13, &qword_1EF81AF70);
    v23 = 0;
    return v23 & 1;
  }
  sub_1C2FF6CFC((uint64_t)v13, (uint64_t)v17, &qword_1EF81A518);
  if (v26(v25, 1, v8) == 1)
  {
    sub_1C2FF9138((uint64_t)v20, &qword_1EF81A518);
    sub_1C2FF9138((uint64_t)v22, &qword_1EF81A518);
    sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
    goto LABEL_11;
  }
  v27 = v44;
  sub_1C2FF6C38(v25, (uint64_t)v44, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  v28 = _s12SiriOntology010Com_Apple_A29_Product_Proto_DateTimePeriodV2eeoiySbAC_ACtFZ_0(v17, v27);
  sub_1C2FF6CC0((uint64_t)v27, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  sub_1C2FF9138((uint64_t)v20, &qword_1EF81A518);
  sub_1C2FF9138((uint64_t)v22, &qword_1EF81A518);
  sub_1C2FF6CC0((uint64_t)v17, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
  sub_1C2FF9138((uint64_t)v13, &qword_1EF81A518);
  if ((v28 & 1) == 0)
  {
LABEL_20:
    v23 = 0;
    return v23 & 1;
  }
LABEL_13:
  if (!sub_1C3055390(*(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), *(_QWORD *)(a2 + 24)))
    goto LABEL_20;
  if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)
    || (v23 = 0, (sub_1C3379184() & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 56) == *(unsigned __int8 *)(a2 + 56)
      && *(unsigned __int8 *)(a1 + 57) == *(unsigned __int8 *)(a2 + 57)
      && *(unsigned __int8 *)(a1 + 58) == *(unsigned __int8 *)(a2 + 58))
    {
      v30 = v39;
      v31 = v40;
      v32 = a1 + *(int *)(v39 + 48);
      v34 = v42;
      v33 = v43;
      v35 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
      v35(v40, v32, v43);
      v36 = a2 + *(int *)(v30 + 48);
      v37 = v41;
      v35(v41, v36, v33);
      sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
      v23 = sub_1C3378BD8();
      v38 = *(void (**)(char *, uint64_t))(v34 + 8);
      v38(v37, v33);
      v38(v31, v33);
      return v23 & 1;
    }
    goto LABEL_20;
  }
  return v23 & 1;
}

uint64_t _s12SiriOntology010Com_Apple_A19_Product_Proto_DateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char v44;
  char v45;
  _DWORD *v47;
  char *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  _DWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;

  v72 = sub_1C3378914();
  v63 = *(_QWORD *)(v72 - 8);
  v4 = MEMORY[0x1E0C80A78](v72);
  v62 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v61 = (char *)&v59 - v6;
  v70 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
  v67 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v64 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81AF60);
  MEMORY[0x1E0C80A78](v66);
  v71 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A528);
  v10 = MEMORY[0x1E0C80A78](v9);
  v65 = (_DWORD *)((char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x1E0C80A78](v10);
  v68 = (uint64_t)&v59 - v13;
  MEMORY[0x1E0C80A78](v12);
  v69 = (uint64_t)&v59 - v14;
  v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81AF68);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A520);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v59 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v59 - v29;
  if (*(_DWORD *)a1 != *(_DWORD *)a2
    || *(_DWORD *)(a1 + 4) != *(_DWORD *)(a2 + 4)
    || *(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 8)
    || !sub_1C3038A6C(*(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_QWORD *)(a2 + 16)))
  {
    goto LABEL_28;
  }
  v31 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  v60 = a2;
  v32 = v31;
  sub_1C2FF6CFC(a1 + *(int *)(v31 + 60), (uint64_t)v30, &qword_1EF81A520);
  v59 = v32;
  sub_1C2FF6CFC(v60 + *(int *)(v32 + 60), (uint64_t)v28, &qword_1EF81A520);
  v33 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_1C2FF6CFC((uint64_t)v30, (uint64_t)v21, &qword_1EF81A520);
  sub_1C2FF6CFC((uint64_t)v28, v33, &qword_1EF81A520);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v21, 1, v15) == 1)
  {
    sub_1C2FF9138((uint64_t)v28, &qword_1EF81A520);
    sub_1C2FF9138((uint64_t)v30, &qword_1EF81A520);
    if (v34(v33, 1, v15) == 1)
    {
      sub_1C2FF9138((uint64_t)v21, &qword_1EF81A520);
      goto LABEL_8;
    }
LABEL_18:
    v42 = &qword_1EF81AF68;
LABEL_19:
    v43 = (uint64_t)v21;
LABEL_27:
    sub_1C2FF9138(v43, v42);
    goto LABEL_28;
  }
  sub_1C2FF6CFC((uint64_t)v21, (uint64_t)v25, &qword_1EF81A520);
  if (v34(v33, 1, v15) == 1)
  {
    sub_1C2FF9138((uint64_t)v28, &qword_1EF81A520);
    sub_1C2FF9138((uint64_t)v30, &qword_1EF81A520);
    sub_1C2FF6CC0((uint64_t)v25, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
    goto LABEL_18;
  }
  sub_1C2FF6C38(v33, (uint64_t)v18, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  if ((*(_QWORD *)v25 != *v18 || *((_QWORD *)v25 + 1) != v18[1]) && (sub_1C3379184() & 1) == 0
    || !sub_1C3055390(*((_QWORD *)v25 + 2), v25[24], v18[2]))
  {
    sub_1C2FF6CC0((uint64_t)v18, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
    sub_1C2FF9138((uint64_t)v28, &qword_1EF81A520);
    sub_1C2FF9138((uint64_t)v30, &qword_1EF81A520);
    sub_1C2FF6CC0((uint64_t)v25, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
    v43 = (uint64_t)v21;
    v42 = &qword_1EF81A520;
    goto LABEL_27;
  }
  sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
  v44 = sub_1C3378BD8();
  sub_1C2FF6CC0((uint64_t)v18, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  sub_1C2FF9138((uint64_t)v28, &qword_1EF81A520);
  sub_1C2FF9138((uint64_t)v30, &qword_1EF81A520);
  sub_1C2FF6CC0((uint64_t)v25, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
  sub_1C2FF9138((uint64_t)v21, &qword_1EF81A520);
  if ((v44 & 1) == 0)
    goto LABEL_28;
LABEL_8:
  v35 = v60;
  if (!sub_1C3055390(*(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(_QWORD *)(v60 + 32))
    || *(unsigned __int8 *)(a1 + 41) != *(unsigned __int8 *)(v35 + 41)
    || *(unsigned __int8 *)(a1 + 42) != *(unsigned __int8 *)(v35 + 42)
    || (sub_1C300538C(*(_QWORD *)(a1 + 48), *(_QWORD *)(v35 + 48)) & 1) == 0
    || !sub_1C3055390(*(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 64), *(_QWORD *)(v35 + 56)))
  {
    goto LABEL_28;
  }
  v36 = v59;
  v37 = v69;
  sub_1C2FF6CFC(a1 + *(int *)(v59 + 64), v69, &qword_1EF81A528);
  v38 = v68;
  sub_1C2FF6CFC(v35 + *(int *)(v36 + 64), v68, &qword_1EF81A528);
  v21 = v71;
  v39 = (uint64_t)&v71[*(int *)(v66 + 48)];
  sub_1C2FF6CFC(v37, (uint64_t)v71, &qword_1EF81A528);
  sub_1C2FF6CFC(v38, v39, &qword_1EF81A528);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  v41 = v70;
  if (v40((uint64_t)v21, 1, v70) != 1)
  {
    v47 = v65;
    sub_1C2FF6CFC((uint64_t)v21, (uint64_t)v65, &qword_1EF81A528);
    if (v40(v39, 1, v41) != 1)
    {
      v48 = v64;
      sub_1C2FF6C38(v39, (uint64_t)v64, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
      v49 = _s12SiriOntology010Com_Apple_A31_Product_Proto_FractionalPeriodV2eeoiySbAC_ACtFZ_0(v47, v48);
      sub_1C2FF6CC0((uint64_t)v48, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
      sub_1C2FF9138(v38, &qword_1EF81A528);
      sub_1C2FF9138(v37, &qword_1EF81A528);
      sub_1C2FF6CC0((uint64_t)v47, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
      sub_1C2FF9138((uint64_t)v21, &qword_1EF81A528);
      if ((v49 & 1) == 0)
        goto LABEL_28;
      goto LABEL_34;
    }
    sub_1C2FF9138(v38, &qword_1EF81A528);
    sub_1C2FF9138(v37, &qword_1EF81A528);
    sub_1C2FF6CC0((uint64_t)v47, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
    goto LABEL_32;
  }
  sub_1C2FF9138(v38, &qword_1EF81A528);
  sub_1C2FF9138(v37, &qword_1EF81A528);
  if (v40(v39, 1, v41) != 1)
  {
LABEL_32:
    v42 = &qword_1EF81AF60;
    goto LABEL_19;
  }
  sub_1C2FF9138((uint64_t)v21, &qword_1EF81A528);
LABEL_34:
  if (*(_DWORD *)(a1 + 68) == *(_DWORD *)(v35 + 68))
  {
    v50 = v59;
    v51 = a1 + *(int *)(v59 + 56);
    v52 = v63;
    v53 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
    v54 = v61;
    v55 = v72;
    v53(v61, v51, v72);
    v56 = v35 + *(int *)(v50 + 56);
    v57 = v62;
    v53(v62, v56, v55);
    sub_1C2FF6DE0(&qword_1EF819450, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3710], MEMORY[0x1E0DA3720]);
    v45 = sub_1C3378BD8();
    v58 = *(void (**)(char *, uint64_t))(v52 + 8);
    v58(v57, v55);
    v58(v54, v55);
    return v45 & 1;
  }
LABEL_28:
  v45 = 0;
  return v45 & 1;
}

uint64_t sub_1C30661C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  _DWORD *v45;
  _DWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  uint64_t v56;
  _DWORD *v57;
  uint64_t v58;
  uint64_t v59;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A578);
  MEMORY[0x1E0C80A78](v3);
  v59 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A568);
  MEMORY[0x1E0C80A78](v5);
  v58 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A558);
  MEMORY[0x1E0C80A78](v7);
  v56 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A548);
  MEMORY[0x1E0C80A78](v9);
  v53 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A530);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate;
  v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_Date(0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  v17 = v1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate;
  v16(v1+ OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate, 1, 1, v15);
  v18 = v1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration;
  v19 = type metadata accessor for Com_Apple_Siri_Product_Proto_Duration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = v1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval;
  v50 = v1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval;
  v21 = type metadata accessor for Com_Apple_Siri_Product_Proto_Interval(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = v1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence;
  v51 = v1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence;
  v23 = type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = v1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime;
  v52 = v1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime;
  v25 = type metadata accessor for Com_Apple_Siri_Product_Proto_Time(0);
  v26 = *(void (**)(void))(*(_QWORD *)(v25 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v26)(v24, 1, 1, v25);
  v54 = v1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime;
  v26();
  v55 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition) = 0;
  v57 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition) = 0;
  v27 = v1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent;
  *(_QWORD *)v27 = 0;
  *(_BYTE *)(v27 + 8) = 1;
  v28 = a1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startDate;
  swift_beginAccess();
  sub_1C2FF6CFC(v28, (uint64_t)v13, &qword_1EF81A530);
  swift_beginAccess();
  sub_1C2FF6D84((uint64_t)v13, v14, &qword_1EF81A530);
  swift_endAccess();
  v29 = a1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endDate;
  swift_beginAccess();
  sub_1C2FF6CFC(v29, (uint64_t)v13, &qword_1EF81A530);
  swift_beginAccess();
  sub_1C2FF6D84((uint64_t)v13, v17, &qword_1EF81A530);
  swift_endAccess();
  v30 = a1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__duration;
  swift_beginAccess();
  v31 = v53;
  sub_1C2FF6CFC(v30, v53, &qword_1EF81A548);
  swift_beginAccess();
  sub_1C2FF6D84(v31, v18, &qword_1EF81A548);
  swift_endAccess();
  v32 = a1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__interval;
  swift_beginAccess();
  v33 = v56;
  sub_1C2FF6CFC(v32, v56, &qword_1EF81A558);
  v34 = v50;
  swift_beginAccess();
  sub_1C2FF6D84(v33, v34, &qword_1EF81A558);
  swift_endAccess();
  v35 = a1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__recurrence;
  swift_beginAccess();
  v36 = v58;
  sub_1C2FF6CFC(v35, v58, &qword_1EF81A568);
  v37 = v51;
  swift_beginAccess();
  sub_1C2FF6D84(v36, v37, &qword_1EF81A568);
  swift_endAccess();
  v38 = a1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startTime;
  swift_beginAccess();
  v39 = v59;
  sub_1C2FF6CFC(v38, v59, &qword_1EF81A578);
  v40 = v52;
  swift_beginAccess();
  sub_1C2FF6D84(v39, v40, &qword_1EF81A578);
  swift_endAccess();
  v41 = a1
      + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endTime;
  swift_beginAccess();
  sub_1C2FF6CFC(v41, v39, &qword_1EF81A578);
  v42 = v54;
  swift_beginAccess();
  sub_1C2FF6D84(v39, v42, &qword_1EF81A578);
  swift_endAccess();
  v43 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition);
  swift_beginAccess();
  LODWORD(v43) = *v43;
  v44 = v55;
  swift_beginAccess();
  *v44 = (_DWORD)v43;
  v45 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition);
  swift_beginAccess();
  LODWORD(v45) = *v45;
  v46 = v57;
  swift_beginAccess();
  *v46 = (_DWORD)v45;
  v47 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__temporalIntent);
  swift_beginAccess();
  v48 = *v47;
  LOBYTE(v47) = *((_BYTE *)v47 + 8);
  swift_beginAccess();
  *(_QWORD *)v27 = v48;
  *(_BYTE *)(v27 + 8) = (_BYTE)v47;
  return v1;
}

unint64_t sub_1C306684C()
{
  unint64_t result;

  result = qword_1EF81A5A8;
  if (!qword_1EF81A5A8)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Period, &type metadata for Com_Apple_Siri_Product_Proto_Period);
    atomic_store(result, (unint64_t *)&qword_1EF81A5A8);
  }
  return result;
}

unint64_t sub_1C3066890()
{
  unint64_t result;

  result = qword_1EF81A5C0;
  if (!qword_1EF81A5C0)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Qualifier, &type metadata for Com_Apple_Siri_Product_Proto_Qualifier);
    atomic_store(result, (unint64_t *)&qword_1EF81A5C0);
  }
  return result;
}

unint64_t sub_1C30668D4()
{
  unint64_t result;

  result = qword_1EF81A5D8;
  if (!qword_1EF81A5D8)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_CalendarSystem, &type metadata for Com_Apple_Siri_Product_Proto_CalendarSystem);
    atomic_store(result, (unint64_t *)&qword_1EF81A5D8);
  }
  return result;
}

unint64_t sub_1C3066918()
{
  unint64_t result;

  result = qword_1EF81A5E8;
  if (!qword_1EF81A5E8)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DayOfWeek, &type metadata for Com_Apple_Siri_Product_Proto_DayOfWeek);
    atomic_store(result, (unint64_t *)&qword_1EF81A5E8);
  }
  return result;
}

unint64_t sub_1C3066960()
{
  unint64_t result;

  result = qword_1EF81A628;
  if (!qword_1EF81A628)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Period, &type metadata for Com_Apple_Siri_Product_Proto_Period);
    atomic_store(result, (unint64_t *)&qword_1EF81A628);
  }
  return result;
}

unint64_t sub_1C30669A8()
{
  unint64_t result;

  result = qword_1EF81A630;
  if (!qword_1EF81A630)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Period, &type metadata for Com_Apple_Siri_Product_Proto_Period);
    atomic_store(result, (unint64_t *)&qword_1EF81A630);
  }
  return result;
}

unint64_t sub_1C30669F0()
{
  unint64_t result;

  result = qword_1EF81A638;
  if (!qword_1EF81A638)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Period, &type metadata for Com_Apple_Siri_Product_Proto_Period);
    atomic_store(result, (unint64_t *)&qword_1EF81A638);
  }
  return result;
}

uint64_t sub_1C3066A34()
{
  return sub_1C3014264(&qword_1EF81A640, &qword_1EF81A648);
}

unint64_t sub_1C3066A5C()
{
  unint64_t result;

  result = qword_1EF81A650;
  if (!qword_1EF81A650)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Qualifier, &type metadata for Com_Apple_Siri_Product_Proto_Qualifier);
    atomic_store(result, (unint64_t *)&qword_1EF81A650);
  }
  return result;
}

unint64_t sub_1C3066AA4()
{
  unint64_t result;

  result = qword_1EF81A658;
  if (!qword_1EF81A658)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Qualifier, &type metadata for Com_Apple_Siri_Product_Proto_Qualifier);
    atomic_store(result, (unint64_t *)&qword_1EF81A658);
  }
  return result;
}

unint64_t sub_1C3066AEC()
{
  unint64_t result;

  result = qword_1EF81A660;
  if (!qword_1EF81A660)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Qualifier, &type metadata for Com_Apple_Siri_Product_Proto_Qualifier);
    atomic_store(result, (unint64_t *)&qword_1EF81A660);
  }
  return result;
}

uint64_t sub_1C3066B30()
{
  return sub_1C3014264(&qword_1EF81A668, &qword_1EF81A670);
}

unint64_t sub_1C3066B58()
{
  unint64_t result;

  result = qword_1EF81A678;
  if (!qword_1EF81A678)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_CalendarSystem, &type metadata for Com_Apple_Siri_Product_Proto_CalendarSystem);
    atomic_store(result, (unint64_t *)&qword_1EF81A678);
  }
  return result;
}

unint64_t sub_1C3066BA0()
{
  unint64_t result;

  result = qword_1EF81A680;
  if (!qword_1EF81A680)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_CalendarSystem, &type metadata for Com_Apple_Siri_Product_Proto_CalendarSystem);
    atomic_store(result, (unint64_t *)&qword_1EF81A680);
  }
  return result;
}

unint64_t sub_1C3066BE8()
{
  unint64_t result;

  result = qword_1EF81A688;
  if (!qword_1EF81A688)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_CalendarSystem, &type metadata for Com_Apple_Siri_Product_Proto_CalendarSystem);
    atomic_store(result, (unint64_t *)&qword_1EF81A688);
  }
  return result;
}

uint64_t sub_1C3066C2C()
{
  return sub_1C3014264(&qword_1EF81A690, &qword_1EF81A698);
}

unint64_t sub_1C3066C54()
{
  unint64_t result;

  result = qword_1EF81A6A0;
  if (!qword_1EF81A6A0)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DayOfWeek, &type metadata for Com_Apple_Siri_Product_Proto_DayOfWeek);
    atomic_store(result, (unint64_t *)&qword_1EF81A6A0);
  }
  return result;
}

unint64_t sub_1C3066C9C()
{
  unint64_t result;

  result = qword_1EF81A6A8;
  if (!qword_1EF81A6A8)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DayOfWeek, &type metadata for Com_Apple_Siri_Product_Proto_DayOfWeek);
    atomic_store(result, (unint64_t *)&qword_1EF81A6A8);
  }
  return result;
}

unint64_t sub_1C3066CE4()
{
  unint64_t result;

  result = qword_1EF81A6B0;
  if (!qword_1EF81A6B0)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DayOfWeek, &type metadata for Com_Apple_Siri_Product_Proto_DayOfWeek);
    atomic_store(result, (unint64_t *)&qword_1EF81A6B0);
  }
  return result;
}

uint64_t sub_1C3066D28()
{
  return sub_1C3014264(&qword_1EF81A6B8, &qword_1EF81A6C0);
}

unint64_t sub_1C3066D50()
{
  unint64_t result;

  result = qword_1EF81A6C8;
  if (!qword_1EF81A6C8)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent, &type metadata for Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent);
    atomic_store(result, (unint64_t *)&qword_1EF81A6C8);
  }
  return result;
}

unint64_t sub_1C3066D98()
{
  unint64_t result;

  result = qword_1EF81A6D0;
  if (!qword_1EF81A6D0)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent, &type metadata for Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent);
    atomic_store(result, (unint64_t *)&qword_1EF81A6D0);
  }
  return result;
}

unint64_t sub_1C3066DE0()
{
  unint64_t result;

  result = qword_1EF81A6D8;
  if (!qword_1EF81A6D8)
  {
    result = MEMORY[0x1C3BD1B4C](&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent, &type metadata for Com_Apple_Siri_Product_Proto_DateTime.TemporalIntent);
    atomic_store(result, (unint64_t *)&qword_1EF81A6D8);
  }
  return result;
}

uint64_t sub_1C3066E24()
{
  return sub_1C3014264(&qword_1EF81A6E0, &qword_1EF81A6E8);
}

uint64_t sub_1C3066E48()
{
  return sub_1C2FF6DE0(&qword_1EF81A6F0, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
}

uint64_t sub_1C3066E74()
{
  return sub_1C2FF6DE0(&qword_1EF81A5C8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
}

uint64_t sub_1C3066EA0()
{
  return sub_1C2FF6DE0(&qword_1EF81A5B0, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
}

uint64_t sub_1C3066ECC()
{
  return sub_1C2FF6DE0(&qword_1EF81A6F8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
}

uint64_t sub_1C3066EF8()
{
  return sub_1C2FF6DE0(&qword_1EF81A700, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
}

uint64_t sub_1C3066F24()
{
  return sub_1C2FF6DE0(&qword_1EF81A5F0, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
}

uint64_t sub_1C3066F50()
{
  return sub_1C2FF6DE0(&qword_1EF81A5B8, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
}

uint64_t sub_1C3066F7C()
{
  return sub_1C2FF6DE0(&qword_1EF81A708, type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_FractionalPeriod);
}

uint64_t sub_1C3066FA8()
{
  return sub_1C2FF6DE0(&qword_1EF81A710, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Time);
}

uint64_t sub_1C3066FD4()
{
  return sub_1C2FF6DE0(&qword_1EF81A718, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Time);
}

uint64_t sub_1C3067000()
{
  return sub_1C2FF6DE0(&qword_1EF81A5D0, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Time);
}

uint64_t sub_1C306702C()
{
  return sub_1C2FF6DE0(&qword_1EF81A720, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Time);
}

uint64_t sub_1C3067058()
{
  return sub_1C2FF6DE0(&qword_1EF81A728, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
}

uint64_t sub_1C3067084()
{
  return sub_1C2FF6DE0(&qword_1EF81A5F8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
}

uint64_t sub_1C30670B0()
{
  return sub_1C2FF6DE0(&qword_1EF81A5E0, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
}

uint64_t sub_1C30670DC()
{
  return sub_1C2FF6DE0(&qword_1EF81A730, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTimeHoliday);
}

uint64_t sub_1C3067108()
{
  return sub_1C2FF6DE0(&qword_1EF81A738, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Date);
}

uint64_t sub_1C3067134()
{
  return sub_1C2FF6DE0(&qword_1EF81A740, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Date);
}

uint64_t sub_1C3067160()
{
  return sub_1C2FF6DE0(&qword_1EF81A600, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Date);
}

uint64_t sub_1C306718C()
{
  return sub_1C2FF6DE0(&qword_1EF81A748, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Date);
}

uint64_t sub_1C30671B8()
{
  return sub_1C2FF6DE0(&qword_1EF81A750, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Duration);
}

uint64_t sub_1C30671E4()
{
  return sub_1C2FF6DE0(&qword_1EF81A758, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Duration);
}

uint64_t sub_1C3067210()
{
  return sub_1C2FF6DE0(&qword_1EF81A608, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Duration);
}

uint64_t sub_1C306723C()
{
  return sub_1C2FF6DE0(&qword_1EF81A760, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Duration);
}

uint64_t sub_1C3067268()
{
  return sub_1C2FF6DE0(&qword_1EF81A768, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Interval);
}

uint64_t sub_1C3067294()
{
  return sub_1C2FF6DE0(&qword_1EF81A770, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Interval);
}

uint64_t sub_1C30672C0()
{
  return sub_1C2FF6DE0(&qword_1EF81A610, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Interval);
}

uint64_t sub_1C30672EC()
{
  return sub_1C2FF6DE0(&qword_1EF81A778, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Interval);
}

uint64_t sub_1C3067318()
{
  return sub_1C2FF6DE0(&qword_1EF81A780, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Recurrence);
}

uint64_t sub_1C3067344()
{
  return sub_1C2FF6DE0(&qword_1EF81A788, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Recurrence);
}

uint64_t sub_1C3067370()
{
  return sub_1C2FF6DE0(&qword_1EF81A618, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Recurrence);
}

uint64_t sub_1C306739C()
{
  return sub_1C2FF6DE0(&qword_1EF81A790, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_Recurrence);
}

uint64_t sub_1C30673C8()
{
  return sub_1C2FF6DE0(&qword_1EF81A798, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTime);
}

uint64_t sub_1C30673F4()
{
  return sub_1C2FF6DE0(&qword_1EF81A7A0, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTime);
}

uint64_t sub_1C3067420()
{
  return sub_1C2FF6DE0(&qword_1EF81A620, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTime);
}

uint64_t sub_1C306744C()
{
  return sub_1C2FF6DE0(&qword_1EF81A7A8, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime, (uint64_t)&protocol conformance descriptor for Com_Apple_Siri_Product_Proto_DateTime);
}

uint64_t sub_1C3067490@<X0>(uint64_t a1@<X8>)
{
  return Com_Apple_Siri_Product_Proto_DateTime.startDate.getter(a1);
}

uint64_t sub_1C30674B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FF0628(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, (uint64_t (*)(char *))Com_Apple_Siri_Product_Proto_DateTime.startDate.setter);
}

uint64_t sub_1C30674D4@<X0>(uint64_t a1@<X8>)
{
  return Com_Apple_Siri_Product_Proto_DateTime.endDate.getter(a1);
}

uint64_t sub_1C30674F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FF0628(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_Date, (uint64_t (*)(char *))Com_Apple_Siri_Product_Proto_DateTime.endDate.setter);
}

uint64_t sub_1C306751C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FF0628(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_Duration, (uint64_t (*)(char *))Com_Apple_Siri_Product_Proto_DateTime.duration.setter);
}

uint64_t sub_1C3067540@<X0>(uint64_t a1@<X8>)
{
  return Com_Apple_Siri_Product_Proto_DateTime.interval.getter(a1);
}

uint64_t sub_1C3067560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FF0628(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_Interval, (uint64_t (*)(char *))Com_Apple_Siri_Product_Proto_DateTime.interval.setter);
}

uint64_t sub_1C3067588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FF0628(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_Recurrence, (uint64_t (*)(char *))Com_Apple_Siri_Product_Proto_DateTime.recurrence.setter);
}

uint64_t sub_1C30675AC@<X0>(uint64_t a1@<X8>)
{
  return Com_Apple_Siri_Product_Proto_DateTime.startTime.getter(a1);
}

uint64_t sub_1C30675CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FF0628(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, (uint64_t (*)(char *))Com_Apple_Siri_Product_Proto_DateTime.startTime.setter);
}

uint64_t sub_1C30675F0@<X0>(uint64_t a1@<X8>)
{
  return Com_Apple_Siri_Product_Proto_DateTime.endTime.getter(a1);
}

uint64_t sub_1C3067610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2FF0628(a1, a2, a3, a4, type metadata accessor for Com_Apple_Siri_Product_Proto_Time, (uint64_t (*)(char *))Com_Apple_Siri_Product_Proto_DateTime.endTime.setter);
}

uint64_t sub_1C3067634@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition, a2);
}

uint64_t sub_1C3067640(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C305C834(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__startPosition);
}

uint64_t sub_1C306765C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition, a2);
}

uint64_t keypath_get_19Tm@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, _DWORD *a3@<X8>)
{
  _DWORD *v4;
  uint64_t result;

  v4 = (_DWORD *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Siri_Product_Proto_DateTime(0) + 20))
                + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_1C30676D0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C305C834(a1, a2, a3, a4, &OBJC_IVAR____TtCV12SiriOntology37Com_Apple_Siri_Product_Proto_DateTimeP33_697D571C32F0AF8F560B5FAE0C121ED613_StorageClass__endPosition);
}

ValueMetadata *type metadata accessor for Com_Apple_Siri_Product_Proto_Period()
{
  return &type metadata for Com_Apple_Siri_Product_Proto_Period;
}

ValueMetadata *type metadata accessor for Com_Apple_Siri_Product_Proto_Qualifier()
{
  return &type metadata for Com_Apple_Siri_Product_Proto_Qualifier;
}

ValueMetadata *type metadata accessor for Com_Apple_Siri_Product_Proto_CalendarSystem()
{
  return &type metadata for Com_Apple_Siri_Product_Proto_CalendarSystem;
}

ValueMetadata *type metadata accessor for Com_Apple_Siri_Product_Proto_DayOfWeek()
{
  return &type metadata for Com_Apple_Siri_Product_Proto_DayOfWeek;
}

_QWORD *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_DateTimePeriod(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v5 = *(int *)(a3 + 24);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_1C3378914();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t initializeWithCopy for Com_Apple_Siri_Product_Proto_DateTimePeriod(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for Com_Apple_Siri_Product_Proto_DateTimePeriod(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t initializeWithTake for Com_Apple_Siri_Product_Proto_DateTimePeriod(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for Com_Apple_Siri_Product_Proto_DateTimePeriod(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_DateTimePeriod()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C306798C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_1C3378914();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_DateTimePeriod()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1C3067A14(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_1C3378914();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C3067A84()
{
  return sub_1C306A68C();
}

_QWORD *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_FractionalPeriod(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    v5 = *(int *)(a3 + 28);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_1C3378914();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_FractionalPeriod(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for Com_Apple_Siri_Product_Proto_FractionalPeriod(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithCopy for Com_Apple_Siri_Product_Proto_FractionalPeriod(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = *(int *)(a3 + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for Com_Apple_Siri_Product_Proto_FractionalPeriod(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for Com_Apple_Siri_Product_Proto_FractionalPeriod(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_FractionalPeriod()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3067CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 28);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_FractionalPeriod()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3067D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 28);
  v6 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1C3067D8C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C3378914();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_Time(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v8 = a2[5];
    v9 = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    *(_BYTE *)(a1 + 58) = *((_BYTE *)a2 + 58);
    v10 = *(int *)(a3 + 48);
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    v13 = sub_1C3378914();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = *(int *)(a3 + 52);
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      *v16 = *v17;
      *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
      v16[16] = v17[16];
      v14((uint64_t)&v16[*(int *)(v18 + 24)], (uint64_t)&v17[*(int *)(v18 + 24)], v13);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
  }
  return v4;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_Time(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_1C3378914();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 52);
  v7 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 24), v5);
  return result;
}

uint64_t initializeWithCopy for Com_Apple_Siri_Product_Proto_Time(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v9 = *(int *)(a3 + 48);
  v10 = (_BYTE *)(a1 + v9);
  v11 = (_BYTE *)(a2 + v9);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v12 = sub_1C3378914();
  v13 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = *(int *)(a3 + 52);
  v15 = (_BYTE *)(a1 + v14);
  v16 = (_BYTE *)(a2 + v14);
  v17 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v15 = *v16;
    *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
    v15[16] = v16[16];
    v13(&v15[*(int *)(v17 + 24)], &v16[*(int *)(v17 + 24)], v12);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithCopy for Com_Apple_Siri_Product_Proto_Time(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v6 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v7 = *(int *)(a3 + 48);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C3378914();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = *(int *)(a3 + 52);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v9) = v18(v14, 1, v16);
  v19 = v18(v15, 1, v16);
  if (!(_DWORD)v9)
  {
    if (!v19)
    {
      *(_BYTE *)v14 = *(_BYTE *)v15;
      v23 = *(_QWORD *)(v15 + 8);
      *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
      *(_QWORD *)(v14 + 8) = v23;
      v12(v14 + *(int *)(v16 + 24), v15 + *(int *)(v16 + 24), v10);
      return a1;
    }
    sub_1C2FF6CC0(v14, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
    memcpy((void *)v14, (const void *)v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  *(_BYTE *)v14 = *(_BYTE *)v15;
  v20 = *(_QWORD *)(v15 + 8);
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_QWORD *)(v14 + 8) = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14 + *(int *)(v16 + 24), v15 + *(int *)(v16 + 24), v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t initializeWithTake for Com_Apple_Siri_Product_Proto_Time(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  void (*v11)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v7 = *(int *)(a3 + 48);
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  *(_OWORD *)(a1 + 40) = v6;
  v10 = sub_1C3378914();
  v11 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 52);
  v13 = (_BYTE *)(a1 + v12);
  v14 = (_BYTE *)(a2 + v12);
  v15 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    v13[16] = v14[16];
    v11(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v10);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithTake for Com_Apple_Siri_Product_Proto_Time(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v8 = *(int *)(a3 + 48);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1C3378914();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  v14 = *(int *)(a3 + 52);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v10) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if (!(_DWORD)v10)
  {
    if (!v20)
    {
      *(_BYTE *)v15 = *(_BYTE *)v16;
      *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
      *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
      v13(v15 + *(int *)(v17 + 24), v16 + *(int *)(v17 + 24), v11);
      return a1;
    }
    sub_1C2FF6CC0(v15, type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
    memcpy((void *)v15, (const void *)v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v15 + *(int *)(v17 + 24), v16 + *(int *)(v17 + 24), v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_Time()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C30686AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C3378914();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 48);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 52);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_Time()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C306875C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1C3378914();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 48);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A518);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 52);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1C30687FC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C3378914();
  if (v0 <= 0x3F)
  {
    sub_1C2FF90EC(319, qword_1EF81A948, (void (*)(uint64_t))type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimePeriod);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_DateTimeHoliday(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1C3378914();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for Com_Apple_Siri_Product_Proto_DateTimeHoliday(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1C3378914();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for Com_Apple_Siri_Product_Proto_DateTimeHoliday(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1C3378914();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for Com_Apple_Siri_Product_Proto_DateTimeHoliday(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for Com_Apple_Siri_Product_Proto_DateTimeHoliday(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for Com_Apple_Siri_Product_Proto_DateTimeHoliday(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C3378914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_DateTimeHoliday()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3068BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C3378914();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Com_Apple_Siri_Product_Proto_DateTimeHoliday()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C3068C40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C3378914();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C3068CB4()
{
  return sub_1C306A68C();
}

_QWORD *initializeBufferWithCopyOfBuffer for Com_Apple_Siri_Product_Proto_Date(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _DWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
    *(_BYTE *)(a1 + 42) = *((_BYTE *)a2 + 42);
    v9 = a2[6];
    v8 = a2[7];
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v8;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    v10 = a3[14];
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_QWORD *)a1 = v7;
    v13 = sub_1C3378914();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = a3[15];
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = type metadata accessor for Com_Apple_Siri_Product_Proto_DateTimeHoliday(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A520);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v22 = v17[1];
      *v16 = *v17;
      v16[1] = v22;
      v16[2] = v17[2];
      *((_BYTE *)v16 + 24) = *((_BYTE *)v17 + 24);
      v23 = *(int *)(v18 + 24);
      v24 = (char *)v16 + v23;
      v25 = (char *)v17 + v23;
      swift_bridgeObjectRetain();
      v14((uint64_t)v24, (uint64_t)v25, v13);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v26 = a3[16];
    v27 = (_DWORD *)((char *)v4 + v26);
    v28 = (_DWORD *)((char *)a2 + v26);
    v29 = type metadata accessor for Com_Apple_Siri_Product_Proto_FractionalPeriod(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF81A528);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v27[2] = v28[2];
      v14((uint64_t)v27 + *(int *)(v29 + 28), (uint64_t)v28 + *(int *)(v29 + 28), v13);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
  }
  return v4;
}

