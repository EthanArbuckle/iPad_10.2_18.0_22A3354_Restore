uint64_t sub_23A52E234()
{
  uint64_t v0;

  v0 = sub_23A59E6A4();
  __swift_allocate_value_buffer(v0, qword_256994CD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256994CD8);
  sub_23A59E3F8();
  return sub_23A59E698();
}

uint64_t DTSyncDaemon.PersistentData.database.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 DTSyncDaemon.PersistentData.database.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  return result;
}

uint64_t (*DTSyncDaemon.PersistentData.database.modify())()
{
  return nullsub_1;
}

uint64_t DTSyncDaemon.PersistentData.stateSerialization.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DTSyncDaemon.PersistentData(0) + 20);
  return sub_23A52E35C(v3, a1);
}

uint64_t type metadata accessor for DTSyncDaemon.PersistentData(uint64_t a1)
{
  return sub_23A52F018(a1, (uint64_t *)&unk_256996390);
}

uint64_t sub_23A52E35C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B8520B8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t DTSyncDaemon.PersistentData.stateSerialization.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DTSyncDaemon.PersistentData(0) + 20);
  return sub_23A52E414(a1, v3);
}

uint64_t sub_23A52E414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DTSyncDaemon.PersistentData.stateSerialization.modify())()
{
  type metadata accessor for DTSyncDaemon.PersistentData(0);
  return nullsub_1;
}

uint64_t sub_23A52E484(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000012;
  else
    return 0x6573616261746164;
}

BOOL sub_23A52E4C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23A52E4DC()
{
  return sub_23A59F0F4();
}

uint64_t sub_23A52E508()
{
  char *v0;

  return sub_23A52E484(*v0);
}

uint64_t sub_23A52E510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A53A804(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A52E534()
{
  return 0;
}

void sub_23A52E540(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23A52E54C()
{
  sub_23A52E72C();
  return sub_23A59F13C();
}

uint64_t sub_23A52E574()
{
  sub_23A52E72C();
  return sub_23A59F148();
}

uint64_t DTSyncDaemon.PersistentData.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993048);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A52E72C();
  sub_23A59F118();
  v11 = *v3;
  v10[15] = 0;
  sub_23A52E770();
  sub_23A59F01C();
  if (!v2)
  {
    type metadata accessor for DTSyncDaemon.PersistentData(0);
    LOBYTE(v11) = 1;
    sub_23A59E848();
    sub_23A52EAEC(&qword_256993058, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8AF0], MEMORY[0x24BDB8B00]);
    sub_23A59EFE0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23A52E72C()
{
  unint64_t result;

  result = qword_256994D68;
  if (!qword_256994D68)
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0808, &_s14PersistentDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256994D68);
  }
  return result;
}

unint64_t sub_23A52E770()
{
  unint64_t result;

  result = qword_256993050;
  if (!qword_256993050)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedDatabase, &type metadata for DTSyncedDatabase);
    atomic_store(result, (unint64_t *)&qword_256993050);
  }
  return result;
}

uint64_t sub_23A52E7B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v2 = MEMORY[0x24BEE4B00];
  *a1 = MEMORY[0x24BEE4B00];
  a1[1] = v2;
  v3 = (char *)a1 + *(int *)(type metadata accessor for DTSyncDaemon.PersistentData(0) + 20);
  v4 = sub_23A59E848();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
}

uint64_t DTSyncDaemon.PersistentData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  char v26;

  v20 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
  MEMORY[0x24BDAC7A8]();
  v21 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993060);
  v4 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DTSyncDaemon.PersistentData(0);
  v7 = MEMORY[0x24BDAC7A8]();
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x24BEE4B00];
  *v9 = MEMORY[0x24BEE4B00];
  v9[1] = v10;
  v11 = (uint64_t)v9 + *(int *)(v7 + 20);
  v12 = sub_23A59E848();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A52E72C();
  v23 = v6;
  v13 = v24;
  sub_23A59F10C();
  if (!v13)
  {
    v14 = (uint64_t)v21;
    v26 = 0;
    sub_23A52EAA8();
    v15 = v22;
    sub_23A59EF98();
    swift_bridgeObjectRelease_n();
    *(_OWORD *)v9 = v25;
    LOBYTE(v25) = 1;
    sub_23A52EAEC(&qword_256993070, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8AF0], MEMORY[0x24BDB8B08]);
    v16 = v23;
    sub_23A59EF5C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v15);
    v17 = v20;
    sub_23A52E414(v14, v11);
    sub_23A53ABC0((uint64_t)v9, v17, type metadata accessor for DTSyncDaemon.PersistentData);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_23A53AC04((uint64_t)v9, type metadata accessor for DTSyncDaemon.PersistentData);
}

unint64_t sub_23A52EAA8()
{
  unint64_t result;

  result = qword_256993068;
  if (!qword_256993068)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedDatabase, &type metadata for DTSyncedDatabase);
    atomic_store(result, (unint64_t *)&qword_256993068);
  }
  return result;
}

uint64_t sub_23A52EAEC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B8520D0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23A52EB2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DTSyncDaemon.PersistentData.init(from:)(a1, a2);
}

uint64_t sub_23A52EB40(_QWORD *a1)
{
  return DTSyncDaemon.PersistentData.encode(to:)(a1);
}

void sub_23A52EB54()
{
  qword_256994CF8 = 0x6C6172656E6567;
  unk_256994D00 = 0xE700000000000000;
}

uint64_t *sub_23A52EB78()
{
  if (qword_256994CF0 != -1)
    swift_once();
  return &qword_256994CF8;
}

uint64_t static DTSyncedDatabase.zoneName.getter()
{
  return sub_23A5366C8(&qword_256994CF0, &qword_256994CF8);
}

uint64_t DTSyncedDatabase.alarms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DTSyncedDatabase.alarms.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DTSyncedDatabase.alarms.modify())()
{
  return nullsub_1;
}

uint64_t DTSyncedDatabase.timers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DTSyncedDatabase.timers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DTSyncedDatabase.timers.modify())()
{
  return nullsub_1;
}

uint64_t sub_23A52EC58(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7372656D6974;
  else
    return 0x736D72616C61;
}

uint64_t sub_23A52EC80()
{
  char *v0;

  return sub_23A52EC58(*v0);
}

uint64_t sub_23A52EC88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A53A8E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A52ECAC()
{
  sub_23A52EE60();
  return sub_23A59F13C();
}

uint64_t sub_23A52ECD4()
{
  sub_23A52EE60();
  return sub_23A59F148();
}

uint64_t DTSyncedDatabase.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993078);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A52EE60();
  sub_23A59F118();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256993080);
  sub_23A52EEA4();
  sub_23A59F01C();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256993098);
    sub_23A52EF80();
    sub_23A59F01C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23A52EE60()
{
  unint64_t result;

  result = qword_256994D70;
  if (!qword_256994D70)
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A07B8, &type metadata for DTSyncedDatabase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256994D70);
  }
  return result;
}

unint64_t sub_23A52EEA4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256993088;
  if (!qword_256993088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256993080);
    v2 = sub_23A52EAEC(&qword_256993090, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x23B8520D0](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256993088);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B8520C4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for DTSyncedAlarm(uint64_t a1)
{
  return sub_23A52F018(a1, (uint64_t *)&unk_2569963A0);
}

unint64_t sub_23A52EF80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2569930A0;
  if (!qword_2569930A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256993098);
    v2 = sub_23A52EAEC(&qword_2569930A8, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x23B8520D0](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2569930A0);
  }
  return result;
}

uint64_t type metadata accessor for DTSyncedTimer(uint64_t a1)
{
  return sub_23A52F018(a1, qword_2569963B0);
}

uint64_t sub_23A52F018(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DTSyncedDatabase.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569930B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A52EE60();
  sub_23A59F10C();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256993080);
    v13 = 0;
    sub_23A52F234();
    sub_23A59EF98();
    v10 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256993098);
    v13 = 1;
    sub_23A52F2B8();
    swift_bridgeObjectRetain();
    sub_23A59EF98();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v10;
    a2[1] = v11;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23A52F234()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2569930B8;
  if (!qword_2569930B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256993080);
    v2 = sub_23A52EAEC(&qword_2569930C0, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x23B8520D0](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2569930B8);
  }
  return result;
}

unint64_t sub_23A52F2B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2569930C8;
  if (!qword_2569930C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256993098);
    v2 = sub_23A52EAEC(&qword_2569930D0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x23B8520D0](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2569930C8);
  }
  return result;
}

uint64_t sub_23A52F33C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DTSyncedDatabase.init(from:)(a1, a2);
}

uint64_t sub_23A52F350(_QWORD *a1)
{
  return DTSyncedDatabase.encode(to:)(a1);
}

id sub_23A52F368()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = 0;
  v2 = *(_QWORD *)(v0 + 48);
  if (v2 >> 60 != 15)
  {
    v3 = *(_QWORD *)(v0 + 40);
    v4 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_23A53ABAC(v3, v2);
    v5 = sub_23A53A9C0();
    objc_msgSend(v5, sel_setRequiresSecureCoding_, 1);
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB91D8]), sel_initWithCoder_, v5);

    sub_23A53AA94(v3, v2);
  }
  return v1;
}

id sub_23A52F5E8()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = 0;
  v2 = *(_QWORD *)(v0 + 32);
  if (v2 >> 60 != 15)
  {
    v3 = *(_QWORD *)(v0 + 24);
    v4 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_23A53ABAC(v3, v2);
    v5 = sub_23A53A9C0();
    objc_msgSend(v5, sel_setRequiresSecureCoding_, 1);
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB91D8]), sel_initWithCoder_, v5);

    sub_23A53AA94(v3, v2);
  }
  return v1;
}

id DTSyncedObject.lastKnownRecord.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  id v8;

  v2 = (*(uint64_t (**)(void))(a2 + 56))();
  v4 = 0;
  if (v3 >> 60 != 15)
  {
    v5 = v2;
    v6 = v3;
    v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v8 = sub_23A53A9C0();
    objc_msgSend(v8, sel_setRequiresSecureCoding_, 1);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB91D8]), sel_initWithCoder_, v8);

    sub_23A53AA94(v5, v6);
  }
  return v4;
}

double sub_23A52FAE8(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  if (a1)
  {
    v3 = objc_allocWithZone(MEMORY[0x24BDD1618]);
    v4 = a1;
    v5 = objc_msgSend(v3, sel_initRequiringSecureCoding_, 1);
    objc_msgSend(v4, sel_encodeSystemFieldsWithCoder_, v5);
    v6 = objc_msgSend(v5, sel_encodedData);
    v7 = sub_23A59E188();
    v9 = v8;

    sub_23A53AA94(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
    *(_QWORD *)(v1 + 40) = v7;
    *(_QWORD *)(v1 + 48) = v9;
  }
  else
  {
    sub_23A53AA94(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
    result = 0.0;
    *(_OWORD *)(v1 + 40) = xmmword_23A59F8C0;
  }
  return result;
}

double sub_23A52FBB8(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  if (a1)
  {
    v3 = objc_allocWithZone(MEMORY[0x24BDD1618]);
    v4 = a1;
    v5 = objc_msgSend(v3, sel_initRequiringSecureCoding_, 1);
    objc_msgSend(v4, sel_encodeSystemFieldsWithCoder_, v5);
    v6 = objc_msgSend(v5, sel_encodedData);
    v7 = sub_23A59E188();
    v9 = v8;

    sub_23A53AA94(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
    *(_QWORD *)(v1 + 24) = v7;
    *(_QWORD *)(v1 + 32) = v9;
  }
  else
  {
    sub_23A53AA94(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
    result = 0.0;
    *(_OWORD *)(v1 + 24) = xmmword_23A59F8C0;
  }
  return result;
}

void DTSyncedObject.lastKnownRecord.setter(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  if (a1)
  {
    v6 = objc_allocWithZone(MEMORY[0x24BDD1618]);
    v12 = a1;
    v7 = objc_msgSend(v6, sel_initRequiringSecureCoding_, 1);
    objc_msgSend(v12, sel_encodeSystemFieldsWithCoder_, v7);
    v8 = objc_msgSend(v7, sel_encodedData);
    v9 = sub_23A59E188();
    v11 = v10;

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 64))(v9, v11, a2, a3);
  }
  else
  {
    (*(void (**)(_QWORD, unint64_t, uint64_t, uint64_t))(a3 + 64))(0, 0xF000000000000000, a2, a3);
  }
}

uint64_t (*sub_23A52FD94(id **a1, uint64_t a2, uint64_t a3))()
{
  id *v6;

  v6 = (id *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = DTSyncedObject.lastKnownRecord.modify(v6, a2, a3);
  return sub_23A52FDF0;
}

void (*sub_23A52FDF4(id *a1))(uint64_t a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_23A52F368();
  return sub_23A52FE28;
}

void sub_23A52FE28(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  id v15;

  v2 = *(void **)a1;
  if ((a2 & 1) != 0)
  {
    v15 = v2;
    sub_23A52FAE8(v2);

  }
  else
  {
    v3 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      v4 = objc_allocWithZone(MEMORY[0x24BDD1618]);
      v5 = v2;
      v6 = objc_msgSend(v4, sel_initRequiringSecureCoding_, 1);
      objc_msgSend(v5, sel_encodeSystemFieldsWithCoder_, v6);
      v7 = objc_msgSend(v6, sel_encodedData);
      v8 = sub_23A59E188();
      v10 = v9;

      v12 = *(_QWORD *)(v3 + 40);
      v11 = (uint64_t *)(v3 + 40);
      v13 = (unint64_t *)(v11 + 1);
      sub_23A53AA94(v12, v11[1]);

    }
    else
    {
      v14 = *(_QWORD *)(v3 + 40);
      v11 = (uint64_t *)(v3 + 40);
      v13 = (unint64_t *)(v11 + 1);
      sub_23A53AA94(v14, v11[1]);
      v8 = 0;
      v10 = 0xF000000000000000;
    }
    *v11 = v8;
    *v13 = v10;
  }
}

void (*sub_23A52FF48(id *a1))(uint64_t a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_23A52F5E8();
  return sub_23A52FF7C;
}

void sub_23A52FF7C(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  id v15;

  v2 = *(void **)a1;
  if ((a2 & 1) != 0)
  {
    v15 = v2;
    sub_23A52FBB8(v2);

  }
  else
  {
    v3 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      v4 = objc_allocWithZone(MEMORY[0x24BDD1618]);
      v5 = v2;
      v6 = objc_msgSend(v4, sel_initRequiringSecureCoding_, 1);
      objc_msgSend(v5, sel_encodeSystemFieldsWithCoder_, v6);
      v7 = objc_msgSend(v6, sel_encodedData);
      v8 = sub_23A59E188();
      v10 = v9;

      v12 = *(_QWORD *)(v3 + 24);
      v11 = (uint64_t *)(v3 + 24);
      v13 = (unint64_t *)(v11 + 1);
      sub_23A53AA94(v12, v11[1]);

    }
    else
    {
      v14 = *(_QWORD *)(v3 + 24);
      v11 = (uint64_t *)(v3 + 24);
      v13 = (unint64_t *)(v11 + 1);
      sub_23A53AA94(v14, v11[1]);
      v8 = 0;
      v10 = 0xF000000000000000;
    }
    *v11 = v8;
    *v13 = v10;
  }
}

void (*DTSyncedObject.lastKnownRecord.modify(id *a1, uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  void *v3;

  a1[2] = (id)a3;
  a1[3] = v3;
  a1[1] = (id)a2;
  *a1 = DTSyncedObject.lastKnownRecord.getter(a2, a3);
  return sub_23A5300DC;
}

void sub_23A5300DC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    v5 = v4;
    DTSyncedObject.lastKnownRecord.setter(v4, v3, v2);

  }
  else
  {
    DTSyncedObject.lastKnownRecord.setter(*(void **)a1, v3, v2);
  }
}

void sub_23A530154(id a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(void);
  id v35;
  void *v36;
  char *v37;
  char *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2569930D8);
  v3 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v47 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v47 - v9;
  v11 = sub_23A59E1F4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v49 = (char *)&v47 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v47 - v18;
  v20 = sub_23A52F368();
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_7:
    sub_23A53B9B4((uint64_t)v10, &qword_2569930D8);
    v26 = objc_allocWithZone(MEMORY[0x24BDD1618]);
    v27 = a1;
    v28 = objc_msgSend(v26, sel_initRequiringSecureCoding_, 1);
    objc_msgSend(v27, sel_encodeSystemFieldsWithCoder_, v28);
    v29 = objc_msgSend(v28, sel_encodedData);
    v30 = sub_23A59E188();
    v32 = v31;

    sub_23A53AA94(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
    *(_QWORD *)(v1 + 40) = v30;
    *(_QWORD *)(v1 + 48) = v32;
    return;
  }
  v21 = v20;
  v50 = a1;
  v22 = objc_msgSend(v20, sel_modificationDate);

  if (v22)
  {
    sub_23A59E1C4();

    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v23(v8, 0, 1, v11);
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v23(v8, 1, 1, v11);
  }
  sub_23A53AAEC((uint64_t)v8, (uint64_t)v10, &qword_2569930D8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v25 = v24(v10, 1, v11);
  a1 = v50;
  if (v25 == 1)
    goto LABEL_7;
  v33 = v19;
  v34 = *(void (**)(void))(v12 + 32);
  v48 = v33;
  v34();
  v35 = objc_msgSend(a1, sel_modificationDate);
  if (!v35)
  {
    v23(v5, 1, 1, v11);
    goto LABEL_14;
  }
  v36 = v35;
  sub_23A59E1C4();

  ((void (*)(char *, char *, uint64_t))v34)(v5, v15, v11);
  v23(v5, 0, 1, v11);
  if (v24(v5, 1, v11) == 1)
  {
LABEL_14:
    (*(void (**)(char *, uint64_t))(v12 + 8))(v48, v11);
    sub_23A53B9B4((uint64_t)v5, &qword_2569930D8);
    return;
  }
  v37 = v49;
  ((void (*)(char *, char *, uint64_t))v34)(v49, v5, v11);
  v38 = v48;
  if ((sub_23A59E1AC() & 1) != 0)
  {
    v39 = objc_allocWithZone(MEMORY[0x24BDD1618]);
    v40 = v50;
    v41 = objc_msgSend(v39, sel_initRequiringSecureCoding_, 1);
    objc_msgSend(v40, sel_encodeSystemFieldsWithCoder_, v41);
    v42 = objc_msgSend(v41, sel_encodedData);
    v43 = sub_23A59E188();
    v45 = v44;

    sub_23A53AA94(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
    *(_QWORD *)(v1 + 40) = v43;
    *(_QWORD *)(v1 + 48) = v45;
  }
  v46 = *(void (**)(char *, uint64_t))(v12 + 8);
  v46(v37, v11);
  v46(v38, v11);
}

void sub_23A530560(id a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(void);
  id v36;
  void *v37;
  char *v38;
  char *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569930D8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v48 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v48 - v10;
  v12 = sub_23A59E1F4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v50 = (char *)&v48 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v48 - v19;
  v21 = sub_23A52F5E8();
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_7:
    sub_23A53B9B4((uint64_t)v11, &qword_2569930D8);
    v27 = objc_allocWithZone(MEMORY[0x24BDD1618]);
    v28 = a1;
    v29 = objc_msgSend(v27, sel_initRequiringSecureCoding_, 1);
    objc_msgSend(v28, sel_encodeSystemFieldsWithCoder_, v29);
    v30 = objc_msgSend(v29, sel_encodedData);
    v31 = sub_23A59E188();
    v33 = v32;

    sub_23A53AA94(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
    *(_QWORD *)(v1 + 24) = v31;
    *(_QWORD *)(v1 + 32) = v33;
    return;
  }
  v22 = v21;
  v51 = a1;
  v23 = objc_msgSend(v21, sel_modificationDate);

  if (v23)
  {
    sub_23A59E1C4();

    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v24(v9, 0, 1, v12);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v24(v9, 1, 1, v12);
  }
  sub_23A53AAEC((uint64_t)v9, (uint64_t)v11, &qword_2569930D8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v26 = v25(v11, 1, v12);
  a1 = v51;
  if (v26 == 1)
    goto LABEL_7;
  v34 = v20;
  v35 = *(void (**)(void))(v13 + 32);
  v49 = v34;
  v35();
  v36 = objc_msgSend(a1, sel_modificationDate);
  if (!v36)
  {
    v24(v6, 1, 1, v12);
    goto LABEL_14;
  }
  v37 = v36;
  sub_23A59E1C4();

  ((void (*)(char *, char *, uint64_t))v35)(v6, v16, v12);
  v24(v6, 0, 1, v12);
  if (v25(v6, 1, v12) == 1)
  {
LABEL_14:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v49, v12);
    sub_23A53B9B4((uint64_t)v6, &qword_2569930D8);
    return;
  }
  v38 = v50;
  ((void (*)(char *, char *, uint64_t))v35)(v50, v6, v12);
  v39 = v49;
  if ((sub_23A59E1AC() & 1) != 0)
  {
    v40 = objc_allocWithZone(MEMORY[0x24BDD1618]);
    v41 = v51;
    v42 = objc_msgSend(v40, sel_initRequiringSecureCoding_, 1);
    objc_msgSend(v41, sel_encodeSystemFieldsWithCoder_, v42);
    v43 = objc_msgSend(v42, sel_encodedData);
    v44 = sub_23A59E188();
    v46 = v45;

    sub_23A53AA94(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
    *(_QWORD *)(v1 + 24) = v44;
    *(_QWORD *)(v1 + 32) = v46;
  }
  v47 = *(void (**)(char *, uint64_t))(v13 + 8);
  v47(v38, v12);
  v47(v39, v12);
}

Swift::Void __swiftcall DTSyncedObject.setLastKnownRecordIfNewer(_:)(CKRecord a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  void *v25;
  void *v26;
  id v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(Class, uint64_t, uint64_t);
  Class v31;
  objc_class *v32;
  void (*v33)(char *, char *, uint64_t);
  Class v34;
  id v35;
  void *v36;
  char *v37;
  char *v38;
  void (*v39)(Class, uint64_t, uint64_t);
  objc_class *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  Class isa;

  v4 = v2;
  v5 = v1;
  isa = a1.super.isa;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569930D8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v42 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v42 - v13;
  v15 = sub_23A59E1F4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v43 = (char *)&v42 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v42 - v22;
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 80);
  v45 = v3;
  v46 = v5;
  v25 = (void *)v24(v5, v4);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
LABEL_7:
    sub_23A53B9B4((uint64_t)v14, &qword_2569930D8);
    v30 = *(void (**)(Class, uint64_t, uint64_t))(v4 + 88);
    v31 = isa;
    v32 = isa;
    v30(v31, v46, v4);
    return;
  }
  v26 = v25;
  v44 = v23;
  v27 = objc_msgSend(v25, sel_modificationDate);

  if (v27)
  {
    sub_23A59E1C4();

    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v28(v12, 0, 1, v15);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v28(v12, 1, 1, v15);
  }
  sub_23A53AAEC((uint64_t)v12, (uint64_t)v14, &qword_2569930D8);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v29(v14, 1, v15) == 1)
    goto LABEL_7;
  v33 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v33(v44, v14, v15);
  v34 = isa;
  v35 = objc_msgSend(isa, (SEL)0x250B706D8);
  if (!v35)
  {
    v28(v9, 1, 1, v15);
    goto LABEL_14;
  }
  v36 = v35;
  sub_23A59E1C4();

  v33(v9, v19, v15);
  v28(v9, 0, 1, v15);
  if (v29(v9, 1, v15) == 1)
  {
LABEL_14:
    (*(void (**)(char *, uint64_t))(v16 + 8))(v44, v15);
    sub_23A53B9B4((uint64_t)v9, &qword_2569930D8);
    return;
  }
  v37 = v43;
  v33(v43, v9, v15);
  v38 = v44;
  if ((sub_23A59E1AC() & 1) != 0)
  {
    v39 = *(void (**)(Class, uint64_t, uint64_t))(v4 + 88);
    v40 = v34;
    v39(v34, v46, v4);
  }
  v41 = *(void (**)(char *, uint64_t))(v16 + 8);
  v41(v37, v15);
  v41(v38, v15);
}

uint64_t sub_23A530CA8(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id v5;

  sub_23A59E008();
  swift_allocObject();
  sub_23A59DFFC();
  type metadata accessor for DTSyncedAlarm(0);
  sub_23A52EAEC(&qword_256993090, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
  v2 = sub_23A59DFF0();
  v4 = v3;
  swift_release();
  v5 = objc_msgSend(a1, sel_encryptedValues);
  swift_getObjectType();
  if (qword_256994D20 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_23A53AB30(v2, v4);
  sub_23A59EC2C();
  sub_23A53AAA8(v2, v4);
  return swift_unknownObjectRelease();
}

uint64_t sub_23A530FBC(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id v5;

  sub_23A59E008();
  swift_allocObject();
  sub_23A59DFFC();
  type metadata accessor for DTSyncedTimer(0);
  sub_23A52EAEC(&qword_2569930A8, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
  v2 = sub_23A59DFF0();
  v4 = v3;
  swift_release();
  v5 = objc_msgSend(a1, sel_encryptedValues);
  swift_getObjectType();
  if (qword_256994D50 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_23A53AB30(v2, v4);
  sub_23A59EC2C();
  sub_23A53AAA8(v2, v4);
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall DTSyncedObject.populateRecord(_:)(CKRecord a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v3 = v2;
  v4 = v1;
  sub_23A59E008();
  swift_allocObject();
  sub_23A59DFFC();
  v6 = sub_23A59DFF0();
  v8 = v7;
  swift_release();
  -[objc_class encryptedValues](a1.super.isa, sel_encryptedValues);
  swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 48))(v4, v3);
  sub_23A53AB30(v6, v8);
  sub_23A59EC2C();
  sub_23A53AAA8(v6, v8);
  swift_unknownObjectRelease();
}

id sub_23A5315A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  id result;

  result = DTSyncedObject.lastKnownRecord.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

void sub_23A5315D8(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v4 = *(_QWORD *)(a4 + a3 - 16);
  v5 = *(_QWORD *)(a4 + a3 - 8);
  v6 = *a1;
  v7 = *a1;
  DTSyncedObject.lastKnownRecord.setter(v6, v4, v5);
}

void sub_23A53161C()
{
  qword_256994D10 = 0x6D72616C61;
  *(_QWORD *)algn_256994D18 = 0xE500000000000000;
}

uint64_t *sub_23A53163C()
{
  if (qword_256994D08 != -1)
    swift_once();
  return &qword_256994D10;
}

uint64_t static DTSyncedAlarm.ckRecordType.getter()
{
  return sub_23A5366C8(&qword_256994D08, &qword_256994D10);
}

void sub_23A53169C()
{
  qword_256994D28 = 0x6D72616C61;
  unk_256994D30 = 0xE500000000000000;
}

uint64_t static DTSyncedAlarm.ckValueKey.getter()
{
  return sub_23A5366C8(&qword_256994D20, &qword_256994D28);
}

uint64_t static DTSyncedAlarm.toneIDMaxCount.getter()
{
  return 20000;
}

uint64_t DTSyncedAlarm.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DTSyncedAlarm.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DTSyncedAlarm.id.modify())()
{
  return nullsub_1;
}

uint64_t DTSyncedAlarm.enabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DTSyncedAlarm.enabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*DTSyncedAlarm.enabled.modify())()
{
  return nullsub_1;
}

uint64_t DTSyncedAlarm.hour.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t DTSyncedAlarm.hour.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*DTSyncedAlarm.hour.modify())()
{
  return nullsub_1;
}

uint64_t DTSyncedAlarm.minute.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t DTSyncedAlarm.minute.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*DTSyncedAlarm.minute.modify())()
{
  return nullsub_1;
}

uint64_t DTSyncedAlarm.lastKnownRecordData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_23A53ABAC(v1, *(_QWORD *)(v0 + 48));
  return v1;
}

uint64_t DTSyncedAlarm.lastKnownRecordData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23A53AA94(*(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*DTSyncedAlarm.lastKnownRecordData.modify())()
{
  return nullsub_1;
}

uint64_t DTSyncedAlarm.modificationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DTSyncedAlarm(0) + 36);
  v4 = sub_23A59E1F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DTSyncedAlarm.modificationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DTSyncedAlarm(0) + 36);
  v4 = sub_23A59E1F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DTSyncedAlarm.modificationDate.modify())()
{
  type metadata accessor for DTSyncedAlarm(0);
  return nullsub_1;
}

uint64_t DTSyncedAlarm.repeatSchedule.getter()
{
  type metadata accessor for DTSyncedAlarm(0);
  return swift_bridgeObjectRetain();
}

uint64_t DTSyncedAlarm.repeatSchedule.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for DTSyncedAlarm(0) + 40);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*DTSyncedAlarm.repeatSchedule.modify())()
{
  type metadata accessor for DTSyncedAlarm(0);
  return nullsub_1;
}

uint64_t DTSyncedAlarm.sound.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for DTSyncedAlarm(0) + 44);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

__n128 DTSyncedAlarm.sound.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for DTSyncedAlarm(0) + 44));
  swift_bridgeObjectRelease();
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u8[8] = v3;
  return result;
}

uint64_t (*DTSyncedAlarm.sound.modify())()
{
  type metadata accessor for DTSyncedAlarm(0);
  return nullsub_1;
}

uint64_t DTSyncedAlarm.targetIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DTSyncedAlarm(0) + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DTSyncedAlarm.targetIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for DTSyncedAlarm(0) + 48));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DTSyncedAlarm.targetIdentifier.modify())()
{
  type metadata accessor for DTSyncedAlarm(0);
  return nullsub_1;
}

uint64_t DTSyncedAlarm.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DTSyncedAlarm(0) + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DTSyncedAlarm.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for DTSyncedAlarm(0) + 52));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DTSyncedAlarm.title.modify())()
{
  type metadata accessor for DTSyncedAlarm(0);
  return nullsub_1;
}

uint64_t default argument 1 of DTSyncedAlarm.init(id:hour:minute:modificationDate:)()
{
  return 0;
}

uint64_t default argument 2 of DTSyncedAlarm.init(id:hour:minute:modificationDate:)()
{
  return 0;
}

uint64_t DTSyncedAlarm.init(id:hour:minute:modificationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;

  v12 = sub_23A59E260();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A59E254();
  sub_23A59E20C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(_BYTE *)(a6 + 16) = 1;
  *(_OWORD *)(a6 + 40) = xmmword_23A59F8C0;
  v16 = (int *)type metadata accessor for DTSyncedAlarm(0);
  v17 = a6 + v16[9];
  _s23DistributedTimersDaemon13DTSyncedAlarmV2id4hour6minute16modificationDateACSS_S2i10Foundation0J0VtcfcfA2__0();
  v18 = v16[10];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + v18) = MEMORY[0x24BEE4B08];
  v19 = a6 + v16[11];
  *(_QWORD *)v19 = 0;
  *(_QWORD *)(v19 + 8) = 0;
  *(_BYTE *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 16) = 0;
  v20 = (_QWORD *)(a6 + v16[12]);
  *v20 = 0;
  v20[1] = 0;
  v21 = (_QWORD *)(a6 + v16[13]);
  *v21 = 0;
  v21[1] = 0;
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 24) = a3;
  *(_QWORD *)(a6 + 32) = a4;
  v22 = sub_23A59E1F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v17, a5, v22);
}

uint64_t DTSyncedAlarm.init(mtAlarm:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;

  v4 = sub_23A59E1F4();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A59E260();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A59E254();
  sub_23A59E20C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_OWORD *)(a2 + 40) = xmmword_23A59F8C0;
  v11 = (int *)type metadata accessor for DTSyncedAlarm(0);
  v12 = a2 + v11[9];
  _s23DistributedTimersDaemon13DTSyncedAlarmV2id4hour6minute16modificationDateACSS_S2i10Foundation0J0VtcfcfA2__0();
  *(_QWORD *)(a2 + v11[10]) = MEMORY[0x24BEE4B08];
  v13 = a2 + v11[11];
  *(_QWORD *)v13 = 0;
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 24) = 0;
  v47 = v13;
  *(_QWORD *)(v13 + 16) = 0;
  v14 = (uint64_t *)(a2 + v11[12]);
  *v14 = 0;
  v14[1] = 0;
  v50 = v14;
  v15 = (uint64_t *)(a2 + v11[13]);
  *v15 = 0;
  v15[1] = 0;
  v16 = objc_msgSend(a1, sel_alarmIDString);
  v17 = sub_23A59E9A4();
  v19 = v18;
  swift_bridgeObjectRelease();

  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v19;
  *(_BYTE *)(a2 + 16) = objc_msgSend(a1, sel_isEnabled);
  *(_QWORD *)(a2 + 24) = objc_msgSend(a1, sel_hour);
  *(_QWORD *)(a2 + 32) = objc_msgSend(a1, sel_minute);
  sub_23A59E1D0();
  v20 = v12;
  v21 = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 40))(v20, v6, v49);
  v22 = objc_msgSend(a1, sel_repeatSchedule);
  v23 = v22;
  if ((v22 & 1) != 0)
  {
    sub_23A5395FC(&v51, 0);
    if ((v23 & 2) == 0)
    {
LABEL_3:
      if ((v23 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_3;
  }
  sub_23A5395FC(&v52, 1);
  if ((v23 & 4) == 0)
  {
LABEL_4:
    if ((v23 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  sub_23A5395FC(&v53, 2);
  if ((v23 & 8) == 0)
  {
LABEL_5:
    if ((v23 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  sub_23A5395FC(&v54, 3);
  if ((v23 & 0x10) == 0)
  {
LABEL_6:
    if ((v23 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  sub_23A5395FC(&v55, 4);
  if ((v23 & 0x20) == 0)
  {
LABEL_7:
    if ((v23 & 0x40) == 0)
      goto LABEL_9;
    goto LABEL_8;
  }
LABEL_16:
  sub_23A5395FC(&v56, 5);
  if ((v23 & 0x40) != 0)
LABEL_8:
    sub_23A5395FC(&v57, 6);
LABEL_9:
  v24 = objc_msgSend(v21, sel_title);
  if (v24)
  {
    v25 = v24;
    v26 = sub_23A59E9A4();
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  swift_bridgeObjectRelease();
  *v15 = v26;
  v15[1] = v28;
  v29 = objc_msgSend(v21, sel_sound);
  if (objc_msgSend(v29, sel_soundType) == (id)2)
  {
    v30 = objc_msgSend(v29, sel_toneIdentifier);
    if (v30)
    {
      v31 = v30;
      v32 = sub_23A59E9A4();
      v34 = v33;

      if (sub_23A59E9D4() > 19999)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = objc_msgSend(v29, sel_soundVolume);
        if (v35)
        {
          v36 = v35;
          objc_msgSend(v35, sel_doubleValue);
          v38 = v37;

          v39 = v47;
          swift_bridgeObjectRelease();
          *(_QWORD *)v39 = v32;
          *(_QWORD *)(v39 + 8) = v34;
          *(_QWORD *)(v39 + 16) = v38;
          *(_BYTE *)(v39 + 24) = 0;
        }
        else
        {
          v40 = v47;
          swift_bridgeObjectRelease();
          *(_QWORD *)v40 = v32;
          *(_QWORD *)(v40 + 8) = v34;
          *(_QWORD *)(v40 + 16) = 0;
          *(_BYTE *)(v40 + 24) = 1;
        }
      }
    }
  }
  v41 = sub_23A59ECBC();
  v43 = v42;

  v44 = v50;
  result = swift_bridgeObjectRelease();
  *v44 = v41;
  v44[1] = v43;
  return result;
}

DistributedTimersDaemon::DTSyncedAlarm::Sound::MediaInfo __swiftcall DTSyncedAlarm.Sound.MediaInfo.init(mediaIdentifier:volume:)(Swift::String mediaIdentifier, Swift::Double_optional volume)
{
  char v2;
  uint64_t v3;
  DistributedTimersDaemon::DTSyncedAlarm::Sound::MediaInfo result;

  *(Swift::String *)v3 = mediaIdentifier;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)&volume.is_nil;
  *(_BYTE *)(v3 + 24) = v2 & 1;
  result.mediaIdentifier = mediaIdentifier;
  result.volume.value = volume.value;
  result.volume.is_nil = volume.is_nil;
  return result;
}

uint64_t DTSyncedAlarm.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t inited;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v1 = sub_23A59E2B4();
  v26 = *(_QWORD *)(v1 - 8);
  v27 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569930F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23A59F8D0;
  *(_QWORD *)(inited + 32) = 7237453;
  v29 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_BYTE *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 6649172;
  *(_QWORD *)(inited + 64) = 0xE300000000000000;
  *(_BYTE *)(inited + 72) = 1;
  *(_QWORD *)(inited + 80) = 6579543;
  *(_QWORD *)(inited + 88) = 0xE300000000000000;
  *(_BYTE *)(inited + 96) = 2;
  *(_QWORD *)(inited + 104) = 7694420;
  *(_QWORD *)(inited + 112) = 0xE300000000000000;
  *(_BYTE *)(inited + 120) = 3;
  *(_QWORD *)(inited + 128) = 6910534;
  *(_QWORD *)(inited + 136) = 0xE300000000000000;
  *(_BYTE *)(inited + 144) = 4;
  *(_QWORD *)(inited + 152) = 7627091;
  *(_QWORD *)(inited + 160) = 0xE300000000000000;
  *(_BYTE *)(inited + 168) = 5;
  *(_QWORD *)(inited + 176) = 7238995;
  *(_QWORD *)(inited + 184) = 0xE300000000000000;
  v31 = inited;
  *(_BYTE *)(inited + 192) = 6;
  v36 = 0;
  v37 = 0xE000000000000000;
  v28 = v3;
  sub_23A59E29C();
  result = type metadata accessor for DTSyncedAlarm(0);
  v6 = 0;
  v24 = result;
  v25 = v0;
  v7 = *(_QWORD *)(v0 + *(int *)(result + 40));
  v8 = v7 + 56;
  while (*(_QWORD *)(v31 + 16) > v6)
  {
    if (*(_QWORD *)(v7 + 16))
    {
      v9 = v29 + 24 * v6;
      v10 = *(_QWORD *)(v9 + 8);
      v30 = *(_QWORD *)v9;
      v11 = *(char *)(v9 + 16);
      sub_23A59F0E8();
      v32 = v10;
      swift_bridgeObjectRetain();
      sub_23A59E9C8();
      swift_bridgeObjectRelease();
      v12 = sub_23A59F100();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = v12 & ~v13;
      if (((*(_QWORD *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
      {
        v15 = ~v13;
        v16 = *(_QWORD *)&aMonday_1[8 * v11];
        v17 = qword_23A5A08D8[v11];
        while (*(_QWORD *)&aMonday_1[8 * *(char *)(*(_QWORD *)(v7 + 48) + v14)] != v16
             || qword_23A5A08D8[*(char *)(*(_QWORD *)(v7 + 48) + v14)] != v17)
        {
          v19 = sub_23A59F064();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) != 0)
            goto LABEL_3;
          v14 = (v14 + 1) & v15;
          if (((*(_QWORD *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
            goto LABEL_4;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_3:
        sub_23A59E9BC();
      }
LABEL_4:
      result = swift_bridgeObjectRelease();
    }
    if (++v6 == 7)
    {
      swift_bridgeObjectRelease();
      v34 = 0;
      v35 = 0xE000000000000000;
      sub_23A59EE00();
      sub_23A59E9E0();
      v20 = v25;
      swift_bridgeObjectRetain();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      sub_23A59E9E0();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      sub_23A59E9E0();
      *(_QWORD *)&v33 = *(_QWORD *)(v20 + 24);
      sub_23A59F034();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      sub_23A59E9E0();
      *(_QWORD *)&v33 = *(_QWORD *)(v20 + 32);
      sub_23A59F034();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      sub_23A59E9E0();
      v21 = v24;
      sub_23A59E1E8();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      sub_23A59E9E0();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      sub_23A59E9E0();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      sub_23A59E9E0();
      v33 = *(_OWORD *)(v20 + *(int *)(v21 + 48));
      sub_23A59F04C();
      sub_23A59E9E0();
      v33 = *(_OWORD *)(v20 + *(int *)(v21 + 52));
      sub_23A59F04C();
      v22 = v34;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v27);
      return v22;
    }
  }
  __break(1u);
  return result;
}

Swift::Bool __swiftcall DTSyncedAlarm.mergeFromServerRecord(_:)(CKRecord a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  os_log_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  os_log_t v81;
  uint64_t v82[2];
  uint64_t v83;

  v2 = v1;
  v79 = sub_23A59E1F4();
  v4 = *(_QWORD *)(v79 - 8);
  v5 = MEMORY[0x24BDAC7A8](v79);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v78 = (char *)&v72 - v8;
  v9 = (int *)type metadata accessor for DTSyncedAlarm(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v72 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v80 = (uint64_t)&v72 - v16;
  v17 = *(_QWORD *)(v2 + 8);
  v81 = *(os_log_t *)v2;
  swift_bridgeObjectRetain();
  v18 = -[objc_class encryptedValues](a1.super.isa, sel_encryptedValues);
  if (qword_256994D20 != -1)
    swift_once();
  v19 = (void *)sub_23A59E998();
  v20 = objc_msgSend(v18, sel_objectForKeyedSubscript_, v19);
  swift_unknownObjectRelease();

  if (v20
    && (v83 = (uint64_t)v20,
        __swift_instantiateConcreteTypeFromMangledName(&qword_256993158),
        (swift_dynamicCast() & 1) != 0))
  {
    v22 = v82[0];
    v21 = v82[1];
    sub_23A59DFE4();
    swift_allocObject();
    sub_23A59DFD8();
    sub_23A52EAEC(&qword_2569930C0, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
    v76 = v22;
    v77 = v21;
    sub_23A59DFCC();
    v73 = v12;
    swift_release();
    v28 = (uint64_t)v15;
    v29 = v80;
    sub_23A53BA34(v28, v80, type metadata accessor for DTSyncedAlarm);
    v30 = v2 + v9[9];
    v32 = v78;
    v31 = v79;
    v75 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v75(v78, v30, v79);
    v33 = v29 + v9[9];
    sub_23A52EAEC(&qword_256993160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v74 = v33;
    v34 = sub_23A59E980();
    if ((v34 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v32, v31);
      sub_23A53AAA8(v76, v77);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v2 + 16) = *(_BYTE *)(v29 + 16);
      *(_OWORD *)(v2 + 24) = *(_OWORD *)(v29 + 24);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v30, v74, v31);
      v35 = v9[10];
      v36 = *(_QWORD *)(v29 + v35);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v2 + v35) = v36;
      v37 = v9[11];
      v39 = *(_QWORD *)(v29 + v37);
      v38 = *(_QWORD *)(v29 + v37 + 8);
      v40 = *(_QWORD *)(v29 + v37 + 16);
      v41 = *(_BYTE *)(v29 + v37 + 24);
      v42 = v2 + v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)v42 = v39;
      *(_QWORD *)(v42 + 8) = v38;
      *(_QWORD *)(v42 + 16) = v40;
      *(_BYTE *)(v42 + 24) = v41;
      v43 = v9[12];
      v45 = *(_QWORD *)(v29 + v43);
      v44 = *(_QWORD *)(v29 + v43 + 8);
      v46 = (_QWORD *)(v2 + v43);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *v46 = v45;
      v46[1] = v44;
      v47 = (uint64_t *)(v29 + v9[13]);
      v49 = *v47;
      v48 = v47[1];
      swift_bridgeObjectRetain();
      sub_23A53AC04(v29, type metadata accessor for DTSyncedAlarm);
      v50 = (_QWORD *)(v2 + v9[13]);
      swift_bridgeObjectRelease();
      *v50 = v49;
      v50[1] = v48;
      return 1;
    }
    if (qword_256994CD0 != -1)
      swift_once();
    v52 = sub_23A59E6A4();
    __swift_project_value_buffer(v52, (uint64_t)qword_256994CD8);
    v54 = v78;
    v53 = v79;
    v75(v7, (uint64_t)v78, v79);
    v55 = v80;
    v56 = (uint64_t)v73;
    sub_23A53ABC0(v80, (uint64_t)v73, type metadata accessor for DTSyncedAlarm);
    swift_bridgeObjectRetain();
    v57 = sub_23A59E68C();
    v58 = sub_23A59EB9C();
    v59 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      v60 = swift_slowAlloc();
      v75 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      v82[0] = (uint64_t)v75;
      *(_DWORD *)v60 = 136315650;
      LODWORD(v74) = v59;
      swift_bridgeObjectRetain();
      v83 = sub_23A538FBC((uint64_t)v81, v17, v82);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v60 + 12) = 2080;
      sub_23A52EAEC(&qword_256993168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v81 = v57;
      v61 = v79;
      v62 = sub_23A59F034();
      v83 = sub_23A538FBC(v62, v63, v82);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      v64 = *(void (**)(char *, uint64_t))(v4 + 8);
      v64(v7, v61);
      *(_WORD *)(v60 + 22) = 2080;
      v65 = v61;
      v66 = sub_23A59F034();
      v83 = sub_23A538FBC(v66, v67, v82);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04(v56, type metadata accessor for DTSyncedAlarm);
      v68 = v81;
      _os_log_impl(&dword_23A52C000, v81, (os_log_type_t)v74, "Ignoring older alarm: id=%s, localDate=%s, serverDate=%s", (uint8_t *)v60, 0x20u);
      v69 = v75;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v69, -1, -1);
      MEMORY[0x23B852178](v60, -1, -1);
      sub_23A53AAA8(v76, v77);

      v64(v78, v65);
      v70 = v80;
    }
    else
    {
      sub_23A53AAA8(v76, v77);

      sub_23A53AC04(v56, type metadata accessor for DTSyncedAlarm);
      v71 = *(void (**)(char *, uint64_t))(v4 + 8);
      v71(v7, v53);
      swift_bridgeObjectRelease_n();
      v71(v54, v53);
      v70 = v55;
    }
    sub_23A53AC04(v70, type metadata accessor for DTSyncedAlarm);
  }
  else
  {
    if (qword_256994CD0 != -1)
      swift_once();
    v23 = sub_23A59E6A4();
    __swift_project_value_buffer(v23, (uint64_t)qword_256994CD8);
    swift_bridgeObjectRetain();
    v24 = sub_23A59E68C();
    v25 = sub_23A59EBB4();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v82[0] = v27;
      *(_DWORD *)v26 = 136315138;
      swift_bridgeObjectRetain();
      v83 = sub_23A538FBC((uint64_t)v81, v17, v82);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A52C000, v24, v25, "No server alarm data: id=%s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v27, -1, -1);
      MEMORY[0x23B852178](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  return 0;
}

uint64_t sub_23A53308C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23A5330C8 + 4 * byte_23A59F8E0[a1]))(0xD000000000000013, 0x800000023A5A1790);
}

uint64_t sub_23A5330C8()
{
  return 25705;
}

uint64_t sub_23A5330D4()
{
  return 0x64656C62616E65;
}

uint64_t sub_23A5330EC()
{
  return 1920298856;
}

uint64_t sub_23A5330FC()
{
  return 0x6574756E696DLL;
}

unint64_t sub_23A533110()
{
  return 0xD000000000000010;
}

uint64_t sub_23A533170()
{
  return 0x656C746974;
}

uint64_t sub_23A533184(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23A5331C0 + 4 * byte_23A59F8EA[a1]))(0xD000000000000013, 0x800000023A5A1790);
}

uint64_t sub_23A5331C0()
{
  return 25705;
}

uint64_t sub_23A5331CC()
{
  return 0x64656C62616E65;
}

uint64_t sub_23A5331E4()
{
  return 1920298856;
}

uint64_t sub_23A5331F4()
{
  return 0x6574756E696DLL;
}

unint64_t sub_23A533208()
{
  return 0xD000000000000010;
}

uint64_t sub_23A533268()
{
  return 0x656C746974;
}

uint64_t sub_23A53327C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_23A53308C(*a1);
  v5 = v4;
  if (v3 == sub_23A53308C(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23A59F064();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23A533304(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aUnknown_1[8 * a1] == *(_QWORD *)&aUnknown_1[8 * a2] && qword_23A5A0880[a1] == qword_23A5A0880[a2])
    v3 = 1;
  else
    v3 = sub_23A59F064();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_23A533388(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_23A5333D4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23A533464 + 4 * byte_23A59F8FB[a2]))(25705);
}

uint64_t sub_23A533464(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 25705 && v1 == 0xE200000000000000)
    v2 = 1;
  else
    v2 = sub_23A59F064();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23A533538(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aMonday_1[8 * a1] == *(_QWORD *)&aMonday_1[8 * a2] && qword_23A5A08D8[a1] == qword_23A5A08D8[a2])
    v3 = 1;
  else
    v3 = sub_23A59F064();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_23A5335BC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23A59F0E8();
  sub_23A53308C(v1);
  sub_23A59E9C8();
  swift_bridgeObjectRelease();
  return sub_23A59F100();
}

uint64_t sub_23A53361C()
{
  sub_23A59F0E8();
  sub_23A59E9C8();
  swift_bridgeObjectRelease();
  return sub_23A59F100();
}

uint64_t sub_23A533684()
{
  unsigned __int8 *v0;

  sub_23A53308C(*v0);
  sub_23A59E9C8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A5336C4()
{
  sub_23A59E9C8();
  return swift_bridgeObjectRelease();
}

void sub_23A533704(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23A53374C()
{
  sub_23A59E9C8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A5337D0()
{
  sub_23A59E9C8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A533810()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23A59F0E8();
  sub_23A53308C(v1);
  sub_23A59E9C8();
  swift_bridgeObjectRelease();
  return sub_23A59F100();
}

uint64_t sub_23A53386C()
{
  sub_23A59F0E8();
  sub_23A59E9C8();
  swift_bridgeObjectRelease();
  return sub_23A59F100();
}

void sub_23A5338D0(uint64_t a1, char a2)
{
  sub_23A59F0E8();
  __asm { BR              X10 }
}

uint64_t sub_23A533924()
{
  sub_23A59E9C8();
  swift_bridgeObjectRelease();
  return sub_23A59F100();
}

uint64_t sub_23A5339BC()
{
  sub_23A59F0E8();
  sub_23A59E9C8();
  swift_bridgeObjectRelease();
  return sub_23A59F100();
}

uint64_t sub_23A533A20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A53B5D4();
  *a1 = result;
  return result;
}

uint64_t sub_23A533A4C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23A53308C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23A533A74()
{
  unsigned __int8 *v0;

  return sub_23A533184(*v0);
}

uint64_t sub_23A533A7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A53B5D4();
  *a1 = result;
  return result;
}

void sub_23A533AA0(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_23A533AAC()
{
  sub_23A53B770();
  return sub_23A59F13C();
}

uint64_t sub_23A533AD4()
{
  sub_23A53B770();
  return sub_23A59F148();
}

DistributedTimersDaemon::DTSyncedAlarm::Day_optional __swiftcall DTSyncedAlarm.Day.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  DistributedTimersDaemon::DTSyncedAlarm::Day_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23A59EF14();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DTSyncedAlarm.Day.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aMonday_1[8 * *v0];
}

uint64_t sub_23A533B78(char *a1, char *a2)
{
  return sub_23A533538(*a1, *a2);
}

uint64_t sub_23A533B84()
{
  return sub_23A53386C();
}

uint64_t sub_23A533B90()
{
  return sub_23A5337D0();
}

uint64_t sub_23A533B98()
{
  return sub_23A53386C();
}

DistributedTimersDaemon::DTSyncedAlarm::Day_optional sub_23A533BA0(Swift::String *a1)
{
  return DTSyncedAlarm.Day.init(rawValue:)(*a1);
}

uint64_t sub_23A533BAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DTSyncedAlarm.Day.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23A533BD0()
{
  sub_23A53E810();
  return sub_23A59EA10();
}

uint64_t sub_23A533C2C()
{
  sub_23A53E810();
  return sub_23A59EA04();
}

uint64_t DTSyncedAlarm.Sound.MediaInfo.mediaIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DTSyncedAlarm.Sound.MediaInfo.volume.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_23A533CB4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656D756C6F76;
  else
    return 0x656449616964656DLL;
}

uint64_t sub_23A533CF4()
{
  sub_23A59F0E8();
  sub_23A59F0F4();
  return sub_23A59F100();
}

uint64_t sub_23A533D38()
{
  sub_23A59F0E8();
  sub_23A59F0F4();
  return sub_23A59F100();
}

uint64_t sub_23A533D78()
{
  char *v0;

  return sub_23A533CB4(*v0);
}

uint64_t sub_23A533D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A53BA78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A533DA4()
{
  sub_23A53B61C();
  return sub_23A59F13C();
}

uint64_t sub_23A533DCC()
{
  sub_23A53B61C();
  return sub_23A59F148();
}

uint64_t DTSyncedAlarm.Sound.MediaInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993170);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v10 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A53B61C();
  sub_23A59F118();
  v12 = 0;
  sub_23A59EFEC();
  if (!v2)
  {
    v11 = 1;
    sub_23A59EFD4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t DTSyncedAlarm.Sound.MediaInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  uint64_t v17;
  char v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993178);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A53B61C();
  sub_23A59F10C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v19 = 0;
  v9 = sub_23A59EF68();
  v11 = v10;
  v18 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23A59EF50();
  v13 = v8;
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v12;
  *(_BYTE *)(a2 + 24) = v15 & 1;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A5340C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DTSyncedAlarm.Sound.MediaInfo.init(from:)(a1, a2);
}

uint64_t sub_23A5340D4(_QWORD *a1)
{
  return DTSyncedAlarm.Sound.MediaInfo.encode(to:)(a1);
}

uint64_t sub_23A5340F0()
{
  return 1;
}

uint64_t sub_23A5340FC()
{
  return sub_23A59F0F4();
}

uint64_t sub_23A534128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result;

  result = sub_23A53BB70(a1, a2);
  *a3 = result != 0;
  return result;
}

void sub_23A534154(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23A534160()
{
  sub_23A53B660();
  return sub_23A59F13C();
}

uint64_t sub_23A534188()
{
  sub_23A53B660();
  return sub_23A59F148();
}

uint64_t sub_23A5341B0()
{
  sub_23A59F0E8();
  sub_23A59F0F4();
  return sub_23A59F100();
}

uint64_t sub_23A5341F0()
{
  sub_23A59F0E8();
  sub_23A59F0F4();
  return sub_23A59F100();
}

uint64_t sub_23A534230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result;

  result = sub_23A53BC00(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_23A53425C()
{
  sub_23A53B6A4();
  return sub_23A59F13C();
}

uint64_t sub_23A534284()
{
  sub_23A53B6A4();
  return sub_23A59F148();
}

uint64_t DTSyncedAlarm.Sound.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[12];
  int v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993180);
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993188);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *v1;
  v9 = *((_QWORD *)v1 + 2);
  v12 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A53B660();
  sub_23A59F118();
  sub_23A53B6A4();
  sub_23A59EFB0();
  v16 = v13;
  v17 = v9;
  v18 = v12;
  sub_23A53B6E8();
  sub_23A59F01C();
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v5, v3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v8, v6);
}

uint64_t DTSyncedAlarm.Sound.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v25 = a2;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993198);
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569931A0);
  v6 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A53B660();
  v9 = v31;
  sub_23A59F10C();
  if (v9)
    goto LABEL_5;
  v23 = v3;
  v24 = a1;
  v11 = v26;
  v10 = v27;
  v31 = v6;
  if (*(_QWORD *)(sub_23A59EFA4() + 16) != 1)
  {
    v13 = v10;
    v14 = sub_23A59EE30();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569931A8);
    *v16 = &type metadata for DTSyncedAlarm.Sound;
    sub_23A59EF2C();
    sub_23A59EE24();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v13);
    a1 = v24;
LABEL_5:
    v20 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v20);
  }
  sub_23A53B6A4();
  sub_23A59EF20();
  v12 = v31;
  sub_23A53B72C();
  sub_23A59EF98();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v10);
  v18 = v29;
  v19 = v30;
  v20 = (uint64_t)v24;
  v21 = v25;
  *v25 = v28;
  *((_QWORD *)v21 + 2) = v18;
  *((_BYTE *)v21 + 24) = v19;
  return __swift_destroy_boxed_opaque_existential_1Tm(v20);
}

uint64_t sub_23A53471C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return DTSyncedAlarm.Sound.init(from:)(a1, a2);
}

uint64_t sub_23A534730(_QWORD *a1)
{
  return DTSyncedAlarm.Sound.encode(to:)(a1);
}

uint64_t sub_23A53474C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) == *(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v5 = *(_QWORD *)(result + 56);
    v25 = result + 56;
    v6 = 1 << *(_BYTE *)(result + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & v5;
    v26 = (unint64_t)(v6 + 63) >> 6;
    v27 = result;
    v9 = a2 + 56;
    if ((v7 & v5) == 0)
      goto LABEL_8;
LABEL_7:
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v10 | (v4 << 6); ; i = __clz(__rbit64(v13)) + (v4 << 6))
    {
      v15 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + i);
      v16 = sub_23A53386C();
      v17 = -1 << *(_BYTE *)(a2 + 32);
      v18 = v16 & ~v17;
      if (((*(_QWORD *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        return 0;
      v19 = ~v17;
      v20 = v15;
      v21 = *(_QWORD *)&aMonday_1[v20 * 8];
      v22 = qword_23A5A08D8[v20];
      while (*(_QWORD *)&aMonday_1[8 * *(char *)(*(_QWORD *)(a2 + 48) + v18)] != v21
           || qword_23A5A08D8[*(char *)(*(_QWORD *)(a2 + 48) + v18)] != v22)
      {
        v24 = sub_23A59F064();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v24 & 1) != 0)
          goto LABEL_34;
        v18 = (v18 + 1) & v19;
        if (((*(_QWORD *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          return 0;
      }
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
LABEL_34:
      v3 = v27;
      if (v8)
        goto LABEL_7;
LABEL_8:
      v12 = v4 + 1;
      if (__OFADD__(v4, 1))
        break;
      if (v12 >= v26)
        return 1;
      v13 = *(_QWORD *)(v25 + 8 * v12);
      ++v4;
      if (!v13)
      {
        v4 = v12 + 1;
        if (v12 + 1 >= v26)
          return 1;
        v13 = *(_QWORD *)(v25 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 2;
          if (v12 + 2 >= v26)
            return 1;
          v13 = *(_QWORD *)(v25 + 8 * v4);
          if (!v13)
          {
            v4 = v12 + 3;
            if (v12 + 3 >= v26)
              return 1;
            v13 = *(_QWORD *)(v25 + 8 * v4);
            if (!v13)
            {
              v14 = v12 + 4;
              if (v14 >= v26)
                return 1;
              v13 = *(_QWORD *)(v25 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  v4 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_39;
                  if (v4 >= v26)
                    return 1;
                  v13 = *(_QWORD *)(v25 + 8 * v4);
                  ++v14;
                  if (v13)
                    goto LABEL_23;
                }
              }
              v4 = v14;
            }
          }
        }
      }
LABEL_23:
      v8 = (v13 - 1) & v13;
    }
    __break(1u);
LABEL_39:
    __break(1u);
    return result;
  }
  return 0;
}

uint64_t DTSyncedAlarm.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  char v12;
  __int128 v14;
  uint64_t v15;
  char v16;
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569931B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A53B770();
  sub_23A59F118();
  LOBYTE(v14) = 0;
  sub_23A59EFEC();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_23A59EFF8();
    LOBYTE(v14) = 2;
    sub_23A59F010();
    LOBYTE(v14) = 3;
    sub_23A59F010();
    v14 = *(_OWORD *)(v3 + 40);
    v17 = 4;
    sub_23A53B7B4();
    sub_23A59EFE0();
    v9 = type metadata accessor for DTSyncedAlarm(0);
    LOBYTE(v14) = 5;
    sub_23A59E1F4();
    sub_23A52EAEC(&qword_2569931D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23A59F01C();
    *(_QWORD *)&v14 = *(_QWORD *)(v3 + *(int *)(v9 + 40));
    v17 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569931D8);
    sub_23A53B8C4(&qword_2569931E0, (uint64_t (*)(void))sub_23A53B7F8, MEMORY[0x24BEE1700]);
    sub_23A59F01C();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 44));
    v11 = *((_QWORD *)v10 + 2);
    v12 = *((_BYTE *)v10 + 24);
    v14 = *v10;
    v15 = v11;
    v16 = v12;
    v17 = 7;
    sub_23A53B83C();
    sub_23A59EFE0();
    LOBYTE(v14) = 8;
    sub_23A59EFBC();
    LOBYTE(v14) = 9;
    sub_23A59EFBC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DTSyncedAlarm.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  __int128 v59;
  uint64_t *v60;
  __int128 v61;
  uint64_t v62;
  char v63;
  char v64;

  v48 = a2;
  v53 = sub_23A59E1F4();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v52 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569931F8);
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v58 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A59E260();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for DTSyncedAlarm(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A59E254();
  v13 = sub_23A59E20C();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)v12 = v13;
  *((_QWORD *)v12 + 1) = v15;
  v54 = v15;
  v12[16] = 1;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = 0;
  *((_QWORD *)v12 + 5) = 0;
  *((_QWORD *)v12 + 6) = 0xF000000000000000;
  v50 = &v12[v10[9]];
  _s23DistributedTimersDaemon13DTSyncedAlarmV2id4hour6minute16modificationDateACSS_S2i10Foundation0J0VtcfcfA2__0();
  v49 = v10[10];
  *(_QWORD *)&v12[v49] = MEMORY[0x24BEE4B08];
  v16 = &v12[v10[11]];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[24] = 0;
  *((_QWORD *)v16 + 2) = 0;
  v17 = &v12[v10[12]];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v18 = v10[13];
  v60 = (uint64_t *)v12;
  v19 = &v12[v18];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v20 = a1[3];
  v57 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_23A53B770();
  v21 = v59;
  v22 = v58;
  sub_23A59F10C();
  if (v21)
  {
    v23 = v60;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
    v44 = (uint64_t)v23;
  }
  else
  {
    *(_QWORD *)&v59 = v12 + 24;
    v47 = v16;
    v46 = v17;
    v45 = v19;
    LOBYTE(v61) = 0;
    v25 = sub_23A59EF68();
    v27 = v26;
    swift_bridgeObjectRelease();
    v28 = v60;
    *v60 = v25;
    v28[1] = v27;
    LOBYTE(v61) = 1;
    *((_BYTE *)v28 + 16) = sub_23A59EF74() & 1;
    LOBYTE(v61) = 2;
    *(_QWORD *)v59 = sub_23A59EF8C();
    LOBYTE(v61) = 3;
    v28[4] = sub_23A59EF8C();
    v64 = 4;
    sub_23A53B880();
    sub_23A59EF5C();
    *(_OWORD *)(v28 + 5) = v61;
    LOBYTE(v61) = 5;
    sub_23A52EAEC(&qword_256993208, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v30 = v52;
    v29 = v53;
    sub_23A59EF98();
    (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v50, v30, v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569931D8);
    v64 = 6;
    sub_23A53B8C4(&qword_256993210, (uint64_t (*)(void))sub_23A53B92C, MEMORY[0x24BEE1720]);
    sub_23A59EF98();
    v31 = v61;
    v32 = v49;
    swift_bridgeObjectRelease();
    *(uint64_t *)((char *)v28 + v32) = v31;
    v64 = 7;
    sub_23A53B970();
    sub_23A59EF5C();
    v59 = v61;
    v33 = v62;
    LOBYTE(v30) = v63;
    v34 = v47;
    swift_bridgeObjectRelease();
    *(_OWORD *)v34 = v59;
    *((_QWORD *)v34 + 2) = v33;
    v34[24] = (char)v30;
    LOBYTE(v61) = 8;
    v35 = sub_23A59EF38();
    v37 = v36;
    v38 = (uint64_t *)v46;
    swift_bridgeObjectRelease();
    *v38 = v35;
    v38[1] = v37;
    LOBYTE(v61) = 9;
    v39 = sub_23A59EF38();
    v41 = v40;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v56);
    v42 = (uint64_t *)v45;
    swift_bridgeObjectRelease();
    *v42 = v39;
    v42[1] = v41;
    v43 = v60;
    sub_23A53ABC0((uint64_t)v60, v48, type metadata accessor for DTSyncedAlarm);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
    v44 = (uint64_t)v43;
  }
  return sub_23A53AC04(v44, type metadata accessor for DTSyncedAlarm);
}

uint64_t sub_23A5352BC(uint64_t a1, uint64_t a2)
{
  return sub_23A5384F4(a1, a2, &qword_256994D20, &qword_256994D28);
}

uint64_t sub_23A5352DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_23A53ABAC(v1, *(_QWORD *)(v0 + 48));
  return v1;
}

uint64_t sub_23A53530C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23A53AA94(*(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*sub_23A535340())()
{
  return nullsub_1;
}

uint64_t (*sub_23A535358(id **a1))()
{
  id *v2;

  v2 = (id *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_23A52FDF4(v2);
  return sub_23A52FDF0;
}

uint64_t sub_23A53539C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_23A59E1F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23A5353DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 36);
  v5 = sub_23A59E1F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_23A53541C())()
{
  return nullsub_1;
}

uint64_t sub_23A53543C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DTSyncedAlarm.init(from:)(a1, a2);
}

uint64_t sub_23A535450(_QWORD *a1)
{
  return DTSyncedAlarm.encode(to:)(a1);
}

uint64_t sub_23A53546C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

_QWORD *MTMutableAlarm.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  void *v37;
  id v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void *v61;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _OWORD v74[2];
  __int128 v75;
  uint64_t v76;
  _BYTE v77[80];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993228);
  MEMORY[0x24BDAC7A8](v2);
  v71 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993230);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)sub_23A59E044();
  v8 = *(v7 - 1);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23A59E260();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = a1;
  sub_23A59E200();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_23A53B9B4((uint64_t)v13, &qword_256993720);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    sub_23A53AC04(v72, type metadata accessor for DTSyncedAlarm);
  }
  else
  {
    v64 = v6;
    v63 = v10;
    v68 = v8;
    v69 = v7;
    v66 = v15;
    v18 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v67 = v14;
    v18(v17, v13, v14);
    v19 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v65 = v17;
    v20 = (void *)sub_23A59E224();
    v21 = objc_msgSend(v19, sel_initWithIdentifier_, v20);

    v22 = v72;
    v23 = *(unsigned __int8 *)(v72 + 16);
    v7 = v21;
    objc_msgSend(v7, sel_setEnabled_, v23);
    objc_msgSend(v7, sel_setHour_, *(_QWORD *)(v22 + 24));
    objc_msgSend(v7, sel_setMinute_, *(_QWORD *)(v22 + 32));
    v70 = type metadata accessor for DTSyncedAlarm(0);
    v24 = *(_QWORD *)(v22 + *(int *)(v70 + 40));
    if (*(_QWORD *)(v24 + 16))
    {
      sub_23A59F0E8();
      sub_23A59E9C8();
      v25 = sub_23A59F100() & ~(-1 << *(_BYTE *)(v24 + 32));
      v26 = v24 + 56;
      if (((*(_QWORD *)(v24 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) != 0)
        __asm { BR              X9 }
      if (*(_QWORD *)(v24 + 16))
      {
        sub_23A59F0E8();
        sub_23A59E9C8();
        v27 = sub_23A59F100() & ~(-1 << *(_BYTE *)(v24 + 32));
        if (((*(_QWORD *)(v26 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
          __asm { BR              X9 }
        if (*(_QWORD *)(v24 + 16))
        {
          sub_23A59F0E8();
          sub_23A59E9C8();
          v28 = sub_23A59F100() & ~(-1 << *(_BYTE *)(v24 + 32));
          if (((*(_QWORD *)(v26 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) != 0)
            __asm { BR              X9 }
          if (*(_QWORD *)(v24 + 16))
          {
            sub_23A59F0E8();
            sub_23A59E9C8();
            v29 = sub_23A59F100() & ~(-1 << *(_BYTE *)(v24 + 32));
            if (((*(_QWORD *)(v26 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
              __asm { BR              X9 }
            if (*(_QWORD *)(v24 + 16))
            {
              sub_23A59F0E8();
              sub_23A59E9C8();
              v30 = sub_23A59F100() & ~(-1 << *(_BYTE *)(v24 + 32));
              if (((*(_QWORD *)(v26 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0)
                __asm { BR              X9 }
              if (*(_QWORD *)(v24 + 16))
              {
                sub_23A59F0E8();
                sub_23A59E9C8();
                v31 = sub_23A59F100() & ~(-1 << *(_BYTE *)(v24 + 32));
                if (((*(_QWORD *)(v26 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) != 0)
                  __asm { BR              X9 }
                if (*(_QWORD *)(v24 + 16))
                {
                  sub_23A59F0E8();
                  sub_23A59E9C8();
                  v32 = sub_23A59F100() & ~(-1 << *(_BYTE *)(v24 + 32));
                  if (((*(_QWORD *)(v26 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
                    __asm { BR              X9 }
                }
              }
            }
          }
        }
      }
    }
    v33 = v70;
    v34 = v22 + *(int *)(v70 + 44);
    if (*(_QWORD *)(v34 + 8))
    {
      v35 = *(_BYTE *)(v34 + 24);
      swift_bridgeObjectRetain();
      v36 = (void *)sub_23A59E998();
      if ((v35 & 1) != 0)
        v37 = 0;
      else
        v37 = (void *)sub_23A59EB0C();
      v38 = objc_msgSend((id)objc_opt_self(), sel_toneSoundWithIdentifier_vibrationIdentifer_volume_, v36, 0, v37);

      objc_msgSend(v7, sel_setSound_, v38);
      swift_bridgeObjectRelease();

    }
    v39 = v69;
    v40 = v68;
    v41 = (uint64_t)v71;
    if (*(_QWORD *)(v22 + *(int *)(v33 + 48) + 8))
    {
      sub_23A59ECB0();
      v42 = (uint64_t)v64;
      sub_23A59EC8C();
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v40 + 48))(v42, 1, v39) == 1)
      {
        sub_23A53B9B4(v42, (uint64_t *)&unk_256993230);
      }
      else
      {
        v43 = v63;
        (*(void (**)(char *, uint64_t, _QWORD *))(v40 + 32))(v63, v42, v39);
        sub_23A59E038();
        v44 = sub_23A59E164();
        v45 = *(_QWORD *)(v44 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v41, 1, v44) == 1)
        {
          sub_23A53B9B4(v41, &qword_256993228);
          (*(void (**)(char *, _QWORD *))(v40 + 8))(v43, v39);
        }
        else
        {
          v46 = sub_23A59E110();
          v48 = v47;
          (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v41, v44);
          v49 = objc_msgSend(v7, sel_siriContext);
          if (v49)
          {
            v50 = v49;
            v51 = sub_23A59E950();

          }
          else
          {
            v51 = MEMORY[0x24BEE4B00];
          }
          v52 = v63;
          *(_QWORD *)&v75 = sub_23A59EC98();
          *((_QWORD *)&v75 + 1) = v53;
          v54 = MEMORY[0x24BEE0D00];
          sub_23A59EDC4();
          v76 = v54;
          *(_QWORD *)&v75 = v46;
          *((_QWORD *)&v75 + 1) = v48;
          sub_23A53B9F0(&v75, v74);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v73 = v51;
          sub_23A53A3AC(v74, (uint64_t)v77, isUniquelyReferenced_nonNull_native);
          swift_bridgeObjectRelease();
          sub_23A53BA00((uint64_t)v77);
          v56 = (void *)sub_23A59E944();
          swift_bridgeObjectRelease();
          objc_msgSend(v7, sel_setSiriContext_, v56);

          (*(void (**)(char *, _QWORD *))(v68 + 8))(v52, v69);
        }
        v33 = v70;
      }
    }
    v57 = *(_QWORD *)(v22 + *(int *)(v33 + 52) + 8);
    v58 = v67;
    v59 = v66;
    v60 = v65;
    if (v57)
    {
      swift_bridgeObjectRetain();
      v61 = (void *)sub_23A59E998();
      swift_bridgeObjectRelease();
    }
    else
    {
      v61 = 0;
    }
    objc_msgSend(v7, sel_setTitle_, v61);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v58);
    sub_23A53AC04(v22, type metadata accessor for DTSyncedAlarm);
  }
  return v7;
}

void sub_23A536608()
{
  qword_256994D40 = 0x72656D6974;
  *(_QWORD *)algn_256994D48 = 0xE500000000000000;
}

uint64_t *sub_23A536628()
{
  if (qword_256994D38 != -1)
    swift_once();
  return &qword_256994D40;
}

uint64_t static DTSyncedTimer.ckRecordType.getter()
{
  return sub_23A5366C8(&qword_256994D38, &qword_256994D40);
}

void sub_23A536688()
{
  qword_256994D58 = 0x72656D6974;
  unk_256994D60 = 0xE500000000000000;
}

uint64_t static DTSyncedTimer.ckValueKey.getter()
{
  return sub_23A5366C8(&qword_256994D50, &qword_256994D58);
}

uint64_t sub_23A5366C8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV10ckRecordIDSo08CKRecordH0Cvg_0()
{
  uint64_t v0;

  sub_23A53AB74(0, &qword_2569930E0);
  sub_23A53AB74(0, &qword_2569930E8);
  v0 = qword_256994CF0;
  swift_bridgeObjectRetain();
  if (v0 != -1)
    swift_once();
  sub_23A59E9A4();
  swift_bridgeObjectRetain();
  sub_23A59EBCC();
  return sub_23A59EB84();
}

uint64_t (*DTSyncedTimer.id.modify())()
{
  return nullsub_1;
}

double DTSyncedTimer.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void DTSyncedTimer.duration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*DTSyncedTimer.duration.modify())()
{
  return nullsub_1;
}

uint64_t DTSyncedTimer.lastKnownRecordData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_23A53ABAC(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t DTSyncedTimer.lastKnownRecordData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23A53AA94(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*DTSyncedTimer.lastKnownRecordData.modify())()
{
  return nullsub_1;
}

uint64_t DTSyncedTimer.modificationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DTSyncedTimer(0) + 28);
  v4 = sub_23A59E1F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DTSyncedTimer.modificationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DTSyncedTimer(0) + 28);
  v4 = sub_23A59E1F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DTSyncedTimer.modificationDate.modify())()
{
  type metadata accessor for DTSyncedTimer(0);
  return nullsub_1;
}

uint64_t DTSyncedTimer.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DTSyncedTimer(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t DTSyncedTimer.state.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for DTSyncedTimer(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*DTSyncedTimer.state.modify())()
{
  type metadata accessor for DTSyncedTimer(0);
  return nullsub_1;
}

uint64_t DTSyncedTimer.targetIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DTSyncedTimer(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DTSyncedTimer.targetIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for DTSyncedTimer(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DTSyncedTimer.targetIdentifier.modify())()
{
  type metadata accessor for DTSyncedTimer(0);
  return nullsub_1;
}

uint64_t DTSyncedTimer.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DTSyncedTimer(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DTSyncedTimer.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for DTSyncedTimer(0) + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DTSyncedTimer.title.modify())()
{
  type metadata accessor for DTSyncedTimer(0);
  return nullsub_1;
}

double default argument 1 of DTSyncedTimer.init(id:duration:modificationDate:)()
{
  return 0.0;
}

uint64_t DTSyncedTimer.init(id:duration:modificationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v20;

  v10 = sub_23A59E260();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A59E254();
  sub_23A59E20C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(_OWORD *)(a4 + 24) = xmmword_23A59F8C0;
  v14 = (int *)type metadata accessor for DTSyncedTimer(0);
  v15 = a4 + v14[7];
  _s23DistributedTimersDaemon13DTSyncedAlarmV2id4hour6minute16modificationDateACSS_S2i10Foundation0J0VtcfcfA2__0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a4 + v14[8]) = 0;
  v16 = (_QWORD *)(a4 + v14[9]);
  *v16 = 0;
  v16[1] = 0;
  v17 = (_QWORD *)(a4 + v14[10]);
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(double *)(a4 + 16) = a5;
  v18 = sub_23A59E1F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v15, a3, v18);
}

uint64_t DTSyncedTimer.init(mtTimer:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;

  v4 = sub_23A59E1F4();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A59E260();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A59E254();
  sub_23A59E20C();
  v33[1] = v11;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_OWORD *)(a2 + 24) = xmmword_23A59F8C0;
  v12 = (int *)type metadata accessor for DTSyncedTimer(0);
  v13 = a2 + v12[7];
  _s23DistributedTimersDaemon13DTSyncedAlarmV2id4hour6minute16modificationDateACSS_S2i10Foundation0J0VtcfcfA2__0();
  v14 = v12[8];
  *(_BYTE *)(a2 + v14) = 0;
  v15 = (uint64_t *)(a2 + v12[9]);
  *v15 = 0;
  v15[1] = 0;
  v16 = (uint64_t *)(a2 + v12[10]);
  *v16 = 0;
  v16[1] = 0;
  v17 = objc_msgSend(a1, sel_timerIDString);
  v18 = sub_23A59E9A4();
  v20 = v19;
  swift_bridgeObjectRelease();

  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v20;
  objc_msgSend(a1, sel_duration);
  *(_QWORD *)(a2 + 16) = v21;
  sub_23A59E1D0();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 40))(v13, v6, v35);
  v22 = objc_msgSend(a1, sel_state);
  if ((unint64_t)v22 >= 4)
    v23 = 0;
  else
    v23 = (char)v22;
  *(_BYTE *)(a2 + v14) = v23;
  v24 = sub_23A59ECD4();
  v26 = v25;
  swift_bridgeObjectRelease();
  *v15 = v24;
  v15[1] = v26;
  v27 = objc_msgSend(a1, sel_title);
  if (v27)
  {
    v28 = v27;
    v29 = sub_23A59E9A4();
    v31 = v30;

  }
  else
  {

    v29 = 0;
    v31 = 0;
  }
  result = swift_bridgeObjectRelease();
  *v16 = v29;
  v16[1] = v31;
  return result;
}

unint64_t DTSyncedTimer.State.init(mtTimerState:)@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  char v2;

  if (result >= 4)
    v2 = 0;
  else
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t DTSyncedTimer.description.getter()
{
  sub_23A59EE00();
  sub_23A59E9E0();
  swift_bridgeObjectRetain();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  sub_23A59EB18();
  sub_23A59E9E0();
  type metadata accessor for DTSyncedTimer(0);
  sub_23A59E1E8();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  sub_23A59EEB4();
  sub_23A59E9E0();
  sub_23A59F04C();
  sub_23A59E9E0();
  sub_23A59F04C();
  return 0;
}

Swift::Bool __swiftcall DTSyncedTimer.mergeFromServerRecord(_:)(CKRecord a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  os_log_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  os_log_t v72;
  uint64_t v73[2];
  uint64_t v74;

  v2 = v1;
  v71 = sub_23A59E1F4();
  v4 = *(_QWORD *)(v71 - 8);
  v5 = MEMORY[0x24BDAC7A8](v71);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v69 = (char *)&v63 - v8;
  v9 = (int *)type metadata accessor for DTSyncedTimer(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v63 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v70 = (uint64_t)&v63 - v16;
  v17 = *(_QWORD *)(v2 + 8);
  v72 = *(os_log_t *)v2;
  swift_bridgeObjectRetain();
  v18 = -[objc_class encryptedValues](a1.super.isa, sel_encryptedValues);
  if (qword_256994D50 != -1)
    swift_once();
  v19 = (void *)sub_23A59E998();
  v20 = objc_msgSend(v18, sel_objectForKeyedSubscript_, v19);
  swift_unknownObjectRelease();

  if (v20
    && (v74 = (uint64_t)v20,
        __swift_instantiateConcreteTypeFromMangledName(&qword_256993158),
        (swift_dynamicCast() & 1) != 0))
  {
    v21 = v73[0];
    v22 = v73[1];
    sub_23A59DFE4();
    swift_allocObject();
    sub_23A59DFD8();
    sub_23A52EAEC(&qword_2569930D0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
    v68 = v21;
    sub_23A59DFCC();
    v64 = v12;
    v67 = v22;
    swift_release();
    v28 = v70;
    sub_23A53BA34((uint64_t)v15, v70, type metadata accessor for DTSyncedTimer);
    v29 = v2 + v9[7];
    v30 = v69;
    v31 = v71;
    v66 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v66(v69, v29, v71);
    v32 = v28 + v9[7];
    sub_23A52EAEC(&qword_256993160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v65 = v32;
    v33 = sub_23A59E980();
    if ((v33 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v30, v31);
      sub_23A53AAA8(v68, v67);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v2 + 16) = *(_QWORD *)(v28 + 16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v29, v65, v31);
      *(_BYTE *)(v2 + v9[8]) = *(_BYTE *)(v28 + v9[8]);
      v34 = v9[9];
      v36 = *(_QWORD *)(v28 + v34);
      v35 = *(_QWORD *)(v28 + v34 + 8);
      v37 = (_QWORD *)(v2 + v34);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *v37 = v36;
      v37[1] = v35;
      v38 = (uint64_t *)(v28 + v9[10]);
      v40 = *v38;
      v39 = v38[1];
      swift_bridgeObjectRetain();
      sub_23A53AC04(v28, type metadata accessor for DTSyncedTimer);
      v41 = (_QWORD *)(v2 + v9[10]);
      swift_bridgeObjectRelease();
      *v41 = v40;
      v41[1] = v39;
      return 1;
    }
    if (qword_256994CD0 != -1)
      swift_once();
    v43 = sub_23A59E6A4();
    __swift_project_value_buffer(v43, (uint64_t)qword_256994CD8);
    v44 = v69;
    v45 = v71;
    v66(v7, (uint64_t)v69, v71);
    v46 = v70;
    v47 = (uint64_t)v64;
    sub_23A53ABC0(v70, (uint64_t)v64, type metadata accessor for DTSyncedTimer);
    swift_bridgeObjectRetain();
    v48 = sub_23A59E68C();
    v49 = sub_23A59EB9C();
    v50 = v49;
    if (os_log_type_enabled(v48, v49))
    {
      v51 = swift_slowAlloc();
      v66 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      v73[0] = (uint64_t)v66;
      *(_DWORD *)v51 = 136315650;
      LODWORD(v65) = v50;
      swift_bridgeObjectRetain();
      v74 = sub_23A538FBC((uint64_t)v72, v17, v73);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v51 + 12) = 2080;
      sub_23A52EAEC(&qword_256993168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v72 = v48;
      v52 = v71;
      v53 = sub_23A59F034();
      v74 = sub_23A538FBC(v53, v54, v73);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      v55 = *(void (**)(char *, uint64_t))(v4 + 8);
      v55(v7, v52);
      *(_WORD *)(v51 + 22) = 2080;
      v56 = v52;
      v57 = sub_23A59F034();
      v74 = sub_23A538FBC(v57, v58, v73);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04(v47, type metadata accessor for DTSyncedTimer);
      v59 = v72;
      _os_log_impl(&dword_23A52C000, v72, (os_log_type_t)v65, "Ignoring older timer: id=%s, localDate=%s, serverDate=%s", (uint8_t *)v51, 0x20u);
      v60 = v66;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v60, -1, -1);
      MEMORY[0x23B852178](v51, -1, -1);
      sub_23A53AAA8(v68, v67);

      v55(v69, v56);
      v61 = v70;
    }
    else
    {
      sub_23A53AAA8(v68, v67);

      sub_23A53AC04(v47, type metadata accessor for DTSyncedTimer);
      v62 = *(void (**)(char *, uint64_t))(v4 + 8);
      v62(v7, v45);
      swift_bridgeObjectRelease_n();
      v62(v44, v45);
      v61 = v46;
    }
    sub_23A53AC04(v61, type metadata accessor for DTSyncedTimer);
  }
  else
  {
    if (qword_256994CD0 != -1)
      swift_once();
    v23 = sub_23A59E6A4();
    __swift_project_value_buffer(v23, (uint64_t)qword_256994CD8);
    swift_bridgeObjectRetain();
    v24 = sub_23A59E68C();
    v25 = sub_23A59EBB4();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v73[0] = v27;
      *(_DWORD *)v26 = 136315138;
      swift_bridgeObjectRetain();
      v74 = sub_23A538FBC((uint64_t)v72, v17, v73);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A52C000, v24, v25, "No server timer data: id=%s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v27, -1, -1);
      MEMORY[0x23B852178](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  return 0;
}

uint64_t sub_23A537A44(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23A537A80 + 4 * byte_23A59F910[a1]))(0xD000000000000013, 0x800000023A5A1790);
}

uint64_t sub_23A537A80()
{
  return 25705;
}

uint64_t sub_23A537A8C()
{
  return 0x6E6F697461727564;
}

unint64_t sub_23A537AA4()
{
  return 0xD000000000000010;
}

uint64_t sub_23A537AE0()
{
  return 0x656C746974;
}

uint64_t sub_23A537AF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23A537B30 + 4 * byte_23A59F917[a1]))(0xD000000000000013, 0x800000023A5A1790);
}

uint64_t sub_23A537B30()
{
  return 25705;
}

uint64_t sub_23A537B3C()
{
  return 0x6E6F697461727564;
}

unint64_t sub_23A537B54()
{
  return 0xD000000000000010;
}

uint64_t sub_23A537B90()
{
  return 0x656C746974;
}

void sub_23A537BA4(char *a1)
{
  sub_23A533388(*a1);
}

void sub_23A537BB0()
{
  char *v0;

  sub_23A5338D0(0, *v0);
}

void sub_23A537BBC(uint64_t a1)
{
  char *v1;

  sub_23A533704(a1, *v1);
}

void sub_23A537BC4(uint64_t a1)
{
  char *v1;

  sub_23A5338D0(a1, *v1);
}

uint64_t sub_23A537BCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A53BC78();
  *a1 = result;
  return result;
}

uint64_t sub_23A537BF8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23A537A44(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23A537C20()
{
  unsigned __int8 *v0;

  return sub_23A537AF4(*v0);
}

uint64_t sub_23A537C28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A53BC78();
  *a1 = result;
  return result;
}

void sub_23A537C4C(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_23A537C58()
{
  sub_23A53BCC0();
  return sub_23A59F13C();
}

uint64_t sub_23A537C80()
{
  sub_23A53BCC0();
  return sub_23A59F148();
}

uint64_t DTSyncedTimer.State.mtTimerState.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

DistributedTimersDaemon::DTSyncedTimer::State_optional __swiftcall DTSyncedTimer.State.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  DistributedTimersDaemon::DTSyncedTimer::State_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23A59EF14();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DTSyncedTimer.State.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aUnknown_1[8 * *v0];
}

uint64_t sub_23A537D2C(char *a1, char *a2)
{
  return sub_23A533304(*a1, *a2);
}

uint64_t sub_23A537D38()
{
  return sub_23A53361C();
}

uint64_t sub_23A537D40()
{
  return sub_23A5336C4();
}

uint64_t sub_23A537D48()
{
  return sub_23A5339BC();
}

DistributedTimersDaemon::DTSyncedTimer::State_optional sub_23A537D50(Swift::String *a1)
{
  return DTSyncedTimer.State.init(rawValue:)(*a1);
}

uint64_t sub_23A537D5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DTSyncedTimer.State.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23A537D80()
{
  sub_23A53E7CC();
  return sub_23A59EA10();
}

uint64_t sub_23A537DDC()
{
  sub_23A53E7CC();
  return sub_23A59EA04();
}

uint64_t DTSyncedTimer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  __int128 v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993240);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A53BCC0();
  sub_23A59F118();
  LOBYTE(v13) = 0;
  sub_23A59EFEC();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_23A59F004();
    v13 = *(_OWORD *)(v3 + 24);
    v12 = 2;
    sub_23A53B7B4();
    sub_23A59EFE0();
    v9 = type metadata accessor for DTSyncedTimer(0);
    LOBYTE(v13) = 3;
    sub_23A59E1F4();
    sub_23A52EAEC(&qword_2569931D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23A59F01C();
    LOBYTE(v13) = *(_BYTE *)(v3 + *(int *)(v9 + 32));
    v12 = 4;
    sub_23A53BD04();
    sub_23A59F01C();
    LOBYTE(v13) = 5;
    sub_23A59EFBC();
    LOBYTE(v13) = 6;
    sub_23A59EFBC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DTSyncedTimer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  __int128 v53;
  char v54;

  v41 = a2;
  v3 = sub_23A59E1F4();
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993258);
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v52 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A59E260();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for DTSyncedTimer(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A59E254();
  v13 = sub_23A59E20C();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v12[2] = 0;
  *v12 = v13;
  v12[1] = v15;
  v45 = v15;
  v12[3] = 0;
  v12[4] = 0xF000000000000000;
  v42 = (char *)v12 + v10[7];
  _s23DistributedTimersDaemon13DTSyncedAlarmV2id4hour6minute16modificationDateACSS_S2i10Foundation0J0VtcfcfA2__0();
  v16 = v10[8];
  *((_BYTE *)v12 + v16) = 0;
  v17 = (uint64_t *)((char *)v12 + v10[9]);
  *v17 = 0;
  v17[1] = 0;
  v18 = v10[10];
  v49 = a1;
  v50 = v12;
  v19 = (uint64_t *)((char *)v12 + v18);
  *v19 = 0;
  v19[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A53BCC0();
  v20 = v51;
  sub_23A59F10C();
  if (v20)
  {
    v28 = (uint64_t)v50;
  }
  else
  {
    v21 = v12 + 2;
    v39 = v19;
    v40 = v17;
    v51 = v16;
    v22 = v47;
    v23 = v46;
    LOBYTE(v53) = 0;
    v25 = sub_23A59EF68();
    v27 = v26;
    swift_bridgeObjectRelease();
    v28 = (uint64_t)v50;
    *v50 = v25;
    *(_QWORD *)(v28 + 8) = v27;
    LOBYTE(v53) = 1;
    sub_23A59EF80();
    *v21 = v29;
    v54 = 2;
    sub_23A53B880();
    sub_23A59EF5C();
    *(_OWORD *)(v28 + 24) = v53;
    LOBYTE(v53) = 3;
    sub_23A52EAEC(&qword_256993208, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v30 = v44;
    sub_23A59EF98();
    (*(void (**)(char *, char *, uint64_t))(v43 + 40))(v42, v22, v30);
    v54 = 4;
    sub_23A53BD48();
    sub_23A59EF98();
    *(_BYTE *)(v28 + v51) = v53;
    LOBYTE(v53) = 5;
    v31 = sub_23A59EF38();
    v33 = v32;
    v34 = v40;
    swift_bridgeObjectRelease();
    *v34 = v31;
    v34[1] = v33;
    LOBYTE(v53) = 6;
    v35 = sub_23A59EF38();
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v52, v48);
    v38 = v39;
    swift_bridgeObjectRelease();
    *v38 = v35;
    v38[1] = v37;
    sub_23A53ABC0(v28, v41, type metadata accessor for DTSyncedTimer);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
  return sub_23A53AC04(v28, type metadata accessor for DTSyncedTimer);
}

uint64_t sub_23A5384D4(uint64_t a1, uint64_t a2)
{
  return sub_23A5384F4(a1, a2, &qword_256994D50, &qword_256994D58);
}

uint64_t sub_23A5384F4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v5;

  if (*a3 != -1)
    swift_once();
  v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_23A538548()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_23A53ABAC(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t sub_23A538578(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23A53AA94(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*sub_23A5385AC())()
{
  return nullsub_1;
}

uint64_t (*sub_23A5385C4(id **a1))()
{
  id *v2;

  v2 = (id *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_23A52FF48(v2);
  return sub_23A52FDF0;
}

void sub_23A538608(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_23A538634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_23A59E1F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23A538674(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_23A59E1F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_23A5386B4())()
{
  return nullsub_1;
}

uint64_t sub_23A5386D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DTSyncedTimer.init(from:)(a1, a2);
}

uint64_t sub_23A5386E8(_QWORD *a1)
{
  return DTSyncedTimer.encode(to:)(a1);
}

char *MTMutableTimer.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (**v19)(char *, uint64_t);
  void (*v20)(void (**)(char *, uint64_t), char *, uint64_t);
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  BOOL v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  void *v49;
  uint64_t v50;
  void *v51;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (**v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD v64[2];
  __int128 v65;
  uint64_t v66;
  _BYTE v67[48];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993228);
  MEMORY[0x24BDAC7A8](v2);
  v57 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993230);
  MEMORY[0x24BDAC7A8](v4);
  v58 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A59E044();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A59E1F4();
  v60 = *(void (***)(char *, uint64_t))(v10 - 8);
  v61 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23A59E260();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (void (**)(char *, uint64_t))((char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = a1;
  sub_23A59E200();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    v53 = v9;
    v54 = v7;
    v55 = v17;
    v20 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v17 + 32);
    v56 = v16;
    v20(v19, v15, v16);
    v21 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v22 = (void *)sub_23A59E224();
    v23 = objc_msgSend(v21, sel_initWithIdentifier_, v22);

    v24 = v23;
    objc_msgSend(v24, sel_setState_, 1);
    v25 = type metadata accessor for DTSyncedTimer(0);
    v26 = v62;
    sub_23A59E1D0();
    sub_23A59E1DC();
    v28 = v27;
    v60[1](v12, v61);
    v29 = *(double *)(v26 + 16);
    v30 = v29 - v28;
    v31 = v28 < v29;
    v32 = 1.0;
    if (v31)
      v32 = v30;
    objc_msgSend(v24, sel_setDuration_, v32);
    v61 = v25;
    if (*(_QWORD *)(v26 + *(int *)(v25 + 36) + 8))
    {
      v60 = v19;
      sub_23A59ECB0();
      v33 = (uint64_t)v58;
      sub_23A59EC8C();
      v34 = v54;
      v35 = v6;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v33, 1, v6) == 1)
      {
        sub_23A53B9B4(v33, (uint64_t *)&unk_256993230);
      }
      else
      {
        v36 = v53;
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v53, v33, v35);
        v37 = v57;
        sub_23A59E038();
        v38 = (uint64_t)v37;
        v39 = sub_23A59E164();
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
        {
          sub_23A53B9B4(v38, &qword_256993228);
          (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
        }
        else
        {
          v59 = sub_23A59E110();
          v42 = v41;
          (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
          v43 = objc_msgSend(v24, sel_siriContext);
          if (v43)
          {
            v44 = v43;
            v45 = sub_23A59E950();

          }
          else
          {
            v45 = MEMORY[0x24BEE4B00];
          }
          *(_QWORD *)&v65 = sub_23A59ECA4();
          *((_QWORD *)&v65 + 1) = v46;
          v47 = MEMORY[0x24BEE0D00];
          sub_23A59EDC4();
          v66 = v47;
          *(_QWORD *)&v65 = v59;
          *((_QWORD *)&v65 + 1) = v42;
          sub_23A53B9F0(&v65, v64);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v63 = v45;
          sub_23A53A3AC(v64, (uint64_t)v67, isUniquelyReferenced_nonNull_native);
          swift_bridgeObjectRelease();
          sub_23A53BA00((uint64_t)v67);
          v49 = (void *)sub_23A59E944();
          swift_bridgeObjectRelease();
          objc_msgSend(v24, sel_setSiriContext_, v49);

          (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v35);
        }
      }
    }
    v50 = v61;
    if (*(_QWORD *)(v26 + *(int *)(v61 + 40) + 8))
    {
      swift_bridgeObjectRetain();
      v51 = (void *)sub_23A59E998();
      swift_bridgeObjectRelease();
    }
    else
    {
      v51 = 0;
    }
    objc_msgSend(v24, sel_setTitle_, v51);

    __asm { BR              X9 }
  }
  sub_23A53B9B4((uint64_t)v15, &qword_256993720);
  sub_23A59E614();
  sub_23A59E620();
  swift_willThrow();
  sub_23A53AC04(v62, type metadata accessor for DTSyncedTimer);
  return v15;
}

void sub_23A538D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_23A538DB4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x23A538F98);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_23A538FBC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23A53908C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23A53E8B0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23A53E8B0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_23A53908C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23A59ED28();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23A539244(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23A59EE3C();
  if (!v8)
  {
    sub_23A59EEC0();
    __break(1u);
LABEL_17:
    result = sub_23A59EF08();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23A539244(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23A5392D8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23A5394B0(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23A5394B0(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23A5392D8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23A53944C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23A59EE0C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23A59EEC0();
      __break(1u);
LABEL_10:
      v2 = sub_23A59E9F8();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23A59EF08();
    __break(1u);
LABEL_14:
    result = sub_23A59EEC0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23A53944C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569934B8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23A5394B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569934B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

uint64_t sub_23A5395FC(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v16;
  uint64_t v18;

  v4 = *v2;
  swift_bridgeObjectRetain();
  v5 = sub_23A53386C();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = ~v6;
    v9 = (char)a2;
    v10 = *(_QWORD *)&aMonday_1[v9 * 8];
    v11 = qword_23A5A08D8[v9];
    while (*(_QWORD *)&aMonday_1[8 * *(char *)(*(_QWORD *)(v4 + 48) + v7)] != v10
         || qword_23A5A08D8[*(char *)(*(_QWORD *)(v4 + 48) + v7)] != v11)
    {
      v13 = sub_23A59F064();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        goto LABEL_11;
      v7 = (v7 + 1) & v8;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    result = 0;
    LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v16 + 48) + v7);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v16;
    *v16 = 0x8000000000000000;
    sub_23A539A84(a2, v7, isUniquelyReferenced_nonNull_native);
    *v16 = v18;
    swift_bridgeObjectRelease();
    result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_23A5397A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569934B0);
  v3 = sub_23A59EDDC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
      sub_23A59F0E8();
      sub_23A59E9C8();
      swift_bridgeObjectRelease();
      result = sub_23A59F100();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23A539A84(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t *v20;
  char v21;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_16;
  if ((a3 & 1) != 0)
  {
    sub_23A5397A4();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23A539C2C();
      goto LABEL_16;
    }
    sub_23A539DBC();
  }
  v8 = *v3;
  result = sub_23A53386C();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    v11 = v5;
    v12 = *(_QWORD *)&aMonday_1[v11 * 8];
    v13 = qword_23A5A08D8[v11];
    while (*(_QWORD *)&aMonday_1[8 * *(char *)(*(_QWORD *)(v8 + 48) + a2)] != v12
         || qword_23A5A08D8[*(char *)(*(_QWORD *)(v8 + 48) + a2)] != v13)
    {
      v15 = sub_23A59F064();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        goto LABEL_20;
      a2 = (a2 + 1) & v10;
      if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_16;
    }
    goto LABEL_19;
  }
LABEL_16:
  v16 = *v20;
  *(_QWORD *)(*v20 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v16 + 48) + a2) = v21;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (!v18)
  {
    *(_QWORD *)(v16 + 16) = v19;
    return result;
  }
  __break(1u);
LABEL_19:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_20:
  result = sub_23A59F07C();
  __break(1u);
  return result;
}

void *sub_23A539C2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569934B0);
  v2 = *v0;
  v3 = sub_23A59EDD0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23A539DBC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569934B0);
  v3 = sub_23A59EDDC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_23A59F0E8();
    sub_23A59E9C8();
    swift_bridgeObjectRelease();
    result = sub_23A59F100();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_23A53A068(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A59EDAC();
  return sub_23A53A55C(a1, v2);
}

uint64_t sub_23A53A098(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569934A8);
  v6 = sub_23A59EEF0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_23A53B9F0((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_23A53E854(v25, (uint64_t)&v38);
      sub_23A53E8B0(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_23A59EDAC();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_23A53B9F0(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

_OWORD *sub_23A53A3AC(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23A53A068(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        return sub_23A53B9F0(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23A53A620();
      goto LABEL_7;
    }
    sub_23A53A098(v13, a3 & 1);
    v19 = sub_23A53A068(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23A53E854(a2, (uint64_t)v21);
      return sub_23A53A4E4(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_23A59F088();
  __break(1u);
  return result;
}

_OWORD *sub_23A53A4E4(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_23A53B9F0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_23A53A55C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_23A53E854(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x23B85192C](v9, a1);
      sub_23A53BA00((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void *sub_23A53A620()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569934A8);
  v2 = *v0;
  v3 = sub_23A59EEE4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_23A53E854(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_23A53E8B0(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_23A53B9F0(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23A53A804(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6573616261746164 && a2 == 0xE800000000000000;
  if (v3 || (sub_23A59F064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023A5A1890)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23A59F064();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23A53A8E8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x736D72616C61 && a2 == 0xE600000000000000;
  if (v3 || (sub_23A59F064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7372656D6974 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23A59F064();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_23A53A9C0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = (void *)sub_23A59E17C();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_23A59E0F8();

    swift_willThrow();
  }
  return v2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_23A53AA94(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23A53AAA8(a1, a2);
  return a1;
}

uint64_t sub_23A53AAA8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23A53AAEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23A53AB30(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_23A53AB74(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23A53ABAC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23A53AB30(a1, a2);
  return a1;
}

uint64_t sub_23A53ABC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23A53AC04(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23A53AC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_23A538D54((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_23A53AD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_23A59E050();
  v11 = result;
  if (result)
  {
    result = sub_23A59E068();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_23A59E05C();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_23A538D54(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_23A53ADC8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_23A53AE14()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_23A53AE48 + *((int *)qword_23A53B020 + (v0 >> 62))))();
}

uint64_t sub_23A53AE58@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV5SoundO9MediaInfoV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  char v3;
  double v4;
  char v5;
  BOOL v6;
  char v7;
  uint64_t result;
  char v9;

  v2 = *(double *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(double *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_23A59F064(), result = 0, (v7 & 1) != 0))
  {
    if ((v3 & 1) != 0)
    {
      if ((v5 & 1) == 0)
        return 0;
    }
    else
    {
      if (v2 == v4)
        v9 = v5;
      else
        v9 = 1;
      if ((v9 & 1) != 0)
        return 0;
    }
    return 1;
  }
  return result;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV5SoundO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  char v3;
  double v4;
  char v5;
  BOOL v6;
  char v8;

  v2 = *(double *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(double *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (!v6 && (sub_23A59F064() & 1) == 0)
    return 0;
  if ((v3 & 1) != 0)
  {
    if ((v5 & 1) == 0)
      return 0;
  }
  else
  {
    if (v2 == v4)
      v8 = v5;
    else
      v8 = 1;
    if ((v8 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  char v20;
  double v21;
  char v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;

  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v5 = sub_23A59F064();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  if (*(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16)
    || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24)
    || *(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
  {
    return 0;
  }
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  if (v8 >> 60 == 15)
  {
    if (v10 >> 60 == 15)
      goto LABEL_15;
LABEL_13:
    sub_23A53ABAC(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
    sub_23A53ABAC(v9, v10);
    sub_23A53AA94(v7, v8);
    sub_23A53AA94(v9, v10);
    return 0;
  }
  if (v10 >> 60 == 15)
    goto LABEL_13;
  sub_23A53ABAC(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  sub_23A53ABAC(v9, v10);
  sub_23A53ADC8(v7, v8);
  v12 = v11;
  sub_23A53AA94(v9, v10);
  sub_23A53AA94(v7, v8);
  if ((v12 & 1) == 0)
    return 0;
LABEL_15:
  v13 = (int *)type metadata accessor for DTSyncedAlarm(0);
  if ((sub_23A59E1B8() & 1) == 0 || (sub_23A53474C(*(_QWORD *)(a1 + v13[10]), *(_QWORD *)(a2 + v13[10])) & 1) == 0)
    return 0;
  v14 = v13[11];
  v15 = a1 + v14;
  v16 = *(_QWORD *)(a1 + v14 + 8);
  v17 = a2 + v14;
  v18 = *(_QWORD *)(v17 + 8);
  if (!v16)
  {
    if (v18)
      return 0;
    goto LABEL_29;
  }
  if (!v18)
    return 0;
  v19 = *(double *)(v15 + 16);
  v20 = *(_BYTE *)(v15 + 24);
  v21 = *(double *)(v17 + 16);
  v22 = *(_BYTE *)(v17 + 24);
  if (*(_QWORD *)v15 == *(_QWORD *)v17 && v16 == v18 || (v23 = sub_23A59F064(), result = 0, (v23 & 1) != 0))
  {
    if ((v20 & 1) != 0)
    {
      if ((v22 & 1) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v22 & 1) != 0 || v19 != v21)
        return result;
    }
LABEL_29:
    v24 = v13[12];
    v25 = (_QWORD *)(a1 + v24);
    v26 = *(_QWORD *)(a1 + v24 + 8);
    v27 = (_QWORD *)(a2 + v24);
    v28 = v27[1];
    if (v26)
    {
      if (!v28)
        return 0;
      if (*v25 != *v27 || v26 != v28)
      {
        v29 = sub_23A59F064();
        result = 0;
        if ((v29 & 1) == 0)
          return result;
      }
    }
    else if (v28)
    {
      return 0;
    }
    v30 = v13[13];
    v31 = (_QWORD *)(a1 + v30);
    v32 = *(_QWORD *)(a1 + v30 + 8);
    v33 = (_QWORD *)(a2 + v30);
    v34 = v33[1];
    if (v32)
    {
      if (v34 && (*v31 == *v33 && v32 == v34 || (sub_23A59F064() & 1) != 0))
        return 1;
    }
    else if (!v34)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedTimerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v5 = sub_23A59F064();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
    return 0;
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  if (v8 >> 60 == 15)
  {
    if (v10 >> 60 == 15)
      goto LABEL_13;
LABEL_11:
    sub_23A53ABAC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
    sub_23A53ABAC(v9, v10);
    sub_23A53AA94(v7, v8);
    sub_23A53AA94(v9, v10);
    return 0;
  }
  if (v10 >> 60 == 15)
    goto LABEL_11;
  sub_23A53ABAC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  sub_23A53ABAC(v9, v10);
  sub_23A53ADC8(v7, v8);
  v12 = v11;
  sub_23A53AA94(v9, v10);
  sub_23A53AA94(v7, v8);
  if ((v12 & 1) == 0)
    return 0;
LABEL_13:
  v13 = (int *)type metadata accessor for DTSyncedTimer(0);
  if ((sub_23A59E1B8() & 1) == 0 || (sub_23A533304(*(_BYTE *)(a1 + v13[8]), *(_BYTE *)(a2 + v13[8])) & 1) == 0)
    return 0;
  v14 = v13[9];
  v15 = (_QWORD *)(a1 + v14);
  v16 = *(_QWORD *)(a1 + v14 + 8);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  if (!v16)
  {
    if (v18)
      return 0;
LABEL_22:
    v20 = v13[10];
    v21 = (_QWORD *)(a1 + v20);
    v22 = *(_QWORD *)(a1 + v20 + 8);
    v23 = (_QWORD *)(a2 + v20);
    v24 = v23[1];
    if (v22)
    {
      if (v24 && (*v21 == *v23 && v22 == v24 || (sub_23A59F064() & 1) != 0))
        return 1;
    }
    else if (!v24)
    {
      return 1;
    }
    return 0;
  }
  if (!v18)
    return 0;
  if (*v15 == *v17 && v16 == v18)
    goto LABEL_22;
  v19 = sub_23A59F064();
  result = 0;
  if ((v19 & 1) != 0)
    goto LABEL_22;
  return result;
}

uint64_t sub_23A53B5D4()
{
  unint64_t v0;

  v0 = sub_23A59EF14();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

unint64_t sub_23A53B61C()
{
  unint64_t result;

  result = qword_256994D78;
  if (!qword_256994D78)
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0768, &type metadata for DTSyncedAlarm.Sound.MediaInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256994D78);
  }
  return result;
}

unint64_t sub_23A53B660()
{
  unint64_t result;

  result = qword_256994D80;
  if (!qword_256994D80)
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0718, &type metadata for DTSyncedAlarm.Sound.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256994D80);
  }
  return result;
}

unint64_t sub_23A53B6A4()
{
  unint64_t result;

  result = qword_256994D88[0];
  if (!qword_256994D88[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A06C8, &type metadata for DTSyncedAlarm.Sound.MediaCodingKeys);
    atomic_store(result, qword_256994D88);
  }
  return result;
}

unint64_t sub_23A53B6E8()
{
  unint64_t result;

  result = qword_256993190;
  if (!qword_256993190)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedAlarm.Sound.MediaInfo, &type metadata for DTSyncedAlarm.Sound.MediaInfo);
    atomic_store(result, (unint64_t *)&qword_256993190);
  }
  return result;
}

unint64_t sub_23A53B72C()
{
  unint64_t result;

  result = qword_2569931B0;
  if (!qword_2569931B0)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedAlarm.Sound.MediaInfo, &type metadata for DTSyncedAlarm.Sound.MediaInfo);
    atomic_store(result, (unint64_t *)&qword_2569931B0);
  }
  return result;
}

unint64_t sub_23A53B770()
{
  unint64_t result;

  result = qword_2569931C0;
  if (!qword_2569931C0)
  {
    result = MEMORY[0x23B8520D0](&unk_23A59FAA0, &type metadata for DTSyncedAlarm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569931C0);
  }
  return result;
}

unint64_t sub_23A53B7B4()
{
  unint64_t result;

  result = qword_2569931C8;
  if (!qword_2569931C8)
  {
    result = MEMORY[0x23B8520D0](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2569931C8);
  }
  return result;
}

unint64_t sub_23A53B7F8()
{
  unint64_t result;

  result = qword_2569931E8;
  if (!qword_2569931E8)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedAlarm.Day, &type metadata for DTSyncedAlarm.Day);
    atomic_store(result, (unint64_t *)&qword_2569931E8);
  }
  return result;
}

unint64_t sub_23A53B83C()
{
  unint64_t result;

  result = qword_2569931F0;
  if (!qword_2569931F0)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedAlarm.Sound, &type metadata for DTSyncedAlarm.Sound);
    atomic_store(result, (unint64_t *)&qword_2569931F0);
  }
  return result;
}

unint64_t sub_23A53B880()
{
  unint64_t result;

  result = qword_256993200;
  if (!qword_256993200)
  {
    result = MEMORY[0x23B8520D0](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256993200);
  }
  return result;
}

uint64_t sub_23A53B8C4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569931D8);
    v8 = a2();
    result = MEMORY[0x23B8520D0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23A53B92C()
{
  unint64_t result;

  result = qword_256993218;
  if (!qword_256993218)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedAlarm.Day, &type metadata for DTSyncedAlarm.Day);
    atomic_store(result, (unint64_t *)&qword_256993218);
  }
  return result;
}

unint64_t sub_23A53B970()
{
  unint64_t result;

  result = qword_256993220;
  if (!qword_256993220)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedAlarm.Sound, &type metadata for DTSyncedAlarm.Sound);
    atomic_store(result, (unint64_t *)&qword_256993220);
  }
  return result;
}

uint64_t sub_23A53B9B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_23A53B9F0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23A53BA00(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_23A53BA34(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23A53BA78(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656449616964656DLL && a2 == 0xEF7265696669746ELL;
  if (v3 || (sub_23A59F064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D756C6F76 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23A59F064();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23A53BB70(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x616964656DLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23A59F064();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23A53BBEC()
{
  return 0x616964656DLL;
}

uint64_t sub_23A53BC00(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23A59F064();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23A53BC6C()
{
  return 12383;
}

uint64_t sub_23A53BC78()
{
  unint64_t v0;

  v0 = sub_23A59EF14();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

unint64_t sub_23A53BCC0()
{
  unint64_t result;

  result = qword_256993248;
  if (!qword_256993248)
  {
    result = MEMORY[0x23B8520D0](&unk_23A59FEB4, &type metadata for DTSyncedTimer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256993248);
  }
  return result;
}

unint64_t sub_23A53BD04()
{
  unint64_t result;

  result = qword_256993250;
  if (!qword_256993250)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedTimer.State, &type metadata for DTSyncedTimer.State);
    atomic_store(result, (unint64_t *)&qword_256993250);
  }
  return result;
}

unint64_t sub_23A53BD48()
{
  unint64_t result;

  result = qword_256993260;
  if (!qword_256993260)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedTimer.State, &type metadata for DTSyncedTimer.State);
    atomic_store(result, (unint64_t *)&qword_256993260);
  }
  return result;
}

unint64_t sub_23A53BD90()
{
  unint64_t result;

  result = qword_256993268;
  if (!qword_256993268)
  {
    result = MEMORY[0x23B8520D0](&unk_23A59FA00, &type metadata for DTSyncedAlarm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256993268);
  }
  return result;
}

unint64_t sub_23A53BDD8()
{
  unint64_t result;

  result = qword_256993270;
  if (!qword_256993270)
  {
    result = MEMORY[0x23B8520D0](&unk_23A59FB18, &type metadata for DTSyncedAlarm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256993270);
  }
  return result;
}

unint64_t sub_23A53BE20()
{
  unint64_t result;

  result = qword_256993278;
  if (!qword_256993278)
  {
    result = MEMORY[0x23B8520D0](&unk_23A59FAF0, &type metadata for DTSyncedAlarm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256993278);
  }
  return result;
}

unint64_t sub_23A53BE68()
{
  unint64_t result;

  result = qword_256993280;
  if (!qword_256993280)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedAlarm.Day, &type metadata for DTSyncedAlarm.Day);
    atomic_store(result, (unint64_t *)&qword_256993280);
  }
  return result;
}

uint64_t sub_23A53BEAC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23A52EAEC(&qword_256993288, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
  a1[2] = sub_23A52EAEC(&qword_2569930C0, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
  a1[3] = sub_23A52EAEC(&qword_256993090, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
  a1[4] = sub_23A52EAEC(&qword_256993290, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
  result = sub_23A52EAEC(&qword_256993298, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
  a1[5] = result;
  return result;
}

uint64_t sub_23A53BF5C()
{
  return MEMORY[0x24BEE0D10];
}

unint64_t sub_23A53BF6C()
{
  unint64_t result;

  result = qword_2569932A0;
  if (!qword_2569932A0)
  {
    result = MEMORY[0x23B8520D0](&unk_23A59FE14, &type metadata for DTSyncedTimer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569932A0);
  }
  return result;
}

unint64_t sub_23A53BFB4()
{
  unint64_t result;

  result = qword_2569932A8;
  if (!qword_2569932A8)
  {
    result = MEMORY[0x23B8520D0](&unk_23A59FF2C, &type metadata for DTSyncedTimer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569932A8);
  }
  return result;
}

unint64_t sub_23A53BFFC()
{
  unint64_t result;

  result = qword_2569932B0;
  if (!qword_2569932B0)
  {
    result = MEMORY[0x23B8520D0](&unk_23A59FF04, &type metadata for DTSyncedTimer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569932B0);
  }
  return result;
}

unint64_t sub_23A53C044()
{
  unint64_t result;

  result = qword_2569932B8;
  if (!qword_2569932B8)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedTimer.State, &type metadata for DTSyncedTimer.State);
    atomic_store(result, (unint64_t *)&qword_2569932B8);
  }
  return result;
}

uint64_t sub_23A53C088(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23A52EAEC(&qword_2569932C0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
  a1[2] = sub_23A52EAEC(&qword_2569930D0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
  a1[3] = sub_23A52EAEC(&qword_2569930A8, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
  a1[4] = sub_23A52EAEC(&qword_2569932C8, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
  result = sub_23A52EAEC(&qword_2569932D0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
  a1[5] = result;
  return result;
}

uint64_t sub_23A53C138()
{
  return 16;
}

__n128 sub_23A53C144(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t *_s14PersistentDataVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    a1[1] = a2[1];
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23A59E848();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t _s14PersistentDataVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23A59E848();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *_s14PersistentDataVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23A59E848();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *_s14PersistentDataVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23A59E848();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *_s14PersistentDataVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23A59E848();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *_s14PersistentDataVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23A59E848();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t _s14PersistentDataVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A53C6D4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t _s14PersistentDataVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23A53C760(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_23A53C7D8()
{
  unint64_t v0;

  sub_23A53C84C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23A53C84C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256993330)
  {
    sub_23A59E848();
    v0 = sub_23A59ED10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256993330);
  }
}

uint64_t destroy for DTSyncedDatabase()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s23DistributedTimersDaemon16DTSyncedDatabaseVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DTSyncedDatabase(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for DTSyncedDatabase(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DTSyncedDatabase(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DTSyncedDatabase(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DTSyncedDatabase()
{
  return &type metadata for DTSyncedDatabase;
}

uint64_t dispatch thunk of static DTSyncedObject.ckValueKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of DTSyncedObject.lastKnownRecordData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DTSyncedObject.lastKnownRecordData.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of DTSyncedObject.lastKnownRecordData.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of DTSyncedObject.lastKnownRecord.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of DTSyncedObject.lastKnownRecord.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of DTSyncedObject.lastKnownRecord.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of DTSyncedObject.modificationDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of DTSyncedObject.modificationDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of DTSyncedObject.modificationDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of DTSyncedObject.mergeFromServerRecord(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of DTSyncedObject.setLastKnownRecordIfNewer(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of DTSyncedObject.populateRecord(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t initializeBufferWithCopyOfBuffer for DTSyncedAlarm(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v8 = a2 + 5;
    v9 = a2[6];
    swift_bridgeObjectRetain();
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 40) = *v8;
    }
    else
    {
      v11 = *(_QWORD *)v8;
      sub_23A53AB30(v11, v9);
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v9;
    }
    v12 = a3[9];
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_23A59E1F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[11];
    *(_QWORD *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    v17 = a1 + v16;
    v18 = (uint64_t)a2 + v16;
    v19 = *(_QWORD *)(v18 + 8);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *(_QWORD *)(v17 + 8) = v19;
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
    v20 = a3[12];
    v21 = a3[13];
    v22 = (_QWORD *)(a1 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (_QWORD *)(a1 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DTSyncedAlarm(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 48);
  if (v4 >> 60 != 15)
    sub_23A53AAA8(*(_QWORD *)(a1 + 40), v4);
  v5 = a1 + *(int *)(a2 + 36);
  v6 = sub_23A59E1F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DTSyncedAlarm(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = (_OWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  else
  {
    v9 = *(_QWORD *)v7;
    sub_23A53AB30(v9, v8);
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v8;
  }
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23A59E1F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_QWORD *)(v15 + 8) = v17;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_BYTE *)(v15 + 24) = *(_BYTE *)(v16 + 24);
  v18 = a3[12];
  v19 = a3[13];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)(a1 + v19);
  v24 = (_QWORD *)(a2 + v19);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DTSyncedAlarm(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = (uint64_t *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48) >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      v9 = *v6;
      sub_23A53AB30(*v6, *(_QWORD *)(a2 + 48));
      v10 = *(_QWORD *)(a1 + 40);
      v11 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v7;
      sub_23A53AAA8(v10, v11);
      goto LABEL_8;
    }
    sub_23A53CF80(a1 + 40);
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v8 = *v6;
  sub_23A53AB30(*v6, *(_QWORD *)(a2 + 48));
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v7;
LABEL_8:
  v12 = a3[9];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23A59E1F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[11];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v18 + 16);
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_QWORD *)(v17 + 16) = v19;
  v20 = a3[12];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[13];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23A53CF80(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t initializeWithTake for DTSyncedAlarm(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = a3[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23A59E1F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v11 = (_OWORD *)(a1 + v10);
  v12 = (_OWORD *)(a2 + v10);
  *v11 = *v12;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v12 + 9);
  v13 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for DTSyncedAlarm(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = (_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  if (v8 >> 60 != 15)
  {
    v9 = *(_QWORD *)(a2 + 48);
    if (v9 >> 60 != 15)
    {
      v10 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = *v7;
      *(_QWORD *)(a1 + 48) = v9;
      sub_23A53AAA8(v10, v8);
      goto LABEL_6;
    }
    sub_23A53CF80(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v7;
LABEL_6:
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23A59E1F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  v15 = a3[11];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a2 + v15 + 8);
  *(_QWORD *)v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  *(_BYTE *)(v16 + 24) = *(_BYTE *)(v17 + 24);
  v19 = a3[12];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = a3[13];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DTSyncedAlarm()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A53D1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23A59E1F4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DTSyncedAlarm()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A53D24C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23A59E1F4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23A53D2C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A59E1F4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DTSyncedAlarm.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DTSyncedAlarm.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23A53D468 + 4 * byte_23A59F923[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23A53D49C + 4 * byte_23A59F91E[v4]))();
}

uint64_t sub_23A53D49C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A53D4A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A53D4ACLL);
  return result;
}

uint64_t sub_23A53D4B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A53D4C0);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23A53D4C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A53D4CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A53D4D8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23A53D4E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DTSyncedAlarm.CodingKeys()
{
  return &type metadata for DTSyncedAlarm.CodingKeys;
}

ValueMetadata *type metadata accessor for DTSyncedAlarm.Day()
{
  return &type metadata for DTSyncedAlarm.Day;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_23A53D538()
{
  return 0;
}

ValueMetadata *type metadata accessor for DTSyncedAlarm.Sound()
{
  return &type metadata for DTSyncedAlarm.Sound;
}

uint64_t initializeBufferWithCopyOfBuffer for DTSyncedAlarm.Sound.MediaInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for DTSyncedAlarm.Sound.MediaInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV5SoundO9MediaInfoVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV5SoundO9MediaInfoVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV5SoundO9MediaInfoVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV5SoundO9MediaInfoVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23A53D6AC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DTSyncedAlarm.Sound.MediaInfo()
{
  return &type metadata for DTSyncedAlarm.Sound.MediaInfo;
}

uint64_t initializeBufferWithCopyOfBuffer for DTSyncedTimer(uint64_t a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    v8 = a2 + 3;
    v9 = a2[4];
    swift_bridgeObjectRetain();
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 24) = *v8;
    }
    else
    {
      v11 = *(_QWORD *)v8;
      sub_23A53AB30(v11, v9);
      *(_QWORD *)(a1 + 24) = v11;
      *(_QWORD *)(a1 + 32) = v9;
    }
    v12 = a3[7];
    v13 = a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23A59E1F4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[9];
    *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[10];
    v21 = (_QWORD *)(a1 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DTSyncedTimer(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 >> 60 != 15)
    sub_23A53AAA8(*(_QWORD *)(a1 + 24), v4);
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_23A59E1F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DTSyncedTimer(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  v7 = a2 + 3;
  v8 = a2[4];
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  else
  {
    v9 = *(_QWORD *)v7;
    sub_23A53AB30(v9, v8);
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v8;
  }
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23A59E1F4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[10];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DTSyncedTimer(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = a2 + 3;
  v7 = a2[4];
  if (a1[4] >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      v9 = *v6;
      sub_23A53AB30(*v6, a2[4]);
      v10 = a1[3];
      v11 = a1[4];
      a1[3] = v9;
      a1[4] = v7;
      sub_23A53AAA8(v10, v11);
      goto LABEL_8;
    }
    sub_23A53CF80((uint64_t)(a1 + 3));
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v8 = *v6;
  sub_23A53AB30(*v6, a2[4]);
  a1[3] = v8;
  a1[4] = v7;
LABEL_8:
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23A59E1F4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v16 = a3[9];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[10];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DTSyncedTimer(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23A59E1F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

_QWORD *assignWithTake for DTSyncedTimer(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = a2 + 3;
  v8 = a1[4];
  if (v8 >> 60 != 15)
  {
    v9 = a2[4];
    if (v9 >> 60 != 15)
    {
      v10 = a1[3];
      a1[3] = *v7;
      a1[4] = v9;
      sub_23A53AAA8(v10, v8);
      goto LABEL_6;
    }
    sub_23A53CF80((uint64_t)(a1 + 3));
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)v7;
LABEL_6:
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23A59E1F4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[10];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DTSyncedTimer()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A53DCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23A59E1F4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DTSyncedTimer()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A53DD30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23A59E1F4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23A53DDA4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A59E1F4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV3DayOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV3DayOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23A53DF20 + 4 * byte_23A59F92D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23A53DF54 + 4 * byte_23A59F928[v4]))();
}

uint64_t sub_23A53DF54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A53DF5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A53DF64);
  return result;
}

uint64_t sub_23A53DF70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A53DF78);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23A53DF7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A53DF84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DTSyncedTimer.CodingKeys()
{
  return &type metadata for DTSyncedTimer.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DTSyncedTimer.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DTSyncedTimer.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23A53E07C + 4 * byte_23A59F937[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23A53E0B0 + 4 * byte_23A59F932[v4]))();
}

uint64_t sub_23A53E0B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A53E0B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A53E0C0);
  return result;
}

uint64_t sub_23A53E0CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A53E0D4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23A53E0D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A53E0E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DTSyncedTimer.State()
{
  return &type metadata for DTSyncedTimer.State;
}

ValueMetadata *type metadata accessor for DTSyncedAlarm.Sound.CodingKeys()
{
  return &type metadata for DTSyncedAlarm.Sound.CodingKeys;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV5SoundO10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV5SoundO10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23A53E1A8 + 4 * byte_23A59F93C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23A53E1C8 + 4 * byte_23A59F941[v4]))();
}

_BYTE *sub_23A53E1A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23A53E1C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A53E1D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A53E1D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A53E1E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A53E1E8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DTSyncedAlarm.Sound.MediaCodingKeys()
{
  return &type metadata for DTSyncedAlarm.Sound.MediaCodingKeys;
}

ValueMetadata *type metadata accessor for DTSyncedAlarm.Sound.MediaInfo.CodingKeys()
{
  return &type metadata for DTSyncedAlarm.Sound.MediaInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for DTSyncedDatabase.CodingKeys()
{
  return &type metadata for DTSyncedDatabase.CodingKeys;
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV5SoundO9MediaInfoV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV5SoundO9MediaInfoV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A53E308 + 4 * byte_23A59F94B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A53E33C + 4 * byte_23A59F946[v4]))();
}

uint64_t sub_23A53E33C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A53E344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A53E34CLL);
  return result;
}

uint64_t sub_23A53E358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A53E360);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A53E364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A53E36C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23A53E378(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *_s14PersistentDataV10CodingKeysOMa()
{
  return &_s14PersistentDataV10CodingKeysON;
}

unint64_t sub_23A53E398()
{
  unint64_t result;

  result = qword_2569964C0[0];
  if (!qword_2569964C0[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A03C0, &_s14PersistentDataV10CodingKeysON);
    atomic_store(result, qword_2569964C0);
  }
  return result;
}

unint64_t sub_23A53E3E0()
{
  unint64_t result;

  result = qword_2569966D0[0];
  if (!qword_2569966D0[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0478, &type metadata for DTSyncedDatabase.CodingKeys);
    atomic_store(result, qword_2569966D0);
  }
  return result;
}

unint64_t sub_23A53E428()
{
  unint64_t result;

  result = qword_2569968E0[0];
  if (!qword_2569968E0[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0530, &type metadata for DTSyncedAlarm.Sound.MediaInfo.CodingKeys);
    atomic_store(result, qword_2569968E0);
  }
  return result;
}

unint64_t sub_23A53E470()
{
  unint64_t result;

  result = qword_256996AF0[0];
  if (!qword_256996AF0[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A05E8, &type metadata for DTSyncedAlarm.Sound.MediaCodingKeys);
    atomic_store(result, qword_256996AF0);
  }
  return result;
}

unint64_t sub_23A53E4B8()
{
  unint64_t result;

  result = qword_256996D00[0];
  if (!qword_256996D00[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A06A0, &type metadata for DTSyncedAlarm.Sound.CodingKeys);
    atomic_store(result, qword_256996D00);
  }
  return result;
}

unint64_t sub_23A53E500()
{
  unint64_t result;

  result = qword_256996E10;
  if (!qword_256996E10)
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0558, &type metadata for DTSyncedAlarm.Sound.MediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256996E10);
  }
  return result;
}

unint64_t sub_23A53E548()
{
  unint64_t result;

  result = qword_256996E18[0];
  if (!qword_256996E18[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0580, &type metadata for DTSyncedAlarm.Sound.MediaCodingKeys);
    atomic_store(result, qword_256996E18);
  }
  return result;
}

unint64_t sub_23A53E590()
{
  unint64_t result;

  result = qword_256996EA0;
  if (!qword_256996EA0)
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0610, &type metadata for DTSyncedAlarm.Sound.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256996EA0);
  }
  return result;
}

unint64_t sub_23A53E5D8()
{
  unint64_t result;

  result = qword_256996EA8[0];
  if (!qword_256996EA8[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0638, &type metadata for DTSyncedAlarm.Sound.CodingKeys);
    atomic_store(result, qword_256996EA8);
  }
  return result;
}

unint64_t sub_23A53E620()
{
  unint64_t result;

  result = qword_256996F30;
  if (!qword_256996F30)
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A04A0, &type metadata for DTSyncedAlarm.Sound.MediaInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256996F30);
  }
  return result;
}

unint64_t sub_23A53E668()
{
  unint64_t result;

  result = qword_256996F38[0];
  if (!qword_256996F38[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A04C8, &type metadata for DTSyncedAlarm.Sound.MediaInfo.CodingKeys);
    atomic_store(result, qword_256996F38);
  }
  return result;
}

unint64_t sub_23A53E6B0()
{
  unint64_t result;

  result = qword_256996FC0;
  if (!qword_256996FC0)
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A03E8, &type metadata for DTSyncedDatabase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256996FC0);
  }
  return result;
}

unint64_t sub_23A53E6F8()
{
  unint64_t result;

  result = qword_256996FC8[0];
  if (!qword_256996FC8[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0410, &type metadata for DTSyncedDatabase.CodingKeys);
    atomic_store(result, qword_256996FC8);
  }
  return result;
}

unint64_t sub_23A53E740()
{
  unint64_t result;

  result = qword_256997050;
  if (!qword_256997050)
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0330, &_s14PersistentDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256997050);
  }
  return result;
}

unint64_t sub_23A53E788()
{
  unint64_t result;

  result = qword_256997058[0];
  if (!qword_256997058[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A0358, &_s14PersistentDataV10CodingKeysON);
    atomic_store(result, qword_256997058);
  }
  return result;
}

unint64_t sub_23A53E7CC()
{
  unint64_t result;

  result = qword_256993498;
  if (!qword_256993498)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedTimer.State, &type metadata for DTSyncedTimer.State);
    atomic_store(result, (unint64_t *)&qword_256993498);
  }
  return result;
}

unint64_t sub_23A53E810()
{
  unint64_t result;

  result = qword_2569934A0;
  if (!qword_2569934A0)
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncedAlarm.Day, &type metadata for DTSyncedAlarm.Day);
    atomic_store(result, (unint64_t *)&qword_2569934A0);
  }
  return result;
}

uint64_t sub_23A53E854(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23A53E8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23A53E95C()
{
  uint64_t v0;

  v0 = sub_23A59E6A4();
  __swift_allocate_value_buffer(v0, qword_2569970E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2569970E8);
  sub_23A59E3F8();
  return sub_23A59E698();
}

uint64_t DTDaemon.unownedExecutor.getter()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

uint64_t DTDaemon.syncDaemon.getter()
{
  return sub_23A53EA3C();
}

uint64_t DTDaemon.timerDaemon.getter()
{
  return sub_23A53EA3C();
}

uint64_t DTDaemon.transportDaemon.getter()
{
  return sub_23A53EA3C();
}

uint64_t DTDaemon.xpcServer.getter()
{
  return sub_23A53EA3C();
}

uint64_t sub_23A53EA3C()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t DTDaemon.__allocating_init(environment:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DTDaemon.init(environment:)(a1);
  return v2;
}

uint64_t DTDaemon.init(environment:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__osStateHandler) = 0;
  v3 = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__startTicks;
  *(_QWORD *)(v1 + v3) = sub_23A59E344();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__subDaemons) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_syncDaemon) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_transportDaemon) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_xpcServer) = 0;
  v4 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__environment;
  v5 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a1, v5);
  return v1;
}

uint64_t DTDaemon.summary.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[10] = v0;
  v2 = sub_23A59F040();
  v1[11] = v2;
  v1[12] = *(_QWORD *)(v2 - 8);
  v1[13] = swift_task_alloc();
  sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
  v1[14] = sub_23A59EA7C();
  v1[15] = v3;
  return swift_task_switch();
}

uint64_t sub_23A53EC04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);

  *(_QWORD *)(v0 + 40) = 0;
  v1 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 48) = 0xE000000000000000;
  v2 = sub_23A59E344();
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__startTicks);
  v4 = v2 >= v3;
  result = v2 - v3;
  if (v4)
  {
    v7 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 88);
    v10 = sub_23A59E278();
    sub_23A59EE00();
    sub_23A59E9E0();
    *(_QWORD *)(v0 + 72) = v10;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v6, *MEMORY[0x24BE29E98], v8);
    sub_23A53EFE8();
    sub_23A59F058();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 40) = 0;
    *(_QWORD *)(v0 + 48) = 0xE000000000000000;
    sub_23A59E9E0();
    v11 = (_QWORD *)(v9 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__subDaemons);
    swift_beginAccess();
    v12 = (_QWORD *)*v11;
    *(_QWORD *)(v0 + 128) = *v11;
    v13 = v12[2];
    *(_QWORD *)(v0 + 136) = v13;
    if (v13)
    {
      *(_QWORD *)(v0 + 144) = 0;
      *(_QWORD *)(v0 + 152) = v12[4];
      v14 = v12[5];
      swift_bridgeObjectRetain();
      ObjectType = swift_getObjectType();
      v19 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v14 + 16) + *(_QWORD *)(v14 + 16));
      swift_unknownObjectRetain();
      v16 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v16;
      *v16 = v0;
      v16[1] = sub_23A53EE08;
      return v19(ObjectType, v14);
    }
    else
    {
      v18 = *(_QWORD *)(v0 + 40);
      v17 = *(_QWORD *)(v0 + 48);
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v18, v17);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23A53EE08(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A53EE60()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 176);
  v2 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v2 = *(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    *(_QWORD *)(v0 + 56) = 10;
    *(_QWORD *)(v0 + 64) = 0xE100000000000000;
    sub_23A59E9E0();
    swift_bridgeObjectRelease();
    sub_23A59E9E0();
  }
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (v3 + 1 == v4)
  {
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v6, v5);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 144) + 1;
    *(_QWORD *)(v0 + 144) = v8;
    v9 = *(_QWORD *)(v0 + 128) + 16 * v8;
    *(_QWORD *)(v0 + 152) = *(_QWORD *)(v9 + 32);
    v10 = *(_QWORD *)(v9 + 40);
    ObjectType = swift_getObjectType();
    v13 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v10 + 16) + *(_QWORD *)(v10 + 16));
    swift_unknownObjectRetain();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v12;
    *v12 = v0;
    v12[1] = sub_23A53EE08;
    return v13(ObjectType, v10);
  }
}

uint64_t type metadata accessor for DTDaemon()
{
  uint64_t result;

  result = qword_2569971A0;
  if (!qword_2569971A0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23A53EFE8()
{
  unint64_t result;

  result = qword_256993530;
  if (!qword_256993530)
  {
    result = MEMORY[0x23B8520D0](MEMORY[0x24BEE45A0], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_256993530);
  }
  return result;
}

uint64_t DTDaemon.activate()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[33] = v0;
  v2 = sub_23A59E5B4();
  v1[34] = v2;
  v1[35] = *(_QWORD *)(v2 - 8);
  v1[36] = swift_task_alloc();
  v1[37] = sub_23A59EC44();
  v1[38] = swift_task_alloc();
  sub_23A59E8F0();
  v1[39] = swift_task_alloc();
  v3 = sub_23A59EBFC();
  v1[40] = v3;
  v1[41] = *(_QWORD *)(v3 - 8);
  v1[42] = swift_task_alloc();
  sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
  v1[43] = sub_23A59EA7C();
  v1[44] = v4;
  return swift_task_switch();
}

uint64_t sub_23A53F12C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_2569970E0 != -1)
    swift_once();
  v1 = sub_23A59E6A4();
  __swift_project_value_buffer(v1, (uint64_t)qword_2569970E8);
  v2 = sub_23A59E68C();
  v3 = sub_23A59EBC0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23A52C000, v2, v3, "Activate", v4, 2u);
    MEMORY[0x23B852178](v4, -1, -1);
  }
  v5 = v0[33];

  v6 = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__osStateHandler;
  if (!*(_QWORD *)(v5 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__osStateHandler))
  {
    v7 = v0[41];
    v8 = v0[42];
    v9 = v0[40];
    sub_23A540FA4();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v8, *MEMORY[0x24BEE5758], v9);
    sub_23A59E8E4();
    v0[32] = MEMORY[0x24BEE4AF8];
    sub_23A52EAEC((unint64_t *)&qword_256993560, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5930], MEMORY[0x24BEE5940]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256993568);
    sub_23A540FE0();
    sub_23A59ED4C();
    v10 = (void *)sub_23A59EC50();
    v11 = swift_allocObject();
    swift_weakInit();
    v12 = objc_allocWithZone(MEMORY[0x24BE29800]);
    swift_retain();
    v13 = (void *)sub_23A59E998();
    v0[6] = sub_23A541050;
    v0[7] = v11;
    v0[2] = MEMORY[0x24BDAC760];
    v0[3] = 1107296256;
    v0[4] = sub_23A540D8C;
    v0[5] = &block_descriptor;
    v14 = _Block_copy(v0 + 2);
    v15 = objc_msgSend(v12, sel_initWithTitle_dispatchQueue_handler_, v13, v10, v14);

    _Block_release(v14);
    swift_release();

    swift_release();
    v16 = *(void **)(v5 + v6);
    *(_QWORD *)(v5 + v6) = v15;

  }
  v17 = v0[33];
  v18 = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__environment;
  v0[45] = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__environment;
  v19 = v17 + v18;
  if ((sub_23A59E578() & 1) != 0
    && (v20 = (uint64_t *)(v0[33] + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_syncDaemon),
        swift_beginAccess(),
        !*v20))
  {
    v40 = v0[35];
    v39 = v0[36];
    v41 = v0[34];
    type metadata accessor for DTSyncDaemon();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v19, v41);
    v42 = swift_retain();
    v43 = DTSyncDaemon.__allocating_init(daemon:environment:)(v42, v39);
    v0[46] = v43;
    *v20 = v43;
    swift_retain();
    swift_release();
    sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
    sub_23A59EA7C();
    return swift_task_switch();
  }
  else
  {
    v21 = (uint64_t *)(v0[33] + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon);
    swift_beginAccess();
    if (*v21)
    {
      v22 = (_QWORD *)(v0[33] + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_transportDaemon);
      swift_beginAccess();
      if (*v22)
      {
        v23 = (uint64_t *)(v0[33] + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_xpcServer);
        swift_beginAccess();
        if (*v23)
        {
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          return ((uint64_t (*)(void))v0[1])();
        }
        else
        {
          v45 = v0[35];
          v44 = v0[36];
          v46 = v0[34];
          v47 = v0[33] + v0[45];
          type metadata accessor for DTXPCServer();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v44, v47, v46);
          v48 = swift_retain();
          v49 = DTXPCServer.__allocating_init(daemon:environment:)(v48, v44);
          v0[51] = v49;
          *v23 = v49;
          swift_retain();
          swift_release();
          v50 = (_QWORD *)swift_task_alloc();
          v0[52] = v50;
          *v50 = v0;
          v50[1] = sub_23A540110;
          return DTXPCServer.activate()();
        }
      }
      else
      {
        v33 = v0[35];
        v32 = v0[36];
        v34 = v0[34];
        v35 = v0[33] + v0[45];
        type metadata accessor for DTTransportDaemon(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v35, v34);
        v36 = swift_retain();
        v37 = DTTransportDaemon.__allocating_init(daemon:environment:)(v36, v32);
        v0[49] = v37;
        *v22 = v37;
        swift_retain();
        swift_release();
        v38 = (_QWORD *)swift_task_alloc();
        v0[50] = v38;
        *v38 = v0;
        v38[1] = sub_23A53FEB0;
        return DTTransportDaemon.activate()();
      }
    }
    else
    {
      v26 = v0[35];
      v25 = v0[36];
      v27 = v0[34];
      v28 = v0[33] + v0[45];
      type metadata accessor for DTTimerDaemon();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v25, v28, v27);
      v29 = swift_retain();
      v30 = DTTimerDaemon.__allocating_init(daemon:environment:)(v29, v25);
      v0[47] = v30;
      *v21 = v30;
      swift_retain();
      swift_release();
      v31 = (_QWORD *)swift_task_alloc();
      v0[48] = v31;
      *v31 = v0;
      v31[1] = sub_23A53FB84;
      return DTTimerDaemon.activate()();
    }
  }
}

uint64_t sub_23A53F7A0()
{
  DTSyncDaemon.activate()();
  return swift_task_switch();
}

uint64_t sub_23A53F7D8()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v1 = (_QWORD **)(*(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__subDaemons);
  swift_beginAccess();
  v2 = *v1;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_23A540E98(0, v2[2] + 1, 1, v2);
    *v1 = v2;
  }
  v5 = v2[2];
  v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    v2 = sub_23A540E98((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
    *v1 = v2;
  }
  v6 = *(_QWORD *)(v0 + 368);
  v7 = sub_23A52EAEC(&qword_256993558, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&unk_23A5A1244);
  v2[2] = v5 + 1;
  v8 = &v2[2 * v5];
  v8[4] = v6;
  v8[5] = v7;
  swift_endAccess();
  swift_release();
  v9 = (uint64_t *)(*(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon);
  swift_beginAccess();
  if (*v9)
  {
    v10 = (_QWORD *)(*(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_transportDaemon);
    swift_beginAccess();
    if (*v10)
    {
      v11 = (uint64_t *)(*(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_xpcServer);
      swift_beginAccess();
      if (*v11)
      {
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      else
      {
        v28 = *(_QWORD *)(v0 + 280);
        v27 = *(_QWORD *)(v0 + 288);
        v29 = *(_QWORD *)(v0 + 272);
        v30 = *(_QWORD *)(v0 + 264) + *(_QWORD *)(v0 + 360);
        type metadata accessor for DTXPCServer();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v30, v29);
        v31 = swift_retain();
        v32 = DTXPCServer.__allocating_init(daemon:environment:)(v31, v27);
        *(_QWORD *)(v0 + 408) = v32;
        *v11 = v32;
        swift_retain();
        swift_release();
        v33 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 416) = v33;
        *v33 = v0;
        v33[1] = sub_23A540110;
        return DTXPCServer.activate()();
      }
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 280);
      v20 = *(_QWORD *)(v0 + 288);
      v22 = *(_QWORD *)(v0 + 272);
      v23 = *(_QWORD *)(v0 + 264) + *(_QWORD *)(v0 + 360);
      type metadata accessor for DTTransportDaemon(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
      v24 = swift_retain();
      v25 = DTTransportDaemon.__allocating_init(daemon:environment:)(v24, v20);
      *(_QWORD *)(v0 + 392) = v25;
      *v10 = v25;
      swift_retain();
      swift_release();
      v26 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 400) = v26;
      *v26 = v0;
      v26[1] = sub_23A53FEB0;
      return DTTransportDaemon.activate()();
    }
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 280);
    v13 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 272);
    v16 = *(_QWORD *)(v0 + 264) + *(_QWORD *)(v0 + 360);
    type metadata accessor for DTTimerDaemon();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v16, v15);
    v17 = swift_retain();
    v18 = DTTimerDaemon.__allocating_init(daemon:environment:)(v17, v13);
    *(_QWORD *)(v0 + 376) = v18;
    *v9 = v18;
    swift_retain();
    swift_release();
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 384) = v19;
    *v19 = v0;
    v19[1] = sub_23A53FB84;
    return DTTimerDaemon.activate()();
  }
}

uint64_t sub_23A53FB84()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A53FBD0()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v1 = (_QWORD **)(*(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__subDaemons);
  swift_beginAccess();
  v2 = *v1;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_23A540E98(0, v2[2] + 1, 1, v2);
    *v1 = v2;
  }
  v5 = v2[2];
  v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    v2 = sub_23A540E98((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
    *v1 = v2;
  }
  v6 = *(_QWORD *)(v0 + 376);
  v7 = sub_23A52EAEC(&qword_256993550, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&unk_23A5A1628);
  v2[2] = v5 + 1;
  v8 = &v2[2 * v5];
  v8[4] = v6;
  v8[5] = v7;
  swift_endAccess();
  swift_release();
  v9 = (_QWORD *)(*(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_transportDaemon);
  swift_beginAccess();
  if (*v9)
  {
    v10 = (uint64_t *)(*(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_xpcServer);
    swift_beginAccess();
    if (*v10)
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      v20 = *(_QWORD *)(v0 + 280);
      v19 = *(_QWORD *)(v0 + 288);
      v21 = *(_QWORD *)(v0 + 272);
      v22 = *(_QWORD *)(v0 + 264) + *(_QWORD *)(v0 + 360);
      type metadata accessor for DTXPCServer();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v22, v21);
      v23 = swift_retain();
      v24 = DTXPCServer.__allocating_init(daemon:environment:)(v23, v19);
      *(_QWORD *)(v0 + 408) = v24;
      *v10 = v24;
      swift_retain();
      swift_release();
      v25 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 416) = v25;
      *v25 = v0;
      v25[1] = sub_23A540110;
      return DTXPCServer.activate()();
    }
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 280);
    v12 = *(_QWORD *)(v0 + 288);
    v14 = *(_QWORD *)(v0 + 272);
    v15 = *(_QWORD *)(v0 + 264) + *(_QWORD *)(v0 + 360);
    type metadata accessor for DTTransportDaemon(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
    v16 = swift_retain();
    v17 = DTTransportDaemon.__allocating_init(daemon:environment:)(v16, v12);
    *(_QWORD *)(v0 + 392) = v17;
    *v9 = v17;
    swift_retain();
    swift_release();
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 400) = v18;
    *v18 = v0;
    v18[1] = sub_23A53FEB0;
    return DTTransportDaemon.activate()();
  }
}

uint64_t sub_23A53FEB0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A53FEFC()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = (_QWORD **)(*(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__subDaemons);
  swift_beginAccess();
  v2 = *v1;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_23A540E98(0, v2[2] + 1, 1, v2);
    *v1 = v2;
  }
  v5 = v2[2];
  v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    v2 = sub_23A540E98((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
    *v1 = v2;
  }
  v6 = *(_QWORD *)(v0 + 392);
  v7 = sub_23A52EAEC(&qword_256993548, type metadata accessor for DTTransportDaemon, (uint64_t)&unk_23A5A0C00);
  v2[2] = v5 + 1;
  v8 = &v2[2 * v5];
  v8[4] = v6;
  v8[5] = v7;
  swift_endAccess();
  swift_release();
  v9 = (uint64_t *)(*(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_xpcServer);
  swift_beginAccess();
  if (*v9)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 280);
    v11 = *(_QWORD *)(v0 + 288);
    v13 = *(_QWORD *)(v0 + 272);
    v14 = *(_QWORD *)(v0 + 264) + *(_QWORD *)(v0 + 360);
    type metadata accessor for DTXPCServer();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
    v15 = swift_retain();
    v16 = DTXPCServer.__allocating_init(daemon:environment:)(v15, v11);
    *(_QWORD *)(v0 + 408) = v16;
    *v9 = v16;
    swift_retain();
    swift_release();
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v17;
    *v17 = v0;
    v17[1] = sub_23A540110;
    return DTXPCServer.activate()();
  }
}

uint64_t sub_23A540110()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A54015C()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = (_QWORD **)(*(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__subDaemons);
  swift_beginAccess();
  v2 = *v1;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_23A540E98(0, v2[2] + 1, 1, v2);
    *v1 = v2;
  }
  v5 = v2[2];
  v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    v2 = sub_23A540E98((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
    *v1 = v2;
  }
  v6 = *(_QWORD *)(v0 + 408);
  v7 = sub_23A52EAEC(&qword_256993540, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCServer, (uint64_t)&unk_23A5A16F8);
  v2[2] = v5 + 1;
  v8 = &v2[2 * v5];
  v8[4] = v6;
  v8[5] = v7;
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A540298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  dispatch_semaphore_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[5];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v23 - v4;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return 63;
  v7 = Strong;
  if (qword_2569970E0 != -1)
    swift_once();
  v8 = sub_23A59E6A4();
  __swift_project_value_buffer(v8, (uint64_t)qword_2569970E8);
  v9 = sub_23A59E68C();
  v10 = sub_23A59EBC0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_23A52C000, v9, v10, "Generating state dump", v11, 2u);
    MEMORY[0x23B852178](v11, -1, -1);
  }

  type metadata accessor for DTDaemon.OutputWrapper();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  v13 = dispatch_semaphore_create(0);
  v23[0] = sub_23A59E560();
  v14 = sub_23A59EAB8();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v5, 1, 1, v14);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v12;
  v16[3] = v7;
  v16[4] = v13;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v3, 1, v14);
  swift_retain();
  swift_retain();
  v18 = v13;
  if (v17 == 1)
  {
    sub_23A541284((uint64_t)v3);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v14);
  }
  v20 = sub_23A52EAEC((unint64_t *)&qword_256993940, (uint64_t (*)(uint64_t))sub_23A540FA4, MEMORY[0x24BE2D540]);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_256993700;
  *(_QWORD *)(v21 + 24) = v16;
  v23[1] = 6;
  v23[2] = 0;
  v23[3] = v23[0];
  v23[4] = v20;
  swift_task_create();
  swift_release();
  sub_23A59EC08();
  if (*(_QWORD *)(v12 + 24))
  {
    v19 = *(_QWORD *)(v12 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = 63;
  }
  swift_release();
  swift_release();

  return v19;
}

uint64_t sub_23A5405CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v4[2] = a2;
  v4[3] = a4;
  v5 = (_QWORD *)swift_task_alloc();
  v4[4] = v5;
  *v5 = v4;
  v5[1] = sub_23A540618;
  return DTDaemon.summary.getter();
}

uint64_t sub_23A540618(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A540674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v2 + 24) = v1;
  swift_bridgeObjectRelease();
  sub_23A59EC14();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTDaemon.invalidate()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[17] = v0;
  sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
  v1[18] = sub_23A59EA7C();
  v1[19] = v2;
  return swift_task_switch();
}

uint64_t sub_23A540720()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  _QWORD *v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t (*v23)(uint64_t, uint64_t);

  if (qword_2569970E0 != -1)
    swift_once();
  v1 = sub_23A59E6A4();
  __swift_project_value_buffer(v1, (uint64_t)qword_2569970E8);
  v2 = sub_23A59E68C();
  v3 = sub_23A59EBC0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23A52C000, v2, v3, "Invalidate", v4, 2u);
    MEMORY[0x23B852178](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 136);

  v6 = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__osStateHandler;
  v7 = *(void **)(v5 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__osStateHandler);
  if (v7)
  {
    objc_msgSend(v7, sel_remove);
    v8 = *(void **)(v5 + v6);
  }
  else
  {
    v8 = 0;
  }
  v9 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v5 + v6) = 0;

  v10 = (uint64_t *)(v9 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__subDaemons);
  swift_beginAccess();
  v11 = *v10;
  *(_QWORD *)(v0 + 160) = *v10;
  *v10 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v0 + 168) = v12;
  if (v12)
  {
    *(_QWORD *)(v0 + 176) = 0;
    v13 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 184) = *(_QWORD *)(v13 + 32);
    v14 = *(_QWORD *)(v13 + 40);
    ObjectType = swift_getObjectType();
    v23 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v14 + 32) + *(_QWORD *)(v14 + 32));
    swift_unknownObjectRetain();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v16;
    *v16 = v0;
    v16[1] = sub_23A5409D0;
    return v23(ObjectType, v14);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 136);
    swift_bridgeObjectRelease();
    v19 = (_QWORD *)(v18 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_syncDaemon);
    swift_beginAccess();
    *v19 = 0;
    swift_release();
    v20 = (_QWORD *)(v18 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon);
    swift_beginAccess();
    *v20 = 0;
    swift_release();
    v21 = (_QWORD *)(v18 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_transportDaemon);
    swift_beginAccess();
    *v21 = 0;
    swift_release();
    v22 = (_QWORD *)(v18 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_xpcServer);
    swift_beginAccess();
    *v22 = 0;
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A5409D0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A540A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 168);
  swift_unknownObjectRelease();
  if (v1 + 1 == v2)
  {
    v3 = *(_QWORD *)(v0 + 136);
    swift_bridgeObjectRelease();
    v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_syncDaemon);
    swift_beginAccess();
    *v4 = 0;
    swift_release();
    v5 = (_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon);
    swift_beginAccess();
    *v5 = 0;
    swift_release();
    v6 = (_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_transportDaemon);
    swift_beginAccess();
    *v6 = 0;
    swift_release();
    v7 = (_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_xpcServer);
    swift_beginAccess();
    *v7 = 0;
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 176) + 1;
    *(_QWORD *)(v0 + 176) = v9;
    v10 = *(_QWORD *)(v0 + 160) + 16 * v9;
    *(_QWORD *)(v0 + 184) = *(_QWORD *)(v10 + 32);
    v11 = *(_QWORD *)(v10 + 40);
    ObjectType = swift_getObjectType();
    v14 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v11 + 32) + *(_QWORD *)(v11 + 32));
    swift_unknownObjectRetain();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v13;
    *v13 = v0;
    v13[1] = sub_23A5409D0;
    return v14(ObjectType, v11);
  }
}

uint64_t DTDaemon.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__environment;
  v2 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DTDaemon.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon__environment;
  v2 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23A540D1C()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

uint64_t sub_23A540D68()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_23A540D8C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  swift_release();
  v3 = (void *)sub_23A59E998();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_23A540DE8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23A540E4C;
  return v6(a1);
}

uint64_t sub_23A540E4C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

_QWORD *sub_23A540E98(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256993710);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23A541358(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_23A540FA4()
{
  unint64_t result;

  result = qword_256993A10;
  if (!qword_256993A10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256993A10);
  }
  return result;
}

unint64_t sub_23A540FE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256993570;
  if (!qword_256993570)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256993568);
    result = MEMORY[0x23B8520D0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256993570);
  }
  return result;
}

uint64_t sub_23A54102C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A541050()
{
  return sub_23A540298();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_23A541070()
{
  return type metadata accessor for DTDaemon();
}

uint64_t sub_23A541078()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A59E5B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DTDaemon()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DTDaemon.__allocating_init(environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_23A541124()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t type metadata accessor for DTDaemon.OutputWrapper()
{
  return objc_opt_self();
}

uint64_t sub_23A54118C()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23A5411C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541460;
  v4[2] = v2;
  v4[3] = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v4[4] = v5;
  *v5 = v4;
  v5[1] = sub_23A540618;
  return DTDaemon.summary.getter();
}

uint64_t sub_23A54123C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A541284(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23A5412C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A5412E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A541124;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256993950 + dword_256993950))(a1, v4);
}

uint64_t sub_23A541358(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256993718);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

uint64_t sub_23A541464()
{
  uint64_t v0;

  v0 = sub_23A59E6A4();
  __swift_allocate_value_buffer(v0, qword_2569971B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2569971B8);
  sub_23A59E3F8();
  return sub_23A59E698();
}

uint64_t DTXPCConnection.bundleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23A541500@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__invalidationHandler);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A548E90;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23A5416A4(v4);
}

uint64_t sub_23A541594(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A548E90;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__invalidationHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_23A5416A4(v3);
  return sub_23A541710(v8);
}

uint64_t DTXPCConnection._invalidationHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__invalidationHandler);
  swift_beginAccess();
  v2 = *v1;
  sub_23A5416A4(*v1);
  return v2;
}

uint64_t sub_23A5416A4(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t DTXPCConnection._invalidationHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__invalidationHandler);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_23A541710(v6);
}

uint64_t sub_23A541710(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t (*DTXPCConnection._invalidationHandler.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t DTXPCConnection.unownedExecutor.getter()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

uint64_t DTXPCConnection.xpcInstanceID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23A549090(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection_xpcInstanceID, a1, &qword_256993720);
}

uint64_t DTXPCConnection.__allocating_init(xpcConnection:daemon:environment:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  DTXPCConnection.init(xpcConnection:daemon:environment:)(a1, a2, a3);
  return v6;
}

uint64_t DTXPCConnection.init(xpcConnection:daemon:environment:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _xpc_connection_s *v23;
  pid_t pid;
  uint64_t v25;
  int peer_instance;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  BOOL v33;
  BOOL v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD v46[2];
  uint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = v3;
  v55 = *MEMORY[0x24BDAC8D0];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_weakInit();
  *(_BYTE *)(v3 + 56) = 0;
  v11 = (_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__invalidationHandler);
  *v11 = 0;
  v11[1] = 0;
  v12 = v3 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__lastContext;
  v13 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = v3 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__lastRequest;
  v15 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = v3 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__monitorContext;
  v17 = sub_23A59E4F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__monitoringTransaction) = 0;
  sub_23A59E3C8();
  *(_BYTE *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcInvalidated) = 0;
  v46[1] = a2;
  swift_weakAssign();
  v18 = v3 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__environment;
  v19 = sub_23A59E5B4();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v47 = a3;
  v21(v18, a3, v19);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993728);
  sub_23A59E284();
  v23 = (_xpc_connection_s *)v51;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcConnection) = v51;
  pid = xpc_connection_get_pid(v23);
  v25 = OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__pid;
  *(_DWORD *)(v4 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__pid) = pid;
  v53 = 0;
  v54 = 0;
  sub_23A59E284();
  peer_instance = xpc_connection_get_peer_instance();
  swift_unknownObjectRelease();
  if (peer_instance)
  {
    sub_23A59E248();
    v27 = sub_23A59E260();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 0, 1, v27);
  }
  else
  {
    v28 = sub_23A59E260();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 1, 1, v28);
  }
  sub_23A53AAEC((uint64_t)v10, v4 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection_xpcInstanceID, &qword_256993720);
  v51 = 0u;
  v52 = 0u;
  xpc_connection_get_audit_token();
  v29 = (void *)xpc_copy_entitlement_for_token();
  if (v29)
  {
    swift_unknownObjectRetain();
    sub_23A59E410();
    v30 = sub_23A59E9B0();
    swift_bridgeObjectRelease();
    v31 = xpc_dictionary_get_BOOL(v29, (const char *)(v30 + 32));
    swift_release();
    if (v31
      || (sub_23A59E434(),
          v32 = sub_23A59E9B0(),
          swift_bridgeObjectRelease(),
          v33 = xpc_dictionary_get_BOOL(v29, (const char *)(v32 + 32)),
          swift_release(),
          v33))
    {
      v34 = 1;
    }
    else
    {
      sub_23A59E3E0();
      v35 = sub_23A59E9B0();
      swift_bridgeObjectRelease();
      v34 = xpc_dictionary_get_BOOL(v29, (const char *)(v35 + 32));
      swift_release();
    }
    swift_unknownObjectRelease();
    *(_BYTE *)(v4 + 56) = v34;
    v36 = (void *)swift_unknownObjectRetain();
    if (xpc_dictionary_get_string(v36, "application-identifier"))
    {
      v37 = sub_23A59E9EC();
      v39 = v38;
      swift_unknownObjectRelease();
LABEL_15:
      *(_QWORD *)(v4 + 16) = v37;
      *(_QWORD *)(v4 + 24) = v39;
      goto LABEL_16;
    }
    swift_unknownObjectRelease();
  }
  v40 = xpc_copy_code_signing_identity_for_token();
  if (!v40)
  {
    v37 = 63;
    v39 = 0xE100000000000000;
    goto LABEL_15;
  }
  v41 = (void *)v40;
  v37 = sub_23A59E9EC();
  v39 = v42;
  *(_QWORD *)(v4 + 16) = v37;
  *(_QWORD *)(v4 + 24) = v42;
  free(v41);
LABEL_16:
  v49 = v37;
  v50 = v39;
  swift_bridgeObjectRetain();
  sub_23A59E9E0();
  v48 = *(_DWORD *)(v4 + v25);
  sub_23A59F034();
  sub_23A59E9E0();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v43 = v49;
  v44 = v50;
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v47, v19);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1, v22);
  *(_QWORD *)(v4 + 32) = v43;
  *(_QWORD *)(v4 + 40) = v44;
  return v4;
}

BOOL static DTXPCConnection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t DTXPCConnection.hash(into:)()
{
  return sub_23A59F0F4();
}

uint64_t DTXPCConnection.summary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993730);
  MEMORY[0x24BDAC7A8](v2);
  v54 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23A59E680();
  v5 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  v56 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993738);
  MEMORY[0x24BDAC7A8](v7);
  v49 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A59E530();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v46 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23A59E260();
  v48 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v45 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993740);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23A59E4F4();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23A59E2B4();
  v52 = *(_QWORD *)(v23 - 8);
  v53 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = 0;
  v63 = 0xE000000000000000;
  sub_23A59E2A8();
  v26 = *(_QWORD *)(v0 + 24);
  v60 = *(_QWORD *)(v0 + 16);
  v61 = v26;
  swift_bridgeObjectRetain();
  sub_23A59E9E0();
  LODWORD(v58) = *(_DWORD *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__pid);
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__monitoringTransaction))
    sub_23A59E9BC();
  v27 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__monitorContext;
  swift_beginAccess();
  sub_23A549090(v27, (uint64_t)v18, (uint64_t *)&unk_256993740);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_23A53B9B4((uint64_t)v18, (uint64_t *)&unk_256993740);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    v58 = 0x4449746E65696C63;
    v59 = 0xE90000000000003DLL;
    v57 = sub_23A59E4E8();
    sub_23A59F034();
    sub_23A59E9E0();
    swift_bridgeObjectRelease();
    sub_23A59E9BC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  v28 = v56;
  v29 = v51;
  sub_23A549090(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection_xpcInstanceID, (uint64_t)v13, &qword_256993720);
  v30 = v48;
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v13, 1, v14);
  v32 = v50;
  if (v31 == 1)
  {
    sub_23A53B9B4((uint64_t)v13, &qword_256993720);
  }
  else
  {
    v33 = v45;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v45, v13, v14);
    v58 = 0x65636E6174736E69;
    v59 = 0xEB000000003D4449;
    sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_23A59F034();
    sub_23A59E9E0();
    swift_bridgeObjectRelease();
    sub_23A59E9BC();
    swift_bridgeObjectRelease();
    v34 = v33;
    v28 = v56;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v14);
  }
  v35 = v55;
  v36 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__lastContext;
  swift_beginAccess();
  v37 = v36;
  v38 = v49;
  sub_23A549090(v37, v49, &qword_256993738);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v38, 1, v29) == 1)
  {
    sub_23A53B9B4(v38, &qword_256993738);
  }
  else
  {
    v39 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v46, v38, v29);
    sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
    sub_23A59F034();
    sub_23A59E9BC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v29);
  }
  v40 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__lastRequest;
  swift_beginAccess();
  v41 = v40;
  v42 = v54;
  sub_23A549090(v41, v54, &qword_256993730);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v42, 1, v35) == 1)
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v53);
    sub_23A53B9B4(v42, &qword_256993730);
  }
  else
  {
    v43 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v47, v42, v35);
    sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
    sub_23A59F034();
    sub_23A59E9BC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v43, v35);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v53);
  }
  return v62;
}

uint64_t DTXPCConnection.setInvalidationHandler(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__invalidationHandler);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  sub_23A541710(v6);
  return swift_retain();
}

Swift::Void __swiftcall DTXPCConnection.activate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  _xpc_connection_s *v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A59E260();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v39 - v10;
  v11 = sub_23A59E914();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v14 = sub_23A59E560();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v15 = sub_23A59E92C();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
LABEL_4:
    v20 = sub_23A59E6A4();
    __swift_project_value_buffer(v20, (uint64_t)qword_2569971B8);
    swift_retain();
    v21 = sub_23A59E68C();
    v22 = sub_23A59EB9C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      aBlock[0] = v24;
      *(_DWORD *)v23 = 136315138;
      v25 = *(_QWORD *)(v1 + 32);
      v26 = *(_QWORD *)(v1 + 40);
      swift_bridgeObjectRetain();
      v42 = sub_23A538FBC(v25, v26, aBlock);
      sub_23A59ED1C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v21, v22, "XPC connection started: client=%s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v24, -1, -1);
      MEMORY[0x23B852178](v23, -1, -1);

    }
    else
    {

      swift_release();
    }
    return;
  }
  v16 = *(_xpc_connection_s **)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcConnection);
  v17 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = (uint64_t)sub_23A542D44;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23A5437D8;
  aBlock[3] = (uint64_t)&block_descriptor_0;
  v18 = _Block_copy(aBlock);
  swift_release();
  xpc_connection_set_event_handler(v16, v18);
  _Block_release(v18);
  v19 = sub_23A59E560();
  xpc_connection_set_target_queue(v16, v19);

  xpc_connection_activate(v16);
  sub_23A549090(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection_xpcInstanceID, (uint64_t)v4, &qword_256993720);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23A53B9B4((uint64_t)v4, &qword_256993720);
    if (qword_2569971B0 == -1)
      goto LABEL_4;
    goto LABEL_13;
  }
  v27 = v41;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v41, v4, v5);
  if (qword_2569971B0 != -1)
    swift_once();
  v28 = sub_23A59E6A4();
  __swift_project_value_buffer(v28, (uint64_t)qword_2569971B8);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v27, v5);
  swift_retain_n();
  v29 = sub_23A59E68C();
  v30 = sub_23A59EB9C();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    aBlock[0] = v40;
    *(_DWORD *)v31 = 136315394;
    v33 = *(_QWORD *)(v1 + 32);
    v32 = *(_QWORD *)(v1 + 40);
    swift_bridgeObjectRetain();
    v42 = sub_23A538FBC(v33, v32, aBlock);
    sub_23A59ED1C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    v34 = sub_23A59E20C();
    v42 = sub_23A538FBC(v34, v35, aBlock);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    v36 = *(void (**)(char *, uint64_t))(v6 + 8);
    v36(v9, v5);
    _os_log_impl(&dword_23A52C000, v29, v30, "XPC connection started: client=%s, instanceID=%s", (uint8_t *)v31, 0x16u);
    v37 = v40;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v37, -1, -1);
    MEMORY[0x23B852178](v31, -1, -1);

    v36(v41, v5);
  }
  else
  {

    v38 = *(void (**)(char *, uint64_t))(v6 + 8);
    v38(v9, v5);
    swift_release_n();
    v38(v27, v5);
  }
}

uint64_t sub_23A542A38()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A542A5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993728);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - v13;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v16 = result;
    v31 = a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994C80);
    sub_23A59E290();
    v25 = sub_23A59E560();
    v17 = sub_23A59EAB8();
    v18 = v14;
    v19 = *(_QWORD *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v7, 1, 1, v17);
    v20 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v26 = v18;
    v20(v12, v18, v8);
    v21 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v16;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v22 + v21, v12, v8);
    sub_23A53AAEC((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_256993920);
    LODWORD(v21) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v5, 1, v17);
    swift_retain();
    if ((_DWORD)v21 == 1)
    {
      sub_23A53B9B4((uint64_t)v5, (uint64_t *)&unk_256993920);
    }
    else
    {
      sub_23A59EAAC();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v17);
    }
    v23 = sub_23A52EAEC((unint64_t *)&qword_256993940, (uint64_t (*)(uint64_t))sub_23A540FA4, MEMORY[0x24BE2D540]);
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = &unk_256993938;
    *(_QWORD *)(v24 + 24) = v22;
    v27 = 6;
    v28 = 0;
    v29 = v25;
    v30 = v23;
    swift_task_create();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v26, v8);
  }
  return result;
}

uint64_t sub_23A542D44(uint64_t a1)
{
  return sub_23A542A5C(a1);
}

uint64_t sub_23A542D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_23A541460;
  return sub_23A542DA0(a3);
}

uint64_t sub_23A542DA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[18] = a1;
  v2[19] = v1;
  sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
  v2[20] = sub_23A59EA7C();
  v2[21] = v3;
  return swift_task_switch();
}

uint64_t sub_23A542E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint8_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256993728);
  sub_23A59E284();
  v1 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 176) = v1;
  v2 = MEMORY[0x23B85234C](v1);
  if (v2 == sub_23A59E6BC())
  {
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v14;
    *v14 = v0;
    v14[1] = sub_23A54327C;
    return sub_23A544DD0(v1);
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  v3 = sub_23A59E6C8();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v1 == v3)
  {
    if (qword_2569971B0 != -1)
      swift_once();
    v16 = sub_23A59E6A4();
    __swift_project_value_buffer(v16, (uint64_t)qword_2569971B8);
    swift_retain();
    v17 = sub_23A59E68C();
    v18 = sub_23A59EB9C();
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(_QWORD *)(v0 + 152);
    if (v19)
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v26 = v25;
      *(_DWORD *)v21 = 136315138;
      v23 = *(_QWORD *)(v20 + 32);
      v22 = *(_QWORD *)(v20 + 40);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 136) = sub_23A538FBC(v23, v22, &v26);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_23A52C000, v17, v18, "XPC connection ended: client=%s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v25, -1, -1);
      MEMORY[0x23B852178](v21, -1, -1);
    }
    else
    {
      swift_release();
    }

    *(_BYTE *)(*(_QWORD *)(v0 + 152) + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcInvalidated) = 1;
    DTXPCConnection.invalidate()();
    goto LABEL_15;
  }
  if (qword_2569971B0 != -1)
    swift_once();
  v4 = sub_23A59E6A4();
  __swift_project_value_buffer(v4, (uint64_t)qword_2569971B8);
  swift_unknownObjectRetain_n();
  swift_retain_n();
  v5 = sub_23A59E68C();
  v6 = sub_23A59EBB4();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 152);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26 = v24;
    *(_DWORD *)v9 = 136315394;
    v10 = sub_23A59EB90();
    *(_QWORD *)(v0 + 120) = sub_23A538FBC(v10, v11, &v26);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    v12 = *(_QWORD *)(v8 + 32);
    v13 = *(_QWORD *)(v8 + 40);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 128) = sub_23A538FBC(v12, v13, &v26);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23A52C000, v5, v6, "### XPC connection error: xpc=%s, client=%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v24, -1, -1);
    MEMORY[0x23B852178](v9, -1, -1);

LABEL_15:
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_unknownObjectRelease_n();
  swift_release_n();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54327C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5432DC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54330C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  xpc_object_t v15;
  void *v16;
  void *v17;
  os_log_type_t type;
  uint64_t v20;
  uint64_t v21[2];

  if (qword_2569971B0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 192);
  v2 = sub_23A59E6A4();
  __swift_project_value_buffer(v2, (uint64_t)qword_2569971B8);
  v3 = v1;
  v4 = v1;
  swift_retain();
  v5 = sub_23A59E68C();
  v6 = sub_23A59EBB4();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 152);
  if (v7)
  {
    v10 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21[0] = v20;
    *(_DWORD *)v10 = 136315394;
    type = v6;
    v11 = *(_QWORD *)(v9 + 32);
    v12 = *(_QWORD *)(v9 + 40);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_23A538FBC(v11, v12, v21);
    sub_23A59ED1C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_getErrorValue();
    v13 = sub_23A59F0C4();
    *(_QWORD *)(v0 + 104) = sub_23A538FBC(v13, v14, v21);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A52C000, v5, type, "### XPC error reply: client=%s, error=%s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v20, -1, -1);
    MEMORY[0x23B852178](v10, -1, -1);
  }
  else
  {
    swift_release();

  }
  if (xpc_dictionary_expects_reply())
  {
    v15 = sub_23A544C24(*(void **)(v0 + 176));
    if (v15)
    {
      v16 = v15;
      sub_23A59E3B0();
      xpc_connection_send_message(*(xpc_connection_t *)(*(_QWORD *)(v0 + 152)+ OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcConnection), v16);
      swift_unknownObjectRelease();
    }
  }
  v17 = *(void **)(v0 + 192);
  swift_unknownObjectRelease();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5437D8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

Swift::Void __swiftcall DTXPCConnection.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[32];

  v1 = v0;
  v2 = sub_23A59E914();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)&v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v5 = sub_23A59E560();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v6 = sub_23A59E92C();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v7 = OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcInvalidated;
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcInvalidated) & 1) == 0)
      xpc_connection_cancel(*(xpc_connection_t *)(v1
                                                + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcConnection));
    if (swift_weakLoadStrong())
    {
      sub_23A5439C0((uint64_t)sub_23A548B94, v1);
      swift_release();
    }
    if (*(_BYTE *)(v1 + v7) == 1)
    {
      v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__invalidationHandler);
      swift_beginAccess();
      v9 = (void (*)(uint64_t))*v8;
      if (*v8)
      {
        v10 = swift_retain();
        v9(v10);
        sub_23A541710((uint64_t)v9);
        v11 = *v8;
      }
      else
      {
        v11 = 0;
      }
      *v8 = 0;
      v8[1] = 0;
      sub_23A541710(v11);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23A5439C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;

  sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
  sub_23A59EA7C();
  if ((swift_task_isCurrentExecutor() & 1) != 0)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 24) = a2;
    v7 = sub_23A548AFC((void (*)(uint64_t *__return_ptr, uint64_t))sub_23A548EC0, v6, v2);
    if (v3)
    {
      swift_release();
      return v7 & 1;
    }
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return v7 & 1;
    __break(1u);
  }
  sub_23A59EE00();
  sub_23A59E9E0();
  sub_23A59EEB4();
  sub_23A59E9E0();
  result = sub_23A59EECC();
  __break(1u);
  return result;
}

uint64_t sub_23A543B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char isEscapingClosureAtFileLocation;

  swift_getObjectType();
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  sub_23A59EA7C();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    goto LABEL_6;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23A548F60;
  *(_QWORD *)(v6 + 24) = v5;
  swift_retain();
  sub_23A548F60();
  if (v2)
  {
    swift_release();
    return swift_release();
  }
  swift_release();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_6:
    sub_23A59EE00();
    sub_23A59E9E0();
    sub_23A59EEB4();
    sub_23A59E9E0();
    result = sub_23A59EECC();
    __break(1u);
  }
  return result;
}

uint64_t sub_23A543D70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_23A59E5C0();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
  v3[11] = sub_23A59EA7C();
  v3[12] = v5;
  return swift_task_switch();
}

uint64_t sub_23A543E08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t Strong;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, v0[6], v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == *MEMORY[0x24BE2D3E8] || v4 == *MEMORY[0x24BE2D3E0])
  {
    Strong = swift_weakLoadStrong();
    v0[13] = Strong;
    if (Strong)
    {
      v0[14] = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_syncDaemon;
      type metadata accessor for DTDaemon();
      sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
      sub_23A59EA7C();
      return swift_task_switch();
    }
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    goto LABEL_13;
  }
  if (v4 != *MEMORY[0x24BE2D3F0])
  {
    v11 = v0[9];
    v10 = v0[10];
    v12 = v0[8];
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
LABEL_13:
    swift_task_dealloc();
    v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  v8 = swift_weakLoadStrong();
  v0[18] = v8;
  if (v8)
  {
    v9 = (_QWORD *)swift_task_alloc();
    v0[19] = v9;
    *v9 = v0;
    v9[1] = sub_23A54426C;
    return DTDaemon.summary.getter();
  }
  v14 = (uint64_t *)v0[5];
  v15 = sub_23A59E4C4();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2F0];
  v14[3] = v15;
  v14[4] = sub_23A52EAEC(&qword_256993998, v16, MEMORY[0x24BE2D2E8]);
  __swift_allocate_boxed_opaque_existential_1(v14);
  sub_23A59E47C();
  v17 = *MEMORY[0x24BE2D368];
  v18 = sub_23A59E53C();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 104))(v14, v17, v18);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
  swift_task_dealloc();
  v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_23A5440C4()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[13] + v0[14]);
  swift_beginAccess();
  v0[15] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A544124()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v2;
    *v2 = v0;
    v2[1] = sub_23A5441F4;
    return DTSyncDaemon.handleDiagnosticsRequest(_:)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  else
  {
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A5441F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 136) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A54426C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 168) = a2;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5442CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(uint64_t **)(v0 + 40);
  v2 = sub_23A59E4C4();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2F0];
  v1[3] = v2;
  v1[4] = sub_23A52EAEC(&qword_256993998, v3, MEMORY[0x24BE2D2E8]);
  __swift_allocate_boxed_opaque_existential_1(v1);
  sub_23A59E47C();
  v4 = *MEMORY[0x24BE2D368];
  v5 = sub_23A59E53C();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104))(v1, v4, v5);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54439C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTXPCConnection.report(eventType:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v16 = a1;
  v3 = sub_23A59E4AC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993740);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A59E4F4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v2 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__monitorContext;
  swift_beginAccess();
  sub_23A549090(v14, (uint64_t)v9, (uint64_t *)&unk_256993740);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_23A53B9B4((uint64_t)v9, (uint64_t *)&unk_256993740);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  sub_23A59E4E8();
  sub_23A59E494();
  DTXPCConnection.report(monitorEvent:)((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t DTXPCConnection.report(monitorEvent:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *empty;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42[2];

  v3 = sub_23A59E4AC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v35 - v7;
  v8 = sub_23A59E680();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993740);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__monitorContext;
  swift_beginAccess();
  sub_23A549090(v15, (uint64_t)v14, (uint64_t *)&unk_256993740);
  v16 = sub_23A59E4F4();
  LODWORD(v15) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16);
  result = sub_23A53B9B4((uint64_t)v14, (uint64_t *)&unk_256993740);
  if ((_DWORD)v15 != 1)
  {
    v37 = a1;
    v38 = v4;
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v19 = v3;
    v18(v11, a1, v3);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE2D4C8], v8);
    empty = (char *)xpc_dictionary_create_empty();
    sub_23A52EAEC((unint64_t *)&unk_256993760, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D518]);
    sub_23A59E3BC();
    v40 = empty;
    if (qword_2569971B0 != -1)
      swift_once();
    v21 = sub_23A59E6A4();
    __swift_project_value_buffer(v21, (uint64_t)qword_2569971B8);
    v22 = v39;
    v18(v39, v37, v19);
    v23 = v1;
    swift_retain_n();
    v24 = sub_23A59E68C();
    v25 = sub_23A59EBC0();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc();
      LODWORD(v37) = v26;
      v28 = v22;
      v29 = v27;
      v36 = swift_slowAlloc();
      v42[0] = v36;
      *(_DWORD *)v29 = 136315394;
      v35 = v29 + 4;
      sub_23A52EAEC(&qword_2569943C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2D0], MEMORY[0x24BE2D2D8]);
      v30 = sub_23A59F034();
      v41 = sub_23A538FBC(v30, v31, v42);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v19);
      *(_WORD *)(v29 + 12) = 2080;
      v32 = *(_QWORD *)(v1 + 32);
      v33 = *(_QWORD *)(v23 + 40);
      swift_bridgeObjectRetain();
      v41 = sub_23A538FBC(v32, v33, v42);
      sub_23A59ED1C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v24, (os_log_type_t)v37, "Report event: %s, client=%s", (uint8_t *)v29, 0x16u);
      v34 = v36;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v34, -1, -1);
      MEMORY[0x23B852178](v29, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v19);

      swift_release_n();
    }
    xpc_connection_send_message(*(xpc_connection_t *)(v23 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcConnection), v40);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

xpc_object_t sub_23A544C24(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  xpc_object_t result;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v2 = v1;
  result = xpc_dictionary_create_reply(a1);
  if (!result)
  {
    if (qword_2569971B0 != -1)
      swift_once();
    v4 = sub_23A59E6A4();
    __swift_project_value_buffer(v4, (uint64_t)qword_2569971B8);
    swift_retain();
    v5 = sub_23A59E68C();
    v6 = sub_23A59EBB4();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = *(_QWORD *)(v2 + 32);
      v10 = *(_QWORD *)(v2 + 40);
      swift_bridgeObjectRetain();
      sub_23A538FBC(v9, v10, &v11);
      sub_23A59ED1C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v5, v6, "### XPC create reply failed: client=%s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v8, -1, -1);
      MEMORY[0x23B852178](v7, -1, -1);

    }
    else
    {

      swift_release();
    }
    return 0;
  }
  return result;
}

uint64_t sub_23A544DD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[29] = a1;
  v2[30] = v1;
  v3 = sub_23A59E53C();
  v2[31] = v3;
  v2[32] = *(_QWORD *)(v3 - 8);
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v4 = sub_23A59E5C0();
  v2[35] = v4;
  v2[36] = *(_QWORD *)(v4 - 8);
  v2[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993740);
  v2[38] = swift_task_alloc();
  v5 = sub_23A59E4F4();
  v2[39] = v5;
  v2[40] = *(_QWORD *)(v5 - 8);
  v2[41] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256993978);
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  v2[47] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256993730);
  v2[48] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256993738);
  v2[49] = swift_task_alloc();
  v6 = sub_23A59E680();
  v2[50] = v6;
  v2[51] = *(_QWORD *)(v6 - 8);
  v2[52] = swift_task_alloc();
  v2[53] = swift_task_alloc();
  v7 = sub_23A59E530();
  v2[54] = v7;
  v2[55] = *(_QWORD *)(v7 - 8);
  v2[56] = swift_task_alloc();
  v8 = sub_23A59E458();
  v2[57] = v8;
  v2[58] = *(_QWORD *)(v8 - 8);
  v2[59] = swift_task_alloc();
  v2[60] = swift_task_alloc();
  sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
  v2[61] = sub_23A59EA7C();
  v2[62] = v9;
  return swift_task_switch();
}

uint64_t sub_23A545034()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  int v30;
  _QWORD *v31;
  uint64_t v32;
  id *v33;
  uint64_t v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  unint64_t v104;

  if (*(_BYTE *)(v0[30] + 56) != 1)
  {
    sub_23A59E614();
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    v103 = 0xD000000000000015;
    v104 = 0x800000023A5A1E50;
    sub_23A59E410();
    sub_23A59E9E0();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();
    goto LABEL_7;
  }
  v0[63] = OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcCoder;
  sub_23A52EAEC(&qword_256993980, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D278], MEMORY[0x24BE2D280]);
  sub_23A59E398();
  if (qword_2569971B0 != -1)
    swift_once();
  v2 = v0[59];
  v1 = v0[60];
  v4 = v0[57];
  v3 = v0[58];
  v5 = sub_23A59E6A4();
  __swift_project_value_buffer(v5, (uint64_t)qword_2569971B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  v6 = sub_23A59E68C();
  v7 = sub_23A59EB9C();
  v8 = os_log_type_enabled(v6, v7);
  v10 = v0[58];
  v9 = v0[59];
  v11 = v0[57];
  if (v8)
  {
    v89 = v0 + 28;
    v12 = (uint8_t *)swift_slowAlloc();
    v93 = v0;
    v13 = swift_slowAlloc();
    v103 = v13;
    *(_DWORD *)v12 = 136315138;
    sub_23A52EAEC(&qword_256993990, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D278], MEMORY[0x24BE2D288]);
    v14 = sub_23A59F034();
    *v89 = sub_23A538FBC(v14, v15, &v103);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v16(v9, v11);
    _os_log_impl(&dword_23A52C000, v6, v7, "XPC request: %s", v12, 0xCu);
    swift_arrayDestroy();
    v17 = v13;
    v0 = v93;
    MEMORY[0x23B852178](v17, -1, -1);
    MEMORY[0x23B852178](v12, -1, -1);
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v16(v0[59], v0[57]);
  }

  v87 = v16;
  v0[64] = v16;
  v20 = v0[55];
  v19 = v0[56];
  v22 = v0[53];
  v21 = v0[54];
  v23 = v0[50];
  v90 = v0[51];
  v94 = v0[52];
  v24 = v0[48];
  v25 = v0[49];
  v26 = v0[30];
  sub_23A59E440();
  sub_23A59E44C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v25, v19, v21);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v25, 0, 1, v21);
  v27 = v26 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__lastContext;
  swift_beginAccess();
  sub_23A5490EC(v25, v27, &qword_256993738);
  swift_endAccess();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16);
  v28(v24, v22, v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v24, 0, 1, v23);
  v29 = v26 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__lastRequest;
  swift_beginAccess();
  sub_23A5490EC(v24, v29, &qword_256993730);
  swift_endAccess();
  v28(v94, v22, v23);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 88))(v94, v23);
  if (v30 == *MEMORY[0x24BE2D4F8])
    goto LABEL_15;
  v31 = v0;
  if (v30 == *MEMORY[0x24BE2D4B0])
  {
    v32 = v0[51];
    v33 = (id *)v0[52];
    v34 = v0[50];
LABEL_16:
    (*(void (**)(id *, uint64_t))(v32 + 96))(v33, v34);

LABEL_17:
    Strong = swift_weakLoadStrong();
    v0[65] = Strong;
    if (Strong)
    {
      v0[66] = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_transportDaemon;
      type metadata accessor for DTDaemon();
      sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
      sub_23A59EA7C();
      return swift_task_switch();
    }
    v100 = (void (*)(uint64_t, uint64_t))v0[64];
    v97 = v0[60];
    v37 = v0[56];
    v36 = v0[57];
    v38 = v0[54];
    v39 = v0[55];
    v40 = v0[53];
    v42 = v0[50];
    v41 = v0[51];
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
    v43 = v97;
    v44 = v36;
LABEL_21:
    v100(v43, v44);
    goto LABEL_7;
  }
  if (v30 == *MEMORY[0x24BE2D4A0] || v30 == *MEMORY[0x24BE2D4A8] || v30 == *MEMORY[0x24BE2D4B8])
  {
LABEL_15:
    v32 = v0[51];
    v33 = (id *)v0[52];
    v34 = v0[50];
    goto LABEL_16;
  }
  if (v30 == *MEMORY[0x24BE2D4F0])
  {
    (*(void (**)(_QWORD, _QWORD))(v0[51] + 96))(v0[52], v0[50]);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (v30 == *MEMORY[0x24BE2D4D0])
  {
    v45 = v0[52];
    v47 = v0[40];
    v46 = v0[41];
    v49 = v0[38];
    v48 = v0[39];
    v50 = v0[30];
    (*(void (**)(uint64_t, _QWORD))(v0[51] + 96))(v45, v0[50]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v46, v45, v48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v49, v46, v48);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v48);
    v51 = v50 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__monitorContext;
    swift_beginAccess();
    sub_23A5490EC(v49, v51, (uint64_t *)&unk_256993740);
    swift_endAccess();
    v103 = sub_23A59E41C();
    v104 = v52;
    sub_23A59E9E0();
    *((_DWORD *)v0 + 176) = *(_DWORD *)(v50 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__pid);
    sub_23A59F034();
    sub_23A59E9E0();
    swift_bridgeObjectRelease();
    sub_23A59E9B0();
    swift_bridgeObjectRelease();
    v53 = os_transaction_create();
    swift_release();
    *(_QWORD *)(v50 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__monitoringTransaction) = v53;
    swift_unknownObjectRelease();
    v54 = swift_weakLoadStrong();
    v0[74] = v54;
    if (v54)
    {
      v0[72] = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_transportDaemon;
      type metadata accessor for DTDaemon();
      sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
      sub_23A59EA7C();
      return swift_task_switch();
    }
    v100 = (void (*)(uint64_t, uint64_t))v0[64];
    v98 = v0[60];
    v95 = v0[57];
    v66 = v0[55];
    v91 = v0[56];
    v67 = v0[53];
    v88 = v0[54];
    v69 = v0[50];
    v68 = v0[51];
    v71 = v0[40];
    v70 = v0[41];
    v72 = v31[39];
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    v73 = v70;
    v0 = v31;
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v73, v72);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v91, v88);
    v44 = v95;
    v43 = v98;
    goto LABEL_21;
  }
  if (v30 == *MEMORY[0x24BE2D498])
  {
    v55 = v0[38];
    v56 = v0[30];
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0[40] + 56))(v55, 1, 1, v0[39]);
    v57 = v56 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__monitorContext;
    swift_beginAccess();
    sub_23A5490EC(v55, v57, (uint64_t *)&unk_256993740);
    swift_endAccess();
    *(_QWORD *)(v56 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__monitoringTransaction) = 0;
    swift_unknownObjectRelease();
    v58 = swift_weakLoadStrong();
    v0[79] = v58;
    if (v58)
    {
      v0[80] = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_transportDaemon;
      type metadata accessor for DTDaemon();
      sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
      sub_23A59EA7C();
      return swift_task_switch();
    }
    v102 = (void (*)(uint64_t, uint64_t))v0[64];
    v99 = v0[60];
    v79 = v0[56];
    v96 = v0[57];
    v81 = v0[54];
    v80 = v0[55];
    v82 = v0[53];
    v92 = v0[52];
    v83 = v0[51];
    v84 = v0[50];
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    v85 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
    v85(v82, v84);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v81);
    v102(v99, v96);
    v86 = v84;
    v0 = v31;
    v85(v92, v86);
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
  if (v30 == *MEMORY[0x24BE2D4C8])
  {
LABEL_31:
    v101 = v0[60];
    v60 = v0[56];
    v59 = v0[57];
    v62 = v0[54];
    v61 = v0[55];
    v63 = v0[53];
    v64 = v0[50];
    v65 = *(void (**)(uint64_t, uint64_t))(v0[51] + 8);
    v65(v31[52], v31[50]);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    v65(v63, v64);
    v0 = v31;
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    v87(v101, v59);
    goto LABEL_7;
  }
  if (v30 != *MEMORY[0x24BE2D488])
  {
    if (v30 == *MEMORY[0x24BE2D490] || v30 == *MEMORY[0x24BE2D478] || v30 == *MEMORY[0x24BE2D4E0])
      goto LABEL_17;
    goto LABEL_31;
  }
  v74 = v0[52];
  v76 = v0[36];
  v75 = v0[37];
  v77 = v0[35];
  (*(void (**)(uint64_t, _QWORD))(v0[51] + 96))(v74, v0[50]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 32))(v75, v74, v77);
  v78 = (_QWORD *)swift_task_alloc();
  v0[86] = v78;
  *v78 = v0;
  v78[1] = sub_23A547B50;
  return sub_23A543D70(v0[43], v0[37]);
}

uint64_t sub_23A545CAC()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[65] + v0[66]);
  swift_beginAccess();
  v0[67] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A545D10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 536);
  swift_release();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 544) = v2;
    *v2 = v0;
    v2[1] = sub_23A545F18;
    return DTTransportDaemon.handleLocalRequest(request:context:xpcConnection:)(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 240));
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 480);
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
    v5 = *(_QWORD *)(v0 + 448);
    v4 = *(_QWORD *)(v0 + 456);
    v6 = *(_QWORD *)(v0 + 432);
    v7 = *(_QWORD *)(v0 + 440);
    v8 = *(_QWORD *)(v0 + 424);
    v10 = *(_QWORD *)(v0 + 400);
    v9 = *(_QWORD *)(v0 + 408);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v12(v11, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A545F18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 552) = v2;
  swift_task_dealloc();
  swift_release();
  if (!v2)
  {
    *(_QWORD *)(v6 + 560) = a2;
    *(_QWORD *)(v6 + 568) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23A545F9C()
{
  uint64_t v0;
  int8x16_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  xpc_object_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  void (*v91)(uint64_t, uint64_t);
  void (*v92)(uint64_t, uint64_t);
  void (*v93)(uint64_t, uint64_t);
  void (*v94)(uint64_t, uint64_t);
  void (*v95)(uint64_t, uint64_t);

  v1 = *(int8x16_t **)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 256);
  *v1 = vextq_s8(*(int8x16_t *)(v0 + 560), *(int8x16_t *)(v0 + 560), 8uLL);
  v5 = *MEMORY[0x24BE2D370];
  (*(void (**)(int8x16_t *, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x24BE2D370], v3);
  (*(void (**)(int8x16_t *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  sub_23A53AAEC((uint64_t)v1, v2, &qword_256993978);
  v6 = *(_QWORD *)(v0 + 552);
  v7 = *(_QWORD *)(v0 + 336);
  v8 = *(_QWORD *)(v0 + 248);
  v9 = *(_QWORD *)(v0 + 256);
  sub_23A549090(*(_QWORD *)(v0 + 376), v7, &qword_256993978);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    v19 = *(void **)(v0 + 232);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 32))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 248));
    v20 = sub_23A544C24(v19);
    if (!v20)
    {
      v92 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
      v35 = *(_QWORD *)(v0 + 480);
      v37 = *(_QWORD *)(v0 + 448);
      v36 = *(_QWORD *)(v0 + 456);
      v38 = *(_QWORD *)(v0 + 432);
      v39 = *(_QWORD *)(v0 + 440);
      v40 = *(_QWORD *)(v0 + 424);
      v41 = *(_QWORD *)(v0 + 400);
      v42 = *(_QWORD *)(v0 + 408);
      v43 = *(_QWORD *)(v0 + 376);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 248));
      sub_23A53B9B4(v43, &qword_256993978);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
      v92(v35, v36);
      goto LABEL_15;
    }
    v21 = v20;
    v22 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 248);
    v24 = *(_QWORD *)(v0 + 256);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 16))(v22, *(_QWORD *)(v0 + 272), v23);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 88))(v22, v23);
    if (v25 == v5)
    {
      v26 = *(uint64_t **)(v0 + 264);
      (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 256) + 96))(v26, *(_QWORD *)(v0 + 248));
      v27 = *v26;
      v28 = v26[1];
      sub_23A59E3A4();
      if (v6)
      {
        v86 = *(_QWORD *)(v0 + 480);
        v91 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v78 = *(_QWORD *)(v0 + 448);
        v82 = *(_QWORD *)(v0 + 456);
        v71 = *(_QWORD *)(v0 + 440);
        v74 = *(_QWORD *)(v0 + 432);
        v69 = *(_QWORD *)(v0 + 424);
        v29 = *(_QWORD *)(v0 + 400);
        v30 = *(_QWORD *)(v0 + 408);
        v31 = *(_QWORD *)(v0 + 376);
        v32 = *(_QWORD *)(v0 + 272);
        v33 = *(_QWORD *)(v0 + 248);
        v34 = *(_QWORD *)(v0 + 256);
        sub_23A53AAA8(v27, v28);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
        sub_23A53B9B4(v31, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v69, v29);
        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v78, v74);
        v91(v86, v82);
        goto LABEL_15;
      }
      sub_23A53AAA8(v27, v28);
    }
    else
    {
      if (v25 != *MEMORY[0x24BE2D368])
      {
        v88 = *(_QWORD *)(v0 + 480);
        v94 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v73 = *(_QWORD *)(v0 + 432);
        v76 = *(_QWORD *)(v0 + 448);
        v68 = *(_QWORD *)(v0 + 424);
        v70 = *(_QWORD *)(v0 + 440);
        v52 = *(_QWORD *)(v0 + 400);
        v53 = *(_QWORD *)(v0 + 408);
        v54 = *(_QWORD *)(v0 + 376);
        v55 = *(_QWORD *)(v0 + 272);
        v80 = *(_QWORD *)(v0 + 264);
        v84 = *(_QWORD *)(v0 + 456);
        v57 = *(_QWORD *)(v0 + 248);
        v56 = *(_QWORD *)(v0 + 256);
        sub_23A59E614();
        sub_23A59E620();
        swift_willThrow();
        swift_unknownObjectRelease();
        v58 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
        v58(v55, v57);
        sub_23A53B9B4(v54, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v68, v52);
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v76, v73);
        v94(v88, v84);
        v58(v80, v57);
        goto LABEL_15;
      }
      v44 = *(__int128 **)(v0 + 264);
      (*(void (**)(__int128 *, _QWORD))(*(_QWORD *)(v0 + 256) + 96))(v44, *(_QWORD *)(v0 + 248));
      sub_23A5490D4(v44, v0 + 16);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      sub_23A59E3BC();
      if (v6)
      {
        v87 = *(_QWORD *)(v0 + 480);
        v93 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v79 = *(_QWORD *)(v0 + 448);
        v83 = *(_QWORD *)(v0 + 456);
        v45 = *(_QWORD *)(v0 + 424);
        v72 = *(_QWORD *)(v0 + 440);
        v75 = *(_QWORD *)(v0 + 432);
        v47 = *(_QWORD *)(v0 + 400);
        v46 = *(_QWORD *)(v0 + 408);
        v48 = *(_QWORD *)(v0 + 376);
        v49 = *(_QWORD *)(v0 + 272);
        v50 = *(_QWORD *)(v0 + 248);
        v51 = *(_QWORD *)(v0 + 256);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
        sub_23A53B9B4(v48, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v79, v75);
        v93(v87, v83);
        __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
        goto LABEL_15;
      }
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    }
    v89 = *(_QWORD *)(v0 + 480);
    v95 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
    v59 = *(_QWORD *)(v0 + 440);
    v81 = *(_QWORD *)(v0 + 448);
    v85 = *(_QWORD *)(v0 + 456);
    v60 = *(_QWORD *)(v0 + 424);
    v77 = *(_QWORD *)(v0 + 432);
    v62 = *(_QWORD *)(v0 + 400);
    v61 = *(_QWORD *)(v0 + 408);
    v63 = *(_QWORD *)(v0 + 376);
    v64 = *(_QWORD *)(v0 + 272);
    v65 = *(_QWORD *)(v0 + 248);
    v66 = *(_QWORD *)(v0 + 256);
    xpc_connection_send_message(*(xpc_connection_t *)(*(_QWORD *)(v0 + 240)+ OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcConnection), v21);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v65);
    sub_23A53B9B4(v63, &qword_256993978);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v81, v77);
    v95(v89, v85);
    goto LABEL_15;
  }
  v90 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
  v10 = *(_QWORD *)(v0 + 480);
  v12 = *(_QWORD *)(v0 + 448);
  v11 = *(_QWORD *)(v0 + 456);
  v13 = *(_QWORD *)(v0 + 432);
  v14 = *(_QWORD *)(v0 + 440);
  v15 = *(_QWORD *)(v0 + 424);
  v16 = *(_QWORD *)(v0 + 400);
  v17 = *(_QWORD *)(v0 + 408);
  v18 = *(_QWORD *)(v0 + 336);
  sub_23A53B9B4(*(_QWORD *)(v0 + 376), &qword_256993978);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  v90(v10, v11);
  sub_23A53B9B4(v18, &qword_256993978);
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5466C4()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[74] + v0[72]);
  swift_beginAccess();
  v0[73] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A546728()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 584);
  swift_release();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 600) = v2;
    *v2 = v0;
    v2[1] = sub_23A54694C;
    return DTTransportDaemon.handleLocalRequest(request:context:xpcConnection:)(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 240));
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 480);
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
    v4 = *(_QWORD *)(v0 + 440);
    v12 = *(_QWORD *)(v0 + 448);
    v13 = *(_QWORD *)(v0 + 456);
    v5 = *(_QWORD *)(v0 + 424);
    v11 = *(_QWORD *)(v0 + 432);
    v7 = *(_QWORD *)(v0 + 400);
    v6 = *(_QWORD *)(v0 + 408);
    v8 = *(_QWORD *)(v0 + 320);
    v9 = *(_QWORD *)(v0 + 328);
    v10 = *(_QWORD *)(v0 + 312);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v11);
    v15(v14, v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A54694C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 608) = v2;
  swift_task_dealloc();
  swift_release();
  if (!v2)
  {
    *(_QWORD *)(v6 + 616) = a2;
    *(_QWORD *)(v6 + 624) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23A5469D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  xpc_object_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  void (*v93)(uint64_t, uint64_t);
  void (*v94)(uint64_t, uint64_t);
  void (*v95)(uint64_t, uint64_t);
  void (*v96)(uint64_t, uint64_t);
  void (*v97)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD **)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 256);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));
  *v4 = v1;
  v4[1] = v2;
  v7 = *MEMORY[0x24BE2D370];
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v4, *MEMORY[0x24BE2D370], v5);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  sub_23A53AAEC((uint64_t)v4, v3, &qword_256993978);
  v8 = *(_QWORD *)(v0 + 608);
  v9 = *(_QWORD *)(v0 + 336);
  v10 = *(_QWORD *)(v0 + 248);
  v11 = *(_QWORD *)(v0 + 256);
  sub_23A549090(*(_QWORD *)(v0 + 376), v9, &qword_256993978);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    v21 = *(void **)(v0 + 232);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 32))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 248));
    v22 = sub_23A544C24(v21);
    if (!v22)
    {
      v94 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
      v37 = *(_QWORD *)(v0 + 480);
      v39 = *(_QWORD *)(v0 + 448);
      v38 = *(_QWORD *)(v0 + 456);
      v40 = *(_QWORD *)(v0 + 432);
      v41 = *(_QWORD *)(v0 + 440);
      v42 = *(_QWORD *)(v0 + 424);
      v43 = *(_QWORD *)(v0 + 400);
      v44 = *(_QWORD *)(v0 + 408);
      v45 = *(_QWORD *)(v0 + 376);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 248));
      sub_23A53B9B4(v45, &qword_256993978);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
      v94(v37, v38);
      goto LABEL_15;
    }
    v23 = v22;
    v24 = *(_QWORD *)(v0 + 264);
    v25 = *(_QWORD *)(v0 + 248);
    v26 = *(_QWORD *)(v0 + 256);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 16))(v24, *(_QWORD *)(v0 + 272), v25);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 88))(v24, v25);
    if (v27 == v7)
    {
      v28 = *(uint64_t **)(v0 + 264);
      (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 256) + 96))(v28, *(_QWORD *)(v0 + 248));
      v29 = *v28;
      v30 = v28[1];
      sub_23A59E3A4();
      if (v8)
      {
        v88 = *(_QWORD *)(v0 + 480);
        v93 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v80 = *(_QWORD *)(v0 + 448);
        v84 = *(_QWORD *)(v0 + 456);
        v73 = *(_QWORD *)(v0 + 440);
        v76 = *(_QWORD *)(v0 + 432);
        v71 = *(_QWORD *)(v0 + 424);
        v31 = *(_QWORD *)(v0 + 400);
        v32 = *(_QWORD *)(v0 + 408);
        v33 = *(_QWORD *)(v0 + 376);
        v34 = *(_QWORD *)(v0 + 272);
        v35 = *(_QWORD *)(v0 + 248);
        v36 = *(_QWORD *)(v0 + 256);
        sub_23A53AAA8(v29, v30);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
        sub_23A53B9B4(v33, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v71, v31);
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v80, v76);
        v93(v88, v84);
        goto LABEL_15;
      }
      sub_23A53AAA8(v29, v30);
    }
    else
    {
      if (v27 != *MEMORY[0x24BE2D368])
      {
        v90 = *(_QWORD *)(v0 + 480);
        v96 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v75 = *(_QWORD *)(v0 + 432);
        v78 = *(_QWORD *)(v0 + 448);
        v70 = *(_QWORD *)(v0 + 424);
        v72 = *(_QWORD *)(v0 + 440);
        v54 = *(_QWORD *)(v0 + 400);
        v55 = *(_QWORD *)(v0 + 408);
        v56 = *(_QWORD *)(v0 + 376);
        v57 = *(_QWORD *)(v0 + 272);
        v82 = *(_QWORD *)(v0 + 264);
        v86 = *(_QWORD *)(v0 + 456);
        v59 = *(_QWORD *)(v0 + 248);
        v58 = *(_QWORD *)(v0 + 256);
        sub_23A59E614();
        sub_23A59E620();
        swift_willThrow();
        swift_unknownObjectRelease();
        v60 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
        v60(v57, v59);
        sub_23A53B9B4(v56, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v70, v54);
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v78, v75);
        v96(v90, v86);
        v60(v82, v59);
        goto LABEL_15;
      }
      v46 = *(__int128 **)(v0 + 264);
      (*(void (**)(__int128 *, _QWORD))(*(_QWORD *)(v0 + 256) + 96))(v46, *(_QWORD *)(v0 + 248));
      sub_23A5490D4(v46, v0 + 16);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      sub_23A59E3BC();
      if (v8)
      {
        v89 = *(_QWORD *)(v0 + 480);
        v95 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v81 = *(_QWORD *)(v0 + 448);
        v85 = *(_QWORD *)(v0 + 456);
        v47 = *(_QWORD *)(v0 + 424);
        v74 = *(_QWORD *)(v0 + 440);
        v77 = *(_QWORD *)(v0 + 432);
        v49 = *(_QWORD *)(v0 + 400);
        v48 = *(_QWORD *)(v0 + 408);
        v50 = *(_QWORD *)(v0 + 376);
        v51 = *(_QWORD *)(v0 + 272);
        v52 = *(_QWORD *)(v0 + 248);
        v53 = *(_QWORD *)(v0 + 256);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
        sub_23A53B9B4(v50, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v81, v77);
        v95(v89, v85);
        __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
        goto LABEL_15;
      }
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    }
    v91 = *(_QWORD *)(v0 + 480);
    v97 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
    v61 = *(_QWORD *)(v0 + 440);
    v83 = *(_QWORD *)(v0 + 448);
    v87 = *(_QWORD *)(v0 + 456);
    v62 = *(_QWORD *)(v0 + 424);
    v79 = *(_QWORD *)(v0 + 432);
    v64 = *(_QWORD *)(v0 + 400);
    v63 = *(_QWORD *)(v0 + 408);
    v65 = *(_QWORD *)(v0 + 376);
    v66 = *(_QWORD *)(v0 + 272);
    v67 = *(_QWORD *)(v0 + 248);
    v68 = *(_QWORD *)(v0 + 256);
    xpc_connection_send_message(*(xpc_connection_t *)(*(_QWORD *)(v0 + 240)+ OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcConnection), v23);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v67);
    sub_23A53B9B4(v65, &qword_256993978);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v83, v79);
    v97(v91, v87);
    goto LABEL_15;
  }
  v92 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
  v12 = *(_QWORD *)(v0 + 480);
  v14 = *(_QWORD *)(v0 + 448);
  v13 = *(_QWORD *)(v0 + 456);
  v15 = *(_QWORD *)(v0 + 432);
  v16 = *(_QWORD *)(v0 + 440);
  v17 = *(_QWORD *)(v0 + 424);
  v18 = *(_QWORD *)(v0 + 400);
  v19 = *(_QWORD *)(v0 + 408);
  v20 = *(_QWORD *)(v0 + 336);
  sub_23A53B9B4(*(_QWORD *)(v0 + 376), &qword_256993978);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  v92(v12, v13);
  sub_23A53B9B4(v20, &qword_256993978);
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54710C()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[79] + v0[80]);
  swift_beginAccess();
  v0[81] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A547170()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 648);
  swift_release();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 656) = v2;
    *v2 = v0;
    v2[1] = sub_23A547388;
    return DTTransportDaemon.handleLocalRequest(request:context:xpcConnection:)(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 240));
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 480);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
    v4 = *(_QWORD *)(v0 + 448);
    v12 = *(_QWORD *)(v0 + 456);
    v6 = *(_QWORD *)(v0 + 432);
    v5 = *(_QWORD *)(v0 + 440);
    v8 = *(_QWORD *)(v0 + 416);
    v7 = *(_QWORD *)(v0 + 424);
    v10 = *(_QWORD *)(v0 + 400);
    v9 = *(_QWORD *)(v0 + 408);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v11(v7, v10);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v14(v13, v12);
    v11(v8, v10);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A547388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 664) = v2;
  swift_task_dealloc();
  swift_release();
  if (!v2)
  {
    *(_QWORD *)(v6 + 672) = a2;
    *(_QWORD *)(v6 + 680) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23A54740C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int8x16_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  xpc_object_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t);
  void (*v94)(uint64_t, uint64_t);
  void (*v95)(uint64_t, uint64_t);
  void (*v96)(uint64_t, uint64_t);
  void (*v97)(uint64_t, uint64_t);
  void (*v98)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 408);
  v1 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 376);
  v5 = *(int8x16_t **)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 256);
  *v5 = vextq_s8(*(int8x16_t *)(v0 + 672), *(int8x16_t *)(v0 + 672), 8uLL);
  v8 = *MEMORY[0x24BE2D370];
  (*(void (**)(int8x16_t *, _QWORD, uint64_t))(v7 + 104))(v5, *MEMORY[0x24BE2D370], v6);
  (*(void (**)(int8x16_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  sub_23A53AAEC((uint64_t)v5, v4, &qword_256993978);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v9 = *(_QWORD *)(v0 + 664);
  v10 = *(_QWORD *)(v0 + 336);
  v11 = *(_QWORD *)(v0 + 248);
  v12 = *(_QWORD *)(v0 + 256);
  sub_23A549090(*(_QWORD *)(v0 + 376), v10, &qword_256993978);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    v22 = *(void **)(v0 + 232);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 32))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 248));
    v23 = sub_23A544C24(v22);
    if (!v23)
    {
      v95 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
      v38 = *(_QWORD *)(v0 + 480);
      v40 = *(_QWORD *)(v0 + 448);
      v39 = *(_QWORD *)(v0 + 456);
      v41 = *(_QWORD *)(v0 + 432);
      v42 = *(_QWORD *)(v0 + 440);
      v43 = *(_QWORD *)(v0 + 424);
      v44 = *(_QWORD *)(v0 + 400);
      v45 = *(_QWORD *)(v0 + 408);
      v46 = *(_QWORD *)(v0 + 376);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 248));
      sub_23A53B9B4(v46, &qword_256993978);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
      v95(v38, v39);
      goto LABEL_15;
    }
    v24 = v23;
    v25 = *(_QWORD *)(v0 + 264);
    v26 = *(_QWORD *)(v0 + 248);
    v27 = *(_QWORD *)(v0 + 256);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 16))(v25, *(_QWORD *)(v0 + 272), v26);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v25, v26);
    if (v28 == v8)
    {
      v29 = *(uint64_t **)(v0 + 264);
      (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 256) + 96))(v29, *(_QWORD *)(v0 + 248));
      v30 = *v29;
      v31 = v29[1];
      sub_23A59E3A4();
      if (v9)
      {
        v89 = *(_QWORD *)(v0 + 480);
        v94 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v81 = *(_QWORD *)(v0 + 448);
        v85 = *(_QWORD *)(v0 + 456);
        v74 = *(_QWORD *)(v0 + 440);
        v77 = *(_QWORD *)(v0 + 432);
        v72 = *(_QWORD *)(v0 + 424);
        v32 = *(_QWORD *)(v0 + 400);
        v33 = *(_QWORD *)(v0 + 408);
        v34 = *(_QWORD *)(v0 + 376);
        v35 = *(_QWORD *)(v0 + 272);
        v36 = *(_QWORD *)(v0 + 248);
        v37 = *(_QWORD *)(v0 + 256);
        sub_23A53AAA8(v30, v31);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
        sub_23A53B9B4(v34, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v72, v32);
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v81, v77);
        v94(v89, v85);
        goto LABEL_15;
      }
      sub_23A53AAA8(v30, v31);
    }
    else
    {
      if (v28 != *MEMORY[0x24BE2D368])
      {
        v91 = *(_QWORD *)(v0 + 480);
        v97 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v76 = *(_QWORD *)(v0 + 432);
        v79 = *(_QWORD *)(v0 + 448);
        v71 = *(_QWORD *)(v0 + 424);
        v73 = *(_QWORD *)(v0 + 440);
        v55 = *(_QWORD *)(v0 + 400);
        v56 = *(_QWORD *)(v0 + 408);
        v57 = *(_QWORD *)(v0 + 376);
        v58 = *(_QWORD *)(v0 + 272);
        v83 = *(_QWORD *)(v0 + 264);
        v87 = *(_QWORD *)(v0 + 456);
        v60 = *(_QWORD *)(v0 + 248);
        v59 = *(_QWORD *)(v0 + 256);
        sub_23A59E614();
        sub_23A59E620();
        swift_willThrow();
        swift_unknownObjectRelease();
        v61 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
        v61(v58, v60);
        sub_23A53B9B4(v57, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v71, v55);
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v79, v76);
        v97(v91, v87);
        v61(v83, v60);
        goto LABEL_15;
      }
      v47 = *(__int128 **)(v0 + 264);
      (*(void (**)(__int128 *, _QWORD))(*(_QWORD *)(v0 + 256) + 96))(v47, *(_QWORD *)(v0 + 248));
      sub_23A5490D4(v47, v0 + 16);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      sub_23A59E3BC();
      if (v9)
      {
        v90 = *(_QWORD *)(v0 + 480);
        v96 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v82 = *(_QWORD *)(v0 + 448);
        v86 = *(_QWORD *)(v0 + 456);
        v48 = *(_QWORD *)(v0 + 424);
        v75 = *(_QWORD *)(v0 + 440);
        v78 = *(_QWORD *)(v0 + 432);
        v50 = *(_QWORD *)(v0 + 400);
        v49 = *(_QWORD *)(v0 + 408);
        v51 = *(_QWORD *)(v0 + 376);
        v52 = *(_QWORD *)(v0 + 272);
        v53 = *(_QWORD *)(v0 + 248);
        v54 = *(_QWORD *)(v0 + 256);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
        sub_23A53B9B4(v51, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v82, v78);
        v96(v90, v86);
        __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
        goto LABEL_15;
      }
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    }
    v92 = *(_QWORD *)(v0 + 480);
    v98 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
    v62 = *(_QWORD *)(v0 + 440);
    v84 = *(_QWORD *)(v0 + 448);
    v88 = *(_QWORD *)(v0 + 456);
    v63 = *(_QWORD *)(v0 + 424);
    v80 = *(_QWORD *)(v0 + 432);
    v65 = *(_QWORD *)(v0 + 400);
    v64 = *(_QWORD *)(v0 + 408);
    v66 = *(_QWORD *)(v0 + 376);
    v67 = *(_QWORD *)(v0 + 272);
    v68 = *(_QWORD *)(v0 + 248);
    v69 = *(_QWORD *)(v0 + 256);
    xpc_connection_send_message(*(xpc_connection_t *)(*(_QWORD *)(v0 + 240)+ OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcConnection), v24);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v68);
    sub_23A53B9B4(v66, &qword_256993978);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v84, v80);
    v98(v92, v88);
    goto LABEL_15;
  }
  v93 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
  v13 = *(_QWORD *)(v0 + 480);
  v15 = *(_QWORD *)(v0 + 448);
  v14 = *(_QWORD *)(v0 + 456);
  v16 = *(_QWORD *)(v0 + 432);
  v17 = *(_QWORD *)(v0 + 440);
  v18 = *(_QWORD *)(v0 + 424);
  v19 = *(_QWORD *)(v0 + 400);
  v20 = *(_QWORD *)(v0 + 408);
  v21 = *(_QWORD *)(v0 + 336);
  sub_23A53B9B4(*(_QWORD *)(v0 + 376), &qword_256993978);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  v93(v13, v14);
  sub_23A53B9B4(v21, &qword_256993978);
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A547B50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 696) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A547BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  xpc_object_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t);
  void (*v88)(uint64_t, uint64_t);
  void (*v89)(uint64_t, uint64_t);
  void (*v90)(uint64_t, uint64_t);
  void (*v91)(uint64_t, uint64_t);
  void (*v92)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 344);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
  sub_23A53AAEC(v2, v1, &qword_256993978);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 256);
  sub_23A549090(*(_QWORD *)(v0 + 376), v4, &qword_256993978);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    v16 = *(void **)(v0 + 232);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 32))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 248));
    v17 = sub_23A544C24(v16);
    if (!v17)
    {
      v89 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
      v32 = *(_QWORD *)(v0 + 480);
      v34 = *(_QWORD *)(v0 + 448);
      v33 = *(_QWORD *)(v0 + 456);
      v35 = *(_QWORD *)(v0 + 432);
      v36 = *(_QWORD *)(v0 + 440);
      v37 = *(_QWORD *)(v0 + 424);
      v38 = *(_QWORD *)(v0 + 400);
      v39 = *(_QWORD *)(v0 + 408);
      v40 = *(_QWORD *)(v0 + 376);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 248));
      sub_23A53B9B4(v40, &qword_256993978);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
      v89(v32, v33);
      goto LABEL_15;
    }
    v18 = v17;
    v19 = *(_QWORD *)(v0 + 264);
    v20 = *(_QWORD *)(v0 + 248);
    v21 = *(_QWORD *)(v0 + 256);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 16))(v19, *(_QWORD *)(v0 + 272), v20);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 88))(v19, v20);
    if (v22 == *MEMORY[0x24BE2D370])
    {
      v23 = *(uint64_t **)(v0 + 264);
      (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 256) + 96))(v23, *(_QWORD *)(v0 + 248));
      v24 = *v23;
      v25 = v23[1];
      sub_23A59E3A4();
      if (v3)
      {
        v83 = *(_QWORD *)(v0 + 480);
        v88 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v75 = *(_QWORD *)(v0 + 448);
        v79 = *(_QWORD *)(v0 + 456);
        v68 = *(_QWORD *)(v0 + 440);
        v71 = *(_QWORD *)(v0 + 432);
        v66 = *(_QWORD *)(v0 + 424);
        v26 = *(_QWORD *)(v0 + 400);
        v27 = *(_QWORD *)(v0 + 408);
        v28 = *(_QWORD *)(v0 + 376);
        v29 = *(_QWORD *)(v0 + 272);
        v30 = *(_QWORD *)(v0 + 248);
        v31 = *(_QWORD *)(v0 + 256);
        sub_23A53AAA8(v24, v25);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
        sub_23A53B9B4(v28, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v66, v26);
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v75, v71);
        v88(v83, v79);
        goto LABEL_15;
      }
      sub_23A53AAA8(v24, v25);
    }
    else
    {
      if (v22 != *MEMORY[0x24BE2D368])
      {
        v85 = *(_QWORD *)(v0 + 480);
        v91 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v70 = *(_QWORD *)(v0 + 432);
        v73 = *(_QWORD *)(v0 + 448);
        v65 = *(_QWORD *)(v0 + 424);
        v67 = *(_QWORD *)(v0 + 440);
        v49 = *(_QWORD *)(v0 + 400);
        v50 = *(_QWORD *)(v0 + 408);
        v51 = *(_QWORD *)(v0 + 376);
        v52 = *(_QWORD *)(v0 + 272);
        v77 = *(_QWORD *)(v0 + 264);
        v81 = *(_QWORD *)(v0 + 456);
        v54 = *(_QWORD *)(v0 + 248);
        v53 = *(_QWORD *)(v0 + 256);
        sub_23A59E614();
        sub_23A59E620();
        swift_willThrow();
        swift_unknownObjectRelease();
        v55 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
        v55(v52, v54);
        sub_23A53B9B4(v51, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v65, v49);
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v73, v70);
        v91(v85, v81);
        v55(v77, v54);
        goto LABEL_15;
      }
      v41 = *(__int128 **)(v0 + 264);
      (*(void (**)(__int128 *, _QWORD))(*(_QWORD *)(v0 + 256) + 96))(v41, *(_QWORD *)(v0 + 248));
      sub_23A5490D4(v41, v0 + 16);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      sub_23A59E3BC();
      if (v3)
      {
        v84 = *(_QWORD *)(v0 + 480);
        v90 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
        v76 = *(_QWORD *)(v0 + 448);
        v80 = *(_QWORD *)(v0 + 456);
        v42 = *(_QWORD *)(v0 + 424);
        v69 = *(_QWORD *)(v0 + 440);
        v72 = *(_QWORD *)(v0 + 432);
        v44 = *(_QWORD *)(v0 + 400);
        v43 = *(_QWORD *)(v0 + 408);
        v45 = *(_QWORD *)(v0 + 376);
        v46 = *(_QWORD *)(v0 + 272);
        v47 = *(_QWORD *)(v0 + 248);
        v48 = *(_QWORD *)(v0 + 256);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
        sub_23A53B9B4(v45, &qword_256993978);
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v76, v72);
        v90(v84, v80);
        __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
        goto LABEL_15;
      }
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    }
    v86 = *(_QWORD *)(v0 + 480);
    v92 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
    v56 = *(_QWORD *)(v0 + 440);
    v78 = *(_QWORD *)(v0 + 448);
    v82 = *(_QWORD *)(v0 + 456);
    v57 = *(_QWORD *)(v0 + 424);
    v74 = *(_QWORD *)(v0 + 432);
    v59 = *(_QWORD *)(v0 + 400);
    v58 = *(_QWORD *)(v0 + 408);
    v60 = *(_QWORD *)(v0 + 376);
    v61 = *(_QWORD *)(v0 + 272);
    v62 = *(_QWORD *)(v0 + 248);
    v63 = *(_QWORD *)(v0 + 256);
    xpc_connection_send_message(*(xpc_connection_t *)(*(_QWORD *)(v0 + 240)+ OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcConnection), v18);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
    sub_23A53B9B4(v60, &qword_256993978);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v78, v74);
    v92(v86, v82);
    goto LABEL_15;
  }
  v87 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
  v7 = *(_QWORD *)(v0 + 480);
  v9 = *(_QWORD *)(v0 + 448);
  v8 = *(_QWORD *)(v0 + 456);
  v10 = *(_QWORD *)(v0 + 432);
  v11 = *(_QWORD *)(v0 + 440);
  v12 = *(_QWORD *)(v0 + 424);
  v13 = *(_QWORD *)(v0 + 400);
  v14 = *(_QWORD *)(v0 + 408);
  v15 = *(_QWORD *)(v0 + 336);
  sub_23A53B9B4(*(_QWORD *)(v0 + 376), &qword_256993978);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v87(v7, v8);
  sub_23A53B9B4(v15, &qword_256993978);
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5482B0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
  v2 = *(_QWORD *)(v0 + 480);
  v4 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 440);
  v7 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 400);
  v9 = *(_QWORD *)(v0 + 408);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A548428()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
  v2 = *(_QWORD *)(v0 + 480);
  v4 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 440);
  v7 = *(_QWORD *)(v0 + 416);
  v8 = *(_QWORD *)(v0 + 400);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 408) + 8);
  v9(*(_QWORD *)(v0 + 424), v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v1(v2, v3);
  v9(v7, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A548598()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
  v2 = *(_QWORD *)(v0 + 480);
  v4 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 440);
  v7 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 400);
  v9 = *(_QWORD *)(v0 + 408);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A548710()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
  v2 = *(_QWORD *)(v0 + 480);
  v4 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 440);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 408) + 8))(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 400));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTXPCConnection.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  v1 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__environment;
  v2 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23A541710(*(_QWORD *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__invalidationHandler));
  sub_23A53B9B4(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__lastContext, &qword_256993738);
  sub_23A53B9B4(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__lastRequest, &qword_256993730);
  sub_23A53B9B4(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__monitorContext, (uint64_t *)&unk_256993740);
  swift_unknownObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection__xpcCoder;
  v4 = sub_23A59E3D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_unknownObjectRelease();
  sub_23A53B9B4(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon15DTXPCConnection_xpcInstanceID, &qword_256993720);
  return v0;
}

uint64_t DTXPCConnection.__deallocating_deinit()
{
  DTXPCConnection.deinit();
  return swift_deallocClassInstance();
}

uint64_t DTXPCConnection.hashValue.getter()
{
  sub_23A59F0E8();
  sub_23A59F0F4();
  return sub_23A59F100();
}

uint64_t sub_23A5489F0()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

uint64_t sub_23A548A3C()
{
  sub_23A59F0E8();
  sub_23A59F0F4();
  return sub_23A59F100();
}

uint64_t sub_23A548A80()
{
  return sub_23A59F0F4();
}

uint64_t sub_23A548AA8()
{
  sub_23A59F0E8();
  sub_23A59F0F4();
  return sub_23A59F100();
}

BOOL sub_23A548AE8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23A548AFC(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;

  v4 = v3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  a1(&v10, a3);
  if (!v3)
    v4 = v10;
  swift_release();
  return v4;
}

uint64_t sub_23A548B94@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;

  v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_transportDaemon);
  result = swift_beginAccess();
  v6 = *v4;
  if (v6)
  {
    swift_retain();
    sub_23A543B7C((uint64_t)sub_23A548F20, v2);
    result = swift_release();
  }
  *a2 = v6 == 0;
  return result;
}

uint64_t sub_23A548C40()
{
  return sub_23A52EAEC(&qword_256993770, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
}

uint64_t type metadata accessor for DTXPCConnection()
{
  uint64_t result;

  result = qword_2569973A0;
  if (!qword_2569973A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A548CA8()
{
  return type metadata accessor for DTXPCConnection();
}

void sub_23A548CB0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_23A59E5B4();
  if (v0 <= 0x3F)
  {
    sub_23A548E44(319, &qword_2569937A0, (void (*)(uint64_t))MEMORY[0x24BE2D350]);
    if (v1 <= 0x3F)
    {
      sub_23A548E44(319, &qword_2569937A8, (void (*)(uint64_t))MEMORY[0x24BE2D508]);
      if (v2 <= 0x3F)
      {
        sub_23A548E44(319, &qword_2569937B0, (void (*)(uint64_t))MEMORY[0x24BE2D318]);
        if (v3 <= 0x3F)
        {
          sub_23A59E3D4();
          if (v4 <= 0x3F)
          {
            sub_23A548E44(319, qword_2569937B8, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
            if (v5 <= 0x3F)
              swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t method lookup function for DTXPCConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DTXPCConnection.__allocating_init(xpcConnection:daemon:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

void sub_23A548E44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23A59ED10();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23A548E90()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23A548EB0()
{
  return swift_deallocObject();
}

_QWORD *sub_23A548EC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t sub_23A548EFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A548F20()
{
  uint64_t v0;

  return DTTransportDaemon.handleMonitorStopAll(xpcConnection:)(v0);
}

uint64_t sub_23A548F50()
{
  return swift_deallocObject();
}

uint64_t sub_23A548F60()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23A548F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993728);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23A548FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256993728) - 8) + 80);
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541124;
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_23A541460;
  return sub_23A542DA0(v3);
}

uint64_t sub_23A549090(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23A5490D4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23A5490EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23A54917C()
{
  uint64_t v0;

  v0 = sub_23A59E6A4();
  __swift_allocate_value_buffer(v0, qword_2569973B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2569973B8);
  sub_23A59E3F8();
  return sub_23A59E698();
}

uint64_t static DTTransportDaemon.alternateAccessoryIDs.getter(uint64_t a1)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v5;

  if (qword_2569973D0 != -1)
    a1 = swift_once();
  MEMORY[0x24BDAC7A8](a1);
  v2 = v1 + 4;
  os_unfair_lock_lock(v1 + 4);
  sub_23A549524(&v5);
  v3 = v5;
  os_unfair_lock_unlock(v2);
  return v3;
}

uint64_t sub_23A549284@<X0>(_QWORD *a1@<X8>)
{
  if (qword_2569973E0 != -1)
    swift_once();
  *a1 = qword_2569973E8;
  return swift_bridgeObjectRetain();
}

uint64_t static DTTransportDaemon.alternateAccessoryIDs.setter(uint64_t a1)
{
  os_unfair_lock_s *v2;

  if (qword_2569973D0 != -1)
    swift_once();
  v2 = (os_unfair_lock_s *)(qword_2569973D8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_2569973D8 + 16));
  sub_23A549340(a1);
  os_unfair_lock_unlock(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A549340(uint64_t a1)
{
  if (qword_2569973E0 != -1)
    swift_once();
  qword_2569973E8 = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*static DTTransportDaemon.alternateAccessoryIDs.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = (_QWORD *)a1;
  *(_QWORD *)(a1 + 8) = v1;
  if (qword_2569973D0 != -1)
    a1 = swift_once();
  MEMORY[0x24BDAC7A8](a1);
  v4 = v3 + 4;
  os_unfair_lock_lock(v3 + 4);
  sub_23A549524(&v7);
  v2[2] = 0;
  v5 = v7;
  os_unfair_lock_unlock(v4);
  *v2 = v5;
  return sub_23A549454;
}

uint64_t sub_23A549454(uint64_t *a1, char a2)
{
  uint64_t v2;
  os_unfair_lock_s *v3;

  v2 = *a1;
  v3 = (os_unfair_lock_s *)(qword_2569973D8 + 16);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v3);
    sub_23A549340(v2);
    os_unfair_lock_unlock(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    os_unfair_lock_lock((os_unfair_lock_t)(qword_2569973D8 + 16));
    sub_23A549340(v2);
    os_unfair_lock_unlock(v3);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A5494F0()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2569943E0);
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_2569973D8 = result;
  return result;
}

void sub_23A549528()
{
  qword_2569973E8 = MEMORY[0x24BEE4B08];
}

uint64_t DTTransportDaemon._statusFlags.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__statusFlags;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t DTTransportDaemon._statusFlags.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__statusFlags);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*DTTransportDaemon._statusFlags.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t DTTransportDaemon.unownedExecutor.getter()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

id DTTransportDaemon.__allocating_init(daemon:environment:)(uint64_t a1, uint64_t a2)
{
  id v4;

  swift_allocObject();
  v4 = sub_23A56749C(a1, a2);
  swift_release();
  return v4;
}

id DTTransportDaemon.init(daemon:environment:)(uint64_t a1, uint64_t a2)
{
  id v2;

  v2 = sub_23A56749C(a1, a2);
  swift_release();
  return v2;
}

uint64_t DTTransportDaemon.summary.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[21] = v0;
  swift_getObjectType();
  v2 = sub_23A59E260();
  v1[22] = v2;
  v1[23] = *(_QWORD *)(v2 - 8);
  v1[24] = swift_task_alloc();
  v3 = sub_23A59E2B4();
  v1[25] = v3;
  v1[26] = *(_QWORD *)(v3 - 8);
  v1[27] = swift_task_alloc();
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A5497A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v1 = *(_QWORD *)(v0 + 168);
  sub_23A59E2A8();
  sub_23A59E9BC();
  v53 = 0x3D74694B656D6F48;
  v54 = 0xE800000000000000;
  v2 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager);
  if (v3)
    objc_msgSend(v3, sel_dataSyncState);
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  v53 = 1026705480;
  v54 = 0xE400000000000000;
  v4 = *(void **)(v1 + v2);
  v51 = v2;
  v52 = v1;
  if (v4)
    objc_msgSend(v4, sel_hasOptedToHH2);
  v5 = *(_QWORD *)(v0 + 168);
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeTransportRegisteredMap);
  swift_beginAccess();
  v7 = *v6;
  swift_bridgeObjectRetain();
  v8 = sub_23A54A148(0, v7);
  swift_bridgeObjectRelease();
  v53 = 0x3D4D4D4D48;
  v54 = 0xE500000000000000;
  *(_QWORD *)(v0 + 152) = v8;
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(*v6 + 16);
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  v53 = 0x73726F74696E6F4DLL;
  v54 = 0xE90000000000003DLL;
  v9 = v5 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsIncoming;
  swift_beginAccess();
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(*(_QWORD *)v9 + 16);
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  v53 = 0x3D4B48666C6553;
  v54 = 0xE700000000000000;
  v10 = *(void **)(v1 + v51);
  if (v10)
  {
    v11 = objc_msgSend(v10, sel_currentAccessory);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)(v0 + 184);
      v14 = *(_QWORD *)(v0 + 192);
      v15 = *(_QWORD *)(v0 + 176);
      v16 = objc_msgSend(v11, sel_uniqueIdentifier);

      sub_23A59E23C();
      sub_23A59E20C();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
    }
  }
  v17 = (uint64_t *)(v0 + 144);
  v19 = *(_QWORD *)(v0 + 176);
  v18 = *(_QWORD *)(v0 + 184);
  v20 = *(_QWORD *)(v0 + 168);
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  v53 = 0x4B486F6572657453;
  v54 = 0xEA0000000000203ALL;
  v21 = v20 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__stereoAccessoryID;
  swift_beginAccess();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v21, 1, v19))
  {
    v22 = *(_QWORD *)(v0 + 184);
    v23 = *(_QWORD *)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v23, v21, v24);
    sub_23A59E218();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
  }
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  v25 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 144) = MEMORY[0x24BEE4AF8];
  v26 = *(void **)(v52 + v51);
  if (v26)
  {
    v27 = objc_msgSend(v26, sel_currentHome);
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v27, sel_accessories);

      sub_23A53AB74(0, &qword_2569939B0);
      v30 = sub_23A59EA34();

      if (v30 >> 62)
      {
        swift_bridgeObjectRetain();
        v31 = sub_23A59EED8();
        if (v31)
          goto LABEL_14;
      }
      else
      {
        v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v31)
        {
LABEL_14:
          if (v31 < 1)
          {
            __break(1u);
            JUMPOUT(0x23A54A12CLL);
          }
          v32 = 0;
          do
          {
            if ((v30 & 0xC000000000000001) != 0)
              v33 = (id)MEMORY[0x23B85198C](v32, v30);
            else
              v33 = *(id *)(v30 + 8 * v32 + 32);
            v34 = v33;
            ++v32;
            v53 = (uint64_t)v33;
            sub_23A54A41C((void **)&v53, (uint64_t *)(v0 + 144));

          }
          while (v31 != v32);
        }
      }
      swift_bridgeObjectRelease_n();
    }
  }
  v53 = *v17;
  swift_bridgeObjectRetain_n();
  sub_23A563058(&v53);
  swift_bridgeObjectRelease();
  v35 = v53;
  v36 = *(_QWORD *)(v53 + 16);
  if (v36)
  {
    swift_retain();
    v37 = v35 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      v37 += 16;
      --v36;
    }
    while (v36);
    swift_release();
    v25 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)(v0 + 144) = v25;
  v38 = sub_23A59E344();
  v39 = swift_task_alloc();
  *(_QWORD *)(v39 + 16) = v38;
  *(_QWORD *)(v39 + 24) = v17;
  v40 = swift_bridgeObjectRetain();
  sub_23A567A44(v40, (void (*)(uint64_t, uint64_t, uint64_t))sub_23A567718);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_beginAccess();
  v41 = swift_task_alloc();
  *(_QWORD *)(v41 + 16) = v38;
  *(_QWORD *)(v41 + 24) = v17;
  v42 = swift_bridgeObjectRetain();
  sub_23A56805C(v42, (void (*)(uint64_t, uint64_t))sub_23A567BDC);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_beginAccess();
  *(_QWORD *)(swift_task_alloc() + 16) = v17;
  v43 = swift_bridgeObjectRetain();
  sub_23A56805C(v43, (void (*)(uint64_t, uint64_t))sub_23A567E78);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v53 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain_n();
  sub_23A563058(&v53);
  swift_bridgeObjectRelease();
  v44 = v53;
  v45 = *(_QWORD *)(v53 + 16);
  if (v45)
  {
    swift_retain();
    v46 = v44 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      v46 += 16;
      --v45;
    }
    while (v45);
    swift_release();
  }
  v48 = *(_QWORD *)(v0 + 208);
  v47 = *(_QWORD *)(v0 + 216);
  v49 = *(_QWORD *)(v0 + 200);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xE000000000000000);
}

uint64_t sub_23A54A148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;

  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569943D8);
  v4 = MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v35 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v35 - v9;
  v10 = *(_QWORD *)(a2 + 64);
  v36 = a2 + 64;
  v11 = 1 << *(_BYTE *)(a2 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v41 = a2;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v42 = v15;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v20 << 6))
  {
    v22 = v41;
    v23 = *(_QWORD *)(v41 + 48);
    v24 = sub_23A59E260();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v23 + *(_QWORD *)(v25 + 72) * i;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v28 = (uint64_t)v38;
    v27(v38, v26, v24);
    v29 = *(_BYTE *)(*(_QWORD *)(v22 + 56) + i);
    v30 = v40;
    *(_BYTE *)(v28 + *(int *)(v40 + 48)) = v29;
    sub_23A53AAEC(v28, (uint64_t)v8, &qword_2569943D8);
    v31 = *(int *)(v30 + 48);
    v32 = v39;
    v27(v39, (uint64_t)v8, v24);
    v33 = v8[v31];
    v32[v31] = v33;
    result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v32, v24);
    v34 = __OFADD__(a1, v33);
    a1 += v33;
    if (v34)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    result = sub_23A53B9B4((uint64_t)v8, &qword_2569943D8);
    v15 = v42;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_26;
    if (v18 >= v37)
      goto LABEL_24;
    v19 = *(_QWORD *)(v36 + 8 * v18);
    v20 = v15 + 1;
    if (!v19)
    {
      v20 = v15 + 2;
      if (v15 + 2 >= v37)
        goto LABEL_24;
      v19 = *(_QWORD *)(v36 + 8 * v20);
      if (!v19)
      {
        v20 = v15 + 3;
        if (v15 + 3 >= v37)
          goto LABEL_24;
        v19 = *(_QWORD *)(v36 + 8 * v20);
        if (!v19)
        {
          v20 = v15 + 4;
          if (v15 + 4 >= v37)
            goto LABEL_24;
          v19 = *(_QWORD *)(v36 + 8 * v20);
          if (!v19)
            break;
        }
      }
    }
LABEL_20:
    v13 = (v19 - 1) & v19;
    v42 = v20;
  }
  v21 = v15 + 5;
  if (v15 + 5 >= v37)
  {
LABEL_24:
    swift_release();
    return a1;
  }
  v19 = *(_QWORD *)(v36 + 8 * v21);
  if (v19)
  {
    v20 = v15 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v37)
      goto LABEL_24;
    v19 = *(_QWORD *)(v36 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23A54A41C(void **a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void (*v27)(char *, uint64_t);
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t result;
  char *v37;
  id v38;
  void (*v39)(char *, uint64_t);
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _QWORD *v44;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t *v58;
  _QWORD v59[2];

  v58 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v57 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v57 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v57 - v13;
  v15 = sub_23A59E260();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v57 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v57 - v19;
  v21 = *a1;
  v22 = objc_msgSend(v21, sel_device);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, sel_productInfo);

    if (v24)
    {
      v25 = objc_msgSend(v24, sel_productClass);

      if (v25 == (id)6)
      {
        v59[0] = 0;
        v59[1] = 0xE000000000000000;
        sub_23A59EE00();
        swift_bridgeObjectRelease();
        strcpy((char *)v59, "HomePod: hk=");
        BYTE5(v59[1]) = 0;
        HIWORD(v59[1]) = -5120;
        v26 = objc_msgSend(v21, sel_uniqueIdentifier);
        sub_23A59E23C();

        sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        sub_23A59F034();
        sub_23A59E9E0();
        swift_bridgeObjectRelease();
        v27 = *(void (**)(char *, uint64_t))(v16 + 8);
        v27(v20, v15);
        sub_23A59E9E0();
        v28 = objc_msgSend(v21, sel_device);
        if (v28)
        {
          v29 = v28;
          v30 = objc_msgSend(v28, sel_idsIdentifier);

          if (v30)
          {
            sub_23A59E23C();

            v31 = 0;
          }
          else
          {
            v31 = 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, v31, 1, v15);
          sub_23A53AAEC((uint64_t)v12, (uint64_t)v14, &qword_256993720);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
          {
            sub_23A53B9B4((uint64_t)v14, &qword_256993720);
          }
          else
          {
            sub_23A59E20C();
            v27(v14, v15);
          }
        }
        sub_23A59E9E0();
        swift_bridgeObjectRelease();
        sub_23A59E9E0();
        v49 = objc_msgSend(v21, sel_name);
        sub_23A59E9A4();

        sub_23A59E9E0();
        swift_bridgeObjectRelease();
        sub_23A59E9E0();
        v50 = v59[0];
        v51 = v59[1];
        v52 = v58;
        v53 = (_QWORD *)*v58;
        result = swift_isUniquelyReferenced_nonNull_native();
        *v52 = (uint64_t)v53;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_23A562D44(0, v53[2] + 1, 1, v53);
          v53 = (_QWORD *)result;
          *v52 = result;
        }
        v55 = v53[2];
        v54 = v53[3];
        if (v55 >= v54 >> 1)
        {
          result = (uint64_t)sub_23A562D44((_QWORD *)(v54 > 1), v55 + 1, 1, v53);
          v53 = (_QWORD *)result;
          *v52 = result;
        }
        v53[2] = v55 + 1;
        v56 = &v53[2 * v55];
        v56[4] = v50;
        v56[5] = v51;
        return result;
      }
    }
  }
  v32 = objc_msgSend(v21, sel_siriEndpointProfile);
  if (!v32)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v9, 1, 1, v15);
    return sub_23A53B9B4((uint64_t)v9, &qword_256993720);
  }
  v33 = v32;
  v34 = objc_msgSend(v32, sel_sessionHubIdentifier);

  if (v34)
  {
    sub_23A59E23C();

    v35 = 0;
  }
  else
  {
    v35 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v6, v35, 1, v15);
  sub_23A53AAEC((uint64_t)v6, (uint64_t)v9, &qword_256993720);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
    return sub_23A53B9B4((uint64_t)v9, &qword_256993720);
  v37 = v57;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v57, v9, v15);
  v59[0] = 0;
  v59[1] = 0xE000000000000000;
  sub_23A59EE00();
  swift_bridgeObjectRelease();
  strcpy((char *)v59, "SiriEnd: hk=");
  BYTE5(v59[1]) = 0;
  HIWORD(v59[1]) = -5120;
  v38 = objc_msgSend(v21, sel_uniqueIdentifier);
  sub_23A59E23C();

  sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  v39 = *(void (**)(char *, uint64_t))(v16 + 8);
  v39(v20, v15);
  sub_23A59E9E0();
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  v40 = objc_msgSend(v21, sel_name);
  sub_23A59E9A4();

  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  v41 = v59[0];
  v42 = v59[1];
  v43 = v58;
  v44 = (_QWORD *)*v58;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v43 = (uint64_t)v44;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v44 = sub_23A562D44(0, v44[2] + 1, 1, v44);
    *v43 = (uint64_t)v44;
  }
  v47 = v44[2];
  v46 = v44[3];
  if (v47 >= v46 >> 1)
  {
    v44 = sub_23A562D44((_QWORD *)(v46 > 1), v47 + 1, 1, v44);
    *v43 = (uint64_t)v44;
  }
  v44[2] = v47 + 1;
  v48 = &v44[2 * v47];
  v48[4] = v41;
  v48[5] = v42;
  return ((uint64_t (*)(char *, uint64_t))v39)(v37, v15);
}

uint64_t DTTransportDaemon.activate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  swift_getObjectType();
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A54AB94()
{
  _QWORD *v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v0[2] = MEMORY[0x24BDAC760];
  v0[6] = sub_23A551A94;
  v0[7] = 0;
  v0[3] = 1107296256;
  v0[4] = sub_23A5437D8;
  v0[5] = &block_descriptor_1;
  v1 = _Block_copy(v0 + 2);
  xpc_set_event_stream_handler("com.apple.HMModernMessaging.launch", 0, v1);
  _Block_release(v1);
  v2 = IsAppleInternalBuild();
  v3 = v0[8];
  if (v2 && !*(_QWORD *)(v3 + 24))
  {
    sub_23A59E560();
    swift_allocObject();
    swift_weakInit();
    sub_23A59E2E4();
    swift_allocObject();
    *(_QWORD *)(v3 + 24) = sub_23A59E2C0();
    swift_release();
    v3 = v0[8];
  }
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__invalidateCalled) & 1) == 0)
  {
    v4 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager;
    if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager))
    {
      v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD76E0]), sel_initWithOptions_cachePolicy_, 35024, 2);
      v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD76D8]), sel_initWithConfiguration_, v5);
      v7 = *(void **)(v3 + v4);
      *(_QWORD *)(v3 + v4) = v6;
      v8 = v6;

      objc_msgSend(v8, sel_setDelegate_, v3);
    }
    sub_23A554C34();
    sub_23A551F5C();
    sub_23A5559EC();
  }
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t DTTransportDaemon.invalidate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  swift_getObjectType();
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A54ADE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__invalidateCalled) = 1;
  if (*(_QWORD *)(v1 + 24))
  {
    swift_retain();
    sub_23A59E2D8();
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v1 + 24) = 0;
  swift_release();
  sub_23A59E614();
  v3 = (void *)sub_23A59E620();
  sub_23A54B030(v3);

  v4 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeKitPollTask;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeKitPollTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569939C8);
    sub_23A59EAF4();
    swift_release();
  }
  v5 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v2 + v4) = 0;
  swift_release();
  v6 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager;
  v7 = *(void **)(v5 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager);
  if (v7)
  {
    objc_msgSend(v7, sel_setDelegate_, 0);
    v8 = *(void **)(v5 + v6);
  }
  else
  {
    v8 = 0;
  }
  v9 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v5 + v6) = 0;

  v10 = (_QWORD *)(v9 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeMap);
  swift_beginAccess();
  v11 = MEMORY[0x24BEE4B00];
  *v10 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeSiriEndpointMap) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeSiriEndpointsReady) = 0;
  v12 = (_QWORD *)(v9 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeTransportRegisteredMap);
  swift_beginAccess();
  *v12 = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeKitReady) = 0;
  v13 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorTimer;
  if (*(_QWORD *)(v9 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorTimer))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569939C8);
    sub_23A59EAF4();
    swift_release();
  }
  *(_QWORD *)(v9 + v13) = 0;
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54B030(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DTTransportDaemon.DTOperationItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__operationQueue;
  swift_beginAccess();
  v11 = *(_QWORD *)(*(_QWORD *)v10 + 16);
  if (v11)
  {
    v12 = *(_QWORD *)v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v13 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_23A53ABC0(v12, (uint64_t)v9, type metadata accessor for DTTransportDaemon.DTOperationItem);
      sub_23A53BA34((uint64_t)v9, (uint64_t)v5, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
      sub_23A569EC0((uint64_t)v5, a1, 0, 1);
      sub_23A53AC04((uint64_t)v5, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
      v12 += v13;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)v10 = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

uint64_t DTTransportDaemon.handleLocalRequest(request:context:xpcConnection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  swift_getObjectType();
  v4[8] = sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  v4[9] = sub_23A59EA7C();
  v4[10] = v5;
  return swift_task_switch();
}

uint64_t sub_23A54B21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v3;
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v5;
  *v5 = v0;
  v5[1] = sub_23A54B2DC;
  return sub_23A59F070();
}

uint64_t sub_23A54B2DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A54B348()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23A54B358()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54B38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  unint64_t *v36;
  unint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  _BYTE v42[4];
  int v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];

  v44 = a3;
  v5 = type metadata accessor for DTTransportDaemon.DTOperationItem(0);
  v47 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v46 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_23A59E680();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = (int *)type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v42[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v42[-v15];
  sub_23A59E254();
  v17 = &v16[v11[6]];
  v45 = v8;
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16);
  v18(v17, a1, v7);
  v19 = &v16[v11[7]];
  v20 = sub_23A59E530();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, a2, v20);
  v21 = &v16[v11[8]];
  v22 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, v44, v22);
  v23 = v11[5];
  swift_retain();
  *(_QWORD *)&v16[v23] = sub_23A59E344();
  swift_weakInit();
  swift_release();
  if (qword_2569973B0 != -1)
    swift_once();
  v24 = sub_23A59E6A4();
  __swift_project_value_buffer(v24, (uint64_t)qword_2569973B8);
  sub_23A53ABC0((uint64_t)v16, (uint64_t)v14, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  v18(v10, a1, v7);
  v25 = sub_23A59E68C();
  v26 = sub_23A59EBC0();
  v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    v28 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    v50[0] = v44;
    *(_DWORD *)v28 = 136315394;
    sub_23A59E260();
    v43 = v27;
    sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v29 = sub_23A59F034();
    v49 = sub_23A538FBC(v29, v30, v50);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04((uint64_t)v14, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    *(_WORD *)(v28 + 12) = 2080;
    sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
    v31 = sub_23A59F034();
    v49 = sub_23A538FBC(v31, v32, v50);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v10, v7);
    _os_log_impl(&dword_23A52C000, v25, (os_log_type_t)v43, "Operation enqueue: xid=%s, request=%s", (uint8_t *)v28, 0x16u);
    v33 = v44;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v33, -1, -1);
    MEMORY[0x23B852178](v28, -1, -1);
  }
  else
  {
    sub_23A53AC04((uint64_t)v14, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v10, v7);
  }

  v34 = v48;
  v35 = v46;
  sub_23A53ABC0((uint64_t)v16, (uint64_t)v46, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  v36 = (unint64_t *)(v34 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__operationQueue);
  swift_beginAccess();
  v37 = *v36;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v36 = v37;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v37 = sub_23A562E50(0, *(_QWORD *)(v37 + 16) + 1, 1, v37);
    *v36 = v37;
  }
  v40 = *(_QWORD *)(v37 + 16);
  v39 = *(_QWORD *)(v37 + 24);
  if (v40 >= v39 >> 1)
  {
    v37 = sub_23A562E50(v39 > 1, v40 + 1, 1, v37);
    *v36 = v37;
  }
  *(_QWORD *)(v37 + 16) = v40 + 1;
  sub_23A53BA34((uint64_t)v35, v37+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v40, type metadata accessor for DTTransportDaemon.DTOperationItem);
  swift_endAccess();
  sub_23A5559EC();
  return sub_23A53AC04((uint64_t)v16, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
}

void sub_23A54B880(uint64_t a1, void *a2)
{
  NSObject *v2;
  NSObject *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  id v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  const char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v45[2];
  uint8_t *v46;
  NSObject *v47;
  uint64_t v48[3];
  uint64_t v49;

  v3 = v2;
  v5 = sub_23A59E260();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v9 = sub_23A59E674();
  if ((v10 & 1) != 0)
  {
    if (qword_2569973B0 != -1)
      swift_once();
    v27 = sub_23A59E6A4();
    __swift_project_value_buffer(v27, (uint64_t)qword_2569973B8);
    v28 = a2;
    v47 = sub_23A59E68C();
    v29 = sub_23A59EBB4();
    if (os_log_type_enabled(v47, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v48[0] = v31;
      *(_DWORD *)v30 = 136315138;
      v46 = v30 + 4;
      v32 = objc_msgSend(v28, sel_uniqueIdentifier);
      sub_23A59E23C();

      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v33 = sub_23A59F034();
      v35 = v34;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v49 = sub_23A538FBC(v33, v35, v48);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      v36 = "### Monitor start failed: no monitorID, accessory=%s";
LABEL_15:
      _os_log_impl(&dword_23A52C000, v47, v29, v36, v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v31, -1, -1);
      MEMORY[0x23B852178](v30, -1, -1);

      return;
    }
LABEL_16:

    return;
  }
  v11 = v9;
  if (!swift_weakLoadStrong())
  {
    if (qword_2569973B0 != -1)
      swift_once();
    v37 = sub_23A59E6A4();
    __swift_project_value_buffer(v37, (uint64_t)qword_2569973B8);
    v28 = a2;
    v47 = sub_23A59E68C();
    v29 = sub_23A59EBB4();
    if (os_log_type_enabled(v47, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v48[0] = v31;
      *(_DWORD *)v30 = 136315138;
      v46 = v30 + 4;
      v38 = objc_msgSend(v28, sel_uniqueIdentifier);
      sub_23A59E23C();

      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v39 = sub_23A59F034();
      v41 = v40;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v49 = sub_23A538FBC(v39, v41, v48);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      v36 = "### Monitor start failed: no xpc connection, accessory=%s";
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  v13 = qword_2569973B0;
  v14 = a2;
  if (v13 != -1)
    swift_once();
  v15 = sub_23A59E6A4();
  __swift_project_value_buffer(v15, (uint64_t)qword_2569973B8);
  swift_retain_n();
  v16 = sub_23A59E68C();
  v17 = sub_23A59EBC0();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v47 = v3;
    v48[0] = v19;
    v20 = v19;
    *(_DWORD *)v18 = 134218242;
    v49 = v11;
    sub_23A59ED1C();
    *(_WORD *)(v18 + 12) = 2080;
    v45[1] = v18 + 14;
    v21 = sub_23A54BF5C();
    v46 = v14;
    v49 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569939E8);
    sub_23A56D9E4(&qword_2569939F0, &qword_2569939E8, MEMORY[0x24BEE12B0]);
    v22 = sub_23A59E974();
    v24 = v23;
    swift_bridgeObjectRelease();
    v49 = sub_23A538FBC(v22, v24, v48);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23A52C000, v16, v17, "Monitor start local: monitorID=%llu, targets=[%s]", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    v25 = v20;
    v3 = v47;
    MEMORY[0x23B852178](v25, -1, -1);
    MEMORY[0x23B852178](v18, -1, -1);

    v26 = v46;
  }
  else
  {
    swift_release_n();

    v26 = v14;
  }
  type metadata accessor for DTTransportDaemon.DTTransportMonitorInfoLocal();
  v42 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v42 + 16) = sub_23A56DB50;
  *(_QWORD *)(v42 + 24) = v12;
  swift_weakAssign();
  v43 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsLocal);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v49 = *v43;
  *v43 = 0x8000000000000000;
  sub_23A5657B0(v42, v11, isUniquelyReferenced_nonNull_native, &qword_256994240);
  *v43 = v49;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();

  swift_release();
}

uint64_t sub_23A54BF5C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v1 = v0;
  v2 = sub_23A59E260();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569942B0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23A5A0B80;
  v10 = objc_msgSend(v1, sel_uniqueIdentifier);
  sub_23A59E23C();

  v11 = sub_23A59E20C();
  v13 = v12;
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v8, v2);
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  sub_23A55A350();
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_uniqueIdentifier);
    sub_23A59E23C();

    v18 = sub_23A59E20C();
    v20 = v19;
    v14(v6, v2);
    v22 = *(_QWORD *)(v9 + 16);
    v21 = *(_QWORD *)(v9 + 24);
    if (v22 >= v21 >> 1)
      v9 = (uint64_t)sub_23A562D44((_QWORD *)(v21 > 1), v22 + 1, 1, (_QWORD *)v9);
    *(_QWORD *)(v9 + 16) = v22 + 1;
    v23 = v9 + 16 * v22;
    *(_QWORD *)(v23 + 32) = v18;
    *(_QWORD *)(v23 + 40) = v20;

  }
  return v9;
}

void sub_23A54C0F0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t *v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  id v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33[3];
  uint64_t v34;

  v3 = v2;
  v5 = sub_23A59E260();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v9 = sub_23A59E674();
  if ((v10 & 1) != 0)
  {
    if (qword_2569973B0 != -1)
      swift_once();
    v22 = sub_23A59E6A4();
    __swift_project_value_buffer(v22, (uint64_t)qword_2569973B8);
    v23 = a2;
    v32 = sub_23A59E68C();
    v24 = sub_23A59EBB4();
    if (os_log_type_enabled(v32, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v33[0] = v26;
      *(_DWORD *)v25 = 136315138;
      v27 = objc_msgSend(v23, sel_uniqueIdentifier, v25 + 4);
      sub_23A59E23C();

      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v28 = sub_23A59F034();
      v30 = v29;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v34 = sub_23A538FBC(v28, v30, v33);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A52C000, v32, v24, "### Monitor start failed: no monitorID, accessory=%s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v26, -1, -1);
      MEMORY[0x23B852178](v25, -1, -1);
    }
    else
    {

    }
  }
  else
  {
    v11 = v9;
    if (qword_2569973B0 != -1)
      swift_once();
    v12 = sub_23A59E6A4();
    __swift_project_value_buffer(v12, (uint64_t)qword_2569973B8);
    v13 = sub_23A59E68C();
    v14 = sub_23A59EBC0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v15 = 134217984;
      v33[0] = v11;
      sub_23A59ED1C();
      _os_log_impl(&dword_23A52C000, v13, v14, "Monitor stop outgoing: monitorID=%llu", v15, 0xCu);
      MEMORY[0x23B852178](v15, -1, -1);
    }

    v16 = (uint64_t *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsLocal);
    swift_beginAccess();
    v17 = sub_23A563ED0(v11);
    if ((v18 & 1) != 0)
    {
      v19 = v17;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v21 = *v16;
      v34 = *v16;
      *v16 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23A566284(&qword_256994240);
        v21 = v34;
      }
      sub_23A565198(v19, v21);
      *v16 = v21;
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_endAccess();
  }
}

void sub_23A54C4DC(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  NSObject *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v43[2];
  id v44;
  uint64_t v45;
  uint8_t *v46;
  NSObject *v47;
  uint64_t v48[3];
  uint64_t v49;

  v4 = v3;
  v7 = sub_23A59E260();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v11 = sub_23A59E674();
  if ((v12 & 1) != 0)
  {
    if (qword_2569973B0 != -1)
      swift_once();
    v29 = sub_23A59E6A4();
    __swift_project_value_buffer(v29, (uint64_t)qword_2569973B8);
    v30 = a2;
    v47 = sub_23A59E68C();
    v31 = sub_23A59EBB4();
    if (os_log_type_enabled(v47, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v48[0] = v33;
      *(_DWORD *)v32 = 136315138;
      v46 = v32 + 4;
      v34 = objc_msgSend(v30, sel_uniqueIdentifier);
      sub_23A59E23C();

      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v35 = sub_23A59F034();
      v37 = v36;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v49 = sub_23A538FBC(v35, v37, v48);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A52C000, v47, v31, "### Monitor start failed: no monitorID, accessory=%s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v33, -1, -1);
      MEMORY[0x23B852178](v32, -1, -1);
    }
    else
    {

    }
  }
  else
  {
    v13 = v11;
    v47 = a3;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a2;
    v15 = qword_2569973B0;
    v16 = a2;
    if (v15 != -1)
      swift_once();
    v17 = sub_23A59E6A4();
    __swift_project_value_buffer(v17, (uint64_t)qword_2569973B8);
    swift_retain_n();
    v18 = sub_23A59E68C();
    v19 = sub_23A59EBC0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v46 = (uint8_t *)v13;
      v21 = v20;
      v45 = swift_slowAlloc();
      v48[0] = v45;
      *(_DWORD *)v21 = 134218242;
      v49 = (uint64_t)v46;
      sub_23A59ED1C();
      *(_WORD *)(v21 + 12) = 2080;
      v43[1] = v21 + 14;
      v22 = sub_23A54BF5C();
      v44 = v16;
      v49 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569939E8);
      sub_23A56D9E4(&qword_2569939F0, &qword_2569939E8, MEMORY[0x24BEE12B0]);
      v23 = sub_23A59E974();
      v25 = v24;
      swift_bridgeObjectRelease();
      v49 = sub_23A538FBC(v23, v25, v48);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_23A52C000, v18, v19, "Monitor start outgoing: monitorID=%llu, targets=[%s]", (uint8_t *)v21, 0x16u);
      v26 = v45;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v26, -1, -1);
      v27 = v21;
      v13 = (uint64_t)v46;
      MEMORY[0x23B852178](v27, -1, -1);

      v28 = v44;
    }
    else
    {
      swift_release_n();

      v28 = v16;
    }
    v38 = v47;
    v39 = sub_23A59E344();
    swift_weakLoadStrong();
    type metadata accessor for DTTransportDaemon.DTTransportMonitorInfoOutgoing();
    v40 = (_QWORD *)swift_allocObject();
    swift_weakInit();
    v40[2] = v38;
    v40[3] = v39;
    v40[4] = sub_23A56EAE4;
    v40[5] = v14;
    swift_weakAssign();
    swift_retain();
    swift_release();
    v41 = (uint64_t *)(v4 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsOutgoing);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v49 = *v41;
    *v41 = 0x8000000000000000;
    sub_23A5657B0((uint64_t)v40, v13, isUniquelyReferenced_nonNull_native, &qword_256994248);
    *v41 = v49;
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_23A54CA88();
    swift_release();

  }
}

uint64_t sub_23A54CA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _BYTE v31[24];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v31[-v7];
  v9 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsIncoming;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v9 + 16)
    || (v11 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsOutgoing,
        result = swift_beginAccess(),
        *(_QWORD *)(*(_QWORD *)v11 + 16)))
  {
    v12 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorTimer;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorTimer))
      return result;
    if (qword_2569973B0 != -1)
      swift_once();
    v13 = sub_23A59E6A4();
    __swift_project_value_buffer(v13, (uint64_t)qword_2569973B8);
    v14 = sub_23A59E68C();
    v15 = sub_23A59EBC0();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_23A52C000, v14, v15, "Monitor timer start", v16, 2u);
      MEMORY[0x23B852178](v16, -1, -1);
    }

    v17 = sub_23A59E560();
    v18 = sub_23A59EAB8();
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v8, 1, 1, v18);
    v20 = swift_allocObject();
    swift_weakInit();
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = ObjectType;
    sub_23A53AAEC((uint64_t)v8, (uint64_t)v6, (uint64_t *)&unk_256993920);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18) == 1)
    {
      sub_23A53B9B4((uint64_t)v6, (uint64_t *)&unk_256993920);
    }
    else
    {
      sub_23A59EAAC();
      (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v6, v18);
    }
    v22 = sub_23A56B150();
    v34 = 6;
    v35 = 0;
    v36 = v17;
    v37 = v22;
    *(_QWORD *)(v1 + v12) = swift_task_create();
    swift_release();
    v32 = sub_23A59E41C();
    v33 = v23;
    sub_23A59E9E0();
    sub_23A59E9B0();
    swift_bridgeObjectRelease();
    v24 = os_transaction_create();
    swift_release();
    *(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorTransaction) = v24;
  }
  else
  {
    v25 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorTimer;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorTimer))
    {
      v26 = qword_2569973B0;
      swift_retain();
      if (v26 != -1)
        swift_once();
      v27 = sub_23A59E6A4();
      __swift_project_value_buffer(v27, (uint64_t)qword_2569973B8);
      v28 = sub_23A59E68C();
      v29 = sub_23A59EBC0();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_23A52C000, v28, v29, "Monitor timer stop", v30, 2u);
        MEMORY[0x23B852178](v30, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_2569939C8);
      sub_23A59EAF4();
      swift_release();
      *(_QWORD *)(v1 + v25) = 0;
      swift_release();
    }
    *(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorTransaction) = 0;
  }
  return swift_unknownObjectRelease();
}

void sub_23A54CEF4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t *v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  id v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33[3];
  uint64_t v34;

  v3 = v2;
  v5 = sub_23A59E260();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v9 = sub_23A59E674();
  if ((v10 & 1) != 0)
  {
    if (qword_2569973B0 != -1)
      swift_once();
    v22 = sub_23A59E6A4();
    __swift_project_value_buffer(v22, (uint64_t)qword_2569973B8);
    v23 = a2;
    v32 = sub_23A59E68C();
    v24 = sub_23A59EBB4();
    if (os_log_type_enabled(v32, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v33[0] = v26;
      *(_DWORD *)v25 = 136315138;
      v27 = objc_msgSend(v23, sel_uniqueIdentifier, v25 + 4);
      sub_23A59E23C();

      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v28 = sub_23A59F034();
      v30 = v29;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v34 = sub_23A538FBC(v28, v30, v33);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A52C000, v32, v24, "### Monitor start failed: no monitorID, accessory=%s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v26, -1, -1);
      MEMORY[0x23B852178](v25, -1, -1);
    }
    else
    {

    }
  }
  else
  {
    v11 = v9;
    if (qword_2569973B0 != -1)
      swift_once();
    v12 = sub_23A59E6A4();
    __swift_project_value_buffer(v12, (uint64_t)qword_2569973B8);
    v13 = sub_23A59E68C();
    v14 = sub_23A59EBC0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v15 = 134217984;
      v33[0] = v11;
      sub_23A59ED1C();
      _os_log_impl(&dword_23A52C000, v13, v14, "Monitor stop outgoing: monitorID=%llu", v15, 0xCu);
      MEMORY[0x23B852178](v15, -1, -1);
    }

    v16 = (uint64_t *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsOutgoing);
    swift_beginAccess();
    v17 = sub_23A563ED0(v11);
    if ((v18 & 1) != 0)
    {
      v19 = v17;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v21 = *v16;
      v34 = *v16;
      *v16 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23A566284(&qword_256994248);
        v21 = v34;
      }
      sub_23A565198(v19, v21);
      *v16 = v21;
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_endAccess();
    sub_23A54CA88();
  }
}

uint64_t DTTransportDaemon.handleMonitorStopAll(xpcConnection:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char *v31;
  uint64_t *v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  int64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  __int128 v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  void *v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;

  v68 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  MEMORY[0x24BDAC7A8](v68);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = v1;
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsOutgoing);
  swift_beginAccess();
  v6 = *v5;
  v7 = *v5 + 64;
  v8 = 1 << *(_BYTE *)(*v5 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(*v5 + 64);
  v73 = (unint64_t)(v8 + 63) >> 6;
  v66 = *MEMORY[0x24BE2D498];
  result = swift_bridgeObjectRetain();
  v12 = 0;
  v72 = 0;
  *(_QWORD *)&v13 = 134217984;
  v65 = v13;
  v70 = v5;
  v71 = a1;
  v67 = v7;
  while (v10)
  {
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v15 = v14 | (v12 << 6);
LABEL_18:
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v19);
    v21 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v19);
    result = swift_weakLoadStrong();
    if (result)
    {
      v22 = result;
      swift_retain();
      swift_release();
      if (v22 == a1)
      {
        if (qword_2569973B0 != -1)
          swift_once();
        v23 = sub_23A59E6A4();
        __swift_project_value_buffer(v23, (uint64_t)qword_2569973B8);
        v24 = sub_23A59E68C();
        v25 = sub_23A59EBC0();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = swift_slowAlloc();
          *(_DWORD *)v26 = v65;
          *(_QWORD *)(v26 + 4) = v20;
          _os_log_impl(&dword_23A52C000, v24, v25, "Monitor stop: monitorID=%llu (XPC close)", (uint8_t *)v26, 0xCu);
          v27 = v26;
          a1 = v71;
          MEMORY[0x23B852178](v27, -1, -1);
        }

        swift_beginAccess();
        v28 = sub_23A563ED0(v20);
        if ((v29 & 1) != 0)
        {
          v30 = v28;
          v31 = v4;
          v32 = v70;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v34 = *v32;
          v75 = *v32;
          *v32 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_23A566284(&qword_256994248);
            v34 = v75;
          }
          sub_23A565198(v30, v34);
          *v32 = v34;
          swift_release();
          swift_bridgeObjectRelease();
          a1 = v71;
          v4 = v31;
        }
        swift_endAccess();
        sub_23A59E254();
        v35 = v68;
        v36 = &v4[*(int *)(v68 + 20)];
        sub_23A59E4DC();
        v37 = sub_23A59E680();
        (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v36, v66, v37);
        v38 = &v4[*(int *)(v35 + 24)];
        *(_QWORD *)v38 = 0;
        *((_QWORD *)v38 + 1) = 0;
        v4[*(int *)(v35 + 28)] = 2;
        v39 = v72;
        sub_23A54D9F0((uint64_t)v4, *(void **)(v21 + 16), (uint64_t)nullsub_1, 0);
        if (v39)
        {

          sub_23A53AC04((uint64_t)v4, type metadata accessor for DTTransportDaemon.DTTransportRequest);
          result = swift_release();
          v72 = 0;
        }
        else
        {
          v72 = 0;
          sub_23A53AC04((uint64_t)v4, type metadata accessor for DTTransportDaemon.DTTransportRequest);
          result = swift_release();
        }
        v7 = v67;
      }
      else
      {
        result = swift_release();
      }
    }
  }
  v16 = __OFADD__(v12++, 1);
  if (v16)
  {
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (v12 >= v73)
    goto LABEL_36;
  v17 = *(_QWORD *)(v7 + 8 * v12);
  if (v17)
  {
LABEL_17:
    v10 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
    goto LABEL_18;
  }
  v18 = v12 + 1;
  if (v12 + 1 >= v73)
    goto LABEL_36;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v12 + 2;
  if (v12 + 2 >= v73)
    goto LABEL_36;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v12 + 3;
  if (v12 + 3 >= v73)
  {
LABEL_36:
    swift_release();
    v40 = (uint64_t *)(v69 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsLocal);
    swift_beginAccess();
    v41 = *v40;
    v42 = *v40 + 64;
    v43 = 1 << *(_BYTE *)(*v40 + 32);
    v44 = -1;
    if (v43 < 64)
      v44 = ~(-1 << v43);
    v45 = v44 & *(_QWORD *)(*v40 + 64);
    v46 = (unint64_t)(v43 + 63) >> 6;
    result = swift_bridgeObjectRetain();
    v47 = 0;
    v73 = v46;
    while (1)
    {
      if (v45)
      {
        v48 = __clz(__rbit64(v45));
        v45 &= v45 - 1;
        v49 = v48 | (v47 << 6);
      }
      else
      {
        v16 = __OFADD__(v47++, 1);
        if (v16)
          goto LABEL_70;
        if (v47 >= v46)
        {
LABEL_68:
          swift_release();
          return sub_23A54CA88();
        }
        v50 = *(_QWORD *)(v42 + 8 * v47);
        if (!v50)
        {
          v51 = v47 + 1;
          if (v47 + 1 >= v46)
            goto LABEL_68;
          v50 = *(_QWORD *)(v42 + 8 * v51);
          if (!v50)
          {
            v51 = v47 + 2;
            if (v47 + 2 >= v46)
              goto LABEL_68;
            v50 = *(_QWORD *)(v42 + 8 * v51);
            if (!v50)
            {
              v51 = v47 + 3;
              if (v47 + 3 >= v46)
                goto LABEL_68;
              v50 = *(_QWORD *)(v42 + 8 * v51);
              if (!v50)
              {
                while (1)
                {
                  v47 = v51 + 1;
                  if (__OFADD__(v51, 1))
                    goto LABEL_72;
                  if (v47 >= v46)
                    goto LABEL_68;
                  v50 = *(_QWORD *)(v42 + 8 * v47);
                  ++v51;
                  if (v50)
                    goto LABEL_54;
                }
              }
            }
          }
          v47 = v51;
        }
LABEL_54:
        v45 = (v50 - 1) & v50;
        v49 = __clz(__rbit64(v50)) + (v47 << 6);
      }
      v52 = *(_QWORD *)(*(_QWORD *)(v41 + 48) + 8 * v49);
      result = swift_weakLoadStrong();
      if (result)
      {
        v53 = result;
        swift_retain();
        swift_release();
        if (v53 == a1)
        {
          v54 = v42;
          if (qword_2569973B0 != -1)
            swift_once();
          v55 = sub_23A59E6A4();
          __swift_project_value_buffer(v55, (uint64_t)qword_2569973B8);
          v56 = sub_23A59E68C();
          v57 = sub_23A59EBC0();
          if (os_log_type_enabled(v56, v57))
          {
            v58 = swift_slowAlloc();
            *(_DWORD *)v58 = v65;
            *(_QWORD *)(v58 + 4) = v52;
            _os_log_impl(&dword_23A52C000, v56, v57, "Monitor stop: monitorID=%llu (XPC close)", (uint8_t *)v58, 0xCu);
            v59 = v58;
            a1 = v71;
            MEMORY[0x23B852178](v59, -1, -1);
          }

          swift_beginAccess();
          v60 = sub_23A563ED0(v52);
          if ((v61 & 1) != 0)
          {
            v62 = v60;
            v63 = swift_isUniquelyReferenced_nonNull_native();
            v64 = *v40;
            v74 = *v40;
            *v40 = 0x8000000000000000;
            if ((v63 & 1) == 0)
            {
              sub_23A566284(&qword_256994240);
              v64 = v74;
            }
            sub_23A565198(v62, v64);
            *v40 = v64;
            swift_release();
            swift_bridgeObjectRelease();
            a1 = v71;
          }
          swift_endAccess();
          v42 = v54;
          v46 = v73;
        }
        result = swift_release();
      }
    }
  }
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    v12 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v73)
      goto LABEL_36;
    v17 = *(_QWORD *)(v7 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_17;
  }
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

void sub_23A54D9F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v8 = sub_23A59E260();
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a2, sel_device);
  if (v11
    && (v12 = v11,
        v13 = objc_msgSend(v11, sel_hmmmMessageDestination),
        v12,
        (v19 = v13) != 0))
  {
    v14 = objc_msgSend(a2, sel_home);
    if (v14)
    {
      v15 = v14;
      v16 = v19;
      sub_23A5549B4(a1, v14, (uint64_t)v19, a3, a4);

    }
    else
    {
      sub_23A59E614();
      v20 = 0;
      v21 = 0xE000000000000000;
      sub_23A59EE00();
      swift_bridgeObjectRelease();
      v20 = 0xD00000000000001FLL;
      v21 = 0x800000023A5A2620;
      v18 = objc_msgSend(a2, sel_uniqueIdentifier);
      sub_23A59E23C();

      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      sub_23A59F034();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
      sub_23A59E620();
      swift_willThrow();

    }
  }
  else
  {
    sub_23A59E614();
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    v20 = 0xD000000000000021;
    v21 = 0x800000023A5A25F0;
    v17 = objc_msgSend(a2, sel_uniqueIdentifier);
    sub_23A59E23C();

    sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_23A59F034();
    sub_23A59E9E0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
    sub_23A59E620();
    swift_willThrow();
  }
}

uint64_t sub_23A54DCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[21] = a3;
  v4[22] = v3;
  v4[19] = a1;
  v4[20] = a2;
  swift_getObjectType();
  v5 = sub_23A59E4AC();
  v4[23] = v5;
  v4[24] = *(_QWORD *)(v5 - 8);
  v4[25] = swift_task_alloc();
  sub_23A59E380();
  v4[26] = swift_task_alloc();
  v6 = sub_23A59E530();
  v4[27] = v6;
  v4[28] = *(_QWORD *)(v6 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v7 = sub_23A59E680();
  v4[32] = v7;
  v4[33] = *(_QWORD *)(v7 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  v4[36] = sub_23A59EA7C();
  v4[37] = v8;
  return swift_task_switch();
}

uint64_t sub_23A54DE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  int v10;
  id *v13;
  uint64_t Strong;
  id *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (**v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  void *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;

  v2 = *(_QWORD *)(v0 + 272);
  v1 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  *(_QWORD *)(v0 + 304) = v6;
  v7 = *(int *)(v6 + 20);
  *(_DWORD *)(v0 + 504) = v7;
  v8 = v5 + v7;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v9(v1, v8, v3);
  v9(v2, v1, v3);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v2, v3);
  if (v10 == *MEMORY[0x24BE2D4F8] || v10 == *MEMORY[0x24BE2D4B0] || v10 == *MEMORY[0x24BE2D4A0])
  {
    v13 = *(id **)(v0 + 272);
    (*(void (**)(id *, _QWORD))(*(_QWORD *)(v0 + 264) + 96))(v13, *(_QWORD *)(v0 + 256));

    swift_bridgeObjectRetain();
    sub_23A59E368();
    sub_23A59E50C();
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 312) = Strong;
    if (!Strong)
    {
      v25 = *(_QWORD *)(v0 + 280);
      v26 = *(_QWORD *)(v0 + 256);
      v27 = *(_QWORD *)(v0 + 264);
      v28 = *(_QWORD *)(v0 + 248);
      goto LABEL_22;
    }
    *(_QWORD *)(v0 + 320) = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon;
    *(_QWORD *)(v0 + 328) = type metadata accessor for DTDaemon();
    *(_QWORD *)(v0 + 336) = sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
    sub_23A59EA7C();
    return swift_task_switch();
  }
  if (v10 == *MEMORY[0x24BE2D4A8] || v10 == *MEMORY[0x24BE2D4B8])
  {
    v16 = *(id **)(v0 + 272);
    (*(void (**)(id *, _QWORD))(*(_QWORD *)(v0 + 264) + 96))(v16, *(_QWORD *)(v0 + 256));

    v17 = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 392) = v17;
    if (!v17)
    {
LABEL_25:
      v32 = *(_QWORD *)(v0 + 280);
      v33 = *(_QWORD *)(v0 + 256);
      v34 = *(_QWORD *)(v0 + 264);
      sub_23A59E614();
      sub_23A59E620();
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
      goto LABEL_26;
    }
    *(_QWORD *)(v0 + 400) = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon;
    type metadata accessor for DTDaemon();
    sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
    sub_23A59EA7C();
    return swift_task_switch();
  }
  if (v10 == *MEMORY[0x24BE2D4F0])
  {
    v19 = *(_QWORD *)(v0 + 280);
    v20 = *(_QWORD *)(v0 + 256);
    v21 = *(_QWORD *)(v0 + 264);
    v22 = *(uint64_t **)(v0 + 152);
    (*(void (**)(_QWORD, uint64_t))(v21 + 96))(*(_QWORD *)(v0 + 272), v20);
    v23 = sub_23A59E488();
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2B8];
    v22[3] = v23;
    v22[4] = sub_23A52EAEC(&qword_2569943B8, v24, MEMORY[0x24BE2D2B0]);
    __swift_allocate_boxed_opaque_existential_1(v22);
    sub_23A59E47C();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
LABEL_26:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v10 == *MEMORY[0x24BE2D4D0])
  {
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 472) = v31;
    *v31 = v0;
    v31[1] = sub_23A54F150;
    return sub_23A54FA2C(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
  }
  if (v10 != *MEMORY[0x24BE2D498])
  {
    if (v10 == *MEMORY[0x24BE2D4C8])
    {
      v36 = *(_QWORD *)(v0 + 272);
      v62 = *(_QWORD *)(v0 + 280);
      v37 = *(_QWORD *)(v0 + 256);
      v38 = *(_QWORD *)(v0 + 264);
      v39 = *(_QWORD *)(v0 + 192);
      v40 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v0 + 200);
      v41 = *(_QWORD *)(v0 + 184);
      v42 = *(void **)(v0 + 168);
      v43 = *(uint64_t **)(v0 + 152);
      (*(void (**)(uint64_t, uint64_t))(v38 + 96))(v36, v37);
      (*(void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v39 + 32))(v40, v36, v41);
      sub_23A551058(v40, v42);
      v44 = sub_23A59E470();
      v45 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2A0];
      v43[3] = v44;
      v43[4] = sub_23A52EAEC(&qword_2569943A0, v45, MEMORY[0x24BE2D290]);
      __swift_allocate_boxed_opaque_existential_1(v43);
      sub_23A59E464();
      (*(void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))(v39 + 8))(v40, v41);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v62, v37);
      goto LABEL_26;
    }
    if (v10 == *MEMORY[0x24BE2D488])
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
      goto LABEL_25;
    }
    if (v10 == *MEMORY[0x24BE2D490])
      goto LABEL_25;
    if (v10 != *MEMORY[0x24BE2D478])
    {
      v51 = *(_QWORD *)(v0 + 280);
      if (v10 == *MEMORY[0x24BE2D4E0])
      {
        v52 = *(_QWORD *)(v0 + 256);
        v53 = *(_QWORD *)(v0 + 264);
        v54 = *(uint64_t **)(v0 + 152);
        sub_23A550B50(*(void **)(v0 + 168));
        v55 = sub_23A59E470();
        v56 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2A0];
        v54[3] = v55;
        v54[4] = sub_23A52EAEC(&qword_2569943A0, v56, MEMORY[0x24BE2D290]);
        __swift_allocate_boxed_opaque_existential_1(v54);
        sub_23A59E464();
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
      }
      else
      {
        v57 = *(_QWORD *)(v0 + 272);
        v58 = *(_QWORD *)(v0 + 256);
        v59 = *(_QWORD *)(v0 + 152);
        v60 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 264) + 8);
        v60(*(_QWORD *)(v0 + 280), v58);
        *(_QWORD *)(v59 + 32) = 0;
        *(_OWORD *)v59 = 0u;
        *(_OWORD *)(v59 + 16) = 0u;
        v60(v57, v58);
      }
      goto LABEL_26;
    }
    v46 = (uint64_t *)(*(_QWORD *)(v0 + 160) + *(int *)(v6 + 24));
    v48 = *v46;
    v47 = v46[1];
    swift_bridgeObjectRetain();
    sub_23A59E368();
    sub_23A59E50C();
    if (v47)
    {
      sub_23A54F6BC(v48, v47);
      if (v49)
      {
        v50 = v49;
        sub_23A54BF5C();

      }
      sub_23A59E524();
    }
    v61 = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 432) = v61;
    if (v61)
    {
      *(_QWORD *)(v0 + 440) = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon;
      type metadata accessor for DTDaemon();
      sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
      sub_23A59EA7C();
      return swift_task_switch();
    }
    v25 = *(_QWORD *)(v0 + 280);
    v26 = *(_QWORD *)(v0 + 256);
    v27 = *(_QWORD *)(v0 + 264);
    v28 = *(_QWORD *)(v0 + 232);
LABEL_22:
    v29 = *(_QWORD *)(v0 + 216);
    v30 = *(_QWORD *)(v0 + 224);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    goto LABEL_26;
  }
  v35 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v35;
  *v35 = v0;
  v35[1] = sub_23A54F250;
  return sub_23A550400(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
}

uint64_t sub_23A54E614()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[39] + v0[40]);
  swift_beginAccess();
  v0[43] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A54E674()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 344);
  swift_release();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 352) = v2;
    *v2 = v0;
    v2[1] = sub_23A54E7E0;
    return DTTimerDaemon.handleRequest(_:context:)(v0 + 16, *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 248));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 280);
    v5 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 264);
    v7 = *(_QWORD *)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 216);
    v9 = *(_QWORD *)(v0 + 224);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A54E7E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A54E848()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 160) + *(int *)(*(_QWORD *)(v0 + 304) + 28)) & 1) != 0
    && (Strong = swift_weakLoadStrong(), (*(_QWORD *)(v0 + 368) = Strong) != 0))
  {
    *(_QWORD *)(v0 + 376) = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_syncDaemon;
    sub_23A59EA7C();
    return swift_task_switch();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 280);
    v4 = *(_QWORD *)(v0 + 256);
    v5 = *(_QWORD *)(v0 + 264);
    v6 = *(_QWORD *)(v0 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 216));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    sub_23A5490D4((__int128 *)(v0 + 16), v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A54E97C()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[46] + v0[47]);
  swift_beginAccess();
  v0[48] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A54E9DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 384);
  swift_release();
  if (v1)
  {
    type metadata accessor for DTSyncDaemon();
    sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
    sub_23A59EA7C();
    return swift_task_switch();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 280);
    v4 = *(_QWORD *)(v0 + 256);
    v5 = *(_QWORD *)(v0 + 264);
    v6 = *(_QWORD *)(v0 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 216));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    sub_23A5490D4((__int128 *)(v0 + 16), v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A54EB10()
{
  uint64_t *v0;
  void *v1;

  v1 = (void *)v0[45];
  DTSyncDaemon.handleRequest(_:context:)(v0[35], v0[31]);
  if (v1)

  return swift_task_switch();
}

uint64_t sub_23A54EB78()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[49] + v0[50]);
  swift_beginAccess();
  v0[51] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A54EBD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 408);
  swift_release();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23A59E368();
    sub_23A59E50C();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v2;
    *v2 = v0;
    v2[1] = sub_23A54ED5C;
    return DTTimerDaemon.handleRequest(_:context:)(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 240));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 280);
    v5 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 264);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A54ED5C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 424) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[28] + 8))(v2[30], v2[27]);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A54EDE0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54EE70()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[54] + v0[55]);
  swift_beginAccess();
  v0[56] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A54EED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 448);
  swift_release();
  if (v1)
  {
    v2 = *(int *)(v0 + 504);
    v3 = *(_QWORD *)(v0 + 160);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v4;
    *v4 = v0;
    v4[1] = sub_23A54F040;
    return DTTimerDaemon.handleRequest(_:context:)(*(_QWORD *)(v0 + 152), v3 + v2, *(_QWORD *)(v0 + 232));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 280);
    v7 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 264);
    v10 = *(_QWORD *)(v0 + 224);
    v9 = *(_QWORD *)(v0 + 232);
    v11 = *(_QWORD *)(v0 + 216);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A54F040()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A54F0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54F150()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A54F1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 264) + 8);
  v3(*(_QWORD *)(v0 + 280), v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54F250()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 496) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A54F2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54F360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 264) + 8);
  v3(*(_QWORD *)(v0 + 280), v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54F408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 264) + 8);
  v3(*(_QWORD *)(v0 + 280), v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54F4B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 216));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54F560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 216));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_23A5490D4((__int128 *)(v0 + 16), v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54F624()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23A54F6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  BOOL v13;
  unint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a2;
  v38 = a1;
  v3 = sub_23A59E260();
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager);
  if (v6)
  {
    v7 = objc_msgSend(v6, sel_homes);
    sub_23A53AB74(0, &qword_2569942E0);
    v8 = sub_23A59EA34();

    if (!(v8 >> 62))
      goto LABEL_3;
LABEL_27:
    swift_bridgeObjectRetain();
    v9 = sub_23A59EED8();
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_28:
    swift_bridgeObjectRelease();
    return;
  }
  v8 = MEMORY[0x24BEE4AF8];
  if (MEMORY[0x24BEE4AF8] >> 62)
    goto LABEL_27;
LABEL_3:
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_28;
LABEL_4:
  v10 = 0;
  v11 = v8 & 0xC000000000000001;
  v28 = v8 + 32;
  v29 = v8 & 0xFFFFFFFFFFFFFF8;
  v30 = v8 & 0xC000000000000001;
  v31 = v9;
  v32 = v8;
  while (1)
  {
    if (v11)
    {
      v12 = (id)MEMORY[0x23B85198C](v10, v8);
      v13 = __OFADD__(v10, 1);
      v14 = v10 + 1;
      if (v13)
        goto LABEL_33;
    }
    else
    {
      if (v10 >= *(_QWORD *)(v29 + 16))
        goto LABEL_34;
      v12 = *(id *)(v28 + 8 * v10);
      v13 = __OFADD__(v10, 1);
      v14 = v10 + 1;
      if (v13)
        goto LABEL_33;
    }
    v34 = v12;
    v15 = objc_msgSend(v12, sel_accessories);
    sub_23A53AB74(0, &qword_2569939B0);
    v16 = sub_23A59EA34();

    v33 = v14;
    if (v16 >> 62)
      break;
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17)
      goto LABEL_14;
LABEL_5:

    swift_bridgeObjectRelease_n();
    v8 = v32;
    v10 = v33;
    v11 = v30;
    if (v33 == v31)
      goto LABEL_28;
  }
  swift_bridgeObjectRetain_n();
  v17 = sub_23A59EED8();
  swift_bridgeObjectRelease();
  if (!v17)
    goto LABEL_5;
LABEL_14:
  v18 = 4;
  while (1)
  {
    v19 = (v16 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x23B85198C](v18 - 4, v16)
        : *(id *)(v16 + 8 * v18);
    v20 = v19;
    v21 = v18 - 3;
    if (__OFADD__(v18 - 4, 1))
      break;
    v22 = objc_msgSend(v19, sel_uniqueIdentifier);
    sub_23A59E23C();

    v23 = sub_23A59E20C();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v36);
    if (v23 == v38 && v25 == v37)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v26 = sub_23A59F064();
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
    {
      swift_bridgeObjectRelease();

      goto LABEL_31;
    }

    ++v18;
    if (v21 == v17)
      goto LABEL_5;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_23A54FA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[19] = a3;
  v4[20] = v3;
  v4[17] = a1;
  v4[18] = a2;
  swift_getObjectType();
  sub_23A59E380();
  v4[21] = swift_task_alloc();
  v5 = sub_23A59E530();
  v4[22] = v5;
  v4[23] = *(_QWORD *)(v5 - 8);
  v4[24] = swift_task_alloc();
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  v4[25] = sub_23A59EA7C();
  v4[26] = v6;
  return swift_task_switch();
}

uint64_t sub_23A54FAEC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  *(_DWORD *)(v0 + 264) = *(_DWORD *)(v1 + 20);
  *(_QWORD *)(v0 + 216) = sub_23A59E674();
  if ((v2 & 1) != 0)
  {
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 144);
    v4 = *(int *)(v1 + 24);
    *(_DWORD *)(v0 + 268) = v4;
    v5 = (uint64_t *)(v3 + v4);
    v7 = *v5;
    v6 = v5[1];
    swift_bridgeObjectRetain();
    sub_23A59E368();
    sub_23A59E50C();
    if (v6)
    {
      sub_23A54F6BC(v7, v6);
      if (v8)
      {
        v9 = v8;
        sub_23A54BF5C();

      }
      sub_23A59E524();
    }
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 224) = Strong;
    if (Strong)
    {
      *(_QWORD *)(v0 + 232) = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon;
      type metadata accessor for DTDaemon();
      sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
      sub_23A59EA7C();
      return swift_task_switch();
    }
    v13 = *(_QWORD *)(v0 + 184);
    v12 = *(_QWORD *)(v0 + 192);
    v14 = *(_QWORD *)(v0 + 176);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A54FD08()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[28] + v0[29]);
  swift_beginAccess();
  v0[30] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A54FD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 240);
  swift_release();
  if (v1)
  {
    v2 = *(int *)(v0 + 264);
    v3 = *(_QWORD *)(v0 + 144);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v4;
    *v4 = v0;
    v4[1] = sub_23A54FE7C;
    return DTTimerDaemon.handleRequest(_:context:)(v0 + 16, v3 + v2, *(_QWORD *)(v0 + 192));
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 176);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A54FE7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A54FEE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  unint64_t v38;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 144) + *(int *)(v0 + 268));
  v2 = v1[1];
  if (v2)
  {
    sub_23A54F6BC(*v1, v2);
    v4 = v3;
  }
  else
  {
    v4 = 0;
  }
  v5 = *(_QWORD *)(v0 + 216);
  v6 = *(void **)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v4;
  v34 = v4;
  v36 = v4;
  v9 = objc_msgSend(v6, sel_peerDestination);
  swift_retain();
  v10 = sub_23A59E344();
  type metadata accessor for DTTransportDaemon.DTTransportMonitorInfoIncoming();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v9;
  v11[3] = sub_23A56E604;
  v11[4] = v8;
  v11[5] = v5;
  v11[6] = v10;
  v35 = v9;
  v12 = objc_msgSend(v9, sel_idsIdentifier);
  v13 = sub_23A59E9A4();
  v15 = v14;

  v37 = v13;
  v38 = v15;
  sub_23A59E9E0();
  *(_QWORD *)(v0 + 104) = v5;
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  v16 = v37;
  v17 = v38;
  v18 = (uint64_t *)(v7 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsIncoming);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v37 = *v18;
  *v18 = 0x8000000000000000;
  sub_23A5658F4((uint64_t)v11, v16, v17, isUniquelyReferenced_nonNull_native);
  *v18 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (qword_2569973B0 != -1)
    swift_once();
  v20 = sub_23A59E6A4();
  __swift_project_value_buffer(v20, (uint64_t)qword_2569973B8);
  swift_retain_n();
  swift_bridgeObjectRetain();
  v21 = sub_23A59E68C();
  v22 = sub_23A59EBC0();
  if (os_log_type_enabled(v21, v22))
  {
    v32 = v22;
    v23 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v37 = v33;
    *(_DWORD *)v23 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 112) = sub_23A538FBC(v16, v17, &v37);
    sub_23A59ED1C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 12) = 2080;
    if (v34)
    {
      *(_QWORD *)(v0 + 128) = sub_23A54BF5C();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569939E8);
      sub_23A56D9E4(&qword_2569939F0, &qword_2569939E8, MEMORY[0x24BEE12B0]);
      v24 = sub_23A59E974();
      v26 = v25;
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = 0xE300000000000000;
      v24 = 7104878;
    }
    *(_QWORD *)(v0 + 120) = sub_23A538FBC(v24, v26, &v37);
    sub_23A59ED1C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v21, v32, "monitor start incoming: monitorID=%s, targets=[%s]", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v33, -1, -1);
    MEMORY[0x23B852178](v23, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  v28 = *(_QWORD *)(v0 + 184);
  v27 = *(_QWORD *)(v0 + 192);
  v29 = *(_QWORD *)(v0 + 176);
  v30 = *(_QWORD *)(v0 + 136);
  sub_23A54CA88();

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  sub_23A5490D4((__int128 *)(v0 + 16), v30);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5503B0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A550400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  swift_getObjectType();
  sub_23A59E380();
  v4[14] = swift_task_alloc();
  v5 = sub_23A59E530();
  v4[15] = v5;
  v4[16] = *(_QWORD *)(v5 - 8);
  v4[17] = swift_task_alloc();
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  v4[18] = sub_23A59EA7C();
  v4[19] = v6;
  return swift_task_switch();
}

uint64_t sub_23A5504C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v1 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  *(_QWORD *)(v0 + 160) = v1;
  *(_DWORD *)(v0 + 216) = *(_DWORD *)(v1 + 20);
  v2 = sub_23A59E674();
  if ((v3 & 1) != 0)
  {
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
  }
  else
  {
    v4 = v2;
    v5 = objc_msgSend(*(id *)(v0 + 96), sel_peerDestination);
    *(_QWORD *)(v0 + 168) = v5;
    v6 = objc_msgSend(v5, sel_idsIdentifier);
    v7 = sub_23A59E9A4();
    v9 = v8;

    v20 = v7;
    v21 = v9;
    sub_23A59E9E0();
    *(_QWORD *)(v0 + 64) = v4;
    sub_23A59F034();
    sub_23A59E9E0();
    swift_bridgeObjectRelease();
    v11 = v20;
    v10 = v21;
    swift_beginAccess();
    sub_23A563D98(v20, v21);
    swift_endAccess();
    swift_release();
    if (qword_2569973B0 != -1)
      swift_once();
    v12 = sub_23A59E6A4();
    __swift_project_value_buffer(v12, (uint64_t)qword_2569973B8);
    swift_bridgeObjectRetain();
    v13 = sub_23A59E68C();
    v14 = sub_23A59EBC0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v20 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 72) = sub_23A538FBC(v11, v10, &v20);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A52C000, v13, v14, "monitor stop incoming: monitorID=%s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v16, -1, -1);
      MEMORY[0x23B852178](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_23A54CA88();
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 176) = Strong;
    if (Strong)
    {
      *(_QWORD *)(v0 + 184) = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon;
      type metadata accessor for DTDaemon();
      sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
      sub_23A59EA7C();
      return swift_task_switch();
    }
    v19 = *(void **)(v0 + 168);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A550890()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[22] + v0[23]);
  swift_beginAccess();
  v0[24] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5508F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v6;

  v1 = *(_QWORD *)(v0 + 192);
  swift_release();
  if (v1)
  {
    v2 = *(int *)(v0 + 216);
    v3 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRetain();
    sub_23A59E368();
    sub_23A59E50C();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v4;
    *v4 = v0;
    v4[1] = sub_23A550A38;
    return DTTimerDaemon.handleRequest(_:context:)(*(_QWORD *)(v0 + 80), v3 + v2, *(_QWORD *)(v0 + 136));
  }
  else
  {
    v6 = *(void **)(v0 + 168);
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A550A38()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[16] + 8))(v2[17], v2[15]);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A550ABC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A550B08()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23A550B50(void *a1)
{
  int64_t v1;
  int64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];

  v2 = v1;
  v3 = objc_msgSend(a1, sel_peerDestination);
  v4 = objc_msgSend(v3, sel_idsIdentifier);

  v5 = sub_23A59E9A4();
  v7 = v6;

  if (qword_2569973B0 == -1)
    goto LABEL_2;
LABEL_41:
  swift_once();
LABEL_2:
  v8 = sub_23A59E6A4();
  __swift_project_value_buffer(v8, (uint64_t)qword_2569973B8);
  swift_bridgeObjectRetain_n();
  v9 = sub_23A59E68C();
  v10 = sub_23A59EBC0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v40[0] = v12;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain();
    v39 = sub_23A538FBC(v5, v7, v40);
    sub_23A59ED1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A52C000, v9, v10, "Received monitor keepalive: from:%s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v12, -1, -1);
    MEMORY[0x23B852178](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsIncoming);
  swift_beginAccess();
  v14 = *v13;
  v38 = v14 + 64;
  v15 = 1 << *(_BYTE *)(v14 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v14 + 64);
  v2 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain();
  v18 = 0;
  v19 = 0;
LABEL_10:
  v37 = v18;
  if (v17)
  {
LABEL_11:
    v20 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v21 = v20 | (v19 << 6);
    goto LABEL_26;
  }
  while (1)
  {
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v22 >= v2)
      goto LABEL_33;
    v23 = *(_QWORD *)(v38 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v2)
        goto LABEL_33;
      v23 = *(_QWORD *)(v38 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v2)
          goto LABEL_33;
        v23 = *(_QWORD *)(v38 + 8 * v19);
        if (!v23)
          break;
      }
    }
LABEL_25:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_26:
    v25 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v21);
    v26 = *(void **)(v25 + 16);
    swift_retain();
    v27 = objc_msgSend(v26, sel_idsIdentifier);
    v28 = sub_23A59E9A4();
    v30 = v29;

    if (v5 == v28 && v7 == v30)
    {
      swift_bridgeObjectRelease();
LABEL_9:
      *(_QWORD *)(v25 + 48) = sub_23A59E344();
      swift_release();
      v18 = v37 + 1;
      if (!__OFADD__(v37, 1))
        goto LABEL_10;
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    v32 = sub_23A59F064();
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
      goto LABEL_9;
    swift_release();
    if (v17)
      goto LABEL_11;
  }
  v24 = v22 + 3;
  if (v24 < v2)
  {
    v23 = *(_QWORD *)(v38 + 8 * v24);
    if (!v23)
    {
      while (1)
      {
        v19 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_39;
        if (v19 >= v2)
          goto LABEL_33;
        v23 = *(_QWORD *)(v38 + 8 * v19);
        ++v24;
        if (v23)
          goto LABEL_25;
      }
    }
    v19 = v24;
    goto LABEL_25;
  }
LABEL_33:
  swift_release();
  if (v37)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v33 = sub_23A59E68C();
    v34 = sub_23A59EBC0();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v39 = v36;
      *(_DWORD *)v35 = 136315138;
      swift_bridgeObjectRetain();
      sub_23A538FBC(v5, v7, &v39);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A52C000, v33, v34, "Received monitor keepalive: no monitors, from:%s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v36, -1, -1);
      MEMORY[0x23B852178](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_23A551058(unsigned int (**a1)(uint64_t, uint64_t, uint64_t), void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (**v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t isEscapingClosureAtFileLocation;
  id v13;
  id v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  char v46;
  uint64_t Strong;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t i;
  unsigned int (**v58)(uint64_t, uint64_t, uint64_t);
  unsigned int (**v59)(uint64_t, uint64_t, uint64_t);
  int64_t v60;
  unsigned int (**v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  unint64_t v63;
  uint64_t v64[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v55 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v52 - v7);
  v9 = sub_23A59E4AC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  isEscapingClosureAtFileLocation = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a2, sel_peerDestination);
  v14 = objc_msgSend(v13, sel_idsIdentifier);

  v56 = sub_23A59E9A4();
  v16 = v15;

  if (qword_2569973B0 != -1)
LABEL_48:
    swift_once();
  v17 = sub_23A59E6A4();
  __swift_project_value_buffer(v17, (uint64_t)qword_2569973B8);
  (*(void (**)(uint64_t, unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))(v10 + 16))(isEscapingClosureAtFileLocation, a1, v9);
  swift_bridgeObjectRetain_n();
  v18 = sub_23A59E68C();
  v19 = sub_23A59EBC0();
  v20 = os_log_type_enabled(v18, v19);
  v58 = v8;
  v59 = a1;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v8 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
    v64[0] = (uint64_t)v8;
    *(_DWORD *)v21 = 136315394;
    i = v21 + 4;
    sub_23A52EAEC(&qword_2569943C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2D0], MEMORY[0x24BE2D2D8]);
    v22 = sub_23A59F034();
    v62 = sub_23A538FBC(v22, v23, v64);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(isEscapingClosureAtFileLocation, v9);
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain();
    v62 = sub_23A538FBC(v56, (unint64_t)v16, v64);
    sub_23A59ED1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A52C000, v18, v19, "Received monitor event: %s, from:%s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v8, -1, -1);
    v24 = v21;
    a1 = v59;
    MEMORY[0x23B852178](v24, -1, -1);

  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(isEscapingClosureAtFileLocation, v9);

    swift_bridgeObjectRelease_n();
  }
  v25 = (uint64_t *)(v60 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsOutgoing);
  swift_beginAccess();
  v9 = *v25;
  v26 = *v25 + 64;
  v27 = 1 << *(_BYTE *)(*v25 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & *(_QWORD *)(*v25 + 64);
  v60 = (unint64_t)(v27 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  v53 = 0;
  v54 = v9;
  isEscapingClosureAtFileLocation = (uint64_t)v55;
  for (i = v26; ; v26 = i)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          if (v29)
          {
            v30 = __clz(__rbit64(v29));
            v29 &= v29 - 1;
            v31 = v30 | (v10 << 6);
          }
          else
          {
            if (__OFADD__(v10++, 1))
            {
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
              goto LABEL_48;
            }
            if (v10 >= v60)
              goto LABEL_44;
            v33 = *(_QWORD *)(v26 + 8 * v10);
            if (!v33)
            {
              v34 = v10 + 1;
              if (v10 + 1 >= v60)
                goto LABEL_44;
              v33 = *(_QWORD *)(v26 + 8 * v34);
              if (!v33)
              {
                v34 = v10 + 2;
                if (v10 + 2 >= v60)
                  goto LABEL_44;
                v33 = *(_QWORD *)(v26 + 8 * v34);
                if (!v33)
                {
                  v34 = v10 + 3;
                  if (v10 + 3 >= v60)
                  {
LABEL_44:
                    swift_bridgeObjectRelease();
                    return swift_release();
                  }
                  v33 = *(_QWORD *)(v26 + 8 * v34);
                  if (!v33)
                  {
                    while (1)
                    {
                      v10 = v34 + 1;
                      if (__OFADD__(v34, 1))
                        goto LABEL_46;
                      if (v10 >= v60)
                        goto LABEL_44;
                      v33 = *(_QWORD *)(v26 + 8 * v10);
                      ++v34;
                      if (v33)
                        goto LABEL_21;
                    }
                  }
                }
              }
              v10 = v34;
            }
LABEL_21:
            v29 = (v33 - 1) & v33;
            v31 = __clz(__rbit64(v33)) + (v10 << 6);
          }
          v35 = 8 * v31;
          v8 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 48) + v35);
          v36 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + v35);
          swift_retain();
          if (v8 == (unsigned int (**)(uint64_t, uint64_t, uint64_t))sub_23A59E4A0())
            break;
          swift_release();
        }
        v37 = *(void **)(v36 + 16);
        swift_bridgeObjectRetain();
        v38 = objc_msgSend(v37, sel_device);
        if (v38)
          break;
        swift_release();
        swift_bridgeObjectRelease();
      }
      v39 = v38;
      v40 = objc_msgSend(v38, sel_idsIdentifier);

      if (v40)
      {
        sub_23A59E23C();

        v41 = sub_23A59E260();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(isEscapingClosureAtFileLocation, 0, 1, v41);
      }
      else
      {
        v41 = sub_23A59E260();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(isEscapingClosureAtFileLocation, 1, 1, v41);
      }
      v42 = (uint64_t)v58;
      sub_23A53AAEC(isEscapingClosureAtFileLocation, (uint64_t)v58, &qword_256993720);
      sub_23A59E260();
      v8 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v41 - 8);
      if (v8[6](v42, 1, v41) != 1)
        break;
      sub_23A53B9B4(v42, &qword_256993720);
      swift_release();
      swift_bridgeObjectRelease();
      a1 = v59;
      v26 = i;
    }
    v43 = sub_23A59E20C();
    v45 = v44;
    ((void (*)(uint64_t, uint64_t))v8[1])(v42, v41);
    if (v56 == v43 && v16 == v45)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v46 = sub_23A59F064();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v46 & 1) == 0)
        goto LABEL_42;
    }
    Strong = swift_weakLoadStrong();
    if (!Strong)
    {
LABEL_42:
      swift_release();
      isEscapingClosureAtFileLocation = (uint64_t)v55;
      a1 = v59;
      goto LABEL_43;
    }
    a1 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))Strong;
    v9 = (uint64_t)v16;
    v52 = (uint64_t)&v52;
    MEMORY[0x24BDAC7A8](Strong);
    v16 = &v52 - 4;
    v8 = v59;
    type metadata accessor for DTXPCConnection();
    sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
    sub_23A59EA7C();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      break;
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = sub_23A56E630;
    *(_QWORD *)(v48 + 24) = v16;
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = sub_23A56EAD0;
    *(_QWORD *)(v49 + 24) = v48;
    swift_retain();
    v50 = v53;
    sub_23A548F60();
    swift_release();
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      goto LABEL_47;
    v53 = v50;
    a1 = v8;
    isEscapingClosureAtFileLocation = (uint64_t)v55;
    v16 = (uint64_t *)v9;
LABEL_43:
    v9 = v54;
  }
  v62 = 0;
  v63 = 0xE000000000000000;
  sub_23A59EE00();
  sub_23A59E9E0();
  v61 = a1;
  sub_23A59EEB4();
  sub_23A59E9E0();
  result = sub_23A59EECC();
  __break(1u);
  return result;
}

uint64_t sub_23A5518A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char isEscapingClosureAtFileLocation;

  sub_23A52EAEC(&qword_256994310, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCServer, (uint64_t)&protocol conformance descriptor for DTXPCServer);
  sub_23A59EA7C();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    goto LABEL_6;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23A56EAD0;
  *(_QWORD *)(v6 + 24) = v5;
  swift_retain();
  sub_23A548F60();
  if (v2)
  {
    swift_release();
    return swift_release();
  }
  swift_release();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_6:
    sub_23A59EE00();
    sub_23A59E9E0();
    sub_23A59EEB4();
    sub_23A59E9E0();
    result = sub_23A59EECC();
    __break(1u);
  }
  return result;
}

void sub_23A551A94()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_2569973B0 != -1)
    swift_once();
  v0 = sub_23A59E6A4();
  __swift_project_value_buffer(v0, (uint64_t)qword_2569973B8);
  oslog = sub_23A59E68C();
  v1 = sub_23A59EBC0();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_23A52C000, oslog, v1, "XPC launch event", v2, 2u);
    MEMORY[0x23B852178](v2, -1, -1);
  }

}

uint64_t sub_23A551B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[5];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v14 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = sub_23A59E560();
    v9 = sub_23A59EAB8();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, 1, 1, v9);
    sub_23A53AAEC((uint64_t)v5, (uint64_t)v3, (uint64_t *)&unk_256993920);
    v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v3, 1, v9);
    swift_retain();
    if (v11 == 1)
    {
      sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
    }
    else
    {
      sub_23A59EAAC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v3, v9);
    }
    v12 = sub_23A56B150();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = &unk_256994260;
    *(_QWORD *)(v13 + 24) = v7;
    v14[1] = 6;
    v14[2] = 0;
    v14[3] = v8;
    v14[4] = v12;
    swift_task_create();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23A551D38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  swift_getObjectType();
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A551DB0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(_QWORD *)(v1 + 24))
  {
    swift_retain();
    v2 = sub_23A59E2CC();
    swift_release();
  }
  else
  {
    v2 = 0;
  }
  if (qword_2569973B0 != -1)
    swift_once();
  v3 = sub_23A59E6A4();
  __swift_project_value_buffer(v3, (uint64_t)qword_2569973B8);
  v4 = sub_23A59E68C();
  v5 = sub_23A59EBC0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 134217984;
    sub_23A59ED1C();
    _os_log_impl(&dword_23A52C000, v4, v5, "Diagnostic flags: state=%llu", v6, 0xCu);
    MEMORY[0x23B852178](v6, -1, -1);
  }

  if ((v2 & 1) != 0)
  {
    if ((v2 & 2) != 0)
    {
      if ((v2 & 4) != 0)
      {
        v7 = 3;
        if ((v2 & 8) == 0)
          goto LABEL_17;
      }
      else
      {
        v7 = 1;
        if ((v2 & 8) == 0)
          goto LABEL_17;
      }
    }
    else if ((v2 & 4) != 0)
    {
      v7 = 2;
      if ((v2 & 8) == 0)
        goto LABEL_17;
    }
    else
    {
      v7 = 0;
      if ((v2 & 8) == 0)
        goto LABEL_17;
    }
    v7 |= 4uLL;
    goto LABEL_17;
  }
  v7 = 0;
LABEL_17:
  v8 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__statusFlagsOverride;
  *(_QWORD *)v8 = v7;
  *(_BYTE *)(v8 + 8) = (v2 & 1) == 0;
  sub_23A551F5C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A551F5C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  BOOL v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15[3];
  uint64_t v16;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__statusFlags);
  swift_beginAccess();
  v2 = *v1;
  v16 = *v1;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__statusFlagsOverride + 8) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__statusFlagsOverride);
    goto LABEL_12;
  }
  if ((v2 & 4) == 0)
  {
    v2 |= 4uLL;
    v16 = v2;
  }
  v3 = *(void **)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager);
  if (!v3)
  {
    if ((v2 & 1) != 0)
      goto LABEL_13;
    v2 |= 1uLL;
LABEL_12:
    v16 = v2;
    goto LABEL_13;
  }
  if (objc_msgSend(v3, sel_hasOptedToHH2))
    v4 = (v2 & 2) == 0;
  else
    v4 = 0;
  if (v4)
  {
    v2 |= 2uLL;
    goto LABEL_12;
  }
LABEL_13:
  if (v2 != *v1)
  {
    if (qword_2569973B0 != -1)
      swift_once();
    v5 = sub_23A59E6A4();
    __swift_project_value_buffer(v5, (uint64_t)qword_2569973B8);
    swift_retain_n();
    v6 = sub_23A59E68C();
    v7 = sub_23A59EBC0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v15[0] = v9;
      *(_DWORD *)v8 = 136315394;
      v10 = sub_23A59EC38();
      sub_23A538FBC(v10, v11, v15);
      sub_23A59ED1C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      swift_beginAccess();
      v12 = sub_23A59EC38();
      sub_23A538FBC(v12, v13, v15);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v6, v7, "Status flags updated: old=%s, new=%s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v9, -1, -1);
      MEMORY[0x23B852178](v8, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    v2 = v16;
    *v1 = v16;
    if (swift_weakLoadStrong())
    {
      sub_23A5439C0((uint64_t)sub_23A557E04, 0);
      swift_release();
    }
  }
  return v2;
}

uint64_t DTTransportDaemon.report(eventType:timers:)(uint64_t a1, unint64_t a2)
{
  DTTransportDaemon.reportIncoming(eventType:timers:)(a1, a2);
  DTTransportDaemon.reportOutgoing(eventType:timers:)(a1, a2);
  return DTTransportDaemon.reportLocal(eventType:timers:)(a1, a2);
}

void DTTransportDaemon.reportIncoming(eventType:timers:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  __int128 v21;
  unint64_t i;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  int *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  id v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  id v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  os_log_type_t v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  _QWORD v105[2];
  __int128 v106;
  uint64_t v107;
  __int128 v108;
  int64_t v109;
  uint64_t v110;
  int64_t v111;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  NSObject *v130;
  uint64_t v131;
  uint64_t v132[3];
  unint64_t v133;
  uint64_t v134;

  v124 = a1;
  v122 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  v116 = *(_QWORD *)(v122 - 8);
  v4 = *(_QWORD *)(v116 + 64);
  v5 = MEMORY[0x24BDAC7A8](v122);
  v115 = (uint64_t)v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v105 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v114 = (uint64_t)v105 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v105 - v11;
  v118 = v2;
  v13 = *(void **)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager);
  if (!v13 || (v117 = objc_msgSend(v13, sel_currentHome)) == 0)
  {
    if (qword_2569973B0 != -1)
      goto LABEL_65;
    goto LABEL_58;
  }
  v14 = (uint64_t *)(v118 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsIncoming);
  swift_beginAccess();
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 64);
  v107 = *v14 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v109 = (unint64_t)(v17 + 63) >> 6;
  v130 = v132;
  v113 = *MEMORY[0x24BE2D4C8];
  v112 = v4 + 7;
  v119 = v15;
  swift_bridgeObjectRetain();
  v20 = 0;
  *(_QWORD *)&v21 = 136316162;
  v106 = v21;
  v105[1] = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v21 = 136315650;
  v108 = v21;
  v120 = a2;
  v121 = v8;
  v123 = v12;
  if (!v19)
    goto LABEL_7;
LABEL_6:
  v127 = (v19 - 1) & v19;
  for (i = __clz(__rbit64(v19)) | (v20 << 6); ; i = __clz(__rbit64(v24)) + (v20 << 6))
  {
    v26 = *(_QWORD *)(v119 + 56);
    v27 = (uint64_t *)(*(_QWORD *)(v119 + 48) + 16 * i);
    v28 = v27[1];
    v125 = *v27;
    v29 = *(_QWORD *)(v26 + 8 * i);
    v133 = a2;
    v30 = *(uint64_t (**)(uint64_t))(v29 + 24);
    swift_bridgeObjectRetain();
    swift_retain();
    v31 = swift_bridgeObjectRetain();
    v32 = v30(v31);
    if (v32)
    {
      v33 = (_QWORD *)v32;
      if (a2)
      {
        v34 = swift_bridgeObjectRetain();
        v35 = sub_23A56AA14(v34, v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v35 = 0;
      }
      swift_beginAccess();
      v133 = v35;
      swift_bridgeObjectRelease();
      if (v35)
      {
        if (v35 >> 62)
        {
          swift_bridgeObjectRetain();
          v98 = sub_23A59EED8();
          swift_bridgeObjectRelease();
          if (!v98)
          {
LABEL_54:
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
LABEL_55:
            v19 = v127;
            if (v127)
              goto LABEL_6;
            goto LABEL_7;
          }
        }
        else if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_54;
        }
      }
    }
    if (qword_2569973B0 != -1)
      swift_once();
    v126 = 0;
    v36 = sub_23A59E6A4();
    v37 = __swift_project_value_buffer(v36, (uint64_t)qword_2569973B8);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v129 = v37;
    v38 = sub_23A59E68C();
    v39 = sub_23A59EBC0();
    v40 = os_log_type_enabled(v38, v39);
    v128 = v28;
    if (v40)
    {
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v132[0] = v42;
      *(_DWORD *)v41 = v106;
      v43 = sub_23A59EC20();
      v131 = sub_23A538FBC(v43, v44, v132);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      swift_beginAccess();
      if (v133)
      {
        v45 = sub_23A59ECB0();
        v46 = swift_bridgeObjectRetain();
        v47 = MEMORY[0x23B8515B4](v46, v45);
        v49 = v48;
        swift_bridgeObjectRelease();
      }
      else
      {
        v49 = 0xE300000000000000;
        v47 = 7104878;
      }
      v131 = sub_23A538FBC(v47, v49, v132);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 22) = 2080;
      v51 = v120;
      if (v120)
      {
        v52 = sub_23A59ECB0();
        v53 = MEMORY[0x23B8515B4](v51, v52);
        v55 = v54;
      }
      else
      {
        v55 = 0xE300000000000000;
        v53 = 7104878;
      }
      v131 = sub_23A538FBC(v53, v55, v132);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      v56 = swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 32) = 2080;
      v57 = (*(uint64_t (**)(uint64_t))(v29 + 24))(v56);
      if (v57)
      {
        v131 = v57;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569939E8);
        sub_23A56D9E4(&qword_2569939F0, &qword_2569939E8, MEMORY[0x24BEE12B0]);
        v58 = sub_23A59E974();
        v60 = v59;
        swift_bridgeObjectRelease();
      }
      else
      {
        v60 = 0xE300000000000000;
        v58 = 7104878;
      }
      v131 = sub_23A538FBC(v58, v60, v132);
      sub_23A59ED1C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 42) = 2080;
      v61 = v128;
      swift_bridgeObjectRetain();
      v131 = sub_23A538FBC(v125, v61, v132);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A52C000, v38, v39, "Report event: event=%s, filteredTimers=%s, timers=%s, targets=[%s], peer=%s, incoming", (uint8_t *)v41, 0x34u);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v42, -1, -1);
      MEMORY[0x23B852178](v41, -1, -1);

      v50 = (int *)v122;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      v50 = (int *)v122;
    }
    sub_23A59E254();
    v62 = &v12[v50[5]];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23A59E494();
    v63 = sub_23A59E680();
    (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v63 - 8) + 104))(v62, v113, v63);
    v64 = &v12[v50[6]];
    *(_QWORD *)v64 = 0;
    *((_QWORD *)v64 + 1) = 0;
    v12[v50[7]] = 2;
    v65 = v114;
    sub_23A53ABC0((uint64_t)v12, v114, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    v66 = (uint64_t)v12;
    v67 = (uint64_t)v121;
    sub_23A53ABC0(v66, (uint64_t)v121, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    swift_retain_n();
    v68 = sub_23A59E68C();
    v69 = sub_23A59EBC0();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = swift_slowAlloc();
      v110 = swift_slowAlloc();
      v132[0] = v110;
      *(_DWORD *)v70 = v108;
      sub_23A59E260();
      v111 = v20;
      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v71 = sub_23A59F034();
      v131 = sub_23A538FBC(v71, v72, v132);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04(v65, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      *(_WORD *)(v70 + 12) = 2080;
      v73 = (uint64_t)v121;
      sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
      v74 = sub_23A59F034();
      v131 = sub_23A538FBC(v74, v75, v132);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04(v73, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      *(_WORD *)(v70 + 22) = 2080;
      v76 = objc_msgSend(*(id *)(v29 + 16), sel_idsIdentifier);
      v77 = sub_23A59E9A4();
      v79 = v78;

      v131 = sub_23A538FBC(v77, v79, v132);
      sub_23A59ED1C();
      swift_release_n();
      v20 = v111;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v68, v69, "HMMM send start: xid=%s, request=%s, to:%s", (uint8_t *)v70, 0x20u);
      v80 = v110;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v80, -1, -1);
      MEMORY[0x23B852178](v70, -1, -1);

    }
    else
    {
      sub_23A53AC04(v65, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      sub_23A53AC04(v67, type metadata accessor for DTTransportDaemon.DTTransportRequest);

      swift_release_n();
    }
    v81 = v128;
    v82 = *(_QWORD *)(v29 + 16);
    v12 = v123;
    v83 = v115;
    sub_23A53ABC0((uint64_t)v123, v115, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    v84 = (*(unsigned __int8 *)(v116 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
    v85 = (v112 + v84) & 0xFFFFFFFFFFFFFFF8;
    v86 = swift_allocObject();
    sub_23A53BA34(v83, v86 + v84, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    *(_QWORD *)(v86 + v85) = v29;
    swift_retain();
    v87 = v126;
    sub_23A5549B4((uint64_t)v12, v117, v82, (uint64_t)sub_23A568330, v86);
    if (!v87)
    {
      sub_23A53AC04((uint64_t)v12, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      a2 = v120;
      goto LABEL_55;
    }
    sub_23A53AC04((uint64_t)v12, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    swift_release();
    v88 = v87;
    swift_bridgeObjectRetain();
    v89 = v87;
    v90 = sub_23A59E68C();
    v91 = sub_23A59EBB4();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = swift_slowAlloc();
      v129 = swift_slowAlloc();
      v132[0] = v129;
      *(_DWORD *)v92 = v108;
      v93 = sub_23A59EC20();
      v131 = sub_23A538FBC(v93, v94, v132);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 12) = 2080;
      swift_bridgeObjectRetain();
      v131 = sub_23A538FBC(v125, v81, v132);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v92 + 22) = 2080;
      swift_getErrorValue();
      v95 = sub_23A59F0C4();
      v131 = sub_23A538FBC(v95, v96, v132);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A52C000, v90, v91, "### Report client event failed: event=%s, peer=%s, error=%s", (uint8_t *)v92, 0x20u);
      v97 = v129;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v97, -1, -1);
      MEMORY[0x23B852178](v92, -1, -1);

      swift_release();
    }
    else
    {
      swift_release();

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease();
    a2 = v120;
    v19 = v127;
    v12 = v123;
    if (v127)
      goto LABEL_6;
LABEL_7:
    if (__OFADD__(v20++, 1))
    {
      __break(1u);
      goto LABEL_64;
    }
    if (v20 >= v109)
      goto LABEL_61;
    v24 = *(_QWORD *)(v107 + 8 * v20);
    if (!v24)
      break;
LABEL_17:
    v127 = (v24 - 1) & v24;
  }
  v25 = v20 + 1;
  if (v20 + 1 >= v109)
    goto LABEL_61;
  v24 = *(_QWORD *)(v107 + 8 * v25);
  if (v24)
    goto LABEL_16;
  v25 = v20 + 2;
  if (v20 + 2 >= v109)
    goto LABEL_61;
  v24 = *(_QWORD *)(v107 + 8 * v25);
  if (v24)
    goto LABEL_16;
  v25 = v20 + 3;
  if (v20 + 3 >= v109)
  {
LABEL_61:

    swift_release();
    return;
  }
  v24 = *(_QWORD *)(v107 + 8 * v25);
  if (v24)
  {
LABEL_16:
    v20 = v25;
    goto LABEL_17;
  }
  while (1)
  {
    v20 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v20 >= v109)
      goto LABEL_61;
    v24 = *(_QWORD *)(v107 + 8 * v20);
    ++v25;
    if (v24)
      goto LABEL_17;
  }
LABEL_64:
  __break(1u);
LABEL_65:
  swift_once();
LABEL_58:
  v99 = sub_23A59E6A4();
  __swift_project_value_buffer(v99, (uint64_t)qword_2569973B8);
  v130 = sub_23A59E68C();
  v100 = sub_23A59EBB4();
  if (os_log_type_enabled(v130, v100))
  {
    v101 = (uint8_t *)swift_slowAlloc();
    v102 = swift_slowAlloc();
    v134 = v102;
    *(_DWORD *)v101 = 136315138;
    v103 = sub_23A59EC20();
    v132[2] = sub_23A538FBC(v103, v104, &v134);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v130, v100, "### Report client event failed: no home, event=%s", v101, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v102, -1, -1);
    MEMORY[0x23B852178](v101, -1, -1);
  }

}

uint64_t DTTransportDaemon.reportOutgoing(eventType:timers:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t Strong;
  uint64_t v43;
  uint64_t v44;
  char isEscapingClosureAtFileLocation;
  uint64_t v46;
  uint64_t result;
  _QWORD v48[8];
  __int128 v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int64_t v57;
  unint64_t v58;
  uint64_t v59[2];

  v54 = a1;
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsOutgoing);
  swift_beginAccess();
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 64);
  v50 = *v4 + 64;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v51 = (unint64_t)(v7 + 63) >> 6;
  v55 = v5;
  swift_bridgeObjectRetain();
  v10 = 0;
  *(_QWORD *)&v11 = 136315906;
  v49 = v11;
  v48[7] = MEMORY[0x24BEE4AD8] + 8;
  v53 = a2;
  if (v9)
    goto LABEL_6;
LABEL_7:
  if (!__OFADD__(v10++, 1))
  {
    if (v10 >= v51)
      return swift_release();
    v15 = *(_QWORD *)(v50 + 8 * v10);
    if (v15)
    {
LABEL_17:
      v9 = (v15 - 1) & v15;
      for (i = __clz(__rbit64(v15)) + (v10 << 6); ; i = v12 | (v10 << 6))
      {
        v17 = 8 * i;
        v18 = *(_QWORD *)(*(_QWORD *)(v55 + 48) + v17);
        v19 = *(_QWORD *)(*(_QWORD *)(v55 + 56) + v17);
        swift_retain();
        if (a2)
        {
          swift_retain();
          v20 = swift_bridgeObjectRetain();
          v21 = sub_23A56AC3C(v20, v19);
          swift_bridgeObjectRelease();
          swift_release();
          if (v21 >> 62)
          {
            swift_bridgeObjectRetain();
            v46 = sub_23A59EED8();
            swift_bridgeObjectRelease();
            if (!v46)
            {
LABEL_5:
              swift_bridgeObjectRelease();
              swift_release();
              if (!v9)
                goto LABEL_7;
              goto LABEL_6;
            }
          }
          else if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_5;
          }
        }
        else
        {
          v21 = 0;
        }
        if (qword_2569973B0 != -1)
          swift_once();
        v56 = v9;
        v57 = v10;
        v22 = sub_23A59E6A4();
        __swift_project_value_buffer(v22, (uint64_t)qword_2569973B8);
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        v23 = sub_23A59E68C();
        v24 = sub_23A59EBC0();
        if (os_log_type_enabled(v23, v24))
        {
          v52 = v18;
          v25 = swift_slowAlloc();
          v26 = swift_slowAlloc();
          v59[0] = v26;
          *(_DWORD *)v25 = v49;
          v27 = sub_23A59EC20();
          *(_QWORD *)(v25 + 4) = sub_23A538FBC(v27, v28, v59);
          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 12) = 2080;
          if (v21)
          {
            v29 = sub_23A59ECB0();
            v30 = MEMORY[0x23B8515B4](v21, v29);
            v32 = v31;
          }
          else
          {
            v32 = 0xE300000000000000;
            v30 = 7104878;
          }
          *(_QWORD *)(v25 + 14) = sub_23A538FBC(v30, v32, v59);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 22) = 2080;
          if (a2)
          {
            v33 = sub_23A59ECB0();
            v34 = MEMORY[0x23B8515B4](a2, v33);
            v36 = v35;
          }
          else
          {
            v36 = 0xE300000000000000;
            v34 = 7104878;
          }
          *(_QWORD *)(v25 + 24) = sub_23A538FBC(v34, v36, v59);
          swift_bridgeObjectRelease_n();
          v37 = swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 32) = 2080;
          v38 = (*(uint64_t (**)(uint64_t))(v19 + 32))(v37);
          if (v38)
          {
            v58 = v38;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2569939E8);
            sub_23A56D9E4(&qword_2569939F0, &qword_2569939E8, MEMORY[0x24BEE12B0]);
            v39 = sub_23A59E974();
            v41 = v40;
            swift_bridgeObjectRelease();
          }
          else
          {
            v41 = 0xE300000000000000;
            v39 = 7104878;
          }
          *(_QWORD *)(v25 + 34) = sub_23A538FBC(v39, v41, v59);
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A52C000, v23, v24, "Report event: event=%s, filteredTimers=%s, timers=%s, targets=[%s], outgoing", (uint8_t *)v25, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x23B852178](v26, -1, -1);
          MEMORY[0x23B852178](v25, -1, -1);

          v18 = v52;
          a2 = v53;
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        Strong = swift_weakLoadStrong();
        if (Strong)
        {
          v9 = Strong;
          MEMORY[0x24BDAC7A8](Strong);
          v48[2] = v18;
          v48[3] = v54;
          v48[4] = v21;
          type metadata accessor for DTXPCConnection();
          sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
          sub_23A59EA7C();
          if ((swift_task_isCurrentExecutor() & 1) == 0)
            goto LABEL_54;
          v43 = swift_allocObject();
          *(_QWORD *)(v43 + 16) = sub_23A56EB04;
          *(_QWORD *)(v43 + 24) = v48;
          v44 = swift_allocObject();
          *(_QWORD *)(v44 + 16) = sub_23A56EAD0;
          *(_QWORD *)(v44 + 24) = v43;
          swift_retain();
          sub_23A548F60();
          swift_release();
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) != 0)
          {
            __break(1u);
            goto LABEL_52;
          }
          a2 = v53;
          v9 = v56;
          v10 = v57;
          if (!v56)
            goto LABEL_7;
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          v9 = v56;
          v10 = v57;
          if (!v56)
            goto LABEL_7;
        }
LABEL_6:
        v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
      }
    }
    v16 = v10 + 1;
    if (v10 + 1 >= v51)
      return swift_release();
    v15 = *(_QWORD *)(v50 + 8 * v16);
    if (!v15)
    {
      v16 = v10 + 2;
      if (v10 + 2 >= v51)
        return swift_release();
      v15 = *(_QWORD *)(v50 + 8 * v16);
      if (!v15)
      {
        v16 = v10 + 3;
        if (v10 + 3 < v51)
        {
          v15 = *(_QWORD *)(v50 + 8 * v16);
          if (v15)
            goto LABEL_16;
          while (1)
          {
            v10 = v16 + 1;
            if (__OFADD__(v16, 1))
              goto LABEL_53;
            if (v10 >= v51)
              return swift_release();
            v15 = *(_QWORD *)(v50 + 8 * v10);
            ++v16;
            if (v15)
              goto LABEL_17;
          }
        }
        return swift_release();
      }
    }
LABEL_16:
    v10 = v16;
    goto LABEL_17;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  v59[0] = 0;
  v59[1] = 0xE000000000000000;
  sub_23A59EE00();
  sub_23A59E9E0();
  v58 = v9;
  sub_23A59EEB4();
  sub_23A59E9E0();
  result = sub_23A59EECC();
  __break(1u);
  return result;
}

uint64_t DTTransportDaemon.reportLocal(eventType:timers:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t Strong;
  uint64_t v43;
  uint64_t v44;
  char isEscapingClosureAtFileLocation;
  uint64_t v46;
  uint64_t result;
  _QWORD v48[8];
  __int128 v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int64_t v57;
  unint64_t v58;
  uint64_t v59[2];

  v54 = a1;
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsLocal);
  swift_beginAccess();
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 64);
  v50 = *v4 + 64;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v51 = (unint64_t)(v7 + 63) >> 6;
  v55 = v5;
  swift_bridgeObjectRetain();
  v10 = 0;
  *(_QWORD *)&v11 = 136315906;
  v49 = v11;
  v48[7] = MEMORY[0x24BEE4AD8] + 8;
  v53 = a2;
  if (v9)
    goto LABEL_6;
LABEL_7:
  if (!__OFADD__(v10++, 1))
  {
    if (v10 >= v51)
      return swift_release();
    v15 = *(_QWORD *)(v50 + 8 * v10);
    if (v15)
    {
LABEL_17:
      v9 = (v15 - 1) & v15;
      for (i = __clz(__rbit64(v15)) + (v10 << 6); ; i = v12 | (v10 << 6))
      {
        v17 = 8 * i;
        v18 = *(_QWORD *)(*(_QWORD *)(v55 + 48) + v17);
        v19 = *(_QWORD *)(*(_QWORD *)(v55 + 56) + v17);
        swift_retain();
        if (a2)
        {
          swift_retain();
          v20 = swift_bridgeObjectRetain();
          v21 = sub_23A56AEC0(v20, v19);
          swift_bridgeObjectRelease();
          swift_release();
          if (v21 >> 62)
          {
            swift_bridgeObjectRetain();
            v46 = sub_23A59EED8();
            swift_bridgeObjectRelease();
            if (!v46)
            {
LABEL_5:
              swift_bridgeObjectRelease();
              swift_release();
              if (!v9)
                goto LABEL_7;
              goto LABEL_6;
            }
          }
          else if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_5;
          }
        }
        else
        {
          v21 = 0;
        }
        if (qword_2569973B0 != -1)
          swift_once();
        v56 = v9;
        v57 = v10;
        v22 = sub_23A59E6A4();
        __swift_project_value_buffer(v22, (uint64_t)qword_2569973B8);
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        v23 = sub_23A59E68C();
        v24 = sub_23A59EBC0();
        if (os_log_type_enabled(v23, v24))
        {
          v52 = v18;
          v25 = swift_slowAlloc();
          v26 = swift_slowAlloc();
          v59[0] = v26;
          *(_DWORD *)v25 = v49;
          v27 = sub_23A59EC20();
          *(_QWORD *)(v25 + 4) = sub_23A538FBC(v27, v28, v59);
          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 12) = 2080;
          if (v21)
          {
            v29 = sub_23A59ECB0();
            v30 = MEMORY[0x23B8515B4](v21, v29);
            v32 = v31;
          }
          else
          {
            v32 = 0xE300000000000000;
            v30 = 7104878;
          }
          *(_QWORD *)(v25 + 14) = sub_23A538FBC(v30, v32, v59);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 22) = 2080;
          if (a2)
          {
            v33 = sub_23A59ECB0();
            v34 = MEMORY[0x23B8515B4](a2, v33);
            v36 = v35;
          }
          else
          {
            v36 = 0xE300000000000000;
            v34 = 7104878;
          }
          *(_QWORD *)(v25 + 24) = sub_23A538FBC(v34, v36, v59);
          swift_bridgeObjectRelease_n();
          v37 = swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 32) = 2080;
          v38 = (*(uint64_t (**)(uint64_t))(v19 + 16))(v37);
          if (v38)
          {
            v58 = v38;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2569939E8);
            sub_23A56D9E4(&qword_2569939F0, &qword_2569939E8, MEMORY[0x24BEE12B0]);
            v39 = sub_23A59E974();
            v41 = v40;
            swift_bridgeObjectRelease();
          }
          else
          {
            v41 = 0xE300000000000000;
            v39 = 7104878;
          }
          *(_QWORD *)(v25 + 34) = sub_23A538FBC(v39, v41, v59);
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A52C000, v23, v24, "Report event: event=%s, filteredTimers=%s, timers=%s, targets=[%s], local", (uint8_t *)v25, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x23B852178](v26, -1, -1);
          MEMORY[0x23B852178](v25, -1, -1);

          v18 = v52;
          a2 = v53;
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        Strong = swift_weakLoadStrong();
        if (Strong)
        {
          v9 = Strong;
          MEMORY[0x24BDAC7A8](Strong);
          v48[2] = v18;
          v48[3] = v54;
          v48[4] = v21;
          type metadata accessor for DTXPCConnection();
          sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
          sub_23A59EA7C();
          if ((swift_task_isCurrentExecutor() & 1) == 0)
            goto LABEL_54;
          v43 = swift_allocObject();
          *(_QWORD *)(v43 + 16) = sub_23A56AE84;
          *(_QWORD *)(v43 + 24) = v48;
          v44 = swift_allocObject();
          *(_QWORD *)(v44 + 16) = sub_23A56EAD0;
          *(_QWORD *)(v44 + 24) = v43;
          swift_retain();
          sub_23A548F60();
          swift_release();
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) != 0)
          {
            __break(1u);
            goto LABEL_52;
          }
          a2 = v53;
          v9 = v56;
          v10 = v57;
          if (!v56)
            goto LABEL_7;
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          v9 = v56;
          v10 = v57;
          if (!v56)
            goto LABEL_7;
        }
LABEL_6:
        v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
      }
    }
    v16 = v10 + 1;
    if (v10 + 1 >= v51)
      return swift_release();
    v15 = *(_QWORD *)(v50 + 8 * v16);
    if (!v15)
    {
      v16 = v10 + 2;
      if (v10 + 2 >= v51)
        return swift_release();
      v15 = *(_QWORD *)(v50 + 8 * v16);
      if (!v15)
      {
        v16 = v10 + 3;
        if (v10 + 3 < v51)
        {
          v15 = *(_QWORD *)(v50 + 8 * v16);
          if (v15)
            goto LABEL_16;
          while (1)
          {
            v10 = v16 + 1;
            if (__OFADD__(v16, 1))
              goto LABEL_53;
            if (v10 >= v51)
              return swift_release();
            v15 = *(_QWORD *)(v50 + 8 * v10);
            ++v16;
            if (v15)
              goto LABEL_17;
          }
        }
        return swift_release();
      }
    }
LABEL_16:
    v10 = v16;
    goto LABEL_17;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  v59[0] = 0;
  v59[1] = 0xE000000000000000;
  sub_23A59EE00();
  sub_23A59E9E0();
  v58 = v9;
  sub_23A59EEB4();
  sub_23A59E9E0();
  result = sub_23A59EECC();
  __break(1u);
  return result;
}

void sub_23A5540E0(void *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  os_log_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  os_log_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v10 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v52 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v52 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v52 - v20;
  if ((a3 & 1) != 0)
  {
    v34 = a1;
    if (qword_2569973B0 != -1)
      swift_once();
    v35 = sub_23A59E6A4();
    __swift_project_value_buffer(v35, (uint64_t)qword_2569973B8);
    sub_23A53ABC0(a4, (uint64_t)v16, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    sub_23A53ABC0(a4, (uint64_t)v13, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    sub_23A56D4A0(a1, a2, 1);
    swift_retain();
    sub_23A56D4A0(a1, a2, 1);
    swift_retain();
    v36 = sub_23A59E68C();
    v37 = sub_23A59EBB4();
    v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v57 = v55;
      *(_DWORD *)v39 = 136315906;
      v54 = v36;
      sub_23A59E260();
      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v53 = v38;
      v40 = sub_23A59F034();
      v56 = sub_23A538FBC(v40, v41, &v57);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v16, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      *(_WORD *)(v39 + 12) = 2080;
      sub_23A59E680();
      sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
      v42 = sub_23A59F034();
      v56 = sub_23A538FBC(v42, v43, &v57);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v13, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      *(_WORD *)(v39 + 22) = 2080;
      v44 = objc_msgSend(*(id *)(a5 + 16), sel_idsIdentifier);
      v45 = sub_23A59E9A4();
      v47 = v46;

      v56 = sub_23A538FBC(v45, v47, &v57);
      sub_23A59ED1C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 32) = 2080;
      swift_getErrorValue();
      v48 = sub_23A59F0C4();
      v56 = sub_23A538FBC(v48, v49, &v57);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A56D4AC(a1, a2, 1);
      sub_23A56D4AC(a1, a2, 1);
      v50 = v54;
      _os_log_impl(&dword_23A52C000, v54, (os_log_type_t)v53, "### HMMM send failed: xid=%s, request=%s, to:%s, error=%s", (uint8_t *)v39, 0x2Au);
      v51 = v55;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v51, -1, -1);
      MEMORY[0x23B852178](v39, -1, -1);

      sub_23A56D4AC(a1, a2, 1);
    }
    else
    {
      sub_23A56D4AC(a1, a2, 1);
      sub_23A53AC04((uint64_t)v16, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      sub_23A53AC04((uint64_t)v13, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      swift_release_n();
      sub_23A56D4AC(a1, a2, 1);
      sub_23A56D4AC(a1, a2, 1);

    }
  }
  else
  {
    sub_23A53AB30((uint64_t)a1, a2);
    if (qword_2569973B0 != -1)
      swift_once();
    v22 = sub_23A59E6A4();
    __swift_project_value_buffer(v22, (uint64_t)qword_2569973B8);
    sub_23A53ABC0(a4, (uint64_t)v21, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    sub_23A53ABC0(a4, (uint64_t)v19, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    sub_23A56D4A0(a1, a2, 0);
    swift_retain();
    sub_23A56D4A0(a1, a2, 0);
    swift_retain();
    v23 = sub_23A59E68C();
    v24 = sub_23A59EBC0();
    if (os_log_type_enabled(v23, (os_log_type_t)v24))
    {
      v53 = v24;
      v54 = v23;
      v55 = a2 >> 62;
      v25 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      v57 = v52;
      *(_DWORD *)v25 = 136315906;
      sub_23A59E260();
      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v26 = sub_23A59F034();
      v56 = sub_23A538FBC(v26, v27, &v57);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v21, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      *(_WORD *)(v25 + 12) = 2080;
      sub_23A59E680();
      sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
      v28 = sub_23A59F034();
      v56 = sub_23A538FBC(v28, v29, &v57);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v19, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      *(_WORD *)(v25 + 22) = 2080;
      v30 = objc_msgSend(*(id *)(a5 + 16), sel_idsIdentifier);
      v31 = sub_23A59E9A4();
      v33 = v32;

      v56 = sub_23A538FBC(v31, v33, &v57);
      sub_23A59ED1C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 32) = 2048;
      __asm { BR              X10 }
    }
    sub_23A56D4AC(a1, a2, 0);
    sub_23A56D4AC(a1, a2, 0);
    sub_23A53AC04((uint64_t)v21, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    sub_23A53AC04((uint64_t)v19, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    swift_release_n();
    sub_23A56D4AC(a1, a2, 0);

  }
}

uint64_t sub_23A5549B4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[6];
  uint64_t v21;

  type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  sub_23A56E58C(&qword_2569979E8, (uint64_t)&unk_23A5A0E30);
  result = sub_23A59DFF0();
  if (!v5)
  {
    v12 = result;
    v13 = v11;
    v14 = (void *)sub_23A59EB0C();
    v21 = a3;
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD7770]), sel_initWithTimeout_transportRestriction_, v14, 2);

    v16 = (void *)sub_23A59E998();
    v17 = (void *)sub_23A59E17C();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a4;
    *(_QWORD *)(v18 + 24) = a5;
    v20[4] = sub_23A56D3C8;
    v20[5] = v18;
    v20[0] = MEMORY[0x24BDAC760];
    v20[1] = 1107296256;
    v20[2] = sub_23A55E1F4;
    v20[3] = &block_descriptor_93;
    v19 = _Block_copy(v20);
    swift_retain();
    swift_release();
    objc_msgSend(a2, sel_sendModernMessagingRequestWithMessageName_destination_requestPayload_options_responseHandler_completionHandler_, v16, v21, v17, v15, v19, 0);
    _Block_release(v19);

    return sub_23A53AAA8(v12, v13);
  }
  return result;
}

uint64_t sub_23A554B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_23A59E4AC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23A59E494();
  DTXPCConnection.report(monitorEvent:)((uint64_t)v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_23A554C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  int64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  id v59;
  char *v60;
  id v61;
  NSObject *v62;
  uint64_t v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  uint64_t *v78;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v80;
  void *v81;
  id v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t *v89;
  id v90;
  id v91;
  char v92;
  id v93;
  void *v94;
  id v95;
  uint64_t *v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  NSObject *v101;
  os_log_type_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  id v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int64_t v122;
  __int128 v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  void (*v132)(char *, uint64_t);
  uint64_t v133;
  unint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t *v138;
  uint64_t v139;
  uint64_t v140[3];

  v1 = v0;
  v2 = sub_23A59E260();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v117 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v124 = (char *)&v117 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v117 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v138 = (unint64_t *)((char *)&v117 - v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994318);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v128 = (uint64_t)&v117 - v20;
  v21 = (uint64_t *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeMap);
  swift_beginAccess();
  v135 = v21;
  v22 = *v21;
  v23 = *(_QWORD *)(*v21 + 64);
  v120 = *v21 + 64;
  v24 = 1 << *(_BYTE *)(v22 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v127 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager;
  v27 = (unint64_t)(v24 + 63) >> 6;
  v117 = v27 - 1;
  v28 = swift_bridgeObjectRetain();
  v29 = 0;
  v122 = v27;
  v118 = v27 - 5;
  v125 = v28;
  v119 = v28 + 104;
  *(_QWORD *)&v30 = 136315394;
  v123 = v30;
  v121 = MEMORY[0x24BEE4AD8] + 8;
  v129 = v1;
  v130 = v9;
  v136 = v3;
  v137 = v2;
  v131 = v6;
  v126 = (uint64_t)v19;
  while (1)
  {
    if (v26)
    {
      v133 = (v26 - 1) & v26;
      v134 = v29;
      v33 = __clz(__rbit64(v26)) | (v29 << 6);
LABEL_9:
      v34 = v125;
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v19, *(_QWORD *)(v125 + 48) + *(_QWORD *)(v3 + 72) * v33, v2);
      v35 = *(_QWORD *)(v34 + 56);
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994320);
      v37 = *(void **)(v35 + 8 * v33);
      *(_QWORD *)&v19[*(int *)(v36 + 48)] = v37;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v19, 0, 1, v36);
      v38 = v37;
      goto LABEL_16;
    }
    v39 = v29 + 1;
    if (__OFADD__(v29, 1))
      goto LABEL_78;
    if (v39 >= v122)
    {
      v41 = v29;
    }
    else
    {
      v40 = *(_QWORD *)(v120 + 8 * v39);
      if (v40)
        goto LABEL_13;
      v41 = v29 + 1;
      if ((uint64_t)(v29 + 2) < v122)
      {
        v40 = *(_QWORD *)(v120 + 8 * (v29 + 2));
        if (v40)
        {
          v39 = v29 + 2;
LABEL_13:
          v133 = (v40 - 1) & v40;
          v134 = v39;
          v33 = __clz(__rbit64(v40)) + (v39 << 6);
          goto LABEL_9;
        }
        v41 = v29 + 2;
        if ((uint64_t)(v29 + 3) < v122)
        {
          v40 = *(_QWORD *)(v120 + 8 * (v29 + 3));
          if (v40)
          {
            v39 = v29 + 3;
            goto LABEL_13;
          }
          v39 = v29 + 4;
          v41 = v29 + 3;
          if ((uint64_t)(v29 + 4) < v122)
          {
            v40 = *(_QWORD *)(v120 + 8 * v39);
            if (v40)
              goto LABEL_13;
            while (v118 != v29)
            {
              v40 = *(_QWORD *)(v119 + 8 * v29++);
              if (v40)
              {
                v39 = v29 + 4;
                goto LABEL_13;
              }
            }
            v41 = v117;
          }
        }
      }
    }
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994320);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v19, 1, 1, v42);
    v133 = 0;
    v134 = v41;
LABEL_16:
    v43 = v128;
    sub_23A53AAEC((uint64_t)v19, v128, &qword_256994318);
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994320);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44) == 1)
      break;
    v45 = *(void **)(v43 + *(int *)(v44 + 48));
    (*(void (**)(unint64_t *, uint64_t, uint64_t))(v3 + 32))(v138, v43, v2);
    v46 = *(void **)(v1 + v127);
    if (v46)
    {
      v47 = objc_msgSend(v46, sel_homes);
      sub_23A53AB74(0, &qword_2569942E0);
      v48 = sub_23A59EA34();

      if (v48 >> 62)
      {
        swift_bridgeObjectRetain();
        v49 = sub_23A59EED8();
        if (v49)
        {
LABEL_20:
          v50 = 4;
          while (1)
          {
            v51 = (v48 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x23B85198C](v50 - 4, v48)
                : *(id *)(v48 + 8 * v50);
            v52 = v51;
            v53 = v136;
            v54 = v50 - 3;
            if (__OFADD__(v50 - 4, 1))
              break;
            v55 = objc_msgSend(v51, sel_uniqueIdentifier);
            sub_23A59E23C();

            LOBYTE(v55) = sub_23A59E230();
            v56 = *(void (**)(char *, uint64_t))(v53 + 8);
            v56(v14, v137);
            if ((v55 & 1) != 0)
            {
              swift_bridgeObjectRelease_n();

              v2 = v137;
              v56((char *)v138, v137);

              v1 = v129;
              v9 = v130;
              v3 = v136;
              v6 = v131;
              v19 = (char *)v126;
              goto LABEL_6;
            }

            ++v50;
            if (v54 == v49)
              goto LABEL_27;
          }
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          swift_once();
          goto LABEL_73;
        }
      }
      else
      {
        v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v49)
          goto LABEL_20;
      }
LABEL_27:
      swift_bridgeObjectRelease_n();
      v1 = v129;
      v3 = v136;
      v2 = v137;
    }
    v57 = v124;
    if (qword_2569973B0 != -1)
      swift_once();
    v58 = sub_23A59E6A4();
    __swift_project_value_buffer(v58, (uint64_t)qword_2569973B8);
    (*(void (**)(char *, unint64_t *, uint64_t))(v3 + 16))(v57, v138, v2);
    v59 = v45;
    v60 = v57;
    v61 = v59;
    v62 = sub_23A59E68C();
    v63 = v3;
    v64 = sub_23A59EBC0();
    if (os_log_type_enabled(v62, v64))
    {
      v65 = swift_slowAlloc();
      v66 = swift_slowAlloc();
      v140[0] = v66;
      *(_DWORD *)v65 = v123;
      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v67 = sub_23A59F034();
      *(_QWORD *)(v65 + 4) = sub_23A538FBC(v67, v68, v140);
      swift_bridgeObjectRelease();
      v132 = *(void (**)(char *, uint64_t))(v63 + 8);
      v132(v60, v137);
      *(_WORD *)(v65 + 12) = 2080;
      v69 = objc_msgSend(v61, sel_name);
      v70 = sub_23A59E9A4();
      v72 = v71;

      v73 = v70;
      v1 = v129;
      *(_QWORD *)(v65 + 14) = sub_23A538FBC(v73, v72, v140);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A52C000, v62, v64, "HomeKit home remove: id=%s, name=%s", (uint8_t *)v65, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v66, -1, -1);
      v74 = v65;
      v2 = v137;
      MEMORY[0x23B852178](v74, -1, -1);
    }
    else
    {
      v132 = *(void (**)(char *, uint64_t))(v63 + 8);
      v132(v60, v2);

    }
    v3 = v63;
    objc_msgSend(v61, sel_setDelegate_, 0);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v75 = sub_23A563E64((uint64_t)v138);
    v77 = v76;
    swift_bridgeObjectRelease();
    v32 = 0;
    if ((v77 & 1) != 0)
    {
      v78 = v135;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v80 = *v78;
      v139 = *v78;
      *v78 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_23A56605C();
        v80 = v139;
      }
      v132((char *)(*(_QWORD *)(v80 + 48) + *(_QWORD *)(v63 + 72) * v75), v2);
      v31 = v139;
      v32 = *(void **)(*(_QWORD *)(v139 + 56) + 8 * v75);
      sub_23A564EF8(v75, v139);
      *v78 = v31;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();

    v132((char *)v138, v2);
    v9 = v130;
    v6 = v131;
    v19 = (char *)v126;
LABEL_6:
    v26 = v133;
    v29 = v134;
  }
  swift_release();
  v81 = *(void **)(v1 + v127);
  if (v81)
  {
    v82 = objc_msgSend(v81, sel_homes);
    sub_23A53AB74(0, &qword_2569942E0);
    v83 = sub_23A59EA34();

    if (!(v83 >> 62))
      goto LABEL_53;
LABEL_70:
    swift_bridgeObjectRetain();
    v84 = sub_23A59EED8();
    swift_bridgeObjectRelease();
    if (!v84)
      goto LABEL_71;
LABEL_54:
    if (v84 < 1)
      goto LABEL_79;
    v85 = 0;
    v134 = v83 & 0xC000000000000001;
    v126 = MEMORY[0x24BEE4AD8] + 8;
    v132 = (void (*)(char *, uint64_t))v83;
    v133 = v84;
    do
    {
      if (v134)
        v93 = (id)MEMORY[0x23B85198C](v85, v83);
      else
        v93 = *(id *)(v83 + 8 * v85 + 32);
      v94 = v93;
      v95 = objc_msgSend(v93, sel_uniqueIdentifier);
      sub_23A59E23C();

      v96 = v135;
      swift_beginAccess();
      if (*(_QWORD *)(*v96 + 16) && (sub_23A563E64((uint64_t)v9), (v97 & 1) != 0))
      {
        swift_endAccess();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v137);

      }
      else
      {
        swift_endAccess();
        if (qword_2569973B0 != -1)
          swift_once();
        v98 = sub_23A59E6A4();
        __swift_project_value_buffer(v98, (uint64_t)qword_2569973B8);
        v99 = v137;
        v138 = *(unint64_t **)(v3 + 16);
        ((void (*)(char *, char *, uint64_t))v138)(v6, v9, v137);
        v100 = v94;
        v101 = sub_23A59E68C();
        v102 = sub_23A59EBC0();
        v103 = v102;
        if (os_log_type_enabled(v101, v102))
        {
          v104 = swift_slowAlloc();
          v128 = swift_slowAlloc();
          v140[0] = v128;
          *(_DWORD *)v104 = v123;
          sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          LODWORD(v127) = v103;
          v105 = sub_23A59F034();
          *(_QWORD *)(v104 + 4) = sub_23A538FBC(v105, v106, v140);
          swift_bridgeObjectRelease();
          v86 = *(void (**)(char *, uint64_t))(v136 + 8);
          v86(v6, v99);
          *(_WORD *)(v104 + 12) = 2080;
          v107 = objc_msgSend(v100, sel_name);
          v108 = sub_23A59E9A4();
          v110 = v109;

          *(_QWORD *)(v104 + 14) = sub_23A538FBC(v108, v110, v140);
          v1 = v129;
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_23A52C000, v101, (os_log_type_t)v127, "HomeKit home add: id=%s, name=%s", (uint8_t *)v104, 0x16u);
          v111 = v128;
          swift_arrayDestroy();
          MEMORY[0x23B852178](v111, -1, -1);
          v112 = v104;
          v3 = v136;
          MEMORY[0x23B852178](v112, -1, -1);
        }
        else
        {
          v86 = *(void (**)(char *, uint64_t))(v3 + 8);
          v86(v6, v99);

        }
        objc_msgSend(v100, sel_setDelegate_, v1);
        v87 = v130;
        ((void (*)(char *, char *, uint64_t))v138)(v14, v130, v99);
        v88 = v1;
        v89 = v135;
        swift_beginAccess();
        v90 = v100;
        v9 = v87;
        v91 = v90;
        v92 = swift_isUniquelyReferenced_nonNull_native();
        v139 = *v89;
        *v89 = 0x8000000000000000;
        sub_23A565654((uint64_t)v91, (uint64_t)v14, v92);
        *v89 = v139;
        v1 = v88;
        swift_bridgeObjectRelease();
        v86(v14, v99);
        swift_endAccess();

        v86(v9, v99);
        v6 = v131;
        v83 = (unint64_t)v132;
      }
      ++v85;
    }
    while (v133 != v85);
    goto LABEL_71;
  }
  v83 = MEMORY[0x24BEE4AF8];
  if (MEMORY[0x24BEE4AF8] >> 62)
    goto LABEL_70;
LABEL_53:
  v84 = *(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v84)
    goto LABEL_54;
LABEL_71:
  swift_bridgeObjectRelease();
  sub_23A55E2A4();
  sub_23A55E7A8();
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeKitReady) & 1) != 0)
    return;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeKitReady) = 1;
  if (qword_2569973B0 != -1)
    goto LABEL_80;
LABEL_73:
  v113 = sub_23A59E6A4();
  __swift_project_value_buffer(v113, (uint64_t)qword_2569973B8);
  v114 = sub_23A59E68C();
  v115 = sub_23A59EBC0();
  if (os_log_type_enabled(v114, v115))
  {
    v116 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v116 = 0;
    _os_log_impl(&dword_23A52C000, v114, v115, "HomeKit ready", v116, 2u);
    MEMORY[0x23B852178](v116, -1, -1);
  }

}

uint64_t sub_23A5559EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DTTransportDaemon.DTOperationItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeKitReady) == 1)
  {
    v9 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__operationQueue;
    swift_beginAccess();
    v10 = *(_QWORD *)(*(_QWORD *)v9 + 16);
    if (v10)
    {
      v11 = *(_QWORD *)v9 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v12 = *(_QWORD *)(v5 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_23A53ABC0(v11, (uint64_t)v8, type metadata accessor for DTTransportDaemon.DTOperationItem);
        sub_23A53BA34((uint64_t)v8, (uint64_t)v3, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
        sub_23A557ED8((uint64_t)v3);
        sub_23A53AC04((uint64_t)v3, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
        v11 += v12;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)v9 = MEMORY[0x24BEE4AF8];
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23A555B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  NSObject *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  NSObject v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  int64_t v47;
  unint64_t v48;
  unint64_t v49;
  int64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, unint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(uint64_t, uint64_t);
  int64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  unint64_t v87;
  unint64_t v88;
  NSObject *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[3];

  v0 = sub_23A59E260();
  v91 = *(_QWORD *)(v0 - 8);
  v92 = v0;
  v1 = MEMORY[0x24BDAC7A8](v0);
  v81 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v90 = (uint64_t)&v79 - v4;
  MEMORY[0x24BDAC7A8](v3);
  v6 = ((char *)&v79 - v5);
  if (qword_2569973B0 != -1)
LABEL_74:
    swift_once();
  v89 = v6;
  v7 = sub_23A59E6A4();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_2569973B8);
  v6 = sub_23A59E68C();
  v9 = sub_23A59EBC0();
  if (os_log_type_enabled(v6, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_23A52C000, v6, v9, "Monitor timer check", v10, 2u);
    MEMORY[0x23B852178](v10, -1, -1);
  }

  v11 = sub_23A59E344();
  v12 = (uint64_t *)(v82 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsIncoming);
  swift_beginAccess();
  v13 = *v12;
  v14 = *(_QWORD *)(*v12 + 64);
  v85 = *v12 + 64;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v86 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain();
  v18 = 0;
  *(_QWORD *)&v19 = 136315138;
  v83 = v19;
  v80 = MEMORY[0x24BEE4AD8] + 8;
  v84 = v13;
  v87 = v11;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_25;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
      goto LABEL_70;
    v23 = v89;
    if (v22 >= v86)
      goto LABEL_36;
    v24 = *(_QWORD *)(v85 + 8 * v22);
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v86)
        goto LABEL_36;
      v24 = *(_QWORD *)(v85 + 8 * v18);
      if (!v24)
      {
        v18 = v22 + 2;
        if (v22 + 2 >= v86)
          goto LABEL_36;
        v24 = *(_QWORD *)(v85 + 8 * v18);
        if (!v24)
          break;
      }
    }
LABEL_24:
    v17 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_25:
    v6 = *(NSObject **)(*(_QWORD *)(v13 + 56) + 8 * v21);
    if ((Class)v11 < v6[6].isa)
    {
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    v26 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    swift_bridgeObjectRetain();
    swift_retain();
    if ((unint64_t)sub_23A59E278() < 0x21C)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v88 = v18;
      swift_bridgeObjectRetain_n();
      v29 = sub_23A59E68C();
      v30 = sub_23A59EBC0();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = v8;
        v32 = v12;
        v33 = swift_slowAlloc();
        v34 = swift_slowAlloc();
        v94[0] = v34;
        *(_DWORD *)v33 = v83;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v33 + 4) = sub_23A538FBC(v28, v27, v94);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A52C000, v29, v30, "Monitor idle cleanup: peer=%s", (uint8_t *)v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B852178](v34, -1, -1);
        v35 = v33;
        v12 = v32;
        v8 = v31;
        v11 = v87;
        MEMORY[0x23B852178](v35, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      swift_beginAccess();
      swift_bridgeObjectRetain();
      v36 = sub_23A563F00(v28, v27);
      v38 = v37;
      swift_bridgeObjectRelease();
      if ((v38 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v40 = *v12;
        v93 = *v12;
        *v12 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23A56641C();
          v40 = v93;
        }
        swift_bridgeObjectRelease();
        sub_23A56532C(v36, v40);
        *v12 = v40;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      v13 = v84;
      v18 = v88;
    }
    swift_release();
  }
  v25 = v22 + 3;
  if (v25 < v86)
  {
    v24 = *(_QWORD *)(v85 + 8 * v25);
    if (!v24)
    {
      while (1)
      {
        v18 = v25 + 1;
        if (__OFADD__(v25, 1))
          goto LABEL_72;
        if (v18 >= v86)
          goto LABEL_36;
        v24 = *(_QWORD *)(v85 + 8 * v18);
        ++v25;
        if (v24)
          goto LABEL_24;
      }
    }
    v18 = v25;
    goto LABEL_24;
  }
LABEL_36:
  swift_release();
  v93 = MEMORY[0x24BEE4B08];
  v6 = (v82 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsOutgoing);
  swift_beginAccess();
  v41.isa = v6->isa;
  v42 = (uint64_t)v6->isa + 64;
  v43 = 1 << *((_BYTE *)v6->isa + 32);
  if (v43 < 64)
    v44 = ~(-1 << v43);
  else
    v44 = -1;
  v45 = v44 & *((_QWORD *)v6->isa + 8);
  v46 = (unint64_t)(v43 + 63) >> 6;
  swift_bridgeObjectRetain();
  v47 = 0;
  *&v83 = v41;
  v80 = v42;
  v79 = v46;
  while (1)
  {
    if (v45)
    {
      v48 = __clz(__rbit64(v45));
      v45 &= v45 - 1;
      v49 = v48 | (v47 << 6);
      goto LABEL_57;
    }
    v50 = v47 + 1;
    if (__OFADD__(v47, 1))
      goto LABEL_71;
    if (v50 >= v46)
      break;
    v51 = *(_QWORD *)(v42 + 8 * v50);
    ++v47;
    if (!v51)
    {
      v47 = v50 + 1;
      if (v50 + 1 >= v46)
        break;
      v51 = *(_QWORD *)(v42 + 8 * v47);
      if (!v51)
      {
        v47 = v50 + 2;
        if (v50 + 2 >= v46)
          break;
        v51 = *(_QWORD *)(v42 + 8 * v47);
        if (!v51)
        {
          v52 = v50 + 3;
          if (v52 >= v46)
            break;
          v51 = *(_QWORD *)(v42 + 8 * v52);
          if (!v51)
          {
            while (1)
            {
              v47 = v52 + 1;
              if (__OFADD__(v52, 1))
                goto LABEL_73;
              if (v47 >= v46)
                goto LABEL_67;
              v51 = *(_QWORD *)(v42 + 8 * v47);
              ++v52;
              if (v51)
                goto LABEL_56;
            }
          }
          v47 = v52;
        }
      }
    }
LABEL_56:
    v45 = (v51 - 1) & v51;
    v49 = __clz(__rbit64(v51)) + (v47 << 6);
LABEL_57:
    v53 = 8 * v49;
    v54 = *(_QWORD *)(*((_QWORD *)v41.isa + 7) + v53);
    v55 = *(_QWORD *)(v54 + 24);
    v6 = (v11 - v55);
    if (v11 < v55)
      goto LABEL_69;
    v56 = *(_QWORD *)(*((_QWORD *)v41.isa + 6) + v53);
    swift_retain();
    if ((unint64_t)sub_23A59E278() < 0xB4)
    {
      swift_release();
      continue;
    }
    v88 = v45;
    v57 = objc_msgSend(*(id *)(v54 + 16), sel_uniqueIdentifier);
    sub_23A59E23C();

    v58 = v93;
    if (!*(_QWORD *)(v93 + 16))
      goto LABEL_65;
    v84 = v56;
    v85 = v54;
    v86 = v47;
    sub_23A52EAEC(&qword_256994220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    v59 = sub_23A59E95C();
    v60 = -1 << *(_BYTE *)(v58 + 32);
    v61 = v59 & ~v60;
    if (((*(_QWORD *)(v58 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFF8)) >> v61) & 1) == 0)
    {
LABEL_64:
      swift_bridgeObjectRelease();
      v42 = v80;
      v46 = v79;
      v54 = v85;
      v47 = v86;
      v56 = v84;
LABEL_65:
      sub_23A556450(v56, v54);
      v69 = v91;
      v70 = v42;
      v71 = v81;
      v72 = v46;
      v73 = v54;
      v74 = v92;
      (*(void (**)(char *, NSObject *, uint64_t))(v91 + 16))(v81, v23, v92);
      v75 = v90;
      v76 = v71;
      v42 = v70;
      sub_23A566738(v90, v76);
      v77 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      v77(v75, v74);
      v6 = sub_23A59E344();
      v77((uint64_t)v23, v74);
      *(_QWORD *)(v73 + 24) = v6;
      v46 = v72;
      v41.isa = (Class)v83;
      swift_release();
      v11 = v87;
      v45 = v88;
      continue;
    }
    v62 = ~v60;
    v63 = *(_QWORD *)(v91 + 72);
    v64 = *(void (**)(uint64_t, unint64_t, uint64_t))(v91 + 16);
    while (1)
    {
      v65 = v90;
      v66 = v92;
      v64(v90, *(_QWORD *)(v58 + 48) + v61 * v63, v92);
      sub_23A52EAEC(&qword_256994228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v67 = sub_23A59E98C();
      v68 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
      v68(v65, v66);
      if ((v67 & 1) != 0)
        break;
      v61 = (v61 + 1) & v62;
      v23 = v89;
      if (((*(_QWORD *)(v58 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFF8)) >> v61) & 1) == 0)
        goto LABEL_64;
    }
    swift_bridgeObjectRelease();
    v6 = v89;
    v68((uint64_t)v89, v92);
    v23 = v6;
    swift_release();
    v47 = v86;
    v11 = v87;
    v41.isa = (Class)v83;
    v42 = v80;
    v46 = v79;
    v45 = v88;
  }
LABEL_67:
  swift_release();
  swift_bridgeObjectRelease();
  return sub_23A54CA88();
}

uint64_t sub_23A556450(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v50;
  os_log_t v51;
  int v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[3];

  v56 = a1;
  v3 = sub_23A59E260();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  v64 = *((_QWORD *)v5 - 1);
  v6 = *(_QWORD *)(v64 + 64);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v50 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v63 = (uint64_t)&v50 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v50 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v50 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v50 - v19;
  sub_23A59E254();
  v21 = &v20[v5[5]];
  v22 = *MEMORY[0x24BE2D4E0];
  v23 = sub_23A59E680();
  v24 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 104);
  v58 = v23;
  v24(v21, v22);
  v25 = &v20[v5[6]];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v59 = v5;
  v20[v5[7]] = 2;
  v26 = *(void **)(a2 + 16);
  if (qword_2569973B0 != -1)
    swift_once();
  v27 = sub_23A59E6A4();
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_2569973B8);
  sub_23A53ABC0((uint64_t)v20, (uint64_t)v18, type metadata accessor for DTTransportDaemon.DTTransportRequest);
  sub_23A53ABC0((uint64_t)v20, (uint64_t)v15, type metadata accessor for DTTransportDaemon.DTTransportRequest);
  v29 = v26;
  v57 = v28;
  v30 = sub_23A59E68C();
  v31 = sub_23A59EBC0();
  v32 = v31;
  if (os_log_type_enabled(v30, v31))
  {
    v33 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    v66[0] = v53;
    *(_DWORD *)v33 = 136315906;
    v54 = v10;
    v50 = sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v52 = v32;
    v51 = v30;
    v34 = v62;
    v35 = sub_23A59F034();
    v65 = sub_23A538FBC(v35, v36, v66);
    v55 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04((uint64_t)v18, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    *(_WORD *)(v33 + 12) = 2080;
    sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
    v37 = sub_23A59F034();
    v65 = sub_23A538FBC(v37, v38, v66);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04((uint64_t)v15, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    *(_WORD *)(v33 + 22) = 2048;
    v65 = v56;
    sub_23A59ED1C();
    *(_WORD *)(v33 + 32) = 2080;
    v39 = objc_msgSend(v29, sel_uniqueIdentifier);
    v40 = v60;
    sub_23A59E23C();

    v41 = sub_23A59F034();
    v43 = v42;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v34);
    v65 = sub_23A538FBC(v41, v43, v66);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    v44 = v51;
    _os_log_impl(&dword_23A52C000, v51, (os_log_type_t)v52, "HMMM send start: xid=%s, request=%s, monitorID=%llu, to:%s", (uint8_t *)v33, 0x2Au);
    v45 = v53;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v45, -1, -1);
    MEMORY[0x23B852178](v33, -1, -1);

  }
  else
  {
    sub_23A53AC04((uint64_t)v18, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    sub_23A53AC04((uint64_t)v15, type metadata accessor for DTTransportDaemon.DTTransportRequest);

  }
  v46 = v63;
  sub_23A53ABC0((uint64_t)v20, v63, type metadata accessor for DTTransportDaemon.DTTransportRequest);
  v47 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  v48 = swift_allocObject();
  sub_23A53BA34(v46, v48 + v47, type metadata accessor for DTTransportDaemon.DTTransportRequest);
  *(_QWORD *)(v48 + ((v6 + v47 + 7) & 0xFFFFFFFFFFFFFFF8)) = v29;
  sub_23A54D9F0((uint64_t)v20, v29, (uint64_t)sub_23A56D5F8, v48);
  swift_release();
  return sub_23A53AC04((uint64_t)v20, type metadata accessor for DTTransportDaemon.DTTransportRequest);
}

void sub_23A556D5C(void *a1, unint64_t a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  NSObject *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  NSObject *v35;
  id v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  NSObject *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v10 = sub_23A59E260();
  v71 = *(_QWORD *)(v10 - 8);
  v72 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v70 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v63 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v63 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v63 - v22;
  if ((a3 & 1) != 0)
  {
    v41 = a1;
    if (qword_2569973B0 != -1)
      swift_once();
    v42 = sub_23A59E6A4();
    __swift_project_value_buffer(v42, (uint64_t)qword_2569973B8);
    sub_23A53ABC0(a4, (uint64_t)v18, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    sub_23A53ABC0(a4, (uint64_t)v15, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    sub_23A56D4A0(a1, a2, 1);
    v43 = a5;
    sub_23A56D4A0(a1, a2, 1);
    v44 = v43;
    v45 = sub_23A59E68C();
    v46 = sub_23A59EBB4();
    v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      v48 = swift_slowAlloc();
      v69 = swift_slowAlloc();
      v74 = v69;
      *(_DWORD *)v48 = 136315906;
      v66 = sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v67 = v45;
      LODWORD(v68) = v47;
      v49 = sub_23A59F034();
      v73 = sub_23A538FBC(v49, v50, &v74);
      v65 = &v74;
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v18, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      *(_WORD *)(v48 + 12) = 2080;
      sub_23A59E680();
      sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
      v51 = sub_23A59F034();
      v73 = sub_23A538FBC(v51, v52, &v74);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v15, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      *(_WORD *)(v48 + 22) = 2080;
      v53 = objc_msgSend(v44, sel_uniqueIdentifier);
      v54 = v70;
      sub_23A59E23C();

      v55 = v72;
      v56 = sub_23A59F034();
      v58 = v57;
      (*(void (**)(char *, uint64_t))(v71 + 8))(v54, v55);
      v73 = sub_23A538FBC(v56, v58, &v74);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      *(_WORD *)(v48 + 32) = 2080;
      swift_getErrorValue();
      v59 = sub_23A59F0C4();
      v73 = sub_23A538FBC(v59, v60, &v74);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A56D4AC(a1, a2, 1);
      sub_23A56D4AC(a1, a2, 1);
      v61 = v67;
      _os_log_impl(&dword_23A52C000, v67, (os_log_type_t)v68, "### HMMM send failed: xid=%s, request=%s, to:%s, error=%s", (uint8_t *)v48, 0x2Au);
      v62 = v69;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v62, -1, -1);
      MEMORY[0x23B852178](v48, -1, -1);

      sub_23A56D4AC(a1, a2, 1);
    }
    else
    {
      sub_23A56D4AC(a1, a2, 1);
      sub_23A53AC04((uint64_t)v18, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      sub_23A53AC04((uint64_t)v15, type metadata accessor for DTTransportDaemon.DTTransportRequest);

      sub_23A56D4AC(a1, a2, 1);
      sub_23A56D4AC(a1, a2, 1);

    }
  }
  else
  {
    sub_23A53AB30((uint64_t)a1, a2);
    if (qword_2569973B0 != -1)
      swift_once();
    v24 = sub_23A59E6A4();
    __swift_project_value_buffer(v24, (uint64_t)qword_2569973B8);
    sub_23A53ABC0(a4, (uint64_t)v23, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    sub_23A53ABC0(a4, (uint64_t)v21, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    sub_23A56D4A0(a1, a2, 0);
    v25 = a5;
    sub_23A56D4A0(a1, a2, 0);
    v26 = v25;
    v27 = sub_23A59E68C();
    v28 = sub_23A59EBC0();
    if (os_log_type_enabled(v27, (os_log_type_t)v28))
    {
      LODWORD(v65) = v28;
      v66 = (uint64_t)v27;
      v69 = a2 >> 62;
      v29 = swift_slowAlloc();
      v64 = swift_slowAlloc();
      v74 = v64;
      *(_DWORD *)v29 = 136315906;
      v68 = sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v30 = v72;
      v31 = sub_23A59F034();
      v73 = sub_23A538FBC(v31, v32, &v74);
      v67 = v26;
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v23, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      *(_WORD *)(v29 + 12) = 2080;
      sub_23A59E680();
      sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
      v33 = sub_23A59F034();
      v73 = sub_23A538FBC(v33, v34, &v74);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v21, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      *(_WORD *)(v29 + 22) = 2080;
      v35 = v67;
      v36 = -[NSObject uniqueIdentifier](v67, sel_uniqueIdentifier);
      v37 = v70;
      sub_23A59E23C();

      v38 = sub_23A59F034();
      v40 = v39;
      (*(void (**)(char *, uint64_t))(v71 + 8))(v37, v30);
      v73 = sub_23A538FBC(v38, v40, &v74);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 32) = 2048;
      __asm { BR              X10 }
    }
    sub_23A56D4AC(a1, a2, 0);
    sub_23A56D4AC(a1, a2, 0);
    sub_23A53AC04((uint64_t)v23, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    sub_23A53AC04((uint64_t)v21, type metadata accessor for DTTransportDaemon.DTTransportRequest);

    sub_23A56D4AC(a1, a2, 0);
  }
}

uint64_t sub_23A5576B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[13] = a2;
  v3[14] = a3;
  v4 = sub_23A59EE84();
  v3[15] = v4;
  v3[16] = *(_QWORD *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v5 = sub_23A59EE9C();
  v3[19] = v5;
  v3[20] = *(_QWORD *)(v5 - 8);
  v3[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A557750()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  _QWORD *v6;

  if ((sub_23A59EB00() & 1) != 0
    || (swift_beginAccess(), swift_beginAccess(), Strong = swift_weakLoadStrong(), swift_release(), !Strong))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 128);
    v2 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 120);
    sub_23A59EE90();
    *(_OWORD *)(v0 + 88) = xmmword_23A5A0B90;
    *(_QWORD *)(v0 + 72) = 0;
    *(_QWORD *)(v0 + 64) = 0;
    *(_BYTE *)(v0 + 80) = 1;
    sub_23A52EAEC(&qword_256994210, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
    sub_23A59F094();
    sub_23A52EAEC(&qword_256994218, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
    sub_23A59EEA8();
    v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    *(_QWORD *)(v0 + 176) = v5;
    v5(v2, v4);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v6;
    *v6 = v0;
    v6[1] = sub_23A557918;
    return sub_23A59F0A0();
  }
}

uint64_t sub_23A557918()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 176))(*(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 120));
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 168);
    v4 = *(_QWORD *)(v2 + 152);
    v5 = *(_QWORD *)(v2 + 160);
    (*(void (**)(_QWORD, _QWORD))(v2 + 176))(*(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 120));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_task_switch();
}

uint64_t sub_23A5579B8()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 200) = Strong;
  if (Strong)
  {
    sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
    sub_23A59EA7C();
    return swift_task_switch();
  }
  else if ((sub_23A59EB00() & 1) != 0 || (v3 = swift_weakLoadStrong(), swift_release(), !v3))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 120);
    sub_23A59EE90();
    *(_OWORD *)(v0 + 88) = xmmword_23A5A0B90;
    *(_QWORD *)(v0 + 72) = 0;
    *(_QWORD *)(v0 + 64) = 0;
    *(_BYTE *)(v0 + 80) = 1;
    sub_23A52EAEC(&qword_256994210, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
    sub_23A59F094();
    sub_23A52EAEC(&qword_256994218, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
    sub_23A59EEA8();
    v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    *(_QWORD *)(v0 + 176) = v7;
    v7(v4, v6);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v8;
    *v8 = v0;
    v8[1] = sub_23A557918;
    return sub_23A59F0A0();
  }
}

uint64_t sub_23A557BC8()
{
  sub_23A555B60();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A557C0C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  _QWORD *v6;

  if ((sub_23A59EB00() & 1) != 0 || (Strong = swift_weakLoadStrong(), swift_release(), !Strong))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 128);
    v2 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 120);
    sub_23A59EE90();
    *(_OWORD *)(v0 + 88) = xmmword_23A5A0B90;
    *(_QWORD *)(v0 + 72) = 0;
    *(_QWORD *)(v0 + 64) = 0;
    *(_BYTE *)(v0 + 80) = 1;
    sub_23A52EAEC(&qword_256994210, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
    sub_23A59F094();
    sub_23A52EAEC(&qword_256994218, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
    sub_23A59EEA8();
    v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    *(_QWORD *)(v0 + 176) = v5;
    v5(v2, v4);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v6;
    *v6 = v0;
    v6[1] = sub_23A557918;
    return sub_23A59F0A0();
  }
}

uint64_t sub_23A557DA0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A557E04@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_xpcServer);
  result = swift_beginAccess();
  v5 = *v3;
  if (v5)
  {
    swift_retain();
    sub_23A5518A8((uint64_t)sub_23A557EAC, 0);
    result = swift_release();
  }
  *a2 = v5 == 0;
  return result;
}

uint64_t sub_23A557EAC()
{
  return DTXPCServer.report(eventType:)(11);
}

void sub_23A557ED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  char *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  char *v29;
  void *v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v4 = sub_23A59E260();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A59E5D8();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A59E680();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A59E380();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  sub_23A59E500();
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v17 == *MEMORY[0x24BE2D1B0])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    sub_23A558300(*(void **)v15, *((_QWORD *)v15 + 1), a1);
    swift_bridgeObjectRelease();
  }
  else if (v17 == *MEMORY[0x24BE2D1C0])
  {
    v18 = a1;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v16 + 24), v8);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
    v20 = *MEMORY[0x24BE2D490];
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (v19 == v20)
    {
      sub_23A551F5C();
      v21 = v40;
      sub_23A59E5CC();
      sub_23A52EAEC(&qword_256994270, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D408], MEMORY[0x24BE2D410]);
      v22 = v42;
      v33 = (void *)sub_23A59DFF0();
      v35 = v34;
      sub_23A53AB30((uint64_t)v33, v34);
      sub_23A569EC0(v18, v33, v35, 0);
      sub_23A53AAA8((uint64_t)v33, v35);
      sub_23A53AAA8((uint64_t)v33, v35);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v22);
    }
    else
    {
      v25 = *(void **)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager);
      if (v25 && (v26 = objc_msgSend(v25, sel_currentAccessory)) != 0)
      {
        v27 = v26;
        v28 = objc_msgSend(v26, sel_uniqueIdentifier);

        v29 = v37;
        sub_23A59E23C();

        v30 = (void *)sub_23A59E20C();
        v32 = v31;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v39);
        sub_23A558300(v30, v32, a1);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23A559C5C(a1);
      }
    }
  }
  else
  {
    sub_23A59E614();
    v23 = (void *)sub_23A59E620();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v24 = v23;
    sub_23A569EC0(a1, v23, 0, 1);

  }
}

void sub_23A558300(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  void *v58;
  uint64_t v59;
  uint64_t *boxed_opaque_existential_1;
  id v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t v67;
  id v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(uint64_t, uint64_t, uint64_t);
  unsigned int v74;
  id v75;
  uint64_t v76;
  uint32_t *p_ivar_base_size;
  _BYTE *v78;
  uint64_t v79;
  void (*v80)(_BYTE *, uint64_t);
  id v81;
  os_log_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  unint64_t v92;
  id v93;
  id v94;
  uint64_t v95;
  _BYTE *v96;
  dispatch_group_t v97;
  unint64_t v98;
  NSObject *v99;
  NSObject *v100;
  os_log_type_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  id v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  os_log_t v115;
  NSObject *v116;
  uint64_t v117;
  NSObject *v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v124;
  uint64_t v125;
  void (*v126)(_BYTE *, uint64_t, uint64_t);
  int v127;
  int v128;
  _BYTE *v129;
  NSObject *v130;
  uint64_t v131;
  void (*v132)(_BYTE *, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  _BYTE *v137;
  uint64_t v138;
  int v139;
  int v140;
  void (*v141)(_BYTE *, uint64_t);
  NSObject *v142;
  NSObject *v143;
  uint64_t v144;
  _BYTE *v145;
  _BYTE *v146;
  int v147;
  int v148;
  BOOL v149;
  _BYTE *v150;
  uint64_t v151;
  _BYTE *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  unint64_t v164;
  uint64_t (**v165)(uint64_t, uint64_t, char);
  uint64_t (*v166)(uint64_t, uint64_t, char);
  id v167;
  _BYTE *v168;
  int v169;
  int v170;
  os_log_t v171;
  dispatch_group_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _BYTE *v176;
  NSObject *v177;
  NSObject *v178;
  NSObject *v179;
  id v180;
  id v181;
  _BYTE *v182;
  uint64_t v183;
  char v184;
  void (*v185)(_BYTE *, uint64_t);
  _BYTE *v186;
  uint64_t v187;
  void (*v188)(_BYTE *, uint64_t);
  void *v189;
  uint64_t v190;
  _BYTE *v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  void *v195;
  _BYTE *v196;
  _BYTE *v197;
  uint64_t v198;
  _BYTE v199[12];
  int v200;
  unsigned int (*v201)(uint64_t, uint64_t, uint64_t);
  uint64_t v202;
  id v203;
  uint64_t v204;
  id v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void (*v209)(os_log_t, uint64_t, uint64_t, uint64_t);
  id v210;
  uint64_t v211;
  _BYTE *v212;
  _BYTE *v213;
  unint64_t v214;
  _BYTE *v215;
  os_log_t v216;
  _BYTE *v217;
  _BYTE *v218;
  uint64_t (*v219)(uint64_t, uint64_t, char);
  _BYTE *v220;
  _BYTE *v221;
  _BYTE *v222;
  _BYTE *v223;
  uint64_t v224;
  uint64_t v225;
  _BYTE *v226;
  uint64_t ObjectType;
  _BYTE *v228;
  uint64_t v229;
  uint64_t v230;
  _BYTE *v231;
  uint64_t v232;
  _BYTE *v233;
  void *v234;
  _BYTE *v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  void *v240;
  uint64_t v241;
  dispatch_group_t v242;
  unint64_t v243;
  NSObject *v244;
  _BYTE *v245;
  _BYTE *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t aBlock[3];
  void *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;

  v240 = a1;
  v241 = a3;
  v243 = a2;
  ObjectType = swift_getObjectType();
  v4 = sub_23A59E8D8();
  v232 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v231 = &v199[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v230 = sub_23A59E8F0();
  v229 = *(_QWORD *)(v230 - 8);
  MEMORY[0x24BDAC7A8](v230);
  v228 = &v199[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  MEMORY[0x24BDAC7A8](v7);
  v222 = &v199[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_23A59E380();
  MEMORY[0x24BDAC7A8](v9);
  v219 = (uint64_t (*)(uint64_t, uint64_t, char))&v199[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_23A59E530();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v221 = &v199[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v214 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v223 = &v199[-v15];
  v16 = sub_23A59E680();
  v17 = *(_QWORD *)(v16 - 8);
  v236 = v16;
  v237 = v17;
  v18 = *(_BYTE **)(v17 + 64);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v213 = &v199[-((unint64_t)(v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = MEMORY[0x24BDAC7A8](v19);
  v218 = &v199[-v21];
  v22 = MEMORY[0x24BDAC7A8](v20);
  v220 = &v199[-v23];
  v24 = MEMORY[0x24BDAC7A8](v22);
  v235 = &v199[-v25];
  v26 = MEMORY[0x24BDAC7A8](v24);
  v212 = &v199[-v27];
  MEMORY[0x24BDAC7A8](v26);
  v217 = &v199[-v28];
  v238 = type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v224 = *(_QWORD *)(v238 - 8);
  v29 = MEMORY[0x24BDAC7A8](v238);
  v226 = &v199[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = MEMORY[0x24BDAC7A8](v29);
  v242 = (dispatch_group_t)&v199[-v32];
  v225 = v33;
  MEMORY[0x24BDAC7A8](v31);
  v233 = &v199[-v34];
  v35 = sub_23A59E260();
  v247 = *(_QWORD *)(v35 - 8);
  v248 = v35;
  v36 = MEMORY[0x24BDAC7A8](v35);
  v245 = &v199[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v36);
  v246 = &v199[-v38];
  v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994278);
  v39 = MEMORY[0x24BDAC7A8](v244);
  v215 = &v199[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v39);
  v42 = &v199[-v41];
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v46 = MEMORY[0x24BDAC7A8](v45);
  v216 = (os_log_t)&v199[-v47];
  v48 = MEMORY[0x24BDAC7A8](v46);
  v50 = &v199[-v49];
  v51 = MEMORY[0x24BDAC7A8](v48);
  v53 = &v199[-v52];
  MEMORY[0x24BDAC7A8](v51);
  v57 = &v199[-v56];
  v239 = v3;
  v58 = *(void **)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager);
  if (!v58)
  {
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
    return;
  }
  v208 = v55;
  v204 = v54;
  v206 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager;
  v207 = v11;
  v211 = v4;
  v59 = sub_23A59E38C();
  v250 = (void *)v59;
  v251 = sub_23A52EAEC(&qword_256994280, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D1E0], MEMORY[0x24BE2D1D0]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(aBlock);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BE2D1D8], v59);
  v61 = v58;
  LOBYTE(v59) = sub_23A59E26C();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  if ((v59 & 1) == 0 && !objc_msgSend(v61, sel_hasOptedToHH2)
    || (v62 = sub_23A55A140((uint64_t)v240, v243), v234 = v63, !v62))
  {
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();

    return;
  }
  v64 = v62;
  v202 = v12;
  sub_23A55A350();
  v205 = v65;
  v203 = v64;
  v66 = objc_msgSend(v64, sel_uniqueIdentifier);
  sub_23A59E23C();

  v67 = 1;
  v209 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v247 + 56);
  v209(v57, 0, 1, v248);
  v210 = v61;
  v68 = objc_msgSend(v61, sel_currentAccessory);
  if (v68)
  {
    v69 = v68;
    v70 = objc_msgSend(v68, sel_uniqueIdentifier);

    sub_23A59E23C();
    v67 = 0;
  }
  v71 = v248;
  v209(v53, v67, 1, v248);
  v72 = (uint64_t)&v42[SLODWORD(v244[6].isa)];
  sub_23A549090((uint64_t)v57, (uint64_t)v42, &qword_256993720);
  sub_23A549090((uint64_t)v53, v72, &qword_256993720);
  v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v247 + 48);
  if (v73((uint64_t)v42, 1, v71) == 1)
  {
    sub_23A53B9B4((uint64_t)v53, &qword_256993720);
    sub_23A53B9B4((uint64_t)v57, &qword_256993720);
    v74 = v73(v72, 1, v71);
    v75 = v210;
    if (v74 == 1)
    {
      sub_23A53B9B4((uint64_t)v42, &qword_256993720);
      LODWORD(v215) = 1;
      v76 = v241;
      goto LABEL_28;
    }
    goto LABEL_14;
  }
  sub_23A549090((uint64_t)v42, (uint64_t)v50, &qword_256993720);
  if (v73(v72, 1, v71) == 1)
  {
    sub_23A53B9B4((uint64_t)v53, &qword_256993720);
    sub_23A53B9B4((uint64_t)v57, &qword_256993720);
    (*(void (**)(_BYTE *, uint64_t))(v247 + 8))(v50, v71);
    v75 = v210;
LABEL_14:
    v201 = v73;
    sub_23A53B9B4((uint64_t)v42, &qword_256994278);
    v76 = v241;
    p_ivar_base_size = (_DWORD *)(&DTDaemonShim__metaData + 8);
    goto LABEL_16;
  }
  v201 = v73;
  v78 = v246;
  v79 = v247;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v247 + 32))(v246, v72, v248);
  sub_23A52EAEC(&qword_256994228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v200 = sub_23A59E98C();
  v80 = *(void (**)(_BYTE *, uint64_t))(v79 + 8);
  v71 = v248;
  v80(v78, v248);
  sub_23A53B9B4((uint64_t)v53, &qword_256993720);
  sub_23A53B9B4((uint64_t)v57, &qword_256993720);
  v80(v50, v71);
  sub_23A53B9B4((uint64_t)v42, &qword_256993720);
  v76 = v241;
  v75 = v210;
  p_ivar_base_size = &DTDaemonShim__metaData.ivar_base_size;
  if ((v200 & 1) != 0)
  {
LABEL_23:
    LODWORD(v215) = 1;
    goto LABEL_28;
  }
LABEL_16:
  if (!v205)
  {
LABEL_27:
    LODWORD(v215) = 0;
    goto LABEL_28;
  }
  v81 = objc_msgSend(v205, *((SEL *)p_ivar_base_size + 103));
  v82 = v216;
  sub_23A59E23C();

  v83 = 1;
  v209(v82, 0, 1, v71);
  v84 = objc_msgSend(v75, sel_currentAccessory);
  if (v84)
  {
    v85 = v84;
    v86 = objc_msgSend(v84, *((SEL *)p_ivar_base_size + 103));

    v87 = v208;
    sub_23A59E23C();

    v83 = 0;
    v88 = (uint64_t)v215;
  }
  else
  {
    v88 = (uint64_t)v215;
    v87 = v208;
  }
  v209((_BYTE *)v87, v83, 1, v71);
  v89 = v88 + SLODWORD(v244[6].isa);
  sub_23A549090((uint64_t)v82, v88, &qword_256993720);
  sub_23A549090(v87, v89, &qword_256993720);
  v90 = v201;
  if (v201(v88, 1, v71) == 1)
  {
    sub_23A53B9B4(v87, &qword_256993720);
    sub_23A53B9B4((uint64_t)v82, &qword_256993720);
    if (v90(v89, 1, v71) == 1)
    {
      sub_23A53B9B4(v88, &qword_256993720);
      goto LABEL_23;
    }
    goto LABEL_26;
  }
  v91 = v204;
  sub_23A549090(v88, v204, &qword_256993720);
  if (v90(v89, 1, v71) == 1)
  {
    sub_23A53B9B4(v208, &qword_256993720);
    sub_23A53B9B4((uint64_t)v82, &qword_256993720);
    (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v91, v71);
LABEL_26:
    sub_23A53B9B4(v88, &qword_256994278);
    goto LABEL_27;
  }
  v186 = v246;
  v187 = v247;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v247 + 32))(v246, v89, v71);
  sub_23A52EAEC(&qword_256994228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  LODWORD(v215) = sub_23A59E98C();
  v188 = *(void (**)(_BYTE *, uint64_t))(v187 + 8);
  v188(v186, v71);
  sub_23A53B9B4(v208, &qword_256993720);
  sub_23A53B9B4((uint64_t)v216, &qword_256993720);
  v188((_BYTE *)v91, v71);
  sub_23A53B9B4(v88, &qword_256993720);
LABEL_28:
  v92 = v243;
  v93 = objc_msgSend(v234, sel_siriEndpointProfile);
  v94 = v93;
  if (v93)

  if (qword_2569973B0 != -1)
    swift_once();
  v95 = sub_23A59E6A4();
  __swift_project_value_buffer(v95, (uint64_t)qword_2569973B8);
  v96 = v233;
  sub_23A53ABC0(v76, (uint64_t)v233, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  v97 = v242;
  sub_23A53ABC0(v76, (uint64_t)v242, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  v98 = v92;
  swift_bridgeObjectRetain_n();
  v99 = v203;
  v100 = sub_23A59E68C();
  v101 = sub_23A59EBC0();
  v102 = v101;
  if (os_log_type_enabled(v100, v101))
  {
    LODWORD(v208) = v94 != 0;
    v103 = swift_slowAlloc();
    v244 = swift_slowAlloc();
    aBlock[0] = (uint64_t)v244;
    *(_DWORD *)v103 = 136316162;
    v204 = sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v216 = v100;
    v104 = sub_23A59F034();
    v253 = sub_23A538FBC(v104, v105, aBlock);
    LODWORD(v209) = v102;
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04((uint64_t)v96, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    *(_WORD *)(v103 + 12) = 2080;
    sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
    v106 = sub_23A59F034();
    v253 = sub_23A538FBC(v106, v107, aBlock);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04((uint64_t)v97, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    *(_WORD *)(v103 + 22) = 2080;
    swift_bridgeObjectRetain();
    v253 = sub_23A538FBC((uint64_t)v240, v98, aBlock);
    sub_23A59ED1C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v103 + 32) = 1024;
    LODWORD(v253) = v208;
    sub_23A59ED1C();
    *(_WORD *)(v103 + 38) = 2080;
    v108 = -[NSObject uniqueIdentifier](v99, sel_uniqueIdentifier);
    v109 = v246;
    sub_23A59E23C();

    v110 = v248;
    v111 = sub_23A59F034();
    v113 = v112;
    (*(void (**)(_BYTE *, uint64_t))(v247 + 8))(v109, v110);
    v253 = sub_23A538FBC(v111, v113, aBlock);
    v114 = v238;
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    v115 = v216;
    _os_log_impl(&dword_23A52C000, v216, (os_log_type_t)v209, "Operation start: xid=%s, request=%s, hkid=%s, sidekick=%{BOOL}d, preferred=%s", (uint8_t *)v103, 0x30u);
    v116 = v244;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v116, -1, -1);
    v117 = v103;
    v76 = v241;
    MEMORY[0x23B852178](v117, -1, -1);

  }
  else
  {
    sub_23A53AC04((uint64_t)v96, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    sub_23A53AC04((uint64_t)v97, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    swift_bridgeObjectRelease_n();

    v114 = v238;
  }
  v244 = v99;
  v118 = dispatch_group_create();
  v119 = swift_allocObject();
  *(_QWORD *)(v119 + 16) = 0;
  *(_QWORD *)(v119 + 24) = 0;
  *(_BYTE *)(v119 + 32) = -1;
  dispatch_group_enter(v118);
  v120 = (_BYTE *)swift_allocObject();
  *((_QWORD *)v120 + 2) = v119;
  *((_QWORD *)v120 + 3) = v118;
  v233 = v120;
  v121 = v76 + *(int *)(v114 + 24);
  v122 = v237;
  v123 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v237 + 16);
  v242 = v118;
  v216 = (os_log_t)v119;
  if ((v215 & 1) != 0)
  {
    v215 = v18;
    v124 = v217;
    v125 = v236;
    v126 = v123;
    v123(v217, v121, v236);
    v213 = *(_BYTE **)(v122 + 88);
    v127 = ((uint64_t (*)(_BYTE *, uint64_t))v213)(v124, v125);
    v128 = *MEMORY[0x24BE2D4D0];
    v129 = *(_BYTE **)(v122 + 8);
    swift_retain();
    v130 = v118;
    v218 = v129;
    ((void (*)(_BYTE *, uint64_t))v129)(v124, v125);
    if (v127 == v128)
    {
      v131 = v121;
      v132 = v126;
      v133 = v241;
      v134 = v239;
      sub_23A54B880(v241, v234);
      v135 = v233;
      v136 = v125;
    }
    else
    {
      v146 = v212;
      v131 = v121;
      v132 = v126;
      v126(v212, v121, v125);
      v147 = ((uint64_t (*)(_BYTE *, uint64_t))v213)(v146, v125);
      v148 = *MEMORY[0x24BE2D498];
      ((void (*)(_BYTE *, uint64_t))v218)(v146, v125);
      v149 = v147 == v148;
      v133 = v241;
      v134 = v239;
      v135 = v233;
      v136 = v125;
      if (v149)
        sub_23A54C0F0(v241, v234);
    }
    swift_bridgeObjectRetain();
    sub_23A59E368();
    v150 = v223;
    sub_23A59E50C();
    v132(v235, v131, v136);
    v151 = swift_allocObject();
    *(_QWORD *)(v151 + 16) = sub_23A56D748;
    *(_QWORD *)(v151 + 24) = v135;
    v219 = (uint64_t (*)(uint64_t, uint64_t, char))v151;
    v152 = v215;
    if (*(_QWORD *)(v134 + v206))
    {
      v217 = *(_BYTE **)(v134 + v206);
      v153 = sub_23A59EAB8();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56))(v222, 1, 1, v153);
      v154 = v202;
      v155 = v207;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v202 + 16))(v221, v150, v207);
      v132(v220, (uint64_t)v235, v136);
      v156 = sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
      v157 = v136;
      v158 = (*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
      v214 = (v214 + v158 + 7) & 0xFFFFFFFFFFFFFFF8;
      v159 = (*(unsigned __int8 *)(v237 + 80) + v214 + 8) & ~(unint64_t)*(unsigned __int8 *)(v237 + 80);
      v160 = (unint64_t)&v152[v159 + 7] & 0xFFFFFFFFFFFFFFF8;
      v161 = swift_allocObject();
      *(_QWORD *)(v161 + 16) = v239;
      *(_QWORD *)(v161 + 24) = v156;
      v162 = v157;
      v133 = v241;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v154 + 32))(v161 + v158, v221, v155);
      v163 = v217;
      *(_QWORD *)(v161 + v214) = v217;
      v164 = v161 + v159;
      v150 = v223;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v237 + 32))(v164, v220, v162);
      *(_QWORD *)(v161 + v160) = v239;
      v165 = (uint64_t (**)(uint64_t, uint64_t, char))(v161 + ((v160 + 15) & 0xFFFFFFFFFFFFFFF8));
      v166 = v219;
      *v165 = sub_23A56DA24;
      v165[1] = v166;
      swift_retain_n();
      swift_retain();
      v167 = v163;
      v136 = v162;
      swift_retain();
      sub_23A55CB18((uint64_t)v222, (uint64_t)&unk_2569942A8, v161);
      swift_release();
    }
    else
    {
      swift_retain();
      v155 = v207;
      v154 = v202;
    }
    v171 = v216;
    v172 = v242;
    swift_release();
    ((void (*)(_BYTE *, uint64_t))v218)(v235, v136);
    (*(void (**)(_BYTE *, uint64_t))(v154 + 8))(v150, v155);
  }
  else
  {
    v137 = v218;
    v138 = v236;
    v123(v218, v121, v236);
    v235 = *(_BYTE **)(v122 + 88);
    v139 = ((uint64_t (*)(_BYTE *, uint64_t))v235)(v137, v138);
    v140 = *MEMORY[0x24BE2D4D0];
    v141 = *(void (**)(_BYTE *, uint64_t))(v122 + 8);
    swift_retain();
    v142 = v118;
    v141(v137, v138);
    if (v139 == v140)
    {
      v133 = v241;
      v143 = v244;
      v144 = v239;
      sub_23A54C4DC(v241, v234, v244);
      v145 = v233;
    }
    else
    {
      v168 = v213;
      v123(v213, v121, v138);
      v169 = ((uint64_t (*)(_BYTE *, uint64_t))v235)(v168, v138);
      v170 = *MEMORY[0x24BE2D498];
      v141(v168, v138);
      v149 = v169 == v170;
      v144 = v239;
      v143 = v244;
      v145 = v233;
      v133 = v241;
      if (v149)
        sub_23A54CEF4(v241, v244);
    }
    swift_retain();
    sub_23A5684DC(v143, v240, v243, v133, v144, (uint64_t)v145);
    swift_release();
    v171 = v216;
    v172 = v242;
  }
  if ((sub_23A59E65C() & 1) == 0)
    goto LABEL_66;
  v173 = sub_23A568FA0(v234);
  if (!(v173 >> 62))
  {
    v174 = *(_QWORD *)((v173 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v174)
      goto LABEL_54;
LABEL_65:
    swift_bridgeObjectRelease();
    v133 = v241;
    v171 = v216;
LABEL_66:
    v189 = (void *)sub_23A59E560();
    v190 = v133;
    v191 = v226;
    sub_23A53ABC0(v190, (uint64_t)v226, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    v192 = (*(unsigned __int8 *)(v224 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v224 + 80);
    v193 = (v225 + v192 + 7) & 0xFFFFFFFFFFFFFFF8;
    v194 = swift_allocObject();
    *(_QWORD *)(v194 + 16) = v171;
    sub_23A53BA34((uint64_t)v191, v194 + v192, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    *(_QWORD *)(v194 + v193) = ObjectType;
    v251 = (uint64_t)sub_23A56D8E8;
    v252 = v194;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23A55ABC0;
    v250 = &block_descriptor_121;
    v195 = _Block_copy(aBlock);
    swift_retain();
    v196 = v228;
    sub_23A59E8E4();
    v253 = MEMORY[0x24BEE4AF8];
    sub_23A52EAEC(&qword_256994288, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994290);
    sub_23A56D9E4(&qword_256994298, &qword_256994290, MEMORY[0x24BEE12C8]);
    v197 = v231;
    v198 = v211;
    sub_23A59ED4C();
    sub_23A59EBE4();

    _Block_release(v195);
    swift_release();

    (*(void (**)(_BYTE *, uint64_t))(v232 + 8))(v197, v198);
    (*(void (**)(_BYTE *, uint64_t))(v229 + 8))(v196, v230);
    swift_release();
    swift_release();
    return;
  }
  v174 = sub_23A59EED8();
  if (!v174)
    goto LABEL_65;
LABEL_54:
  if (v174 >= 1)
  {
    v175 = 0;
    v238 = v173 & 0xC000000000000001;
    v176 = v246;
    do
    {
      if (v238)
        v179 = MEMORY[0x23B85198C](v175, v173);
      else
        v179 = *(id *)(v173 + 8 * v175 + 32);
      v178 = v179;
      v180 = -[NSObject uniqueIdentifier](v179, sel_uniqueIdentifier);
      sub_23A59E23C();

      v181 = -[NSObject uniqueIdentifier](v244, sel_uniqueIdentifier);
      v182 = v245;
      sub_23A59E23C();

      sub_23A52EAEC(&qword_256994228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v183 = v248;
      v184 = sub_23A59E98C();
      v185 = *(void (**)(_BYTE *, uint64_t))(v247 + 8);
      v185(v182, v183);
      v185(v176, v183);
      v172 = v242;
      if ((v184 & 1) == 0)
      {
        dispatch_group_enter(v242);
        v177 = v172;
        sub_23A56942C(v178, (uint64_t)v240, v243, v241, v239, v177);

        v178 = v177;
      }
      ++v175;

    }
    while (v174 != v175);
    goto LABEL_65;
  }
  __break(1u);
}

void sub_23A559C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  void *v40;
  uint64_t v41;
  uint64_t (*v42)(void *, unint64_t, char);
  uint64_t (**v43)(void *, unint64_t, char);
  id v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  void (*v47)(char *, uint64_t, uint64_t);
  id v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t ObjectType;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61[6];
  uint64_t v62;

  v51 = a1;
  ObjectType = swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  MEMORY[0x24BDAC7A8](v3);
  v55 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v62 = sub_23A59E530();
  v60 = *(_QWORD *)(v62 - 8);
  v8 = *(_QWORD *)(v60 + 64);
  v9 = MEMORY[0x24BDAC7A8](v62);
  v54 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v59 = (char *)&v45 - v10;
  v11 = sub_23A59E680();
  v12 = *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v18 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager;
  v53 = v1;
  v19 = *(void **)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager);
  if (v19)
  {
    v49 = v2;
    v50 = v17;
    v56 = (char *)&v45 - v15;
    v57 = v16;
    v58 = v14;
    v20 = sub_23A59E38C();
    v61[3] = v20;
    v61[4] = sub_23A52EAEC(&qword_256994280, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D1E0], MEMORY[0x24BE2D1D0]);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v61);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BE2D1D8], v20);
    v22 = v19;
    LOBYTE(v20) = sub_23A59E26C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v61);
    if ((v20 & 1) != 0 || objc_msgSend(v22, sel_hasOptedToHH2))
    {
      v48 = v22;
      v23 = v51;
      v24 = v51 + *(int *)(v5 + 24);
      v47 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
      v47(v56, v24, v58);
      v25 = v23 + *(int *)(v5 + 28);
      v46 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
      v46(v59, v25, v62);
      sub_23A53ABC0(v23, (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
      v26 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v27 = swift_allocObject();
      sub_23A53BA34((uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
      *(_QWORD *)(v27 + ((v7 + v26 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
      v28 = v53;
      if (*(_QWORD *)(v53 + v18))
      {
        ObjectType = *(_QWORD *)(v53 + v18);
        v29 = sub_23A59EAB8();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v55, 1, 1, v29);
        v46(v54, (uint64_t)v59, v62);
        v47(v50, (uint64_t)v56, v58);
        v30 = sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
        v51 = v27;
        v31 = v28;
        v47 = (void (*)(char *, uint64_t, uint64_t))v30;
        v32 = v60;
        v33 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
        v34 = (v8 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
        v35 = v57;
        v36 = (*(unsigned __int8 *)(v57 + 80) + v34 + 8) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
        v37 = (v12 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
        v38 = swift_allocObject();
        v39 = v47;
        *(_QWORD *)(v38 + 16) = v31;
        *(_QWORD *)(v38 + 24) = v39;
        (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v38 + v33, v54, v62);
        v40 = (void *)ObjectType;
        *(_QWORD *)(v38 + v34) = ObjectType;
        (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v38 + v36, v50, v58);
        v41 = v31;
        v42 = (uint64_t (*)(void *, unint64_t, char))v51;
        *(_QWORD *)(v38 + v37) = v41;
        v43 = (uint64_t (**)(void *, unint64_t, char))(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8));
        *v43 = sub_23A56DF0C;
        v43[1] = v42;
        swift_retain_n();
        v44 = v40;
        swift_retain();
        sub_23A55CB18(v55, (uint64_t)&unk_256994308, v38);
        swift_release();
      }

      swift_release();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v62);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
    }
    else
    {
      sub_23A59E614();
      sub_23A59E620();
      swift_willThrow();

    }
  }
  else
  {
    sub_23A59E614();
    sub_23A59E620();
    swift_willThrow();
  }
}

void *sub_23A55A140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - v8;
  sub_23A55C7D4(a1, a2);
  v11 = v10;
  if (!v10)
    return 0;
  v12 = objc_msgSend(v10, sel_siriEndpointProfile);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, sel_sessionHubIdentifier);

    if (v14)
    {
      sub_23A59E23C();

      v15 = sub_23A59E260();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 0, 1, v15);
    }
    else
    {
      v15 = sub_23A59E260();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
    }
    sub_23A53AAEC((uint64_t)v7, (uint64_t)v9, &qword_256993720);
    sub_23A59E260();
    v17 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v15) == 1)
    {
      sub_23A53B9B4((uint64_t)v9, &qword_256993720);
    }
    else
    {
      v19 = sub_23A59E20C();
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v15);
      v22 = sub_23A56270C(v19, v21);
      if (v22)
      {
        v16 = v22;
        swift_bridgeObjectRelease();
        return v16;
      }
      sub_23A55C7D4(v19, v21);
      v16 = v23;
      swift_bridgeObjectRelease();
      if (v16)
        return v16;
    }
  }
  v18 = v11;
  return v11;
}

void sub_23A55A350()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint32_t *p_ivar_base_size;
  unint64_t v22;
  id v23;
  void *v24;
  BOOL v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char *v48;
  void (*v49)(uint64_t, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  id v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  id v70;
  id v71;
  BOOL v72;
  id v73;
  void *v74;
  id v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  id v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v1 = v0;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994278);
  MEMORY[0x24BDAC7A8](v88);
  v96 = (uint64_t)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23A59E260();
  v4 = *(_QWORD **)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v84 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v87 = (char *)&v76 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v86 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v95 = (uint64_t)&v76 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v94 = (uint64_t)&v76 - v13;
  v89 = v1;
  v14 = objc_msgSend(v1, sel_home);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, sel_mediaSystems);

    sub_23A53AB74(0, &qword_256994300);
    v17 = sub_23A59EA34();

    v18 = v17;
    if (!(v17 >> 62))
      goto LABEL_3;
  }
  else
  {
    v18 = MEMORY[0x24BEE4AF8];
    if (!(MEMORY[0x24BEE4AF8] >> 62))
    {
LABEL_3:
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v19)
        goto LABEL_4;
LABEL_52:
      swift_bridgeObjectRelease();
      return;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_23A59EED8();
  swift_bridgeObjectRelease();
  if (!v19)
    goto LABEL_52;
LABEL_4:
  v85 = v3;
  v20 = 0;
  v79 = v18;
  v80 = v18 & 0xC000000000000001;
  v76 = v18 + 32;
  v77 = v18 & 0xFFFFFFFFFFFFFF8;
  p_ivar_base_size = (_DWORD *)(&DTDaemonShim__metaData + 8);
  v78 = v19;
  v93 = v4;
  while (1)
  {
    if (v80)
    {
      v22 = v20;
      v23 = (id)MEMORY[0x23B85198C](v20, v18);
    }
    else
    {
      if (v20 >= *(_QWORD *)(v77 + 16))
        goto LABEL_61;
      v22 = v20;
      v23 = *(id *)(v76 + 8 * v20);
    }
    v24 = v23;
    v25 = __OFADD__(v22, 1);
    v26 = v22 + 1;
    if (v25)
      goto LABEL_60;
    v82 = v26;
    v27 = objc_msgSend(v23, sel_components);
    v28 = sub_23A53AB74(0, &qword_2569942F8);
    v29 = sub_23A59EA34();

    v83 = v24;
    v81 = v28;
    if (!(v29 >> 62))
    {
      v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v30)
        break;
      goto LABEL_49;
    }
    swift_bridgeObjectRetain();
    v30 = sub_23A59EED8();
    if (v30)
      break;
LABEL_49:
    swift_bridgeObjectRelease_n();
    v33 = v83;
LABEL_50:

    v18 = v79;
LABEL_51:
    v20 = v82;
    if (v82 == v78)
      goto LABEL_52;
  }
  v91 = v29;
  v92 = v29 & 0xC000000000000001;
  v31 = 4;
  v90 = v30;
  while (1)
  {
    if (v92)
      v34 = (id)MEMORY[0x23B85198C](v31 - 4, v29);
    else
      v34 = *(id *)(v29 + 8 * v31);
    v35 = v34;
    v36 = v31 - 3;
    if (__OFADD__(v31 - 4, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    v37 = objc_msgSend(v34, sel_mediaProfile);
    if (v37
      && (v38 = v37, v39 = objc_msgSend(v37, sel_accessory), v38, v39))
    {
      v40 = v35;
      v41 = objc_msgSend(v39, *((SEL *)p_ivar_base_size + 103));

      v42 = v94;
      sub_23A59E23C();

      v43 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v4[7];
      v44 = v42;
      v45 = 0;
    }
    else
    {
      v40 = v35;
      v43 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v4[7];
      v42 = v94;
      v44 = v94;
      v45 = 1;
    }
    v46 = v85;
    v43(v44, v45, 1, v85);
    v47 = objc_msgSend(v89, *((SEL *)p_ivar_base_size + 103));
    v48 = v87;
    sub_23A59E23C();

    v49 = (void (*)(uint64_t, char *, uint64_t))v4[4];
    v50 = v95;
    v49(v95, v48, v46);
    v43(v50, 0, 1, v46);
    v51 = v96;
    v52 = v96 + *(int *)(v88 + 48);
    sub_23A549090(v42, v96, &qword_256993720);
    sub_23A549090(v50, v52, &qword_256993720);
    v53 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v4[6];
    if (v53(v51, 1, v46) == 1)
      break;
    sub_23A549090(v96, v86, &qword_256993720);
    v33 = v40;
    if (v53(v52, 1, v46) == 1)
    {
      ((void (*)(uint64_t, uint64_t))v93[1])(v86, v46);
      p_ivar_base_size = (_DWORD *)(&DTDaemonShim__metaData + 8);
      v29 = v91;
      goto LABEL_14;
    }
    v54 = v86;
    v55 = v46;
    v56 = v84;
    v49((uint64_t)v84, (char *)v52, v46);
    sub_23A52EAEC(&qword_256994228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v57 = sub_23A59E98C();
    v58 = (void (*)(uint64_t, uint64_t))v93[1];
    v58(v54, v46);
    v59 = v96;
    v58((uint64_t)v56, v55);
    sub_23A53B9B4(v59, &qword_256993720);
    sub_23A53B9B4(v95, &qword_256993720);
    sub_23A53B9B4(v94, &qword_256993720);
    p_ivar_base_size = (_DWORD *)(&DTDaemonShim__metaData + 8);
    v29 = v91;
    if ((v57 & 1) != 0)
      goto LABEL_30;
LABEL_15:

    ++v31;
    v4 = v93;
    if (v36 == v90)
      goto LABEL_49;
  }
  v32 = v53(v52, 1, v46);
  p_ivar_base_size = &DTDaemonShim__metaData.ivar_base_size;
  v33 = v40;
  v29 = v91;
  if (v32 != 1)
  {
LABEL_14:
    sub_23A53B9B4(v96, &qword_256994278);
    sub_23A53B9B4(v95, &qword_256993720);
    sub_23A53B9B4(v94, &qword_256993720);
    goto LABEL_15;
  }
  sub_23A53B9B4(v96, &qword_256993720);
  sub_23A53B9B4(v95, &qword_256993720);
  sub_23A53B9B4(v94, &qword_256993720);
LABEL_30:
  swift_bridgeObjectRelease_n();
  v60 = objc_msgSend(v33, sel_role);
  v61 = objc_msgSend(v60, sel_type);

  if (v61 == (id)1)
    v62 = 2;
  else
    v62 = 1;
  v63 = objc_msgSend(v83, sel_components, v76);
  v64 = sub_23A59EA34();

  if (v64 >> 62)
  {
    swift_bridgeObjectRetain();
    v65 = sub_23A59EED8();
    v4 = v93;
    if (v65)
      goto LABEL_35;
LABEL_43:
    swift_bridgeObjectRelease_n();

    goto LABEL_50;
  }
  v65 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v4 = v93;
  if (!v65)
    goto LABEL_43;
LABEL_35:
  v92 = v64 & 0xC000000000000001;
  v66 = 4;
  while (1)
  {
    v67 = v92 ? (id)MEMORY[0x23B85198C](v66 - 4, v64) : *(id *)(v64 + 8 * v66);
    v68 = v67;
    v69 = v66 - 3;
    if (__OFADD__(v66 - 4, 1))
      break;
    v70 = objc_msgSend(v67, sel_role);
    v71 = objc_msgSend(v70, sel_type);

    if (v71 == (id)v62)
    {
      swift_bridgeObjectRelease_n();
      v73 = objc_msgSend(v68, sel_mediaProfile);
      v4 = v93;
      if (!v73)
      {

        v33 = v68;
        goto LABEL_50;
      }
      v74 = v73;
      v75 = objc_msgSend(v73, sel_accessory);

      v18 = v79;
      if (!v75)
        goto LABEL_51;
      goto LABEL_52;
    }

    ++v66;
    v72 = v69 == v65;
    v4 = v93;
    if (v72)
      goto LABEL_43;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
}

uint64_t sub_23A55ABC4(void *a1, unint64_t a2, int a3, uint64_t a4, void *a5, uint64_t (*a6)(void *, unint64_t, _QWORD), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  NSObject *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  NSObject *v38;
  id v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  id v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  NSObject *v64;
  uint64_t v65;
  void *v66;
  unint64_t v67;
  char v68;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  NSObject *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t (*v81)(void *, unint64_t, _QWORD);
  uint64_t v82;
  uint64_t v83;

  v80 = a7;
  v81 = a6;
  v12 = sub_23A59E260();
  v77 = *(_QWORD *)(v12 - 8);
  v78 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v76 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v70 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v70 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v70 - v24;
  v79 = a3;
  if ((a3 & 1) == 0)
  {
    sub_23A53AB30((uint64_t)a1, a2);
    if (qword_2569973B0 != -1)
      swift_once();
    v26 = sub_23A59E6A4();
    __swift_project_value_buffer(v26, (uint64_t)qword_2569973B8);
    sub_23A53ABC0(a4, (uint64_t)v25, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    sub_23A53ABC0(a4, (uint64_t)v23, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    sub_23A56D4A0(a1, a2, 0);
    v27 = a5;
    sub_23A56D4A0(a1, a2, 0);
    v28 = v27;
    v29 = sub_23A59E68C();
    v30 = sub_23A59EBC0();
    if (os_log_type_enabled(v29, (os_log_type_t)v30))
    {
      LODWORD(v71) = v30;
      v72 = (uint64_t)v29;
      v75 = a2 >> 62;
      v31 = swift_slowAlloc();
      v70 = swift_slowAlloc();
      v83 = v70;
      *(_DWORD *)v31 = 136315906;
      v32 = sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v73 = v28;
      v74 = v32;
      v33 = v78;
      v34 = sub_23A59F034();
      v82 = sub_23A538FBC(v34, v35, &v83);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v25, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
      *(_WORD *)(v31 + 12) = 2080;
      sub_23A59E680();
      sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
      v36 = sub_23A59F034();
      v82 = sub_23A538FBC(v36, v37, &v83);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v23, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
      *(_WORD *)(v31 + 22) = 2080;
      v38 = v73;
      v39 = -[NSObject uniqueIdentifier](v73, sel_uniqueIdentifier);
      v40 = v76;
      sub_23A59E23C();

      v41 = sub_23A59F034();
      v43 = v42;
      (*(void (**)(char *, uint64_t))(v77 + 8))(v40, v33);
      v82 = sub_23A538FBC(v41, v43, &v83);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 32) = 2048;
      __asm { BR              X10 }
    }
    sub_23A56D4AC(a1, a2, 0);
    sub_23A56D4AC(a1, a2, 0);
    sub_23A53AC04((uint64_t)v25, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    sub_23A53AC04((uint64_t)v23, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);

    v66 = a1;
    v67 = a2;
    v68 = 0;
    goto LABEL_12;
  }
  v44 = a1;
  if (qword_2569973B0 != -1)
    swift_once();
  v45 = sub_23A59E6A4();
  __swift_project_value_buffer(v45, (uint64_t)qword_2569973B8);
  sub_23A53ABC0(a4, (uint64_t)v20, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  sub_23A53ABC0(a4, (uint64_t)v17, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  sub_23A56D4A0(a1, a2, 1);
  v46 = a5;
  sub_23A56D4A0(a1, a2, 1);
  v47 = v46;
  v29 = sub_23A59E68C();
  v48 = sub_23A59EBB4();
  v49 = v48;
  if (!os_log_type_enabled(v29, v48))
  {
    sub_23A56D4AC(a1, a2, 1);
    sub_23A53AC04((uint64_t)v20, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    sub_23A53AC04((uint64_t)v17, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);

    sub_23A56D4AC(a1, a2, 1);
    v66 = a1;
    v67 = a2;
    v68 = 1;
LABEL_12:
    sub_23A56D4AC(v66, v67, v68);

    return v81(a1, a2, v79 & 1);
  }
  v50 = swift_slowAlloc();
  LODWORD(v74) = v49;
  v51 = v50;
  v75 = swift_slowAlloc();
  v83 = v75;
  *(_DWORD *)v51 = 136315906;
  v72 = sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  v73 = v29;
  v52 = v78;
  v53 = sub_23A59F034();
  v82 = sub_23A538FBC(v53, v54, &v83);
  v71 = &v83;
  sub_23A59ED1C();
  swift_bridgeObjectRelease();
  sub_23A53AC04((uint64_t)v20, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  *(_WORD *)(v51 + 12) = 2080;
  sub_23A59E680();
  sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
  v55 = sub_23A59F034();
  v82 = sub_23A538FBC(v55, v56, &v83);
  sub_23A59ED1C();
  swift_bridgeObjectRelease();
  sub_23A53AC04((uint64_t)v17, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  *(_WORD *)(v51 + 22) = 2080;
  v57 = objc_msgSend(v47, sel_uniqueIdentifier);
  v58 = v76;
  sub_23A59E23C();

  v59 = sub_23A59F034();
  v61 = v60;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v58, v52);
  v82 = sub_23A538FBC(v59, v61, &v83);
  sub_23A59ED1C();
  swift_bridgeObjectRelease();

  *(_WORD *)(v51 + 32) = 2080;
  swift_getErrorValue();
  v62 = sub_23A59F0C4();
  v82 = sub_23A538FBC(v62, v63, &v83);
  sub_23A59ED1C();
  swift_bridgeObjectRelease();
  sub_23A56D4AC(a1, a2, 1);
  sub_23A56D4AC(a1, a2, 1);
  v64 = v73;
  _os_log_impl(&dword_23A52C000, v73, (os_log_type_t)v74, "### HMMM send failed: xid=%s, request=%s, hkID=%s, error=%s", (uint8_t *)v51, 0x2Au);
  v65 = v75;
  swift_arrayDestroy();
  MEMORY[0x23B852178](v65, -1, -1);
  MEMORY[0x23B852178](v51, -1, -1);

  sub_23A56D4AC(a1, a2, 1);
  return v81(a1, a2, v79 & 1);
}

uint64_t sub_23A55B534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8[25] = a8;
  v8[26] = v16;
  v8[23] = a6;
  v8[24] = a7;
  v8[21] = a4;
  v8[22] = a5;
  v9 = sub_23A59E6A4();
  v8[27] = v9;
  v8[28] = *(_QWORD *)(v9 - 8);
  v8[29] = swift_task_alloc();
  v10 = sub_23A59E530();
  v8[30] = v10;
  v8[31] = *(_QWORD *)(v10 - 8);
  v8[32] = swift_task_alloc();
  v8[33] = swift_task_alloc();
  v8[34] = swift_task_alloc();
  v11 = sub_23A59E680();
  v8[35] = v11;
  v8[36] = *(_QWORD *)(v11 - 8);
  v8[37] = swift_task_alloc();
  v8[38] = swift_task_alloc();
  v12 = sub_23A59E260();
  v8[39] = v12;
  v8[40] = *(_QWORD *)(v12 - 8);
  v8[41] = swift_task_alloc();
  v13 = sub_23A59E380();
  v8[42] = v13;
  v8[43] = *(_QWORD *)(v13 - 8);
  v8[44] = swift_task_alloc();
  type metadata accessor for DTTransportDaemon(0);
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  v8[45] = sub_23A59EA7C();
  v8[46] = v14;
  return swift_task_switch();
}

uint64_t sub_23A55B6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t Strong;
  void *v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(void *, _QWORD, uint64_t);
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[2];

  v2 = *(_QWORD *)(v0 + 344);
  v1 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 336);
  sub_23A59E500();
  v4 = sub_23A59E374();
  v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (!v6)
  {
    v7 = objc_msgSend(*(id *)(v0 + 176), sel_currentAccessory);
    if (v7)
    {
      v8 = v7;
      v10 = *(_QWORD *)(v0 + 320);
      v9 = *(_QWORD *)(v0 + 328);
      v11 = *(_QWORD *)(v0 + 312);
      v12 = objc_msgSend(v7, sel_uniqueIdentifier);

      sub_23A59E23C();
      v4 = sub_23A59E20C();
      v6 = v13;
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    }
    else
    {
      v4 = 0;
      v6 = 0;
    }
  }
  v14 = *(_QWORD *)(v0 + 272);
  v15 = *(_QWORD *)(v0 + 240);
  v16 = *(_QWORD *)(v0 + 248);
  v17 = *(_QWORD *)(v0 + 168);
  sub_23A59E668();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  *(_QWORD *)(v0 + 376) = v18;
  v18(v14, v17, v15);
  if (v6)
  {
    sub_23A55C7D4(v4, v6);
    v20 = v19;
    swift_bridgeObjectRelease();
    if (v20)
    {
      sub_23A54BF5C();
      sub_23A59E524();

    }
  }
  if (qword_2569973B0 != -1)
    swift_once();
  v22 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 304);
  v23 = *(_QWORD *)(v0 + 280);
  v24 = *(_QWORD *)(v0 + 288);
  v26 = *(_QWORD *)(v0 + 224);
  v25 = *(_QWORD *)(v0 + 232);
  v27 = *(_QWORD *)(v0 + 216);
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_2569973B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v25, v28, v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v21, v23);
  v29 = sub_23A59E68C();
  v30 = sub_23A59EBC0();
  v31 = os_log_type_enabled(v29, v30);
  v33 = *(_QWORD *)(v0 + 288);
  v32 = *(_QWORD *)(v0 + 296);
  v34 = *(_QWORD *)(v0 + 280);
  if (v31)
  {
    v56 = *(_QWORD *)(v0 + 224);
    v57 = *(_QWORD *)(v0 + 216);
    v58 = *(_QWORD *)(v0 + 232);
    v35 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    v59[0] = v55;
    *(_DWORD *)v35 = 136315394;
    sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
    v36 = sub_23A59F034();
    *(_QWORD *)(v0 + 152) = sub_23A538FBC(v36, v37, v59);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v38(v32, v34);
    *(_WORD *)(v35 + 12) = 2080;
    swift_beginAccess();
    sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
    v39 = sub_23A59F034();
    *(_QWORD *)(v0 + 160) = sub_23A538FBC(v39, v40, v59);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v29, v30, "RequestForSelf: request=%s, %s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v55, -1, -1);
    MEMORY[0x23B852178](v35, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v58, v57);
  }
  else
  {
    v42 = *(_QWORD *)(v0 + 224);
    v41 = *(_QWORD *)(v0 + 232);
    v43 = *(_QWORD *)(v0 + 216);
    v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v38(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
  }
  *(_QWORD *)(v0 + 384) = v38;
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 392) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 400) = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon;
    *(_QWORD *)(v0 + 408) = type metadata accessor for DTDaemon();
    *(_QWORD *)(v0 + 416) = sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
    sub_23A59EA7C();
    return swift_task_switch();
  }
  else
  {
    sub_23A59E614();
    v46 = (void *)sub_23A59E620();
    swift_willThrow();
    v47 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v48 = *(_QWORD *)(v0 + 304);
    v50 = *(_QWORD *)(v0 + 272);
    v49 = *(_QWORD *)(v0 + 280);
    v51 = *(_QWORD *)(v0 + 240);
    v52 = *(_QWORD *)(v0 + 248);
    v53 = *(void (**)(void *, _QWORD, uint64_t))(v0 + 200);
    v54 = v46;
    v53(v46, 0, 1);

    v47(v48, v49);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v51);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A55BC34()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[49] + v0[50]);
  swift_beginAccess();
  v0[53] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A55BC94()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, _QWORD, uint64_t);
  id v16;

  v1 = *(_QWORD *)(v0 + 424);
  swift_release();
  if (v1)
  {
    v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 376);
    v4 = *(_QWORD *)(v0 + 264);
    v3 = *(_QWORD *)(v0 + 272);
    v5 = *(_QWORD *)(v0 + 240);
    swift_beginAccess();
    v2(v4, v3, v5);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 432) = v6;
    *v6 = v0;
    v6[1] = sub_23A55BE68;
    return DTTimerDaemon.handleRequest(_:context:)(v0 + 16, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 264));
  }
  else
  {
    sub_23A59E614();
    v8 = (void *)sub_23A59E620();
    swift_willThrow();
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v10 = *(_QWORD *)(v0 + 304);
    v12 = *(_QWORD *)(v0 + 272);
    v11 = *(_QWORD *)(v0 + 280);
    v13 = *(_QWORD *)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 248);
    v15 = *(void (**)(void *, _QWORD, uint64_t))(v0 + 200);
    v16 = v8;
    v15(v8, 0, 1);

    v9(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A55BE68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc();
  v3 = v2[33];
  v4 = v2[30];
  v5 = *(void (**)(uint64_t, uint64_t))(v2[31] + 8);
  if (!v0)
    v2[56] = v5;
  v5(v3, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A55BF00()
{
  uint64_t v0;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, _QWORD, uint64_t);
  id v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, unint64_t, _QWORD);
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);

  if ((sub_23A59E644() & 1) != 0 && (Strong = swift_weakLoadStrong(), (*(_QWORD *)(v0 + 456) = Strong) != 0))
  {
    *(_QWORD *)(v0 + 464) = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_syncDaemon;
    sub_23A59EA7C();
    return swift_task_switch();
  }
  else
  {
    v3 = *(void **)(v0 + 440);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v4 = sub_23A59DFF0();
    if (v3)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      v6 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v7 = *(_QWORD *)(v0 + 304);
      v9 = *(_QWORD *)(v0 + 272);
      v8 = *(_QWORD *)(v0 + 280);
      v10 = *(_QWORD *)(v0 + 240);
      v11 = *(_QWORD *)(v0 + 248);
      v12 = *(void (**)(void *, _QWORD, uint64_t))(v0 + 200);
      v13 = v3;
      v12(v3, 0, 1);

      v6(v7, v8);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    else
    {
      v14 = v4;
      v15 = v5;
      v16 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v17 = *(_QWORD *)(v0 + 304);
      v18 = *(_QWORD *)(v0 + 280);
      v21 = *(_QWORD *)(v0 + 272);
      v22 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
      v19 = *(_QWORD *)(v0 + 240);
      v20 = *(void (**)(uint64_t, unint64_t, _QWORD))(v0 + 200);
      sub_23A53AB30(v4, v5);
      v20(v14, v15, 0);
      sub_23A53AAA8(v14, v15);
      sub_23A53AAA8(v14, v15);
      v16(v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      v22(v21, v19);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A55C11C()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[57] + v0[58]);
  swift_beginAccess();
  v0[59] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A55C17C()
{
  uint64_t v0;
  uint64_t v1;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, _QWORD, uint64_t);
  id v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, unint64_t, _QWORD);
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 472);
  swift_release();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 376))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240));
    type metadata accessor for DTSyncDaemon();
    sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
    sub_23A59EA7C();
    return swift_task_switch();
  }
  else
  {
    v3 = *(void **)(v0 + 440);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v4 = sub_23A59DFF0();
    if (v3)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      v6 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v7 = *(_QWORD *)(v0 + 304);
      v9 = *(_QWORD *)(v0 + 272);
      v8 = *(_QWORD *)(v0 + 280);
      v10 = *(_QWORD *)(v0 + 240);
      v11 = *(_QWORD *)(v0 + 248);
      v12 = *(void (**)(void *, _QWORD, uint64_t))(v0 + 200);
      v13 = v3;
      v12(v3, 0, 1);

      v6(v7, v8);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    else
    {
      v14 = v4;
      v15 = v5;
      v16 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v17 = *(_QWORD *)(v0 + 304);
      v18 = *(_QWORD *)(v0 + 280);
      v21 = *(_QWORD *)(v0 + 272);
      v22 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
      v19 = *(_QWORD *)(v0 + 240);
      v20 = *(void (**)(uint64_t, unint64_t, _QWORD))(v0 + 200);
      sub_23A53AB30(v4, v5);
      v20(v14, v15, 0);
      sub_23A53AAA8(v14, v15);
      sub_23A53AAA8(v14, v15);
      v16(v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      v22(v21, v19);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A55C3B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 440);
  DTSyncDaemon.handleRequest(_:context:)(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 256));
  *(_QWORD *)(v0 + 480) = v1;
  (*(void (**)(_QWORD, _QWORD))(v0 + 448))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  return swift_task_switch();
}

uint64_t sub_23A55C424()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, _QWORD, uint64_t);
  id v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, unint64_t, _QWORD);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);

  swift_release();
  v1 = *(void **)(v0 + 480);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v2 = sub_23A59DFF0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    v4 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v5 = *(_QWORD *)(v0 + 304);
    v7 = *(_QWORD *)(v0 + 272);
    v6 = *(_QWORD *)(v0 + 280);
    v8 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 248);
    v10 = *(void (**)(void *, _QWORD, uint64_t))(v0 + 200);
    v11 = v1;
    v10(v1, 0, 1);

    v4(v5, v6);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    v12 = v2;
    v13 = v3;
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v15 = *(_QWORD *)(v0 + 304);
    v16 = *(_QWORD *)(v0 + 280);
    v20 = *(_QWORD *)(v0 + 272);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
    v17 = *(_QWORD *)(v0 + 240);
    v18 = *(void (**)(uint64_t, unint64_t, _QWORD))(v0 + 200);
    sub_23A53AB30(v2, v3);
    v18(v12, v13, 0);
    sub_23A53AAA8(v12, v13);
    sub_23A53AAA8(v12, v13);
    v14(v15, v16);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    v21(v20, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A55C5D0()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, _QWORD, uint64_t);
  id v9;

  v1 = *(void **)(v0 + 440);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v3 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(void (**)(void *, _QWORD, uint64_t))(v0 + 200);
  v9 = v1;
  v8(v1, 0, 1);

  v2(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A55C6C8()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, _QWORD, uint64_t);
  id v9;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  v1 = *(void **)(v0 + 480);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v3 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(void (**)(void *, _QWORD, uint64_t))(v0 + 200);
  v9 = v1;
  v8(v1, 0, 1);

  v2(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23A55C7D4(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  BOOL v11;
  unint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v34 = a1;
  v35 = a2;
  v3 = sub_23A59E260();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v2, sel_homes);
  sub_23A53AB74(0, &qword_2569942E0);
  v7 = sub_23A59EA34();

  if (v7 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    v8 = sub_23A59EED8();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_3;
LABEL_28:
    swift_bridgeObjectRelease();
    return;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
    goto LABEL_28;
LABEL_3:
  v9 = 0;
  v28 = v7;
  v29 = v7 & 0xC000000000000001;
  v25 = v7 + 32;
  v26 = v7 & 0xFFFFFFFFFFFFFF8;
  v27 = v8;
  while (1)
  {
    if (v29)
    {
      v10 = (id)MEMORY[0x23B85198C](v9, v28);
      v11 = __OFADD__(v9, 1);
      v12 = v9 + 1;
      if (v11)
        goto LABEL_26;
      goto LABEL_11;
    }
    if (v9 >= *(_QWORD *)(v26 + 16))
      break;
    v10 = *(id *)(v25 + 8 * v9);
    v11 = __OFADD__(v9, 1);
    v12 = v9 + 1;
    if (v11)
      goto LABEL_26;
LABEL_11:
    v31 = v10;
    v13 = objc_msgSend(v10, sel_accessories);
    sub_23A53AB74(0, &qword_2569939B0);
    v14 = sub_23A59EA34();

    v30 = v12;
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v15 = sub_23A59EED8();
      swift_bridgeObjectRelease();
      if (v15)
      {
LABEL_13:
        v16 = 4;
        while (1)
        {
          v17 = (v14 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x23B85198C](v16 - 4, v14)
              : *(id *)(v14 + 8 * v16);
          v18 = v17;
          v19 = v16 - 3;
          if (__OFADD__(v16 - 4, 1))
            break;
          v20 = objc_msgSend(v17, sel_uniqueIdentifier);
          sub_23A59E23C();

          v21 = sub_23A59E20C();
          v7 = v22;
          (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v33);
          v38 = v21;
          v39 = v7;
          v36 = v34;
          v37 = v35;
          sub_23A56DBE0();
          v23 = sub_23A59ED34();
          swift_bridgeObjectRelease();
          if (!v23)
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease_n();
            return;
          }

          ++v16;
          if (v19 == v15)
            goto LABEL_4;
        }
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v15)
        goto LABEL_13;
    }
LABEL_4:

    swift_bridgeObjectRelease_n();
    v9 = v30;
    if (v30 == v27)
      goto LABEL_28;
  }
  __break(1u);
}

uint64_t sub_23A55CB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23A59EAB8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23A59EAAC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23A53B9B4(a1, (uint64_t *)&unk_256993920);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23A59EA7C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_23A55CC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[35] = a4;
  v5[36] = v4;
  v5[33] = a2;
  v5[34] = a3;
  v5[32] = a1;
  swift_getObjectType();
  v5[37] = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  v5[43] = sub_23A59EA7C();
  v5[44] = v6;
  return swift_task_switch();
}

uint64_t sub_23A55CD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  unint64_t v5;
  void *v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  id v45;
  void (*v46)(_QWORD, unint64_t, id);
  void *v47;
  uint64_t v48;
  uint64_t v49;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256994350);
  sub_23A59E284();
  v1 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 360) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 168);
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_23A56E5CC;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  *(_QWORD *)(v0 + 368) = v4;
  *(_QWORD *)(v0 + 376) = v3;
  v5 = *(_QWORD *)(v0 + 264);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994358);
  sub_23A59E284();
  v6 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 384) = v6;
  if (v5 >> 60 == 15)
  {
    sub_23A59E614();
    v7 = (void *)sub_23A59E620();
    swift_willThrow();
LABEL_9:
    if (qword_2569973B0 != -1)
      swift_once();
    v10 = sub_23A59E6A4();
    __swift_project_value_buffer(v10, (uint64_t)qword_2569973B8);
    v11 = v7;
    v12 = v7;
    v13 = sub_23A59E68C();
    v14 = sub_23A59EBB4();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v49 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_getErrorValue();
      v17 = sub_23A59F0C4();
      *(_QWORD *)(v0 + 200) = sub_23A538FBC(v17, v18, &v49);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A52C000, v13, v14, "### HMMM receive request failed: error=%s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v16, -1, -1);
      MEMORY[0x23B852178](v15, -1, -1);
    }
    else
    {

    }
    v19 = *(_QWORD *)(v0 + 360);
    v20 = (void *)sub_23A59E0EC();
    if (v19)
    {
      v46 = *(void (**)(_QWORD, unint64_t, id))(v0 + 368);
      v47 = *(void **)(v0 + 384);
      swift_retain();
      v21 = objc_msgSend(v20, sel_domain);
      sub_23A59E9A4();

      v45 = objc_msgSend(v20, sel_code);
      v22 = objc_msgSend(v20, sel_userInfo);
      sub_23A59E950();

      v23 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      v24 = (void *)sub_23A59E998();
      swift_bridgeObjectRelease();
      v25 = (void *)sub_23A59E944();
      swift_bridgeObjectRelease();
      v26 = objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, v45, v25);

      v46(0, 0xF000000000000000, v26);
      sub_23A541710((uint64_t)v46);

      sub_23A541710((uint64_t)v46);
      v20 = v26;
    }
    else
    {

    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (!v1)
  {
    v9 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 264);
    sub_23A59E614();
    sub_23A53AB30(v9, v8);
    v7 = (void *)sub_23A59E620();
    swift_willThrow();
    sub_23A53AA94(v9, v8);
    goto LABEL_9;
  }
  sub_23A53ABAC(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
  sub_23A5416A4((uint64_t)v4);
  sub_23A56E58C(qword_2569979F0, (uint64_t)&unk_23A5A0E58);
  sub_23A59DFCC();
  sub_23A53BA34(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 336), type metadata accessor for DTTransportDaemon.DTTransportRequest);
  if (qword_2569973B0 != -1)
    swift_once();
  v28 = *(_QWORD *)(v0 + 336);
  v29 = *(_QWORD *)(v0 + 320);
  v30 = sub_23A59E6A4();
  *(_QWORD *)(v0 + 392) = __swift_project_value_buffer(v30, (uint64_t)qword_2569973B8);
  sub_23A53ABC0(v28, v29, type metadata accessor for DTTransportDaemon.DTTransportRequest);
  v31 = v6;
  v32 = sub_23A59E68C();
  v33 = sub_23A59EBC0();
  v34 = os_log_type_enabled(v32, v33);
  v35 = *(_QWORD *)(v0 + 320);
  if (v34)
  {
    v36 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    v49 = v48;
    *(_DWORD *)v36 = 136315394;
    v37 = sub_23A5619A8();
    *(_QWORD *)(v0 + 240) = sub_23A538FBC(v37, v38, &v49);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04(v35, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    *(_WORD *)(v36 + 12) = 2080;
    v39 = objc_msgSend(v31, sel_peerDestination);
    v40 = objc_msgSend(v39, sel_idsIdentifier);

    v41 = sub_23A59E9A4();
    v43 = v42;

    *(_QWORD *)(v0 + 248) = sub_23A538FBC(v41, v43, &v49);
    sub_23A59ED1C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v32, v33, "HMMM receive request: %s, from=%s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v48, -1, -1);
    MEMORY[0x23B852178](v36, -1, -1);

  }
  else
  {
    sub_23A53AC04(*(_QWORD *)(v0 + 320), type metadata accessor for DTTransportDaemon.DTTransportRequest);

  }
  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v44;
  *v44 = v0;
  v44[1] = sub_23A55D5C0;
  return sub_23A54DCE0(v0 + 16, *(_QWORD *)(v0 + 336), (uint64_t)v31);
}

uint64_t sub_23A55D5C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A55D620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  void (*v41)(uint64_t, unint64_t, _QWORD);
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  void *v53;
  void (*v54)(_QWORD, unint64_t, _QWORD);
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v59;
  void (*v60)(_QWORD, unint64_t, id);
  uint64_t v61;
  void *v62;
  uint64_t v63[2];

  v1 = v0 + 16;
  sub_23A549090(v0 + 16, v0 + 56, &qword_256994398);
  v2 = *(_QWORD *)(v0 + 336);
  if (*(_QWORD *)(v0 + 80))
  {
    v3 = (_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 312);
    sub_23A5490D4((__int128 *)(v0 + 56), v0 + 96);
    sub_23A53ABC0(v2, v4, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    v5 = sub_23A59E68C();
    v6 = sub_23A59EBC0();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(_QWORD *)(v0 + 312);
    if (v7)
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v63[0] = swift_slowAlloc();
      v10 = v63[0];
      *(_DWORD *)v9 = 136315138;
      sub_23A59E260();
      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v11 = sub_23A59F034();
      *(_QWORD *)(v0 + 232) = sub_23A538FBC(v11, v12, v63);
      v3 = (_QWORD *)(v0 + 96);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04(v8, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      _os_log_impl(&dword_23A52C000, v5, v6, "HMMM send response: xid=%s", v9, 0xCu);
      swift_arrayDestroy();
      v13 = v10;
      v1 = v0 + 16;
      MEMORY[0x23B852178](v13, -1, -1);
      MEMORY[0x23B852178](v9, -1, -1);
    }
    else
    {
      sub_23A53AC04(*(_QWORD *)(v0 + 312), type metadata accessor for DTTransportDaemon.DTTransportRequest);
    }

    v23 = *(void **)(v0 + 408);
    __swift_project_boxed_opaque_existential_1(v3, *(_QWORD *)(v0 + 120));
    v24 = sub_23A59DFF0();
    if (v23)
    {
      v26 = *(_QWORD *)(v0 + 336);
      v28 = *(_QWORD *)(v0 + 256);
      v27 = *(_QWORD *)(v0 + 264);
      sub_23A541710(*(_QWORD *)(v0 + 368));
      sub_23A53AA94(v28, v27);
      sub_23A53B9B4(v1, &qword_256994398);
      sub_23A53AC04(v26, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
      if (qword_2569973B0 != -1)
        swift_once();
      v29 = sub_23A59E6A4();
      __swift_project_value_buffer(v29, (uint64_t)qword_2569973B8);
      v30 = v23;
      v31 = v23;
      v32 = sub_23A59E68C();
      v33 = sub_23A59EBB4();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v63[0] = v35;
        *(_DWORD *)v34 = 136315138;
        swift_getErrorValue();
        v36 = sub_23A59F0C4();
        *(_QWORD *)(v0 + 200) = sub_23A538FBC(v36, v37, v63);
        sub_23A59ED1C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23A52C000, v32, v33, "### HMMM receive request failed: error=%s", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B852178](v35, -1, -1);
        MEMORY[0x23B852178](v34, -1, -1);
      }
      else
      {

      }
      v45 = *(_QWORD *)(v0 + 360);
      v46 = (void *)sub_23A59E0EC();
      if (v45)
      {
        v60 = *(void (**)(_QWORD, unint64_t, id))(v0 + 368);
        v62 = *(void **)(v0 + 384);
        swift_retain();
        v47 = objc_msgSend(v46, sel_domain);
        sub_23A59E9A4();

        v59 = objc_msgSend(v46, sel_code);
        v48 = objc_msgSend(v46, sel_userInfo);
        sub_23A59E950();

        v49 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v50 = (void *)sub_23A59E998();
        swift_bridgeObjectRelease();
        v51 = (void *)sub_23A59E944();
        swift_bridgeObjectRelease();
        v52 = objc_msgSend(v49, sel_initWithDomain_code_userInfo_, v50, v59, v51);

        v60(0, 0xF000000000000000, v52);
        sub_23A541710((uint64_t)v60);

        sub_23A541710((uint64_t)v60);
      }
      else
      {

      }
    }
    else
    {
      v38 = v24;
      v39 = v25;
      v40 = *(void **)(v0 + 384);
      v41 = *(void (**)(uint64_t, unint64_t, _QWORD))(v0 + 368);
      v61 = *(_QWORD *)(v0 + 336);
      v42 = v1;
      v44 = *(_QWORD *)(v0 + 256);
      v43 = *(_QWORD *)(v0 + 264);
      sub_23A53AB30(v24, v25);
      v41(v38, v39, 0);
      sub_23A541710((uint64_t)v41);
      sub_23A53AAA8(v38, v39);
      sub_23A53AA94(v44, v43);
      sub_23A53AAA8(v38, v39);

      sub_23A541710((uint64_t)v41);
      sub_23A53B9B4(v42, &qword_256994398);
      sub_23A53AC04(v61, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
    }
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 304);
    sub_23A53B9B4(v0 + 56, &qword_256994398);
    sub_23A53ABC0(v2, v14, type metadata accessor for DTTransportDaemon.DTTransportRequest);
    v15 = sub_23A59E68C();
    v16 = sub_23A59EBC0();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 304);
    if (v17)
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v63[0] = v20;
      *(_DWORD *)v19 = 136315138;
      sub_23A59E260();
      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v21 = sub_23A59F034();
      *(_QWORD *)(v0 + 224) = sub_23A538FBC(v21, v22, v63);
      v1 = v0 + 16;
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04(v18, type metadata accessor for DTTransportDaemon.DTTransportRequest);
      _os_log_impl(&dword_23A52C000, v15, v16, "HMMM send response: nil, xid=%s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v20, -1, -1);
      MEMORY[0x23B852178](v19, -1, -1);
    }
    else
    {
      sub_23A53AC04(*(_QWORD *)(v0 + 304), type metadata accessor for DTTransportDaemon.DTTransportRequest);
    }

    v53 = *(void **)(v0 + 384);
    v54 = *(void (**)(_QWORD, unint64_t, _QWORD))(v0 + 368);
    v55 = *(_QWORD *)(v0 + 336);
    v57 = *(_QWORD *)(v0 + 256);
    v56 = *(_QWORD *)(v0 + 264);
    v54(0, 0xF000000000000000, 0);
    sub_23A541710((uint64_t)v54);
    sub_23A53AA94(v57, v56);

    sub_23A541710((uint64_t)v54);
    sub_23A53B9B4(v1, &qword_256994398);
    sub_23A53AC04(v55, type metadata accessor for DTTransportDaemon.DTTransportRequest);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A55DE44()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v23;
  void (*v24)(_QWORD, unint64_t, id);
  void *v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  sub_23A541710(*(_QWORD *)(v0 + 368));
  sub_23A53AA94(v3, v2);
  sub_23A53AC04(v1, type metadata accessor for DTTransportDaemon.DTTransportRequest);
  v4 = *(void **)(v0 + 408);
  if (qword_2569973B0 != -1)
    swift_once();
  v5 = sub_23A59E6A4();
  __swift_project_value_buffer(v5, (uint64_t)qword_2569973B8);
  v6 = v4;
  v7 = v4;
  v8 = sub_23A59E68C();
  v9 = sub_23A59EBB4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v26 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_getErrorValue();
    v12 = sub_23A59F0C4();
    *(_QWORD *)(v0 + 200) = sub_23A538FBC(v12, v13, &v26);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A52C000, v8, v9, "### HMMM receive request failed: error=%s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v11, -1, -1);
    MEMORY[0x23B852178](v10, -1, -1);
  }
  else
  {

  }
  v14 = *(_QWORD *)(v0 + 360);
  v15 = (void *)sub_23A59E0EC();
  if (v14)
  {
    v24 = *(void (**)(_QWORD, unint64_t, id))(v0 + 368);
    v25 = *(void **)(v0 + 384);
    swift_retain();
    v16 = objc_msgSend(v15, sel_domain);
    sub_23A59E9A4();

    v23 = objc_msgSend(v15, sel_code);
    v17 = objc_msgSend(v15, sel_userInfo);
    sub_23A59E950();

    v18 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v19 = (void *)sub_23A59E998();
    swift_bridgeObjectRelease();
    v20 = (void *)sub_23A59E944();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v18, sel_initWithDomain_code_userInfo_, v19, v23, v20);

    v24(0, 0xF000000000000000, v21);
    sub_23A541710((uint64_t)v24);

    sub_23A541710((uint64_t)v24);
    v15 = v21;
  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A55E1F4(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, id, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, id, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_23A59E188();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a3;
  v12 = a4;
  v7(v6, v10, v11, a4);

  sub_23A53AA94((uint64_t)v6, v10);
  return swift_release();
}

void sub_23A55E2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  uint64_t v27;
  uint64_t inited;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  os_unfair_lock_s *v42;
  os_unfair_lock_s *v43;
  uint64_t v44;

  v1 = v0;
  v2 = sub_23A59E260();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v44 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v44 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v44 - v16;
  v18 = *(void **)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager);
  if (v18 && (v19 = objc_msgSend(v18, sel_currentAccessory)) != 0)
  {
    v20 = v19;
    sub_23A55A350();
    if (v21)
    {
      v22 = v21;
      v23 = objc_msgSend(v21, sel_uniqueIdentifier);

      sub_23A59E23C();
      v24 = 0;
    }
    else
    {
      v24 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v17, v24, 1, v2);
    v27 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__stereoAccessoryID;
    swift_beginAccess();
    sub_23A56E670((uint64_t)v17, v27);
    swift_endAccess();
    sub_23A549090(v27, (uint64_t)v15, &qword_256993720);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v15, 1, v2) == 1)
    {
      sub_23A53B9B4((uint64_t)v15, &qword_256993720);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569942B0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23A5A0B80;
      v29 = objc_msgSend(v20, sel_uniqueIdentifier);
      sub_23A59E23C();

      v30 = sub_23A59E20C();
      v32 = v31;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      *(_QWORD *)(inited + 32) = v30;
      *(_QWORD *)(inited + 40) = v32;
      if (*(_QWORD *)(inited + 16))
        v33 = sub_23A56833C(inited);
      else
        v33 = MEMORY[0x24BEE4B08];
      swift_setDeallocating();
      swift_arrayDestroy();
      if (qword_2569973D0 != -1)
        swift_once();
      v42 = (os_unfair_lock_s *)(qword_2569973D8 + 16);
      os_unfair_lock_lock((os_unfair_lock_t)(qword_2569973D8 + 16));
      sub_23A549340(v33);
      os_unfair_lock_unlock(v42);
      swift_bridgeObjectRelease();

    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v15, v2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569942B0);
      v34 = swift_initStackObject();
      *(_OWORD *)(v34 + 16) = xmmword_23A5A0BA0;
      v35 = objc_msgSend(v20, sel_uniqueIdentifier);
      sub_23A59E23C();

      v36 = sub_23A59E20C();
      v38 = v37;
      v39 = *(void (**)(char *, uint64_t))(v3 + 8);
      v39(v6, v2);
      *(_QWORD *)(v34 + 32) = v36;
      *(_QWORD *)(v34 + 40) = v38;
      *(_QWORD *)(v34 + 48) = sub_23A59E20C();
      *(_QWORD *)(v34 + 56) = v40;
      if (*(_QWORD *)(v34 + 16))
        v41 = sub_23A56833C(v34);
      else
        v41 = MEMORY[0x24BEE4B08];
      swift_setDeallocating();
      swift_arrayDestroy();
      if (qword_2569973D0 != -1)
        swift_once();
      v43 = (os_unfair_lock_s *)(qword_2569973D8 + 16);
      os_unfair_lock_lock((os_unfair_lock_t)(qword_2569973D8 + 16));
      sub_23A549340(v41);
      os_unfair_lock_unlock(v43);
      swift_bridgeObjectRelease();

      v39(v8, v2);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
    v25 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__stereoAccessoryID;
    swift_beginAccess();
    sub_23A56E670((uint64_t)v12, v25);
    swift_endAccess();
    if (qword_2569973D0 != -1)
      swift_once();
    v26 = (os_unfair_lock_s *)(qword_2569973D8 + 16);
    os_unfair_lock_lock((os_unfair_lock_t)(qword_2569973D8 + 16));
    sub_23A549340(MEMORY[0x24BEE4B08]);
    os_unfair_lock_unlock(v26);
  }
}

uint64_t sub_23A55E7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t result;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __int128 v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  int64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  NSObject *v58;
  os_log_type_t v59;
  _BOOL4 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  int64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  uint64_t (*v88)(char *, uint64_t);
  uint64_t v89;
  unint64_t v90;
  uint64_t aBlock;
  uint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;

  v1 = sub_23A59E260();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v80 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v67 - v6;
  v81 = v8;
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v67 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994318);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v67 - v15;
  v17 = (uint64_t *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeMap);
  swift_beginAccess();
  v18 = *v17;
  v19 = *(_QWORD *)(*v17 + 64);
  v71 = *v17 + 64;
  v20 = 1 << *(_BYTE *)(v18 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v82 = v0;
  v23 = (uint64_t *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeTransportRegisteredMap);
  v24 = (unint64_t)(v20 + 63) >> 6;
  v68 = v24 - 1;
  result = swift_bridgeObjectRetain();
  v26 = 0;
  v74 = v24;
  v27 = v24 - 5;
  v28 = v22;
  v69 = v27;
  v83 = result;
  v70 = result + 104;
  *(_QWORD *)&v29 = 136315138;
  v73 = v29;
  v72 = MEMORY[0x24BEE4AD8] + 8;
  v76 = 0x800000023A5A2550;
  v79 = v7;
  v87 = v10;
  v78 = v14;
  v77 = v16;
  v75 = v2;
  while (1)
  {
    if (v28)
    {
      v89 = (v28 - 1) & v28;
      v90 = v26;
      v43 = __clz(__rbit64(v28)) | (v26 << 6);
      goto LABEL_9;
    }
    v49 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v49 >= v74)
    {
      v51 = v26;
    }
    else
    {
      v50 = *(_QWORD *)(v71 + 8 * v49);
      if (v50)
        goto LABEL_13;
      v51 = v26 + 1;
      if ((uint64_t)(v26 + 2) < v74)
      {
        v50 = *(_QWORD *)(v71 + 8 * (v26 + 2));
        if (v50)
        {
          v49 = v26 + 2;
          goto LABEL_13;
        }
        v51 = v26 + 2;
        if ((uint64_t)(v26 + 3) < v74)
        {
          v50 = *(_QWORD *)(v71 + 8 * (v26 + 3));
          if (v50)
          {
            v49 = v26 + 3;
LABEL_13:
            v89 = (v50 - 1) & v50;
            v90 = v49;
            v43 = __clz(__rbit64(v50)) + (v49 << 6);
LABEL_9:
            v44 = v83;
            (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v14, *(_QWORD *)(v83 + 48) + *(_QWORD *)(v2 + 72) * v43, v1);
            v45 = *(_QWORD *)(v44 + 56);
            v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994320);
            v47 = *(void **)(v45 + 8 * v43);
            *(_QWORD *)&v14[*(int *)(v46 + 48)] = v47;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v14, 0, 1, v46);
            v48 = v47;
            goto LABEL_16;
          }
          v49 = v26 + 4;
          v51 = v26 + 3;
          if ((uint64_t)(v26 + 4) < v74)
          {
            v50 = *(_QWORD *)(v71 + 8 * v49);
            if (v50)
              goto LABEL_13;
            while (v69 != v26)
            {
              v50 = *(_QWORD *)(v70 + 8 * v26++);
              if (v50)
              {
                v49 = v26 + 4;
                goto LABEL_13;
              }
            }
            v51 = v68;
          }
        }
      }
    }
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994320);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v14, 1, 1, v52);
    v89 = 0;
    v90 = v51;
LABEL_16:
    sub_23A53AAEC((uint64_t)v14, (uint64_t)v16, &qword_256994318);
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994320);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v16, 1, v53) == 1)
      return swift_release();
    v54 = *(void **)&v16[*(int *)(v53 + 48)];
    v86 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
    v86(v10, v16, v1);
    swift_beginAccess();
    if (*(_QWORD *)(*v23 + 16) && (sub_23A563E64((uint64_t)v10), (v55 & 1) != 0))
    {
      swift_endAccess();

      v88 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
    }
    else
    {
      swift_endAccess();
      if (qword_2569973B0 != -1)
        swift_once();
      v56 = sub_23A59E6A4();
      __swift_project_value_buffer(v56, (uint64_t)qword_2569973B8);
      v57 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
      v57(v7, v10, v1);
      v58 = sub_23A59E68C();
      v59 = sub_23A59EBC0();
      v60 = os_log_type_enabled(v58, v59);
      v85 = v54;
      if (v60)
      {
        v61 = v2;
        v62 = swift_slowAlloc();
        v63 = swift_slowAlloc();
        aBlock = v63;
        *(_DWORD *)v62 = v73;
        sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v64 = sub_23A59F034();
        *(_QWORD *)(v62 + 4) = sub_23A538FBC(v64, v65, &aBlock);
        swift_bridgeObjectRelease();
        v30 = *(void (**)(char *, uint64_t))(v61 + 8);
        v30(v7, v1);
        _os_log_impl(&dword_23A52C000, v58, v59, "HMMM register start: home=%s", (uint8_t *)v62, 0xCu);
        swift_arrayDestroy();
        v66 = v63;
        v10 = v87;
        MEMORY[0x23B852178](v66, -1, -1);
        MEMORY[0x23B852178](v62, -1, -1);
      }
      else
      {
        v30 = *(void (**)(char *, uint64_t))(v2 + 8);
        v30(v7, v1);
      }

      v31 = (uint64_t)v80;
      v57(v80, v10, v1);
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v97 = *v23;
      *v23 = 0x8000000000000000;
      sub_23A565500(0, v31, isUniquelyReferenced_nonNull_native);
      *v23 = v97;
      swift_bridgeObjectRelease();
      v88 = (uint64_t (*)(char *, uint64_t))v30;
      v30((char *)v31, v1);
      swift_endAccess();
      v84 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD7768]), sel_initWithUserRestriction_, 2);
      v33 = (void *)sub_23A59E998();
      v34 = swift_allocObject();
      swift_weakInit();
      v95 = sub_23A56E074;
      v96 = v34;
      v35 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v92 = 1107296256;
      v93 = sub_23A55F4F4;
      v94 = &block_descriptor_178;
      v36 = _Block_copy(&aBlock);
      swift_release();
      v37 = swift_allocObject();
      swift_weakInit();
      v57((char *)v31, v87, v1);
      v2 = v75;
      v38 = (*(unsigned __int8 *)(v75 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
      v39 = swift_allocObject();
      *(_QWORD *)(v39 + 16) = v37;
      v86((char *)(v39 + v38), (char *)v31, v1);
      v95 = sub_23A56E0F0;
      v96 = v39;
      v10 = v87;
      aBlock = v35;
      v92 = 1107296256;
      v93 = sub_23A560258;
      v94 = &block_descriptor_185;
      v40 = _Block_copy(&aBlock);
      swift_release();
      v42 = v84;
      v41 = v85;
      objc_msgSend(v85, sel_registerModernMessagingRequestHandlerWithMessageName_options_requestHandler_completionHandler_, v33, v84, v36, v40);
      _Block_release(v40);
      _Block_release(v36);

      v7 = v79;
      v14 = v78;
      v16 = v77;
    }
    v28 = v89;
    result = v88(v10, v1);
    v26 = v90;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A55F020(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD *, _QWORD *);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void *v67;
  uint64_t v68;

  v54 = a5;
  v55 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v56 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v60 = (uint64_t)&v49 - v11;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994350);
  v12 = *(_QWORD *)(v59 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x24BDAC7A8](v59);
  v58 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v49 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994358);
  v61 = *(_QWORD *)(v17 - 8);
  v62 = v17;
  v18 = *(_QWORD *)(v61 + 64);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v49 - v21;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v24 = result;
    v53 = a2;
    v67 = a3;
    sub_23A53AB74(0, &qword_256994360);
    v25 = a3;
    sub_23A59E290();
    v57 = v22;
    if (a4)
    {
      v26 = swift_allocObject();
      v27 = v54;
      *(_QWORD *)(v26 + 16) = a4;
      *(_QWORD *)(v26 + 24) = v27;
      v28 = sub_23A56E55C;
    }
    else
    {
      v28 = 0;
      v26 = 0;
    }
    v67 = v28;
    v68 = v26;
    sub_23A5416A4(a4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994368);
    sub_23A59E290();
    v49 = sub_23A59E560();
    v29 = sub_23A59EAB8();
    v52 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v60, 1, 1, v29);
    v30 = v61;
    v31 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v32 = v24;
    v51 = v24;
    v33 = v62;
    v31(v20, v57, v62);
    v34 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v50 = v16;
    v34(v58, v16, v59);
    v35 = (*(unsigned __int8 *)(v30 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v36 = v12;
    v37 = (v18 + *(unsigned __int8 *)(v12 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v38 = (char *)swift_allocObject();
    *((_QWORD *)v38 + 2) = v32;
    v39 = v55;
    v40 = v53;
    *((_QWORD *)v38 + 3) = v55;
    *((_QWORD *)v38 + 4) = v40;
    v41 = v20;
    v42 = v52;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v38[v35], v41, v33);
    v43 = v59;
    v54 = v36;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v38[v37], v58, v59);
    v44 = v56;
    sub_23A53AAEC(v60, v56, (uint64_t *)&unk_256993920);
    LODWORD(v30) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v44, 1, v29);
    swift_retain();
    sub_23A53ABAC(v39, v40);
    if ((_DWORD)v30 == 1)
    {
      sub_23A53B9B4(v44, (uint64_t *)&unk_256993920);
    }
    else
    {
      sub_23A59EAAC();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v29);
    }
    v45 = v50;
    v46 = v49;
    v47 = sub_23A56B150();
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = &unk_256994378;
    *(_QWORD *)(v48 + 24) = v38;
    v63 = 6;
    v64 = 0;
    v65 = v46;
    v66 = v47;
    swift_task_create();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v45, v43);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v57, v62);
  }
  return result;
}

uint64_t sub_23A55F478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_23A541460;
  return sub_23A55CC64(a3, a4, a5, a6);
}

uint64_t sub_23A55F4F4(uint64_t a1, void *a2, void *a3, const void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, id, void *, uint64_t);
  id v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, id, void *, uint64_t))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_23A59E188();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = _Block_copy(a4);
  if (v11)
  {
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v11;
    v11 = sub_23A56E3A0;
  }
  else
  {
    v12 = 0;
  }
  v13 = a3;
  v7(v6, v10, v13, v11, v12);

  sub_23A541710((uint64_t)v11);
  sub_23A53AA94((uint64_t)v6, v10);
  return swift_release();
}

void sub_23A55F5E4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  id v8;

  if (a2 >> 60 != 15)
  {
    v6 = (void *)sub_23A59E17C();
    if (a3)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = 0;
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v7 = sub_23A59E0EC();
LABEL_6:
  v8 = (id)v7;
  (*(void (**)(uint64_t, void *))(a4 + 16))(a4, v6);

}

uint64_t sub_23A55F664(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v5 = sub_23A59E260();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v26 = (uint64_t)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - v11;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v24 = a1;
    v14 = result;
    v25 = sub_23A59E560();
    v15 = sub_23A59EAB8();
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
    v17 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v14;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18 + v17, (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
    v19 = v24;
    *(_QWORD *)(v18 + ((v7 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v20 = v26;
    sub_23A53AAEC((uint64_t)v12, v26, (uint64_t *)&unk_256993920);
    LODWORD(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v20, 1, v15);
    swift_retain();
    v21 = v19;
    if ((_DWORD)v17 == 1)
    {
      sub_23A53B9B4(v20, (uint64_t *)&unk_256993920);
    }
    else
    {
      sub_23A59EAAC();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v15);
    }
    v22 = sub_23A56B150();
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = &unk_256994338;
    *(_QWORD *)(v23 + 24) = v18;
    v27 = 6;
    v28 = 0;
    v29 = v25;
    v30 = v22;
    swift_task_create();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23A55F904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  type metadata accessor for DTTransportDaemon(0);
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A55F980()
{
  uint64_t v0;

  sub_23A55F9B4(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A55F9B4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  uint8_t *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void *v63;
  uint64_t *v65;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v67;
  os_log_t v68;
  int v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint8_t *v82;
  char *v83;
  uint64_t v84;
  uint64_t aBlock[6];
  uint64_t v86;

  v3 = v2;
  v6 = sub_23A59E8D8();
  v84 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v83 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A59E8F0();
  v81 = *(_QWORD *)(v8 - 8);
  v82 = (uint8_t *)v8;
  MEMORY[0x24BDAC7A8](v8);
  v80 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A59E8CC();
  v76 = *(_QWORD *)(v10 - 8);
  v77 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v79 = sub_23A59E908();
  v75 = *(_QWORD *)(v79 - 8);
  v13 = MEMORY[0x24BDAC7A8](v79);
  v74 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v78 = (char *)&v67 - v15;
  v16 = sub_23A59E260();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v67 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v67 - v24;
  if (a2)
  {
    v72 = v6;
    v26 = a2;
    if (qword_2569973B0 != -1)
      swift_once();
    v27 = sub_23A59E6A4();
    __swift_project_value_buffer(v27, (uint64_t)qword_2569973B8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v25, a1, v16);
    v28 = a2;
    v29 = a2;
    v30 = sub_23A59E68C();
    v31 = sub_23A59EBB4();
    v32 = v31;
    v33 = os_log_type_enabled(v30, v31);
    v71 = a2;
    if (v33)
    {
      v34 = swift_slowAlloc();
      v70 = swift_slowAlloc();
      aBlock[0] = v70;
      *(_DWORD *)v34 = 136315394;
      v69 = v32;
      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v68 = v30;
      v35 = sub_23A59F034();
      v86 = sub_23A538FBC(v35, v36, aBlock);
      v73 = a1;
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v16);
      *(_WORD *)(v34 + 12) = 2080;
      swift_getErrorValue();
      v37 = sub_23A59F0C4();
      v86 = sub_23A538FBC(v37, v38, aBlock);
      a1 = v73;
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      v30 = v68;
      _os_log_impl(&dword_23A52C000, v68, (os_log_type_t)v69, "### HMMM register failed: home=%s error=%s", (uint8_t *)v34, 0x16u);
      v39 = v70;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v39, -1, -1);
      MEMORY[0x23B852178](v34, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v16);

    }
    swift_beginAccess();
    sub_23A563CC0(a1);
    swift_endAccess();
    v73 = sub_23A59E560();
    v51 = v74;
    sub_23A59E8FC();
    *v12 = 10;
    v53 = v76;
    v52 = v77;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v76 + 104))(v12, *MEMORY[0x24BEE5420], v77);
    v54 = v78;
    MEMORY[0x23B851494](v51, v12);
    (*(void (**)(_QWORD *, uint64_t))(v53 + 8))(v12, v52);
    v55 = *(void (**)(char *, uint64_t))(v75 + 8);
    v56 = v51;
    v57 = v79;
    v55(v56, v79);
    v58 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = (uint64_t)sub_23A56E24C;
    aBlock[5] = v58;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23A55ABC0;
    aBlock[3] = (uint64_t)&block_descriptor_198;
    v59 = _Block_copy(aBlock);
    swift_retain();
    v60 = v80;
    sub_23A59E8E4();
    v86 = MEMORY[0x24BEE4AF8];
    sub_23A52EAEC(&qword_256994288, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994290);
    sub_23A56D9E4(&qword_256994298, &qword_256994290, MEMORY[0x24BEE12C8]);
    v61 = v83;
    v62 = v72;
    sub_23A59ED4C();
    v63 = (void *)v73;
    MEMORY[0x23B851764](v54, v60, v61, v59);
    _Block_release(v59);

    (*(void (**)(char *, uint64_t))(v84 + 8))(v61, v62);
    (*(void (**)(char *, uint8_t *))(v81 + 8))(v60, v82);
    v55(v54, v57);
    swift_release();
    return swift_release();
  }
  else
  {
    if (qword_2569973B0 != -1)
      swift_once();
    v84 = v3;
    v40 = sub_23A59E6A4();
    __swift_project_value_buffer(v40, (uint64_t)qword_2569973B8);
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v73 = a1;
    v41(v23, a1, v16);
    v42 = sub_23A59E68C();
    v43 = sub_23A59EBC0();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v83 = (char *)v41;
      v45 = (uint8_t *)v44;
      v46 = swift_slowAlloc();
      aBlock[0] = v46;
      *(_DWORD *)v45 = 136315138;
      v82 = v45 + 4;
      sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v47 = sub_23A59F034();
      v86 = sub_23A538FBC(v47, v48, aBlock);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      v49 = *(void (**)(char *, uint64_t))(v17 + 8);
      v49(v23, v16);
      _os_log_impl(&dword_23A52C000, v42, v43, "HMMM registered: home=%s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v46, -1, -1);
      v50 = v45;
      v41 = (void (*)(char *, uint64_t, uint64_t))v83;
      MEMORY[0x23B852178](v50, -1, -1);
    }
    else
    {
      v49 = *(void (**)(char *, uint64_t))(v17 + 8);
      v49(v23, v16);
    }

    v41(v20, v73, v16);
    v65 = (uint64_t *)(v84 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeTransportRegisteredMap);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v86 = *v65;
    *v65 = 0x8000000000000000;
    sub_23A565500(1, (uint64_t)v20, isUniquelyReferenced_nonNull_native);
    *v65 = v86;
    swift_bridgeObjectRelease();
    v49(v20, v16);
    return swift_endAccess();
  }
}

void sub_23A560258(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_23A5602AC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  if ((*(_BYTE *)(result + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__invalidateCalled) & 1) == 0)
  {
    v1 = result;
    v2 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager;
    if (!*(_QWORD *)(result + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager))
    {
      v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD76E0]), sel_initWithOptions_cachePolicy_, 35024, 2);
      v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD76D8]), sel_initWithConfiguration_, v3);
      v5 = *(void **)(v1 + v2);
      *(_QWORD *)(v1 + v2) = v4;
      v6 = v4;

      objc_msgSend(v6, sel_setDelegate_, v1);
    }
    sub_23A554C34();
    sub_23A551F5C();
    return sub_23A5559EC();
  }
  return result;
}

uint64_t sub_23A56037C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

Swift::Void __swiftcall DTTransportDaemon.homeManagerDidUpdateHomes(_:)(HMHomeManager a1)
{
  sub_23A560624(a1.super.isa, "HomeKit didUpdateHomes: %{public}s", (uint64_t)&unk_250B6C6B0, (uint64_t)&unk_256993A00);
}

uint64_t sub_23A5603CC()
{
  void *v0;
  _QWORD v2[2];

  sub_23A59EE00();
  swift_bridgeObjectRelease();
  strcpy((char *)v2, "dataSyncState=");
  objc_msgSend(v0, sel_dataSyncState);
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  sub_23A5625B8((uint64_t)objc_msgSend(v0, sel_status));
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  return v2[0];
}

uint64_t sub_23A56057C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  swift_getObjectType();
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

Swift::Void __swiftcall DTTransportDaemon.homeManagerDidUpdateDataSync(inProgress:)(HMHomeManager inProgress)
{
  sub_23A560624(inProgress.super.isa, "didUpdateDataSyncInProgress: %{public}s", (uint64_t)&unk_250B6C6D8, (uint64_t)&unk_256993A30);
}

uint64_t sub_23A560624(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[5];

  v8 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v38 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v37 = (char *)&v33 - v13;
  if (qword_2569973B0 != -1)
    swift_once();
  v14 = sub_23A59E6A4();
  __swift_project_value_buffer(v14, (uint64_t)qword_2569973B8);
  v15 = a1;
  v16 = sub_23A59E68C();
  v17 = sub_23A59EBC0();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v34 = a2;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v36 = a4;
    v21 = v20;
    v40[0] = v20;
    *(_DWORD *)v19 = 136446210;
    v35 = a3;
    v22 = sub_23A5603CC();
    v39 = sub_23A538FBC(v22, v23, v40);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A52C000, v16, v17, v34, v19, 0xCu);
    swift_arrayDestroy();
    v24 = v21;
    a4 = v36;
    MEMORY[0x23B852178](v24, -1, -1);
    MEMORY[0x23B852178](v19, -1, -1);
  }
  else
  {

  }
  v25 = sub_23A59E560();
  v26 = sub_23A59EAB8();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v37, 1, 1, v26);
  v29 = v38;
  sub_23A53AAEC(v28, v38, (uint64_t *)&unk_256993920);
  LODWORD(v28) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v29, 1, v26);
  swift_retain();
  if ((_DWORD)v28 == 1)
  {
    sub_23A53B9B4(v29, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v26);
  }
  v30 = sub_23A56B150();
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = a4;
  *(_QWORD *)(v31 + 24) = v8;
  v40[1] = 6;
  v40[2] = 0;
  v40[3] = v25;
  v40[4] = v30;
  swift_task_create();
  return swift_release();
}

void sub_23A560960(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  id v5;

  v5 = a3;
  swift_retain();
  a4(v5);
  swift_release();

}

uint64_t DTTransportDaemon.homeManager(_:didUpdate:)(void *a1)
{
  return sub_23A560624(a1, "didUpdateStatus: %{public}s", (uint64_t)&unk_250B6C868, (uint64_t)&unk_2569941E8);
}

Swift::Void __swiftcall DTTransportDaemon.homeManager(_:didAdd:)(HMHomeManager _, HMHome didAdd)
{
  sub_23A56B260(didAdd.super.isa, "HomeKit didAddHome: name%s, id=%s", (uint64_t)&unk_250B6C840, (uint64_t)&unk_2569941D0, (uint64_t)&unk_2569941D8);
}

Swift::Void __swiftcall DTTransportDaemon.homeManager(_:didRemove:)(HMHomeManager _, HMHome didRemove)
{
  sub_23A56B260(didRemove.super.isa, "HomeKit didRemoveHome: name%s, id=%s", (uint64_t)&unk_250B6C818, (uint64_t)&unk_2569941B8, (uint64_t)&unk_2569941C0);
}

void sub_23A560B00(uint64_t a1, uint64_t a2, void *a3, void *a4, const char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v13;
  id v14;

  v14 = a3;
  v13 = a4;
  swift_retain();
  sub_23A56B260(v13, a5, a6, a7, a8);
  swift_release();

}

Swift::Void __swiftcall DTTransportDaemon.homeManager(_:didUpdateHH2State:)(HMHomeManager _, Swift::Bool didUpdateHH2State)
{
  sub_23A56B6A4(didUpdateHH2State);
}

uint64_t sub_23A560B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  swift_getObjectType();
  sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A560C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)(v0 + 16);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__invalidateCalled) & 1) == 0)
  {
    v2 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager;
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager))
    {
      v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD76E0]), sel_initWithOptions_cachePolicy_, 35024, 2);
      v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD76D8]), sel_initWithConfiguration_, v3);
      v5 = *(void **)(v1 + v2);
      *(_QWORD *)(v1 + v2) = v4;
      v6 = v4;

      objc_msgSend(v6, sel_setDelegate_, v1);
    }
    sub_23A554C34();
    sub_23A551F5C();
    sub_23A5559EC();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTTransportDaemon.home(_:didAdd:)(void *a1, void *a2)
{
  return sub_23A560D88(a1, a2, "HomeKit didAddMediaSystem: name=%s, id=%s", (uint64_t)&unk_250B6C700, (uint64_t)&unk_256993A48, (uint64_t)&unk_256993A50);
}

uint64_t DTTransportDaemon.home(_:didRemove:)(void *a1, void *a2)
{
  return sub_23A560D88(a1, a2, "HomeKit didRemoveMediaSystem: name=%s, id=%s", (uint64_t)&unk_250B6C728, (uint64_t)&unk_256993A60, (uint64_t)&unk_256993A68);
}

uint64_t sub_23A560D88(void *a1, void *a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD v51[2];
  uint64_t v52;
  os_log_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63[5];

  v59 = a3;
  v60 = a4;
  v9 = v6;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v61 = (char *)v51 - v16;
  v58 = sub_23A59E260();
  v17 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v19 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569973B0 != -1)
    swift_once();
  v20 = sub_23A59E6A4();
  __swift_project_value_buffer(v20, (uint64_t)qword_2569973B8);
  v21 = a1;
  v22 = a2;
  v23 = v21;
  v24 = v22;
  v25 = sub_23A59E68C();
  v26 = sub_23A59EBC0();
  v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    v28 = swift_slowAlloc();
    v54 = v27;
    v29 = v28;
    v55 = swift_slowAlloc();
    v63[0] = v55;
    *(_DWORD *)v29 = 136315394;
    v51[1] = v29 + 4;
    v30 = objc_msgSend(v23, sel_name);
    v57 = a6;
    v31 = v30;
    v32 = sub_23A59E9A4();
    v52 = v17;
    v53 = v25;
    v33 = v9;
    v34 = v32;
    v56 = a5;
    v36 = v35;

    v37 = v34;
    v9 = v33;
    v62 = sub_23A538FBC(v37, v36, v63);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v29 + 12) = 2080;
    v38 = objc_msgSend(v24, sel_uniqueIdentifier);
    sub_23A59E23C();

    sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v39 = v58;
    v40 = sub_23A59F034();
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v19, v39);
    v62 = sub_23A538FBC(v40, v42, v63);
    sub_23A59ED1C();
    a5 = v56;
    swift_bridgeObjectRelease();

    v25 = v53;
    _os_log_impl(&dword_23A52C000, v53, (os_log_type_t)v54, v59, (uint8_t *)v29, 0x16u);
    v43 = v55;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v43, -1, -1);
    MEMORY[0x23B852178](v29, -1, -1);
  }
  else
  {

  }
  v44 = sub_23A59E560();
  v45 = sub_23A59EAB8();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v61, 1, 1, v45);
  sub_23A53AAEC(v47, (uint64_t)v15, (uint64_t *)&unk_256993920);
  LODWORD(v47) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48))(v15, 1, v45);
  swift_retain();
  if ((_DWORD)v47 == 1)
  {
    sub_23A53B9B4((uint64_t)v15, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v45);
  }
  v48 = sub_23A56B150();
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = a5;
  *(_QWORD *)(v49 + 24) = v9;
  v63[1] = 6;
  v63[2] = 0;
  v63[3] = v44;
  v63[4] = v48;
  swift_task_create();
  return swift_release();
}

void sub_23A5611F8(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(id, id))
{
  id v7;
  id v8;

  v8 = a3;
  v7 = a4;
  swift_retain();
  a5(v8, v7);
  swift_release();

}

uint64_t DTTransportDaemon.siriEndpointProfile(_:didUpdateSessionHubIdentifier:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  int v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[5];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v37 - v8;
  v10 = sub_23A59E260();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569973B0 != -1)
    swift_once();
  v14 = sub_23A59E6A4();
  __swift_project_value_buffer(v14, (uint64_t)qword_2569973B8);
  v15 = a1;
  v16 = sub_23A59E68C();
  v17 = sub_23A59EBC0();
  if (os_log_type_enabled(v16, (os_log_type_t)v17))
  {
    v38 = v17;
    v39 = v9;
    v40 = v2;
    v18 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v42[0] = v37;
    *(_DWORD *)v18 = 136315394;
    v19 = objc_msgSend(v15, sel_uniqueIdentifier);
    sub_23A59E23C();

    sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v20 = sub_23A59F034();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v41 = sub_23A538FBC(v20, v22, v42);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v18 + 12) = 2080;
    v23 = objc_msgSend(v15, sel_accessory);
    if (v23)
    {
      v24 = v23;
      v25 = objc_msgSend(v23, sel_name);

      v26 = sub_23A59E9A4();
      v28 = v27;

    }
    else
    {
      v28 = 0xE300000000000000;
      v26 = 7104878;
    }
    v41 = sub_23A538FBC(v26, v28, v42);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A52C000, v16, (os_log_type_t)v38, "HomeKit didUpdateSessionHubIdentifier: id=%s, name=%s", (uint8_t *)v18, 0x16u);
    v29 = v37;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v29, -1, -1);
    MEMORY[0x23B852178](v18, -1, -1);

    v9 = v39;
    v2 = v40;
  }
  else
  {

  }
  v30 = sub_23A59E560();
  v31 = sub_23A59EAB8();
  v32 = *(_QWORD *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v9, 1, 1, v31);
  sub_23A53AAEC((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_256993920);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v7, 1, v31);
  swift_retain();
  if (v33 == 1)
  {
    sub_23A53B9B4((uint64_t)v7, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v31);
  }
  v34 = sub_23A56B150();
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = &unk_256993A78;
  *(_QWORD *)(v35 + 24) = v2;
  v42[1] = 6;
  v42[2] = 0;
  v42[3] = v30;
  v42[4] = v34;
  swift_task_create();
  return swift_release();
}

uint64_t sub_23A561784()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23A5617B0()
{
  swift_release();
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_23A5617DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v14 - v5;
  v7 = objc_msgSend(*(id *)(v0 + 16), sel_device);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_idsIdentifier);

    if (v9)
    {
      sub_23A59E23C();

      v10 = sub_23A59E260();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 0, 1, v10);
    }
    else
    {
      v10 = sub_23A59E260();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
    }
    sub_23A53AAEC((uint64_t)v4, (uint64_t)v6, &qword_256993720);
    sub_23A59E260();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) != 1)
    {
      v12 = sub_23A59E20C();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
      return v12;
    }
    sub_23A53B9B4((uint64_t)v6, &qword_256993720);
  }
  return 0;
}

uint64_t sub_23A561974()
{
  uint64_t v0;

  swift_release();
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_23A5619A8()
{
  sub_23A59EE00();
  sub_23A59E9E0();
  sub_23A59E260();
  sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  sub_23A59E680();
  sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  sub_23A59F04C();
  sub_23A59E9E0();
  sub_23A59F04C();
  return 0;
}

BOOL sub_23A561B6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23A561B80()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A561BA8 + 4 * byte_23A5A0BC7[*v0]))(6580600, 0xE300000000000000);
}

uint64_t sub_23A561BA8()
{
  return 0x74736575716572;
}

uint64_t sub_23A561BC0()
{
  return 0x746567726174;
}

uint64_t sub_23A561BD4()
{
  return 0x7972616D697270;
}

uint64_t sub_23A561BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A56E8B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A561C10(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23A561C1C()
{
  sub_23A56D264();
  return sub_23A59F13C();
}

uint64_t sub_23A561C44()
{
  sub_23A56D264();
  return sub_23A59F148();
}

uint64_t sub_23A561C6C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994180);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A56D264();
  sub_23A59F118();
  v8[15] = 0;
  sub_23A59E260();
  sub_23A52EAEC((unint64_t *)&unk_256994188, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23A59F01C();
  if (!v1)
  {
    type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
    v8[14] = 1;
    sub_23A59E680();
    sub_23A52EAEC((unint64_t *)&unk_256993760, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D518]);
    sub_23A59F01C();
    v8[13] = 2;
    sub_23A59EFBC();
    v8[12] = 3;
    sub_23A59EFC8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23A561E50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v25 = a2;
  v28 = sub_23A59E680();
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v27 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23A59E260();
  v4 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v30 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994168);
  v6 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A56D264();
  v31 = v8;
  v12 = (uint64_t)v33;
  sub_23A59F10C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v13 = v6;
  v14 = (char *)v9;
  v33 = a1;
  v16 = v27;
  v15 = v28;
  v37 = 0;
  sub_23A52EAEC(&qword_256994170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v17 = v29;
  sub_23A59EF98();
  v24 = v4;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v30, v17);
  v36 = 1;
  sub_23A52EAEC(&qword_256994178, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D520]);
  sub_23A59EF98();
  v30 = v14;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v11[*((int *)v14 + 5)], v16, v15);
  v35 = 2;
  v18 = sub_23A59EF38();
  v19 = v30;
  v20 = (uint64_t *)&v11[*((int *)v30 + 6)];
  *v20 = v18;
  v20[1] = v21;
  v34 = 3;
  v22 = sub_23A59EF44();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v31, v32);
  v11[*((int *)v19 + 7)] = v22;
  sub_23A53ABC0((uint64_t)v11, v25, type metadata accessor for DTTransportDaemon.DTTransportRequest);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  return sub_23A53AC04((uint64_t)v11, type metadata accessor for DTTransportDaemon.DTTransportRequest);
}

uint64_t sub_23A562210@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23A561E50(a1, a2);
}

uint64_t sub_23A562224(_QWORD *a1)
{
  return sub_23A561C6C(a1);
}

void DTTransportDaemon.__allocating_init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void DTTransportDaemon.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t DTTransportDaemon.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_weakDestroy();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__environment;
  v2 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  sub_23A53B9B4(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__stereoAccessoryID, &qword_256993720);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23A53B9B4(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeKitPollDeadline, qword_256993A90);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DTTransportDaemon.__deallocating_deinit()
{
  DTTransportDaemon.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23A562448()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

uint64_t sub_23A562494()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5624D8;
  return DTTransportDaemon.summary.getter();
}

uint64_t sub_23A5624D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_23A562530()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A541460;
  return DTTransportDaemon.activate()();
}

uint64_t sub_23A562574()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A541460;
  return DTTransportDaemon.invalidate()();
}

uint64_t sub_23A5625B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;

  v2 = sub_23A59E2B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 1685024583;
  v9 = 0;
  v10 = 0xE000000000000000;
  sub_23A59E29C();
  if ((a1 & 1) == 0)
  {
    if ((a1 & 0x10) == 0)
      goto LABEL_4;
LABEL_14:
    sub_23A59E9BC();
    if ((a1 & 0x20) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
  sub_23A59E9BC();
  if ((a1 & 0x10) != 0)
    goto LABEL_14;
LABEL_4:
  if ((a1 & 0x20) != 0)
LABEL_5:
    sub_23A59E9BC();
LABEL_6:
  v6 = v9;
  v7 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v7 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    swift_bridgeObjectRelease();
    v6 = 0x6E776F6E6B6E55;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

void *sub_23A56270C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  unint64_t v10;
  void *v11;
  unint64_t v12;
  uint32_t *p_ivar_base_size;
  uint64_t *v14;
  id v15;
  BOOL v16;
  void *v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v43 = a1;
  v44 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v36 - v7;
  v9 = objc_msgSend(v2, sel_homes);
  sub_23A53AB74(0, &qword_2569942E0);
  v10 = sub_23A59EA34();

  if (v10 >> 62)
    goto LABEL_33;
  v11 = *(void **)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v11)
  {
    v12 = 0;
    v39 = v10;
    v40 = v10 & 0xC000000000000001;
    v36 = v10 + 32;
    v37 = v10 & 0xFFFFFFFFFFFFFF8;
    p_ivar_base_size = &DTDaemonShim__metaData.ivar_base_size;
    v14 = &qword_256993720;
    v38 = v11;
    while (1)
    {
      if (v40)
      {
        v15 = (id)MEMORY[0x23B85198C](v12, v10);
        v16 = __OFADD__(v12, 1);
        v17 = (void *)(v12 + 1);
        if (v16)
          goto LABEL_31;
      }
      else
      {
        if (v12 >= *(_QWORD *)(v37 + 16))
          goto LABEL_32;
        v15 = *(id *)(v36 + 8 * v12);
        v16 = __OFADD__(v12, 1);
        v17 = (void *)(v12 + 1);
        if (v16)
          goto LABEL_31;
      }
      v41 = v17;
      v42 = v15;
      v18 = objc_msgSend(v15, sel_accessories, v36);
      sub_23A53AB74(0, &qword_2569939B0);
      v19 = sub_23A59EA34();

      if (v19 >> 62)
        break;
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v20)
        goto LABEL_13;
LABEL_4:

      swift_bridgeObjectRelease_n();
      v10 = v39;
      v12 = (unint64_t)v41;
      if (v41 == v38)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    swift_bridgeObjectRetain_n();
    v20 = sub_23A59EED8();
    swift_bridgeObjectRelease();
    if (!v20)
      goto LABEL_4;
LABEL_13:
    v46 = v19;
    v47 = v19 & 0xC000000000000001;
    v21 = 4;
    v45 = v20;
    while (1)
    {
      v10 = v21 - 4;
      v22 = v47 ? (id)MEMORY[0x23B85198C](v21 - 4, v19) : *(id *)(v19 + 8 * v21);
      v11 = v22;
      v23 = v21 - 3;
      if (__OFADD__(v10, 1))
        break;
      v24 = objc_msgSend(v22, sel_device);
      if (v24)
      {
        v25 = v24;
        v26 = objc_msgSend(v24, *((SEL *)p_ivar_base_size + 107));

        if (v26)
        {
          sub_23A59E23C();

          v27 = sub_23A59E260();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 0, 1, v27);
        }
        else
        {
          v27 = sub_23A59E260();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 1, 1, v27);
        }
        sub_23A53AAEC((uint64_t)v6, (uint64_t)v8, v14);
        sub_23A59E260();
        v28 = v14;
        v29 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v27) == 1)
        {
          sub_23A53B9B4((uint64_t)v8, v28);
          v14 = v28;
          v20 = v45;
          v19 = v46;
        }
        else
        {
          v30 = sub_23A59E20C();
          v31 = v6;
          v33 = v32;
          (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v27);
          v50 = v30;
          v51 = v33;
          v48 = v43;
          v49 = v44;
          sub_23A56DBE0();
          v34 = sub_23A59ED34();
          v6 = v31;
          p_ivar_base_size = (_DWORD *)(&DTDaemonShim__metaData + 8);
          swift_bridgeObjectRelease();
          v14 = v28;
          v20 = v45;
          v19 = v46;
          if (!v34)
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease_n();
            return v11;
          }
        }
      }

      ++v21;
      if (v23 == v20)
        goto LABEL_4;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    v11 = (void *)sub_23A59EED8();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v11;
}

void sub_23A562B54(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_23A562B5C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_23A562B70@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_23A562B84@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23A562B98(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_23A562BC8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_23A562BF4@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_23A562C18(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_23A562C2C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_23A562C40(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_23A562C54@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23A562C68(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23A562C7C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23A562C90(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23A562CA4()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_23A562CB4()
{
  return sub_23A59ED40();
}

_QWORD *sub_23A562CCC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_23A562CE0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23A562CEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_23A567464(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *sub_23A562D28@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_23A562D38(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_23A562D44(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569942B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23A567954(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A562E50(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994250);
  v10 = *(_QWORD *)(type metadata accessor for DTTransportDaemon.DTOperationItem(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_23A59EEC0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for DTTransportDaemon.DTOperationItem(0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23A56A8FC(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_23A563058(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23A567450(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_23A5630C0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_23A5630C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_23A59F028();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_23A5637A8(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_23A563874((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_23A563CAC((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_23A59EA64();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_23A59F064();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_23A59F064()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_23A563B0C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_23A563B0C((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_23A563874((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_23A59F064() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_23A59EEC0();
  __break(1u);
  return result;
}

uint64_t sub_23A5637A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_23A59F064(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23A563874(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_23A59F064() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_23A59F064() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_23A563C04((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

char *sub_23A563B0C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569943D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_23A563C04(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_23A59EF08();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_23A563CAC(uint64_t a1)
{
  return sub_23A563B0C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23A563CC0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23A563E64(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23A565E3C();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_23A59E260();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 56) + v4);
  sub_23A564C58(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23A563D98(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23A563F00(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23A56641C();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_23A56532C(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_23A563E64(uint64_t a1)
{
  uint64_t v2;

  sub_23A59E260();
  sub_23A52EAEC(&qword_256994220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_23A59E95C();
  return sub_23A565B80(a1, v2);
}

unint64_t sub_23A563ED0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A59F0DC();
  return sub_23A565CC0(a1, v2);
}

unint64_t sub_23A563F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23A59F0E8();
  sub_23A59E9C8();
  v4 = sub_23A59F100();
  return sub_23A565D5C(a1, a2, v4);
}

uint64_t sub_23A563F64(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_23A59E260();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994348);
  v8 = sub_23A59EEF0();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_BYTE *)(*(_QWORD *)(v7 + 56) + v20);
    sub_23A52EAEC(&qword_256994220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23A59E95C();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_BYTE *)(*(_QWORD *)(v9 + 56) + v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23A564300(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_23A59E260();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994328);
  v42 = a2;
  v10 = sub_23A59EEF0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_23A52EAEC(&qword_256994220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23A59E95C();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23A564694(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_23A59EEF0();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v32 = -1 << v11;
    v33 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v34 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34)
          goto LABEL_33;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v34)
            goto LABEL_33;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v33 >= 64)
                  bzero((void *)(v6 + 64), 8 * v34);
                else
                  *v10 = v32;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v9 >= v34)
                  goto LABEL_33;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v29);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_23A59F0DC();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23A564944(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994238);
  v36 = a2;
  v6 = sub_23A59EEF0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_23A59F0E8();
    sub_23A59E9C8();
    result = sub_23A59F100();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_23A564C58(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_23A59E260();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23A59ED58();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23A52EAEC(&qword_256994220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_23A59E95C();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_BYTE *)(v23 + a1);
            v25 = (_BYTE *)(v23 + v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23A564EF8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_23A59E260();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23A59ED58();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23A52EAEC(&qword_256994220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_23A59E95C();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23A565198(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23A59ED58();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_23A59F0DC();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23A56532C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23A59ED58();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23A59F0E8();
        swift_bridgeObjectRetain();
        sub_23A59E9C8();
        v9 = sub_23A59F100();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_23A565500(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_23A59E260();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23A563E64(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v20[7] + v14) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23A565E3C();
    goto LABEL_7;
  }
  sub_23A563F64(result, a3 & 1);
  result = sub_23A563E64(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_23A59F088();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_23A565A50(v14, (uint64_t)v11, a1 & 1, v20);
}

void sub_23A565654(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_23A59E260();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23A563E64(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_23A56605C();
    goto LABEL_7;
  }
  sub_23A564300(v17, a3 & 1);
  v22 = sub_23A563E64(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_23A59F088();
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_23A565AE8(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_23A5657B0(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v6 = v4;
  v10 = *v4;
  v12 = sub_23A563ED0(a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23A566284(a4);
LABEL_7:
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v21 = 8 * v12;
    *(_QWORD *)(v18[6] + v21) = a2;
    *(_QWORD *)(v18[7] + v21) = a1;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_23A564694(result, a3 & 1, a4);
  result = sub_23A563ED0(a2);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A5658F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23A563F00(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23A56641C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23A564944(v15, a4 & 1);
  v21 = sub_23A563F00(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A565A50(unint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23A59E260();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_BYTE *)(a4[7] + a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_23A565AE8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23A59E260();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_23A565B80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_23A59E260();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_23A52EAEC(&qword_256994228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_23A59E98C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_23A565CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23A565D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23A59F064() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23A59F064() & 1) == 0);
    }
  }
  return v6;
}

void *sub_23A565E3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_23A59E260();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994348);
  v23 = v0;
  v5 = *v0;
  v6 = sub_23A59EEE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v16) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23A56605C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_23A59E260();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994328);
  v24 = v0;
  v5 = *v0;
  v6 = sub_23A59EEE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v24 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23A566284(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  uint64_t v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23A59EEE4();
  v5 = v4;
  v6 = *(_QWORD *)(v3 + 16);
  if (!v6)
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v8 = v3 + 64;
  v9 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v3 + 64), 8 * v9);
    v6 = *(_QWORD *)(v3 + 16);
  }
  v11 = 0;
  *(_QWORD *)(v5 + 16) = v6;
  v12 = 1 << *(_BYTE *)(v3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v3 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v8 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_26;
      v21 = *(_QWORD *)(v8 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v18) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v18);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v15)
    goto LABEL_26;
  v21 = *(_QWORD *)(v8 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v8 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23A56641C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994238);
  v2 = *v0;
  v3 = sub_23A59EEE4();
  v4 = v3;
  v5 = *(_QWORD *)(v2 + 16);
  if (!v5)
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v7 = v2 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v8)
  {
    result = memmove(result, (const void *)(v2 + 64), 8 * v8);
    v5 = *(_QWORD *)(v2 + 16);
  }
  v10 = 0;
  *(_QWORD *)(v4 + 16) = v5;
  v11 = 1 << *(_BYTE *)(v2 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v2 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23A5665D0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569942B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

uint64_t sub_23A566738(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_23A59E260();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_23A52EAEC(&qword_256994220, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_23A59E95C();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_23A52EAEC(&qword_256994228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_23A59E98C();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_23A566D00((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_23A566994()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_23A59E260();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994230);
  v6 = sub_23A59EDDC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_23A52EAEC(&qword_256994220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      result = sub_23A59E95C();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_23A566D00(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23A59E260();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23A566994();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23A566F04();
      goto LABEL_12;
    }
    sub_23A567128();
  }
  v12 = *v3;
  sub_23A52EAEC(&qword_256994220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v13 = sub_23A59E95C();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23A52EAEC(&qword_256994228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v18 = sub_23A59E98C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23A59F07C();
  __break(1u);
  return result;
}

void *sub_23A566F04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_23A59E260();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994230);
  v6 = *v0;
  v7 = sub_23A59EDD0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_23A567128()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_23A59E260();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994230);
  v7 = sub_23A59EDDC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_23A52EAEC(&qword_256994220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23A59E95C();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23A567450(uint64_t a1)
{
  return sub_23A5665D0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23A567464(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

id sub_23A56749C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _BYTE *v3;
  objc_class *ObjectType;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_weakInit();
  v2[3] = 0;
  *((_BYTE *)v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__invalidateCalled) = 0;
  v6 = MEMORY[0x24BEE4B00];
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsIncoming) = MEMORY[0x24BEE4B00];
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsOutgoing) = v6;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorSessionsLocal) = v6;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorTimer) = 0;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__monitorTransaction) = 0;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__statusFlags) = 0;
  v7 = (char *)v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__statusFlagsOverride;
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = (char *)v2 + OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__stereoAccessoryID;
  v9 = sub_23A59E260();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__transportDecoder;
  sub_23A59DFE4();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)&v3[v10] = sub_23A59DFD8();
  v11 = OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__transportEncoder;
  sub_23A59E008();
  swift_allocObject();
  *(_QWORD *)&v3[v11] = sub_23A59DFFC();
  *(_QWORD *)&v3[OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__operationQueue] = MEMORY[0x24BEE4AF8];
  v12 = &v3[OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeKitPollDeadline];
  v13 = sub_23A59E32C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)&v3[OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeKitPollTask] = 0;
  v3[OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeKitReady] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeManager] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeMap] = v6;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeSiriEndpointMap] = v6;
  v3[OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeSiriEndpointsReady] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__homeTransportRegisteredMap] = v6;
  swift_weakAssign();
  v14 = &v3[OBJC_IVAR____TtC23DistributedTimersDaemon17DTTransportDaemon__environment];
  v15 = sub_23A59E5B4();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a2, v15);
  swift_release();
  v19.receiver = v3;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a2, v15);
  return v17;
}

uint64_t type metadata accessor for DTTransportDaemon(uint64_t a1)
{
  return sub_23A52F018(a1, (uint64_t *)&unk_256997598);
}

uint64_t sub_23A567718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  if (*(_QWORD *)(v4 + 16) < *(_QWORD *)(a3 + 48))
  {
    __break(1u);
LABEL_9:
    result = (uint64_t)sub_23A562D44(0, v3[2] + 1, 1, v3);
    v3 = (_QWORD *)result;
    *v7 = result;
    goto LABEL_5;
  }
  v7 = *(uint64_t **)(v4 + 24);
  sub_23A59E278();
  sub_23A59EE00();
  sub_23A59E9E0();
  sub_23A59E9E0();
  v9 = sub_23A59E9E0();
  if ((*(uint64_t (**)(uint64_t))(a3 + 24))(v9))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569939E8);
    sub_23A56D9E4(&qword_2569939F0, &qword_2569939E8, MEMORY[0x24BEE12B0]);
    sub_23A59E974();
    swift_bridgeObjectRelease();
  }
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  v5 = 0;
  v6 = 0xE000000000000000;
  v3 = (_QWORD *)*v7;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v7 = (uint64_t)v3;
  if ((result & 1) == 0)
    goto LABEL_9;
LABEL_5:
  v12 = v3[2];
  v11 = v3[3];
  if (v12 >= v11 >> 1)
  {
    result = (uint64_t)sub_23A562D44((_QWORD *)(v11 > 1), v12 + 1, 1, v3);
    v3 = (_QWORD *)result;
    *v7 = result;
  }
  v3[2] = v12 + 1;
  v13 = &v3[2 * v12];
  v13[4] = v5;
  v13[5] = v6;
  return result;
}

uint64_t sub_23A567954(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

uint64_t sub_23A567A44(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        return swift_release();
      v18 = *(_QWORD *)(v4 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          return swift_release();
        v18 = *(_QWORD *)(v4 + 8 * v10);
        if (!v18)
        {
          v10 = v17 + 3;
          if (v17 + 3 >= v8)
            return swift_release();
          v18 = *(_QWORD *)(v4 + 8 * v10);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    swift_retain();
    a2(v14, v15, v16);
    swift_release();
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v8)
    return swift_release();
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23A567BDC(unint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  if (*(_QWORD *)(v3 + 16) < *(_QWORD *)(a2 + 24))
  {
    __break(1u);
LABEL_9:
    result = (uint64_t)sub_23A562D44(0, v2[2] + 1, 1, v2);
    v2 = (_QWORD *)result;
    *v5 = result;
    goto LABEL_5;
  }
  v5 = *(uint64_t **)(v3 + 24);
  sub_23A59E278();
  sub_23A59EE00();
  sub_23A59E9E0();
  sub_23A5617DC();
  sub_23A59F04C();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  v8 = sub_23A59E9E0();
  if ((*(uint64_t (**)(uint64_t))(a2 + 32))(v8))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569939E8);
    sub_23A56D9E4(&qword_2569939F0, &qword_2569939E8, MEMORY[0x24BEE12B0]);
    sub_23A59E974();
    swift_bridgeObjectRelease();
  }
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  v4 = 0;
  a1 = 0xE000000000000000;
  v2 = (_QWORD *)*v5;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v5 = (uint64_t)v2;
  if ((result & 1) == 0)
    goto LABEL_9;
LABEL_5:
  v11 = v2[2];
  v10 = v2[3];
  if (v11 >= v10 >> 1)
  {
    result = (uint64_t)sub_23A562D44((_QWORD *)(v10 > 1), v11 + 1, 1, v2);
    v2 = (_QWORD *)result;
    *v5 = result;
  }
  v2[2] = v11 + 1;
  v12 = &v2[2 * v11];
  v12[4] = v4;
  v12[5] = a1;
  return result;
}

uint64_t sub_23A567E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v4 = *(uint64_t **)(v2 + 16);
  sub_23A59EE00();
  swift_bridgeObjectRelease();
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  v5 = sub_23A59E9E0();
  if ((*(uint64_t (**)(uint64_t))(a2 + 16))(v5))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569939E8);
    sub_23A56D9E4(&qword_2569939F0, &qword_2569939E8, MEMORY[0x24BEE12B0]);
    sub_23A59E974();
    swift_bridgeObjectRelease();
  }
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  v6 = (_QWORD *)*v4;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v4 = (uint64_t)v6;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_23A562D44(0, v6[2] + 1, 1, v6);
    v6 = (_QWORD *)result;
    *v4 = result;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    result = (uint64_t)sub_23A562D44((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    v6 = (_QWORD *)result;
    *v4 = result;
  }
  v6[2] = v9 + 1;
  v10 = &v6[2 * v9];
  v10[4] = 0xD000000000000018;
  v10[5] = 0x800000023A5A27F0;
  return result;
}

uint64_t sub_23A56805C(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8)
      return swift_release();
    v17 = *(_QWORD *)(v4 + 8 * v16);
    ++v10;
    if (!v17)
    {
      v10 = v16 + 1;
      if (v16 + 1 >= v8)
        return swift_release();
      v17 = *(_QWORD *)(v4 + 8 * v10);
      if (!v17)
      {
        v10 = v16 + 2;
        if (v16 + 2 >= v8)
          return swift_release();
        v17 = *(_QWORD *)(v4 + 8 * v10);
        if (!v17)
        {
          v10 = v16 + 3;
          if (v16 + 3 >= v8)
            return swift_release();
          v17 = *(_QWORD *)(v4 + 8 * v10);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    v13 = 8 * v12;
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + v13);
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v13);
    swift_retain();
    a2(v14, v15);
    result = swift_release();
  }
  v18 = v16 + 4;
  if (v18 >= v8)
    return swift_release();
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
  {
    v10 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v17 = *(_QWORD *)(v4 + 8 * v10);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_23A5681F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A56821C()
{
  return sub_23A551B60();
}

uint64_t sub_23A568224(uint64_t a1)
{
  uint64_t v1;

  return sub_23A54B38C(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t type metadata accessor for DTTransportDaemon.DTTransportRequest(uint64_t a1)
{
  return sub_23A52F018(a1, qword_2569975C8);
}

uint64_t sub_23A568264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(v1 + 20);
  v6 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A568330(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23A56D604(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, _QWORD))sub_23A5540E0);
}

uint64_t sub_23A56833C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569943C8);
    v3 = sub_23A59EDF4();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_23A59F0E8();
      swift_bridgeObjectRetain();
      sub_23A59E9C8();
      result = sub_23A59F100();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_23A59F064(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_23A59F064();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23A5684DC(void *a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  id v43;
  _BYTE *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  _BYTE *v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t *v60;
  _BYTE *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t (**v68)(uint64_t, uint64_t, char);
  uint64_t (*v69)(uint64_t, uint64_t, char);
  id v70;
  _BYTE v72[12];
  int v73;
  os_log_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95[3];

  v87 = a5;
  v92 = a2;
  v93 = a1;
  v86 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  MEMORY[0x24BDAC7A8](v86);
  v90 = &v72[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = (_QWORD *)sub_23A59E260();
  v88 = *(v10 - 1);
  MEMORY[0x24BDAC7A8](v10);
  v81 = &v72[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v85 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v85 + 64);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v79 = &v72[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v84 = &v72[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = &v72[-v20];
  MEMORY[0x24BDAC7A8](v19);
  v23 = &v72[-v22];
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_23A56D748;
  *(_QWORD *)(v24 + 24) = a6;
  v89 = v24;
  v80 = v12;
  v25 = *(int *)(v12 + 24);
  v91 = a4;
  v26 = a4 + v25;
  v76 = a6;
  swift_retain();
  v83 = v26;
  v27 = sub_23A59E650();
  v28 = 0;
  v29 = 0;
  if ((v27 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v28 = (uint64_t)v92;
    v29 = a3;
  }
  v82 = v28;
  if (qword_2569973B0 != -1)
    swift_once();
  v30 = sub_23A59E6A4();
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_2569973B8);
  v32 = v91;
  sub_23A53ABC0(v91, (uint64_t)v23, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  sub_23A53ABC0(v32, (uint64_t)v21, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  swift_bridgeObjectRetain_n();
  v92 = v93;
  v78 = v31;
  v33 = sub_23A59E68C();
  v34 = sub_23A59EBC0();
  v35 = v34;
  v36 = os_log_type_enabled(v33, v34);
  v93 = v10;
  v77 = &v72[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (v36)
  {
    v37 = swift_slowAlloc();
    v75 = swift_slowAlloc();
    v95[0] = v75;
    *(_DWORD *)v37 = 136315906;
    v74 = v33;
    sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v73 = v35;
    v38 = sub_23A59F034();
    v94 = sub_23A538FBC(v38, v39, v95);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04((uint64_t)v23, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    *(_WORD *)(v37 + 12) = 2080;
    sub_23A59E680();
    sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
    v40 = sub_23A59F034();
    v94 = sub_23A538FBC(v40, v41, v95);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04((uint64_t)v21, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    *(_WORD *)(v37 + 22) = 2080;
    v42 = v92;
    v43 = objc_msgSend(v92, sel_uniqueIdentifier, v37 + 24);
    v44 = v81;
    sub_23A59E23C();

    v45 = sub_23A59F034();
    v47 = v46;
    v48 = v88;
    (*(void (**)(_BYTE *, id))(v88 + 8))(v44, v93);
    v32 = v91;
    v94 = sub_23A538FBC(v45, v47, v95);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v37 + 32) = 2080;
    v49 = v82;
    if (v29)
      v50 = v82;
    else
      v50 = 7104878;
    if (v29)
      v51 = v29;
    else
      v51 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    v94 = sub_23A538FBC(v50, v51, v95);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v52 = v74;
    _os_log_impl(&dword_23A52C000, v74, (os_log_type_t)v73, "HMMM send start: xid=%s, request=%s, hkID=%s, target=%s", (uint8_t *)v37, 0x2Au);
    v53 = v75;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v53, -1, -1);
    v54 = v37;
    v10 = v93;
    MEMORY[0x23B852178](v54, -1, -1);

  }
  else
  {
    sub_23A53AC04((uint64_t)v23, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    sub_23A53AC04((uint64_t)v21, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    v55 = v92;

    swift_bridgeObjectRelease_n();
    v48 = v88;
    v49 = v82;
  }
  v56 = v90;
  (*(void (**)(_BYTE *, uint64_t, _QWORD *))(v48 + 16))(v90, v32, v10);
  v57 = v86;
  v58 = &v56[*(int *)(v86 + 20)];
  v59 = sub_23A59E680();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v58, v83, v59);
  v60 = (uint64_t *)&v56[*(int *)(v57 + 24)];
  *v60 = v49;
  v60[1] = v29;
  v56[*(int *)(v57 + 28)] = 1;
  v61 = v84;
  sub_23A53ABC0(v32, (uint64_t)v84, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  v62 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  v63 = v13 + v62;
  v64 = (uint64_t)v56;
  v65 = (v63 + 7) & 0xFFFFFFFFFFFFFFF8;
  v66 = swift_allocObject();
  sub_23A53BA34((uint64_t)v61, v66 + v62, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  v67 = v92;
  *(_QWORD *)(v66 + v65) = v92;
  v68 = (uint64_t (**)(uint64_t, uint64_t, char))(v66 + ((v65 + 15) & 0xFFFFFFFFFFFFFFF8));
  v69 = (uint64_t (*)(uint64_t, uint64_t, char))v89;
  *v68 = sub_23A56EB18;
  v68[1] = v69;
  v70 = v67;
  swift_retain();
  sub_23A54D9F0(v64, v70, (uint64_t)sub_23A56DC30, v66);
  sub_23A53AC04(v64, type metadata accessor for DTTransportDaemon.DTTransportRequest);
  swift_release();
  return swift_release();
}

uint64_t sub_23A568FA0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void (*v33)(char *, uint64_t);
  id v34;
  void *v35;
  id v36;
  id v37;
  _QWORD v38[2];
  unint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;

  v2 = sub_23A59E260();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v38 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v38 - v13;
  v41 = a1;
  v15 = objc_msgSend(a1, sel_siriEndpointProfile);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v14, 1, 1, v2);
LABEL_7:
    sub_23A53B9B4((uint64_t)v14, &qword_256993720);
    sub_23A55A350();
    if (!v19)
      return MEMORY[0x24BEE4AF8];
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569942F0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_23A5A0BB0;
    *(_QWORD *)(v21 + 32) = v20;
    v42 = v21;
    sub_23A59EA4C();
    return v42;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, sel_sessionHubIdentifier);

  if (v17)
  {
    sub_23A59E23C();

    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, v18, 1, v2);
  sub_23A53AAEC((uint64_t)v12, (uint64_t)v14, &qword_256993720);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v14, 1, v2) == 1)
    goto LABEL_7;
  sub_23A53B9B4((uint64_t)v14, &qword_256993720);
  v42 = MEMORY[0x24BEE4AF8];
  v22 = objc_msgSend(v41, sel_home);
  if (!v22)
    return v42;
  v23 = v22;
  v24 = objc_msgSend(v22, sel_accessories);

  sub_23A53AB74(0, &qword_2569939B0);
  v25 = sub_23A59EA34();

  v40 = v3;
  if (!(v25 >> 62))
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v26)
      goto LABEL_12;
LABEL_27:
    swift_bridgeObjectRelease_n();
    return v42;
  }
  swift_bridgeObjectRetain();
  result = sub_23A59EED8();
  v26 = result;
  if (!result)
    goto LABEL_27;
LABEL_12:
  if (v26 >= 1)
  {
    v28 = 0;
    v39 = v25 & 0xC000000000000001;
    do
    {
      if (v39)
        v29 = (id)MEMORY[0x23B85198C](v28, v25);
      else
        v29 = *(id *)(v25 + 8 * v28 + 32);
      v30 = v29;
      v31 = objc_msgSend(v29, sel_uniqueIdentifier);
      sub_23A59E23C();

      v32 = objc_msgSend(v41, sel_uniqueIdentifier);
      sub_23A59E23C();

      sub_23A52EAEC(&qword_256994228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      LOBYTE(v32) = sub_23A59E98C();
      v33 = *(void (**)(char *, uint64_t))(v40 + 8);
      v33(v6, v2);
      v33(v8, v2);
      if ((v32 & 1) == 0)
      {
        v34 = objc_msgSend(v30, sel_device);
        if (v34)
        {
          v35 = v34;
          v36 = objc_msgSend(v34, sel_productInfo);

          if (v36)
          {
            v37 = objc_msgSend(v36, sel_productClass);

            if (v37 == (id)6)
            {
              v38[1] = v30;
              MEMORY[0x23B851590]();
              if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_23A59EA58();
              sub_23A59EA70();
              sub_23A59EA4C();
            }
          }
        }
      }

      ++v28;
    }
    while (v26 != v28);
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A56942C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  os_log_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  void (**v69)();
  uint64_t v70;
  id v71;
  uint64_t v73;
  int v74;
  os_log_t v75;
  uint64_t v76;
  id v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96[3];

  v89 = a5;
  v83 = a1;
  v88 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  MEMORY[0x24BDAC7A8](v88);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_23A59E260();
  v93 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v82 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v87 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v87 + 64);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v90 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v80 = (char *)&v73 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v86 = (uint64_t)&v73 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v73 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v73 - v23;
  v92 = swift_allocObject();
  *(_QWORD *)(v92 + 16) = a6;
  v81 = v13;
  v25 = *(int *)(v13 + 24);
  v94 = a4;
  v26 = a4 + v25;
  v77 = a6;
  v85 = v26;
  v27 = sub_23A59E650();
  v28 = 0;
  v29 = 0;
  if ((v27 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v28 = a2;
    v29 = a3;
  }
  v84 = v28;
  if (qword_2569973B0 != -1)
    swift_once();
  v30 = sub_23A59E6A4();
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_2569973B8);
  v32 = v94;
  sub_23A53ABC0(v94, (uint64_t)v24, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  sub_23A53ABC0(v32, (uint64_t)v22, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  swift_bridgeObjectRetain_n();
  v33 = v83;
  v79 = v31;
  v34 = sub_23A59E68C();
  v35 = sub_23A59EBC0();
  v36 = v35;
  v37 = os_log_type_enabled(v34, v35);
  v83 = v33;
  if (v37)
  {
    v38 = swift_slowAlloc();
    v78 = v11;
    v39 = v38;
    v76 = swift_slowAlloc();
    v96[0] = v76;
    *(_DWORD *)v39 = 136315906;
    v73 = sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v75 = v34;
    v40 = v91;
    v41 = sub_23A59F034();
    v95 = sub_23A538FBC(v41, v42, v96);
    v74 = v36;
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04((uint64_t)v24, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    *(_WORD *)(v39 + 12) = 2080;
    sub_23A59E680();
    sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
    v43 = v40;
    v44 = sub_23A59F034();
    v95 = sub_23A538FBC(v44, v45, v96);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04((uint64_t)v22, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    *(_WORD *)(v39 + 22) = 2080;
    v46 = objc_msgSend(v33, sel_uniqueIdentifier);
    v47 = v82;
    sub_23A59E23C();

    v48 = sub_23A59F034();
    v50 = v49;
    (*(void (**)(char *, uint64_t))(v93 + 8))(v47, v43);
    v95 = sub_23A538FBC(v48, v50, v96);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v39 + 32) = 2080;
    v51 = v84;
    if (v29)
      v52 = v84;
    else
      v52 = 7104878;
    if (v29)
      v53 = v29;
    else
      v53 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    v95 = sub_23A538FBC(v52, v53, v96);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v54 = v75;
    _os_log_impl(&dword_23A52C000, v75, (os_log_type_t)v74, "HMMM send start: xid=%s, request=%s, hkID=%s, target=%s", (uint8_t *)v39, 0x2Au);
    v55 = v76;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v55, -1, -1);
    v56 = v39;
    v11 = v78;
    MEMORY[0x23B852178](v56, -1, -1);

  }
  else
  {
    sub_23A53AC04((uint64_t)v24, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    sub_23A53AC04((uint64_t)v22, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);

    swift_bridgeObjectRelease_n();
    v43 = v91;
    v51 = v84;
  }
  v57 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v11, v94, v43);
  v58 = v88;
  v59 = &v11[*(int *)(v88 + 20)];
  v60 = sub_23A59E680();
  v61 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
  v62 = v85;
  v85 = v60;
  v61(v59, v62);
  v63 = &v11[*(int *)(v58 + 24)];
  *(_QWORD *)v63 = v51;
  *((_QWORD *)v63 + 1) = v29;
  v11[*(int *)(v58 + 28)] = 0;
  v64 = v86;
  sub_23A53ABC0(v57, v86, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  v65 = (*(unsigned __int8 *)(v87 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  v66 = (v14 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
  v67 = swift_allocObject();
  sub_23A53BA34(v64, v67 + v65, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  v68 = v83;
  *(_QWORD *)(v67 + v66) = v83;
  v69 = (void (**)())(v67 + ((v66 + 15) & 0xFFFFFFFFFFFFFFF8));
  v70 = v92;
  *v69 = sub_23A56DC24;
  v69[1] = (void (*)())v70;
  v71 = v68;
  swift_retain();
  sub_23A54D9F0((uint64_t)v11, v71, (uint64_t)sub_23A56DC30, v67);
  sub_23A53AC04((uint64_t)v11, type metadata accessor for DTTransportDaemon.DTTransportRequest);
  swift_release();
  return swift_release();
}

uint64_t sub_23A569EC0(uint64_t a1, void *a2, unint64_t a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t ErrorValue;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  os_log_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  _QWORD v81[2];
  os_log_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104[3];

  v90 = a3;
  v101 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  v100 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_23A59E680();
  v95 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v97 = (char *)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A59E608();
  v91 = *(_QWORD *)(v10 - 8);
  v92 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v93 = (char *)v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_23A59E4D0();
  v12 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v94 = (char *)v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)v81 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)v81 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v81 - v24;
  v26 = sub_23A59E344();
  v89 = v14;
  v27 = *(int *)(v14 + 20);
  v99 = a1;
  if (v26 < *(_QWORD *)(a1 + v27))
  {
    __break(1u);
    goto LABEL_18;
  }
  v14 = sub_23A59E2F0();
  v86 = v8;
  v88 = a4;
  v87 = v12;
  if ((a4 & 1) == 0)
  {
    if (qword_2569973B0 == -1)
    {
LABEL_5:
      v84 = v14;
      v28 = sub_23A59E6A4();
      __swift_project_value_buffer(v28, (uint64_t)qword_2569973B8);
      v29 = v99;
      sub_23A53ABC0(v99, (uint64_t)v25, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
      sub_23A53ABC0(v29, (uint64_t)v23, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
      v30 = sub_23A59E68C();
      v31 = sub_23A59EBC0();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v83 = swift_slowAlloc();
        v104[0] = v83;
        *(_DWORD *)v32 = 136315650;
        sub_23A59E260();
        v85 = v6;
        sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v33 = sub_23A59F034();
        v103 = sub_23A538FBC(v33, v34, v104);
        sub_23A59ED1C();
        swift_bridgeObjectRelease();
        sub_23A53AC04((uint64_t)v25, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
        *(_WORD *)(v32 + 12) = 2080;
        v35 = v89;
        sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
        v36 = v98;
        v37 = sub_23A59F034();
        v103 = sub_23A538FBC(v37, v38, v104);
        sub_23A59ED1C();
        swift_bridgeObjectRelease();
        sub_23A53AC04((uint64_t)v23, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
        *(_WORD *)(v32 + 22) = 2048;
        v103 = v84;
        v6 = v85;
        sub_23A59ED1C();
        _os_log_impl(&dword_23A52C000, v30, v31, "Operation completed: xid=%s, request=%s, rttMs=%llu", (uint8_t *)v32, 0x20u);
        v39 = v83;
        swift_arrayDestroy();
        MEMORY[0x23B852178](v39, -1, -1);
        MEMORY[0x23B852178](v32, -1, -1);

        v40 = 0;
        v41 = v86;
      }
      else
      {
        sub_23A53AC04((uint64_t)v25, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
        sub_23A53AC04((uint64_t)v23, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);

        v40 = 0;
        v41 = v86;
        v36 = v98;
        v35 = v89;
      }
      v42 = v101;
      goto LABEL_14;
    }
LABEL_18:
    swift_once();
    goto LABEL_5;
  }
  v42 = v101;
  v43 = v101;
  v44 = v42;
  v45 = v42;
  if (qword_2569973B0 != -1)
    swift_once();
  v46 = v14;
  v47 = sub_23A59E6A4();
  __swift_project_value_buffer(v47, (uint64_t)qword_2569973B8);
  v48 = v99;
  sub_23A53ABC0(v99, (uint64_t)v20, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  sub_23A53ABC0(v48, (uint64_t)v17, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
  v49 = v42;
  v50 = sub_23A59E68C();
  v51 = sub_23A59EBB4();
  v52 = v51;
  v53 = os_log_type_enabled(v50, v51);
  v36 = v98;
  if (v53)
  {
    v54 = swift_slowAlloc();
    v84 = swift_slowAlloc();
    v104[0] = v84;
    *(_DWORD *)v54 = 136315906;
    v85 = v6;
    sub_23A59E260();
    sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    LODWORD(v83) = v52;
    v55 = sub_23A59F034();
    v103 = sub_23A538FBC(v55, v56, v104);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04((uint64_t)v20, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    *(_WORD *)(v54 + 12) = 2080;
    v82 = v50;
    v35 = v89;
    sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
    v57 = sub_23A59F034();
    v103 = sub_23A538FBC(v57, v58, v104);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A53AC04((uint64_t)v17, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    *(_WORD *)(v54 + 22) = 2048;
    v103 = v46;
    sub_23A59ED1C();
    *(_WORD *)(v54 + 32) = 2080;
    v81[1] = v54 + 34;
    ErrorValue = swift_getErrorValue();
    v60 = v102;
    v61 = *(_QWORD *)(v102 - 8);
    MEMORY[0x24BDAC7A8](ErrorValue);
    v63 = (char *)v81 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v61 + 16))(v63);
    v64 = v101;
    v65 = sub_23A59F0C4();
    v67 = v66;
    v68 = v60;
    v6 = v85;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v68);
    v69 = v90;
    sub_23A56D4AC(v101, v90, 1);
    v36 = v98;
    v103 = sub_23A538FBC(v65, v67, v104);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    sub_23A56D4AC(v101, v69, 1);
    sub_23A56D4AC(v101, v69, 1);
    v70 = v82;
    _os_log_impl(&dword_23A52C000, v82, (os_log_type_t)v83, "### Operation failed: xid=%s, request=%s, rttMs=%llu, error=%s", (uint8_t *)v54, 0x2Au);
    v71 = v84;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v71, -1, -1);
    v72 = v54;
    v42 = v101;
    MEMORY[0x23B852178](v72, -1, -1);

    sub_23A56D4AC(v42, v69, 1);
    v40 = v42;
    v41 = v86;
  }
  else
  {
    v73 = v90;
    sub_23A56D4AC(v42, v90, 1);
    sub_23A53AC04((uint64_t)v20, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    sub_23A53AC04((uint64_t)v17, type metadata accessor for DTTransportDaemon.DTOperationItemRequest);
    sub_23A56D4AC(v42, v73, 1);
    sub_23A56D4AC(v42, v73, 1);

    v40 = v42;
    v41 = v86;
    v35 = v89;
  }
LABEL_14:
  (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v93, *MEMORY[0x24BE2D438], v92);
  v74 = v99;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v97, v99 + *(int *)(v35 + 24), v36);
  v75 = v40;
  v76 = v94;
  sub_23A59E5FC();
  v77 = v87;
  v78 = v96;
  (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v76, *MEMORY[0x24BE2D2F8], v96);
  sub_23A59E548();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v41, v74 + *(int *)(v35 + 32), v6);
  if ((v88 & 1) != 0)
  {
    v104[0] = (uint64_t)v42;
    v79 = v42;
    sub_23A59EA88();
  }
  else
  {
    v104[0] = (uint64_t)v42;
    v104[1] = v90;
    sub_23A53AB30((uint64_t)v42, v90);
    sub_23A59EA94();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v41, v6);
}

uint64_t sub_23A56A8FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for DTTransportDaemon.DTOperationItem(0) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

uint64_t sub_23A56AA14(unint64_t a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v3 = a1;
  v26 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_32;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_23A59EED8())
  {
    v20 = v3;
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    v24 = i;
    v25 = (_QWORD *)(v3 + 32);
    v21 = a2 + 7;
    v22 = v3 & 0xFFFFFFFFFFFFFF8;
    v23 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v6)
      {
        v8 = (id)MEMORY[0x23B85198C](v5, v20);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v7 + 16))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        v8 = (id)v25[v5];
      }
      v9 = v8;
      if (__OFADD__(v5++, 1))
        goto LABEL_30;
      v11 = sub_23A59EC74();
      if (!v12)
        goto LABEL_5;
      v3 = (unint64_t)v12;
      v13 = (_QWORD *)a2[2];
      if (!v13)
      {

        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      v14 = v11;
      v15 = a2;
      if ((a2[4] != v11 || v12 != (_QWORD *)a2[5]) && (sub_23A59F064() & 1) == 0)
        break;
LABEL_4:
      swift_bridgeObjectRelease();
      v6 = v23;
      i = v24;
      a2 = v15;
      v7 = v22;
LABEL_5:
      sub_23A59EE48();
      sub_23A59EE6C();
      sub_23A59EE78();
      v3 = (unint64_t)&v26;
      sub_23A59EE54();
LABEL_6:
      if (v5 == i)
        return v26;
    }
    if (v13 == (_QWORD *)1)
    {
LABEL_25:

      swift_bridgeObjectRelease();
      v6 = v23;
      i = v24;
      a2 = v15;
      v7 = v22;
      goto LABEL_6;
    }
    v16 = v21;
    v17 = 1;
    while (1)
    {
      a2 = (_QWORD *)(v17 + 1);
      if (__OFADD__(v17, 1))
        break;
      v18 = *(v16 - 1) == v14 && v3 == *v16;
      if (v18 || (sub_23A59F064() & 1) != 0)
        goto LABEL_4;
      v16 += 2;
      ++v17;
      if (a2 == v13)
        goto LABEL_25;
    }
LABEL_31:
    __break(1u);
LABEL_32:
    ;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23A56AC2C()
{
  return swift_deallocObject();
}

uint64_t sub_23A56AC3C(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v3 = a1;
  v28 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_36;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_23A59EED8())
  {
    v22 = v3;
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    v26 = v3 & 0xFFFFFFFFFFFFFF8;
    v27 = (_QWORD *)(v3 + 32);
    v24 = i;
    v25 = a2;
    v23 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v6)
      {
        v8 = (id)MEMORY[0x23B85198C](v5, v22);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v7 + 16))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        v8 = (id)v27[v5];
      }
      v9 = v8;
      if (__OFADD__(v5++, 1))
        goto LABEL_34;
      v11 = sub_23A59EC74();
      if (!v12)
        goto LABEL_5;
      v13 = v11;
      v14 = v12;
      v3 = *(_QWORD *)(a2 + 40);
      v15 = (_QWORD *)(*(uint64_t (**)(void))(a2 + 32))();
      if (!v15)
      {

        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      v3 = (unint64_t)v15;
      v16 = v15[2];
      if (!v16)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = v26;
        goto LABEL_6;
      }
      v17 = v15[4] == v13 && v14 == v15[5];
      if (!v17 && (sub_23A59F064() & 1) == 0)
        break;
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      i = v24;
      a2 = v25;
      v6 = v23;
      v7 = v26;
LABEL_5:
      sub_23A59EE48();
      sub_23A59EE6C();
      sub_23A59EE78();
      v3 = (unint64_t)&v28;
      sub_23A59EE54();
LABEL_6:
      if (v5 == i)
        return v28;
    }
    if (v16 == 1)
    {
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      i = v24;
      a2 = v25;
      v6 = v23;
      v7 = v26;
      goto LABEL_6;
    }
    v18 = (_QWORD *)(v3 + 56);
    v19 = 1;
    while (1)
    {
      a2 = v19 + 1;
      if (__OFADD__(v19, 1))
        break;
      v20 = *(v18 - 1) == v13 && v14 == *v18;
      if (v20 || (sub_23A59F064() & 1) != 0)
        goto LABEL_4;
      v18 += 2;
      ++v19;
      if (a2 == v16)
        goto LABEL_28;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    ;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23A56AE84()
{
  return sub_23A554B80();
}

uint64_t sub_23A56AEB0()
{
  return swift_deallocObject();
}

uint64_t sub_23A56AEC0(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v3 = a1;
  v28 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_36;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_23A59EED8())
  {
    v22 = v3;
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    v26 = v3 & 0xFFFFFFFFFFFFFF8;
    v27 = (_QWORD *)(v3 + 32);
    v24 = i;
    v25 = a2;
    v23 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v6)
      {
        v8 = (id)MEMORY[0x23B85198C](v5, v22);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v7 + 16))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        v8 = (id)v27[v5];
      }
      v9 = v8;
      if (__OFADD__(v5++, 1))
        goto LABEL_34;
      v11 = sub_23A59EC74();
      if (!v12)
        goto LABEL_5;
      v13 = v11;
      v14 = v12;
      v3 = *(_QWORD *)(a2 + 24);
      v15 = (_QWORD *)(*(uint64_t (**)(void))(a2 + 16))();
      if (!v15)
      {

        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      v3 = (unint64_t)v15;
      v16 = v15[2];
      if (!v16)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = v26;
        goto LABEL_6;
      }
      v17 = v15[4] == v13 && v14 == v15[5];
      if (!v17 && (sub_23A59F064() & 1) == 0)
        break;
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      i = v24;
      a2 = v25;
      v6 = v23;
      v7 = v26;
LABEL_5:
      sub_23A59EE48();
      sub_23A59EE6C();
      sub_23A59EE78();
      v3 = (unint64_t)&v28;
      sub_23A59EE54();
LABEL_6:
      if (v5 == i)
        return v28;
    }
    if (v16 == 1)
    {
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      i = v24;
      a2 = v25;
      v6 = v23;
      v7 = v26;
      goto LABEL_6;
    }
    v18 = (_QWORD *)(v3 + 56);
    v19 = 1;
    while (1)
    {
      a2 = v19 + 1;
      if (__OFADD__(v19, 1))
        break;
      v20 = *(v18 - 1) == v13 && v14 == *v18;
      if (v20 || (sub_23A59F064() & 1) != 0)
        goto LABEL_4;
      v18 += 2;
      ++v19;
      if (a2 == v16)
        goto LABEL_28;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    ;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23A56B108()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return sub_23A56057C((uint64_t)v2, v0);
}

unint64_t sub_23A56B150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256993940;
  if (!qword_256993940)
  {
    v1 = sub_23A53AB74(255, (unint64_t *)&qword_256993A10);
    result = MEMORY[0x23B8520D0](MEMORY[0x24BE2D540], v1);
    atomic_store(result, (unint64_t *)&qword_256993940);
  }
  return result;
}

uint64_t sub_23A56B1A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A541460;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256993950 + dword_256993950))(a1, v4);
}

uint64_t sub_23A56B218()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return sub_23A56057C((uint64_t)v2, v0);
}

uint64_t sub_23A56B260(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[5];

  v50 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)&v42 - v13;
  v14 = sub_23A59E260();
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569973B0 != -1)
    swift_once();
  v17 = sub_23A59E6A4();
  __swift_project_value_buffer(v17, (uint64_t)qword_2569973B8);
  v18 = a1;
  v19 = sub_23A59E68C();
  v20 = sub_23A59EBC0();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v44 = a2;
    v22 = v21;
    v43 = swift_slowAlloc();
    v53[0] = v43;
    *(_DWORD *)v22 = 136315394;
    v23 = objc_msgSend(v18, sel_name);
    v24 = sub_23A59E9A4();
    v45 = a4;
    v46 = a5;
    v25 = v24;
    v27 = v26;

    v52 = sub_23A538FBC(v25, v27, v53);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v22 + 12) = 2080;
    v28 = objc_msgSend(v18, sel_uniqueIdentifier, v22 + 14);
    sub_23A59E23C();

    sub_23A52EAEC(&qword_256993758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v29 = v48;
    v30 = sub_23A59F034();
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v29);
    v52 = sub_23A538FBC(v30, v32, v53);
    sub_23A59ED1C();
    a4 = v45;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A52C000, v19, v20, v44, (uint8_t *)v22, 0x16u);
    v33 = v43;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v33, -1, -1);
    MEMORY[0x23B852178](v22, -1, -1);
  }
  else
  {

  }
  v34 = v51;
  v35 = sub_23A59E560();
  v36 = sub_23A59EAB8();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v49, 1, 1, v36);
  sub_23A53AAEC(v38, (uint64_t)v12, (uint64_t *)&unk_256993920);
  LODWORD(v38) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v12, 1, v36);
  swift_retain();
  if ((_DWORD)v38 == 1)
  {
    sub_23A53B9B4((uint64_t)v12, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v36);
  }
  v39 = sub_23A56B150();
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = a4;
  *(_QWORD *)(v40 + 24) = v34;
  v53[1] = 6;
  v53[2] = 0;
  v53[3] = v35;
  v53[4] = v39;
  swift_task_create();
  return swift_release();
}

uint64_t sub_23A56B6A4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _DWORD v21[4];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v21 - v8;
  if (qword_2569973B0 != -1)
    swift_once();
  v10 = sub_23A59E6A4();
  __swift_project_value_buffer(v10, (uint64_t)qword_2569973B8);
  v11 = sub_23A59E68C();
  v12 = sub_23A59EBC0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v13 = 67109120;
    v21[3] = a1 & 1;
    sub_23A59ED1C();
    _os_log_impl(&dword_23A52C000, v11, v12, "HomeKit didUpdateHH2State: state=%{BOOL}d", v13, 8u);
    MEMORY[0x23B852178](v13, -1, -1);
  }

  v14 = sub_23A59E560();
  v15 = sub_23A59EAB8();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v9, 1, 1, v15);
  sub_23A53AAEC((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_256993920);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15);
  swift_retain();
  if (v17 == 1)
  {
    sub_23A53B9B4((uint64_t)v7, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v15);
  }
  v18 = sub_23A56B150();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = &unk_2569941A0;
  *(_QWORD *)(v19 + 24) = v2;
  v22 = 6;
  v23 = 0;
  v24 = v14;
  v25 = v18;
  swift_task_create();
  return swift_release();
}

uint64_t sub_23A56B920()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return sub_23A56057C((uint64_t)v2, v0);
}

uint64_t sub_23A56B968()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return sub_23A56057C((uint64_t)v2, v0);
}

uint64_t sub_23A56B9B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return sub_23A56057C((uint64_t)v2, v0);
}

uint64_t sub_23A56B9F8(uint64_t a1)
{
  uint64_t result;

  result = sub_23A52EAEC((unint64_t *)&unk_256993910, type metadata accessor for DTTransportDaemon, (uint64_t)&protocol conformance descriptor for DTTransportDaemon);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23A56BA34()
{
  return type metadata accessor for DTTransportDaemon(0);
}

void sub_23A56BA3C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23A59E5B4();
  if (v0 <= 0x3F)
  {
    sub_23A548E44(319, qword_2569937B8, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
    {
      sub_23A548E44(319, (unint64_t *)&qword_256993D20, (void (*)(uint64_t))MEMORY[0x24BE29D40]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DTTransportDaemon()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DTTransportDaemon.__allocating_init(daemon:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t type metadata accessor for DTTransportDaemon.DTTransportMonitorInfoIncoming()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DTTransportDaemon.DTTransportMonitorInfoLocal()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DTTransportDaemon.DTTransportMonitorInfoOutgoing()
{
  return objc_opt_self();
}

uint64_t *sub_23A56BBEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_23A59E260();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = (int *)type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
    *(uint64_t *)((char *)a1 + v7[5]) = *(uint64_t *)((char *)a2 + v7[5]);
    v8 = v7[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23A59E680();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = v7[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23A59E530();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = v7[8];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    swift_weakCopyInit();
  }
  return a1;
}

uint64_t type metadata accessor for DTTransportDaemon.DTOperationItemRequest(uint64_t a1)
{
  return sub_23A52F018(a1, (uint64_t *)&unk_2569975B8);
}

uint64_t sub_23A56BD30(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v4 = a1 + v3[6];
  v5 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + v3[7];
  v7 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + v3[8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_weakDestroy();
}

uint64_t sub_23A56BDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  *(_QWORD *)(a1 + v5[5]) = *(_QWORD *)(a2 + v5[5]);
  v6 = v5[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = v5[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = v5[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  swift_weakCopyInit();
  return a1;
}

uint64_t sub_23A56BEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  *(_QWORD *)(a1 + v5[5]) = *(_QWORD *)(a2 + v5[5]);
  v6 = v5[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = v5[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = v5[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  swift_weakCopyAssign();
  return a1;
}

uint64_t sub_23A56BFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  *(_QWORD *)(a1 + v5[5]) = *(_QWORD *)(a2 + v5[5]);
  v6 = v5[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = v5[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v5[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  swift_weakTakeInit();
  return a1;
}

uint64_t sub_23A56C100(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  *(_QWORD *)(a1 + v5[5]) = *(_QWORD *)(a2 + v5[5]);
  v6 = v5[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = v5[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = v5[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  swift_weakTakeAssign();
  return a1;
}

uint64_t sub_23A56C204()
{
  type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A56C244()
{
  type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for DTTransportDaemon.DTOperationItem(uint64_t a1)
{
  return sub_23A52F018(a1, (uint64_t *)&unk_2569975A8);
}

uint64_t sub_23A56C2A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for DTTransportDaemon.DTOperationItemRequest(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t *sub_23A56C304(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23A59E260();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23A59E680();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23A59E530();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[8];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    swift_weakCopyInit();
  }
  return a1;
}

uint64_t sub_23A56C428(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[6];
  v6 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[7];
  v8 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_weakDestroy();
}

uint64_t sub_23A56C4E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  swift_weakCopyInit();
  return a1;
}

uint64_t sub_23A56C5DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  swift_weakCopyAssign();
  return a1;
}

uint64_t sub_23A56C6D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  swift_weakTakeInit();
  return a1;
}

uint64_t sub_23A56C7D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  swift_weakTakeAssign();
  return a1;
}

uint64_t sub_23A56C8C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23A59E260();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_23A59E680();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[6];
    }
    else
    {
      v14 = sub_23A59E530();
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[7];
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[8];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23A56C998()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_23A59E260();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_23A59E680();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v16 = sub_23A59E530();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[8];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23A56CA70()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23A59E260();
  if (v0 <= 0x3F)
  {
    sub_23A59E680();
    if (v1 <= 0x3F)
    {
      sub_23A59E530();
      if (v2 <= 0x3F)
      {
        sub_23A56CB40();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_23A56CB40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256994078[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569939C8);
    v0 = sub_23A59EAA0();
    if (!v1)
      atomic_store(v0, qword_256994078);
  }
}

void type metadata accessor for DTTimerClientStatusFlags(uint64_t a1)
{
  sub_23A56E6CC(a1, qword_2569940B8);
}

_QWORD *sub_23A56CBBC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23A59E260();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23A59E680();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23A56CC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A56CD00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23A56CDA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23A56CE60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t sub_23A56CEF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23A56CFA4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A56CFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_23A59E260();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23A59E680();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_23A56D068()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A56D074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_23A59E260();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_23A59E680();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t sub_23A56D11C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23A59E260();
  if (v1 <= 0x3F)
  {
    result = sub_23A59E680();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23A56D1B4()
{
  return sub_23A52EAEC(&qword_256994148, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerClientStatusFlags, (uint64_t)&unk_23A5A0EC8);
}

uint64_t sub_23A56D1E0()
{
  return sub_23A52EAEC(&qword_256994150, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerClientStatusFlags, (uint64_t)&unk_23A5A0E94);
}

uint64_t sub_23A56D20C()
{
  return sub_23A52EAEC(&qword_256994158, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerClientStatusFlags, (uint64_t)&unk_23A5A0EF4);
}

uint64_t sub_23A56D238()
{
  return sub_23A52EAEC(&qword_256994160, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerClientStatusFlags, (uint64_t)&unk_23A5A0F30);
}

unint64_t sub_23A56D264()
{
  unint64_t result;

  result = qword_2569979E0;
  if (!qword_2569979E0)
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A1114, &type metadata for DTTransportDaemon.DTTransportRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569979E0);
  }
  return result;
}

uint64_t sub_23A56D2A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23A541124;
  return sub_23A560B9C((uint64_t)v2, v0);
}

uint64_t sub_23A56D2F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return sub_23A56057C((uint64_t)v2, v0);
}

uint64_t sub_23A56D338()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return sub_23A56057C((uint64_t)v2, v0);
}

uint64_t sub_23A56D380()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return sub_23A56057C((uint64_t)v2, v0);
}

void sub_23A56D3C8(uint64_t a1, unint64_t a2, int a3, id a4)
{
  uint64_t v4;
  void (*v5)(id, unint64_t, uint64_t);
  id v6;
  id v9;

  v5 = *(void (**)(id, unint64_t, uint64_t))(v4 + 16);
  if (a2 >> 60 == 15)
  {
    if (a4)
    {
      v6 = a4;
    }
    else
    {
      sub_23A59E614();
      v6 = (id)sub_23A59E620();
      a4 = 0;
    }
    v9 = a4;
    v5(v6, 0, 1);

  }
  else
  {
    sub_23A53AB30(a1, a2);
    v5((id)a1, a2, 0);
    sub_23A53AA94(a1, a2);
  }
}

id sub_23A56D4A0(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)sub_23A53AB30((uint64_t)a1, a2);
}

void sub_23A56D4AC(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_23A53AAA8((uint64_t)a1, a2);
}

uint64_t sub_23A56D4B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A56D4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541124;
  return sub_23A5576B8((uint64_t)v4, v2, v3);
}

uint64_t sub_23A56D52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for DTTransportDaemon.DTTransportRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v5 + *(int *)(v1 + 20);
  v8 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23A56D5F8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23A56D604(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, _QWORD))sub_23A556D5C);
}

uint64_t sub_23A56D604(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v7 = a3 & 1;
  v8 = *(_QWORD *)(type metadata accessor for DTTransportDaemon.DTTransportRequest(0) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return a4(a1, a2, v7, v4 + v9, *(_QWORD *)(v4 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23A56D67C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return sub_23A551D38((uint64_t)v2, v0);
}

uint64_t sub_23A56D6C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A56D6E8()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255)
    sub_23A56D4AC(*(id *)(v0 + 16), *(_QWORD *)(v0 + 24), v1 & 1);
  return swift_deallocObject();
}

uint64_t sub_23A56D71C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_23A56D748(void *a1, unint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unsigned __int8 v11;

  v8 = *(_QWORD *)(v3 + 16);
  v7 = *(NSObject **)(v3 + 24);
  swift_beginAccess();
  v9 = *(void **)(v8 + 16);
  v10 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v11 = *(_BYTE *)(v8 + 32);
  *(_BYTE *)(v8 + 32) = a3;
  sub_23A56DC34(a1, a2, a3);
  sub_23A56DC4C(v9, v10, v11);
  dispatch_group_leave(v7);
}

uint64_t sub_23A56D7DC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = v0 + v3;
  v5 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + v1[6];
  v7 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v1[7];
  v9 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v4 + v1[8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_23A56D8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0) - 8)
                          + 80);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = v0 + ((v1 + 24) & ~v1);
  swift_beginAccess();
  v4 = *(unsigned __int8 *)(v2 + 32);
  if (v4 == 255)
  {
    sub_23A59E614();
    v8 = (void *)sub_23A59E620();
    sub_23A569EC0(v3, v8, 0, 1);

  }
  else
  {
    v7 = v2 + 16;
    v6 = *(void **)(v2 + 16);
    v5 = *(_QWORD *)(v7 + 8);
    sub_23A56DC34(v6, v5, v4);
    sub_23A569EC0(v3, v6, v5, v4 & 1);
    sub_23A56DC4C(v6, v5, v4);
  }
}

uint64_t sub_23A56D9E4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B8520D0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23A56DA24(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 16))(a1, a2, a3 & 1);
}

uint64_t sub_23A56DA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(sub_23A59E530() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_23A59E680() - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v3;
  v9 = *(_QWORD *)(v0 + v4);
  v10 = *(_QWORD *)(v0 + v7);
  v11 = v0 + v6;
  v12 = *(_QWORD *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_23A541460;
  return sub_23A55B534((uint64_t)v13, v14, v15, v8, v9, v11, v10, v12);
}

uint64_t sub_23A56DB2C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A56DB50()
{
  return sub_23A54BF5C();
}

uint64_t sub_23A56DB70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A541460;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2569942B8 + dword_2569942B8))(a1, v4);
}

unint64_t sub_23A56DBE0()
{
  unint64_t result;

  result = qword_2569942E8;
  if (!qword_2569942E8)
  {
    result = MEMORY[0x23B8520D0](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2569942E8);
  }
  return result;
}

void sub_23A56DC24()
{
  uint64_t v0;

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

id sub_23A56DC34(id result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_23A56D4A0(result, a2, a3 & 1);
  return result;
}

void sub_23A56DC4C(void *a1, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    sub_23A56D4AC(a1, a2, a3 & 1);
}

uint64_t objectdestroy_145Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v5 + v1[6];
  v8 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v5 + v1[7];
  v10 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v5 + v1[8];
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_weakDestroy();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A56DD90(void *a1, unint64_t a2, char a3)
{
  uint64_t v3;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v6 = a3 & 1;
  v7 = *(_QWORD *)(type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23A55ABC4(a1, a2, v6, v3 + v8, *(void **)(v3 + v9), *(uint64_t (**)(void *, unint64_t, _QWORD))(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23A56DE08()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23A59E260();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + v1[6];
  v6 = sub_23A59E680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v3 + v1[7];
  v8 = sub_23A59E530();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v3 + v1[8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256993FA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A56DF0C(void *a1, unint64_t a2, char a3)
{
  uint64_t v3;
  int v6;
  uint64_t v7;

  v6 = a3 & 1;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DTTransportDaemon.DTOperationItemRequest(0) - 8)
                          + 80);
  return sub_23A569EC0(v3 + ((v7 + 16) & ~v7), a1, a2, v6);
}

uint64_t objectdestroy_126Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_23A59E530();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_23A59E680();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A56E064()
{
  return swift_deallocObject();
}

uint64_t sub_23A56E074(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_23A55F020(a1, a2, a3, a4, a5);
}

uint64_t sub_23A56E07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23A59E260();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23A56E0F0(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23A59E260() - 8) + 80);
  return sub_23A55F664(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_23A56E130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23A59E260();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_23A56E1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(sub_23A59E260() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = v0 + v3;
  v6 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_23A541460;
  return sub_23A55F904((uint64_t)v7, v4, v5, v6);
}

uint64_t sub_23A56E24C()
{
  uint64_t result;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_2569973B0 != -1)
      swift_once();
    v1 = sub_23A59E6A4();
    __swift_project_value_buffer(v1, (uint64_t)qword_2569973B8);
    v2 = sub_23A59E68C();
    v3 = sub_23A59EBC0();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_23A52C000, v2, v3, "HMMM register retry", v4, 2u);
      MEMORY[0x23B852178](v4, -1, -1);
    }

    sub_23A543B7C((uint64_t)sub_23A5602AC, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A56E37C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23A56E3A0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23A55F5E4(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_23A56E3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994358);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994350);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_release();
  v8 = *(_QWORD *)(v0 + 32);
  if (v8 >> 60 != 15)
    sub_23A53AAA8(*(_QWORD *)(v0 + 24), v8);
  v9 = (v3 + 40) & ~v3;
  v10 = (v9 + v4 + v7) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v9, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v10, v5);
  return swift_deallocObject();
}

uint64_t sub_23A56E484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256994358) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256994350) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = v0 + v3;
  v10 = v0 + (v6 & ~v5);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_23A541460;
  v12 = (_QWORD *)swift_task_alloc();
  v11[2] = v12;
  *v12 = v11;
  v12[1] = sub_23A541460;
  return sub_23A55CC64(v7, v8, v9, v10);
}

uint64_t sub_23A56E55C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*a1, a1[1], *a2);
}

uint64_t sub_23A56E58C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DTTransportDaemon.DTTransportRequest(255);
    result = MEMORY[0x23B8520D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23A56E5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *, uint64_t *);
  uint64_t v6;
  _QWORD v7[2];

  v4 = *(uint64_t (**)(_QWORD *, uint64_t *))(v3 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v6 = a3;
  return v4(v7, &v6);
}

uint64_t sub_23A56E604()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    return sub_23A54BF5C();
  else
    return 0;
}

uint64_t sub_23A56E630()
{
  uint64_t v0;

  return DTXPCConnection.report(monitorEvent:)(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A56E660()
{
  return swift_deallocObject();
}

uint64_t sub_23A56E670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_23A56E6CC(a1, &qword_2569943E8);
}

void sub_23A56E6CC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t storeEnumTagSinglePayload for DTTransportDaemon.DTTransportRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23A56E75C + 4 * byte_23A5A0BD0[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23A56E790 + 4 * byte_23A5A0BCB[v4]))();
}

uint64_t sub_23A56E790(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A56E798(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A56E7A0);
  return result;
}

uint64_t sub_23A56E7AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A56E7B4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23A56E7B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A56E7C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DTTransportDaemon.DTTransportRequest.CodingKeys()
{
  return &type metadata for DTTransportDaemon.DTTransportRequest.CodingKeys;
}

unint64_t sub_23A56E7E0()
{
  unint64_t result;

  result = qword_256997B00[0];
  if (!qword_256997B00[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A10EC, &type metadata for DTTransportDaemon.DTTransportRequest.CodingKeys);
    atomic_store(result, qword_256997B00);
  }
  return result;
}

unint64_t sub_23A56E828()
{
  unint64_t result;

  result = qword_256997C10;
  if (!qword_256997C10)
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A105C, &type metadata for DTTransportDaemon.DTTransportRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256997C10);
  }
  return result;
}

unint64_t sub_23A56E870()
{
  unint64_t result;

  result = qword_256997C18[0];
  if (!qword_256997C18[0])
  {
    result = MEMORY[0x23B8520D0](&unk_23A5A1084, &type metadata for DTTransportDaemon.DTTransportRequest.CodingKeys);
    atomic_store(result, qword_256997C18);
  }
  return result;
}

uint64_t sub_23A56E8B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6580600 && a2 == 0xE300000000000000;
  if (v2 || (sub_23A59F064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000 || (sub_23A59F064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746567726174 && a2 == 0xE600000000000000 || (sub_23A59F064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7972616D697270 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23A59F064();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23A56EAD0()
{
  return sub_23A548F60();
}

uint64_t sub_23A56EB04()
{
  return sub_23A56AE84();
}

uint64_t sub_23A56EB1C()
{
  uint64_t v0;

  v0 = sub_23A59E6A4();
  __swift_allocate_value_buffer(v0, qword_256997CA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256997CA8);
  sub_23A59E3F8();
  return sub_23A59E698();
}

uint64_t DTSyncDaemon._persistentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
  swift_beginAccess();
  return sub_23A53ABC0(v3, a1, type metadata accessor for DTSyncDaemon.PersistentData);
}

uint64_t DTSyncDaemon._persistentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
  swift_beginAccess();
  sub_23A585630(a1, v3, type metadata accessor for DTSyncDaemon.PersistentData);
  return swift_endAccess();
}

uint64_t (*DTSyncDaemon._persistentData.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t DTSyncDaemon.unownedExecutor.getter()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

uint64_t DTSyncDaemon.__allocating_init(daemon:environment:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_23A584270(a1, a2);
  swift_release();
  return v4;
}

uint64_t DTSyncDaemon.init(daemon:environment:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_23A584270(a1, a2);
  swift_release();
  return v2;
}

uint64_t DTSyncDaemon.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994450);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994458);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - v9;
  v39 = v0;
  v11 = (_QWORD *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__eventContinuations);
  swift_beginAccess();
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 64);
  v40 = *v11 + 64;
  v14 = 1 << *(_BYTE *)(v12 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v42 = v12;
  v37 = v41 - 1;
  v38 = v11;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v19 = &qword_256994460;
  if (!v16)
    goto LABEL_8;
LABEL_6:
  v20 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  v21 = v20 | (v18 << 6);
  while (2)
  {
    v22 = *(_QWORD *)(v42 + 56);
    *(_QWORD *)v8 = *(_QWORD *)(*(_QWORD *)(v42 + 48) + 8 * v21);
    v23 = v22 + *(_QWORD *)(v2 + 72) * v21;
    v24 = v19;
    v25 = __swift_instantiateConcreteTypeFromMangledName(v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(&v8[*(int *)(v25 + 48)], v23, v1);
    v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
    v27 = v25;
    v19 = v24;
    v26(v8, 0, 1, v27);
    while (1)
    {
      sub_23A53AAEC((uint64_t)v8, (uint64_t)v10, &qword_256994458);
      v32 = __swift_instantiateConcreteTypeFromMangledName(v19);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v10, 1, v32) == 1)
      {
        swift_release();
        *v38 = MEMORY[0x24BEE4B00];
        swift_bridgeObjectRelease();
        v33 = v39;
        swift_weakDestroy();

        swift_release();
        v34 = v33 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__environment;
        v35 = sub_23A59E5B4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
        sub_23A53AC04(v33 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData, type metadata accessor for DTSyncDaemon.PersistentData);
        sub_23A53B9B4(v33 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__migrateTime, qword_256993A90);
        swift_bridgeObjectRelease();
        return v33;
      }
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v10[*(int *)(v32 + 48)], v1);
      sub_23A59EAE8();
      result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      if (v16)
        goto LABEL_6;
LABEL_8:
      v28 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v28 < v41)
      {
        v29 = *(_QWORD *)(v40 + 8 * v28);
        if (v29)
          goto LABEL_11;
        v30 = v18 + 2;
        ++v18;
        if (v28 + 1 < v41)
        {
          v29 = *(_QWORD *)(v40 + 8 * v30);
          if (v29)
            goto LABEL_14;
          v18 = v28 + 1;
          if (v28 + 2 < v41)
          {
            v29 = *(_QWORD *)(v40 + 8 * (v28 + 2));
            if (v29)
            {
              v28 += 2;
              goto LABEL_11;
            }
            v30 = v28 + 3;
            v18 = v28 + 2;
            if (v28 + 3 < v41)
              break;
          }
        }
      }
LABEL_25:
      v31 = __swift_instantiateConcreteTypeFromMangledName(v19);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v8, 1, 1, v31);
      v16 = 0;
    }
    v29 = *(_QWORD *)(v40 + 8 * v30);
    if (v29)
    {
LABEL_14:
      v28 = v30;
LABEL_11:
      v16 = (v29 - 1) & v29;
      v21 = __clz(__rbit64(v29)) + (v28 << 6);
      v18 = v28;
      continue;
    }
    break;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v41)
    {
      v18 = v37;
      goto LABEL_25;
    }
    v29 = *(_QWORD *)(v40 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t DTSyncDaemon.__deallocating_deinit()
{
  DTSyncDaemon.deinit();
  return swift_deallocClassInstance();
}

uint64_t DTSyncDaemon.summary.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[12] = v0;
  v2 = sub_23A59F040();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = swift_task_alloc();
  v3 = sub_23A59E338();
  v1[16] = v3;
  v1[17] = *(_QWORD *)(v3 - 8);
  v1[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_256993A90);
  v1[19] = swift_task_alloc();
  v4 = sub_23A59E32C();
  v1[20] = v4;
  v1[21] = *(_QWORD *)(v4 - 8);
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
  v1[24] = swift_task_alloc();
  v5 = sub_23A59E2B4();
  v1[25] = v5;
  v1[26] = *(_QWORD *)(v5 - 8);
  v1[27] = swift_task_alloc();
  sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A56F2D4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36[3];

  v1 = *(_QWORD *)(v0 + 96);
  sub_23A59E2A8();
  sub_23A59E9BC();
  strcpy((char *)v36, "ckEngine=");
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v36, "ckContainer=");
  BYTE5(v36[1]) = 0;
  HIWORD(v36[1]) = -5120;
  v2 = objc_msgSend(*(id *)(v1 + 24), sel_containerIdentifier);
  if (v2)
  {
    v3 = v2;
    sub_23A59E9A4();

  }
  v35 = (uint64_t *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 96);
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v36, "ckState=");
  BYTE1(v36[1]) = 0;
  WORD1(v36[1]) = 0;
  HIDWORD(v36[1]) = -402653184;
  v6 = (_QWORD *)(v5 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
  swift_beginAccess();
  v7 = type metadata accessor for DTSyncDaemon.PersistentData(0);
  sub_23A549090((uint64_t)v6 + *(int *)(v7 + 20), v4, &qword_256993040);
  v8 = sub_23A59E848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8);
  sub_23A53B9B4(v4, &qword_256993040);
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v36, "alarms=");
  v36[1] = 0xE700000000000000;
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*v6 + 16);
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v36, "timers=");
  v36[1] = 0xE700000000000000;
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v6[1] + 16);
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v5 + 40) & 1) == 0)
    sub_23A59E9BC();
  v9 = *(_QWORD *)(v0 + 160);
  v10 = *(_QWORD *)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__migrateTime;
  swift_beginAccess();
  sub_23A549090(v12, v11, qword_256993A90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    sub_23A53B9B4(*(_QWORD *)(v0 + 152), qword_256993A90);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 184);
    v15 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 120);
    v33 = *(_QWORD *)(v0 + 112);
    v34 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, _QWORD))(v15 + 32))(v13, *(_QWORD *)(v0 + 152));
    sub_23A59E59C();
    sub_23A59E2FC();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    sub_23A59E320();
    v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v21(v14, v20);
    v36[0] = 0;
    v36[1] = 0xE000000000000000;
    sub_23A59E9E0();
    *(_QWORD *)(v0 + 88) = sub_23A59F124();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 104))(v19, *MEMORY[0x24BE29E98], v34);
    sub_23A584958();
    sub_23A59F058();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v19, v34);
    sub_23A59E9BC();
    swift_bridgeObjectRelease();
    v21(v13, v20);
  }
  sub_23A59E9E0();
  *v35 = MEMORY[0x24BEE4AF8];
  v22 = swift_task_alloc();
  *(_QWORD *)(v22 + 16) = v35;
  v23 = swift_bridgeObjectRetain();
  sub_23A584710(v23, (void (*)(uint64_t, uint64_t, uint64_t))sub_23A584470, v22, &qword_2569946F0, type metadata accessor for DTSyncedAlarm);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v24 = swift_task_alloc();
  *(_QWORD *)(v24 + 16) = v35;
  v25 = swift_bridgeObjectRetain();
  sub_23A584710(v25, (void (*)(uint64_t, uint64_t, uint64_t))sub_23A5845C0, v24, &qword_2569946E8, type metadata accessor for DTSyncedTimer);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v36[0] = *v35;
  swift_bridgeObjectRetain_n();
  sub_23A563058(v36);
  swift_bridgeObjectRelease();
  v26 = v36[0];
  v27 = *(_QWORD *)(v36[0] + 16);
  if (v27)
  {
    swift_retain();
    v28 = v26 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      v28 += 16;
      --v27;
    }
    while (v27);
    swift_release();
  }
  v30 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 216);
  v31 = *(_QWORD *)(v0 + 200);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xE000000000000000);
}

Swift::Void __swiftcall DTSyncDaemon.activate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23A59E638();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A59E3EC();
  v6 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v7 = (void *)sub_23A59E998();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithSuiteName_, v7);

  if (v8)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE2D460], v2);
    sub_23A59E62C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v9 = sub_23A59EBD8();
    swift_bridgeObjectRelease();

    *(_BYTE *)(v1 + 40) = (v9 == 2) | v9 & 1;
  }
  sub_23A56FB4C();
  sub_23A5703DC();
  sub_23A5708B0();
}

void sub_23A56FB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  int v28;
  id v29;
  id v30;
  id v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  char *v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  void *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  id v58;
  id v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *);
  unsigned int v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  unint64_t v85;
  uint64_t v86;

  v86 = *MEMORY[0x24BDAC8D0];
  v75 = type metadata accessor for DTSyncDaemon.PersistentData(0);
  v1 = MEMORY[0x24BDAC7A8](v75);
  v81 = (uint64_t *)((char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v70 - v3;
  v5 = sub_23A59E104();
  v78 = *(_QWORD *)(v5 - 8);
  v79 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993228);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A59E164();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v70 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v77 = (char *)&v70 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v76 = (char *)&v70 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v70 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v70 - v26;
  v82 = v0;
  sub_23A59E554();
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  v80 = v27;
  if (v28 != 1)
  {
    v74 = v4;
    v41 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v41(v25, v10, v11);
    v41(v27, v25, v11);
    v40 = v27;
    goto LABEL_5;
  }
  sub_23A53B9B4((uint64_t)v10, &qword_256993228);
  v29 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v84 = 0;
  v30 = objc_msgSend(v29, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 14, 1, 0, 0, &v84);

  v31 = v84;
  if (v30)
  {
    v74 = v4;
    sub_23A59E140();
    v32 = v31;

    v84 = (id)sub_23A59E428();
    v85 = v33;
    v72 = *MEMORY[0x24BDCD7A0];
    v34 = v78;
    v71 = *(void (**)(char *))(v78 + 104);
    v35 = v79;
    v71(v7);
    sub_23A56DBE0();
    v36 = v77;
    sub_23A59E158();
    v73 = v15;
    v37 = *(void (**)(char *, uint64_t))(v34 + 8);
    v37(v7, v35);
    swift_bridgeObjectRelease();
    v38 = *(void (**)(char *, uint64_t))(v12 + 8);
    v38(v18, v11);
    v84 = (id)0xD000000000000010;
    v85 = 0x800000023A5A2A10;
    ((void (*)(char *, _QWORD, uint64_t))v71)(v7, v72, v35);
    v39 = v76;
    sub_23A59E158();
    v37(v7, v35);
    v15 = v73;
    swift_bridgeObjectRelease();
    v38(v36, v11);
    v40 = v80;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v80, v39, v11);
LABEL_5:
    if (qword_256997CA0 != -1)
      swift_once();
    v42 = sub_23A59E6A4();
    __swift_project_value_buffer(v42, (uint64_t)qword_256997CA8);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v40, v11);
    v43 = sub_23A59E68C();
    v44 = sub_23A59EBC0();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = (void *)swift_slowAlloc();
      v84 = v46;
      *(_DWORD *)v45 = 136315138;
      v47 = sub_23A59E14C();
      v83 = sub_23A538FBC(v47, v48, (uint64_t *)&v84);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      v49 = *(void (**)(char *, uint64_t))(v12 + 8);
      v49(v15, v11);
      _os_log_impl(&dword_23A52C000, v43, v44, "Persistent data load: path=%s", v45, 0xCu);
      swift_arrayDestroy();
      v50 = v46;
      v40 = v80;
      MEMORY[0x23B852178](v50, -1, -1);
      MEMORY[0x23B852178](v45, -1, -1);
    }
    else
    {
      v49 = *(void (**)(char *, uint64_t))(v12 + 8);
      v49(v15, v11);
    }

    v51 = sub_23A59E170();
    v53 = v52;
    sub_23A59DFE4();
    swift_allocObject();
    sub_23A59DFD8();
    sub_23A52EAEC(&qword_2569946E0, type metadata accessor for DTSyncDaemon.PersistentData, (uint64_t)&protocol conformance descriptor for DTSyncDaemon.PersistentData);
    v54 = (uint64_t)v74;
    sub_23A59DFCC();
    v49(v40, v11);
    swift_release();
    sub_23A53AAA8(v51, v53);
    v68 = v82 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
    swift_beginAccess();
    v69 = v54;
    goto LABEL_17;
  }
  v55 = v84;
  v56 = (void *)sub_23A59E0F8();

  swift_willThrow();
  if (qword_256997CA0 != -1)
    swift_once();
  v57 = sub_23A59E6A4();
  __swift_project_value_buffer(v57, (uint64_t)qword_256997CA8);
  v58 = v56;
  v59 = v56;
  v60 = sub_23A59E68C();
  v61 = sub_23A59EBC0();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    v63 = (void *)swift_slowAlloc();
    v84 = v63;
    *(_DWORD *)v62 = 136315138;
    swift_getErrorValue();
    v64 = sub_23A59F0C4();
    v83 = sub_23A538FBC(v64, v65, (uint64_t *)&v84);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A52C000, v60, v61, "Persistent data load failed: error=%s", v62, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v63, -1, -1);
    MEMORY[0x23B852178](v62, -1, -1);
  }
  else
  {

  }
  v67 = v81;
  v66 = v82;
  sub_23A52E7B4(v81);

  v68 = v66 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
  swift_beginAccess();
  v69 = (uint64_t)v67;
LABEL_17:
  sub_23A585630(v69, v68, type metadata accessor for DTSyncDaemon.PersistentData);
  swift_endAccess();
  LOBYTE(v84) = 1;
  DTSyncDaemon._report(event:)((DistributedTimersDaemon::DTSyncDaemon::Event)&v84);
}

void sub_23A5703DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;
  uint8_t *v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  os_log_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A59E6F8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v32 - v10;
  v12 = sub_23A59E6A4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + 32))
  {
    if (qword_256997CA0 != -1)
      swift_once();
    __swift_project_value_buffer(v12, (uint64_t)qword_256997CA8);
    v37 = sub_23A59E68C();
    v16 = sub_23A59EBC0();
    if (os_log_type_enabled(v37, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_23A52C000, v37, v16, "SyncEngine start: already started", v17, 2u);
      MEMORY[0x23B852178](v17, -1, -1);
    }

  }
  else
  {
    if (qword_256997CA0 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v12, (uint64_t)qword_256997CA8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v18, v12);
    swift_retain_n();
    v19 = sub_23A59E68C();
    LODWORD(v37) = sub_23A59EBC0();
    if (os_log_type_enabled(v19, (os_log_type_t)v37))
    {
      v33 = v19;
      v34 = v9;
      v35 = v6;
      v36 = v5;
      v20 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v39[0] = v32;
      *(_DWORD *)v20 = 136315138;
      v21 = objc_msgSend(*(id *)(v1 + 24), sel_containerIdentifier);
      if (v21)
      {
        v22 = v21;
        v23 = sub_23A59E9A4();
        v25 = v24;

      }
      else
      {
        v25 = 0xE300000000000000;
        v23 = 7104878;
      }
      v38 = sub_23A538FBC(v23, v25, v39);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      swift_release_n();
      v26 = v33;
      _os_log_impl(&dword_23A52C000, v33, (os_log_type_t)v37, "SyncEngine start: container=%s", v20, 0xCu);
      v27 = v32;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v27, -1, -1);
      MEMORY[0x23B852178](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      v6 = v35;
      v5 = v36;
      v9 = v34;
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    v28 = objc_msgSend(*(id *)(v1 + 24), sel_privateCloudDatabase);
    v29 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
    swift_beginAccess();
    v30 = type metadata accessor for DTSyncDaemon.PersistentData(0);
    sub_23A549090(v29 + *(int *)(v30 + 20), (uint64_t)v4, &qword_256993040);
    sub_23A52EAEC(&qword_2569946D8, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
    swift_unknownObjectRetain();
    sub_23A59E6EC();
    sub_23A59E6E0();
    sub_23A59E590();
    sub_23A59E6D4();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    sub_23A59E890();
    swift_allocObject();
    v31 = sub_23A59E89C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    *(_QWORD *)(v1 + 32) = v31;
    swift_release();
  }
}

void sub_23A5708B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  double v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  char *v30;
  char *v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  double v54;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  MEMORY[0x24BDAC7A8](v0);
  v51 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_23A59E338();
  v46 = *(_QWORD *)(v2 - 8);
  v47 = (void (*)(char *, uint64_t))v2;
  MEMORY[0x24BDAC7A8](v2);
  v45 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23A59E32C();
  v52 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v52 + 64);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v44 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256993A90);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v48 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v44 - v11;
  v13 = sub_23A59E638();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A59E3EC();
  v17 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v18 = (void *)sub_23A59E998();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_initWithSuiteName_, v18);

  if (v19
    && ((*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BE2D458], v13),
        sub_23A59E62C(),
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13),
        v20 = sub_23A59EBD8(),
        swift_bridgeObjectRelease(),
        v19,
        (v20 & 1) != 0))
  {
    if (qword_256997CA0 != -1)
      swift_once();
    v40 = sub_23A59E6A4();
    __swift_project_value_buffer(v40, (uint64_t)qword_256997CA8);
    v41 = sub_23A59E68C();
    v42 = sub_23A59EBA8();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_23A52C000, v41, v42, "migrate: skip already migrated", v43, 2u);
      MEMORY[0x23B852178](v43, -1, -1);
    }

  }
  else
  {
    v21 = v53 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__migrateTime;
    swift_beginAccess();
    sub_23A549090(v21, (uint64_t)v12, qword_256993A90);
    v22 = v52;
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48))(v12, 1, v4);
    sub_23A53B9B4((uint64_t)v12, qword_256993A90);
    if (v23 == 1)
    {
      v24 = sub_23A582A18(0x20000000000001uLL);
      if (v24 == 0x20000000000000)
        v25 = 15.0;
      else
        v25 = (double)v24 * 1.11022302e-16 * 10.0 + 5.0;
      if (qword_256997CA0 != -1)
        swift_once();
      v26 = sub_23A59E6A4();
      __swift_project_value_buffer(v26, (uint64_t)qword_256997CA8);
      v27 = sub_23A59E68C();
      v28 = sub_23A59EBC0();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v29 = 134217984;
        v54 = v25;
        sub_23A59ED1C();
        _os_log_impl(&dword_23A52C000, v27, v28, "migrate: waiting %f minutes", v29, 0xCu);
        MEMORY[0x23B852178](v29, -1, -1);
      }

      v30 = v45;
      sub_23A59E59C();
      v31 = v49;
      sub_23A59E2FC();
      (*(void (**)(char *, _QWORD))(v46 + 8))(v30, v47);
      sub_23A59F130();
      v32 = v50;
      sub_23A59E314();
      v47 = *(void (**)(char *, uint64_t))(v22 + 8);
      v47(v31, v4);
      v33 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
      v34 = (uint64_t)v48;
      v33(v48, v32, v4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v34, 0, 1, v4);
      swift_beginAccess();
      sub_23A5490EC(v34, v21, qword_256993A90);
      swift_endAccess();
      v35 = sub_23A59EAB8();
      v36 = (uint64_t)v51;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v51, 1, 1, v35);
      v37 = swift_allocObject();
      swift_weakInit();
      v33(v31, v32, v4);
      v38 = (*(unsigned __int8 *)(v22 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      v39 = (char *)swift_allocObject();
      *((_QWORD *)v39 + 2) = 0;
      *((_QWORD *)v39 + 3) = 0;
      *((_QWORD *)v39 + 4) = v37;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v39[v38], v31, v4);
      sub_23A5786B4(v36, (uint64_t)&unk_2569946D0, (uint64_t)v39);
      swift_release();
      v47(v32, v4);
    }
  }
}

Swift::Void __swiftcall DTSyncDaemon.invalidate()()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  int v17;
  uint8_t *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint8_t *v47;
  os_log_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994450);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v49 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994458);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v44 - v9;
  v11 = sub_23A59E6A4();
  v12 = *(uint64_t **)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + 32))
  {
    if (qword_256997CA0 == -1)
      goto LABEL_3;
    goto LABEL_38;
  }
  while (1)
  {
    v28 = (uint64_t *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__eventContinuations);
    v14 = 1;
    swift_beginAccess();
    v46 = v28;
    v11 = *v28;
    v29 = *(_QWORD *)(v11 + 64);
    v47 = (uint8_t *)(v11 + 64);
    v30 = 1 << *(_BYTE *)(v11 + 32);
    v31 = -1;
    if (v30 < 64)
      v31 = ~(-1 << v30);
    v1 = v31 & v29;
    v48 = (os_log_t)((unint64_t)(v30 + 63) >> 6);
    v45 = (char *)&v48[-1].isa + 7;
    swift_bridgeObjectRetain();
    v32 = 0;
    v12 = &qword_256994460;
    if (v1)
    {
      while (1)
      {
        v34 = __clz(__rbit64(v1));
        v1 &= v1 - 1;
        v35 = v34 | (v32 << 6);
LABEL_16:
        v36 = *(_QWORD *)(v11 + 56);
        *(_QWORD *)v8 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v35);
        v37 = v36 + *(_QWORD *)(v3 + 72) * v35;
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994460);
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(&v8[*(int *)(v38 + 48)], v37, v2);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v8, 0, 1, v38);
LABEL_35:
        sub_23A53AAEC((uint64_t)v8, (uint64_t)v10, &qword_256994458);
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994460);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v10, 1, v43) == 1)
          break;
        v33 = &v10[*(int *)(v43 + 48)];
        v14 = (uint64_t)v49;
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v49, v33, v2);
        sub_23A59EAE8();
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v2);
        if (!v1)
          goto LABEL_17;
      }
      swift_release();
      *v46 = MEMORY[0x24BEE4B00];
      swift_bridgeObjectRelease();
      return;
    }
LABEL_17:
    v39 = v32 + 1;
    if (!__OFADD__(v32, 1))
      break;
    __break(1u);
LABEL_38:
    swift_once();
LABEL_3:
    v15 = __swift_project_value_buffer(v11, (uint64_t)qword_256997CA8);
    ((void (*)(uint64_t, uint64_t, uint64_t))v12[2])(v14, v15, v11);
    swift_retain_n();
    v16 = sub_23A59E68C();
    v17 = sub_23A59EBC0();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      LODWORD(v45) = v17;
      v46 = v12;
      v48 = v16;
      v18 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v51[0] = v44;
      v47 = v18;
      *(_DWORD *)v18 = 136315138;
      v19 = objc_msgSend(*(id *)(v1 + 24), sel_containerIdentifier);
      if (v19)
      {
        v20 = v19;
        v21 = sub_23A59E9A4();
        v23 = v22;

        v24 = v21;
      }
      else
      {
        v23 = 0xE300000000000000;
        v24 = 7104878;
      }
      v25 = v47;
      v50 = sub_23A538FBC(v24, v23, v51);
      sub_23A59ED1C();
      swift_release_n();
      swift_bridgeObjectRelease();
      v26 = v48;
      _os_log_impl(&dword_23A52C000, v48, (os_log_type_t)v45, "SyncEngine stop: container=%s", v25, 0xCu);
      v27 = v44;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v27, -1, -1);
      MEMORY[0x23B852178](v25, -1, -1);

      ((void (*)(uint64_t, uint64_t))v46[1])(v14, v11);
    }
    else
    {

      swift_release_n();
      ((void (*)(uint64_t, uint64_t))v12[1])(v14, v11);
    }
    *(_QWORD *)(v1 + 32) = 0;
    swift_release();
  }
  if (v39 >= (uint64_t)v48)
    goto LABEL_34;
  v40 = *(_QWORD *)&v47[8 * v39];
  if (v40)
  {
LABEL_20:
    v1 = (v40 - 1) & v40;
    v35 = __clz(__rbit64(v40)) + (v39 << 6);
    v32 = v39;
    goto LABEL_16;
  }
  v41 = v32 + 2;
  ++v32;
  if (v39 + 1 >= (uint64_t)v48)
    goto LABEL_34;
  v40 = *(_QWORD *)&v47[8 * v41];
  if (v40)
  {
LABEL_23:
    v39 = v41;
    goto LABEL_20;
  }
  v32 = v39 + 1;
  if (v39 + 2 >= (uint64_t)v48)
    goto LABEL_34;
  v40 = *(_QWORD *)&v47[8 * v39 + 16];
  if (v40)
  {
    v39 += 2;
    goto LABEL_20;
  }
  v41 = v39 + 3;
  v32 = v39 + 2;
  if (v39 + 3 >= (uint64_t)v48)
  {
LABEL_34:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994460);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v8, 1, 1, v42);
    v1 = 0;
    goto LABEL_35;
  }
  v40 = *(_QWORD *)&v47[8 * v41];
  if (v40)
    goto LABEL_23;
  while (1)
  {
    v39 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v39 >= (uint64_t)v48)
    {
      v32 = (uint64_t)v45;
      goto LABEL_34;
    }
    v40 = *(_QWORD *)&v47[8 * v39];
    ++v41;
    if (v40)
      goto LABEL_20;
  }
  __break(1u);
}

uint64_t DTSyncDaemon.handleDiagnosticsRequest(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = sub_23A59E638();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = sub_23A59E5C0();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
  v3[11] = sub_23A59EA7C();
  v3[12] = v6;
  return swift_task_switch();
}

uint64_t sub_23A57151C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  int v18;
  unsigned __int8 *v19;
  int v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  int v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == *MEMORY[0x24BE2D3E8])
  {
    v5 = *(unsigned __int8 **)(v0 + 80);
    (*(void (**)(unsigned __int8 *, _QWORD))(*(_QWORD *)(v0 + 72) + 96))(v5, *(_QWORD *)(v0 + 64));
    v6 = *v5;
    if (qword_256997CA0 != -1)
      swift_once();
    v7 = sub_23A59E6A4();
    __swift_project_value_buffer(v7, (uint64_t)qword_256997CA8);
    v8 = sub_23A59E68C();
    v9 = sub_23A59EBC0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v10 = 67109120;
      *(_DWORD *)(v0 + 116) = v6;
      sub_23A59ED1C();
      _os_log_impl(&dword_23A52C000, v8, v9, "syncConfigure: %{BOOL}d", v10, 8u);
      MEMORY[0x23B852178](v10, -1, -1);
    }

    *(_BYTE *)(*(_QWORD *)(v0 + 32) + 40) = v6;
    sub_23A59E3EC();
    v11 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
    v12 = (void *)sub_23A59E998();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v11, sel_initWithSuiteName_, v12);

    if (v13)
    {
      v15 = *(_QWORD *)(v0 + 48);
      v14 = *(_QWORD *)(v0 + 56);
      v16 = *(_QWORD *)(v0 + 40);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v14, *MEMORY[0x24BE2D460], v16);
      sub_23A59E62C();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
      v17 = (void *)sub_23A59E998();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_setBool_forKey_, v6, v17);

    }
  }
  else
  {
    v18 = v4;
    if (v4 != *MEMORY[0x24BE2D3E0])
    {
      v27 = *MEMORY[0x24BE2D3F0];
      sub_23A59E614();
      if (v18 == v27)
      {
        sub_23A59E620();
        swift_willThrow();
      }
      else
      {
        v36 = *(_QWORD *)(v0 + 72);
        v35 = *(_QWORD *)(v0 + 80);
        v37 = *(_QWORD *)(v0 + 64);
        sub_23A59E620();
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      }
      swift_task_dealloc();
      swift_task_dealloc();
      v34 = *(uint64_t (**)(void))(v0 + 8);
      return v34();
    }
    v19 = *(unsigned __int8 **)(v0 + 80);
    (*(void (**)(unsigned __int8 *, _QWORD))(*(_QWORD *)(v0 + 72) + 96))(v19, *(_QWORD *)(v0 + 64));
    v20 = *v19;
    if (qword_256997CA0 != -1)
      swift_once();
    v21 = sub_23A59E6A4();
    __swift_project_value_buffer(v21, (uint64_t)qword_256997CA8);
    v22 = sub_23A59E68C();
    v23 = sub_23A59EBC0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v24 = 67109120;
      *(_DWORD *)(v0 + 112) = v20;
      sub_23A59ED1C();
      _os_log_impl(&dword_23A52C000, v22, v23, "syncMigrate: force=%{BOOL}d", v24, 8u);
      MEMORY[0x23B852178](v24, -1, -1);
    }

    if (v20)
    {
      v25 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 104) = v25;
      *v25 = v0;
      v25[1] = sub_23A571A1C;
      return sub_23A571B4C();
    }
    sub_23A5708B0();
  }
  v28 = *(uint64_t **)(v0 + 16);
  v29 = sub_23A59E4C4();
  v30 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2F0];
  v28[3] = v29;
  v28[4] = sub_23A52EAEC(&qword_256993998, v30, MEMORY[0x24BE2D2E8]);
  __swift_allocate_boxed_opaque_existential_1(v28);
  sub_23A59E47C();
  v31 = *MEMORY[0x24BE2D368];
  v32 = sub_23A59E53C();
  v33 = *(_QWORD *)(v32 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v33 + 104))(v28, v31, v32);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v32);
  swift_task_dealloc();
  swift_task_dealloc();
  v34 = *(uint64_t (**)(void))(v0 + 8);
  return v34();
}

uint64_t sub_23A571A1C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A571A68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(uint64_t **)(v0 + 16);
  v2 = sub_23A59E4C4();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2F0];
  v1[3] = v2;
  v1[4] = sub_23A52EAEC(&qword_256993998, v3, MEMORY[0x24BE2D2E8]);
  __swift_allocate_boxed_opaque_existential_1(v1);
  sub_23A59E47C();
  v4 = *MEMORY[0x24BE2D368];
  v5 = sub_23A59E53C();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104))(v1, v4, v5);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A571B4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[21] = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_256993A90);
  v1[22] = swift_task_alloc();
  v2 = sub_23A59E638();
  v1[23] = v2;
  v1[24] = *(_QWORD *)(v2 - 8);
  v1[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  v1[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  v1[27] = swift_task_alloc();
  sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
  v1[28] = sub_23A59EA7C();
  v1[29] = v3;
  return swift_task_switch();
}

uint64_t sub_23A571C4C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t Strong;
  void *v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_256997CA0 != -1)
    swift_once();
  v1 = sub_23A59E6A4();
  *(_QWORD *)(v0 + 240) = __swift_project_value_buffer(v1, (uint64_t)qword_256997CA8);
  v2 = sub_23A59E68C();
  v3 = sub_23A59EBC0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23A52C000, v2, v3, "migrate start", v4, 2u);
    MEMORY[0x23B852178](v4, -1, -1);
  }

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 248) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 256) = OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_timerDaemon;
    type metadata accessor for DTDaemon();
    sub_23A52EAEC(&qword_256993528, (uint64_t (*)(uint64_t))type metadata accessor for DTDaemon, (uint64_t)&protocol conformance descriptor for DTDaemon);
    sub_23A59EA7C();
    return swift_task_switch();
  }
  else
  {
    sub_23A59E614();
    v7 = (void *)sub_23A59E620();
    swift_willThrow();
    v8 = v7;
    v9 = v7;
    v10 = sub_23A59E68C();
    v11 = sub_23A59EBB4();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v20 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_getErrorValue();
      v14 = sub_23A59F0C4();
      *(_QWORD *)(v0 + 160) = sub_23A538FBC(v14, v15, &v20);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A52C000, v10, v11, "### migrate: failed: error=%s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v13, -1, -1);
      MEMORY[0x23B852178](v12, -1, -1);

    }
    else
    {

    }
    v17 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 176);
    v18 = sub_23A59E32C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
    v19 = v17 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__migrateTime;
    swift_beginAccess();
    sub_23A5490EC(v16, v19, qword_256993A90);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A572004()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[31] + v0[32]);
  swift_beginAccess();
  v0[33] = *v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A572064()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 264);
  swift_release();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v2;
    *v2 = v0;
    v2[1] = sub_23A572340;
    return DTTimerDaemon._fetchTimers(matching:)((uint64_t)sub_23A5340F0, 0);
  }
  else
  {
    sub_23A59E614();
    v4 = (void *)sub_23A59E620();
    swift_willThrow();
    v5 = v4;
    v6 = v4;
    v7 = sub_23A59E68C();
    v8 = sub_23A59EBB4();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v17 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_getErrorValue();
      v11 = sub_23A59F0C4();
      *(_QWORD *)(v0 + 160) = sub_23A538FBC(v11, v12, &v17);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A52C000, v7, v8, "### migrate: failed: error=%s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v10, -1, -1);
      MEMORY[0x23B852178](v9, -1, -1);

    }
    else
    {

    }
    v14 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 176);
    v15 = sub_23A59E32C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 1, 1, v15);
    v16 = v14 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__migrateTime;
    swift_beginAccess();
    sub_23A5490EC(v13, v16, qword_256993A90);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A572340(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 280) = a1;
  *(_QWORD *)(v3 + 288) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5723B4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  int v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  void *v90;
  void *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  void *v96;
  _QWORD *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = v1 >> 62;
  if (v1 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    v3 = sub_23A59EED8();
    v4 = *(_QWORD *)(v99 + 280);
    if (v3)
      goto LABEL_3;
LABEL_45:
    v95 = 0;
LABEL_46:
    swift_bridgeObjectRelease();
    sub_23A59E3EC();
    v71 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
    v72 = (void *)sub_23A59E998();
    swift_bridgeObjectRelease();
    v73 = objc_msgSend(v71, sel_initWithSuiteName_, v72);

    if (v73)
    {
      v75 = *(_QWORD *)(v99 + 192);
      v74 = *(_QWORD *)(v99 + 200);
      v76 = *(_QWORD *)(v99 + 184);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v75 + 104))(v74, *MEMORY[0x24BE2D458], v76);
      sub_23A59E62C();
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
      v77 = (void *)sub_23A59E998();
      swift_bridgeObjectRelease();
      objc_msgSend(v73, sel_setBool_forKey_, 1, v77);

    }
    swift_bridgeObjectRetain();
    v78 = sub_23A59E68C();
    v79 = sub_23A59EBC0();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = swift_slowAlloc();
      *(_DWORD *)v80 = 134218240;
      *(_QWORD *)(v99 + 136) = v95;
      sub_23A59ED1C();
      *(_WORD *)(v80 + 12) = 2048;
      if (v2)
      {
        swift_bridgeObjectRetain();
        v81 = sub_23A59EED8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v81 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)(v99 + 144) = v81;
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v78, v79, "migrate finished: added=%ld, total=%ld", (uint8_t *)v80, 0x16u);
      MEMORY[0x23B852178](v80, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    goto LABEL_55;
  }
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v4 = swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_45;
LABEL_3:
  v87 = v2;
  v2 = 0;
  v5 = 0;
  v97 = (_QWORD *)(*(_QWORD *)(v99 + 168) + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
  v88 = v1;
  v98 = v1 & 0xC000000000000001;
  v89 = v4 + 32;
  v96 = *(void **)(v99 + 288);
  v92 = v3;
  while (1)
  {
    if (v98)
      v6 = (id)MEMORY[0x23B85198C](v2, *(_QWORD *)(v99 + 280));
    else
      v6 = *(id *)(v89 + 8 * v2);
    v7 = v6;
    v1 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v8 = objc_msgSend(v6, sel_mtAlarm);
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v7, sel_identifier);
      v11 = sub_23A59E9A4();
      v13 = v12;

      swift_beginAccess();
      v14 = *v97;
      if (*(_QWORD *)(*v97 + 16))
      {
        v15 = sub_23A563F00(v11, v13);
        v16 = *(_QWORD *)(v99 + 216);
        if ((v17 & 1) != 0)
        {
          v18 = v15;
          v19 = *(_QWORD *)(v14 + 56);
          v20 = type metadata accessor for DTSyncedAlarm(0);
          v21 = *(_QWORD *)(v20 - 8);
          sub_23A53ABC0(v19 + *(_QWORD *)(v21 + 72) * v18, v16, type metadata accessor for DTSyncedAlarm);
          v22 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56);
          v3 = v92;
          v22(v16, 0, 1, v20);
        }
        else
        {
          v20 = type metadata accessor for DTSyncedAlarm(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
        }
        v1 = v2 + 1;
      }
      else
      {
        v37 = *(_QWORD *)(v99 + 216);
        v20 = type metadata accessor for DTSyncedAlarm(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v37, 1, 1, v20);
      }
      v38 = *(_QWORD *)(v99 + 216);
      swift_bridgeObjectRelease();
      swift_endAccess();
      type metadata accessor for DTSyncedAlarm(0);
      v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v38, 1, v20);
      sub_23A53B9B4(v38, &qword_2569945F8);
      if (v39 != 1)
      {
        v7 = v7;
        v40 = sub_23A59E68C();
        v41 = sub_23A59EBC0();
        if (os_log_type_enabled(v40, v41))
        {
          v42 = swift_slowAlloc();
          v93 = v1;
          v43 = swift_slowAlloc();
          v100 = v43;
          *(_DWORD *)v42 = 136315138;
          v90 = v9;
          v44 = objc_msgSend(v7, sel_identifier);
          v45 = sub_23A59E9A4();
          v47 = v46;

          *(_QWORD *)(v42 + 4) = sub_23A538FBC(v45, v47, &v100);
          v3 = v92;
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_23A52C000, v40, v41, "migrate: skip existing alarm: id=%s", (uint8_t *)v42, 0xCu);
          swift_arrayDestroy();
          v48 = v43;
          v1 = v93;
          MEMORY[0x23B852178](v48, -1, -1);
          MEMORY[0x23B852178](v42, -1, -1);

LABEL_26:
          goto LABEL_5;
        }
        goto LABEL_4;
      }
      sub_23A573A68(v9);
      if (v96)
      {
        v62 = v9;
        v9 = v7;
        goto LABEL_39;
      }
      goto LABEL_32;
    }
    v23 = objc_msgSend(v7, sel_mtTimer);
    if (!v23)
      goto LABEL_26;
    v9 = v23;
    v24 = objc_msgSend(v7, sel_identifier);
    v25 = sub_23A59E9A4();
    v27 = v26;

    swift_beginAccess();
    v28 = v97[1];
    if (*(_QWORD *)(v28 + 16))
    {
      v29 = sub_23A563F00(v25, v27);
      v30 = *(_QWORD *)(v99 + 208);
      if ((v31 & 1) != 0)
      {
        v32 = v29;
        v33 = *(_QWORD *)(v28 + 56);
        v34 = type metadata accessor for DTSyncedTimer(0);
        v35 = *(_QWORD *)(v34 - 8);
        sub_23A53ABC0(v33 + *(_QWORD *)(v35 + 72) * v32, v30, type metadata accessor for DTSyncedTimer);
        v36 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56);
        v3 = v92;
        v36(v30, 0, 1, v34);
      }
      else
      {
        v34 = type metadata accessor for DTSyncedTimer(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v30, 1, 1, v34);
      }
      v1 = v2 + 1;
    }
    else
    {
      v49 = *(_QWORD *)(v99 + 208);
      v34 = type metadata accessor for DTSyncedTimer(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v49, 1, 1, v34);
    }
    v50 = *(_QWORD *)(v99 + 208);
    swift_bridgeObjectRelease();
    swift_endAccess();
    type metadata accessor for DTSyncedTimer(0);
    v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v50, 1, v34);
    sub_23A53B9B4(v50, &qword_2569945F0);
    if (v51 != 1)
    {
      v7 = v7;
      v40 = sub_23A59E68C();
      v53 = sub_23A59EBC0();
      if (os_log_type_enabled(v40, v53))
      {
        v54 = swift_slowAlloc();
        v94 = v1;
        v55 = swift_slowAlloc();
        v100 = v55;
        *(_DWORD *)v54 = 136315138;
        v56 = objc_msgSend(v7, sel_identifier);
        v57 = sub_23A59E9A4();
        v91 = v9;
        v59 = v58;

        v60 = v57;
        v3 = v92;
        *(_QWORD *)(v54 + 4) = sub_23A538FBC(v60, v59, &v100);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23A52C000, v40, v53, "migrate: skip existing timer: id=%s", (uint8_t *)v54, 0xCu);
        swift_arrayDestroy();
        v61 = v55;
        v1 = v94;
        MEMORY[0x23B852178](v61, -1, -1);
        MEMORY[0x23B852178](v54, -1, -1);

        goto LABEL_5;
      }
LABEL_4:

      goto LABEL_5;
    }
    sub_23A573FE0(v9);
    if (v96)
      break;
LABEL_32:

    if (__OFADD__(v5++, 1))
      goto LABEL_43;
    v96 = 0;
LABEL_5:
    ++v2;
    if (v1 == v3)
    {
      v95 = v5;
      v1 = v88;
      v2 = v87;
      goto LABEL_46;
    }
  }
  v62 = v7;
LABEL_39:
  swift_bridgeObjectRelease_n();

  v63 = v96;
  v64 = v96;
  v65 = sub_23A59E68C();
  v66 = sub_23A59EBB4();
  if (os_log_type_enabled(v65, v66))
  {
    v67 = (uint8_t *)swift_slowAlloc();
    v68 = swift_slowAlloc();
    v100 = v68;
    *(_DWORD *)v67 = 136315138;
    swift_getErrorValue();
    v69 = sub_23A59F0C4();
    *(_QWORD *)(v99 + 160) = sub_23A538FBC(v69, v70, &v100);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A52C000, v65, v66, "### migrate: failed: error=%s", v67, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v68, -1, -1);
    MEMORY[0x23B852178](v67, -1, -1);

  }
  else
  {

  }
LABEL_55:
  v83 = *(_QWORD *)(v99 + 168);
  v82 = *(_QWORD *)(v99 + 176);
  v84 = sub_23A59E32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v82, 1, 1, v84);
  v85 = v83 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__migrateTime;
  swift_beginAccess();
  sub_23A5490EC(v82, v85, qword_256993A90);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v99 + 8))();
}

uint64_t sub_23A572F58()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  swift_release();
  v1 = *(void **)(v0 + 288);
  v2 = v1;
  v3 = v1;
  v4 = sub_23A59E68C();
  v5 = sub_23A59EBB4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v8 = sub_23A59F0C4();
    *(_QWORD *)(v0 + 160) = sub_23A538FBC(v8, v9, &v15);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A52C000, v4, v5, "### migrate: failed: error=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v7, -1, -1);
    MEMORY[0x23B852178](v6, -1, -1);

  }
  else
  {

  }
  v11 = *(_QWORD *)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 176);
  v12 = sub_23A59E32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
  v13 = v11 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__migrateTime;
  swift_beginAccess();
  sub_23A5490EC(v10, v13, qword_256993A90);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void DTSyncDaemon.handleRequest(_:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  _BYTE *v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(_BYTE *, uint64_t);
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id *v44;
  _BYTE *v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  int v59;
  id v60;
  _BYTE v61[12];
  int v62;
  os_log_t v63;
  uint64_t v64;
  void (*v65)(_BYTE *, uint64_t, uint64_t);
  uint64_t v66;
  id *v67;
  _BYTE *v68;
  void (*v69)(id *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v4 = v3;
  v73 = a2;
  v74 = a1;
  v75 = sub_23A59E530();
  v5 = *(_QWORD *)(v75 - 8);
  v6 = MEMORY[0x24BDAC7A8](v75);
  v8 = &v61[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v61[-v9];
  v11 = sub_23A59E680();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (id *)&v61[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v19 = (id *)&v61[-v18];
  if (*(_BYTE *)(v2 + 40) == 1)
  {
    v67 = v17;
    if (qword_256997CA0 != -1)
      swift_once();
    v71 = v2;
    v68 = v8;
    v20 = sub_23A59E6A4();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_256997CA8);
    v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    v72((uint64_t)v19, v74, v11);
    v65 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
    v65(v10, v73, v75);
    v66 = v21;
    v22 = sub_23A59E68C();
    v23 = sub_23A59EBC0();
    v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc();
      v70 = v3;
      v26 = v25;
      v64 = swift_slowAlloc();
      v77 = v64;
      *(_DWORD *)v26 = 136315394;
      v69 = (void (*)(id *, uint64_t))(v26 + 4);
      sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
      v63 = v22;
      v27 = sub_23A59F034();
      v76 = sub_23A538FBC(v27, v28, &v77);
      v62 = v24;
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      v69 = *(void (**)(id *, uint64_t))(v12 + 8);
      v69(v19, v11);
      *(_WORD *)(v26 + 12) = 2080;
      sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
      v29 = sub_23A59F034();
      v76 = sub_23A538FBC(v29, v30, &v77);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      v31 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v31(v10, v75);
      v32 = v63;
      _os_log_impl(&dword_23A52C000, v63, (os_log_type_t)v62, "handleRequest: %s, %s", (uint8_t *)v26, 0x16u);
      v33 = v64;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v33, -1, -1);
      v34 = v26;
      v4 = v70;
      MEMORY[0x23B852178](v34, -1, -1);

    }
    else
    {
      v69 = *(void (**)(id *, uint64_t))(v12 + 8);
      v69(v19, v11);
      v31 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v31(v10, v75);

    }
    v35 = v11;
    v36 = v72;
    v72((uint64_t)v16, v74, v11);
    v37 = (*(uint64_t (**)(id *, uint64_t))(v12 + 88))(v16, v11);
    if (v37 == *MEMORY[0x24BE2D4F8])
    {
      (*(void (**)(id *, uint64_t))(v12 + 96))(v16, v11);
      v38 = *v16;
      v39 = objc_msgSend(v38, sel_mtAlarm);
      if (v39)
      {
        v40 = v39;
        sub_23A573A68(v39);
        if (v4)
        {
LABEL_10:

          return;
        }
      }
      else
      {
        v43 = objc_msgSend(v38, sel_mtTimer);
        if (!v43)
          goto LABEL_15;
        v40 = v43;
        sub_23A573FE0(v43);
        if (v4)
          goto LABEL_10;
      }
LABEL_14:

LABEL_15:
      return;
    }
    if (v37 == *MEMORY[0x24BE2D4B0])
    {
      (*(void (**)(id *, uint64_t))(v12 + 96))(v16, v11);
      v38 = *v16;
      v41 = objc_msgSend(v38, sel_mtAlarm);
      if (v41)
      {
        v40 = v41;
        sub_23A574558(v41);
        if (v4)
          goto LABEL_10;
      }
      else
      {
        v56 = objc_msgSend(v38, sel_mtTimer);
        if (!v56)
          goto LABEL_15;
        v40 = v56;
        sub_23A57506C(v56);
        if (v4)
          goto LABEL_10;
      }
      goto LABEL_14;
    }
    if (v37 == *MEMORY[0x24BE2D4A0])
    {
      (*(void (**)(id *, uint64_t))(v12 + 96))(v16, v11);
      v38 = *v16;
      v42 = objc_msgSend(v38, sel_mtAlarm);
      if (v42)
      {
        v40 = v42;
        sub_23A575B9C(v42);
        if (v4)
          goto LABEL_10;
      }
      else
      {
        v58 = objc_msgSend(v38, sel_mtTimer);
        if (!v58)
          goto LABEL_15;
        v40 = v58;
        sub_23A576218(v58);
        if (v4)
          goto LABEL_10;
      }
      goto LABEL_14;
    }
    if (v37 == *MEMORY[0x24BE2D4A8])
    {
      v70 = v4;
      (*(void (**)(id *, uint64_t))(v12 + 96))(v16, v11);

    }
    else
    {
      if (v37 == *MEMORY[0x24BE2D4B8])
      {
        (*(void (**)(id *, uint64_t))(v12 + 96))(v16, v11);
        v38 = *v16;
        v57 = objc_msgSend(v38, sel_mtAlarm);
        if (v57)
        {
          v40 = v57;
          sub_23A5768A0(v57);
          if (v4)
            goto LABEL_10;
        }
        else
        {
          v60 = objc_msgSend(v38, sel_mtTimer);
          if (!v60)
            goto LABEL_15;
          v40 = v60;
          sub_23A576F14(v60);
          if (v4)
            goto LABEL_10;
        }
        goto LABEL_14;
      }
      v59 = *MEMORY[0x24BE2D4F0];
      v70 = v4;
      if (v37 == v59)
      {
        (*(void (**)(id *, uint64_t))(v12 + 96))(v16, v11);
        swift_bridgeObjectRelease();
      }
      else if (v37 == *MEMORY[0x24BE2D4D0]
             || v37 == *MEMORY[0x24BE2D498]
             || v37 == *MEMORY[0x24BE2D4C8]
             || v37 == *MEMORY[0x24BE2D488]
             || v37 != *MEMORY[0x24BE2D490] && v37 != *MEMORY[0x24BE2D478] && v37 != *MEMORY[0x24BE2D4E0])
      {
        v69(v16, v11);
      }
    }
    v44 = (id *)v67;
    v36((uint64_t)v67, v74, v35);
    v45 = v68;
    v65(v68, v73, v75);
    v46 = sub_23A59E68C();
    v47 = sub_23A59EBB4();
    v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      v49 = swift_slowAlloc();
      v74 = swift_slowAlloc();
      v77 = v74;
      *(_DWORD *)v49 = 136315394;
      sub_23A52EAEC(&qword_2569939E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D508], MEMORY[0x24BE2D528]);
      LODWORD(v73) = v48;
      v50 = sub_23A59F034();
      v76 = sub_23A538FBC(v50, v51, &v77);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      v69(v44, v35);
      *(_WORD *)(v49 + 12) = 2080;
      sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
      v52 = v75;
      v53 = sub_23A59F034();
      v76 = sub_23A538FBC(v53, v54, &v77);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      v31(v45, v52);
      _os_log_impl(&dword_23A52C000, v46, (os_log_type_t)v73, "Ignoring non-sync request: %s, %s", (uint8_t *)v49, 0x16u);
      v55 = v74;
      swift_arrayDestroy();
      MEMORY[0x23B852178](v55, -1, -1);
      MEMORY[0x23B852178](v49, -1, -1);
    }
    else
    {
      v69(v44, v35);
      v31(v45, v75);
    }

  }
}

void sub_23A573A68(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _QWORD v39[2];
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42[3];
  uint64_t v43;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DTSyncedAlarm(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (_QWORD *)((char *)v39 - v12);
  sub_23A59ECBC();
  v15 = v14;
  swift_bridgeObjectRelease();
  if (v15)
  {
    DTSyncedAlarm.init(mtAlarm:)(a1, (uint64_t)v13);
    if (qword_256997CA0 != -1)
      swift_once();
    v16 = sub_23A59E6A4();
    __swift_project_value_buffer(v16, (uint64_t)qword_256997CA8);
    sub_23A53ABC0((uint64_t)v13, (uint64_t)v11, type metadata accessor for DTSyncedAlarm);
    v17 = sub_23A59E68C();
    v18 = sub_23A59EBC0();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v40 = v8;
      v21 = v20;
      v41 = v2;
      v42[0] = v20;
      *(_DWORD *)v19 = 136315138;
      v39[1] = v19 + 4;
      sub_23A52EAEC(&qword_256993288, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
      v22 = sub_23A59F034();
      v43 = sub_23A538FBC(v22, v23, v42);
      v2 = v41;
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v11, type metadata accessor for DTSyncedAlarm);
      _os_log_impl(&dword_23A52C000, v17, v18, "addAlarm: %s", v19, 0xCu);
      swift_arrayDestroy();
      v24 = v21;
      v8 = v40;
      MEMORY[0x23B852178](v24, -1, -1);
      MEMORY[0x23B852178](v19, -1, -1);
    }
    else
    {
      sub_23A53AC04((uint64_t)v11, type metadata accessor for DTSyncedAlarm);
    }

    v32 = *v13;
    v33 = v13[1];
    sub_23A53ABC0((uint64_t)v13, (uint64_t)v6, type metadata accessor for DTSyncedAlarm);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23A57759C((uint64_t)v6, v32, v33, &qword_2569945F8, type metadata accessor for DTSyncedAlarm, &qword_256994640);
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994600);
    v34 = sub_23A59E764();
    v35 = *(_QWORD *)(v34 - 8);
    v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_23A5A0B80;
    v38 = (uint64_t *)(v37 + v36);
    *v38 = DTSyncedAlarm.ckRecordID.getter();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v35 + 104))(v38, *MEMORY[0x24BDB8930], v34);
    if (v2[4])
    {
      swift_retain();
      sub_23A59E884();
      swift_release();
      sub_23A59E86C();
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_23A5778F8();
    sub_23A53AC04((uint64_t)v13, type metadata accessor for DTSyncedAlarm);
  }
  else
  {
    if (qword_256997CA0 != -1)
      swift_once();
    v25 = sub_23A59E6A4();
    __swift_project_value_buffer(v25, (uint64_t)qword_256997CA8);
    v41 = a1;
    v26 = sub_23A59E68C();
    v27 = sub_23A59EBC0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v42[0] = v29;
      *(_DWORD *)v28 = 136315138;
      v30 = sub_23A59ECC8();
      v43 = sub_23A538FBC(v30, v31, v42);
      sub_23A59ED1C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v26, v27, "addAlarm: no-target, %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v29, -1, -1);
      MEMORY[0x23B852178](v28, -1, -1);

    }
    else
    {

    }
  }
}

void sub_23A573FE0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v39[2];
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42[3];
  uint64_t v43;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DTSyncedTimer(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (_QWORD *)((char *)v39 - v12);
  sub_23A59ECD4();
  v15 = v14;
  swift_bridgeObjectRelease();
  if (v15)
  {
    DTSyncedTimer.init(mtTimer:)(a1, (uint64_t)v13);
    if (qword_256997CA0 != -1)
      swift_once();
    v16 = sub_23A59E6A4();
    __swift_project_value_buffer(v16, (uint64_t)qword_256997CA8);
    sub_23A53ABC0((uint64_t)v13, (uint64_t)v11, type metadata accessor for DTSyncedTimer);
    v17 = sub_23A59E68C();
    v18 = sub_23A59EBC0();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v40 = v8;
      v21 = v20;
      v41 = v2;
      v42[0] = v20;
      *(_DWORD *)v19 = 136315138;
      v39[1] = v19 + 4;
      sub_23A52EAEC(&qword_2569932C0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
      v22 = sub_23A59F034();
      v43 = sub_23A538FBC(v22, v23, v42);
      v2 = v41;
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v11, type metadata accessor for DTSyncedTimer);
      _os_log_impl(&dword_23A52C000, v17, v18, "addTimer: %s", v19, 0xCu);
      swift_arrayDestroy();
      v24 = v21;
      v8 = v40;
      MEMORY[0x23B852178](v24, -1, -1);
      MEMORY[0x23B852178](v19, -1, -1);
    }
    else
    {
      sub_23A53AC04((uint64_t)v11, type metadata accessor for DTSyncedTimer);
    }

    v32 = *v13;
    v33 = v13[1];
    sub_23A53ABC0((uint64_t)v13, (uint64_t)v6, type metadata accessor for DTSyncedTimer);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23A57759C((uint64_t)v6, v32, v33, &qword_2569945F0, type metadata accessor for DTSyncedTimer, &qword_256994648);
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994600);
    v34 = sub_23A59E764();
    v35 = *(_QWORD *)(v34 - 8);
    v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_23A5A0B80;
    v38 = (_QWORD *)(v37 + v36);
    *v38 = DTSyncedTimer.ckRecordID.getter();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v35 + 104))(v38, *MEMORY[0x24BDB8930], v34);
    if (v2[4])
    {
      swift_retain();
      sub_23A59E884();
      swift_release();
      sub_23A59E86C();
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_23A5778F8();
    sub_23A53AC04((uint64_t)v13, type metadata accessor for DTSyncedTimer);
  }
  else
  {
    if (qword_256997CA0 != -1)
      swift_once();
    v25 = sub_23A59E6A4();
    __swift_project_value_buffer(v25, (uint64_t)qword_256997CA8);
    v41 = a1;
    v26 = sub_23A59E68C();
    v27 = sub_23A59EBC0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v42[0] = v29;
      *(_DWORD *)v28 = 136315138;
      v30 = sub_23A59ECE0();
      v43 = sub_23A538FBC(v30, v31, v42);
      sub_23A59ED1C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v26, v27, "addTimer: no-target, %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v29, -1, -1);
      MEMORY[0x23B852178](v28, -1, -1);

    }
    else
    {

    }
  }
}

void sub_23A574558(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  _QWORD v77[2];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  id v84;
  uint64_t v85;
  uint64_t v86[3];
  uint64_t v87[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569946B8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v82 = (uint64_t)v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v81 = (uint64_t)v77 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v80 = (uint64_t)v77 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v77 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v77 - v17;
  v19 = type metadata accessor for DTSyncedAlarm(0);
  v20 = *(_QWORD **)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v79 = (uint64_t)v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (_QWORD *)((char *)v77 - v23);
  sub_23A59ECBC();
  v26 = v25;
  swift_bridgeObjectRelease();
  if (v26)
  {
    v84 = v18;
    DTSyncedAlarm.init(mtAlarm:)(a1, (uint64_t)v24);
    v28 = *v24;
    v27 = v24[1];
    v83 = v24;
    v78 = v2;
    v29 = (uint64_t *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
    swift_beginAccess();
    v77[1] = v29;
    v30 = *v29;
    if (*(_QWORD *)(v30 + 16))
    {
      swift_bridgeObjectRetain();
      v31 = sub_23A563F00(v28, v27);
      v32 = v19;
      if ((v33 & 1) != 0)
      {
        v34 = (uint64_t)v84;
        sub_23A53ABC0(*(_QWORD *)(v30 + 56) + v20[9] * v31, (uint64_t)v84, type metadata accessor for DTSyncedAlarm);
        v35 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20[7];
        v35(v34, 0, 1, v19);
      }
      else
      {
        v35 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20[7];
        v34 = (uint64_t)v84;
        v35((uint64_t)v84, 1, 1, v19);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20[7];
      v34 = (uint64_t)v84;
      v32 = v19;
      v35((uint64_t)v84, 1, 1, v19);
    }
    v43 = v83;
    swift_endAccess();
    sub_23A53ABC0((uint64_t)v43, (uint64_t)v16, type metadata accessor for DTSyncedAlarm);
    v77[0] = v35;
    v35((uint64_t)v16, 0, 1, v32);
    v44 = (uint64_t)&v6[*(int *)(v4 + 48)];
    sub_23A549090((uint64_t)v16, (uint64_t)v6, &qword_2569945F8);
    sub_23A549090(v34, v44, &qword_2569945F8);
    v45 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v20[6];
    if (v45((uint64_t)v6, 1, v32) == 1)
    {
      sub_23A53B9B4((uint64_t)v16, &qword_2569945F8);
      if (v45(v44, 1, v32) == 1)
      {
        sub_23A53B9B4((uint64_t)v6, &qword_2569945F8);
LABEL_20:
        if (qword_256997CA0 != -1)
          swift_once();
        v49 = sub_23A59E6A4();
        __swift_project_value_buffer(v49, (uint64_t)qword_256997CA8);
        v50 = sub_23A59E68C();
        v51 = sub_23A59EBC0();
        if (os_log_type_enabled(v50, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc();
          v53 = swift_slowAlloc();
          v86[0] = v53;
          *(_DWORD *)v52 = 136315138;
          swift_beginAccess();
          sub_23A52EAEC(&qword_256993288, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
          v54 = sub_23A59F034();
          v85 = sub_23A538FBC(v54, v55, v86);
          sub_23A59ED1C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A52C000, v50, v51, "updateAlarm: unchanged, %s", v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B852178](v53, -1, -1);
          MEMORY[0x23B852178](v52, -1, -1);
        }

        sub_23A53B9B4((uint64_t)v84, &qword_2569945F8);
        v56 = (uint64_t)v43;
LABEL_36:
        sub_23A53AC04(v56, type metadata accessor for DTSyncedAlarm);
        return;
      }
    }
    else
    {
      v46 = v80;
      sub_23A549090((uint64_t)v6, v80, &qword_2569945F8);
      if (v45(v44, 1, v32) != 1)
      {
        v47 = v79;
        sub_23A53BA34(v44, v79, type metadata accessor for DTSyncedAlarm);
        sub_23A52EAEC(&qword_256993290, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
        v48 = sub_23A59E98C();
        sub_23A53AC04(v47, type metadata accessor for DTSyncedAlarm);
        sub_23A53B9B4((uint64_t)v16, &qword_2569945F8);
        sub_23A53AC04(v46, type metadata accessor for DTSyncedAlarm);
        sub_23A53B9B4((uint64_t)v6, &qword_2569945F8);
        if ((v48 & 1) != 0)
          goto LABEL_20;
LABEL_25:
        if (qword_256997CA0 != -1)
          swift_once();
        v57 = sub_23A59E6A4();
        __swift_project_value_buffer(v57, (uint64_t)qword_256997CA8);
        v58 = sub_23A59E68C();
        v59 = sub_23A59EBC0();
        if (os_log_type_enabled(v58, v59))
        {
          v60 = (uint8_t *)swift_slowAlloc();
          v61 = swift_slowAlloc();
          v87[0] = v61;
          *(_DWORD *)v60 = 136315138;
          swift_beginAccess();
          sub_23A52EAEC(&qword_256993288, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
          v62 = sub_23A59F034();
          v85 = sub_23A538FBC(v62, v63, v87);
          sub_23A59ED1C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A52C000, v58, v59, "updateAlarm: %s", v60, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B852178](v61, -1, -1);
          MEMORY[0x23B852178](v60, -1, -1);
        }

        v64 = v81;
        sub_23A549090((uint64_t)v84, v81, &qword_2569945F8);
        if (v45(v64, 1, v32) == 1)
        {
          sub_23A53B9B4(v64, &qword_2569945F8);
          v65 = 0;
        }
        else
        {
          v66 = sub_23A52EAEC(&qword_256994618, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
          v65 = DTSyncedObject.lastKnownRecord.getter(v32, v66);
          sub_23A53AC04(v64, type metadata accessor for DTSyncedAlarm);
        }
        swift_beginAccess();
        v67 = sub_23A52EAEC(&qword_256994618, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
        DTSyncedObject.lastKnownRecord.setter(v65, v32, v67);
        swift_endAccess();
        v68 = *v43;
        v69 = v43[1];
        v70 = v82;
        sub_23A53ABC0((uint64_t)v43, v82, type metadata accessor for DTSyncedAlarm);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v77[0])(v70, 0, 1, v32);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_23A57759C(v70, v68, v69, &qword_2569945F8, type metadata accessor for DTSyncedAlarm, &qword_256994640);
        swift_endAccess();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256994600);
        v71 = sub_23A59E764();
        v72 = *(_QWORD *)(v71 - 8);
        v73 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
        v74 = swift_allocObject();
        *(_OWORD *)(v74 + 16) = xmmword_23A5A0B80;
        v75 = (uint64_t *)(v74 + v73);
        *v75 = DTSyncedAlarm.ckRecordID.getter();
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v72 + 104))(v75, *MEMORY[0x24BDB8930], v71);
        v76 = (uint64_t)v84;
        if (*(_QWORD *)(v78 + 32))
        {
          swift_retain();
          sub_23A59E884();
          swift_release();
          sub_23A59E86C();
          swift_release();
        }
        swift_bridgeObjectRelease();
        sub_23A5778F8();
        sub_23A53B9B4(v76, &qword_2569945F8);
        v56 = (uint64_t)v83;
        goto LABEL_36;
      }
      sub_23A53B9B4((uint64_t)v16, &qword_2569945F8);
      sub_23A53AC04(v46, type metadata accessor for DTSyncedAlarm);
    }
    sub_23A53B9B4((uint64_t)v6, &qword_2569946B8);
    goto LABEL_25;
  }
  if (qword_256997CA0 != -1)
    swift_once();
  v36 = sub_23A59E6A4();
  __swift_project_value_buffer(v36, (uint64_t)qword_256997CA8);
  v84 = a1;
  v37 = sub_23A59E68C();
  v38 = sub_23A59EBC0();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    v87[0] = v40;
    *(_DWORD *)v39 = 136315138;
    v41 = sub_23A59ECC8();
    v86[0] = sub_23A538FBC(v41, v42, v87);
    sub_23A59ED1C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v37, v38, "updateAlarm: no-target, %s", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v40, -1, -1);
    MEMORY[0x23B852178](v39, -1, -1);

  }
  else
  {

  }
}

void sub_23A57506C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  id v90;
  uint64_t v91;
  uint64_t v92[3];
  uint64_t v93[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569946C0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v88 = (uint64_t)v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)v83 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v86 = (_QWORD *)((char *)v83 - v13);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v83 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v83 - v17;
  v19 = type metadata accessor for DTSyncedTimer(0);
  v20 = *(_QWORD **)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v85 = (uint64_t)v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (_QWORD *)((char *)v83 - v23);
  sub_23A59ECD4();
  v26 = v25;
  swift_bridgeObjectRelease();
  if (v26)
  {
    v90 = v18;
    DTSyncedTimer.init(mtTimer:)(a1, (uint64_t)v24);
    v28 = *v24;
    v27 = v24[1];
    v89 = v24;
    v84 = v2;
    v29 = v2 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
    swift_beginAccess();
    v83[0] = v29;
    v30 = v29 + 8;
    v31 = *(_QWORD *)(v29 + 8);
    v83[1] = v30;
    if (*(_QWORD *)(v31 + 16))
    {
      swift_bridgeObjectRetain();
      v32 = sub_23A563F00(v28, v27);
      v33 = v19;
      if ((v34 & 1) != 0)
      {
        v35 = (uint64_t)v90;
        sub_23A53ABC0(*(_QWORD *)(v31 + 56) + v20[9] * v32, (uint64_t)v90, type metadata accessor for DTSyncedTimer);
        v36 = (_QWORD *)v20[7];
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v36)(v35, 0, 1, v33);
      }
      else
      {
        v36 = (_QWORD *)v20[7];
        v35 = (uint64_t)v90;
        ((void (*)(id, uint64_t, uint64_t, uint64_t))v36)(v90, 1, 1, v33);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = (uint64_t)v90;
      v33 = v19;
      v36 = (_QWORD *)v20[7];
      ((void (*)(id, uint64_t, uint64_t, uint64_t))v36)(v90, 1, 1, v33);
    }
    v44 = v89;
    swift_endAccess();
    sub_23A53ABC0((uint64_t)v44, (uint64_t)v16, type metadata accessor for DTSyncedTimer);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v36)(v16, 0, 1, v33);
    v45 = (uint64_t)&v6[*(int *)(v4 + 48)];
    sub_23A549090((uint64_t)v16, (uint64_t)v6, &qword_2569945F0);
    sub_23A549090(v35, v45, &qword_2569945F0);
    v46 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v20[6];
    if (v46((uint64_t)v6, 1, v33) == 1)
    {
      sub_23A53B9B4((uint64_t)v16, &qword_2569945F0);
      if (v46(v45, 1, v33) == 1)
      {
        sub_23A53B9B4((uint64_t)v6, &qword_2569945F0);
LABEL_20:
        if (qword_256997CA0 != -1)
          swift_once();
        v52 = sub_23A59E6A4();
        __swift_project_value_buffer(v52, (uint64_t)qword_256997CA8);
        v53 = sub_23A59E68C();
        v54 = sub_23A59EBC0();
        if (os_log_type_enabled(v53, v54))
        {
          v55 = (uint8_t *)swift_slowAlloc();
          v56 = swift_slowAlloc();
          v92[0] = v56;
          *(_DWORD *)v55 = 136315138;
          swift_beginAccess();
          sub_23A52EAEC(&qword_2569932C0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
          v57 = sub_23A59F034();
          v91 = sub_23A538FBC(v57, v58, v92);
          sub_23A59ED1C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A52C000, v53, v54, "updateTimer: unchanged, %s", v55, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B852178](v56, -1, -1);
          MEMORY[0x23B852178](v55, -1, -1);
        }

        sub_23A53B9B4((uint64_t)v90, &qword_2569945F0);
        v59 = (uint64_t)v44;
LABEL_36:
        sub_23A53AC04(v59, type metadata accessor for DTSyncedTimer);
        return;
      }
    }
    else
    {
      v47 = (uint64_t)v86;
      sub_23A549090((uint64_t)v6, (uint64_t)v86, &qword_2569945F0);
      if (v46(v45, 1, v33) != 1)
      {
        v48 = v44;
        v49 = v85;
        sub_23A53BA34(v45, v85, type metadata accessor for DTSyncedTimer);
        sub_23A52EAEC(&qword_2569932C8, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
        v50 = sub_23A59E98C();
        v51 = v49;
        v44 = v48;
        sub_23A53AC04(v51, type metadata accessor for DTSyncedTimer);
        sub_23A53B9B4((uint64_t)v16, &qword_2569945F0);
        sub_23A53AC04(v47, type metadata accessor for DTSyncedTimer);
        sub_23A53B9B4((uint64_t)v6, &qword_2569945F0);
        if ((v50 & 1) != 0)
          goto LABEL_20;
LABEL_25:
        if (qword_256997CA0 != -1)
          swift_once();
        v60 = sub_23A59E6A4();
        __swift_project_value_buffer(v60, (uint64_t)qword_256997CA8);
        v61 = sub_23A59E68C();
        v62 = sub_23A59EBC0();
        if (os_log_type_enabled(v61, v62))
        {
          v63 = (uint8_t *)swift_slowAlloc();
          v64 = swift_slowAlloc();
          v86 = v36;
          v65 = v64;
          v93[0] = v64;
          *(_DWORD *)v63 = 136315138;
          swift_beginAccess();
          sub_23A52EAEC(&qword_2569932C0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
          v66 = sub_23A59F034();
          v91 = sub_23A538FBC(v66, v67, v93);
          sub_23A59ED1C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A52C000, v61, v62, "updateTimer: %s", v63, 0xCu);
          swift_arrayDestroy();
          v68 = v65;
          v36 = v86;
          MEMORY[0x23B852178](v68, -1, -1);
          MEMORY[0x23B852178](v63, -1, -1);
        }

        v69 = v87;
        sub_23A549090((uint64_t)v90, v87, &qword_2569945F0);
        if (v46(v69, 1, v33) == 1)
        {
          sub_23A53B9B4(v69, &qword_2569945F0);
          v70 = 0;
        }
        else
        {
          v71 = sub_23A52EAEC(&qword_256994608, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
          v70 = DTSyncedObject.lastKnownRecord.getter(v33, v71);
          sub_23A53AC04(v69, type metadata accessor for DTSyncedTimer);
        }
        swift_beginAccess();
        v72 = sub_23A52EAEC(&qword_256994608, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
        DTSyncedObject.lastKnownRecord.setter(v70, v33, v72);
        swift_endAccess();
        v73 = *v44;
        v74 = v44[1];
        v75 = v88;
        sub_23A53ABC0((uint64_t)v44, v88, type metadata accessor for DTSyncedTimer);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v36)(v75, 0, 1, v33);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_23A57759C(v75, v73, v74, &qword_2569945F0, type metadata accessor for DTSyncedTimer, &qword_256994648);
        swift_endAccess();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256994600);
        v76 = sub_23A59E764();
        v77 = *(_QWORD *)(v76 - 8);
        v78 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
        v79 = swift_allocObject();
        *(_OWORD *)(v79 + 16) = xmmword_23A5A0B80;
        v80 = (_QWORD *)(v79 + v78);
        *v80 = DTSyncedTimer.ckRecordID.getter(v79, v81);
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v77 + 104))(v80, *MEMORY[0x24BDB8930], v76);
        v82 = (uint64_t)v90;
        if (*(_QWORD *)(v84 + 32))
        {
          swift_retain();
          sub_23A59E884();
          swift_release();
          sub_23A59E86C();
          swift_release();
        }
        swift_bridgeObjectRelease();
        sub_23A5778F8();
        sub_23A53B9B4(v82, &qword_2569945F0);
        v59 = (uint64_t)v89;
        goto LABEL_36;
      }
      sub_23A53B9B4((uint64_t)v16, &qword_2569945F0);
      sub_23A53AC04(v47, type metadata accessor for DTSyncedTimer);
    }
    sub_23A53B9B4((uint64_t)v6, &qword_2569946C0);
    goto LABEL_25;
  }
  if (qword_256997CA0 != -1)
    swift_once();
  v37 = sub_23A59E6A4();
  __swift_project_value_buffer(v37, (uint64_t)qword_256997CA8);
  v90 = a1;
  v38 = sub_23A59E68C();
  v39 = sub_23A59EBC0();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v93[0] = v41;
    *(_DWORD *)v40 = 136315138;
    v42 = sub_23A59ECE0();
    v92[0] = sub_23A538FBC(v42, v43, v93);
    sub_23A59ED1C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v38, v39, "updateTimer: no-target, %s", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v41, -1, -1);
    MEMORY[0x23B852178](v40, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_23A575B9C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint8_t *v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v52 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v50 - v6;
  v8 = type metadata accessor for DTSyncedAlarm(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v50 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (uint64_t *)((char *)&v50 - v16);
  DTSyncedAlarm.init(mtAlarm:)(a1, (uint64_t)&v50 - v16);
  v19 = *v17;
  v18 = v17[1];
  v53 = v1;
  v20 = (uint64_t *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
  swift_beginAccess();
  v21 = *v20;
  if (*(_QWORD *)(*v20 + 16))
  {
    swift_bridgeObjectRetain();
    v22 = sub_23A563F00(v19, v18);
    if ((v23 & 1) != 0)
    {
      sub_23A53ABC0(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v9 + 72) * v22, (uint64_t)v7, type metadata accessor for DTSyncedAlarm);
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v24(v7, 0, 1, v8);
    }
    else
    {
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v24(v7, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v24(v7, 1, 1, v8);
  }
  swift_endAccess();
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  sub_23A53B9B4((uint64_t)v7, &qword_2569945F8);
  if (v25 == 1)
  {
    if (qword_256997CA0 != -1)
      swift_once();
    v26 = sub_23A59E6A4();
    __swift_project_value_buffer(v26, (uint64_t)qword_256997CA8);
    sub_23A53ABC0((uint64_t)v17, (uint64_t)v12, type metadata accessor for DTSyncedAlarm);
    v27 = sub_23A59E68C();
    v28 = sub_23A59EBC0();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v55[0] = v30;
      *(_DWORD *)v29 = 136315138;
      sub_23A52EAEC(&qword_256993288, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
      v31 = sub_23A59F034();
      v54 = sub_23A538FBC(v31, v32, v55);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v12, type metadata accessor for DTSyncedAlarm);
      _os_log_impl(&dword_23A52C000, v27, v28, "removeAlarm: unknown, %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v30, -1, -1);
      MEMORY[0x23B852178](v29, -1, -1);

    }
    else
    {

      sub_23A53AC04((uint64_t)v12, type metadata accessor for DTSyncedAlarm);
    }
    v40 = (uint64_t)v17;
  }
  else
  {
    v51 = v24;
    if (qword_256997CA0 != -1)
      swift_once();
    v33 = sub_23A59E6A4();
    __swift_project_value_buffer(v33, (uint64_t)qword_256997CA8);
    sub_23A53ABC0((uint64_t)v17, (uint64_t)v15, type metadata accessor for DTSyncedAlarm);
    v34 = sub_23A59E68C();
    v35 = sub_23A59EBC0();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v55[0] = v37;
      *(_DWORD *)v36 = 136315138;
      v50 = v36 + 4;
      sub_23A52EAEC(&qword_256993288, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
      v38 = sub_23A59F034();
      v54 = sub_23A538FBC(v38, v39, v55);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v15, type metadata accessor for DTSyncedAlarm);
      _os_log_impl(&dword_23A52C000, v34, v35, "removeAlarm: %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v37, -1, -1);
      MEMORY[0x23B852178](v36, -1, -1);
    }
    else
    {
      sub_23A53AC04((uint64_t)v15, type metadata accessor for DTSyncedAlarm);
    }

    v41 = *v17;
    v42 = v17[1];
    v43 = (uint64_t)v52;
    v51(v52, 1, 1, v8);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23A57759C(v43, v41, v42, &qword_2569945F8, type metadata accessor for DTSyncedAlarm, &qword_256994640);
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994600);
    v44 = sub_23A59E764();
    v45 = *(_QWORD *)(v44 - 8);
    v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_23A5A0B80;
    v48 = (uint64_t *)(v47 + v46);
    *v48 = DTSyncedAlarm.ckRecordID.getter();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v45 + 104))(v48, *MEMORY[0x24BDB8938], v44);
    if (*(_QWORD *)(v53 + 32))
    {
      swift_retain();
      sub_23A59E884();
      swift_release();
      sub_23A59E86C();
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_23A5778F8();
    v40 = (uint64_t)v17;
  }
  return sub_23A53AC04(v40, type metadata accessor for DTSyncedAlarm);
}

uint64_t sub_23A576218(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD v51[2];
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v54 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v51 - v6;
  v8 = type metadata accessor for DTSyncedTimer(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v51 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (_QWORD *)((char *)v51 - v16);
  DTSyncedTimer.init(mtTimer:)(a1, (uint64_t)v51 - v16);
  v19 = *v17;
  v18 = v17[1];
  v55 = v1;
  v20 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
  swift_beginAccess();
  v21 = *(_QWORD *)(v20 + 8);
  v53 = v20 + 8;
  if (*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    v22 = sub_23A563F00(v19, v18);
    if ((v23 & 1) != 0)
    {
      sub_23A53ABC0(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v9 + 72) * v22, (uint64_t)v7, type metadata accessor for DTSyncedTimer);
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v24(v7, 0, 1, v8);
    }
    else
    {
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v24(v7, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v24(v7, 1, 1, v8);
  }
  swift_endAccess();
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  sub_23A53B9B4((uint64_t)v7, &qword_2569945F0);
  if (v25 == 1)
  {
    if (qword_256997CA0 != -1)
      swift_once();
    v26 = sub_23A59E6A4();
    __swift_project_value_buffer(v26, (uint64_t)qword_256997CA8);
    sub_23A53ABC0((uint64_t)v17, (uint64_t)v12, type metadata accessor for DTSyncedTimer);
    v27 = sub_23A59E68C();
    v28 = sub_23A59EBC0();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v57[0] = v30;
      *(_DWORD *)v29 = 136315138;
      sub_23A52EAEC(&qword_2569932C0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
      v31 = sub_23A59F034();
      v56 = sub_23A538FBC(v31, v32, v57);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v12, type metadata accessor for DTSyncedTimer);
      _os_log_impl(&dword_23A52C000, v27, v28, "removeTimer: unknown, %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v30, -1, -1);
      MEMORY[0x23B852178](v29, -1, -1);

    }
    else
    {

      sub_23A53AC04((uint64_t)v12, type metadata accessor for DTSyncedTimer);
    }
    v40 = (uint64_t)v17;
  }
  else
  {
    if (qword_256997CA0 != -1)
      swift_once();
    v52 = v24;
    v33 = sub_23A59E6A4();
    __swift_project_value_buffer(v33, (uint64_t)qword_256997CA8);
    sub_23A53ABC0((uint64_t)v17, (uint64_t)v15, type metadata accessor for DTSyncedTimer);
    v34 = sub_23A59E68C();
    v35 = sub_23A59EBC0();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v57[0] = v37;
      *(_DWORD *)v36 = 136315138;
      v51[1] = v36 + 4;
      sub_23A52EAEC(&qword_2569932C0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
      v38 = sub_23A59F034();
      v56 = sub_23A538FBC(v38, v39, v57);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      sub_23A53AC04((uint64_t)v15, type metadata accessor for DTSyncedTimer);
      _os_log_impl(&dword_23A52C000, v34, v35, "removeTimer: %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v37, -1, -1);
      MEMORY[0x23B852178](v36, -1, -1);
    }
    else
    {
      sub_23A53AC04((uint64_t)v15, type metadata accessor for DTSyncedTimer);
    }

    v41 = *v17;
    v42 = v17[1];
    v43 = (uint64_t)v54;
    v52(v54, 1, 1, v8);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23A57759C(v43, v41, v42, &qword_2569945F0, type metadata accessor for DTSyncedTimer, &qword_256994648);
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994600);
    v44 = sub_23A59E764();
    v45 = *(_QWORD *)(v44 - 8);
    v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_23A5A0B80;
    v48 = (_QWORD *)(v47 + v46);
    *v48 = DTSyncedTimer.ckRecordID.getter(v47, v49);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v45 + 104))(v48, *MEMORY[0x24BDB8938], v44);
    if (*(_QWORD *)(v55 + 32))
    {
      swift_retain();
      sub_23A59E884();
      swift_release();
      sub_23A59E86C();
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_23A5778F8();
    v40 = (uint64_t)v17;
  }
  return sub_23A53AC04(v40, type metadata accessor for DTSyncedTimer);
}

void sub_23A5768A0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD v47[2];
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[3];

  v3 = sub_23A59E1F4();
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v47 - v9;
  v11 = type metadata accessor for DTSyncedAlarm(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a1, sel_alarmIDString);
  v16 = sub_23A59E9A4();
  v18 = v17;

  v52 = v1;
  v19 = (uint64_t *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
  swift_beginAccess();
  v20 = *v19;
  if (*(_QWORD *)(*v19 + 16) && (v21 = sub_23A563F00(v16, v18), (v22 & 1) != 0))
  {
    sub_23A53ABC0(*(_QWORD *)(v20 + 56) + *(_QWORD *)(v12 + 72) * v21, (uint64_t)v10, type metadata accessor for DTSyncedAlarm);
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v23(v10, 0, 1, v11);
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v23(v10, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_23A53B9B4((uint64_t)v10, &qword_2569945F8);
    swift_endAccess();
    if (qword_256997CA0 != -1)
      swift_once();
    v24 = sub_23A59E6A4();
    __swift_project_value_buffer(v24, (uint64_t)qword_256997CA8);
    v25 = a1;
    v26 = sub_23A59E68C();
    v27 = sub_23A59EBC0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v54[0] = v29;
      *(_DWORD *)v28 = 136315138;
      v30 = sub_23A59ECC8();
      v53 = sub_23A538FBC(v30, v31, v54);
      sub_23A59ED1C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v26, v27, "dismissAlarm: not found, %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v29, -1, -1);
      MEMORY[0x23B852178](v28, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v48 = v23;
    sub_23A53BA34((uint64_t)v10, (uint64_t)v14, type metadata accessor for DTSyncedAlarm);
    swift_endAccess();
    if (qword_256997CA0 != -1)
      swift_once();
    v32 = sub_23A59E6A4();
    __swift_project_value_buffer(v32, (uint64_t)qword_256997CA8);
    v33 = sub_23A59E68C();
    v34 = sub_23A59EBC0();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v54[0] = v36;
      *(_DWORD *)v35 = 136315138;
      v47[1] = v35 + 4;
      swift_beginAccess();
      sub_23A52EAEC(&qword_256993288, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
      v37 = sub_23A59F034();
      v53 = sub_23A538FBC(v37, v38, v54);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v33, v34, "dismissAlarm: %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v36, -1, -1);
      MEMORY[0x23B852178](v35, -1, -1);
    }

    swift_beginAccess();
    v14[16] = 0;
    v39 = v49;
    sub_23A59E1D0();
    (*(void (**)(char *, char *, uint64_t))(v50 + 40))(&v14[*(int *)(v11 + 36)], v39, v51);
    v40 = *(_QWORD *)v14;
    v41 = *((_QWORD *)v14 + 1);
    sub_23A53ABC0((uint64_t)v14, (uint64_t)v8, type metadata accessor for DTSyncedAlarm);
    v48(v8, 0, 1, v11);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23A57759C((uint64_t)v8, v40, v41, &qword_2569945F8, type metadata accessor for DTSyncedAlarm, &qword_256994640);
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994600);
    v42 = sub_23A59E764();
    v43 = *(_QWORD *)(v42 - 8);
    v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_23A5A0B80;
    v46 = (uint64_t *)(v45 + v44);
    *v46 = DTSyncedAlarm.ckRecordID.getter();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v43 + 104))(v46, *MEMORY[0x24BDB8930], v42);
    if (*(_QWORD *)(v52 + 32))
    {
      swift_retain();
      sub_23A59E884();
      swift_release();
      sub_23A59E86C();
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_23A5778F8();
    sub_23A53AC04((uint64_t)v14, type metadata accessor for DTSyncedAlarm);
  }
}

void sub_23A576F14(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint8_t *v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[3];

  v3 = sub_23A59E1F4();
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v52 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v55 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v50 - v8;
  v10 = type metadata accessor for DTSyncedTimer(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = objc_msgSend(a1, sel_timerIDString);
  v15 = sub_23A59E9A4();
  v17 = v16;

  v56 = v1;
  v18 = v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
  swift_beginAccess();
  v19 = *(_QWORD *)(v18 + 8);
  if (*(_QWORD *)(v19 + 16) && (v20 = sub_23A563F00(v15, v17), (v21 & 1) != 0))
  {
    sub_23A53ABC0(*(_QWORD *)(v19 + 56) + *(_QWORD *)(v11 + 72) * v20, (uint64_t)v9, type metadata accessor for DTSyncedTimer);
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v22(v9, 0, 1, v10);
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v22(v9, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_23A53B9B4((uint64_t)v9, &qword_2569945F0);
    swift_endAccess();
    if (qword_256997CA0 != -1)
      swift_once();
    v23 = sub_23A59E6A4();
    __swift_project_value_buffer(v23, (uint64_t)qword_256997CA8);
    v24 = a1;
    v25 = sub_23A59E68C();
    v26 = sub_23A59EBC0();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v58[0] = v28;
      *(_DWORD *)v27 = 136315138;
      v29 = sub_23A59ECE0();
      v57 = sub_23A538FBC(v29, v30, v58);
      sub_23A59ED1C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v25, v26, "dismissTimer: not found, %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v28, -1, -1);
      MEMORY[0x23B852178](v27, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_23A53BA34((uint64_t)v9, (uint64_t)v13, type metadata accessor for DTSyncedTimer);
    swift_endAccess();
    if (qword_256997CA0 != -1)
      swift_once();
    v31 = sub_23A59E6A4();
    __swift_project_value_buffer(v31, (uint64_t)qword_256997CA8);
    v32 = sub_23A59E68C();
    v33 = sub_23A59EBC0();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v51 = v22;
      v36 = v35;
      v58[0] = v35;
      *(_DWORD *)v34 = 136315138;
      v50 = v34 + 4;
      swift_beginAccess();
      sub_23A52EAEC(&qword_2569932C0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
      v37 = sub_23A59F034();
      v57 = sub_23A538FBC(v37, v38, v58);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v32, v33, "dismissTimer: %s", v34, 0xCu);
      swift_arrayDestroy();
      v39 = v36;
      v22 = v51;
      MEMORY[0x23B852178](v39, -1, -1);
      MEMORY[0x23B852178](v34, -1, -1);
    }

    v40 = v52;
    sub_23A59E1D0();
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v53 + 40))((char *)v13 + *(int *)(v10 + 28), v40, v54);
    *((_BYTE *)v13 + *(int *)(v10 + 32)) = 1;
    v41 = *v13;
    v42 = v13[1];
    v43 = v55;
    sub_23A53ABC0((uint64_t)v13, v55, type metadata accessor for DTSyncedTimer);
    v22((char *)v43, 0, 1, v10);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23A57759C(v43, v41, v42, &qword_2569945F0, type metadata accessor for DTSyncedTimer, &qword_256994648);
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994600);
    v44 = sub_23A59E764();
    v45 = *(_QWORD *)(v44 - 8);
    v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_23A5A0B80;
    v48 = (_QWORD *)(v47 + v46);
    *v48 = DTSyncedTimer.ckRecordID.getter(v47, v49);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v45 + 104))(v48, *MEMORY[0x24BDB8930], v44);
    if (*(_QWORD *)(v56 + 32))
    {
      swift_retain();
      sub_23A59E884();
      swift_release();
      sub_23A59E86C();
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_23A5778F8();
    sub_23A53AC04((uint64_t)v13, type metadata accessor for DTSyncedTimer);
  }
}

uint64_t sub_23A57759C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t *v6;
  uint64_t *v10;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;

  v10 = v6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a5(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v23 - v18;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v20 + 48))(a1, 1) == 1)
  {
    sub_23A53B9B4(a1, a4);
    sub_23A582AA0(a2, a3, a5, a6, (uint64_t)v16);
    swift_bridgeObjectRelease();
    return sub_23A53B9B4((uint64_t)v16, a4);
  }
  else
  {
    sub_23A53BA34(a1, (uint64_t)v19, a5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = *v10;
    *v10 = 0x8000000000000000;
    sub_23A58365C((uint64_t)v19, a2, a3, isUniquelyReferenced_nonNull_native, a5, a6);
    *v10 = v24;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23A57771C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994490);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994450);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_23A53B9B4(a1, &qword_256994490);
    v13 = sub_23A563ED0(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_23A583C40();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_23A583490(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_23A53B9B4((uint64_t)v8, &qword_256994490);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_23A5837C0((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

void sub_23A5778F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint8_t *v47;
  void *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  id v57;
  void *v58;
  unsigned int v59;
  id v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  id v92;
  unint64_t v93;
  uint64_t v94[3];

  v94[1] = *MEMORY[0x24BDAC8D0];
  v80 = type metadata accessor for DTSyncDaemon.PersistentData(0);
  MEMORY[0x24BDAC7A8](v80);
  v87 = (char *)&v77 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_23A59E08C();
  v85 = *(_QWORD *)(v2 - 8);
  v86 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v89 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_23A59E104();
  v4 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993228);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A59E164();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v88 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v90 = (char *)&v77 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v77 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v83 = (char *)&v77 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v82 = (char *)&v77 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v77 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v77 - v26;
  v81 = v0;
  sub_23A59E554();
  v28 = v10;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v78 = v27;
    sub_23A53B9B4((uint64_t)v9, &qword_256993228);
    v29 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v92 = 0;
    v30 = objc_msgSend(v29, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 14, 1, 0, 1, &v92);

    v31 = v92;
    if (!v30)
    {
      v64 = v92;
      v63 = (void *)sub_23A59E0F8();

      swift_willThrow();
      goto LABEL_14;
    }
    sub_23A59E140();
    v32 = v31;

    v92 = (id)sub_23A59E428();
    v93 = v33;
    v34 = *MEMORY[0x24BDCD7A0];
    v79 = v10;
    v35 = v4;
    v77 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
    v36 = v84;
    v77(v6, v34, v84);
    sub_23A56DBE0();
    v37 = v83;
    sub_23A59E158();
    v38 = *(void (**)(char *, uint64_t))(v35 + 8);
    v38(v6, v36);
    swift_bridgeObjectRelease();
    v39 = *(void (**)(char *, uint64_t))(v11 + 8);
    v39(v18, v79);
    v92 = (id)0xD000000000000010;
    v93 = 0x800000023A5A2A10;
    v77(v6, v34, v36);
    v40 = v79;
    v41 = v82;
    sub_23A59E158();
    v38(v6, v36);
    swift_bridgeObjectRelease();
    v39(v37, v40);
    v27 = v78;
    v28 = v40;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v41, v40);
  }
  else
  {
    v42 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v42(v25, v9, v10);
    v42(v27, v25, v10);
  }
  if (qword_256997CA0 != -1)
    swift_once();
  v43 = sub_23A59E6A4();
  __swift_project_value_buffer(v43, (uint64_t)qword_256997CA8);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v90, v27, v28);
  v44 = sub_23A59E68C();
  v45 = sub_23A59EBC0();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc();
    v84 = v11;
    v47 = (uint8_t *)v46;
    v48 = (void *)swift_slowAlloc();
    v92 = v48;
    *(_DWORD *)v47 = 136315138;
    v49 = v27;
    v50 = v90;
    v51 = sub_23A59E14C();
    v94[0] = sub_23A538FBC(v51, v52, (uint64_t *)&v92);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    v53 = *(void (**)(char *, uint64_t))(v84 + 8);
    v54 = v50;
    v27 = v49;
    v53(v54, v28);
    _os_log_impl(&dword_23A52C000, v44, v45, "Persistent data save: path=%s", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v48, -1, -1);
    MEMORY[0x23B852178](v47, -1, -1);
  }
  else
  {
    v53 = *(void (**)(char *, uint64_t))(v11 + 8);
    v53(v90, v28);
  }

  v55 = (uint64_t)v87;
  v56 = v88;
  sub_23A59E134();
  v57 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v58 = (void *)sub_23A59E128();
  v92 = 0;
  v59 = objc_msgSend(v57, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v58, 1, 0, &v92);

  if (v59)
  {
    v60 = v92;
    sub_23A59E080();
    sub_23A59E074();
    sub_23A59E11C();
    sub_23A59E008();
    swift_allocObject();
    sub_23A59DFFC();
    v61 = v81 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
    swift_beginAccess();
    sub_23A53ABC0(v61, v55, type metadata accessor for DTSyncDaemon.PersistentData);
    sub_23A52EAEC(&qword_256994668, type metadata accessor for DTSyncDaemon.PersistentData, (uint64_t)&protocol conformance descriptor for DTSyncDaemon.PersistentData);
    v65 = sub_23A59DFF0();
    v67 = v66;
    sub_23A53AC04(v55, type metadata accessor for DTSyncDaemon.PersistentData);
    swift_release();
    sub_23A59E194();
    LOBYTE(v94[0]) = 2;
    DTSyncDaemon._report(event:)((DistributedTimersDaemon::DTSyncDaemon::Event)v94);
    sub_23A53AAA8(v65, v67);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v89, v86);
    v53(v56, v28);
    v53(v27, v28);
    return;
  }
  v62 = v92;
  v63 = (void *)sub_23A59E0F8();

  swift_willThrow();
  v53(v56, v28);
  v53(v27, v28);
LABEL_14:
  if (qword_256997CA0 != -1)
    swift_once();
  v68 = sub_23A59E6A4();
  __swift_project_value_buffer(v68, (uint64_t)qword_256997CA8);
  v69 = v63;
  v70 = v63;
  v71 = sub_23A59E68C();
  v72 = sub_23A59EBB4();
  if (os_log_type_enabled(v71, v72))
  {
    v73 = (uint8_t *)swift_slowAlloc();
    v74 = swift_slowAlloc();
    v94[0] = v74;
    *(_DWORD *)v73 = 136315138;
    swift_getErrorValue();
    v75 = sub_23A59F0C4();
    v91 = sub_23A538FBC(v75, v76, v94);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A52C000, v71, v72, "### Persistent data save failed: error=%s", v73, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v74, -1, -1);
    MEMORY[0x23B852178](v73, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_23A5782E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[8] = a4;
  v5[9] = a5;
  v6 = sub_23A59E338();
  v5[10] = v6;
  v5[11] = *(_QWORD *)(v6 - 8);
  v5[12] = swift_task_alloc();
  v7 = sub_23A59E5B4();
  v5[13] = v7;
  v5[14] = *(_QWORD *)(v7 - 8);
  v5[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A57836C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = *(_QWORD *)(v0 + 112);
    v2 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, Strong + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__environment, v4);
    swift_release();
    sub_23A59E59C();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v5;
    *v5 = v0;
    v5[1] = sub_23A5784EC;
    return sub_23A59E308();
  }
  else
  {
    swift_beginAccess();
    v7 = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 144) = v7;
    if (v7)
    {
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v8;
      *v8 = v0;
      v8[1] = sub_23A578610;
      return sub_23A571B4C();
    }
    else
    {
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_23A5784EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23A578570()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 144) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v2;
    *v2 = v0;
    v2[1] = sub_23A578610;
    return sub_23A571B4C();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A578610()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A578674()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5786B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23A59EAB8();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_23A59EAAC();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_23A53B9B4(a1, (uint64_t *)&unk_256993920);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23A59EA7C();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

Swift::Void __swiftcall DTSyncDaemon._report(event:)(DistributedTimersDaemon::DTSyncDaemon::Event event)
{
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  int64_t v63;
  int v64;
  uint64_t v65;

  v2 = (unsigned __int8 *)event;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994488);
  v61 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994450);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994458);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v62 = (char *)&v48 - v14;
  v64 = *v2;
  v15 = v9;
  v16 = (uint64_t *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__eventContinuations);
  swift_beginAccess();
  v17 = *v16;
  v18 = *(_QWORD *)(*v16 + 64);
  v51 = *v16 + 64;
  v19 = 1 << *(_BYTE *)(v17 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v54 = (unint64_t)(v19 + 63) >> 6;
  v49 = v54 - 1;
  v60 = v17;
  swift_bridgeObjectRetain();
  v63 = 0;
  *(_QWORD *)&v22 = 134218242;
  v56 = v22;
  v50 = (unint64_t)"persistentDataLoaded";
  v55 = MEMORY[0x24BEE4AD8] + 8;
  v52 = 0x800000023A5A2900;
  v53 = 0x800000023A5A2920;
  v58 = v15;
  v59 = v7;
  v57 = v6;
  while (1)
  {
    if (v21)
    {
      v26 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v27 = v26 | (v63 << 6);
LABEL_8:
      v28 = *(_QWORD *)(v60 + 56);
      *(_QWORD *)v13 = *(_QWORD *)(*(_QWORD *)(v60 + 48) + 8 * v27);
      v29 = v28 + *(_QWORD *)(v7 + 72) * v27;
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994460);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(&v13[*(int *)(v30 + 48)], v29, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v13, 0, 1, v30);
      v31 = v62;
      goto LABEL_27;
    }
    v32 = v63 + 1;
    if (__OFADD__(v63, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    v31 = v62;
    if (v32 < v54)
    {
      v33 = *(_QWORD *)(v51 + 8 * v32);
      if (v33)
        goto LABEL_12;
      v34 = v63 + 2;
      ++v63;
      if (v32 + 1 < v54)
      {
        v33 = *(_QWORD *)(v51 + 8 * v34);
        if (v33)
          goto LABEL_15;
        v63 = v32 + 1;
        if (v32 + 2 < v54)
        {
          v33 = *(_QWORD *)(v51 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_12;
          }
          v34 = v32 + 3;
          v63 = v32 + 2;
          if (v32 + 3 < v54)
            break;
        }
      }
    }
LABEL_26:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994460);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v13, 1, 1, v35);
    v21 = 0;
LABEL_27:
    sub_23A53AAEC((uint64_t)v13, (uint64_t)v31, &qword_256994458);
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994460);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v31, 1, v36) == 1)
    {
      swift_release();
      return;
    }
    v37 = v13;
    v38 = *(_QWORD *)v31;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, &v31[*(int *)(v36 + 48)], v6);
    if (qword_256997CA0 != -1)
      swift_once();
    v39 = sub_23A59E6A4();
    __swift_project_value_buffer(v39, (uint64_t)qword_256997CA8);
    v40 = sub_23A59E68C();
    v41 = sub_23A59EBC0();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = v5;
      v43 = v61;
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v65 = v45;
      *(_DWORD *)v44 = v56;
      *(_QWORD *)(v44 + 4) = v38;
      *(_WORD *)(v44 + 12) = 2080;
      if (v64)
      {
        if (v64 == 1)
          v46 = 0xD000000000000014;
        else
          v46 = 0xD000000000000013;
        if (v64 == 1)
          v47 = v53;
        else
          v47 = v52;
      }
      else
      {
        v47 = v50 | 0x8000000000000000;
        v46 = 0xD000000000000014;
      }
      *(_QWORD *)(v44 + 14) = sub_23A538FBC(v46, v47, &v65);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v40, v41, "event monitor report: id=%llu, event={%s}", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v45, -1, -1);
      MEMORY[0x23B852178](v44, -1, -1);

      v23 = v3;
      v24 = v43;
      v5 = v42;
      v6 = v57;
      v15 = v58;
      v7 = v59;
    }
    else
    {

      v23 = v3;
      v24 = v61;
    }
    LOBYTE(v65) = v64;
    sub_23A59EADC();
    v25 = *(void (**)(char *, uint64_t))(v24 + 8);
    v3 = v23;
    v25(v5, v23);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    v13 = v37;
  }
  v33 = *(_QWORD *)(v51 + 8 * v34);
  if (v33)
  {
LABEL_15:
    v32 = v34;
LABEL_12:
    v21 = (v33 - 1) & v33;
    v27 = __clz(__rbit64(v33)) + (v32 << 6);
    v63 = v32;
    goto LABEL_8;
  }
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v54)
    {
      v63 = v49;
      goto LABEL_26;
    }
    v33 = *(_QWORD *)(v51 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_12;
  }
LABEL_42:
  __break(1u);
}

uint64_t DTSyncDaemon.events.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v23[1] = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994490);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994498);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994450);
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = CUNextID64();
  if (qword_256997CA0 != -1)
    swift_once();
  v14 = sub_23A59E6A4();
  __swift_project_value_buffer(v14, (uint64_t)qword_256997CA8);
  v15 = sub_23A59E68C();
  v16 = sub_23A59EB9C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v23[0] = v2;
    v18 = v17;
    *(_DWORD *)v17 = 134217984;
    v25 = v13;
    sub_23A59ED1C();
    _os_log_impl(&dword_23A52C000, v15, v16, "event monitor start: id=%llu", v18, 0xCu);
    MEMORY[0x23B852178](v18, -1, -1);
  }

  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE6A10], v6);
  sub_23A59EAC4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = v24;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v5, v12, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_23A57771C((uint64_t)v5, v13);
  swift_endAccess();
  v20 = swift_allocObject();
  swift_weakInit();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v20;
  *(_QWORD *)(v21 + 24) = v13;
  sub_23A59EAD0();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v12, v10);
}

uint64_t sub_23A579088(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[5];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v18 - v7;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    v11 = sub_23A59E560();
    v12 = sub_23A59EAB8();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v8, 1, 1, v12);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v10;
    *(_QWORD *)(v14 + 24) = a2;
    sub_23A53AAEC((uint64_t)v8, (uint64_t)v6, (uint64_t *)&unk_256993920);
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v12);
    swift_retain();
    if (v15 == 1)
    {
      sub_23A53B9B4((uint64_t)v6, (uint64_t *)&unk_256993920);
    }
    else
    {
      sub_23A59EAAC();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
    }
    v16 = sub_23A56B150();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = &unk_256994698;
    *(_QWORD *)(v17 + 24) = v14;
    v18[1] = 6;
    v18[2] = 0;
    v18[3] = v11;
    v18[4] = v16;
    swift_task_create();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23A579288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_23A541460;
  return sub_23A5792DC(a3);
}

uint64_t sub_23A5792DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[6] = a1;
  v2[7] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994490);
  v2[8] = swift_task_alloc();
  sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A57936C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_256997CA0 != -1)
    swift_once();
  v1 = sub_23A59E6A4();
  __swift_project_value_buffer(v1, (uint64_t)qword_256997CA8);
  v2 = sub_23A59E68C();
  v3 = sub_23A59EB9C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 48);
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    *(_QWORD *)(v0 + 40) = v4;
    sub_23A59ED1C();
    _os_log_impl(&dword_23A52C000, v2, v3, "event monitor cancel: id=%llu", v5, 0xCu);
    MEMORY[0x23B852178](v5, -1, -1);
  }

  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994450);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  swift_beginAccess();
  sub_23A57771C(v6, v7);
  swift_endAccess();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t DTSyncDaemon.Event.description.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 == 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0xD000000000000014;
}

uint64_t DTSyncDaemon.Event.hash(into:)()
{
  return sub_23A59F0F4();
}

BOOL static DTSyncDaemon.Event.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DTSyncDaemon.Event.hashValue.getter()
{
  sub_23A59F0E8();
  sub_23A59F0F4();
  return sub_23A59F100();
}

uint64_t sub_23A5795DC()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

uint64_t sub_23A579628()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5624D8;
  return DTSyncDaemon.summary.getter();
}

uint64_t sub_23A57966C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A5796D8()
{
  uint64_t v0;

  DTSyncDaemon.activate()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A579708()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A579774()
{
  uint64_t v0;

  DTSyncDaemon.invalidate()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTSyncDaemon.handleEvent(_:syncEngine:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2569944A8 + dword_2569944A8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A541124;
  return v5(a1);
}

void sub_23A579808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint8_t *v42;
  uint8_t *v43;
  uint64_t v44;
  _BYTE v45[8];
  _BYTE v46[16];
  uint64_t v47[3];
  uint64_t v48;

  v2 = v1;
  v4 = type metadata accessor for DTSyncDaemon.PersistentData(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint8_t **)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_23A59E7A0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A59E788();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (id *)((char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A59E794();
  v15 = (*(uint64_t (**)(id *, uint64_t))(v12 + 88))(v14, v11);
  if (v15 == *MEMORY[0x24BDB8970])
  {
    (*(void (**)(id *, uint64_t))(v12 + 96))(v14, v11);

    if (*(_QWORD *)(v2 + 32))
    {
      v48 = MEMORY[0x24BEE4AF8];
      swift_retain();
      sub_23A59E884();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256994630);
      v16 = sub_23A59E74C();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_23A5A0B80;
      v20 = (_QWORD *)(v19 + v18);
      sub_23A52EB78();
      v21 = objc_allocWithZone(MEMORY[0x24BDB91F0]);
      swift_bridgeObjectRetain();
      v22 = (void *)sub_23A59E998();
      swift_bridgeObjectRelease();
      v23 = objc_msgSend(v21, sel_initWithZoneName_, v22);

      *v20 = v23;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v20, *MEMORY[0x24BDB88D8], v16);
      sub_23A59E860();
      swift_bridgeObjectRelease();
      swift_release();
      swift_beginAccess();
      v24 = swift_bridgeObjectRetain();
      v25 = sub_23A57B048(v24, (uint64_t)v46, type metadata accessor for DTSyncedAlarm, (uint64_t (*)(uint64_t))DTSyncedAlarm.ckRecordID.getter);
      swift_bridgeObjectRelease();
      sub_23A583E68(v25);
      v26 = swift_bridgeObjectRetain();
      v27 = sub_23A57B048(v26, (uint64_t)v45, type metadata accessor for DTSyncedTimer, (uint64_t (*)(uint64_t))DTSyncedTimer.ckRecordID.getter);
      swift_bridgeObjectRelease();
      sub_23A583E68(v27);
      if (*(_QWORD *)(v48 + 16))
      {
        sub_23A59E884();
        sub_23A59E86C();
        swift_release();
      }
      swift_bridgeObjectRelease();
      swift_release();
    }
    return;
  }
  if (v15 == *MEMORY[0x24BDB8978])
  {
    (*(void (**)(id *, uint64_t))(v12 + 96))(v14, v11);
    v28 = *v14;
LABEL_9:

    if (qword_256997CA0 != -1)
      swift_once();
    v29 = sub_23A59E6A4();
    __swift_project_value_buffer(v29, (uint64_t)qword_256997CA8);
    v30 = sub_23A59E68C();
    v31 = sub_23A59EBC0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_23A52C000, v30, v31, "Persistent data delete", v32, 2u);
      MEMORY[0x23B852178](v32, -1, -1);
    }

    sub_23A52E7B4(v6);
    v33 = v2 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
    swift_beginAccess();
    sub_23A585630((uint64_t)v6, v33, type metadata accessor for DTSyncDaemon.PersistentData);
    swift_endAccess();
    sub_23A5778F8();
    *(_QWORD *)(v2 + 32) = 0;
    swift_release();
    sub_23A5703DC();
    return;
  }
  if (v15 == *MEMORY[0x24BDB8968])
  {
    (*(void (**)(id *, uint64_t))(v12 + 96))(v14, v11);
    v28 = *v14;

    goto LABEL_9;
  }
  if (qword_256997CA0 != -1)
    swift_once();
  v34 = sub_23A59E6A4();
  __swift_project_value_buffer(v34, (uint64_t)qword_256997CA8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v35 = sub_23A59E68C();
  v36 = sub_23A59EBC0();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    v47[0] = v44;
    v43 = v37;
    *(_DWORD *)v37 = 136315138;
    v42 = v37 + 4;
    sub_23A52EAEC(&qword_256994628, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8990], MEMORY[0x24BDB8998]);
    v38 = sub_23A59F034();
    v48 = sub_23A538FBC(v38, v39, v47);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v40 = v43;
    _os_log_impl(&dword_23A52C000, v35, v36, "Unknown account change type: %s", v43, 0xCu);
    v41 = v44;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v41, -1, -1);
    MEMORY[0x23B852178](v40, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  (*(void (**)(id *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_23A579E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  _QWORD *v38;
  uint8_t *v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  int v47;
  char *v48;
  uint8_t *v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);

  v1 = type metadata accessor for DTSyncDaemon.PersistentData(0);
  MEMORY[0x24BDAC7A8](v1);
  v53 = (uint64_t *)((char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_23A59EB3C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v43 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994680);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x23B851374](v11);
  v16 = *(_QWORD *)(v14 + 16);
  v46 = v14;
  if (v16)
  {
    v48 = v7;
    v51 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
    v52 = v0;
    v17 = v14 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v54 = *(_QWORD *)(v4 + 72);
    v55 = v18;
    *(_QWORD *)&v15 = 138412290;
    v45 = v15;
    v44 = v9;
    v18(v13, (char *)v17, v3);
    while (1)
    {
      v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v22(v13, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
        return swift_bridgeObjectRelease();
      v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v9, v13, v3);
      v24 = (void *)MEMORY[0x23B8516A4](v23);
      v25 = objc_msgSend(v24, sel_zoneName);

      v26 = sub_23A59E9A4();
      v28 = v27;

      v29 = sub_23A52EB78();
      if (*v29 == v26 && v29[1] == v28)
        break;
      v31 = sub_23A59F064();
      swift_bridgeObjectRelease();
      if ((v31 & 1) != 0)
        goto LABEL_4;
      if (qword_256997CA0 != -1)
        swift_once();
      v32 = sub_23A59E6A4();
      __swift_project_value_buffer(v32, (uint64_t)qword_256997CA8);
      v33 = v48;
      v55(v48, v9, v3);
      v34 = sub_23A59E68C();
      v35 = sub_23A59EBC0();
      v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        v49 = (uint8_t *)swift_slowAlloc();
        v37 = swift_slowAlloc();
        v47 = v36;
        v38 = (_QWORD *)v37;
        v39 = v49;
        *(_DWORD *)v49 = v45;
        v50 = v34;
        v40 = MEMORY[0x23B8516A4]();
        *(_QWORD *)(v39 + 4) = v40;
        v9 = v44;
        *v38 = v40;
        v21 = *(void (**)(char *, uint64_t))(v4 + 8);
        v21(v33, v3);
        v41 = v49;
        _os_log_impl(&dword_23A52C000, v50, (os_log_type_t)v47, "Delete unknown zone: %@", v49, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256994688);
        swift_arrayDestroy();
        MEMORY[0x23B852178](v38, -1, -1);
        MEMORY[0x23B852178](v41, -1, -1);

      }
      else
      {

        v21 = *(void (**)(char *, uint64_t))(v4 + 8);
        v21(v33, v3);
      }
LABEL_5:
      v21(v9, v3);
      v17 += v54;
      if (!--v16)
        goto LABEL_19;
      v55(v13, (char *)v17, v3);
    }
    swift_bridgeObjectRelease();
LABEL_4:
    v19 = v53;
    sub_23A52E7B4(v53);
    v20 = v51;
    swift_beginAccess();
    sub_23A585630((uint64_t)v19, v20, type metadata accessor for DTSyncDaemon.PersistentData);
    swift_endAccess();
    sub_23A5778F8();
    v21 = *(void (**)(char *, uint64_t))(v4 + 8);
    goto LABEL_5;
  }
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_19:
  v22(v13, 1, 1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t DTSyncDaemon.nextRecordZoneChangeBatch(_:syncEngine:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_23A59E710();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A57A2F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int8x16_t *v19;
  _QWORD *v20;
  int8x16_t v22;
  uint64_t v23;

  if (qword_256997CA0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = sub_23A59E6A4();
  __swift_project_value_buffer(v5, (uint64_t)qword_256997CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v6 = sub_23A59E68C();
  v7 = sub_23A59EBC0();
  v8 = os_log_type_enabled(v6, v7);
  v10 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 56);
  if (v8)
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v23 = v13;
    *(_DWORD *)v12 = 136315138;
    sub_23A52EAEC(&qword_2569944C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8830], MEMORY[0x24BDB8838]);
    v14 = sub_23A59F034();
    *(_QWORD *)(v0 + 16) = sub_23A538FBC(v14, v15, &v23);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl(&dword_23A52C000, v6, v7, "CloudKit nextRecordZoneChangeBatch: context=%s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v13, -1, -1);
    MEMORY[0x23B852178](v12, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v10 + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  }

  v16 = *(_QWORD *)(v0 + 32);
  v22 = *(int8x16_t *)(v0 + 40);
  sub_23A59E884();
  v17 = sub_23A59E854();
  swift_release();
  v18 = swift_task_alloc();
  *(_QWORD *)(v18 + 16) = v16;
  sub_23A57A6E0((uint64_t (*)(_QWORD))sub_23A58527C, v18, v17);
  swift_task_dealloc();
  v19 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v19;
  v19[1] = vextq_s8(v22, v22, 8uLL);
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v20;
  *v20 = v0;
  v20[1] = sub_23A57A590;
  return sub_23A59E758();
}

uint64_t sub_23A57A590()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A57A5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v11;

  v0 = sub_23A59E728();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23A59E740();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A59E704();
  MEMORY[0x23B8512A8](v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v9 = sub_23A59E71C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v9 & 1;
}

uint64_t sub_23A57A6E0(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v27 = sub_23A59E764();
  v7 = *(_QWORD *)(v27 - 8);
  v8 = MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v14 = 0;
    v22 = a2;
    v23 = a3;
    v21 = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v13 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + v13 * v14, v27);
      v16 = a1(v12);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v27);
        swift_bridgeObjectRelease();
        swift_release();
        return v13;
      }
      if ((v16 & 1) != 0)
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v24(v26, v12, v27);
        v17 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23A583FEC(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = v28;
        }
        v19 = *(_QWORD *)(v17 + 16);
        v18 = *(_QWORD *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_23A583FEC(v18 > 1, v19 + 1, 1);
          v17 = v28;
        }
        *(_QWORD *)(v17 + 16) = v19 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(v17 + v15 + v19 * v13, v26, v27);
        v28 = v17;
        a3 = v23;
        a1 = v21;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v27);
      }
      if (v25 == ++v14)
      {
        v13 = v28;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_23A57A8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  v3[11] = swift_task_alloc();
  v4 = type metadata accessor for DTSyncedTimer(0);
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  v3[15] = swift_task_alloc();
  v5 = type metadata accessor for DTSyncedAlarm(0);
  v3[16] = v5;
  v3[17] = *(_QWORD *)(v5 - 8);
  v3[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A57A9C4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_msgSend(*(id *)(v0 + 64), sel_recordName);
  v2 = sub_23A59E9A4();
  v4 = v3;

  *(_QWORD *)(v0 + 152) = v2;
  *(_QWORD *)(v0 + 160) = v4;
  *(_QWORD *)(v0 + 168) = OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
  type metadata accessor for DTSyncDaemon();
  sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 176) = sub_23A59EA7C();
  *(_QWORD *)(v0 + 184) = v5;
  return swift_task_switch();
}

uint64_t sub_23A57AA84()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (uint64_t *)(v0[9] + v0[21]);
  swift_beginAccess();
  v2 = *v1;
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_23A563F00(v0[19], v0[20]), (v4 & 1) != 0))
  {
    sub_23A53ABC0(*(_QWORD *)(v2 + 56) + *(_QWORD *)(v0[17] + 72) * v3, v0[15], type metadata accessor for DTSyncedAlarm);
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  v6 = v0[16];
  v7 = v0[17];
  v8 = v0[15];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, v5, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    sub_23A53B9B4(v0[15], &qword_2569945F8);
    swift_endAccess();
  }
  else
  {
    sub_23A53BA34(v0[15], v0[18], type metadata accessor for DTSyncedAlarm);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23A57ABC0()
{
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23A57AC00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[9] + v0[21];
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 8);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_23A563F00(v0[19], v0[20]), (v4 & 1) != 0))
  {
    sub_23A53ABC0(*(_QWORD *)(v2 + 56) + *(_QWORD *)(v0[13] + 72) * v3, v0[11], type metadata accessor for DTSyncedTimer);
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  v6 = v0[12];
  v7 = v0[13];
  v8 = v0[11];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, v5, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
    sub_23A53B9B4(v0[11], &qword_2569945F0);
  else
    sub_23A53BA34(v0[11], v0[14], type metadata accessor for DTSyncedTimer);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23A57AD44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  CKRecord v3;
  void *v4;
  id v5;
  Class isa;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = sub_23A52EAEC(&qword_256994618, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
  v3.super.isa = (Class)DTSyncedObject.lastKnownRecord.getter(v1, v2);
  if (!v3.super.isa)
  {
    v4 = *(void **)(v0 + 64);
    sub_23A53AB74(0, &qword_256994610);
    sub_23A53163C();
    swift_bridgeObjectRetain();
    v5 = v4;
    v3.super.isa = (Class)sub_23A59ECEC();
  }
  isa = v3.super.isa;
  v7 = *(_QWORD *)(v0 + 144);
  DTSyncedObject.populateRecord(_:)(v3);
  sub_23A53AC04(v7, type metadata accessor for DTSyncedAlarm);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(Class))(v0 + 8))(isa);
}

uint64_t sub_23A57AE44()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *(void **)(v0 + 64);
  sub_23A59E884();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994600);
  v2 = *(_QWORD *)(sub_23A59E764() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23A5A0B80;
  *(_QWORD *)(v4 + v3) = v1;
  (*(void (**)(void))(v2 + 104))();
  v5 = v1;
  sub_23A59E878();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23A57AF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  CKRecord v3;
  void *v4;
  id v5;
  Class isa;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = sub_23A52EAEC(&qword_256994608, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
  v3.super.isa = (Class)DTSyncedObject.lastKnownRecord.getter(v1, v2);
  if (!v3.super.isa)
  {
    v4 = *(void **)(v0 + 64);
    sub_23A53AB74(0, &qword_256994610);
    sub_23A536628();
    v5 = v4;
    swift_bridgeObjectRetain();
    v3.super.isa = (Class)sub_23A59ECEC();
  }
  isa = v3.super.isa;
  v7 = *(_QWORD *)(v0 + 112);
  DTSyncedObject.populateRecord(_:)(v3);
  sub_23A53AC04(v7, type metadata accessor for DTSyncedTimer);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(Class))(v0 + 8))(isa);
}

uint64_t sub_23A57B048(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;

  v51 = a3;
  v52 = a4;
  v6 = a3(0);
  v50 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v49 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v48 = (uint64_t)&v42 - v9;
  v10 = sub_23A59E764();
  v54 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v55 = (uint64_t *)((char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (!v13)
    return v14;
  v44 = v4;
  v56 = MEMORY[0x24BEE4AF8];
  v53 = v11;
  sub_23A583FEC(0, v13, 0);
  result = sub_23A5841E8(v53);
  v16 = result;
  v17 = v53;
  v19 = v18;
  v20 = 0;
  v21 = v53 + 64;
  v46 = *MEMORY[0x24BDB8930];
  v22 = *(_BYTE *)(v53 + 32);
  v43 = v53 + 88;
  v47 = v10;
  v45 = v13;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << v22)
  {
    v25 = (unint64_t)v16 >> 6;
    if ((*(_QWORD *)(v21 + 8 * ((unint64_t)v16 >> 6)) & (1 << v16)) == 0)
      goto LABEL_27;
    if (*(_DWORD *)(v17 + 36) != v19)
      goto LABEL_28;
    v26 = v51;
    v27 = v48;
    sub_23A53ABC0(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v50 + 72) * v16, v48, v51);
    v28 = v27;
    v29 = v49;
    v30 = sub_23A53BA34(v28, v49, v26);
    v31 = v52(v30);
    v32 = v54;
    v33 = v55;
    *v55 = v31;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v32 + 104))(v33, v46, v10);
    sub_23A53AC04(v29, v26);
    v14 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23A583FEC(0, *(_QWORD *)(v14 + 16) + 1, 1);
      v14 = v56;
    }
    v35 = *(_QWORD *)(v14 + 16);
    v34 = *(_QWORD *)(v14 + 24);
    if (v35 >= v34 >> 1)
    {
      sub_23A583FEC(v34 > 1, v35 + 1, 1);
      v14 = v56;
    }
    *(_QWORD *)(v14 + 16) = v35 + 1;
    v36 = v14
        + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))
        + *(_QWORD *)(v54 + 72) * v35;
    v10 = v47;
    result = (*(uint64_t (**)(unint64_t, uint64_t *, uint64_t))(v54 + 32))(v36, v55, v47);
    v56 = v14;
    v17 = v53;
    v22 = *(_BYTE *)(v53 + 32);
    v23 = 1 << v22;
    if (v16 >= 1 << v22)
      goto LABEL_29;
    v37 = *(_QWORD *)(v21 + 8 * v25);
    if ((v37 & (1 << v16)) == 0)
      goto LABEL_30;
    if (*(_DWORD *)(v53 + 36) != v19)
      goto LABEL_31;
    v38 = v37 & (-2 << (v16 & 0x3F));
    if (v38)
    {
      v23 = __clz(__rbit64(v38)) | v16 & 0xFFFFFFFFFFFFFFC0;
      v24 = v45;
    }
    else
    {
      v39 = v25 + 1;
      v40 = (v23 + 63) >> 6;
      v24 = v45;
      if (v25 + 1 < v40)
      {
        v41 = *(_QWORD *)(v21 + 8 * v39);
        if (!v41)
        {
          v39 = v25 + 2;
          if (v25 + 2 >= v40)
            goto LABEL_4;
          v41 = *(_QWORD *)(v21 + 8 * v39);
          if (!v41)
          {
            while (v40 - 3 != v25)
            {
              v41 = *(_QWORD *)(v43 + 8 * v25++);
              if (v41)
              {
                v39 = v25 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        v23 = __clz(__rbit64(v41)) + (v39 << 6);
      }
    }
LABEL_4:
    ++v20;
    v16 = v23;
    if (v20 == v24)
      return v14;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23A57B3C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t result;
  unint64_t v11;
  __int128 v12;
  unint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  BOOL v26;
  uint64_t *v27;
  BOOL v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = sub_23A59EB54();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994650);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v43 = a1;
  if (v9)
  {
    v48 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    result = swift_bridgeObjectRetain();
    v44 = 0;
    v11 = 0;
    v45 = -(uint64_t)v9;
    *(_QWORD *)&v12 = 136315394;
    v42 = v12;
    v41 = MEMORY[0x24BEE4AD8] + 8;
    v13 = v9;
    v46 = v8;
    v47 = v5;
    v39 = v9;
LABEL_3:
    if (v11 > v13)
      v13 = v11;
    v49 = -(uint64_t)v13;
    ++v11;
    while (1)
    {
      if (v49 + v11 == 1)
      {
        __break(1u);
        return result;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, v48 + *(_QWORD *)(v3 + 72) * (v11 - 1), v2);
      v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v14(v8, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
        goto LABEL_29;
      v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      v16 = (void *)MEMORY[0x23B8516BC](v15);
      v17 = sub_23A59ECF8();
      v19 = v18;
      v20 = objc_msgSend(v16, sel_recordID);
      v21 = objc_msgSend(v20, sel_recordName);

      v22 = sub_23A59E9A4();
      v24 = v23;

      v25 = sub_23A53163C();
      if (v17 == *v25 && v19 == v25[1] || (sub_23A59F064() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v26 = sub_23A57CB7C(v22, v24, (objc_class *)v16);
      }
      else
      {
        v27 = sub_23A536628();
        if ((v17 != *v27 || v19 != v27[1]) && (sub_23A59F064() & 1) == 0)
        {
          if (qword_256997CA0 != -1)
            swift_once();
          v29 = sub_23A59E6A4();
          __swift_project_value_buffer(v29, (uint64_t)qword_256997CA8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v30 = sub_23A59E68C();
          v31 = sub_23A59EBC0();
          v40 = v31;
          if (os_log_type_enabled(v30, v31))
          {
            v32 = swift_slowAlloc();
            v37 = v30;
            v33 = v32;
            v38 = swift_slowAlloc();
            v50 = v38;
            *(_DWORD *)v33 = v42;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v33 + 4) = sub_23A538FBC(v17, v19, &v50);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v33 + 12) = 2080;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v33 + 14) = sub_23A538FBC(v22, v24, &v50);
            swift_bridgeObjectRelease_n();
            v34 = v37;
            _os_log_impl(&dword_23A52C000, v37, (os_log_type_t)v40, "Server modification: unsupported, type=%s, id=%s", (uint8_t *)v33, 0x16u);
            v35 = v38;
            swift_arrayDestroy();
            MEMORY[0x23B852178](v35, -1, -1);
            MEMORY[0x23B852178](v33, -1, -1);

          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();

          }
          v5 = v47;
          result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v47, v2);
          goto LABEL_17;
        }
        swift_bridgeObjectRelease();
        v26 = sub_23A57D4B0(v22, v24, (objc_class *)v16);
      }
      v28 = v26;
      swift_bridgeObjectRelease();

      v5 = v47;
      result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v47, v2);
      if (v28)
      {
        v44 = 1;
        v8 = v46;
        v13 = v39;
        if (v45 + v11)
          goto LABEL_3;
        goto LABEL_28;
      }
LABEL_17:
      ++v11;
      v8 = v46;
      if (v45 + v11 == 1)
        goto LABEL_28;
    }
  }
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  swift_bridgeObjectRetain();
  v44 = 0;
LABEL_28:
  v14(v8, 1, 1, v2);
LABEL_29:
  swift_bridgeObjectRelease();
  return v44 & 1;
}

uint64_t sub_23A57B88C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  id v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  unint64_t v92;
  char v93;
  char v94;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  id v104;
  id v105;
  void *v106;
  id v107;
  id v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  unint64_t v136;
  char v137;
  char v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  char *v149;
  id v150;
  id v151;
  void *v152;
  id v153;
  id v154;
  void (*v155)(char *, uint64_t, uint64_t, uint64_t);
  char v156;
  _QWORD v158[2];
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  __int128 v169;
  int v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(char *, uint64_t, uint64_t, uint64_t);
  void (*v180)(char *, uint64_t, uint64_t);
  char *v181;
  char *v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v161 = (uint64_t)v158 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v158 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v171 = (uint64_t)v158 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v162 = (char *)v158 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v172 = (char *)v158 - v16;
  v17 = sub_23A59E260();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v160 = (char *)v158 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v167 = (char *)v158 - v21;
  v22 = sub_23A59E6A4();
  v184 = *(_QWORD *)(v22 - 8);
  v185 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v158 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v182 = (char *)v158 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v166 = (uint64_t)v158 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v165 = (uint64_t)v158 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v186 = (uint64_t)v158 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v168 = (char *)v158 - v34;
  v189 = sub_23A59EB78();
  v35 = *(_QWORD *)(v189 - 8);
  MEMORY[0x24BDAC7A8](v189);
  v188 = (char *)v158 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994638);
  MEMORY[0x24BDAC7A8](v37);
  v181 = (char *)v158 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v187 = *(_QWORD *)(a1 + 16);
    v163 = v25;
    v159 = v6;
    v183 = (uint64_t *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
    v39 = a1 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    v178 = *(_QWORD *)(v35 + 72);
    v180 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
    v158[1] = a1;
    swift_bridgeObjectRetain();
    v170 = 0;
    *(_QWORD *)&v40 = 136315394;
    v169 = v40;
    v164 = MEMORY[0x24BEE4AD8] + 8;
    v173 = v11;
    v174 = v18;
    v175 = v17;
    v41 = (uint64_t)v168;
    v176 = v35;
    v42 = v181;
    do
    {
      v45 = v189;
      v180(v42, v39, v189);
      v179 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
      v179(v42, 0, 1, v45);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v42, 1, v45) == 1)
      {
        v156 = v170;
        goto LABEL_70;
      }
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v188, v42, v189);
      v46 = sub_23A59EB60();
      v48 = v47;
      v49 = (void *)MEMORY[0x23B8516E0]();
      v50 = objc_msgSend(v49, sel_recordName);

      v190 = sub_23A59E9A4();
      v52 = v51;

      v53 = sub_23A53163C();
      if (v46 == *v53 && v48 == v53[1] || (sub_23A59F064() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v54 = v183;
        swift_beginAccess();
        v55 = *v54;
        if (*(_QWORD *)(*v54 + 16))
        {
          swift_bridgeObjectRetain();
          v56 = sub_23A563F00(v190, v52);
          if ((v57 & 1) != 0)
          {
            v58 = v56;
            v59 = *(_QWORD *)(v55 + 56);
            v60 = type metadata accessor for DTSyncedAlarm(0);
            v61 = *(_QWORD *)(v60 - 8);
            sub_23A53ABC0(v59 + *(_QWORD *)(v61 + 72) * v58, v41, type metadata accessor for DTSyncedAlarm);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v41, 0, 1, v60);
          }
          else
          {
            v74 = type metadata accessor for DTSyncedAlarm(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v41, 1, 1, v74);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v62 = type metadata accessor for DTSyncedAlarm(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v41, 1, 1, v62);
        }
        v76 = v184;
        v75 = v185;
        swift_endAccess();
        v77 = v182;
        if (qword_256997CA0 != -1)
          swift_once();
        v78 = __swift_project_value_buffer(v75, (uint64_t)qword_256997CA8);
        (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v77, v78, v75);
        sub_23A549090(v41, v186, &qword_2569945F8);
        swift_bridgeObjectRetain_n();
        v79 = sub_23A59E68C();
        v80 = sub_23A59EBC0();
        if (os_log_type_enabled(v79, v80))
        {
          v177 = v39;
          v81 = swift_slowAlloc();
          v82 = swift_slowAlloc();
          v192 = v82;
          *(_DWORD *)v81 = v169;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v81 + 4) = sub_23A538FBC(v190, v52, &v192);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v81 + 12) = 2080;
          v83 = v165;
          sub_23A549090(v186, v165, &qword_2569945F8);
          v84 = type metadata accessor for DTSyncedAlarm(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 48))(v83, 1, v84) == 1)
          {
            sub_23A53B9B4(v83, &qword_2569945F8);
            v85 = 0xE300000000000000;
            v86 = 7104878;
          }
          else
          {
            v86 = DTSyncedAlarm.description.getter();
            v85 = v87;
            v41 = (uint64_t)v168;
            sub_23A53AC04(v83, type metadata accessor for DTSyncedAlarm);
          }
          *(_QWORD *)(v81 + 14) = sub_23A538FBC(v86, v85, &v192);
          swift_bridgeObjectRelease();
          sub_23A53B9B4(v186, &qword_2569945F8);
          _os_log_impl(&dword_23A52C000, v79, v80, "Server deletion: alarm, id=%s, existing=%s", (uint8_t *)v81, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B852178](v82, -1, -1);
          MEMORY[0x23B852178](v81, -1, -1);

          (*(void (**)(char *, uint64_t))(v184 + 8))(v182, v185);
          v11 = v173;
          v39 = v177;
        }
        else
        {
          swift_bridgeObjectRelease_n();
          sub_23A53B9B4(v186, &qword_2569945F8);

          (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v75);
        }
        v88 = type metadata accessor for DTSyncedAlarm(0);
        v89 = *(_QWORD *)(v88 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v41, 1, v88) != 1)
        {
          v90 = v39;
          v91 = v183;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v92 = sub_23A563F00(v190, v52);
          v94 = v93;
          swift_bridgeObjectRelease();
          if ((v94 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v96 = *v91;
            v191 = *v91;
            *v91 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_23A583A10(type metadata accessor for DTSyncedAlarm, &qword_256994640);
              v96 = v191;
            }
            swift_bridgeObjectRelease();
            v97 = v166;
            sub_23A53BA34(*(_QWORD *)(v96 + 56) + *(_QWORD *)(v89 + 72) * v92, v166, type metadata accessor for DTSyncedAlarm);
            sub_23A583288(v92, v96, type metadata accessor for DTSyncedAlarm);
            *v91 = v96;
            swift_bridgeObjectRelease();
            v98 = 0;
            v41 = (uint64_t)v168;
            v11 = v173;
          }
          else
          {
            v98 = 1;
            v97 = v166;
          }
          v99 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56);
          v170 = 1;
          v99(v97, v98, 1, v88);
          swift_bridgeObjectRelease();
          sub_23A53B9B4(v97, &qword_2569945F8);
          swift_endAccess();
          v39 = v90;
        }
        v100 = v172;
        sub_23A59E200();
        swift_bridgeObjectRelease();
        v102 = v174;
        v101 = v175;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48))(v100, 1, v175) == 1)
        {
          v35 = v176;
          (*(void (**)(char *, uint64_t))(v176 + 8))(v188, v189);
          sub_23A53B9B4(v41, &qword_2569945F8);
          v43 = (uint64_t)v100;
          v44 = &qword_256993720;
        }
        else
        {
          v103 = v167;
          (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v167, v100, v101);
          v104 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67828]), sel_init);
          v105 = objc_allocWithZone(MEMORY[0x24BE67818]);
          v106 = (void *)sub_23A59E224();
          v107 = objc_msgSend(v105, sel_initWithIdentifier_, v106);

          v108 = objc_msgSend(v104, sel_removeAlarm_, v107);
          (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v101);
          v35 = v176;
          (*(void (**)(char *, uint64_t))(v176 + 8))(v188, v189);
          v43 = v41;
          v44 = &qword_2569945F8;
        }
        sub_23A53B9B4(v43, v44);
        v42 = v181;
      }
      else
      {
        v63 = sub_23A536628();
        if (v46 == *v63 && v48 == v63[1] || (sub_23A59F064() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v64 = v183;
          swift_beginAccess();
          v65 = v64[1];
          if (*(_QWORD *)(v65 + 16))
          {
            swift_bridgeObjectRetain();
            v66 = sub_23A563F00(v190, v52);
            if ((v67 & 1) != 0)
            {
              v68 = v66;
              v69 = *(_QWORD *)(v65 + 56);
              v70 = type metadata accessor for DTSyncedTimer(0);
              v71 = *(_QWORD *)(v70 - 8);
              v72 = v69 + *(_QWORD *)(v71 + 72) * v68;
              v73 = v171;
              sub_23A53ABC0(v72, v171, type metadata accessor for DTSyncedTimer);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v73, 0, 1, v70);
            }
            else
            {
              v115 = type metadata accessor for DTSyncedTimer(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v171, 1, 1, v115);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            v109 = type metadata accessor for DTSyncedTimer(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v171, 1, 1, v109);
          }
          v117 = v184;
          v116 = v185;
          swift_endAccess();
          if (qword_256997CA0 != -1)
            swift_once();
          v118 = __swift_project_value_buffer(v116, (uint64_t)qword_256997CA8);
          v119 = v163;
          (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v163, v118, v116);
          sub_23A549090(v171, (uint64_t)v11, &qword_2569945F0);
          swift_bridgeObjectRetain_n();
          v120 = sub_23A59E68C();
          v121 = sub_23A59EBC0();
          if (os_log_type_enabled(v120, v121))
          {
            v122 = swift_slowAlloc();
            v177 = swift_slowAlloc();
            v192 = v177;
            *(_DWORD *)v122 = v169;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v122 + 4) = sub_23A538FBC(v190, v52, &v192);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v122 + 12) = 2080;
            v123 = v161;
            sub_23A549090((uint64_t)v11, v161, &qword_2569945F0);
            v124 = type metadata accessor for DTSyncedTimer(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 48))(v123, 1, v124) == 1)
            {
              sub_23A53B9B4(v123, &qword_2569945F0);
              v125 = 0xE300000000000000;
              v126 = 7104878;
              v127 = (uint64_t)v173;
            }
            else
            {
              v128 = v39;
              v129 = v123;
              v126 = DTSyncedTimer.description.getter();
              v125 = v130;
              v131 = v129;
              v39 = v128;
              v127 = (uint64_t)v173;
              sub_23A53AC04(v131, type metadata accessor for DTSyncedTimer);
            }
            *(_QWORD *)(v122 + 14) = sub_23A538FBC(v126, v125, &v192);
            swift_bridgeObjectRelease();
            sub_23A53B9B4(v127, &qword_2569945F0);
            _os_log_impl(&dword_23A52C000, v120, v121, "Server deletion: timer, id=%s, existing=%s", (uint8_t *)v122, 0x16u);
            v132 = v177;
            swift_arrayDestroy();
            MEMORY[0x23B852178](v132, -1, -1);
            MEMORY[0x23B852178](v122, -1, -1);

            (*(void (**)(char *, uint64_t))(v184 + 8))(v163, v185);
          }
          else
          {
            swift_bridgeObjectRelease_n();
            sub_23A53B9B4((uint64_t)v11, &qword_2569945F0);

            (*(void (**)(char *, uint64_t))(v117 + 8))(v119, v116);
          }
          v133 = type metadata accessor for DTSyncedTimer(0);
          v134 = *(_QWORD *)(v133 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v171, 1, v133) != 1)
          {
            v177 = v39;
            v135 = v183;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v136 = sub_23A563F00(v190, v52);
            v138 = v137;
            swift_bridgeObjectRelease();
            if ((v138 & 1) != 0)
            {
              v139 = swift_isUniquelyReferenced_nonNull_native();
              v140 = v135[1];
              v191 = v140;
              v135[1] = 0x8000000000000000;
              if ((v139 & 1) == 0)
              {
                sub_23A583A10(type metadata accessor for DTSyncedTimer, &qword_256994648);
                v140 = v191;
              }
              swift_bridgeObjectRelease();
              v141 = (uint64_t)v159;
              sub_23A53BA34(*(_QWORD *)(v140 + 56) + *(_QWORD *)(v134 + 72) * v136, (uint64_t)v159, type metadata accessor for DTSyncedTimer);
              sub_23A583288(v136, v140, type metadata accessor for DTSyncedTimer);
              v135[1] = v140;
              swift_bridgeObjectRelease();
              v142 = 0;
            }
            else
            {
              v142 = 1;
              v141 = (uint64_t)v159;
            }
            v143 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56);
            v170 = 1;
            v143(v141, v142, 1, v133);
            swift_bridgeObjectRelease();
            sub_23A53B9B4(v141, &qword_2569945F0);
            swift_endAccess();
            v39 = v177;
          }
          v144 = v162;
          sub_23A59E200();
          swift_bridgeObjectRelease();
          v146 = v174;
          v145 = v175;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48))(v144, 1, v175) == 1)
          {
            v35 = v176;
            (*(void (**)(char *, uint64_t))(v176 + 8))(v188, v189);
            sub_23A53B9B4(v171, &qword_2569945F0);
            v147 = (uint64_t)v144;
            v148 = &qword_256993720;
          }
          else
          {
            v149 = v160;
            (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v160, v144, v145);
            v150 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67870]), sel_init);
            v151 = objc_allocWithZone(MEMORY[0x24BE67868]);
            v152 = (void *)sub_23A59E224();
            v153 = objc_msgSend(v151, sel_initWithIdentifier_, v152);

            v154 = objc_msgSend(v150, sel_removeTimer_, v153);
            (*(void (**)(char *, uint64_t))(v146 + 8))(v149, v145);
            v35 = v176;
            (*(void (**)(char *, uint64_t))(v176 + 8))(v188, v189);
            v147 = v171;
            v148 = &qword_2569945F0;
          }
          sub_23A53B9B4(v147, v148);
          v42 = v181;
          v11 = v173;
        }
        else
        {
          v177 = v39;
          if (qword_256997CA0 != -1)
            swift_once();
          __swift_project_value_buffer(v185, (uint64_t)qword_256997CA8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v110 = sub_23A59E68C();
          v111 = sub_23A59EBC0();
          if (os_log_type_enabled(v110, v111))
          {
            v112 = swift_slowAlloc();
            v113 = swift_slowAlloc();
            v192 = v113;
            *(_DWORD *)v112 = v169;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v112 + 4) = sub_23A538FBC(v46, v48, &v192);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v112 + 12) = 2080;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v112 + 14) = sub_23A538FBC(v190, v52, &v192);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_23A52C000, v110, v111, "Server deletion: unsupported, type=%s, id=%s", (uint8_t *)v112, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x23B852178](v113, -1, -1);
            v114 = v112;
            v35 = v176;
            MEMORY[0x23B852178](v114, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }

          (*(void (**)(char *, uint64_t))(v35 + 8))(v188, v189);
          v11 = v173;
          v42 = v181;
          v39 = v177;
        }
      }
      v39 += v178;
      --v187;
    }
    while (v187);
    v156 = v170;
    v179(v42, 1, 1, v189);
  }
  else
  {
    v155 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    swift_bridgeObjectRetain();
    v156 = 0;
    v155(v181, 1, 1, v189);
  }
LABEL_70:
  swift_bridgeObjectRelease();
  return v156 & 1;
}

BOOL sub_23A57CB7C(uint64_t a1, unint64_t a2, objc_class *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BOOL4 v34;
  BOOL v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  _QWORD v58[2];
  char *v59;
  uint64_t v60;
  _BOOL4 v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  CKRecord v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[4];

  v67.super.isa = a3;
  v6 = sub_23A59E1F4();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DTSyncedAlarm(0);
  v10 = *(_QWORD **)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v65 = (uint64_t)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v58 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v64 = (uint64_t)v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v58 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v58 - v21;
  v23 = (uint64_t *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
  swift_beginAccess();
  v24 = *v23;
  if (*(_QWORD *)(*v23 + 16))
  {
    swift_bridgeObjectRetain();
    v25 = sub_23A563F00(a1, a2);
    if ((v26 & 1) != 0)
    {
      sub_23A53ABC0(*(_QWORD *)(v24 + 56) + v10[9] * v25, (uint64_t)v22, type metadata accessor for DTSyncedAlarm);
      v27 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v10[7];
      v28 = v22;
      v29 = 0;
    }
    else
    {
      v27 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v10[7];
      v28 = v22;
      v29 = 1;
    }
    v63 = v27;
    v27(v28, v29, 1, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v63 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v10[7];
    v63(v22, 1, 1, v9);
  }
  swift_endAccess();
  sub_23A549090((uint64_t)v22, (uint64_t)v20, &qword_2569945F8);
  v62 = (uint64_t (*)(char *, uint64_t, uint64_t))v10[6];
  v30 = v62(v20, 1, v9);
  v66 = a1;
  if (v30 == 1)
  {
    swift_bridgeObjectRetain();
    v31 = default argument 1 of DTSyncedAlarm.init(id:hour:minute:modificationDate:)();
    v32 = a1;
    v33 = default argument 2 of DTSyncedAlarm.init(id:hour:minute:modificationDate:)();
    default argument 3 of DTSyncedAlarm.init(id:hour:minute:modificationDate:)();
    DTSyncedAlarm.init(id:hour:minute:modificationDate:)(v32, a2, v31, v33, (uint64_t)v8, (uint64_t)v14);
    sub_23A53B9B4((uint64_t)v20, &qword_2569945F8);
  }
  else
  {
    sub_23A53BA34((uint64_t)v20, (uint64_t)v14, type metadata accessor for DTSyncedAlarm);
  }
  v34 = DTSyncedAlarm.mergeFromServerRecord(_:)(v67);
  v35 = v34;
  if (v34)
  {
    v61 = v34;
    if (qword_256997CA0 != -1)
      swift_once();
    v36 = sub_23A59E6A4();
    v60 = __swift_project_value_buffer(v36, (uint64_t)qword_256997CA8);
    v37 = sub_23A59E68C();
    v38 = sub_23A59EBC0();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v59 = v22;
      v41 = v14;
      v42 = v40;
      v70[0] = v40;
      *(_DWORD *)v39 = 136315138;
      v58[1] = v39 + 4;
      swift_beginAccess();
      sub_23A52EAEC(&qword_256993288, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
      v43 = sub_23A59F034();
      v69 = sub_23A538FBC(v43, v44, v70);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v37, v38, "Server modification: alarm newer, %s", v39, 0xCu);
      swift_arrayDestroy();
      v45 = v42;
      v14 = v41;
      v22 = v59;
      MEMORY[0x23B852178](v45, -1, -1);
      MEMORY[0x23B852178](v39, -1, -1);
    }

    swift_beginAccess();
    sub_23A52EAEC(&qword_256994618, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
    DTSyncedObject.setLastKnownRecordIfNewer(_:)(v67);
    swift_endAccess();
    v46 = v64;
    sub_23A53ABC0((uint64_t)v14, v64, type metadata accessor for DTSyncedAlarm);
    v63((char *)v46, 0, 1, v9);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23A57759C(v46, v66, a2, &qword_2569945F8, type metadata accessor for DTSyncedAlarm, &qword_256994640);
    swift_endAccess();
    v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67828]), sel_init);
    sub_23A53AB74(0, &qword_256994658);
    v48 = v65;
    sub_23A53ABC0((uint64_t)v14, v65, type metadata accessor for DTSyncedAlarm);
    v55 = MTMutableAlarm.init(_:)(v48);
    if (v62(v22, 1, v9) == 1)
      v56 = objc_msgSend(v47, sel_addAlarm_, v55);
    else
      v56 = objc_msgSend(v47, sel_updateAlarm_, v55);

    v35 = v61;
  }
  else
  {
    v49 = v14;
    if (qword_256997CA0 != -1)
      swift_once();
    v50 = sub_23A59E6A4();
    __swift_project_value_buffer(v50, (uint64_t)qword_256997CA8);
    swift_bridgeObjectRetain_n();
    v51 = sub_23A59E68C();
    v52 = sub_23A59EBC0();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      v54 = swift_slowAlloc();
      v70[0] = v54;
      *(_DWORD *)v53 = 136315138;
      swift_bridgeObjectRetain();
      v68 = sub_23A538FBC(v66, a2, v70);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A52C000, v51, v52, "Server modification: alarm older, id=%s", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v54, -1, -1);
      MEMORY[0x23B852178](v53, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v14 = v49;
  }
  sub_23A53B9B4((uint64_t)v22, &qword_2569945F8);
  sub_23A53AC04((uint64_t)v14, type metadata accessor for DTSyncedAlarm);
  return v35;
}

BOOL sub_23A57D4B0(uint64_t a1, unint64_t a2, objc_class *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  CKRecord v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  double v35;
  _BOOL4 v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  id v58;
  _QWORD v60[2];
  _BOOL4 v61;
  char *v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[4];

  v7 = sub_23A59E1F4();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DTSyncedTimer(0);
  v11 = *(_QWORD **)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v68 = (uint64_t)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v60 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v67 = (uint64_t)v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v60 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v60 - v22;
  v24 = v3 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
  swift_beginAccess();
  v65 = v24;
  v25 = v24 + 8;
  v26 = *(_QWORD *)(v24 + 8);
  v66 = v25;
  v27 = *(_QWORD *)(v26 + 16);
  v69 = a1;
  if (v27)
  {
    swift_bridgeObjectRetain();
    v28 = sub_23A563F00(a1, a2);
    if ((v29 & 1) != 0)
    {
      sub_23A53ABC0(*(_QWORD *)(v26 + 56) + v11[9] * v28, (uint64_t)v23, type metadata accessor for DTSyncedTimer);
      v30 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7];
      v31 = v23;
      v32 = 0;
    }
    else
    {
      v30 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7];
      v31 = v23;
      v32 = 1;
    }
    v64 = v30;
    v30(v31, v32, 1, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v64 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7];
    v64(v23, 1, 1, v10);
  }
  v33.super.isa = a3;
  swift_endAccess();
  sub_23A549090((uint64_t)v23, (uint64_t)v21, &qword_2569945F0);
  v34 = (unsigned int (*)(char *, uint64_t, uint64_t))v11[6];
  if (v34(v21, 1, v10) == 1)
  {
    swift_bridgeObjectRetain();
    v35 = default argument 1 of DTSyncedTimer.init(id:duration:modificationDate:)();
    default argument 2 of DTSyncedTimer.init(id:duration:modificationDate:)();
    DTSyncedTimer.init(id:duration:modificationDate:)(v69, a2, (uint64_t)v9, (uint64_t)v15, v35);
    sub_23A53B9B4((uint64_t)v21, &qword_2569945F0);
  }
  else
  {
    sub_23A53BA34((uint64_t)v21, (uint64_t)v15, type metadata accessor for DTSyncedTimer);
  }
  v36 = DTSyncedTimer.mergeFromServerRecord(_:)(v33);
  if (v36)
  {
    v62 = v23;
    if (qword_256997CA0 != -1)
      swift_once();
    v61 = v36;
    v37 = sub_23A59E6A4();
    v60[1] = __swift_project_value_buffer(v37, (uint64_t)qword_256997CA8);
    v38 = sub_23A59E68C();
    v39 = sub_23A59EBC0();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v63 = v15;
      v41 = (uint8_t *)v40;
      v42 = swift_slowAlloc();
      v72[0] = v42;
      *(_DWORD *)v41 = 136315138;
      v60[0] = v41 + 4;
      swift_beginAccess();
      sub_23A52EAEC(&qword_2569932C0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
      v43 = sub_23A59F034();
      v71 = sub_23A538FBC(v43, v44, v72);
      sub_23A59ED1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v38, v39, "Server modification: timer newer, %s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v42, -1, -1);
      v45 = v41;
      v15 = v63;
      MEMORY[0x23B852178](v45, -1, -1);
    }

    v23 = v62;
    v46 = v69;
    swift_beginAccess();
    sub_23A52EAEC(&qword_256994608, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
    DTSyncedObject.setLastKnownRecordIfNewer(_:)(v33);
    swift_endAccess();
    v47 = v67;
    sub_23A53ABC0((uint64_t)v15, v67, type metadata accessor for DTSyncedTimer);
    v64((char *)v47, 0, 1, v10);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23A57759C(v47, v46, a2, &qword_2569945F0, type metadata accessor for DTSyncedTimer, &qword_256994648);
    swift_endAccess();
    v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67870]), sel_init);
    sub_23A53AB74(0, &qword_256994660);
    v49 = v68;
    sub_23A53ABC0((uint64_t)v15, v68, type metadata accessor for DTSyncedTimer);
    v57 = MTMutableTimer.init(_:)(v49);
    if (v34(v23, 1, v10) == 1)
      v58 = objc_msgSend(v48, sel_addTimer_, v57);
    else
      v58 = objc_msgSend(v48, sel_updateTimer_, v57);

    LOBYTE(v36) = v61;
  }
  else
  {
    if (qword_256997CA0 != -1)
      swift_once();
    v50 = sub_23A59E6A4();
    __swift_project_value_buffer(v50, (uint64_t)qword_256997CA8);
    swift_bridgeObjectRetain_n();
    v51 = sub_23A59E68C();
    v52 = sub_23A59EBC0();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      v54 = v23;
      v55 = swift_slowAlloc();
      v72[0] = v55;
      *(_DWORD *)v53 = 136315138;
      swift_bridgeObjectRetain();
      v70 = sub_23A538FBC(v69, a2, v72);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A52C000, v51, v52, "Server modification: timer older, id=%s", v53, 0xCu);
      swift_arrayDestroy();
      v56 = v55;
      v23 = v54;
      MEMORY[0x23B852178](v56, -1, -1);
      MEMORY[0x23B852178](v53, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  sub_23A53B9B4((uint64_t)v23, &qword_2569945F0);
  sub_23A53AC04((uint64_t)v15, type metadata accessor for DTSyncedTimer);
  return v36;
}

uint64_t sub_23A57DE04(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  int v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t **v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t **v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  os_log_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  uint64_t **v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v76;
  uint64_t v77;
  os_log_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  __int128 v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t **v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for DTSyncedTimer(0);
  i = *(char **)(v84 - 8);
  v7 = MEMORY[0x24BDAC7A8](v84);
  v77 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v76 = (uint64_t)&v76 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for DTSyncedAlarm(0);
  v13 = *(_QWORD *)(v91 - 8);
  v14 = MEMORY[0x24BDAC7A8](v91);
  v80 = (uint64_t)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v79 = (uint64_t)&v76 - v16;
  if (!(a1 >> 62))
  {
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17)
      goto LABEL_3;
LABEL_55:
    swift_bridgeObjectRelease();
    v74 = 0;
    return v74 & 1;
  }
LABEL_54:
  swift_bridgeObjectRetain();
  v17 = sub_23A59EED8();
  if (!v17)
    goto LABEL_55;
LABEL_3:
  v82 = i;
  v83 = v5;
  v19 = 0;
  v5 = 0;
  v92 = (uint64_t **)((char *)v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
  v94 = a1 & 0xC000000000000001;
  v86 = a1 & 0xFFFFFFFFFFFFFF8;
  *(_QWORD *)&v18 = 136315394;
  v88 = v18;
  v85 = MEMORY[0x24BEE4AD8] + 8;
  v87 = a1;
  v89 = v12;
  v90 = v13;
  v93 = (char *)v17;
  while (2)
  {
    v81 = v19;
    for (i = v5; ; ++i)
    {
      if (v94)
      {
        v20 = (id)MEMORY[0x23B85198C](i, a1);
      }
      else
      {
        if ((unint64_t)i >= *(_QWORD *)(v86 + 16))
          goto LABEL_53;
        v20 = *(id *)(a1 + 8 * (_QWORD)i + 32);
      }
      v21 = v20;
      v5 = i + 1;
      if (__OFADD__(i, 1))
      {
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      v22 = sub_23A59ECF8();
      v24 = v23;
      v25 = objc_msgSend(v21, sel_recordID);
      v26 = objc_msgSend(v25, sel_recordName);

      v95 = sub_23A59E9A4();
      v28 = v27;

      v29 = sub_23A53163C();
      if (v22 == *v29 && v24 == v29[1] || (sub_23A59F064() & 1) != 0)
      {
        if (qword_256997CA0 != -1)
          swift_once();
        v30 = sub_23A59E6A4();
        __swift_project_value_buffer(v30, (uint64_t)qword_256997CA8);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v31 = sub_23A59E68C();
        v32 = sub_23A59EBC0();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = swift_slowAlloc();
          v34 = swift_slowAlloc();
          v97[0] = v34;
          *(_DWORD *)v33 = v88;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v33 + 4) = sub_23A538FBC(v22, v24, v97);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v33 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v33 + 14) = sub_23A538FBC(v95, v28, v97);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_23A52C000, v31, v32, "Server saved: type=%s, id=%s", (uint8_t *)v33, 0x16u);
          swift_arrayDestroy();
          v35 = v34;
          a1 = v87;
          MEMORY[0x23B852178](v35, -1, -1);
          v36 = v33;
          v12 = v89;
          MEMORY[0x23B852178](v36, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        v13 = v90;
        v37 = v92;
        swift_beginAccess();
        v1 = *v37;
        if ((*v37)[2])
        {
          swift_bridgeObjectRetain();
          v38 = sub_23A563F00(v95, v28);
          if ((v39 & 1) != 0)
          {
            sub_23A53ABC0(v1[7] + *(_QWORD *)(v13 + 72) * v38, (uint64_t)v12, type metadata accessor for DTSyncedAlarm);
            v40 = 0;
          }
          else
          {
            v40 = 1;
          }
          v49 = v91;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, v40, 1, v91);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v49) != 1)
          {
            v64 = v79;
            sub_23A53BA34((uint64_t)v12, v79, type metadata accessor for DTSyncedAlarm);
            swift_endAccess();
            sub_23A52EAEC(&qword_256994618, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
            DTSyncedObject.setLastKnownRecordIfNewer(_:)((CKRecord)v21);
            v65 = (uint64_t *)v92;
            swift_beginAccess();
            v66 = v80;
            sub_23A53ABC0(v64, v80, type metadata accessor for DTSyncedAlarm);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v96 = (uint64_t *)*v65;
            *v65 = 0x8000000000000000;
            v1 = (uint64_t *)&v96;
            sub_23A58365C(v66, v95, v28, isUniquelyReferenced_nonNull_native, type metadata accessor for DTSyncedAlarm, &qword_256994640);
            *v65 = (uint64_t)v96;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();

            v68 = v64;
            v69 = type metadata accessor for DTSyncedAlarm;
            goto LABEL_50;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, 1, 1, v91);
        }
        v50 = (uint64_t)v12;
        v51 = &qword_2569945F8;
        goto LABEL_44;
      }
      v41 = sub_23A536628();
      if ((v22 != *v41 || v24 != v41[1]) && (sub_23A59F064() & 1) == 0)
      {
        if (qword_256997CA0 != -1)
          swift_once();
        v58 = sub_23A59E6A4();
        __swift_project_value_buffer(v58, (uint64_t)qword_256997CA8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v13 = sub_23A59E68C();
        v59 = sub_23A59EBC0();
        v1 = (uint64_t *)v59;
        if (os_log_type_enabled((os_log_t)v13, v59))
        {
          v60 = swift_slowAlloc();
          v61 = swift_slowAlloc();
          v78 = (os_log_t)v13;
          v13 = v61;
          v97[0] = v61;
          *(_DWORD *)v60 = v88;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v60 + 4) = sub_23A538FBC(v22, v24, v97);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v60 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v60 + 14) = sub_23A538FBC(v95, v28, v97);
          swift_bridgeObjectRelease_n();
          v62 = v78;
          _os_log_impl(&dword_23A52C000, v78, (os_log_type_t)v1, "Server saved: unsupported, type=%s, id=%s", (uint8_t *)v60, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B852178](v13, -1, -1);
          v63 = v60;
          v12 = v89;
          MEMORY[0x23B852178](v63, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        goto LABEL_45;
      }
      if (qword_256997CA0 != -1)
        swift_once();
      v42 = sub_23A59E6A4();
      __swift_project_value_buffer(v42, (uint64_t)qword_256997CA8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v43 = sub_23A59E68C();
      v44 = sub_23A59EBC0();
      v13 = v44;
      if (os_log_type_enabled(v43, v44))
      {
        v45 = swift_slowAlloc();
        v46 = swift_slowAlloc();
        v97[0] = v46;
        *(_DWORD *)v45 = v88;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v45 + 4) = sub_23A538FBC(v22, v24, v97);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v45 + 14) = sub_23A538FBC(v95, v28, v97);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A52C000, v43, (os_log_type_t)v13, "Server saved: type=%s, id=%s", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        v47 = v46;
        a1 = v87;
        MEMORY[0x23B852178](v47, -1, -1);
        v48 = v45;
        v12 = v89;
        MEMORY[0x23B852178](v48, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      v52 = v92;
      swift_beginAccess();
      v1 = v52[1];
      if (v1[2])
        break;
      v55 = (uint64_t)v83;
      (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v82 + 7))(v83, 1, 1, v84);
LABEL_43:
      v50 = v55;
      v51 = &qword_2569945F0;
LABEL_44:
      sub_23A53B9B4(v50, v51);
      swift_endAccess();
      swift_bridgeObjectRelease();
LABEL_45:

      if (v5 == v93)
      {
        swift_bridgeObjectRelease();
        v74 = v81;
        return v74 & 1;
      }
    }
    swift_bridgeObjectRetain();
    v53 = sub_23A563F00(v95, v28);
    if ((v54 & 1) != 0)
    {
      v56 = v82;
      v55 = (uint64_t)v83;
      sub_23A53ABC0(v1[7] + *((_QWORD *)v82 + 9) * v53, (uint64_t)v83, type metadata accessor for DTSyncedTimer);
      v57 = 0;
    }
    else
    {
      v57 = 1;
      v56 = v82;
      v55 = (uint64_t)v83;
    }
    v1 = (uint64_t *)v84;
    (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v56 + 7))(v55, v57, 1, v84);
    swift_bridgeObjectRelease();
    if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t *))v56 + 6))(v55, 1, v1) == 1)
      goto LABEL_43;
    v70 = v76;
    sub_23A53BA34(v55, v76, type metadata accessor for DTSyncedTimer);
    swift_endAccess();
    sub_23A52EAEC(&qword_256994608, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
    DTSyncedObject.setLastKnownRecordIfNewer(_:)((CKRecord)v21);
    v71 = v92;
    swift_beginAccess();
    v72 = v77;
    sub_23A53ABC0(v70, v77, type metadata accessor for DTSyncedTimer);
    v73 = swift_isUniquelyReferenced_nonNull_native();
    v96 = v71[1];
    v71[1] = (uint64_t *)0x8000000000000000;
    v1 = (uint64_t *)&v96;
    sub_23A58365C(v72, v95, v28, v73, type metadata accessor for DTSyncedTimer, &qword_256994648);
    v71[1] = v96;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

    v68 = v70;
    v69 = type metadata accessor for DTSyncedTimer;
LABEL_50:
    sub_23A53AC04(v68, v69);
    v19 = 1;
    if (v5 != v93)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  v74 = 1;
  return v74 & 1;
}

uint64_t sub_23A57E9A4(unint64_t a1)
{
  NSObject *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  NSObject **v33;
  id v34;
  char *v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  NSObject *v40;
  Class isa;
  uint64_t v42;
  unint64_t v43;
  char v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  unint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  _BOOL4 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  NSObject **v80;
  unint64_t v81;
  char v82;
  char v83;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  id v91;
  id v92;
  void *v93;
  id v94;
  id v95;
  char *v96;
  unint64_t v97;
  char v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  id v111;
  void (*v112)(char *, uint64_t);
  char v113;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  unint64_t v137;
  NSObject **v138;
  uint64_t v139;
  id v140;
  char *v141;
  uint64_t v142;
  NSObject *v143;
  uint64_t v144[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v115 - v7;
  v139 = type metadata accessor for DTSyncedTimer(0);
  v9 = *(_QWORD *)(v139 - 8);
  v10 = MEMORY[0x24BDAC7A8](v139);
  v121 = (uint64_t)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v124 = (uint64_t)&v115 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993720);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v120 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (unint64_t)&v115 - v16;
  v125 = sub_23A59E260();
  v128 = *(_QWORD *)(v125 - 8);
  v18 = MEMORY[0x24BDAC7A8](v125);
  v118 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v119 = (char *)&v115 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v122 = (uint64_t)&v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v115 - v24;
  v26 = type metadata accessor for DTSyncedAlarm(0);
  v27 = *(char **)(v26 - 8);
  v135 = v26;
  v136 = v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v123 = (char *)&v115 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v126 = (uint64_t)&v115 - v30;
  v137 = a1;
  v134 = v25;
  if (a1 >> 62)
    goto LABEL_61;
  v31 = *(_QWORD *)((v137 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v31; v31 = sub_23A59EED8())
  {
    v117 = (char *)v17;
    v116 = v6;
    v127 = 0;
    v17 = 0;
    v6 = v136;
    v133 = v137 & 0xC000000000000001;
    v129 = v137 & 0xFFFFFFFFFFFFFF8;
    *(_QWORD *)&v32 = 136315138;
    v131 = v32;
    v130 = MEMORY[0x24BEE4AD8] + 8;
    v132 = v31;
    v33 = (NSObject **)((char *)v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
    v138 = (NSObject **)((char *)v1 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
    while (v133)
    {
      v34 = (id)MEMORY[0x23B85198C](v17, v137);
      v35 = (char *)(v17 + 1);
      if (__OFADD__(v17, 1))
        goto LABEL_59;
LABEL_10:
      v140 = v34;
      v141 = v35;
      v36 = objc_msgSend(v34, sel_recordName);
      v37 = sub_23A59E9A4();
      v39 = v38;

      swift_beginAccess();
      v40 = *v33;
      isa = (*v33)[2].isa;
      v42 = v39;
      v142 = v37;
      if (isa)
      {
        swift_bridgeObjectRetain();
        v43 = sub_23A563F00(v37, v39);
        if ((v44 & 1) != 0)
        {
          sub_23A53ABC0((uint64_t)v40[7].isa + *((_QWORD *)v6 + 9) * v43, (uint64_t)v25, type metadata accessor for DTSyncedAlarm);
          v45 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v6 + 7);
          v46 = v25;
          v47 = 0;
        }
        else
        {
          v45 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v6 + 7);
          v46 = v25;
          v47 = 1;
        }
        v48 = v135;
        v45(v46, v47, 1, v135);
        swift_bridgeObjectRelease();
        if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v6 + 6))(v25, 1, v48) != 1)
        {
          v57 = v126;
          sub_23A53BA34((uint64_t)v25, v126, type metadata accessor for DTSyncedAlarm);
          swift_endAccess();
          v58 = (uint64_t)v123;
          if (qword_256997CA0 != -1)
            swift_once();
          v59 = sub_23A59E6A4();
          __swift_project_value_buffer(v59, (uint64_t)qword_256997CA8);
          sub_23A53ABC0(v57, v58, type metadata accessor for DTSyncedAlarm);
          v60 = sub_23A59E68C();
          v61 = sub_23A59EBC0();
          if (os_log_type_enabled(v60, v61))
          {
            v62 = swift_slowAlloc();
            v63 = swift_slowAlloc();
            v144[0] = v63;
            *(_DWORD *)v62 = v131;
            sub_23A52EAEC(&qword_256993288, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
            v64 = sub_23A59F034();
            *(_QWORD *)(v62 + 4) = sub_23A538FBC(v64, v65, v144);
            swift_bridgeObjectRelease();
            sub_23A53AC04(v58, type metadata accessor for DTSyncedAlarm);
            _os_log_impl(&dword_23A52C000, v60, v61, "Server deletion extant: alarm=%s", (uint8_t *)v62, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B852178](v63, -1, -1);
            MEMORY[0x23B852178](v62, -1, -1);
          }
          else
          {
            sub_23A53AC04(v58, type metadata accessor for DTSyncedAlarm);
          }

          v80 = v138;
          swift_beginAccess();
          v1 = *v80;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v81 = sub_23A563F00(v142, v42);
          v83 = v82;
          swift_bridgeObjectRelease();
          if ((v83 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v1 = *v80;
            v143 = *v80;
            *v80 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_23A583A10(type metadata accessor for DTSyncedAlarm, &qword_256994640);
              v1 = v143;
            }
            swift_bridgeObjectRelease();
            v85 = v122;
            sub_23A53BA34((uint64_t)v1[7].isa + *((_QWORD *)v136 + 9) * v81, v122, type metadata accessor for DTSyncedAlarm);
            sub_23A583288(v81, (uint64_t)v1, type metadata accessor for DTSyncedAlarm);
            *v80 = v1;
            swift_bridgeObjectRelease();
            v86 = 0;
          }
          else
          {
            v86 = 1;
            v85 = v122;
          }
          v45((char *)v85, v86, 1, v135);
          swift_bridgeObjectRelease();
          sub_23A53B9B4(v85, &qword_2569945F8);
          swift_endAccess();
          v87 = (uint64_t)v117;
          sub_23A59E200();
          swift_bridgeObjectRelease();
          v88 = v125;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v87, 1, v125) == 1)
          {
            sub_23A53AC04(v126, type metadata accessor for DTSyncedAlarm);

            sub_23A53B9B4(v87, &qword_256993720);
          }
          else
          {
            v89 = v128;
            v90 = v119;
            (*(void (**)(char *, uint64_t, uint64_t))(v128 + 32))(v119, v87, v88);
            v91 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67828]), sel_init);
            v92 = objc_allocWithZone(MEMORY[0x24BE67818]);
            v93 = (void *)sub_23A59E224();
            v94 = objc_msgSend(v92, sel_initWithIdentifier_, v93);

            v1 = v94;
            v95 = objc_msgSend(v91, sel_removeAlarm_, v1);

            (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v88);
            sub_23A53AC04(v126, type metadata accessor for DTSyncedAlarm);
          }
          v25 = v134;
          v6 = v136;
          v96 = (char *)v132;
          v33 = v138;
          goto LABEL_57;
        }
      }
      else
      {
        (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v6 + 7))(v25, 1, 1, v135);
      }
      sub_23A53B9B4((uint64_t)v25, &qword_2569945F8);
      swift_endAccess();
      v33 = v138;
      swift_beginAccess();
      v49 = v33[1];
      if (v49[2].isa)
      {
        swift_bridgeObjectRetain();
        v50 = sub_23A563F00(v142, v39);
        if ((v51 & 1) != 0)
        {
          sub_23A53ABC0((uint64_t)v49[7].isa + *(_QWORD *)(v9 + 72) * v50, (uint64_t)v8, type metadata accessor for DTSyncedTimer);
          v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
          v52(v8, 0, 1, v139);
        }
        else
        {
          v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
          v52(v8, 1, 1, v139);
        }
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v139) == 1)
          goto LABEL_22;
        v66 = v124;
        sub_23A53BA34((uint64_t)v8, v124, type metadata accessor for DTSyncedTimer);
        swift_endAccess();
        if (qword_256997CA0 != -1)
          swift_once();
        v67 = sub_23A59E6A4();
        __swift_project_value_buffer(v67, (uint64_t)qword_256997CA8);
        v68 = v66;
        v69 = v121;
        sub_23A53ABC0(v68, v121, type metadata accessor for DTSyncedTimer);
        v70 = sub_23A59E68C();
        v71 = sub_23A59EBC0();
        v72 = v71;
        v73 = os_log_type_enabled(v70, v71);
        v74 = v142;
        if (v73)
        {
          v75 = swift_slowAlloc();
          v127 = v72;
          v76 = v75;
          v77 = swift_slowAlloc();
          v144[0] = v77;
          *(_DWORD *)v76 = v131;
          sub_23A52EAEC(&qword_2569932C0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
          v78 = sub_23A59F034();
          *(_QWORD *)(v76 + 4) = sub_23A538FBC(v78, v79, v144);
          swift_bridgeObjectRelease();
          sub_23A53AC04(v69, type metadata accessor for DTSyncedTimer);
          _os_log_impl(&dword_23A52C000, v70, (os_log_type_t)v127, "Server deletion: extant, timer=%s", (uint8_t *)v76, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B852178](v77, -1, -1);
          v74 = v142;
          MEMORY[0x23B852178](v76, -1, -1);
        }
        else
        {
          sub_23A53AC04(v69, type metadata accessor for DTSyncedTimer);
        }

        swift_beginAccess();
        v1 = v33[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v97 = sub_23A563F00(v74, v42);
        v99 = v98;
        swift_bridgeObjectRelease();
        if ((v99 & 1) != 0)
        {
          v100 = swift_isUniquelyReferenced_nonNull_native();
          v1 = v33[1];
          v143 = v1;
          v33[1] = 0x8000000000000000;
          if ((v100 & 1) == 0)
          {
            sub_23A583A10(type metadata accessor for DTSyncedTimer, &qword_256994648);
            v1 = v143;
          }
          swift_bridgeObjectRelease();
          v101 = (uint64_t)v116;
          sub_23A53BA34((uint64_t)v1[7].isa + *(_QWORD *)(v9 + 72) * v97, (uint64_t)v116, type metadata accessor for DTSyncedTimer);
          sub_23A583288(v97, (uint64_t)v1, type metadata accessor for DTSyncedTimer);
          v33[1] = v1;
          swift_bridgeObjectRelease();
          v102 = 0;
        }
        else
        {
          v102 = 1;
          v101 = (uint64_t)v116;
        }
        v52((char *)v101, v102, 1, v139);
        swift_bridgeObjectRelease();
        sub_23A53B9B4(v101, &qword_2569945F0);
        swift_endAccess();
        v103 = (uint64_t)v120;
        sub_23A59E200();
        swift_bridgeObjectRelease();
        v104 = v125;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v103, 1, v125) == 1)
        {
          sub_23A53AC04(v124, type metadata accessor for DTSyncedTimer);

          sub_23A53B9B4(v103, &qword_256993720);
        }
        else
        {
          v105 = v128;
          v106 = v118;
          (*(void (**)(char *, uint64_t, uint64_t))(v128 + 32))(v118, v103, v104);
          v107 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67870]), sel_init);
          v108 = objc_allocWithZone(MEMORY[0x24BE67868]);
          v109 = (void *)sub_23A59E224();
          v110 = objc_msgSend(v108, sel_initWithIdentifier_, v109);

          v1 = v110;
          v111 = objc_msgSend(v107, sel_removeTimer_, v1);

          v112 = *(void (**)(char *, uint64_t))(v105 + 8);
          v33 = v138;
          v112(v106, v104);
          sub_23A53AC04(v124, type metadata accessor for DTSyncedTimer);
        }
        v25 = v134;
        v6 = v136;
        v96 = (char *)v132;
LABEL_57:
        v127 = 1;
        v17 = (unint64_t)v141;
        if (v141 == v96)
        {
          swift_bridgeObjectRelease();
          v113 = 1;
          return v113 & 1;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v139);
LABEL_22:
        sub_23A53B9B4((uint64_t)v8, &qword_2569945F0);
        swift_endAccess();
        if (qword_256997CA0 != -1)
          swift_once();
        v53 = sub_23A59E6A4();
        __swift_project_value_buffer(v53, (uint64_t)qword_256997CA8);
        swift_bridgeObjectRetain();
        v1 = sub_23A59E68C();
        v54 = sub_23A59EBA8();
        if (os_log_type_enabled(v1, v54))
        {
          v55 = swift_slowAlloc();
          v56 = swift_slowAlloc();
          v144[0] = v56;
          *(_DWORD *)v55 = v131;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v55 + 4) = sub_23A538FBC(v142, v39, v144);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_23A52C000, v1, v54, "Server deletion gone: id=%s", (uint8_t *)v55, 0xCu);
          swift_arrayDestroy();
          v33 = v138;
          MEMORY[0x23B852178](v56, -1, -1);
          MEMORY[0x23B852178](v55, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }

        v6 = v136;
        ++v17;
        v25 = v134;
        if (v141 == (char *)v132)
        {
          swift_bridgeObjectRelease();
          v113 = v127;
          return v113 & 1;
        }
      }
    }
    if (v17 >= *(_QWORD *)(v129 + 16))
      goto LABEL_60;
    v34 = *(id *)(v137 + 8 * v17 + 32);
    v35 = (char *)(v17 + 1);
    if (!__OFADD__(v17, 1))
      goto LABEL_10;
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    swift_bridgeObjectRetain();
    v25 = v134;
  }
  swift_bridgeObjectRelease();
  v113 = 0;
  return v113 & 1;
}

uint64_t sub_23A57F8E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  unint64_t v62;
  NSObject *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  os_log_type_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  id v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  id v95;
  _QWORD *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t v103;
  id v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  id v111;
  _QWORD *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  int v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t);
  uint64_t v125;
  uint64_t *v126;
  char v127;
  uint64_t *v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  uint64_t v163;
  unsigned int v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  id v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DTSyncedTimer(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  MEMORY[0x24BDAC7A8](v11);
  v149 = (uint64_t)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for DTSyncedAlarm(0);
  v13 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150);
  v146 = (uint64_t)&v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_23A59E74C();
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v153 = (uint64_t *)((char *)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_23A59E764();
  v168 = *(_QWORD *)(v16 - 8);
  v169 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v152 = (uint64_t *)((char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = MEMORY[0x24BDAC7A8](v17);
  v151 = (uint64_t *)((char *)&v138 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v167 = (uint64_t *)((char *)&v138 - v21);
  v22 = *(_QWORD *)(a1 + 16);
  if (!v22)
  {
    LOBYTE(v27) = 0;
    v170 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      goto LABEL_89;
    goto LABEL_91;
  }
  v144 = v13;
  v139 = v10;
  v140 = v8;
  v142 = v7;
  v141 = v6;
  v23 = v22;
  v145 = (uint64_t *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
  v24 = *(_QWORD *)(sub_23A59E7C4() - 8);
  v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v166 = *(_QWORD *)(v24 + 72);
  v164 = *MEMORY[0x24BDB8930];
  v143 = &v175;
  v147 = *MEMORY[0x24BDB88D8];
  v26 = swift_bridgeObjectRetain();
  v27 = 0;
  v28 = 0;
  v163 = v23;
  v159 = v23 - 1;
  v148 = a1;
  v160 = a1 + v25;
  *(_QWORD *)&v29 = 136315394;
  v162 = v29;
  v161 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v29 = 136315650;
  v156 = v29;
  v157 = MEMORY[0x24BEE4AF8];
  v170 = MEMORY[0x24BEE4AF8];
  v165 = v2;
  while (1)
  {
    v30 = v160 + v166 * v28;
    while (1)
    {
      v171 = v28;
      v31 = (void *)MEMORY[0x23B85132C](v26);
      v32 = sub_23A59ECF8();
      v34 = v33;
      v172 = v31;
      v35 = objc_msgSend(v31, sel_recordID);
      v36 = objc_msgSend(v35, sel_recordName);

      v37 = sub_23A59E9A4();
      v39 = v38;

      v40 = (void *)sub_23A59E7AC();
      v175 = (uint64_t)v40;
      type metadata accessor for CKError(0);
      sub_23A52EAEC(&qword_256994670, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A14C0);
      sub_23A59E0C8();
      if (v173 != 14)
        break;
      if ((sub_23A580E8C(v32, v34, v37, v39, v40) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_43;
      }
      if (qword_256997CA0 != -1)
        swift_once();
      v41 = sub_23A59E6A4();
      __swift_project_value_buffer(v41, (uint64_t)qword_256997CA8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42 = sub_23A59E68C();
      v43 = sub_23A59EBC0();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = swift_slowAlloc();
        v45 = swift_slowAlloc();
        v175 = v45;
        *(_DWORD *)v44 = v162;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v44 + 4) = sub_23A538FBC(v32, v34, &v175);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v44 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v44 + 14) = sub_23A538FBC(v37, v39, &v175);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A52C000, v42, v43, "Server save failed: server newer, type=%s, id=%s", (uint8_t *)v44, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B852178](v45, -1, -1);
        MEMORY[0x23B852178](v44, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      v47 = v170;
      v46 = v171;
      v48 = v172;
      v49 = objc_msgSend(v172, sel_recordID);
      v51 = v167;
      v50 = v168;
      *v167 = v49;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v50 + 104))(v51, v164, v169);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v2 = v165;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v47 = sub_23A58280C(0, *(_QWORD *)(v47 + 16) + 1, 1, v47, &qword_256994600, (uint64_t (*)(_QWORD))MEMORY[0x24BDB8940]);
      v54 = *(_QWORD *)(v47 + 16);
      v53 = *(_QWORD *)(v47 + 24);
      if (v54 >= v53 >> 1)
        v47 = sub_23A58280C(v53 > 1, v54 + 1, 1, v47, &qword_256994600, (uint64_t (*)(_QWORD))MEMORY[0x24BDB8940]);
      v28 = v46 + 1;
      *(_QWORD *)(v47 + 16) = v54 + 1;
      v55 = (*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80);
      v170 = v47;
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v168 + 32))(v47 + v55 + *(_QWORD *)(v168 + 72) * v54, v167, v169);

      v30 += v166;
      v27 = 1;
      if (v163 == v28)
        goto LABEL_86;
    }
    if (v173 > 0x1A)
    {
LABEL_34:
      if (qword_256997CA0 != -1)
        swift_once();
      v81 = sub_23A59E6A4();
      __swift_project_value_buffer(v81, (uint64_t)qword_256997CA8);
      v82 = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58 = v82;
      v59 = sub_23A59E68C();
      v83 = sub_23A59EBB4();
      if (os_log_type_enabled(v59, v83))
      {
        v61 = swift_slowAlloc();
        v158 = swift_slowAlloc();
        v175 = v158;
        *(_DWORD *)v61 = v156;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v61 + 4) = sub_23A538FBC(v32, v34, &v175);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v61 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v61 + 14) = sub_23A538FBC(v37, v39, &v175);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v61 + 22) = 2080;
        v174 = (uint64_t)v58;
        sub_23A52EAEC(&qword_256994678, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A147C);
        v63 = v59;
        v84 = sub_23A59F0C4();
        *(_QWORD *)(v61 + 24) = sub_23A538FBC(v84, v85, &v175);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A52C000, v59, v83, "### Unknown error saving record: type=%s, id=%s, error=%s", (uint8_t *)v61, 0x20u);
        v86 = v158;
        swift_arrayDestroy();
        v66 = v86;
        goto LABEL_23;
      }
LABEL_38:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      goto LABEL_39;
    }
    if (((1 << v173) & 0x900258) != 0)
    {
      if (qword_256997CA0 != -1)
        swift_once();
      v56 = sub_23A59E6A4();
      __swift_project_value_buffer(v56, (uint64_t)qword_256997CA8);
      v57 = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58 = v57;
      v59 = sub_23A59E68C();
      v60 = sub_23A59EBC0();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = swift_slowAlloc();
        v173 = swift_slowAlloc();
        LODWORD(v158) = v27;
        v62 = v173;
        *(_DWORD *)v61 = v156;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v61 + 4) = sub_23A538FBC(v32, v34, (uint64_t *)&v173);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v61 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v61 + 14) = sub_23A538FBC(v37, v39, (uint64_t *)&v173);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v61 + 22) = 2080;
        v175 = (uint64_t)v58;
        sub_23A52EAEC(&qword_256994678, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A147C);
        v63 = v59;
        v64 = sub_23A59F0C4();
        *(_QWORD *)(v61 + 24) = sub_23A538FBC(v64, v65, (uint64_t *)&v173);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A52C000, v59, v60, "Server save failed: retry-able: type=%s, id=%s, error=%s", (uint8_t *)v61, 0x20u);
        swift_arrayDestroy();
        v66 = v62;
        v27 = v158;
LABEL_23:
        MEMORY[0x23B852178](v66, -1, -1);
        v67 = v61;
        v2 = v165;
        MEMORY[0x23B852178](v67, -1, -1);

LABEL_39:
        goto LABEL_40;
      }
      goto LABEL_38;
    }
    if (v173 == 11)
    {
      if (qword_256997CA0 != -1)
        swift_once();
      v75 = sub_23A59E6A4();
      __swift_project_value_buffer(v75, (uint64_t)qword_256997CA8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v76 = sub_23A59E68C();
      v77 = sub_23A59EBC0();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = swift_slowAlloc();
        v79 = swift_slowAlloc();
        v175 = v79;
        *(_DWORD *)v78 = v162;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v78 + 4) = sub_23A538FBC(v32, v34, &v175);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v78 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v78 + 14) = sub_23A538FBC(v37, v39, &v175);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A52C000, v76, v77, "Server save failed: no server record, type=%s, id=%s", (uint8_t *)v78, 0x16u);
        swift_arrayDestroy();
        v80 = v79;
        v2 = v165;
        MEMORY[0x23B852178](v80, -1, -1);
        MEMORY[0x23B852178](v78, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      v110 = v172;
      v111 = objc_msgSend(v172, sel_recordID);
      v112 = v152;
      *v152 = v111;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v168 + 104))(v112, v164, v169);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v170 = sub_23A58280C(0, *(_QWORD *)(v170 + 16) + 1, 1, v170, &qword_256994600, (uint64_t (*)(_QWORD))MEMORY[0x24BDB8940]);
      v114 = *(_QWORD *)(v170 + 16);
      v113 = *(_QWORD *)(v170 + 24);
      if (v114 >= v113 >> 1)
        v170 = sub_23A58280C(v113 > 1, v114 + 1, 1, v170, &qword_256994600, (uint64_t (*)(_QWORD))MEMORY[0x24BDB8940]);
      v115 = v169;
      v116 = v170;
      *(_QWORD *)(v170 + 16) = v114 + 1;
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v168 + 32))(v116+ ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80))+ *(_QWORD *)(v168 + 72) * v114, v152, v115);
      v117 = sub_23A581D30(v32, v34, v37, v39);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v27 |= v117;
    }
    else
    {
      if (v173 != 26)
        goto LABEL_34;
      if (qword_256997CA0 != -1)
        swift_once();
      v68 = sub_23A59E6A4();
      __swift_project_value_buffer(v68, (uint64_t)qword_256997CA8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v69 = sub_23A59E68C();
      v70 = sub_23A59EBC0();
      v71 = v70;
      if (os_log_type_enabled(v69, v70))
      {
        v72 = swift_slowAlloc();
        LODWORD(v158) = v71;
        v73 = v72;
        v138 = swift_slowAlloc();
        v175 = v138;
        *(_DWORD *)v73 = v162;
        swift_bridgeObjectRetain();
        v174 = sub_23A538FBC(v32, v34, &v175);
        sub_23A59ED1C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v73 + 12) = 2080;
        swift_bridgeObjectRetain();
        v174 = sub_23A538FBC(v37, v39, &v175);
        v2 = v165;
        sub_23A59ED1C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A52C000, v69, (os_log_type_t)v158, "Server save failed: zone not found, type=%s, id=%s", (uint8_t *)v73, 0x16u);
        v74 = v138;
        swift_arrayDestroy();
        MEMORY[0x23B852178](v74, -1, -1);
        MEMORY[0x23B852178](v73, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      v87 = objc_msgSend(v172, sel_recordID);
      v88 = objc_msgSend(v87, sel_zoneID);

      v89 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB91F0]), sel_initWithZoneID_, v88);
      *v153 = v89;
      (*(void (**)(void))(v154 + 104))();
      v90 = v89;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v91 = v157;
      else
        v91 = sub_23A58280C(0, *(_QWORD *)(v157 + 16) + 1, 1, v157, &qword_256994630, (uint64_t (*)(_QWORD))MEMORY[0x24BDB88E0]);
      v93 = *(_QWORD *)(v91 + 16);
      v92 = *(_QWORD *)(v91 + 24);
      if (v93 >= v92 >> 1)
        v91 = sub_23A58280C(v92 > 1, v93 + 1, 1, v91, &qword_256994630, (uint64_t (*)(_QWORD))MEMORY[0x24BDB88E0]);
      *(_QWORD *)(v91 + 16) = v93 + 1;
      v94 = (*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
      v157 = v91;
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v154 + 32))(v91 + v94 + *(_QWORD *)(v154 + 72) * v93, v153, v155);
      v95 = objc_msgSend(v172, sel_recordID);
      v96 = v151;
      *v151 = v95;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v168 + 104))(v96, v164, v169);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v170 = sub_23A58280C(0, *(_QWORD *)(v170 + 16) + 1, 1, v170, &qword_256994600, (uint64_t (*)(_QWORD))MEMORY[0x24BDB8940]);
      v98 = *(_QWORD *)(v170 + 16);
      v97 = *(_QWORD *)(v170 + 24);
      if (v98 >= v97 >> 1)
        v170 = sub_23A58280C(v97 > 1, v98 + 1, 1, v170, &qword_256994600, (uint64_t (*)(_QWORD))MEMORY[0x24BDB8940]);
      v99 = v169;
      v100 = v170;
      *(_QWORD *)(v170 + 16) = v98 + 1;
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v168 + 32))(v100+ ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80))+ *(_QWORD *)(v168 + 72) * v98, v151, v99);

      v101 = sub_23A53163C();
      if (v32 == *v101 && v34 == v101[1] || (sub_23A59F064() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v102 = v145;
        swift_beginAccess();
        v103 = *v102;
        v104 = v172;
        if (*(_QWORD *)(*v102 + 16))
        {
          swift_bridgeObjectRetain();
          v105 = sub_23A563F00(v37, v39);
          if ((v106 & 1) != 0)
          {
            v107 = v144;
            v108 = v149;
            sub_23A53ABC0(*(_QWORD *)(v103 + 56) + *(_QWORD *)(v144 + 72) * v105, v149, type metadata accessor for DTSyncedAlarm);
            v109 = 0;
          }
          else
          {
            v109 = 1;
            v108 = v149;
            v107 = v144;
          }
          v119 = v150;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v108, v109, 1, v150);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v108, 1, v119) != 1)
          {
            v122 = v108;
            v123 = v146;
            v124 = type metadata accessor for DTSyncedAlarm;
            sub_23A53BA34(v122, v146, type metadata accessor for DTSyncedAlarm);
            swift_endAccess();
            swift_bridgeObjectRelease();
            v125 = sub_23A52EAEC(&qword_256994618, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
            v126 = &v176;
LABEL_73:
            DTSyncedObject.lastKnownRecord.setter(0, *(v126 - 32), v125);

            v26 = sub_23A53AC04(v123, v124);
            v27 = 1;
            goto LABEL_40;
          }
        }
        else
        {
          v108 = v149;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56))(v149, 1, 1, v150);
        }
        v120 = v108;
        v121 = &qword_2569945F8;
        goto LABEL_83;
      }
      v118 = sub_23A536628();
      v104 = v172;
      if (v32 == *v118 && v34 == v118[1])
      {
        swift_bridgeObjectRelease();
LABEL_75:
        v128 = v145;
        swift_beginAccess();
        v129 = v128[1];
        if (*(_QWORD *)(v129 + 16))
        {
          swift_bridgeObjectRetain();
          v130 = sub_23A563F00(v37, v39);
          if ((v131 & 1) != 0)
          {
            v132 = v140;
            v133 = (uint64_t)v141;
            sub_23A53ABC0(*(_QWORD *)(v129 + 56) + *(_QWORD *)(v140 + 72) * v130, (uint64_t)v141, type metadata accessor for DTSyncedTimer);
            v134 = 0;
          }
          else
          {
            v134 = 1;
            v133 = (uint64_t)v141;
            v132 = v140;
          }
          v135 = v142;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v132 + 56))(v133, v134, 1, v142);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v133, 1, v135) != 1)
          {
            v136 = v133;
            v123 = (uint64_t)v139;
            v124 = type metadata accessor for DTSyncedTimer;
            sub_23A53BA34(v136, (uint64_t)v139, type metadata accessor for DTSyncedTimer);
            swift_endAccess();
            swift_bridgeObjectRelease();
            v125 = sub_23A52EAEC(&qword_256994608, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
            v126 = &v171;
            goto LABEL_73;
          }
        }
        else
        {
          v133 = (uint64_t)v141;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56))(v141, 1, 1, v142);
        }
        v120 = v133;
        v121 = &qword_2569945F0;
LABEL_83:
        sub_23A53B9B4(v120, v121);
        swift_endAccess();

        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
      v127 = sub_23A59F064();
      swift_bridgeObjectRelease();
      if ((v127 & 1) != 0)
        goto LABEL_75;
      swift_bridgeObjectRelease();

LABEL_43:
    }
LABEL_40:
    if (v159 == v171)
      break;
    v28 = v171 + 1;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v157 + 16))
    goto LABEL_91;
LABEL_89:
  if (*(_QWORD *)(v2 + 32))
  {
    swift_retain();
    sub_23A59E884();
    swift_release();
    sub_23A59E860();
    swift_release();
  }
LABEL_91:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v170 + 16) && *(_QWORD *)(v2 + 32))
  {
    swift_retain();
    sub_23A59E884();
    swift_release();
    sub_23A59E86C();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return v27 & 1;
}

uint64_t sub_23A580E8C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  Class isa;
  char v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  unint64_t v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v69;
  unint64_t v70;
  id v71;
  id v72;
  os_log_type_t v73;
  _BOOL4 v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _BOOL4 v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  CKRecord v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95[3];
  uint64_t v96;

  v93 = a2;
  v94 = a4;
  v92 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v86 = (uint64_t)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v85 - v11;
  v88 = type metadata accessor for DTSyncedTimer(0);
  v13 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v87 = (uint64_t)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v85 - v19;
  v21 = type metadata accessor for DTSyncedAlarm(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = a5;
  v90.super.isa = (Class)sub_23A59E938();
  if (!v90.super.isa)
  {
    if (qword_256997CA0 != -1)
      swift_once();
    v35 = sub_23A59E6A4();
    __swift_project_value_buffer(v35, (uint64_t)qword_256997CA8);
    v36 = v94;
    swift_bridgeObjectRetain_n();
    v37 = v91;
    v38 = sub_23A59E68C();
    v39 = sub_23A59EBB4();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v95[0] = v41;
      *(_DWORD *)v40 = 136315394;
      swift_bridgeObjectRetain();
      v96 = sub_23A538FBC(v92, v36, v95);
      sub_23A59ED1C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v40 + 12) = 2080;
      v96 = (uint64_t)v37;
      type metadata accessor for CKError(0);
      sub_23A52EAEC(&qword_256994678, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A147C);
      v42 = sub_23A59F0C4();
      v96 = sub_23A538FBC(v42, v43, v95);
      sub_23A59ED1C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v38, v39, "### Server save failed: no server record, id=%s, error=%s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v41, -1, -1);
      MEMORY[0x23B852178](v40, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  v25 = sub_23A53163C();
  v26 = *v25;
  v27 = v25[1];
  v89 = a1;
  if ((v26 != a1 || v27 != v93) && (sub_23A59F064() & 1) == 0)
  {
    v44 = sub_23A536628();
    v45 = v89;
    v46 = v93;
    if ((*v44 != v89 || v44[1] != v93) && (sub_23A59F064() & 1) == 0)
    {
      if (qword_256997CA0 != -1)
        swift_once();
      v69 = sub_23A59E6A4();
      __swift_project_value_buffer(v69, (uint64_t)qword_256997CA8);
      v70 = v94;
      swift_bridgeObjectRetain_n();
      v71 = v91;
      swift_bridgeObjectRetain_n();
      v72 = v71;
      v56 = sub_23A59E68C();
      v73 = sub_23A59EBC0();
      v74 = os_log_type_enabled(v56, v73);
      isa = v90.super.isa;
      if (v74)
      {
        v58 = swift_slowAlloc();
        v75 = v45;
        v59 = swift_slowAlloc();
        v95[0] = v59;
        *(_DWORD *)v58 = 136315650;
        swift_bridgeObjectRetain();
        v96 = sub_23A538FBC(v75, v46, v95);
        sub_23A59ED1C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v58 + 12) = 2080;
        swift_bridgeObjectRetain();
        v96 = sub_23A538FBC(v92, v70, v95);
        sub_23A59ED1C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v58 + 22) = 2080;
        v96 = (uint64_t)v72;
        type metadata accessor for CKError(0);
        sub_23A52EAEC(&qword_256994678, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A147C);
        v76 = sub_23A59F0C4();
        v96 = sub_23A538FBC(v76, v77, v95);
        sub_23A59ED1C();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A52C000, v56, v73, "Server sent fail: unsupported, type=%s, id=%s, error=%s", (uint8_t *)v58, 0x20u);
LABEL_49:
        swift_arrayDestroy();
        MEMORY[0x23B852178](v59, -1, -1);
        MEMORY[0x23B852178](v58, -1, -1);

        goto LABEL_55;
      }

      swift_bridgeObjectRelease_n();
LABEL_54:
      swift_bridgeObjectRelease_n();
      goto LABEL_55;
    }
    v47 = v5 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
    swift_beginAccess();
    v48 = *(_QWORD *)(v47 + 8);
    if (*(_QWORD *)(v48 + 16))
    {
      v49 = v94;
      swift_bridgeObjectRetain();
      v50 = sub_23A563F00(v92, v49);
      v51 = v88;
      if ((v52 & 1) != 0)
      {
        sub_23A53ABC0(*(_QWORD *)(v48 + 56) + *(_QWORD *)(v13 + 72) * v50, (uint64_t)v12, type metadata accessor for DTSyncedTimer);
        v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
        v53(v12, 0, 1, v51);
      }
      else
      {
        v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
        v53(v12, 1, 1, v88);
      }
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v51) != 1)
      {
        v83 = v87;
        sub_23A53BA34((uint64_t)v12, v87, type metadata accessor for DTSyncedTimer);
        swift_endAccess();
        isa = v90.super.isa;
        if (DTSyncedTimer.mergeFromServerRecord(_:)(v90))
        {
          sub_23A52EAEC(&qword_256994608, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
          DTSyncedObject.setLastKnownRecordIfNewer(_:)((CKRecord)isa);
          v84 = v86;
          sub_23A53ABC0(v83, v86, type metadata accessor for DTSyncedTimer);
          v53((char *)v84, 0, 1, v51);
          swift_beginAccess();
          v30 = v94;
          swift_bridgeObjectRetain();
          sub_23A57759C(v84, v92, v30, &qword_2569945F0, type metadata accessor for DTSyncedTimer, &qword_256994648);
          swift_endAccess();
          sub_23A53AC04(v83, type metadata accessor for DTSyncedTimer);
          goto LABEL_29;
        }
        v66 = type metadata accessor for DTSyncedTimer;
        v67 = v83;
LABEL_34:
        sub_23A53AC04(v67, v66);
LABEL_55:

        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, 1, 1, v88);
    }
    sub_23A53B9B4((uint64_t)v12, &qword_2569945F0);
    swift_endAccess();
    if (qword_256997CA0 != -1)
      swift_once();
    v78 = sub_23A59E6A4();
    __swift_project_value_buffer(v78, (uint64_t)qword_256997CA8);
    v79 = v94;
    swift_bridgeObjectRetain_n();
    v55 = v91;
    v56 = sub_23A59E68C();
    v57 = sub_23A59EBB4();
    v80 = os_log_type_enabled(v56, v57);
    isa = v90.super.isa;
    if (v80)
    {
      v58 = swift_slowAlloc();
      v59 = swift_slowAlloc();
      v95[0] = v59;
      *(_DWORD *)v58 = 136315394;
      swift_bridgeObjectRetain();
      v96 = sub_23A538FBC(v92, v79, v95);
      sub_23A59ED1C();
      goto LABEL_48;
    }
    goto LABEL_26;
  }
  v28 = (uint64_t *)(v5 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
  swift_beginAccess();
  v29 = *v28;
  if (!*(_QWORD *)(*v28 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
    isa = v90.super.isa;
    v30 = v94;
    goto LABEL_22;
  }
  v30 = v94;
  swift_bridgeObjectRetain();
  v31 = sub_23A563F00(v92, v30);
  isa = v90.super.isa;
  if ((v33 & 1) != 0)
  {
    sub_23A53ABC0(*(_QWORD *)(v29 + 56) + *(_QWORD *)(v22 + 72) * v31, (uint64_t)v20, type metadata accessor for DTSyncedAlarm);
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v34(v20, 0, 1, v21);
  }
  else
  {
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v34(v20, 1, 1, v21);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
LABEL_22:
    sub_23A53B9B4((uint64_t)v20, &qword_2569945F8);
    swift_endAccess();
    if (qword_256997CA0 != -1)
      swift_once();
    v54 = sub_23A59E6A4();
    __swift_project_value_buffer(v54, (uint64_t)qword_256997CA8);
    swift_bridgeObjectRetain_n();
    v55 = v91;
    v56 = sub_23A59E68C();
    v57 = sub_23A59EBB4();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = swift_slowAlloc();
      v59 = swift_slowAlloc();
      v95[0] = v59;
      *(_DWORD *)v58 = 136315394;
      swift_bridgeObjectRetain();
      v96 = sub_23A538FBC(v92, v30, v95);
      sub_23A59ED1C();
LABEL_48:
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v58 + 12) = 2080;
      v96 = (uint64_t)v55;
      type metadata accessor for CKError(0);
      sub_23A52EAEC(&qword_256994678, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A147C);
      v81 = sub_23A59F0C4();
      v96 = sub_23A538FBC(v81, v82, v95);
      sub_23A59ED1C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A52C000, v56, v57, "### Server save failed: no local record, id=%s, error=%s", (uint8_t *)v58, 0x16u);
      goto LABEL_49;
    }
LABEL_26:

    goto LABEL_54;
  }
  sub_23A53BA34((uint64_t)v20, (uint64_t)v24, type metadata accessor for DTSyncedAlarm);
  swift_endAccess();
  if (!DTSyncedAlarm.mergeFromServerRecord(_:)((CKRecord)isa))
  {
    v66 = type metadata accessor for DTSyncedAlarm;
    v67 = (uint64_t)v24;
    goto LABEL_34;
  }
  sub_23A52EAEC(&qword_256994618, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
  DTSyncedObject.setLastKnownRecordIfNewer(_:)((CKRecord)isa);
  sub_23A53ABC0((uint64_t)v24, (uint64_t)v18, type metadata accessor for DTSyncedAlarm);
  v34(v18, 0, 1, v21);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23A57759C((uint64_t)v18, v92, v30, &qword_2569945F8, type metadata accessor for DTSyncedAlarm, &qword_256994640);
  swift_endAccess();
  sub_23A53AC04((uint64_t)v24, type metadata accessor for DTSyncedAlarm);
  v46 = v93;
LABEL_29:
  v60 = v89;
  if (qword_256997CA0 != -1)
    swift_once();
  v61 = sub_23A59E6A4();
  __swift_project_value_buffer(v61, (uint64_t)qword_256997CA8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v62 = sub_23A59E68C();
  v63 = sub_23A59EBC0();
  if (os_log_type_enabled(v62, v63))
  {
    v64 = swift_slowAlloc();
    v65 = swift_slowAlloc();
    v95[0] = v65;
    *(_DWORD *)v64 = 136315394;
    swift_bridgeObjectRetain();
    v96 = sub_23A538FBC(v60, v46, v95);
    sub_23A59ED1C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v64 + 12) = 2080;
    swift_bridgeObjectRetain();
    v96 = sub_23A538FBC(v92, v30, v95);
    sub_23A59ED1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A52C000, v62, v63, "Server save failed: server newer, type=%s, id=%s", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v65, -1, -1);
    MEMORY[0x23B852178](v64, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  return 1;
}

uint64_t sub_23A581D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v55 = a4;
  v56 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v53 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v52 - v10;
  v54 = type metadata accessor for DTSyncedTimer(0);
  v12 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v52 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569945F8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v52 - v18;
  v20 = type metadata accessor for DTSyncedAlarm(0);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23A53163C();
  if (*v24 == a1 && v24[1] == a2 || (sub_23A59F064() & 1) != 0)
  {
    v25 = (uint64_t *)(v4 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData);
    swift_beginAccess();
    v26 = *v25;
    if (!*(_QWORD *)(*v25 + 16))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
LABEL_16:
      v40 = &qword_2569945F8;
      v41 = (uint64_t)v19;
LABEL_17:
      sub_23A53B9B4(v41, v40);
      swift_endAccess();
      return 0;
    }
    v27 = v55;
    swift_bridgeObjectRetain();
    v28 = sub_23A563F00(v56, v27);
    if ((v29 & 1) != 0)
    {
      sub_23A53ABC0(*(_QWORD *)(v26 + 56) + *(_QWORD *)(v21 + 72) * v28, (uint64_t)v19, type metadata accessor for DTSyncedAlarm);
      v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
      v30(v19, 0, 1, v20);
    }
    else
    {
      v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
      v30(v19, 1, 1, v20);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
      goto LABEL_16;
    sub_23A53BA34((uint64_t)v19, (uint64_t)v23, type metadata accessor for DTSyncedAlarm);
    swift_endAccess();
    v42 = sub_23A52EAEC(&qword_256994618, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
    DTSyncedObject.lastKnownRecord.setter(0, v20, v42);
    sub_23A53ABC0((uint64_t)v23, (uint64_t)v17, type metadata accessor for DTSyncedAlarm);
    v43 = v27;
    v32 = 1;
    v30(v17, 0, 1, v20);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23A57759C((uint64_t)v17, v56, v43, &qword_2569945F8, type metadata accessor for DTSyncedAlarm, &qword_256994640);
    swift_endAccess();
    v44 = (uint64_t)v23;
    v45 = type metadata accessor for DTSyncedAlarm;
LABEL_24:
    sub_23A53AC04(v44, v45);
    return v32;
  }
  v31 = sub_23A536628();
  if (*v31 == a1 && v31[1] == a2 || (v32 = 0, (sub_23A59F064() & 1) != 0))
  {
    v33 = v4 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
    swift_beginAccess();
    v34 = *(_QWORD *)(v33 + 8);
    if (*(_QWORD *)(v34 + 16))
    {
      v35 = v55;
      swift_bridgeObjectRetain();
      v36 = sub_23A563F00(v56, v35);
      v37 = v54;
      if ((v38 & 1) != 0)
      {
        sub_23A53ABC0(*(_QWORD *)(v34 + 56) + *(_QWORD *)(v12 + 72) * v36, (uint64_t)v11, type metadata accessor for DTSyncedTimer);
        v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
        v39(v11, 0, 1, v37);
      }
      else
      {
        v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
        v39(v11, 1, 1, v54);
      }
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v37) != 1)
      {
        v46 = (uint64_t)v11;
        v47 = v52;
        sub_23A53BA34(v46, v52, type metadata accessor for DTSyncedTimer);
        swift_endAccess();
        v48 = sub_23A52EAEC(&qword_256994608, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
        DTSyncedObject.lastKnownRecord.setter(0, v37, v48);
        v49 = v53;
        sub_23A53ABC0(v47, v53, type metadata accessor for DTSyncedTimer);
        v50 = v35;
        v32 = 1;
        v39((char *)v49, 0, 1, v37);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_23A57759C(v49, v56, v50, &qword_2569945F0, type metadata accessor for DTSyncedTimer, &qword_256994648);
        swift_endAccess();
        v44 = v47;
        v45 = type metadata accessor for DTSyncedTimer;
        goto LABEL_24;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, 1, 1, v54);
    }
    v40 = &qword_2569945F0;
    v41 = (uint64_t)v11;
    goto LABEL_17;
  }
  return v32;
}

uint64_t sub_23A582274(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2569944A8 + dword_2569944A8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A541460;
  return v5(a1);
}

uint64_t sub_23A5822D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23A541460;
  return DTSyncDaemon.nextRecordZoneChangeBatch(_:syncEngine:)(a1, a2, a3);
}

uint64_t sub_23A582340()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A541460;
  return sub_23A59E8B4();
}

uint64_t sub_23A5823C4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A58243C;
  return sub_23A59E8A8();
}

uint64_t sub_23A58243C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23A58248C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A585A18;
  return sub_23A59E8C0();
}

id sub_23A58250C()
{
  id *v0;

  return *v0;
}

uint64_t sub_23A582514@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_23A58251C()
{
  sub_23A52EAEC(&qword_256994708, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A1438);
  return sub_23A59F0B8();
}

uint64_t sub_23A58255C()
{
  sub_23A52EAEC(&qword_256994708, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A1438);
  return sub_23A59F0AC();
}

uint64_t sub_23A5825A0()
{
  sub_23A52EAEC(&qword_256994670, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A14C0);
  return sub_23A59E098();
}

uint64_t sub_23A5825E0()
{
  return sub_23A59E9A4();
}

uint64_t sub_23A5825F0()
{
  sub_23A52EAEC(&qword_256994670, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A14C0);
  return sub_23A59E0E0();
}

uint64_t sub_23A582630()
{
  sub_23A52EAEC(&qword_256994670, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A14C0);
  return sub_23A59E0B0();
}

uint64_t sub_23A582670(void *a1)
{
  id v2;

  sub_23A52EAEC(&qword_256994670, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A14C0);
  v2 = a1;
  return sub_23A59E0A4();
}

uint64_t sub_23A5826D4()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_23A59ED04();

  return v2;
}

uint64_t sub_23A582708()
{
  sub_23A52EAEC(&qword_256994670, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A14C0);
  return sub_23A59E0D4();
}

uint64_t sub_23A582758()
{
  sub_23A59F0E8();
  sub_23A59E968();
  return sub_23A59F100();
}

uint64_t sub_23A5827B4()
{
  sub_23A52EAEC(&qword_256994670, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A14C0);
  return sub_23A59E0BC();
}

uint64_t sub_23A58280C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23A59EEC0();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23A5849C8(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

unint64_t sub_23A582A18(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x23B852184](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x23B852184](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23A582AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v8 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_23A563F00(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v8;
    v21 = *v8;
    *v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23A583A10(a3, a4);
      v15 = v21;
    }
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 56);
    v17 = a3(0);
    v18 = *(_QWORD *)(v17 - 8);
    sub_23A53BA34(v16 + *(_QWORD *)(v18 + 72) * v12, a5, a3);
    sub_23A583288(v12, v15, a3);
    *v8 = v15;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a5, 0, 1, v17);
  }
  else
  {
    v20 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
  }
}

uint64_t sub_23A582BE0(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  uint64_t (*v48)(_QWORD);

  v6 = v4;
  v48 = a3;
  v8 = a3(0);
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v42 - v9;
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v47 = a2;
  v12 = sub_23A59EEF0();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v4;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v6 = v43;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v20 >= v44)
              goto LABEL_34;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v24);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(v46 + 72);
    v33 = *(_QWORD *)(v11 + 56) + v32 * v24;
    if ((v47 & 1) != 0)
    {
      sub_23A53BA34(v33, (uint64_t)v10, v48);
    }
    else
    {
      sub_23A53ABC0(v33, (uint64_t)v10, v48);
      swift_bridgeObjectRetain();
    }
    sub_23A59F0E8();
    sub_23A59E9C8();
    result = sub_23A59F100();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v21 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    *v22 = v31;
    v22[1] = v30;
    result = sub_23A53BA34((uint64_t)v10, *(_QWORD *)(v13 + 56) + v32 * v21, v48);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v6 = v43;
  v26 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v11 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v13;
  return result;
}

uint64_t sub_23A582F54(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994450);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569946B0);
  result = sub_23A59EEF0();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_23A59F0DC();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

unint64_t sub_23A583288(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_23A59ED58();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_23A59F0E8();
        swift_bridgeObjectRetain();
        sub_23A59E9C8();
        v11 = sub_23A59F100();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23A583490(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23A59ED58();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_23A59F0DC();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256994450) - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_23A58365C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  _QWORD *v6;
  _QWORD **v9;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v9 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_23A563F00(a2, a3);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a4 & 1) != 0)
    {
LABEL_7:
      v22 = *v9;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7];
        v24 = a5(0);
        return sub_23A585630(a1, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v16, a5);
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a4 & 1) == 0)
    {
      sub_23A583A10(a5, a6);
      goto LABEL_7;
    }
    sub_23A582BE0(v19, a4 & 1, a5, a6);
    v26 = sub_23A563F00(a2, a3);
    if ((v20 & 1) == (v27 & 1))
    {
      v16 = v26;
      v22 = *v9;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23A5838E8(v16, a2, a3, a1, v22, a5);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A5837C0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23A563ED0(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994450);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_23A583980(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23A583C40();
      goto LABEL_7;
    }
    sub_23A582F54(v13, a3 & 1);
    v20 = sub_23A563ED0(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_23A583980(v10, a2, a1, v16);
    }
  }
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A5838E8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a5[6] + 16 * a1);
  *v10 = a2;
  v10[1] = a3;
  v11 = a5[7];
  v12 = a6(0);
  result = sub_23A53BA34(a4, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a6);
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_23A583980(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994450);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

void *sub_23A583A10(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v5 = a1(0);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v29 = v2;
  v8 = *v2;
  v9 = sub_23A59EEE4();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v30 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      v14 = v26 + 1;
      if (v26 + 1 >= v31)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v14);
      if (!v27)
        break;
    }
LABEL_25:
    v17 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    v23 = *v21;
    v22 = v21[1];
    v24 = *(_QWORD *)(v32 + 72) * v19;
    sub_23A53ABC0(*(_QWORD *)(v8 + 56) + v24, (uint64_t)v7, a1);
    v25 = (_QWORD *)(*(_QWORD *)(v10 + 48) + v20);
    *v25 = v23;
    v25[1] = v22;
    sub_23A53BA34((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24, a1);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v31)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v14 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v14);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23A583C40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994450);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569946B0);
  v23 = v0;
  v5 = *v0;
  v6 = sub_23A59EEE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_23;
      v20 = *(_QWORD *)(v24 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_22:
    v13 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v15);
    v18 = *(_QWORD *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_23;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23A583E68(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_23A58280C(isUniquelyReferenced_nonNull_native, v24, 1, v3, &qword_256994600, (uint64_t (*)(_QWORD))MEMORY[0x24BDB8940]);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = sub_23A59E764();
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

uint64_t sub_23A583FEC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A584008(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23A584008(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994600);
  v10 = *(_QWORD *)(sub_23A59E764() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_23A59E764() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

uint64_t sub_23A5841E8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23A584270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  swift_weakInit();
  *(_QWORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 40) = 1;
  sub_23A52E7B4((_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData));
  v5 = v3 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__migrateTime;
  v6 = sub_23A59E32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__eventContinuations) = MEMORY[0x24BEE4B00];
  v7 = sub_23A59E584();
  if (v7)
  {
    v8 = (id)v7;
  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9048]), sel_init);
    objc_msgSend(v9, sel_setUseZoneWidePCS_, 1);
    v10 = (void *)sub_23A59E998();
    v11 = objc_msgSend((id)objc_opt_self(), sel_containerWithIdentifier_, v10);

    v12 = objc_msgSend(v11, sel_containerID);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9030]), sel_initWithContainerID_options_, v12, v9);

  }
  *(_QWORD *)(v3 + 24) = v8;
  swift_weakAssign();
  v13 = v3 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__environment;
  v14 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a2, v14);
  return v3;
}

uint64_t type metadata accessor for DTSyncDaemon()
{
  uint64_t result;

  result = qword_256997FE0;
  if (!qword_256997FE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A584470()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD v9[2];

  v1 = *(uint64_t **)(v0 + 16);
  sub_23A59EE00();
  swift_bridgeObjectRelease();
  strcpy((char *)v9, "SyncedAlarm: ");
  HIWORD(v9[1]) = -4864;
  type metadata accessor for DTSyncedAlarm(0);
  sub_23A52EAEC(&qword_256993288, type metadata accessor for DTSyncedAlarm, (uint64_t)&protocol conformance descriptor for DTSyncedAlarm);
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  v2 = v9[0];
  v3 = v9[1];
  v4 = (_QWORD *)*v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = (uint64_t)v4;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_23A562D44(0, v4[2] + 1, 1, v4);
    v4 = (_QWORD *)result;
    *v1 = result;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    result = (uint64_t)sub_23A562D44((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    v4 = (_QWORD *)result;
    *v1 = result;
  }
  v4[2] = v7 + 1;
  v8 = &v4[2 * v7];
  v8[4] = v2;
  v8[5] = v3;
  return result;
}

uint64_t sub_23A5845C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD v9[2];

  v1 = *(uint64_t **)(v0 + 16);
  sub_23A59EE00();
  swift_bridgeObjectRelease();
  strcpy((char *)v9, "SyncedTimer: ");
  HIWORD(v9[1]) = -4864;
  type metadata accessor for DTSyncedTimer(0);
  sub_23A52EAEC(&qword_2569932C0, type metadata accessor for DTSyncedTimer, (uint64_t)&protocol conformance descriptor for DTSyncedTimer);
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  v2 = v9[0];
  v3 = v9[1];
  v4 = (_QWORD *)*v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = (uint64_t)v4;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_23A562D44(0, v4[2] + 1, 1, v4);
    v4 = (_QWORD *)result;
    *v1 = result;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    result = (uint64_t)sub_23A562D44((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    v4 = (_QWORD *)result;
    *v1 = result;
  }
  v4[2] = v7 + 1;
  v8 = &v4[2 * v7];
  v8[4] = v2;
  v8[5] = v3;
  return result;
}

uint64_t sub_23A584710(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t (*v14)(_QWORD);
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;

  v31 = a4;
  v32 = a5;
  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v29);
  v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(a1 + 64);
  v27 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v28 = (unint64_t)(v9 + 63) >> 6;
  v33 = a1;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  v14 = v32;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_5;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v28)
      return swift_release();
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v13;
    if (!v24)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v28)
        return swift_release();
      v24 = *(_QWORD *)(v27 + 8 * v13);
      if (!v24)
      {
        v13 = v23 + 2;
        if (v23 + 2 >= v28)
          return swift_release();
        v24 = *(_QWORD *)(v27 + 8 * v13);
        if (!v24)
        {
          v13 = v23 + 3;
          if (v23 + 3 >= v28)
            return swift_release();
          v24 = *(_QWORD *)(v27 + 8 * v13);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v11 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_5:
    v17 = *(_QWORD *)(v33 + 56);
    v18 = (uint64_t *)(*(_QWORD *)(v33 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = v17 + *(_QWORD *)(*(_QWORD *)(v14(0) - 8) + 72) * v16;
    v22 = (uint64_t)v7 + *(int *)(v29 + 48);
    sub_23A53ABC0(v21, v22, v14);
    *v7 = v20;
    v7[1] = v19;
    swift_bridgeObjectRetain();
    v30(v20, v19, v22);
    result = sub_23A53B9B4((uint64_t)v7, v31);
  }
  v25 = v23 + 4;
  if (v25 >= v28)
    return swift_release();
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v13 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v13 >= v28)
      return swift_release();
    v24 = *(_QWORD *)(v27 + 8 * v13);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_23A584958()
{
  unint64_t result;

  result = qword_256994470;
  if (!qword_256994470)
  {
    result = MEMORY[0x23B8520D0](MEMORY[0x24BEE4040], MEMORY[0x24BEE4008]);
    atomic_store(result, (unint64_t *)&qword_256994470);
  }
  return result;
}

uint64_t sub_23A58499C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A5849C0()
{
  uint64_t v0;

  return sub_23A579088(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23A5849C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

uint64_t sub_23A584AE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[6] = a1;
  v2[7] = v1;
  v3 = sub_23A59E80C();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v4 = sub_23A59E7F4();
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v5 = sub_23A59E830();
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v6 = sub_23A59E7A0();
  v2[17] = v6;
  v2[18] = *(_QWORD *)(v6 - 8);
  v2[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256993040);
  v2[20] = swift_task_alloc();
  v7 = sub_23A59E77C();
  v2[21] = v7;
  v2[22] = *(_QWORD *)(v7 - 8);
  v2[23] = swift_task_alloc();
  v8 = sub_23A59E83C();
  v2[24] = v8;
  v2[25] = *(_QWORD *)(v8 - 8);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A584C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t *v63;
  char v64;
  uint64_t v65;

  if (qword_256997CA0 != -1)
    swift_once();
  v2 = (uint64_t *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = sub_23A59E6A4();
  __swift_project_value_buffer(v6, (uint64_t)qword_256997CA8);
  v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v62(v3, v5, v1);
  v7 = sub_23A59E68C();
  v8 = sub_23A59EBC0();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 200);
  if (v9)
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v61 = swift_slowAlloc();
    v65 = v61;
    *(_DWORD *)v13 = 136315138;
    sub_23A52EAEC(&qword_256994620, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8AE0], MEMORY[0x24BDB8AE8]);
    v14 = sub_23A59F034();
    *(_QWORD *)(v0 + 40) = sub_23A538FBC(v14, v15, &v65);
    sub_23A59ED1C();
    v2 = (uint64_t *)(v0 + 192);
    swift_bridgeObjectRelease();
    v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
    _os_log_impl(&dword_23A52C000, v7, v8, "CloudKit event: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v61, -1, -1);
    MEMORY[0x23B852178](v13, -1, -1);
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
  }

  v18 = (uint64_t *)(v0 + 208);
  v17 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 200);
  v62(v17, *(_QWORD *)(v0 + 48), v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88))(v17, v19);
  if (v21 == *MEMORY[0x24BDB8960])
  {
    v18 = (uint64_t *)(v0 + 184);
    v22 = *(_QWORD *)(v0 + 184);
    v23 = *(_QWORD *)(v0 + 208);
    v24 = v0 + 176;
    v25 = *(_QWORD *)(v0 + 176);
    v26 = *(_QWORD *)(v0 + 168);
    v63 = (uint64_t *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 200) + 96))(v23, *(_QWORD *)(v0 + 192));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v22, v23, v26);
    sub_23A59E770();
    v29 = sub_23A59E848();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v27, 0, 1, v29);
    v30 = v28 + OBJC_IVAR____TtC23DistributedTimersDaemon12DTSyncDaemon__persistentData;
    swift_beginAccess();
    v31 = type metadata accessor for DTSyncDaemon.PersistentData(0);
    sub_23A5490EC(v27, v30 + *(int *)(v31 + 20), &qword_256993040);
    swift_endAccess();
    sub_23A5778F8();
    v64 = 0;
    DTSyncDaemon._report(event:)((DistributedTimersDaemon::DTSyncDaemon::Event)&v64);
LABEL_21:
    v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v24 + 8);
    v2 = v63;
    goto LABEL_22;
  }
  if (v21 == *MEMORY[0x24BDB89A0])
  {
    v18 = (uint64_t *)(v0 + 152);
    v32 = *(_QWORD *)(v0 + 152);
    v33 = *(_QWORD *)(v0 + 208);
    v24 = v0 + 144;
    v34 = *(_QWORD *)(v0 + 144);
    v35 = *(_QWORD *)(v0 + 136);
    v63 = (uint64_t *)(v0 + 136);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 200) + 96))(v33, *(_QWORD *)(v0 + 192));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v32, v33, v35);
    sub_23A579808(v32);
    goto LABEL_21;
  }
  if (v21 == *MEMORY[0x24BDB8A80])
  {
    v18 = (uint64_t *)(v0 + 80);
    v36 = *(_QWORD *)(v0 + 80);
    v37 = *(_QWORD *)(v0 + 208);
    v24 = v0 + 72;
    v38 = *(_QWORD *)(v0 + 72);
    v39 = *(_QWORD *)(v0 + 64);
    v63 = (uint64_t *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 200) + 96))(v37, *(_QWORD *)(v0 + 192));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v36, v37, v39);
    sub_23A579E40();
    goto LABEL_21;
  }
  if (v21 == *MEMORY[0x24BDB8AA0])
  {
    v18 = (uint64_t *)(v0 + 128);
    v40 = *(_QWORD *)(v0 + 128);
    v41 = *(_QWORD *)(v0 + 208);
    v24 = v0 + 120;
    v42 = *(_QWORD *)(v0 + 120);
    v43 = *(_QWORD *)(v0 + 112);
    v63 = (uint64_t *)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 200) + 96))(v41, *(_QWORD *)(v0 + 192));
    v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v40, v41, v43);
    v45 = MEMORY[0x23B85138C](v44);
    LOBYTE(v42) = sub_23A57B3C4(v45);
    v46 = swift_bridgeObjectRelease();
    v47 = MEMORY[0x23B851398](v46);
    v48 = sub_23A57B88C(v47);
    swift_bridgeObjectRelease();
    if ((v42 & 1) != 0)
      goto LABEL_20;
    goto LABEL_19;
  }
  if (v21 != *MEMORY[0x24BDB8A18] && v21 == *MEMORY[0x24BDB8A60])
  {
    v18 = (uint64_t *)(v0 + 104);
    v49 = *(_QWORD *)(v0 + 104);
    v50 = *(_QWORD *)(v0 + 208);
    v24 = v0 + 96;
    v51 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 88);
    v63 = (uint64_t *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 200) + 96))(v50, *(_QWORD *)(v0 + 192));
    v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v49, v50, v52);
    v54 = MEMORY[0x23B85135C](v53);
    LOBYTE(v51) = sub_23A57DE04(v54);
    v55 = swift_bridgeObjectRelease();
    v56 = MEMORY[0x23B851350](v55);
    v57 = sub_23A57E9A4(v56);
    v58 = swift_bridgeObjectRelease();
    v59 = MEMORY[0x23B851344](v58);
    v48 = sub_23A57F8E8(v59);
    swift_bridgeObjectRelease();
    if ((v51 & 1) != 0 || (v57 & 1) != 0)
      goto LABEL_20;
LABEL_19:
    if ((v48 & 1) == 0)
      goto LABEL_21;
LABEL_20:
    sub_23A5778F8();
    goto LABEL_21;
  }
LABEL_22:
  v16(*v18, *v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58527C()
{
  return sub_23A57A5EC() & 1;
}

uint64_t sub_23A5852A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23A58243C;
  return sub_23A57A8F0(a1, v5, v4);
}

unint64_t sub_23A58530C()
{
  unint64_t result;

  result = qword_2569944D0[0];
  if (!qword_2569944D0[0])
  {
    result = MEMORY[0x23B8520D0](&protocol conformance descriptor for DTSyncDaemon.Event, &type metadata for DTSyncDaemon.Event);
    atomic_store(result, qword_2569944D0);
  }
  return result;
}

uint64_t sub_23A585350(uint64_t a1)
{
  uint64_t result;

  result = sub_23A52EAEC((unint64_t *)&unk_2569942D0, (uint64_t (*)(uint64_t))type metadata accessor for DTSyncDaemon, (uint64_t)&protocol conformance descriptor for DTSyncDaemon);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23A58538C()
{
  return type metadata accessor for DTSyncDaemon();
}

void sub_23A585394()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23A59E5B4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DTSyncDaemon.PersistentData(319);
    if (v1 <= 0x3F)
    {
      sub_23A585480();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DTSyncDaemon()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DTSyncDaemon.__allocating_init(daemon:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

void sub_23A585480()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256993D20)
  {
    sub_23A59E32C();
    v0 = sub_23A59ED10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256993D20);
  }
}

uint64_t getEnumTagSinglePayload for DTSyncDaemon.Event(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DTSyncDaemon.Event(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23A5855B0 + 4 * byte_23A5A1185[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23A5855E4 + 4 * byte_23A5A1180[v4]))();
}

uint64_t sub_23A5855E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5855EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A5855F4);
  return result;
}

uint64_t sub_23A585600(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A585608);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23A58560C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A585614(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DTSyncDaemon.Event()
{
  return &type metadata for DTSyncDaemon.Event;
}

uint64_t sub_23A585630(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void type metadata accessor for CKError(uint64_t a1)
{
  sub_23A56E6CC(a1, &qword_2569946F8);
}

uint64_t sub_23A585688()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A5856AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A541460;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_23A541460;
  return sub_23A5792DC(v2);
}

uint64_t sub_23A585724()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A585748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23A59E32C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23A5857C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23A59E32C() - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23A541124;
  return sub_23A5782E4((uint64_t)v5, v6, v7, v3, v4);
}

uint64_t sub_23A585830()
{
  return sub_23A52EAEC(&qword_256994700, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A1394);
}

uint64_t sub_23A58585C()
{
  return sub_23A52EAEC(&qword_256994678, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A147C);
}

uint64_t sub_23A585888()
{
  return sub_23A52EAEC(&qword_256994708, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A1438);
}

uint64_t sub_23A5858B4()
{
  return sub_23A52EAEC(&qword_256994710, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A1404);
}

uint64_t sub_23A5858E0()
{
  return sub_23A52EAEC(&qword_256994718, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A13C0);
}

uint64_t sub_23A58590C()
{
  return sub_23A52EAEC(&qword_256994720, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23A5A1568);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_23A56E6CC(a1, &qword_256994740);
}

uint64_t sub_23A58594C()
{
  return sub_23A52EAEC(&qword_256994728, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23A5A152C);
}

unint64_t sub_23A58597C()
{
  unint64_t result;

  result = qword_256994730;
  if (!qword_256994730)
  {
    result = MEMORY[0x23B8520D0](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_256994730);
  }
  return result;
}

uint64_t sub_23A5859C0()
{
  return sub_23A52EAEC(&qword_256994738, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23A5A15A4);
}

uint64_t sub_23A5859EC()
{
  return sub_23A52EAEC(&qword_256994670, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23A5A14C0);
}

uint64_t sub_23A585A20()
{
  uint64_t v0;

  v0 = sub_23A59E6A4();
  __swift_allocate_value_buffer(v0, qword_256998478);
  __swift_project_value_buffer(v0, (uint64_t)qword_256998478);
  sub_23A59E3F8();
  return sub_23A59E698();
}

uint64_t DTTimerDaemon.unownedExecutor.getter()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

uint64_t DTTimerDaemon.__allocating_init(daemon:environment:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_23A598098(a1, a2);
  swift_release();
  return v4;
}

uint64_t DTTimerDaemon.init(daemon:environment:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_23A598098(a1, a2);
  swift_release();
  return v2;
}

uint64_t DTTimerDaemon.summary.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[16] = v0;
  v2 = sub_23A59E2B4();
  v1[17] = v2;
  v1[18] = *(_QWORD *)(v2 - 8);
  v1[19] = swift_task_alloc();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

void sub_23A585BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 128);
  sub_23A59E2A8();
  sub_23A59E9BC();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarmManager))
  {
    v2 = *(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarms;
    swift_beginAccess();
    *(_QWORD *)(v0 + 120) = *(_QWORD *)(*(_QWORD *)v2 + 16);
    sub_23A59F034();
  }
  v3 = *(_QWORD *)(v0 + 128);
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimerManager))
  {
    v4 = *(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimers;
    swift_beginAccess();
    *(_QWORD *)(v0 + 112) = *(_QWORD *)(*(_QWORD *)v4 + 16);
    sub_23A59F034();
  }
  v5 = *(_QWORD *)(v0 + 128);
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9BC();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarms);
  swift_beginAccess();
  v7 = *v6;
  v8 = *v6 + 64;
  v9 = -1;
  v10 = -1 << *(_BYTE *)(*v6 + 32);
  if (-v10 < 64)
    v9 = ~(-1 << -(char)v10);
  v11 = v9 & *(_QWORD *)(*v6 + 64);
  v12 = (unint64_t)(63 - v10) >> 6;
  swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_9;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v17 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_25;
      v18 = *(_QWORD *)(v8 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_25;
        v18 = *(_QWORD *)(v8 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_24:
    v11 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_9:
    v16 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v15);
    sub_23A59ECC8();
    sub_23A59E9E0();
    sub_23A59E9E0();
    swift_bridgeObjectRelease();

  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_25:
    v20 = *(_QWORD *)(v0 + 128);
    swift_release();
    v21 = (uint64_t *)(v20 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimers);
    swift_beginAccess();
    v22 = *v21;
    v23 = *v21 + 64;
    v24 = -1;
    v25 = -1 << *(_BYTE *)(*v21 + 32);
    if (-v25 < 64)
      v24 = ~(-1 << -(char)v25);
    v26 = v24 & *(_QWORD *)(*v21 + 64);
    v27 = (unint64_t)(63 - v25) >> 6;
    swift_bridgeObjectRetain();
    v28 = 0;
    while (1)
    {
      if (v26)
      {
        v29 = __clz(__rbit64(v26));
        v26 &= v26 - 1;
        v30 = v29 | (v28 << 6);
      }
      else
      {
        v32 = v28 + 1;
        if (__OFADD__(v28, 1))
          goto LABEL_47;
        if (v32 >= v27)
        {
LABEL_45:
          v36 = *(_QWORD *)(v0 + 144);
          v35 = *(_QWORD *)(v0 + 152);
          v37 = *(_QWORD *)(v0 + 136);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
          swift_task_dealloc();
          (*(void (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xE000000000000000);
          return;
        }
        v33 = *(_QWORD *)(v23 + 8 * v32);
        ++v28;
        if (!v33)
        {
          v28 = v32 + 1;
          if (v32 + 1 >= v27)
            goto LABEL_45;
          v33 = *(_QWORD *)(v23 + 8 * v28);
          if (!v33)
          {
            v28 = v32 + 2;
            if (v32 + 2 >= v27)
              goto LABEL_45;
            v33 = *(_QWORD *)(v23 + 8 * v28);
            if (!v33)
            {
              v34 = v32 + 3;
              if (v34 >= v27)
                goto LABEL_45;
              v33 = *(_QWORD *)(v23 + 8 * v34);
              if (!v33)
              {
                while (1)
                {
                  v28 = v34 + 1;
                  if (__OFADD__(v34, 1))
                    goto LABEL_49;
                  if (v28 >= v27)
                    goto LABEL_45;
                  v33 = *(_QWORD *)(v23 + 8 * v28);
                  ++v34;
                  if (v33)
                    goto LABEL_44;
                }
              }
              v28 = v34;
            }
          }
        }
LABEL_44:
        v26 = (v33 - 1) & v33;
        v30 = __clz(__rbit64(v33)) + (v28 << 6);
      }
      v31 = *(id *)(*(_QWORD *)(v22 + 56) + 8 * v30);
      sub_23A59ECE0();
      sub_23A59E9E0();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();

    }
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v8 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
}

uint64_t DTTimerDaemon.activate()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_23A586164;
  return sub_23A586210();
}

uint64_t sub_23A586164()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 32) = v2;
  *v2 = v4;
  v2[1] = sub_23A5861C8;
  return sub_23A586CA8();
}

uint64_t sub_23A5861C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A586210()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[65] = v0;
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v1[66] = sub_23A59EA7C();
  v1[67] = v2;
  return swift_task_switch();
}

uint64_t sub_23A586280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  _QWORD *v57;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarmManager;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarmManager))
    return (*(uint64_t (**)(void))(v0 + 8))();
  if (qword_256998470 != -1)
    swift_once();
  v4 = sub_23A59E6A4();
  __swift_project_value_buffer(v4, (uint64_t)qword_256998478);
  v5 = sub_23A59E68C();
  v6 = sub_23A59EBC0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_23A52C000, v5, v6, "Alarm monitor start", v7, 2u);
    MEMORY[0x23B852178](v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 520);

  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67828]), sel_init);
  *(_QWORD *)(v0 + 544) = v9;
  v10 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = v9;
  v11 = v9;

  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  *(_QWORD *)(v0 + 552) = v12;
  v13 = (void *)*MEMORY[0x24BE67768];
  v14 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 48) = sub_23A598B34;
  *(_QWORD *)(v0 + 56) = v14;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23A58DE98;
  *(_QWORD *)(v0 + 40) = &block_descriptor_165;
  v15 = _Block_copy((const void *)(v0 + 16));
  v16 = v13;
  swift_release();
  v17 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v16, 0, 0, v15);
  _Block_release(v15);

  v18 = (_QWORD *)(v8 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarmObservers);
  v19 = swift_beginAccess();
  MEMORY[0x23B851590](v19);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v20 = (void *)*MEMORY[0x24BE67788];
  v21 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 144) = sub_23A598B3C;
  *(_QWORD *)(v0 + 152) = v21;
  *(_QWORD *)(v0 + 112) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 120) = 1107296256;
  *(_QWORD *)(v0 + 128) = sub_23A58DE98;
  *(_QWORD *)(v0 + 136) = &block_descriptor_169;
  v22 = _Block_copy((const void *)(v0 + 112));
  v23 = v20;
  swift_release();
  v24 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v23, 0, 0, v22);
  _Block_release(v22);

  v25 = swift_beginAccess();
  MEMORY[0x23B851590](v25);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v26 = (void *)*MEMORY[0x24BE67780];
  v27 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 240) = sub_23A598B44;
  *(_QWORD *)(v0 + 248) = v27;
  *(_QWORD *)(v0 + 208) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 216) = 1107296256;
  *(_QWORD *)(v0 + 224) = sub_23A58DE98;
  *(_QWORD *)(v0 + 232) = &block_descriptor_173;
  v28 = _Block_copy((const void *)(v0 + 208));
  v29 = v26;
  swift_release();
  v30 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v29, 0, 0, v28);
  _Block_release(v28);

  v31 = swift_beginAccess();
  MEMORY[0x23B851590](v31);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v32 = (void *)*MEMORY[0x24BE67760];
  v33 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 336) = sub_23A598B4C;
  *(_QWORD *)(v0 + 344) = v33;
  *(_QWORD *)(v0 + 304) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 312) = 1107296256;
  *(_QWORD *)(v0 + 320) = sub_23A58DE98;
  *(_QWORD *)(v0 + 328) = &block_descriptor_177;
  v34 = _Block_copy((const void *)(v0 + 304));
  v35 = v32;
  swift_release();
  v36 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v35, 0, 0, v34);
  _Block_release(v34);

  v37 = swift_beginAccess();
  MEMORY[0x23B851590](v37);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v38 = (void *)*MEMORY[0x24BE67798];
  v39 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 288) = sub_23A598B54;
  *(_QWORD *)(v0 + 296) = v39;
  v40 = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 256) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 264) = 1107296256;
  *(_QWORD *)(v0 + 272) = sub_23A58DE98;
  *(_QWORD *)(v0 + 280) = &block_descriptor_181;
  v41 = _Block_copy((const void *)(v0 + 256));
  v42 = v38;
  swift_release();
  v43 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v42, 0, 0, v41);
  _Block_release(v41);

  v44 = swift_beginAccess();
  MEMORY[0x23B851590](v44);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v45 = (void *)*MEMORY[0x24BE67790];
  v46 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 192) = sub_23A598B5C;
  *(_QWORD *)(v0 + 200) = v46;
  *(_QWORD *)(v0 + 160) = v40;
  *(_QWORD *)(v0 + 168) = 1107296256;
  *(_QWORD *)(v0 + 176) = sub_23A58DE98;
  *(_QWORD *)(v0 + 184) = &block_descriptor_185_0;
  v47 = _Block_copy((const void *)(v0 + 160));
  v48 = v45;
  swift_release();
  v49 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v48, 0, 0, v47);
  _Block_release(v47);

  v50 = swift_beginAccess();
  MEMORY[0x23B851590](v50);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v51 = (void *)*MEMORY[0x24BE677A8];
  v52 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 96) = sub_23A598B64;
  *(_QWORD *)(v0 + 104) = v52;
  *(_QWORD *)(v0 + 64) = v40;
  *(_QWORD *)(v0 + 72) = 1107296256;
  *(_QWORD *)(v0 + 80) = sub_23A58DE98;
  *(_QWORD *)(v0 + 88) = &block_descriptor_189;
  v53 = _Block_copy((const void *)(v0 + 64));
  v54 = v51;
  swift_release();
  v55 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v54, 0, 0, v53);
  _Block_release(v53);

  v56 = swift_beginAccess();
  MEMORY[0x23B851590](v56);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v57 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 560) = v57;
  *v57 = v0;
  v57[1] = sub_23A586C20;
  return sub_23A5916C4();
}

uint64_t sub_23A586C20()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A586C70()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 544);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A586CA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[56] = v0;
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v1[57] = sub_23A59EA7C();
  v1[58] = v2;
  return swift_task_switch();
}

uint64_t sub_23A586D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimerManager;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimerManager))
    return (*(uint64_t (**)(void))(v0 + 8))();
  if (qword_256998470 != -1)
    swift_once();
  v4 = sub_23A59E6A4();
  __swift_project_value_buffer(v4, (uint64_t)qword_256998478);
  v5 = sub_23A59E68C();
  v6 = sub_23A59EBC0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_23A52C000, v5, v6, "Timer monitor start", v7, 2u);
    MEMORY[0x23B852178](v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 448);

  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67870]), sel_init);
  *(_QWORD *)(v0 + 472) = v9;
  v10 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = v9;
  v11 = v9;

  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  *(_QWORD *)(v0 + 480) = v12;
  v13 = (void *)*MEMORY[0x24BE677F0];
  v14 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 48) = sub_23A598868;
  *(_QWORD *)(v0 + 56) = v14;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23A58DE98;
  *(_QWORD *)(v0 + 40) = &block_descriptor_68;
  v15 = _Block_copy((const void *)(v0 + 16));
  v16 = v13;
  swift_release();
  v17 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v16, 0, 0, v15);
  _Block_release(v15);

  v18 = (_QWORD *)(v8 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimerObservers[0]);
  v19 = swift_beginAccess();
  MEMORY[0x23B851590](v19);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v20 = (void *)*MEMORY[0x24BE67810];
  v21 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 144) = sub_23A598870;
  *(_QWORD *)(v0 + 152) = v21;
  *(_QWORD *)(v0 + 112) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 120) = 1107296256;
  *(_QWORD *)(v0 + 128) = sub_23A58DE98;
  *(_QWORD *)(v0 + 136) = &block_descriptor_72;
  v22 = _Block_copy((const void *)(v0 + 112));
  v23 = v20;
  swift_release();
  v24 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v23, 0, 0, v22);
  _Block_release(v22);

  v25 = swift_beginAccess();
  MEMORY[0x23B851590](v25);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v26 = (void *)*MEMORY[0x24BE67808];
  v27 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 240) = sub_23A598878;
  *(_QWORD *)(v0 + 248) = v27;
  *(_QWORD *)(v0 + 208) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 216) = 1107296256;
  *(_QWORD *)(v0 + 224) = sub_23A58DE98;
  *(_QWORD *)(v0 + 232) = &block_descriptor_76;
  v28 = _Block_copy((const void *)(v0 + 208));
  v29 = v26;
  swift_release();
  v30 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v29, 0, 0, v28);
  _Block_release(v28);

  v31 = swift_beginAccess();
  MEMORY[0x23B851590](v31);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v32 = (void *)*MEMORY[0x24BE677E8];
  v33 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 288) = sub_23A598880;
  *(_QWORD *)(v0 + 296) = v33;
  v34 = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 256) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 264) = 1107296256;
  *(_QWORD *)(v0 + 272) = sub_23A58DE98;
  *(_QWORD *)(v0 + 280) = &block_descriptor_80;
  v35 = _Block_copy((const void *)(v0 + 256));
  v36 = v32;
  swift_release();
  v37 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v36, 0, 0, v35);
  _Block_release(v35);

  v38 = swift_beginAccess();
  MEMORY[0x23B851590](v38);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v39 = (void *)*MEMORY[0x24BE677D8];
  v40 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 192) = sub_23A598888;
  *(_QWORD *)(v0 + 200) = v40;
  *(_QWORD *)(v0 + 160) = v34;
  *(_QWORD *)(v0 + 168) = 1107296256;
  *(_QWORD *)(v0 + 176) = sub_23A58DE98;
  *(_QWORD *)(v0 + 184) = &block_descriptor_84;
  v41 = _Block_copy((const void *)(v0 + 160));
  v42 = v39;
  swift_release();
  v43 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v42, 0, 0, v41);
  _Block_release(v41);

  v44 = swift_beginAccess();
  MEMORY[0x23B851590](v44);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v45 = (void *)*MEMORY[0x24BE677E0];
  v46 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 96) = sub_23A598890;
  *(_QWORD *)(v0 + 104) = v46;
  *(_QWORD *)(v0 + 64) = v34;
  *(_QWORD *)(v0 + 72) = 1107296256;
  *(_QWORD *)(v0 + 80) = sub_23A58DE98;
  *(_QWORD *)(v0 + 88) = &block_descriptor_88;
  v47 = _Block_copy((const void *)(v0 + 64));
  v48 = v45;
  swift_release();
  v49 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v48, 0, 0, v47);
  _Block_release(v47);

  v50 = swift_beginAccess();
  MEMORY[0x23B851590](v50);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A59EA58();
  sub_23A59EA70();
  sub_23A59EA4C();
  swift_endAccess();
  v51 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v51;
  *v51 = v0;
  v51[1] = sub_23A587594;
  return sub_23A5962A8();
}

uint64_t sub_23A587594()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5875E0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 472);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTTimerDaemon.invalidate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A587680()
{
  uint64_t v0;

  sub_23A5876F4(&OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarmManager, "Alarm monitor stop", &OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarms, &OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarmObservers);
  sub_23A5876F4(&OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimerManager, "Timer monitor stop", &OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimers, OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimerObservers);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *sub_23A5876F4(uint64_t *result, const char *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  _QWORD *v15;
  id v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;

  v5 = *result;
  if (*(_QWORD *)(v4 + *result))
  {
    v9 = v4;
    if (qword_256998470 != -1)
      swift_once();
    v10 = sub_23A59E6A4();
    __swift_project_value_buffer(v10, (uint64_t)qword_256998478);
    v11 = sub_23A59E68C();
    v12 = sub_23A59EBC0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_23A52C000, v11, v12, a2, v13, 2u);
      MEMORY[0x23B852178](v13, -1, -1);
    }

    v14 = *(void **)(v9 + v5);
    *(_QWORD *)(v9 + v5) = 0;

    v15 = (_QWORD *)(v9 + *a3);
    swift_beginAccess();
    *v15 = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRelease();
    v16 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v17 = (uint64_t *)(v9 + *a4);
    swift_beginAccess();
    v18 = *v17;
    if ((unint64_t)*v17 >> 62)
    {
      swift_bridgeObjectRetain_n();
      result = (uint64_t *)sub_23A59EED8();
      v19 = (uint64_t)result;
      if (result)
        goto LABEL_8;
    }
    else
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (uint64_t *)swift_bridgeObjectRetain_n();
      if (v19)
      {
LABEL_8:
        if (v19 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v19; ++i)
        {
          if ((v18 & 0xC000000000000001) != 0)
          {
            v21 = MEMORY[0x23B85198C](i, v18);
          }
          else
          {
            v21 = *(_QWORD *)(v18 + 8 * i + 32);
            swift_unknownObjectRetain();
          }
          objc_msgSend(v16, sel_removeObserver_, v21);
          swift_unknownObjectRelease();
        }
      }
    }
    swift_bridgeObjectRelease_n();
    *v17 = MEMORY[0x24BEE4AF8];

    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23A587948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t *v7;
  uint64_t result;
  uint64_t v9;
  _QWORD v10[5];

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC23DistributedTimersDaemon8DTDaemon_transportDaemon);
  result = swift_beginAccess();
  v9 = *v7;
  if (v9)
  {
    MEMORY[0x24BDAC7A8](result);
    v10[2] = a2;
    v10[3] = a3;
    swift_retain();
    sub_23A543B7C((uint64_t)sub_23A598960, (uint64_t)v10);
    result = swift_release();
  }
  *a4 = v9 == 0;
  return result;
}

uint64_t DTTimerDaemon.handleRequest(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_23A59E4F4();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  v6 = sub_23A59E680();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v4[12] = swift_task_alloc();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v4[13] = sub_23A59EA7C();
  v4[14] = v7;
  return swift_task_switch();
}

uint64_t sub_23A587B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t *v37;
  _QWORD *v38;
  _QWORD *v39;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == *MEMORY[0x24BE2D4F8])
  {
    v5 = *(uint64_t **)(v0 + 96);
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v5, *(_QWORD *)(v0 + 80));
    v6 = *v5;
    *(_QWORD *)(v0 + 120) = *v5;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v7;
    *v7 = v0;
    v7[1] = sub_23A588044;
    return sub_23A588A48(v6, *(_QWORD *)(v0 + 32));
  }
  if (v4 == *MEMORY[0x24BE2D4B0])
  {
    v9 = *(uint64_t **)(v0 + 96);
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v9, *(_QWORD *)(v0 + 80));
    v10 = *v9;
    *(_QWORD *)(v0 + 144) = *v9;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v11;
    *v11 = v0;
    v11[1] = sub_23A588134;
    return sub_23A58928C(v10, *(_QWORD *)(v0 + 32));
  }
  if (v4 == *MEMORY[0x24BE2D4A0])
  {
    v12 = *(uint64_t **)(v0 + 96);
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v12, *(_QWORD *)(v0 + 80));
    v13 = *v12;
    *(_QWORD *)(v0 + 168) = *v12;
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v14;
    *v14 = v0;
    v14[1] = sub_23A588224;
    return sub_23A589CD4(v13, *(_QWORD *)(v0 + 32));
  }
  if (v4 == *MEMORY[0x24BE2D4A8])
  {
    v15 = *(uint64_t **)(v0 + 96);
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v15, *(_QWORD *)(v0 + 80));
    v16 = *v15;
    *(_QWORD *)(v0 + 192) = *v15;
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v17;
    *v17 = v0;
    v17[1] = sub_23A588314;
    return sub_23A58A618(v16, *(_QWORD *)(v0 + 32));
  }
  if (v4 == *MEMORY[0x24BE2D4B8])
  {
    v18 = *(uint64_t **)(v0 + 96);
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v18, *(_QWORD *)(v0 + 80));
    v19 = *v18;
    *(_QWORD *)(v0 + 216) = *v18;
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v20;
    *v20 = v0;
    v20[1] = sub_23A588404;
    return sub_23A58ACD0(v19, *(_QWORD *)(v0 + 32));
  }
  if (v4 == *MEMORY[0x24BE2D4F0])
    goto LABEL_12;
  if (v4 == *MEMORY[0x24BE2D4D0])
  {
    v21 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 72);
    v23 = *(_QWORD *)(v0 + 48);
    v24 = *(_QWORD *)(v0 + 56);
    v25 = *(uint64_t **)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v21, *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v22, v21, v23);
    v26 = sub_23A59E5F0();
    v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D428];
    v25[3] = v26;
    v25[4] = sub_23A52EAEC(&qword_256994790, v27, MEMORY[0x24BE2D420]);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v29;
    *v29 = v0;
    v29[1] = sub_23A5885F8;
    return DTTimerDaemon._monitorStart(requestContext:monitorContext:)((uint64_t)boxed_opaque_existential_1, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 72));
  }
  else if (v4 == *MEMORY[0x24BE2D498])
  {
    v30 = *(_QWORD *)(v0 + 96);
    v32 = *(_QWORD *)(v0 + 56);
    v31 = *(_QWORD *)(v0 + 64);
    v33 = *(_QWORD *)(v0 + 48);
    v34 = *(uint64_t **)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v30, *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v31, v30, v33);
    v35 = sub_23A59E470();
    v36 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2A0];
    v34[3] = v35;
    v34[4] = sub_23A52EAEC(&qword_2569943A0, v36, MEMORY[0x24BE2D290]);
    v37 = __swift_allocate_boxed_opaque_existential_1(v34);
    v38 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v38;
    *v38 = v0;
    v38[1] = sub_23A5886B0;
    return DTTimerDaemon._monitorStop(requestContext:monitorContext:)((uint64_t)v37, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 64));
  }
  else
  {
    if (v4 == *MEMORY[0x24BE2D4C8] || v4 == *MEMORY[0x24BE2D488])
    {
LABEL_12:
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
LABEL_13:
      sub_23A59E614();
      sub_23A59E620();
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    if (v4 == *MEMORY[0x24BE2D490])
      goto LABEL_13;
    if (v4 != *MEMORY[0x24BE2D478])
    {
      if (v4 == *MEMORY[0x24BE2D4E0])
        goto LABEL_13;
      goto LABEL_12;
    }
    v39 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v39;
    *v39 = v0;
    v39[1] = sub_23A5884F4;
    return DTTimerDaemon._fetchTimers(context:)(*(_QWORD *)(v0 + 32));
  }
}

uint64_t sub_23A588044()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5880A4()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *(void **)(v0 + 120);
  v2 = *(uint64_t **)(v0 + 16);
  v3 = sub_23A59E470();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2A0];
  v2[3] = v3;
  v2[4] = sub_23A52EAEC(&qword_2569943A0, v4, MEMORY[0x24BE2D290]);
  __swift_allocate_boxed_opaque_existential_1(v2);
  sub_23A59E464();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A588134()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A588194()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *(void **)(v0 + 144);
  v2 = *(uint64_t **)(v0 + 16);
  v3 = sub_23A59E470();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2A0];
  v2[3] = v3;
  v2[4] = sub_23A52EAEC(&qword_2569943A0, v4, MEMORY[0x24BE2D290]);
  __swift_allocate_boxed_opaque_existential_1(v2);
  sub_23A59E464();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A588224()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A588284()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *(void **)(v0 + 168);
  v2 = *(uint64_t **)(v0 + 16);
  v3 = sub_23A59E470();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2A0];
  v2[3] = v3;
  v2[4] = sub_23A52EAEC(&qword_2569943A0, v4, MEMORY[0x24BE2D290]);
  __swift_allocate_boxed_opaque_existential_1(v2);
  sub_23A59E464();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A588314()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A588374()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *(void **)(v0 + 192);
  v2 = *(uint64_t **)(v0 + 16);
  v3 = sub_23A59E470();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2A0];
  v2[3] = v3;
  v2[4] = sub_23A52EAEC(&qword_2569943A0, v4, MEMORY[0x24BE2D290]);
  __swift_allocate_boxed_opaque_existential_1(v2);
  sub_23A59E464();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A588404()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A588464()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *(void **)(v0 + 216);
  v2 = *(uint64_t **)(v0 + 16);
  v3 = sub_23A59E470();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D2A0];
  v2[3] = v3;
  v2[4] = sub_23A52EAEC(&qword_2569943A0, v4, MEMORY[0x24BE2D290]);
  __swift_allocate_boxed_opaque_existential_1(v2);
  sub_23A59E464();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5884F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 248) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 256) = a1;
  return swift_task_switch();
}

uint64_t sub_23A588568()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = *(uint64_t **)(v0 + 16);
  v2 = sub_23A59E35C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE2D1A0];
  v1[3] = v2;
  v1[4] = sub_23A52EAEC(&qword_2569947A0, v3, MEMORY[0x24BE2D198]);
  __swift_allocate_boxed_opaque_existential_1(v1);
  sub_23A59E350();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5885F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A588658()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5886B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A588710()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A588768()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5887C0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A588818()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A588870()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5888C8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A588920()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A588970()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
  __swift_deallocate_boxed_opaque_existential_1(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5889DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  __swift_deallocate_boxed_opaque_existential_1(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A588A48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v4 = sub_23A59E530();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v5 = sub_23A59E380();
  v3[12] = v5;
  v3[13] = *(_QWORD *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v3[16] = sub_23A59EA7C();
  v3[17] = v6;
  return swift_task_switch();
}

uint64_t sub_23A588B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  _QWORD *v29;
  id v30;
  _QWORD *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  _QWORD *v37;
  id v38;
  _QWORD *v39;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *log;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_23A59E500();
  sub_23A59E374();
  v5 = v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v5)
  {
    v6 = (id)sub_23A59EC80();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(id *)(v0 + 48);
  }
  *(_QWORD *)(v0 + 144) = v6;
  if (qword_256998470 != -1)
    swift_once();
  v8 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 56);
  v11 = sub_23A59E6A4();
  __swift_project_value_buffer(v11, (uint64_t)qword_256998478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
  v12 = v6;
  v13 = sub_23A59E68C();
  v14 = sub_23A59EBC0();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 72);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 88);
    v19 = swift_slowAlloc();
    v44 = v18;
    v20 = (_QWORD *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v48 = v47;
    *(_DWORD *)v19 = 138412546;
    *(_QWORD *)(v0 + 32) = v12;
    log = v13;
    v21 = v12;
    sub_23A59ED1C();
    *v20 = v12;

    *(_WORD *)(v19 + 12) = 2080;
    sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
    v22 = sub_23A59F034();
    *(_QWORD *)(v0 + 40) = sub_23A538FBC(v22, v23, &v48);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v45, v44);
    v13 = log;
    _os_log_impl(&dword_23A52C000, log, v14, "addTimer: %@, %s", (uint8_t *)v19, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994688);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v47, -1, -1);
    MEMORY[0x23B852178](v19, -1, -1);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }

  v24 = objc_msgSend(v12, sel_mtAlarm);
  *(_QWORD *)(v0 + 152) = v24;
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67828]), sel_init);
    *(_QWORD *)(v0 + 184) = v26;
    v27 = objc_msgSend(v26, sel_addAlarm_, v25);
    *(_QWORD *)(v0 + 192) = v27;
    v28 = v26;
    if (v27)
    {
      v29 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v29;
      v29[2] = v27;
      v29[3] = v28;
      v29[4] = 0x6D72616C41646461;
      v29[5] = 0xE800000000000000;
      v30 = v27;
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v31;
      sub_23A53AB74(0, &qword_256994910);
      *v31 = v0;
      v31[1] = sub_23A5891B4;
      return sub_23A59F070();
    }
    sub_23A59E614();
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();

    v42 = *(void **)(v0 + 184);
    v41 = *(void **)(v0 + 192);
    v43 = *(void **)(v0 + 152);
LABEL_19:

    goto LABEL_20;
  }
  v32 = objc_msgSend(v12, sel_mtTimer);
  *(_QWORD *)(v0 + 200) = v32;
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67870]), sel_init);
    *(_QWORD *)(v0 + 232) = v34;
    v35 = objc_msgSend(v34, sel_addTimer_, v33);
    *(_QWORD *)(v0 + 240) = v35;
    v36 = v34;
    if (v35)
    {
      v37 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v37;
      v37[2] = v35;
      v37[3] = v36;
      v37[4] = 0x72656D6954646461;
      v37[5] = 0xE800000000000000;
      v38 = v35;
      v39 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v39;
      sub_23A53AB74(0, &qword_256994910);
      *v39 = v0;
      v39[1] = sub_23A589220;
      return sub_23A59F070();
    }
    sub_23A59E614();
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();

    v42 = *(void **)(v0 + 232);
    v41 = *(void **)(v0 + 240);
    v43 = *(void **)(v0 + 200);
    goto LABEL_19;
  }
  sub_23A59E614();
  sub_23A59E620();
  swift_willThrow();
LABEL_20:

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5891B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A589220()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A58928C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v4 = sub_23A59E530();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v5 = sub_23A59E380();
  v3[12] = v5;
  v3[13] = *(_QWORD *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v3[16] = sub_23A59EA7C();
  v3[17] = v6;
  return swift_task_switch();
}

uint64_t sub_23A589350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  _QWORD *v29;
  id v30;
  _QWORD *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  _QWORD *v37;
  id v38;
  _QWORD *v39;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *log;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_23A59E500();
  sub_23A59E374();
  v5 = v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v5)
  {
    v6 = (id)sub_23A59EC80();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(id *)(v0 + 48);
  }
  *(_QWORD *)(v0 + 144) = v6;
  if (qword_256998470 != -1)
    swift_once();
  v8 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 56);
  v11 = sub_23A59E6A4();
  __swift_project_value_buffer(v11, (uint64_t)qword_256998478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
  v12 = v6;
  v13 = sub_23A59E68C();
  v14 = sub_23A59EBC0();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 72);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 88);
    v19 = swift_slowAlloc();
    v44 = v18;
    v20 = (_QWORD *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v48 = v47;
    *(_DWORD *)v19 = 138412546;
    *(_QWORD *)(v0 + 32) = v12;
    log = v13;
    v21 = v12;
    sub_23A59ED1C();
    *v20 = v12;

    *(_WORD *)(v19 + 12) = 2080;
    sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
    v22 = sub_23A59F034();
    *(_QWORD *)(v0 + 40) = sub_23A538FBC(v22, v23, &v48);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v45, v44);
    v13 = log;
    _os_log_impl(&dword_23A52C000, log, v14, "updateTimer: %@, %s", (uint8_t *)v19, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994688);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v47, -1, -1);
    MEMORY[0x23B852178](v19, -1, -1);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }

  v24 = objc_msgSend(v12, sel_mtAlarm);
  *(_QWORD *)(v0 + 152) = v24;
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67828]), sel_init);
    *(_QWORD *)(v0 + 184) = v26;
    v27 = objc_msgSend(v26, sel_updateAlarm_, v25);
    *(_QWORD *)(v0 + 192) = v27;
    v28 = v26;
    if (v27)
    {
      v29 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v29;
      v29[2] = v27;
      v29[3] = v28;
      v29[4] = 0x6C41657461647075;
      v29[5] = 0xEB000000006D7261;
      v30 = v27;
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v31;
      sub_23A53AB74(0, &qword_256994910);
      *v31 = v0;
      v31[1] = sub_23A5899F8;
      return sub_23A59F070();
    }
    sub_23A59E614();
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();

    v42 = *(void **)(v0 + 184);
    v41 = *(void **)(v0 + 192);
    v43 = *(void **)(v0 + 152);
LABEL_19:

    goto LABEL_20;
  }
  v32 = objc_msgSend(v12, sel_mtTimer);
  *(_QWORD *)(v0 + 200) = v32;
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67870]), sel_init);
    *(_QWORD *)(v0 + 232) = v34;
    v35 = objc_msgSend(v34, sel_updateTimer_, v33);
    *(_QWORD *)(v0 + 240) = v35;
    v36 = v34;
    if (v35)
    {
      v37 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v37;
      v37[2] = v35;
      v37[3] = v36;
      v37[4] = 0x6954657461647075;
      v37[5] = 0xEB0000000072656DLL;
      v38 = v35;
      v39 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v39;
      sub_23A53AB74(0, &qword_256994910);
      *v39 = v0;
      v39[1] = sub_23A589B64;
      return sub_23A59F070();
    }
    sub_23A59E614();
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();

    v42 = *(void **)(v0 + 232);
    v41 = *(void **)(v0 + 240);
    v43 = *(void **)(v0 + 200);
    goto LABEL_19;
  }
  sub_23A59E614();
  sub_23A59E620();
  swift_willThrow();
LABEL_20:

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5899F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A589A64()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 184);

  v3 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  v4 = *(void **)(v0 + 152);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A589AE4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 184);

  swift_task_dealloc();
  v3 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 192);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A589B64()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A589BD0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 232);

  v3 = *(void **)(v0 + 232);
  v2 = *(void **)(v0 + 240);
  v4 = *(void **)(v0 + 200);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A589C54()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 232);

  swift_task_dealloc();
  v3 = *(void **)(v0 + 232);
  v2 = *(void **)(v0 + 240);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A589CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v4 = sub_23A59E530();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v3[13] = sub_23A59EA7C();
  v3[14] = v5;
  return swift_task_switch();
}

uint64_t sub_23A589D70()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  _QWORD *v27;
  id v28;
  _QWORD *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  _QWORD *v36;
  id v37;
  _QWORD *v38;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t type;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  if (qword_256998470 != -1)
    swift_once();
  v1 = *(void **)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = sub_23A59E6A4();
  __swift_project_value_buffer(v6, (uint64_t)qword_256998478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v7 = v1;
  v8 = sub_23A59E68C();
  v9 = sub_23A59EBC0();
  v10 = os_log_type_enabled(v8, v9);
  v12 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 72);
  v14 = *(void **)(v0 + 48);
  if (v10)
  {
    v44 = *(_QWORD *)(v0 + 80);
    type = v9;
    v15 = swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    v47 = v46;
    *(_DWORD *)v15 = 138412546;
    *(_QWORD *)(v0 + 32) = v14;
    v43 = v13;
    v17 = v11;
    v18 = v14;
    sub_23A59ED1C();
    *v16 = v14;

    *(_WORD *)(v15 + 12) = 2080;
    sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
    v19 = sub_23A59F034();
    *(_QWORD *)(v0 + 40) = sub_23A538FBC(v19, v20, &v47);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v17, v43);
    _os_log_impl(&dword_23A52C000, v8, type, "removeTimer: %@, %s", (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994688);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v46, -1, -1);
    MEMORY[0x23B852178](v15, -1, -1);

  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  v21 = objc_msgSend(*(id *)(v0 + 48), sel_mtAlarm, v43);
  *(_QWORD *)(v0 + 120) = v21;
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67828]), sel_init);
    *(_QWORD *)(v0 + 152) = v23;
    v24 = objc_msgSend(v23, sel_removeAlarm_, v22);
    *(_QWORD *)(v0 + 160) = v24;
    v25 = v23;
    if (v24)
    {
      v26 = v25;
      v27 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 128) = v27;
      v27[2] = v24;
      v27[3] = v26;
      v27[4] = 0x6C4165766F6D6572;
      v27[5] = 0xEB000000006D7261;
      v28 = v24;
      v29 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 136) = v29;
      sub_23A53AB74(0, &qword_256994910);
      *v29 = v0;
      v29[1] = sub_23A58A3A0;
      return sub_23A59F070();
    }
    sub_23A59E614();
    v47 = 0;
    v48 = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();
    v41 = *(void **)(v0 + 152);
    v40 = *(void **)(v0 + 160);
    v42 = *(void **)(v0 + 120);
LABEL_16:

    goto LABEL_17;
  }
  v30 = objc_msgSend(*(id *)(v0 + 48), sel_mtTimer);
  *(_QWORD *)(v0 + 168) = v30;
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67870]), sel_init);
    *(_QWORD *)(v0 + 200) = v32;
    v33 = objc_msgSend(v32, sel_removeTimer_, v31);
    *(_QWORD *)(v0 + 208) = v33;
    v34 = v32;
    if (v33)
    {
      v35 = v34;
      v36 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v36;
      v36[2] = v33;
      v36[3] = v35;
      v36[4] = 0x695465766F6D6572;
      v36[5] = 0xEB0000000072656DLL;
      v37 = v33;
      v38 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v38;
      sub_23A53AB74(0, &qword_256994910);
      *v38 = v0;
      v38[1] = sub_23A58A4DC;
      return sub_23A59F070();
    }
    sub_23A59E614();
    v47 = 0;
    v48 = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();
    v41 = *(void **)(v0 + 200);
    v40 = *(void **)(v0 + 208);
    v42 = *(void **)(v0 + 168);
    goto LABEL_16;
  }
  sub_23A59E614();
  sub_23A59E620();
  swift_willThrow();
LABEL_17:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58A3A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A58A40C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 152);

  v2 = *(void **)(v0 + 152);
  v3 = *(void **)(v0 + 120);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58A474()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  swift_task_dealloc();
  v2 = *(void **)(v0 + 152);
  v1 = *(void **)(v0 + 160);
  v3 = *(void **)(v0 + 120);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58A4DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A58A548()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 200);

  v2 = *(void **)(v0 + 200);
  v3 = *(void **)(v0 + 168);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58A5B0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  swift_task_dealloc();
  v2 = *(void **)(v0 + 200);
  v1 = *(void **)(v0 + 208);
  v3 = *(void **)(v0 + 168);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58A618(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_23A59E530();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v3[12] = sub_23A59EA7C();
  v3[13] = v5;
  return swift_task_switch();
}

uint64_t sub_23A58A6B4()
{
  _QWORD *v0;
  id *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  _QWORD *v26;
  id v27;
  id v28;
  id v29;
  _QWORD *v30;
  id v31;
  _QWORD *v32;
  void *v34;
  void *v35;
  uint64_t v36;
  os_log_type_t type;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40[3];

  if (qword_256998470 != -1)
    swift_once();
  v1 = (id *)(v0 + 5);
  v2 = (void *)v0[5];
  v4 = v0[9];
  v3 = v0[10];
  v5 = v0[8];
  v6 = v0[6];
  v7 = sub_23A59E6A4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256998478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = v2;
  v9 = sub_23A59E68C();
  v10 = sub_23A59EBC0();
  v11 = os_log_type_enabled(v9, v10);
  v13 = v0[9];
  v12 = v0[10];
  v14 = v0[8];
  v15 = (void *)v0[5];
  v39 = v0;
  if (v11)
  {
    v16 = v0 + 4;
    type = v10;
    v17 = swift_slowAlloc();
    v36 = v14;
    v18 = (_QWORD *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v40[0] = v38;
    *(_DWORD *)v17 = 138412546;
    v0[3] = v15;
    v19 = v12;
    v20 = v15;
    sub_23A59ED1C();
    *v18 = v15;

    *(_WORD *)(v17 + 12) = 2080;
    sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
    v21 = sub_23A59F034();
    *v16 = sub_23A538FBC(v21, v22, v40);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v19, v36);
    _os_log_impl(&dword_23A52C000, v9, type, "snoozeTimer: %@, %s", (uint8_t *)v17, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994688);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v38, -1, -1);
    MEMORY[0x23B852178](v17, -1, -1);

  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v23 = objc_msgSend(*v1, sel_mtAlarmID, v36);
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67828]), sel_init);
    v26 = v39;
    v39[17] = v25;
    v27 = objc_msgSend(v25, sel_snoozeAlarmWithIdentifier_, v24);
    v39[18] = v27;

    v28 = v25;
    if (v27)
    {
      v29 = v28;
      v30 = (_QWORD *)swift_task_alloc();
      v39[14] = v30;
      v30[2] = v27;
      v30[3] = v29;
      v30[4] = 0x6C41657A6F6F6E73;
      v30[5] = 0xEB000000006D7261;
      v31 = v27;
      v32 = (_QWORD *)swift_task_alloc();
      v39[15] = v32;
      sub_23A53AB74(0, &qword_256994910);
      *v32 = v39;
      v32[1] = sub_23A58ABA8;
      return sub_23A59F070();
    }
    sub_23A59E614();
    v40[0] = 0;
    v40[1] = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();
    v34 = (void *)v39[17];
    v35 = (void *)v39[18];

  }
  else
  {

    sub_23A59E614();
    v26 = v39;
    sub_23A59E620();
    swift_willThrow();
  }
  swift_task_dealloc();
  return ((uint64_t (*)(void))v26[1])();
}

uint64_t sub_23A58ABA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A58AC14()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 136);
  v1 = *(void **)(v0 + 144);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58AC70()
{
  uint64_t v0;
  void *v1;
  void *v2;

  swift_task_dealloc();
  v2 = *(void **)(v0 + 136);
  v1 = *(void **)(v0 + 144);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58ACD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v4 = sub_23A59E530();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v3[13] = sub_23A59EA7C();
  v3[14] = v5;
  return swift_task_switch();
}

uint64_t sub_23A58AD6C()
{
  _QWORD *v0;
  id *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  id v24;
  _QWORD *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  void *v42;
  void *v43;
  uint64_t v44;
  os_log_type_t type;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;

  if (qword_256998470 != -1)
    swift_once();
  v1 = (id *)(v0 + 6);
  v2 = (void *)v0[6];
  v4 = v0[10];
  v3 = v0[11];
  v5 = v0[9];
  v6 = v0[7];
  v7 = sub_23A59E6A4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256998478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = v2;
  v9 = sub_23A59E68C();
  v10 = sub_23A59EBC0();
  v11 = os_log_type_enabled(v9, v10);
  v13 = v0[10];
  v12 = v0[11];
  v14 = v0[9];
  v15 = (void *)v0[6];
  v47 = v0;
  if (v11)
  {
    v16 = v0 + 5;
    type = v10;
    v17 = swift_slowAlloc();
    v44 = v12;
    v18 = (_QWORD *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    v48 = v46;
    *(_DWORD *)v17 = 138412546;
    v0[4] = v15;
    v19 = v15;
    sub_23A59ED1C();
    *v18 = v15;

    *(_WORD *)(v17 + 12) = 2080;
    sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
    v20 = sub_23A59F034();
    *v16 = sub_23A538FBC(v20, v21, &v48);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v44, v14);
    _os_log_impl(&dword_23A52C000, v9, type, "dismissTimer: %@, %s", (uint8_t *)v17, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994688);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v46, -1, -1);
    MEMORY[0x23B852178](v17, -1, -1);

  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v22 = objc_msgSend(*v1, sel_mtAlarmID, v44);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67828]), sel_init);
    v25 = v47;
    v47[18] = v24;
    v26 = objc_msgSend(v24, sel_dismissAlarmWithIdentifier_, v23);
    v47[19] = v26;

    v27 = v24;
    if (v26)
    {
      v28 = v27;
      v29 = swift_task_alloc();
      v47[15] = v29;
      *(_QWORD *)(v29 + 16) = v26;
      *(_QWORD *)(v29 + 24) = v28;
      strcpy((char *)(v29 + 32), "dismissAlarm");
      *(_BYTE *)(v29 + 45) = 0;
      *(_WORD *)(v29 + 46) = -5120;
      v30 = v26;
      v31 = (_QWORD *)swift_task_alloc();
      v47[16] = v31;
      sub_23A53AB74(0, &qword_256994910);
      *v31 = v47;
      v31[1] = sub_23A58B3A0;
      return sub_23A59F070();
    }
    sub_23A59E614();
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();
    v42 = (void *)v47[18];
    v43 = (void *)v47[19];
LABEL_16:

    goto LABEL_17;
  }
  v32 = objc_msgSend(*v1, sel_mtTimerID);
  v25 = v47;
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67870]), sel_init);
    v47[23] = v34;
    v35 = objc_msgSend(v34, sel_dismissTimerWithIdentifier_, v33);
    v47[24] = v35;

    v36 = v34;
    if (v35)
    {
      v37 = v36;
      v38 = swift_task_alloc();
      v47[20] = v38;
      *(_QWORD *)(v38 + 16) = v35;
      *(_QWORD *)(v38 + 24) = v37;
      strcpy((char *)(v38 + 32), "dismissTimer");
      *(_BYTE *)(v38 + 45) = 0;
      *(_WORD *)(v38 + 46) = -5120;
      v39 = v35;
      v40 = (_QWORD *)swift_task_alloc();
      v47[21] = v40;
      sub_23A53AB74(0, &qword_256994910);
      *v40 = v47;
      v40[1] = sub_23A58B4C4;
      return sub_23A59F070();
    }
    sub_23A59E614();
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();
    v42 = (void *)v47[23];
    v43 = (void *)v47[24];
    goto LABEL_16;
  }
  sub_23A59E614();
  sub_23A59E620();
  swift_willThrow();
LABEL_17:
  swift_task_dealloc();
  return ((uint64_t (*)(void))v25[1])();
}

uint64_t sub_23A58B3A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A58B40C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 144);

  v2 = *(void **)(v0 + 144);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58B464()
{
  uint64_t v0;
  void *v1;
  void *v2;

  swift_task_dealloc();
  v2 = *(void **)(v0 + 144);
  v1 = *(void **)(v0 + 152);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58B4C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A58B530()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 184);

  v2 = *(void **)(v0 + 184);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58B588()
{
  uint64_t v0;
  void *v1;
  void *v2;

  swift_task_dealloc();
  v2 = *(void **)(v0 + 184);
  v1 = *(void **)(v0 + 192);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTTimerDaemon._fetchTimers(context:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_23A59E380();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v4 = sub_23A59E530();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v2[11] = sub_23A59EA7C();
  v2[12] = v5;
  return swift_task_switch();
}

uint64_t sub_23A58B6A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;

  if (qword_256998470 != -1)
    swift_once();
  v1 = v0[3];
  v3 = v0[9];
  v2 = v0[10];
  v4 = v0[8];
  v5 = sub_23A59E6A4();
  __swift_project_value_buffer(v5, (uint64_t)qword_256998478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  v6 = sub_23A59E68C();
  v7 = sub_23A59EBC0();
  v8 = os_log_type_enabled(v6, v7);
  v10 = v0[9];
  v9 = v0[10];
  v11 = v0[8];
  if (v8)
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v12 = 136315138;
    sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
    v13 = sub_23A59F034();
    v0[2] = sub_23A538FBC(v13, v14, &v26);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl(&dword_23A52C000, v6, v7, "fetchTimers: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v25, -1, -1);
    MEMORY[0x23B852178](v12, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v10 + 8))(v0[10], v0[8]);
  }

  v16 = v0[6];
  v15 = v0[7];
  v17 = v0[5];
  v18 = v0[3];
  sub_23A59E500();
  v19 = sub_23A59E374();
  v21 = v20;
  v0[13] = v20;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  v22 = (_QWORD *)swift_task_alloc();
  v0[14] = v22;
  v22[2] = v19;
  v22[3] = v21;
  v22[4] = v18;
  v23 = (_QWORD *)swift_task_alloc();
  v0[15] = v23;
  *v23 = v0;
  v23[1] = sub_23A58B920;
  return DTTimerDaemon._fetchTimers(matching:)((uint64_t)sub_23A5981FC, (uint64_t)v22);
}

uint64_t sub_23A58B920(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 128) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23A58B9C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTTimerDaemon._monitorStart(requestContext:monitorContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v5 = sub_23A59E4F4();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v6 = sub_23A59E530();
  v4[11] = v6;
  v4[12] = *(_QWORD *)(v6 - 8);
  v4[13] = swift_task_alloc();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v4[14] = sub_23A59EA7C();
  v4[15] = v7;
  return swift_task_switch();
}

uint64_t sub_23A58BAE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  os_log_type_t type;
  uint64_t v27;
  uint64_t v28;

  if (qword_256998470 != -1)
    swift_once();
  v2 = v0[12];
  v1 = v0[13];
  v4 = v0[10];
  v3 = v0[11];
  v5 = v0[8];
  v6 = v0[9];
  v8 = v0[5];
  v7 = v0[6];
  v9 = sub_23A59E6A4();
  __swift_project_value_buffer(v9, (uint64_t)qword_256998478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
  v10 = sub_23A59E68C();
  v11 = sub_23A59EBC0();
  v12 = os_log_type_enabled(v10, v11);
  v14 = v0[12];
  v13 = v0[13];
  v15 = v0[10];
  v16 = v0[11];
  v17 = v0[8];
  v18 = v0[9];
  if (v12)
  {
    type = v11;
    v19 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v28 = v27;
    *(_DWORD *)v19 = 136315394;
    sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
    v20 = sub_23A59F034();
    v0[2] = sub_23A538FBC(v20, v21, &v28);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v16);
    *(_WORD *)(v19 + 12) = 2080;
    sub_23A52EAEC(&qword_2569947D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D318], MEMORY[0x24BE2D328]);
    v22 = sub_23A59F034();
    v0[3] = sub_23A538FBC(v22, v23, &v28);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
    _os_log_impl(&dword_23A52C000, v10, type, "monitorStart: %s, %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v27, -1, -1);
    MEMORY[0x23B852178](v19, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v14 + 8))(v0[13], v0[11]);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }

  v24 = (_QWORD *)swift_task_alloc();
  v0[16] = v24;
  *v24 = v0;
  v24[1] = sub_23A58BDAC;
  return DTTimerDaemon._fetchTimers(context:)(v0[5]);
}

uint64_t sub_23A58BDAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v4 + 136) = a1;
    return swift_task_switch();
  }
}

uint64_t sub_23A58BE38()
{
  uint64_t v0;

  sub_23A59E350();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTTimerDaemon._monitorStop(requestContext:monitorContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v4 = sub_23A59E4F4();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v5 = sub_23A59E530();
  v3[10] = v5;
  v3[11] = *(_QWORD *)(v5 - 8);
  v3[12] = swift_task_alloc();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A58BF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  os_log_type_t type;
  uint64_t v26;
  uint64_t v27;

  if (qword_256998470 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  v9 = sub_23A59E6A4();
  __swift_project_value_buffer(v9, (uint64_t)qword_256998478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
  v10 = sub_23A59E68C();
  v11 = sub_23A59EBC0();
  v12 = os_log_type_enabled(v10, v11);
  v14 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 64);
  if (v12)
  {
    type = v11;
    v19 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v27 = v26;
    *(_DWORD *)v19 = 136315394;
    sub_23A52EAEC(&qword_256993750, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D350], MEMORY[0x24BE2D360]);
    v20 = sub_23A59F034();
    *(_QWORD *)(v0 + 16) = sub_23A538FBC(v20, v21, &v27);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v16);
    *(_WORD *)(v19 + 12) = 2080;
    sub_23A52EAEC(&qword_2569947D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE2D318], MEMORY[0x24BE2D328]);
    v22 = sub_23A59F034();
    *(_QWORD *)(v0 + 24) = sub_23A538FBC(v22, v23, &v27);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
    _os_log_impl(&dword_23A52C000, v10, type, "monitorStop: %s, %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v26, -1, -1);
    MEMORY[0x23B852178](v19, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v14 + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }

  sub_23A59E464();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTTimerDaemon._fetchTimers(matching:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v3[8] = sub_23A59EA7C();
  v3[9] = v4;
  return swift_task_switch();
}

uint64_t sub_23A58C280()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  _QWORD *v7;
  void *v9;
  void *v10;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67828]), sel_init);
  *(_QWORD *)(v0 + 80) = v1;
  v2 = objc_msgSend(v1, sel_alarms);
  *(_QWORD *)(v0 + 88) = v2;
  v3 = v1;
  if (v2)
  {
    v4 = v3;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v5;
    v5[2] = v2;
    v5[3] = v4;
    v5[4] = 0x616C416863746566;
    v5[5] = 0xEB00000000736D72;
    v6 = v2;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v7;
    *(_QWORD *)(v0 + 112) = sub_23A53AB74(0, &qword_2569947E0);
    *v7 = v0;
    v7[1] = sub_23A58C44C;
    return sub_23A59F070();
  }
  else
  {
    sub_23A59E614();
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();
    v10 = *(void **)(v0 + 80);
    v9 = *(void **)(v0 + 88);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A58C44C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A58C4B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A58C524()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  _QWORD *v7;
  id v8;
  _QWORD *v9;
  void *v11;
  void *v12;
  void *v13;

  v1 = *(void **)(v0 + 88);

  v2 = *(void **)(v0 + 16);
  sub_23A53AB74(0, &qword_2569947E8);
  sub_23A59EA28();

  *(_QWORD *)(v0 + 152) = 0;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67870]), sel_init);
  *(_QWORD *)(v0 + 160) = v3;
  v4 = objc_msgSend(v3, sel_timers);
  *(_QWORD *)(v0 + 168) = v4;
  v5 = v3;
  if (v4)
  {
    v6 = v5;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v7;
    v7[2] = v4;
    v7[3] = v6;
    v7[4] = 0x6D69546863746566;
    v7[5] = 0xEB00000000737265;
    v8 = v4;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v9;
    *v9 = v0;
    v9[1] = sub_23A58C4B8;
    return sub_23A59F070();
  }
  else
  {
    sub_23A59E614();
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    sub_23A59E620();
    swift_willThrow();
    v12 = *(void **)(v0 + 160);
    v11 = *(void **)(v0 + 168);
    v13 = *(void **)(v0 + 88);

    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A58C734()
{
  uint64_t v0;
  void *v1;
  void *v2;

  swift_task_dealloc();
  v2 = *(void **)(v0 + 80);
  v1 = *(void **)(v0 + 88);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23A58C788()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void **v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;

  v1 = v0;
  v3 = *(void **)(v0 + 160);
  v2 = *(void **)(v0 + 168);
  v4 = (void **)(v0 + 160);
  v5 = (uint64_t)*(v4 - 1);

  v6 = *(v4 - 17);
  sub_23A53AB74(0, qword_2569947F0);
  sub_23A59EA28();

  v7 = MEMORY[0x24BEE4AF8];
  v21 = MEMORY[0x24BEE4AF8];
  if (!v5)
    goto LABEL_11;
  v8 = *(_QWORD *)(v1 + 152);
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_23A59EED8();
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_13;
LABEL_4:
  v22 = v7;
  sub_23A59EE60();
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  v10 = 0;
  v11 = *(_QWORD *)(v1 + 152) & 0xC000000000000001;
  do
  {
    if (v11)
      v12 = (id)MEMORY[0x23B85198C](v10, v8);
    else
      v12 = *(id *)(v8 + 8 * v10 + 32);
    v13 = v12;
    ++v10;
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTAlarm_, v12);

    sub_23A59EE48();
    sub_23A59EE6C();
    sub_23A59EE78();
    sub_23A59EE54();
  }
  while (v9 != v10);
  v14 = v22;
  swift_bridgeObjectRelease();
LABEL_14:
  v16 = sub_23A5982CC(v14, *(uint64_t (**)(id))(v1 + 32), *(_QWORD *)(v1 + 40));
  if (!(v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
      goto LABEL_16;
LABEL_26:
    swift_bridgeObjectRelease();
LABEL_11:
    v15 = *(void **)(v1 + 88);

    v20 = *v4;
    (*(void (**)(uint64_t))(v1 + 8))(v21);
    return;
  }
  v17 = sub_23A59EED8();
  if (!v17)
    goto LABEL_26;
LABEL_16:
  if (v17 >= 1)
  {
    for (i = 0; i != v17; ++i)
    {
      if ((v16 & 0xC000000000000001) != 0)
        MEMORY[0x23B85198C](i, v16);
      else
        v19 = *(id *)(v16 + 8 * i + 32);
      MEMORY[0x23B851590]();
      if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23A59EA58();
      sub_23A59EA70();
      sub_23A59EA4C();
    }
    goto LABEL_26;
  }
LABEL_28:
  __break(1u);
  __break(1u);
  __break(1u);
  __break(1u);
}

uint64_t sub_23A58CD8C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  swift_task_dealloc();
  v2 = *(void **)(v0 + 160);
  v1 = *(void **)(v0 + 168);
  v4 = *(void **)(v0 + 80);
  v3 = *(void **)(v0 + 88);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58CE00(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_23A59F064();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_23A59F064() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

void sub_23A58CEC4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(unint64_t, char *, uint64_t);
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t aBlock;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (*v31)(void *);
  uint64_t v32;

  v25 = a4;
  v26 = a5;
  v24 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994908);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v23(v11, a1, v8);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = (v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject();
  v15 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
  v15(v14 + v12, v11, v8);
  *(_QWORD *)(v14 + v13) = a3;
  v31 = sub_23A598578;
  v32 = v14;
  aBlock = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_23A5437D8;
  v30 = &block_descriptor_2;
  v16 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_release();
  v17 = objc_msgSend(a2, sel_addSuccessBlock_, v16);
  _Block_release(v16);

  v23(v11, v24, v8);
  v18 = swift_allocObject();
  v15(v18 + v12, v11, v8);
  v19 = (_QWORD *)(v18 + v13);
  v20 = v26;
  *v19 = v25;
  v19[1] = v20;
  *(_QWORD *)(v18 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8)) = a3;
  v31 = sub_23A5985A8;
  v32 = v18;
  aBlock = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_23A58D36C;
  v30 = &block_descriptor_28;
  v21 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  v22 = objc_msgSend(a2, sel_addFailureBlock_, v21);
  _Block_release(v21);

}

void sub_23A58D118(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(unint64_t, char *, uint64_t);
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t aBlock;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (*v31)(void *);
  uint64_t v32;

  v25 = a4;
  v26 = a5;
  v24 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994918);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v23(v11, a1, v8);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = (v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject();
  v15 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
  v15(v14 + v12, v11, v8);
  *(_QWORD *)(v14 + v13) = a3;
  v31 = sub_23A59863C;
  v32 = v14;
  aBlock = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_23A5437D8;
  v30 = &block_descriptor_38;
  v16 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_release();
  v17 = objc_msgSend(a2, sel_addSuccessBlock_, v16);
  _Block_release(v16);

  v23(v11, v24, v8);
  v18 = swift_allocObject();
  v15(v18 + v12, v11, v8);
  v19 = (_QWORD *)(v18 + v13);
  v20 = v26;
  *v19 = v25;
  v19[1] = v20;
  *(_QWORD *)(v18 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8)) = a3;
  v31 = sub_23A598748;
  v32 = v18;
  aBlock = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_23A58D36C;
  v30 = &block_descriptor_44;
  v21 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  v22 = objc_msgSend(a2, sel_addFailureBlock_, v21);
  _Block_release(v21);

}

void sub_23A58D36C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_23A58D3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[9];
  __int128 v24;
  __int128 v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v7 = result;
  v8 = sub_23A59E020();
  if (!v8)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_12:
    sub_23A53B9B4((uint64_t)&v24, &qword_256994968);
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = v8;
  v22[1] = sub_23A59E9A4();
  v22[2] = v10;
  sub_23A59EDC4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_23A53A068((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_23A53E8B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23A53BA00((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_12;
  sub_23A53AB74(0, &qword_2569947E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v13 = (void *)v23[0];
  v23[0] = 0;
  sub_23A53AB74(0, &qword_2569947E8);
  sub_23A59EA28();

  v14 = v23[0];
  if (!v23[0])
    goto LABEL_13;
LABEL_14:
  v15 = sub_23A59E560();
  v16 = sub_23A59EAB8();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
  swift_retain();
  if (v19 == 1)
  {
    sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
  }
  v20 = sub_23A56B150();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_256994AA8;
  *(_QWORD *)(v21 + 24) = v18;
  v23[5] = 6;
  v23[6] = 0;
  v23[7] = v15;
  v23[8] = v20;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_23A58D6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  type metadata accessor for DTTimerDaemon();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A58D754()
{
  uint64_t v0;

  sub_23A58D784(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58D784(unint64_t a1)
{
  NSObject *v1;
  uint64_t *v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  _BOOL4 v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t Strong;
  uint64_t result;
  NSObject *v49;
  NSObject *v50;
  _DWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _DWORD *v55;
  uint64_t v56;
  NSObject *v57;

  v3 = (uint64_t *)sub_23A59E260();
  isUniquelyReferenced_nonNull_native = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (unint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256998470 != -1)
    goto LABEL_40;
LABEL_2:
  v7 = sub_23A59E6A4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256998478);
  swift_bridgeObjectRetain_n();
  v8 = sub_23A59E68C();
  LODWORD(v9) = sub_23A59EB9C();
  v10 = os_log_type_enabled(v8, (os_log_type_t)v9);
  v11 = (_DWORD *)(a1 >> 62);
  v54 = a1;
  v51 = (_DWORD *)(a1 >> 62);
  if (v10)
  {
    v12 = (_DWORD *)swift_slowAlloc();
    v1 = swift_slowAlloc();
    v57 = v1;
    v55 = v12;
    *v12 = 136315138;
    if (!v11)
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_57;
  }

  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v11)
    {
      swift_bridgeObjectRetain();
      v11 = (_DWORD *)sub_23A59EED8();
      if (!v11)
        goto LABEL_42;
LABEL_19:
      v3 = (uint64_t *)(v52 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarms);
      v53 = a1 & 0xC000000000000001;
      v23 = 4;
      while (1)
      {
        if (v53)
          v26 = (id)MEMORY[0x23B85198C](v23 - 4, a1);
        else
          v26 = *(id *)(a1 + 8 * v23);
        v27 = v26;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_once();
          goto LABEL_2;
        }
        v55 = (_DWORD *)(v23 - 3);
        v28 = objc_msgSend(v26, sel_alarmIDString);
        v29 = sub_23A59E9A4();
        v9 = v30;

        swift_beginAccess();
        v1 = v27;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v56 = *v3;
        v31 = v56;
        *v3 = 0x8000000000000000;
        v6 = sub_23A563F00(v29, v9);
        v33 = *(_QWORD *)(v31 + 16);
        v34 = (v32 & 1) == 0;
        v35 = v33 + v34;
        if (__OFADD__(v33, v34))
          goto LABEL_38;
        a1 = v32;
        if (*(_QWORD *)(v31 + 24) >= v35)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v38 = (_QWORD *)v56;
            if ((v32 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_23A597BE8(&qword_2569949F0);
            v38 = (_QWORD *)v56;
            if ((a1 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_23A597D90(v35, isUniquelyReferenced_nonNull_native, &qword_2569949F0);
          v36 = sub_23A563F00(v29, v9);
          if ((a1 & 1) != (v37 & 1))
            goto LABEL_59;
          v6 = v36;
          v38 = (_QWORD *)v56;
          if ((a1 & 1) != 0)
          {
LABEL_20:
            v24 = v38[7];
            v25 = *(void **)(v24 + 8 * v6);
            *(_QWORD *)(v24 + 8 * v6) = v1;

            goto LABEL_21;
          }
        }
        v38[(v6 >> 6) + 8] |= 1 << v6;
        v39 = (uint64_t *)(v38[6] + 16 * v6);
        *v39 = v29;
        v39[1] = v9;
        *(_QWORD *)(v38[7] + 8 * v6) = v1;
        v40 = v38[2];
        v41 = __OFADD__(v40, 1);
        v42 = v40 + 1;
        if (v41)
          goto LABEL_39;
        v38[2] = v42;
        swift_bridgeObjectRetain();
LABEL_21:
        *v3 = (uint64_t)v38;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        ++v23;
        a1 = v54;
        if (v55 == v11)
          goto LABEL_42;
      }
    }
    v11 = *(_DWORD **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_19;
LABEL_42:
    swift_bridgeObjectRelease();
    if (v51)
    {
      swift_bridgeObjectRetain();
      v43 = sub_23A59EED8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x24BEE4AF8];
    if (!v43)
      goto LABEL_53;
    v57 = MEMORY[0x24BEE4AF8];
    sub_23A59EE60();
    if ((v43 & 0x8000000000000000) == 0)
    {
      v44 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v45 = (id)MEMORY[0x23B85198C](v44, a1);
        else
          v45 = *(id *)(a1 + 8 * v44 + 32);
        v46 = v45;
        ++v44;
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTAlarm_, v45);

        sub_23A59EE48();
        sub_23A59EE6C();
        sub_23A59EE78();
        sub_23A59EE54();
      }
      while (v43 != v44);
      v8 = v57;
LABEL_53:
      Strong = swift_weakLoadStrong();
      if (!Strong)
        return swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](Strong);
      *(&v49 - 2) = 5;
      *(&v49 - 1) = v8;
      sub_23A5439C0((uint64_t)sub_23A598EA4, (uint64_t)&(&v49)[-4]);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    v13 = sub_23A59EED8();
    swift_bridgeObjectRelease();
LABEL_5:
    v14 = MEMORY[0x24BEE4AF8];
    LODWORD(v53) = v9;
    v50 = v1;
    if (v13)
      break;
LABEL_16:
    isUniquelyReferenced_nonNull_native = (uint64_t)v55;
    v3 = (uint64_t *)MEMORY[0x23B8515B4](v14, v3);
    v1 = v21;
    swift_bridgeObjectRelease();
    v56 = sub_23A538FBC((uint64_t)v3, (unint64_t)v1, (uint64_t *)&v57);
    sub_23A59ED1C();
    a1 = v54;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v8, (os_log_type_t)v53, "AlarmsAdded: alarmIDs=%s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0xCu);
    v22 = v50;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v22, -1, -1);
    MEMORY[0x23B852178](isUniquelyReferenced_nonNull_native, -1, -1);

  }
  v56 = MEMORY[0x24BEE4AF8];
  sub_23A597818(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v49 = v8;
    v15 = 0;
    v14 = v56;
    v16 = v54 & 0xC000000000000001;
    do
    {
      if (v16)
        v17 = (id)MEMORY[0x23B85198C](v15, v54);
      else
        v17 = *(id *)(v54 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_alarmID, v49);
      sub_23A59E23C();

      v56 = v14;
      v9 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v9 >= v20 >> 1)
      {
        sub_23A597818(v20 > 1, v9 + 1, 1);
        v14 = v56;
      }
      ++v15;
      *(_QWORD *)(v14 + 16) = v9 + 1;
      (*(void (**)(unint64_t, unint64_t, uint64_t *))(isUniquelyReferenced_nonNull_native + 32))(v14+ ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80))+ *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v9, v6, v3);
    }
    while (v13 != v15);
    v11 = v51;
    v8 = v49;
    goto LABEL_16;
  }
  __break(1u);
LABEL_59:
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A58DE98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_23A59E02C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_23A59E014();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23A58DF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[9];
  __int128 v24;
  __int128 v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v7 = result;
  v8 = sub_23A59E020();
  if (!v8)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_12:
    sub_23A53B9B4((uint64_t)&v24, &qword_256994968);
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = v8;
  v22[1] = sub_23A59E9A4();
  v22[2] = v10;
  sub_23A59EDC4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_23A53A068((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_23A53E8B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23A53BA00((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_12;
  sub_23A53AB74(0, &qword_2569947E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v13 = (void *)v23[0];
  v23[0] = 0;
  sub_23A53AB74(0, &qword_2569947E8);
  sub_23A59EA28();

  v14 = v23[0];
  if (!v23[0])
    goto LABEL_13;
LABEL_14:
  v15 = sub_23A59E560();
  v16 = sub_23A59EAB8();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
  swift_retain();
  if (v19 == 1)
  {
    sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
  }
  v20 = sub_23A56B150();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_256994A90;
  *(_QWORD *)(v21 + 24) = v18;
  v23[5] = 6;
  v23[6] = 0;
  v23[7] = v15;
  v23[8] = v20;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_23A58E25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  type metadata accessor for DTTimerDaemon();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A58E2D4()
{
  uint64_t v0;

  sub_23A58E304(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58E304(unint64_t a1)
{
  NSObject *v1;
  uint64_t *v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  _BOOL4 v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t Strong;
  uint64_t result;
  NSObject *v49;
  NSObject *v50;
  _DWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _DWORD *v55;
  uint64_t v56;
  NSObject *v57;

  v3 = (uint64_t *)sub_23A59E260();
  isUniquelyReferenced_nonNull_native = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (unint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256998470 != -1)
    goto LABEL_40;
LABEL_2:
  v7 = sub_23A59E6A4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256998478);
  swift_bridgeObjectRetain_n();
  v8 = sub_23A59E68C();
  LODWORD(v9) = sub_23A59EB9C();
  v10 = os_log_type_enabled(v8, (os_log_type_t)v9);
  v11 = (_DWORD *)(a1 >> 62);
  v54 = a1;
  v51 = (_DWORD *)(a1 >> 62);
  if (v10)
  {
    v12 = (_DWORD *)swift_slowAlloc();
    v1 = swift_slowAlloc();
    v57 = v1;
    v55 = v12;
    *v12 = 136315138;
    if (!v11)
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_57;
  }

  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v11)
    {
      swift_bridgeObjectRetain();
      v11 = (_DWORD *)sub_23A59EED8();
      if (!v11)
        goto LABEL_42;
LABEL_19:
      v3 = (uint64_t *)(v52 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarms);
      v53 = a1 & 0xC000000000000001;
      v23 = 4;
      while (1)
      {
        if (v53)
          v26 = (id)MEMORY[0x23B85198C](v23 - 4, a1);
        else
          v26 = *(id *)(a1 + 8 * v23);
        v27 = v26;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_once();
          goto LABEL_2;
        }
        v55 = (_DWORD *)(v23 - 3);
        v28 = objc_msgSend(v26, sel_alarmIDString);
        v29 = sub_23A59E9A4();
        v9 = v30;

        swift_beginAccess();
        v1 = v27;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v56 = *v3;
        v31 = v56;
        *v3 = 0x8000000000000000;
        v6 = sub_23A563F00(v29, v9);
        v33 = *(_QWORD *)(v31 + 16);
        v34 = (v32 & 1) == 0;
        v35 = v33 + v34;
        if (__OFADD__(v33, v34))
          goto LABEL_38;
        a1 = v32;
        if (*(_QWORD *)(v31 + 24) >= v35)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v38 = (_QWORD *)v56;
            if ((v32 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_23A597BE8(&qword_2569949F0);
            v38 = (_QWORD *)v56;
            if ((a1 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_23A597D90(v35, isUniquelyReferenced_nonNull_native, &qword_2569949F0);
          v36 = sub_23A563F00(v29, v9);
          if ((a1 & 1) != (v37 & 1))
            goto LABEL_59;
          v6 = v36;
          v38 = (_QWORD *)v56;
          if ((a1 & 1) != 0)
          {
LABEL_20:
            v24 = v38[7];
            v25 = *(void **)(v24 + 8 * v6);
            *(_QWORD *)(v24 + 8 * v6) = v1;

            goto LABEL_21;
          }
        }
        v38[(v6 >> 6) + 8] |= 1 << v6;
        v39 = (uint64_t *)(v38[6] + 16 * v6);
        *v39 = v29;
        v39[1] = v9;
        *(_QWORD *)(v38[7] + 8 * v6) = v1;
        v40 = v38[2];
        v41 = __OFADD__(v40, 1);
        v42 = v40 + 1;
        if (v41)
          goto LABEL_39;
        v38[2] = v42;
        swift_bridgeObjectRetain();
LABEL_21:
        *v3 = (uint64_t)v38;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        ++v23;
        a1 = v54;
        if (v55 == v11)
          goto LABEL_42;
      }
    }
    v11 = *(_DWORD **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_19;
LABEL_42:
    swift_bridgeObjectRelease();
    if (v51)
    {
      swift_bridgeObjectRetain();
      v43 = sub_23A59EED8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x24BEE4AF8];
    if (!v43)
      goto LABEL_53;
    v57 = MEMORY[0x24BEE4AF8];
    sub_23A59EE60();
    if ((v43 & 0x8000000000000000) == 0)
    {
      v44 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v45 = (id)MEMORY[0x23B85198C](v44, a1);
        else
          v45 = *(id *)(a1 + 8 * v44 + 32);
        v46 = v45;
        ++v44;
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTAlarm_, v45);

        sub_23A59EE48();
        sub_23A59EE6C();
        sub_23A59EE78();
        sub_23A59EE54();
      }
      while (v43 != v44);
      v8 = v57;
LABEL_53:
      Strong = swift_weakLoadStrong();
      if (!Strong)
        return swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](Strong);
      *(&v49 - 2) = 6;
      *(&v49 - 1) = v8;
      sub_23A5439C0((uint64_t)sub_23A598EA4, (uint64_t)&(&v49)[-4]);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    v13 = sub_23A59EED8();
    swift_bridgeObjectRelease();
LABEL_5:
    v14 = MEMORY[0x24BEE4AF8];
    LODWORD(v53) = v9;
    v50 = v1;
    if (v13)
      break;
LABEL_16:
    isUniquelyReferenced_nonNull_native = (uint64_t)v55;
    v3 = (uint64_t *)MEMORY[0x23B8515B4](v14, v3);
    v1 = v21;
    swift_bridgeObjectRelease();
    v56 = sub_23A538FBC((uint64_t)v3, (unint64_t)v1, (uint64_t *)&v57);
    sub_23A59ED1C();
    a1 = v54;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v8, (os_log_type_t)v53, "AlarmsUpdated: alarmIDs=%s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0xCu);
    v22 = v50;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v22, -1, -1);
    MEMORY[0x23B852178](isUniquelyReferenced_nonNull_native, -1, -1);

  }
  v56 = MEMORY[0x24BEE4AF8];
  sub_23A597818(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v49 = v8;
    v15 = 0;
    v14 = v56;
    v16 = v54 & 0xC000000000000001;
    do
    {
      if (v16)
        v17 = (id)MEMORY[0x23B85198C](v15, v54);
      else
        v17 = *(id *)(v54 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_alarmID, v49);
      sub_23A59E23C();

      v56 = v14;
      v9 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v9 >= v20 >> 1)
      {
        sub_23A597818(v20 > 1, v9 + 1, 1);
        v14 = v56;
      }
      ++v15;
      *(_QWORD *)(v14 + 16) = v9 + 1;
      (*(void (**)(unint64_t, unint64_t, uint64_t *))(isUniquelyReferenced_nonNull_native + 32))(v14+ ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80))+ *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v9, v6, v3);
    }
    while (v13 != v15);
    v11 = v51;
    v8 = v49;
    goto LABEL_16;
  }
  __break(1u);
LABEL_59:
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A58EA18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[9];
  __int128 v24;
  __int128 v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v7 = result;
  v8 = sub_23A59E020();
  if (!v8)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_12:
    sub_23A53B9B4((uint64_t)&v24, &qword_256994968);
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = v8;
  v22[1] = sub_23A59E9A4();
  v22[2] = v10;
  sub_23A59EDC4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_23A53A068((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_23A53E8B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23A53BA00((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_12;
  sub_23A53AB74(0, &qword_2569947E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v13 = (void *)v23[0];
  v23[0] = 0;
  sub_23A53AB74(0, &qword_2569947E8);
  sub_23A59EA28();

  v14 = v23[0];
  if (!v23[0])
    goto LABEL_13;
LABEL_14:
  v15 = sub_23A59E560();
  v16 = sub_23A59EAB8();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
  swift_retain();
  if (v19 == 1)
  {
    sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
  }
  v20 = sub_23A56B150();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_256994A78;
  *(_QWORD *)(v21 + 24) = v18;
  v23[5] = 6;
  v23[6] = 0;
  v23[7] = v15;
  v23[8] = v20;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_23A58ED38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  type metadata accessor for DTTimerDaemon();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A58EDB0()
{
  uint64_t v0;

  sub_23A58EDE0(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58EDE0(unint64_t a1)
{
  uint64_t v2;
  void (**v3)(unint64_t, unint64_t, uint64_t);
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  _BOOL4 v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  unint64_t v19;
  void *v20;
  os_log_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t Strong;
  uint64_t v38;
  uint64_t v39;
  int v40;
  void (**v41)(unint64_t, unint64_t, uint64_t);
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[3];

  v2 = sub_23A59E260();
  v3 = *(void (***)(unint64_t, unint64_t, uint64_t))(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (unint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256998470 != -1)
    swift_once();
  v6 = sub_23A59E6A4();
  __swift_project_value_buffer(v6, (uint64_t)qword_256998478);
  swift_bridgeObjectRetain_n();
  v7 = sub_23A59E68C();
  LODWORD(v8) = sub_23A59EB9C();
  v9 = os_log_type_enabled((os_log_t)v7, (os_log_type_t)v8);
  v10 = a1 >> 62;
  v43 = a1 >> 62;
  if (!v9)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v11 = (_DWORD *)swift_slowAlloc();
  v39 = swift_slowAlloc();
  v46[0] = v39;
  v41 = (void (**)(unint64_t, unint64_t, uint64_t))v11;
  *v11 = 136315138;
  if (v10)
    goto LABEL_47;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    v42 = (os_log_t)v7;
    v40 = (int)v8;
    if (v12)
    {
      v45 = MEMORY[0x24BEE4AF8];
      result = sub_23A597818(0, v12 & ~(v12 >> 63), 0);
      if (v12 < 0)
      {
        __break(1u);
        return result;
      }
      v15 = 0;
      v13 = v45;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v16 = (id)MEMORY[0x23B85198C](v15, a1);
        else
          v16 = *(id *)(a1 + 8 * v15 + 32);
        v17 = v16;
        v18 = objc_msgSend(v16, sel_alarmID);
        sub_23A59E23C();

        v45 = v13;
        v7 = *(_QWORD *)(v13 + 16);
        v19 = *(_QWORD *)(v13 + 24);
        if (v7 >= v19 >> 1)
        {
          sub_23A597818(v19 > 1, v7 + 1, 1);
          v13 = v45;
        }
        ++v15;
        *(_QWORD *)(v13 + 16) = v7 + 1;
        v3[4](v13+ ((*((unsigned __int8 *)v3 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v3 + 80))+ (_QWORD)v3[9] * v7, v5, v2);
      }
      while (v12 != v15);
      v10 = v43;
    }
    v3 = v41;
    v2 = MEMORY[0x23B8515B4](v13, v2);
    v8 = v20;
    swift_bridgeObjectRelease();
    v45 = sub_23A538FBC(v2, (unint64_t)v8, v46);
    sub_23A59ED1C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v21 = v42;
    _os_log_impl(&dword_23A52C000, v42, (os_log_type_t)v40, "AlarmsRemoved: alarmIDs=%s", (uint8_t *)v3, 0xCu);
    v22 = v39;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v22, -1, -1);
    MEMORY[0x23B852178](v3, -1, -1);

LABEL_18:
    if (v10)
    {
      swift_bridgeObjectRetain();
      v10 = sub_23A59EED8();
      if (!v10)
        goto LABEL_31;
    }
    else
    {
      v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v10)
        goto LABEL_31;
    }
    if (v10 < 1)
    {
      __break(1u);
      goto LABEL_46;
    }
    v2 = 0;
    v3 = (void (**)(unint64_t, unint64_t, uint64_t))(v44
                                                                           + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarms);
    v7 = a1 & 0xC000000000000001;
    do
    {
      if (v7)
        v23 = (id)MEMORY[0x23B85198C](v2, a1);
      else
        v23 = *(id *)(a1 + 8 * v2 + 32);
      v8 = v23;
      v24 = objc_msgSend(v23, sel_alarmIDString);
      v25 = sub_23A59E9A4();
      v27 = v26;

      swift_beginAccess();
      swift_bridgeObjectRetain();
      v5 = sub_23A563F00(v25, v27);
      v29 = v28;
      swift_bridgeObjectRelease();
      if ((v29 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v31 = (uint64_t)*v3;
        v45 = (uint64_t)*v3;
        *v3 = (void (*)(unint64_t, unint64_t, uint64_t))0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23A597BE8(&qword_2569949F0);
          v31 = v45;
        }
        swift_bridgeObjectRelease();
        v32 = *(void **)(*(_QWORD *)(v31 + 56) + 8 * v5);
        sub_23A56532C(v5, v31);
        v5 = (unint64_t)*v3;
        *v3 = (void (*)(unint64_t, unint64_t, uint64_t))v31;
        swift_bridgeObjectRelease();

      }
      swift_bridgeObjectRelease();
      ++v2;
      swift_endAccess();

    }
    while (v10 != v2);
LABEL_31:
    swift_bridgeObjectRelease();
    if (v43)
    {
      swift_bridgeObjectRetain();
      v33 = sub_23A59EED8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v10 = MEMORY[0x24BEE4AF8];
    if (!v33)
      goto LABEL_42;
    v46[0] = MEMORY[0x24BEE4AF8];
    sub_23A59EE60();
    if ((v33 & 0x8000000000000000) == 0)
      break;
LABEL_46:
    __break(1u);
LABEL_47:
    swift_bridgeObjectRetain();
    v12 = sub_23A59EED8();
    swift_bridgeObjectRelease();
  }
  v34 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v35 = (id)MEMORY[0x23B85198C](v34, a1);
    else
      v35 = *(id *)(a1 + 8 * v34 + 32);
    v36 = v35;
    ++v34;
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTAlarm_, v35);

    sub_23A59EE48();
    sub_23A59EE6C();
    sub_23A59EE78();
    sub_23A59EE54();
  }
  while (v33 != v34);
  v10 = v46[0];
LABEL_42:
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](Strong);
  *(&v38 - 2) = 7;
  *(&v38 - 1) = v10;
  sub_23A5439C0((uint64_t)sub_23A598EA4, (uint64_t)(&v38 - 4));
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23A58F41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[9];
  __int128 v24;
  __int128 v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v7 = result;
  v8 = sub_23A59E020();
  if (!v8)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_12:
    sub_23A53B9B4((uint64_t)&v24, &qword_256994968);
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = v8;
  v22[1] = sub_23A59E9A4();
  v22[2] = v10;
  sub_23A59EDC4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_23A53A068((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_23A53E8B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23A53BA00((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_12;
  sub_23A53AB74(0, &qword_2569947E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v13 = (void *)v23[0];
  v23[0] = 0;
  sub_23A53AB74(0, &qword_2569947E8);
  sub_23A59EA28();

  v14 = v23[0];
  if (!v23[0])
    goto LABEL_13;
LABEL_14:
  v15 = sub_23A59E560();
  v16 = sub_23A59EAB8();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
  swift_retain();
  if (v19 == 1)
  {
    sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
  }
  v20 = sub_23A56B150();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_256994A60;
  *(_QWORD *)(v21 + 24) = v18;
  v23[5] = 6;
  v23[6] = 0;
  v23[7] = v15;
  v23[8] = v20;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_23A58F73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  type metadata accessor for DTTimerDaemon();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A58F7B4()
{
  uint64_t v0;

  sub_23A58F7E4(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A58F7E4(unint64_t a1)
{
  NSObject *v1;
  uint64_t *v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  _BOOL4 v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t Strong;
  uint64_t result;
  NSObject *v49;
  NSObject *v50;
  _DWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _DWORD *v55;
  uint64_t v56;
  NSObject *v57;

  v3 = (uint64_t *)sub_23A59E260();
  isUniquelyReferenced_nonNull_native = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (unint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256998470 != -1)
    goto LABEL_40;
LABEL_2:
  v7 = sub_23A59E6A4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256998478);
  swift_bridgeObjectRetain_n();
  v8 = sub_23A59E68C();
  LODWORD(v9) = sub_23A59EB9C();
  v10 = os_log_type_enabled(v8, (os_log_type_t)v9);
  v11 = (_DWORD *)(a1 >> 62);
  v54 = a1;
  v51 = (_DWORD *)(a1 >> 62);
  if (v10)
  {
    v12 = (_DWORD *)swift_slowAlloc();
    v1 = swift_slowAlloc();
    v57 = v1;
    v55 = v12;
    *v12 = 136315138;
    if (!v11)
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_57;
  }

  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v11)
    {
      swift_bridgeObjectRetain();
      v11 = (_DWORD *)sub_23A59EED8();
      if (!v11)
        goto LABEL_42;
LABEL_19:
      v3 = (uint64_t *)(v52 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarms);
      v53 = a1 & 0xC000000000000001;
      v23 = 4;
      while (1)
      {
        if (v53)
          v26 = (id)MEMORY[0x23B85198C](v23 - 4, a1);
        else
          v26 = *(id *)(a1 + 8 * v23);
        v27 = v26;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_once();
          goto LABEL_2;
        }
        v55 = (_DWORD *)(v23 - 3);
        v28 = objc_msgSend(v26, sel_alarmIDString);
        v29 = sub_23A59E9A4();
        v9 = v30;

        swift_beginAccess();
        v1 = v27;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v56 = *v3;
        v31 = v56;
        *v3 = 0x8000000000000000;
        v6 = sub_23A563F00(v29, v9);
        v33 = *(_QWORD *)(v31 + 16);
        v34 = (v32 & 1) == 0;
        v35 = v33 + v34;
        if (__OFADD__(v33, v34))
          goto LABEL_38;
        a1 = v32;
        if (*(_QWORD *)(v31 + 24) >= v35)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v38 = (_QWORD *)v56;
            if ((v32 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_23A597BE8(&qword_2569949F0);
            v38 = (_QWORD *)v56;
            if ((a1 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_23A597D90(v35, isUniquelyReferenced_nonNull_native, &qword_2569949F0);
          v36 = sub_23A563F00(v29, v9);
          if ((a1 & 1) != (v37 & 1))
            goto LABEL_59;
          v6 = v36;
          v38 = (_QWORD *)v56;
          if ((a1 & 1) != 0)
          {
LABEL_20:
            v24 = v38[7];
            v25 = *(void **)(v24 + 8 * v6);
            *(_QWORD *)(v24 + 8 * v6) = v1;

            goto LABEL_21;
          }
        }
        v38[(v6 >> 6) + 8] |= 1 << v6;
        v39 = (uint64_t *)(v38[6] + 16 * v6);
        *v39 = v29;
        v39[1] = v9;
        *(_QWORD *)(v38[7] + 8 * v6) = v1;
        v40 = v38[2];
        v41 = __OFADD__(v40, 1);
        v42 = v40 + 1;
        if (v41)
          goto LABEL_39;
        v38[2] = v42;
        swift_bridgeObjectRetain();
LABEL_21:
        *v3 = (uint64_t)v38;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        ++v23;
        a1 = v54;
        if (v55 == v11)
          goto LABEL_42;
      }
    }
    v11 = *(_DWORD **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_19;
LABEL_42:
    swift_bridgeObjectRelease();
    if (v51)
    {
      swift_bridgeObjectRetain();
      v43 = sub_23A59EED8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x24BEE4AF8];
    if (!v43)
      goto LABEL_53;
    v57 = MEMORY[0x24BEE4AF8];
    sub_23A59EE60();
    if ((v43 & 0x8000000000000000) == 0)
    {
      v44 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v45 = (id)MEMORY[0x23B85198C](v44, a1);
        else
          v45 = *(id *)(a1 + 8 * v44 + 32);
        v46 = v45;
        ++v44;
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTAlarm_, v45);

        sub_23A59EE48();
        sub_23A59EE6C();
        sub_23A59EE78();
        sub_23A59EE54();
      }
      while (v43 != v44);
      v8 = v57;
LABEL_53:
      Strong = swift_weakLoadStrong();
      if (!Strong)
        return swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](Strong);
      *(&v49 - 2) = 10;
      *(&v49 - 1) = v8;
      sub_23A5439C0((uint64_t)sub_23A598EA4, (uint64_t)&(&v49)[-4]);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    v13 = sub_23A59EED8();
    swift_bridgeObjectRelease();
LABEL_5:
    v14 = MEMORY[0x24BEE4AF8];
    LODWORD(v53) = v9;
    v50 = v1;
    if (v13)
      break;
LABEL_16:
    isUniquelyReferenced_nonNull_native = (uint64_t)v55;
    v3 = (uint64_t *)MEMORY[0x23B8515B4](v14, v3);
    v1 = v21;
    swift_bridgeObjectRelease();
    v56 = sub_23A538FBC((uint64_t)v3, (unint64_t)v1, (uint64_t *)&v57);
    sub_23A59ED1C();
    a1 = v54;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v8, (os_log_type_t)v53, "AlarmsFired: alarmIDs=%s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0xCu);
    v22 = v50;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v22, -1, -1);
    MEMORY[0x23B852178](isUniquelyReferenced_nonNull_native, -1, -1);

  }
  v56 = MEMORY[0x24BEE4AF8];
  sub_23A597818(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v49 = v8;
    v15 = 0;
    v14 = v56;
    v16 = v54 & 0xC000000000000001;
    do
    {
      if (v16)
        v17 = (id)MEMORY[0x23B85198C](v15, v54);
      else
        v17 = *(id *)(v54 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_alarmID, v49);
      sub_23A59E23C();

      v56 = v14;
      v9 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v9 >= v20 >> 1)
      {
        sub_23A597818(v20 > 1, v9 + 1, 1);
        v14 = v56;
      }
      ++v15;
      *(_QWORD *)(v14 + 16) = v9 + 1;
      (*(void (**)(unint64_t, unint64_t, uint64_t *))(isUniquelyReferenced_nonNull_native + 32))(v14+ ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80))+ *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v9, v6, v3);
    }
    while (v13 != v15);
    v11 = v51;
    v8 = v49;
    goto LABEL_16;
  }
  __break(1u);
LABEL_59:
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A58FEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[9];
  __int128 v24;
  __int128 v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v7 = result;
  v8 = sub_23A59E020();
  if (!v8)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_12:
    sub_23A53B9B4((uint64_t)&v24, &qword_256994968);
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = v8;
  v22[1] = sub_23A59E9A4();
  v22[2] = v10;
  sub_23A59EDC4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_23A53A068((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_23A53E8B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23A53BA00((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_12;
  sub_23A53AB74(0, &qword_2569947E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v13 = (void *)v23[0];
  v23[0] = 0;
  sub_23A53AB74(0, &qword_2569947E8);
  sub_23A59EA28();

  v14 = v23[0];
  if (!v23[0])
    goto LABEL_13;
LABEL_14:
  v15 = sub_23A59E560();
  v16 = sub_23A59EAB8();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
  swift_retain();
  if (v19 == 1)
  {
    sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
  }
  v20 = sub_23A56B150();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_256994A48;
  *(_QWORD *)(v21 + 24) = v18;
  v23[5] = 6;
  v23[6] = 0;
  v23[7] = v15;
  v23[8] = v20;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_23A590218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  type metadata accessor for DTTimerDaemon();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A590290()
{
  uint64_t v0;

  sub_23A5902C0(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5902C0(unint64_t a1)
{
  NSObject *v1;
  uint64_t *v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  _BOOL4 v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t Strong;
  uint64_t result;
  NSObject *v49;
  NSObject *v50;
  _DWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _DWORD *v55;
  uint64_t v56;
  NSObject *v57;

  v3 = (uint64_t *)sub_23A59E260();
  isUniquelyReferenced_nonNull_native = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (unint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256998470 != -1)
    goto LABEL_40;
LABEL_2:
  v7 = sub_23A59E6A4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256998478);
  swift_bridgeObjectRetain_n();
  v8 = sub_23A59E68C();
  LODWORD(v9) = sub_23A59EB9C();
  v10 = os_log_type_enabled(v8, (os_log_type_t)v9);
  v11 = (_DWORD *)(a1 >> 62);
  v54 = a1;
  v51 = (_DWORD *)(a1 >> 62);
  if (v10)
  {
    v12 = (_DWORD *)swift_slowAlloc();
    v1 = swift_slowAlloc();
    v57 = v1;
    v55 = v12;
    *v12 = 136315138;
    if (!v11)
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_57;
  }

  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v11)
    {
      swift_bridgeObjectRetain();
      v11 = (_DWORD *)sub_23A59EED8();
      if (!v11)
        goto LABEL_42;
LABEL_19:
      v3 = (uint64_t *)(v52 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarms);
      v53 = a1 & 0xC000000000000001;
      v23 = 4;
      while (1)
      {
        if (v53)
          v26 = (id)MEMORY[0x23B85198C](v23 - 4, a1);
        else
          v26 = *(id *)(a1 + 8 * v23);
        v27 = v26;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_once();
          goto LABEL_2;
        }
        v55 = (_DWORD *)(v23 - 3);
        v28 = objc_msgSend(v26, sel_alarmIDString);
        v29 = sub_23A59E9A4();
        v9 = v30;

        swift_beginAccess();
        v1 = v27;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v56 = *v3;
        v31 = v56;
        *v3 = 0x8000000000000000;
        v6 = sub_23A563F00(v29, v9);
        v33 = *(_QWORD *)(v31 + 16);
        v34 = (v32 & 1) == 0;
        v35 = v33 + v34;
        if (__OFADD__(v33, v34))
          goto LABEL_38;
        a1 = v32;
        if (*(_QWORD *)(v31 + 24) >= v35)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v38 = (_QWORD *)v56;
            if ((v32 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_23A597BE8(&qword_2569949F0);
            v38 = (_QWORD *)v56;
            if ((a1 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_23A597D90(v35, isUniquelyReferenced_nonNull_native, &qword_2569949F0);
          v36 = sub_23A563F00(v29, v9);
          if ((a1 & 1) != (v37 & 1))
            goto LABEL_59;
          v6 = v36;
          v38 = (_QWORD *)v56;
          if ((a1 & 1) != 0)
          {
LABEL_20:
            v24 = v38[7];
            v25 = *(void **)(v24 + 8 * v6);
            *(_QWORD *)(v24 + 8 * v6) = v1;

            goto LABEL_21;
          }
        }
        v38[(v6 >> 6) + 8] |= 1 << v6;
        v39 = (uint64_t *)(v38[6] + 16 * v6);
        *v39 = v29;
        v39[1] = v9;
        *(_QWORD *)(v38[7] + 8 * v6) = v1;
        v40 = v38[2];
        v41 = __OFADD__(v40, 1);
        v42 = v40 + 1;
        if (v41)
          goto LABEL_39;
        v38[2] = v42;
        swift_bridgeObjectRetain();
LABEL_21:
        *v3 = (uint64_t)v38;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        ++v23;
        a1 = v54;
        if (v55 == v11)
          goto LABEL_42;
      }
    }
    v11 = *(_DWORD **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_19;
LABEL_42:
    swift_bridgeObjectRelease();
    if (v51)
    {
      swift_bridgeObjectRetain();
      v43 = sub_23A59EED8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x24BEE4AF8];
    if (!v43)
      goto LABEL_53;
    v57 = MEMORY[0x24BEE4AF8];
    sub_23A59EE60();
    if ((v43 & 0x8000000000000000) == 0)
    {
      v44 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v45 = (id)MEMORY[0x23B85198C](v44, a1);
        else
          v45 = *(id *)(a1 + 8 * v44 + 32);
        v46 = v45;
        ++v44;
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTAlarm_, v45);

        sub_23A59EE48();
        sub_23A59EE6C();
        sub_23A59EE78();
        sub_23A59EE54();
      }
      while (v43 != v44);
      v8 = v57;
LABEL_53:
      Strong = swift_weakLoadStrong();
      if (!Strong)
        return swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](Strong);
      *(&v49 - 2) = 9;
      *(&v49 - 1) = v8;
      sub_23A5439C0((uint64_t)sub_23A598EA4, (uint64_t)&(&v49)[-4]);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    v13 = sub_23A59EED8();
    swift_bridgeObjectRelease();
LABEL_5:
    v14 = MEMORY[0x24BEE4AF8];
    LODWORD(v53) = v9;
    v50 = v1;
    if (v13)
      break;
LABEL_16:
    isUniquelyReferenced_nonNull_native = (uint64_t)v55;
    v3 = (uint64_t *)MEMORY[0x23B8515B4](v14, v3);
    v1 = v21;
    swift_bridgeObjectRelease();
    v56 = sub_23A538FBC((uint64_t)v3, (unint64_t)v1, (uint64_t *)&v57);
    sub_23A59ED1C();
    a1 = v54;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v8, (os_log_type_t)v53, "AlarmsDismissed: alarmIDs=%s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0xCu);
    v22 = v50;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v22, -1, -1);
    MEMORY[0x23B852178](isUniquelyReferenced_nonNull_native, -1, -1);

  }
  v56 = MEMORY[0x24BEE4AF8];
  sub_23A597818(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v49 = v8;
    v15 = 0;
    v14 = v56;
    v16 = v54 & 0xC000000000000001;
    do
    {
      if (v16)
        v17 = (id)MEMORY[0x23B85198C](v15, v54);
      else
        v17 = *(id *)(v54 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_alarmID, v49);
      sub_23A59E23C();

      v56 = v14;
      v9 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v9 >= v20 >> 1)
      {
        sub_23A597818(v20 > 1, v9 + 1, 1);
        v14 = v56;
      }
      ++v15;
      *(_QWORD *)(v14 + 16) = v9 + 1;
      (*(void (**)(unint64_t, unint64_t, uint64_t *))(isUniquelyReferenced_nonNull_native + 32))(v14+ ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80))+ *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v9, v6, v3);
    }
    while (v13 != v15);
    v11 = v51;
    v8 = v49;
    goto LABEL_16;
  }
  __break(1u);
LABEL_59:
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A5909D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[9];
  __int128 v24;
  __int128 v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v7 = result;
  v8 = sub_23A59E020();
  if (!v8)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_12:
    sub_23A53B9B4((uint64_t)&v24, &qword_256994968);
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = v8;
  v22[1] = sub_23A59E9A4();
  v22[2] = v10;
  sub_23A59EDC4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_23A53A068((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_23A53E8B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23A53BA00((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_12;
  sub_23A53AB74(0, &qword_2569947E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v13 = (void *)v23[0];
  v23[0] = 0;
  sub_23A53AB74(0, &qword_2569947E8);
  sub_23A59EA28();

  v14 = v23[0];
  if (!v23[0])
    goto LABEL_13;
LABEL_14:
  v15 = sub_23A59E560();
  v16 = sub_23A59EAB8();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
  swift_retain();
  if (v19 == 1)
  {
    sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
  }
  v20 = sub_23A56B150();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_256994A30;
  *(_QWORD *)(v21 + 24) = v18;
  v23[5] = 6;
  v23[6] = 0;
  v23[7] = v15;
  v23[8] = v20;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_23A590CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  type metadata accessor for DTTimerDaemon();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A590D6C()
{
  uint64_t v0;

  sub_23A590D9C(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A590D9C(unint64_t a1)
{
  NSObject *v1;
  uint64_t *v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  _BOOL4 v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t Strong;
  uint64_t result;
  NSObject *v49;
  NSObject *v50;
  _DWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _DWORD *v55;
  uint64_t v56;
  NSObject *v57;

  v3 = (uint64_t *)sub_23A59E260();
  isUniquelyReferenced_nonNull_native = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (unint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256998470 != -1)
    goto LABEL_40;
LABEL_2:
  v7 = sub_23A59E6A4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256998478);
  swift_bridgeObjectRetain_n();
  v8 = sub_23A59E68C();
  LODWORD(v9) = sub_23A59EB9C();
  v10 = os_log_type_enabled(v8, (os_log_type_t)v9);
  v11 = (_DWORD *)(a1 >> 62);
  v54 = a1;
  v51 = (_DWORD *)(a1 >> 62);
  if (v10)
  {
    v12 = (_DWORD *)swift_slowAlloc();
    v1 = swift_slowAlloc();
    v57 = v1;
    v55 = v12;
    *v12 = 136315138;
    if (!v11)
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_57;
  }

  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v11)
    {
      swift_bridgeObjectRetain();
      v11 = (_DWORD *)sub_23A59EED8();
      if (!v11)
        goto LABEL_42;
LABEL_19:
      v3 = (uint64_t *)(v52 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarms);
      v53 = a1 & 0xC000000000000001;
      v23 = 4;
      while (1)
      {
        if (v53)
          v26 = (id)MEMORY[0x23B85198C](v23 - 4, a1);
        else
          v26 = *(id *)(a1 + 8 * v23);
        v27 = v26;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_once();
          goto LABEL_2;
        }
        v55 = (_DWORD *)(v23 - 3);
        v28 = objc_msgSend(v26, sel_alarmIDString);
        v29 = sub_23A59E9A4();
        v9 = v30;

        swift_beginAccess();
        v1 = v27;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v56 = *v3;
        v31 = v56;
        *v3 = 0x8000000000000000;
        v6 = sub_23A563F00(v29, v9);
        v33 = *(_QWORD *)(v31 + 16);
        v34 = (v32 & 1) == 0;
        v35 = v33 + v34;
        if (__OFADD__(v33, v34))
          goto LABEL_38;
        a1 = v32;
        if (*(_QWORD *)(v31 + 24) >= v35)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v38 = (_QWORD *)v56;
            if ((v32 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_23A597BE8(&qword_2569949F0);
            v38 = (_QWORD *)v56;
            if ((a1 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_23A597D90(v35, isUniquelyReferenced_nonNull_native, &qword_2569949F0);
          v36 = sub_23A563F00(v29, v9);
          if ((a1 & 1) != (v37 & 1))
            goto LABEL_59;
          v6 = v36;
          v38 = (_QWORD *)v56;
          if ((a1 & 1) != 0)
          {
LABEL_20:
            v24 = v38[7];
            v25 = *(void **)(v24 + 8 * v6);
            *(_QWORD *)(v24 + 8 * v6) = v1;

            goto LABEL_21;
          }
        }
        v38[(v6 >> 6) + 8] |= 1 << v6;
        v39 = (uint64_t *)(v38[6] + 16 * v6);
        *v39 = v29;
        v39[1] = v9;
        *(_QWORD *)(v38[7] + 8 * v6) = v1;
        v40 = v38[2];
        v41 = __OFADD__(v40, 1);
        v42 = v40 + 1;
        if (v41)
          goto LABEL_39;
        v38[2] = v42;
        swift_bridgeObjectRetain();
LABEL_21:
        *v3 = (uint64_t)v38;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        ++v23;
        a1 = v54;
        if (v55 == v11)
          goto LABEL_42;
      }
    }
    v11 = *(_DWORD **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_19;
LABEL_42:
    swift_bridgeObjectRelease();
    if (v51)
    {
      swift_bridgeObjectRetain();
      v43 = sub_23A59EED8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x24BEE4AF8];
    if (!v43)
      goto LABEL_53;
    v57 = MEMORY[0x24BEE4AF8];
    sub_23A59EE60();
    if ((v43 & 0x8000000000000000) == 0)
    {
      v44 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v45 = (id)MEMORY[0x23B85198C](v44, a1);
        else
          v45 = *(id *)(a1 + 8 * v44 + 32);
        v46 = v45;
        ++v44;
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTAlarm_, v45);

        sub_23A59EE48();
        sub_23A59EE6C();
        sub_23A59EE78();
        sub_23A59EE54();
      }
      while (v43 != v44);
      v8 = v57;
LABEL_53:
      Strong = swift_weakLoadStrong();
      if (!Strong)
        return swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](Strong);
      *(&v49 - 2) = 12;
      *(&v49 - 1) = v8;
      sub_23A5439C0((uint64_t)sub_23A598EA4, (uint64_t)&(&v49)[-4]);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    v13 = sub_23A59EED8();
    swift_bridgeObjectRelease();
LABEL_5:
    v14 = MEMORY[0x24BEE4AF8];
    LODWORD(v53) = v9;
    v50 = v1;
    if (v13)
      break;
LABEL_16:
    isUniquelyReferenced_nonNull_native = (uint64_t)v55;
    v3 = (uint64_t *)MEMORY[0x23B8515B4](v14, v3);
    v1 = v21;
    swift_bridgeObjectRelease();
    v56 = sub_23A538FBC((uint64_t)v3, (unint64_t)v1, (uint64_t *)&v57);
    sub_23A59ED1C();
    a1 = v54;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v8, (os_log_type_t)v53, "AlarmsFiringChanged: alarmIDs=%s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0xCu);
    v22 = v50;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v22, -1, -1);
    MEMORY[0x23B852178](isUniquelyReferenced_nonNull_native, -1, -1);

  }
  v56 = MEMORY[0x24BEE4AF8];
  sub_23A597818(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v49 = v8;
    v15 = 0;
    v14 = v56;
    v16 = v54 & 0xC000000000000001;
    do
    {
      if (v16)
        v17 = (id)MEMORY[0x23B85198C](v15, v54);
      else
        v17 = *(id *)(v54 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_alarmID, v49);
      sub_23A59E23C();

      v56 = v14;
      v9 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v9 >= v20 >> 1)
      {
        sub_23A597818(v20 > 1, v9 + 1, 1);
        v14 = v56;
      }
      ++v15;
      *(_QWORD *)(v14 + 16) = v9 + 1;
      (*(void (**)(unint64_t, unint64_t, uint64_t *))(isUniquelyReferenced_nonNull_native + 32))(v14+ ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80))+ *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v9, v6, v3);
    }
    while (v13 != v15);
    v11 = v51;
    v8 = v49;
    goto LABEL_16;
  }
  __break(1u);
LABEL_59:
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A5914B0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A541460;
  return sub_23A5914F8();
}

uint64_t sub_23A5914F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A591564()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_256998470 != -1)
    swift_once();
  v1 = sub_23A59E6A4();
  __swift_project_value_buffer(v1, (uint64_t)qword_256998478);
  v2 = sub_23A59E68C();
  v3 = sub_23A59EB9C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23A52C000, v2, v3, "AlarmStateReset", v4, 2u);
    MEMORY[0x23B852178](v4, -1, -1);
  }

  if (swift_weakLoadStrong())
  {
    v5 = swift_task_alloc();
    *(_OWORD *)(v5 + 16) = xmmword_23A5A15F0;
    sub_23A5439C0((uint64_t)sub_23A598EA4, v5);
    swift_release();
    swift_task_dealloc();
  }
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v6;
  *v6 = v0;
  v6[1] = sub_23A598E24;
  return sub_23A5916C4();
}

uint64_t sub_23A5916C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[15] = v0;
  v2 = sub_23A59E260();
  v1[16] = v2;
  v1[17] = *(_QWORD *)(v2 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v1[20] = sub_23A59EA7C();
  v1[21] = v3;
  return swift_task_switch();
}

uint64_t sub_23A59175C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint32_t *p_ivar_base_size;
  uint64_t v9;
  uint32_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  _QWORD *v28;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarmManager);
  *(_QWORD *)(v0 + 176) = v2;
  if (v2)
  {
    v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__monitorAlarmsFetchRunning);
    v4 = OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__monitorAlarmsFetchPending;
    *(_QWORD *)(v0 + 184) = OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__monitorAlarmsFetchPending;
    if ((v3 & 1) != 0)
    {
      *(_BYTE *)(v1 + v4) = 1;
    }
    else
    {
      *(_QWORD *)(v0 + 192) = OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarms;
      v5 = v2;
      swift_beginAccess();
      v6 = *(_QWORD *)(v0 + 184);
      v7 = *(_QWORD *)(v0 + 120);
      p_ivar_base_size = &DTDaemonShim__metaData.ivar_base_size;
      do
      {
        v15 = *(void **)(v0 + 176);
        *(_BYTE *)(v7 + v6) = 0;
        v16 = objc_msgSend(v15, *((SEL *)p_ivar_base_size + 160));
        *(_QWORD *)(v0 + 224) = v16;
        v17 = v15;
        if (v16)
        {
          v25 = *(_QWORD *)(v0 + 176);
          v26 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 200) = v26;
          v26[2] = v16;
          v26[3] = v25;
          v26[4] = 0x616C416863746566;
          v26[5] = 0xEB00000000736D72;
          v27 = v16;
          v28 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 208) = v28;
          sub_23A53AB74(0, &qword_2569947E0);
          *v28 = v0;
          v28[1] = sub_23A591B50;
          return sub_23A59F070();
        }
        sub_23A59E614();
        *(_QWORD *)(v0 + 64) = 0;
        *(_QWORD *)(v0 + 72) = 0xE000000000000000;
        sub_23A59EE00();
        swift_bridgeObjectRelease();
        v18 = (void *)sub_23A59E620();
        swift_willThrow();
        v19 = *(void **)(v0 + 176);

        if (qword_256998470 != -1)
          swift_once();
        v20 = sub_23A59E6A4();
        __swift_project_value_buffer(v20, (uint64_t)qword_256998478);
        v21 = v18;
        v22 = v18;
        v23 = sub_23A59E68C();
        v24 = sub_23A59EBB4();
        if (os_log_type_enabled(v23, v24))
        {
          v9 = swift_slowAlloc();
          v10 = p_ivar_base_size;
          v11 = swift_slowAlloc();
          v30 = v11;
          *(_DWORD *)v9 = 136315138;
          swift_getErrorValue();
          v12 = sub_23A59F0C4();
          *(_QWORD *)(v9 + 4) = sub_23A538FBC(v12, v13, &v30);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_23A52C000, v23, v24, "### Fetch alarms failed: error=%s", (uint8_t *)v9, 0xCu);
          swift_arrayDestroy();
          v14 = v11;
          p_ivar_base_size = v10;
          MEMORY[0x23B852178](v14, -1, -1);
          MEMORY[0x23B852178](v9, -1, -1);

        }
        else
        {

        }
        v6 = *(_QWORD *)(v0 + 184);
        v7 = *(_QWORD *)(v0 + 120);
      }
      while ((*(_BYTE *)(v7 + v6) & 1) != 0);

    }
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A591B50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A591BBC()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  _QWORD *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _QWORD *v65;
  _QWORD *v66;
  uint32_t *p_ivar_base_size;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  id v80;
  id v81;
  void *v82;
  void *v83;
  id v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  id v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98[2];

  v1 = (void *)v0[22];

  v2 = (void *)v0[11];
  v93 = v0 + 11;
  v98[0] = 0;
  sub_23A53AB74(0, &qword_2569947E8);
  sub_23A59EA28();

  v3 = MEMORY[0x24BEE4AF8];
  if (MEMORY[0x24BEE4AF8] >> 62)
    goto LABEL_60;
  v4 = *(_QWORD *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v96 = v0;
    v97 = v3;
    if (v4)
    {
      v93[1] = MEMORY[0x24BEE4AF8];
      result = sub_23A597818(0, v4 & ~(v4 >> 63), 0);
      if (v4 < 0)
      {
        __break(1u);
LABEL_62:
        __break(1u);
        return result;
      }
      v6 = 0;
      v7 = v0[12];
      v8 = v3 & 0xC000000000000001;
      do
      {
        if (v8)
          v9 = (id)MEMORY[0x23B85198C](v6, v3);
        else
          v9 = *(id *)(v3 + 8 * v6 + 32);
        v10 = v9;
        v11 = objc_msgSend(v9, sel_alarmID);
        sub_23A59E23C();

        v96[12] = v7;
        v13 = *(_QWORD *)(v7 + 16);
        v12 = *(_QWORD *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_23A597818(v12 > 1, v13 + 1, 1);
          v7 = v93[1];
        }
        v15 = v96[17];
        v14 = v96[18];
        v16 = v96[16];
        ++v6;
        *(_QWORD *)(v7 + 16) = v13 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v7+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v13, v14, v16);
        v3 = v97;
      }
      while (v4 != v6);
      v0 = v96;
    }
    if (qword_256998470 != -1)
      swift_once();
    v94 = sub_23A59E6A4();
    __swift_project_value_buffer(v94, (uint64_t)qword_256998478);
    swift_bridgeObjectRetain();
    v17 = sub_23A59E68C();
    v18 = sub_23A59EB9C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = v0[16];
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v98[0] = v21;
      *(_DWORD *)v20 = 136315138;
      v22 = swift_bridgeObjectRetain();
      v23 = MEMORY[0x23B8515B4](v22, v19);
      v25 = v24;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 4) = sub_23A538FBC(v23, v25, v98);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A52C000, v17, v18, "Fetched alarms: alarmIDs=%s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v21, -1, -1);
      MEMORY[0x23B852178](v20, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    if (v4)
    {
      v26 = v93 + 2;
      v93[2] = MEMORY[0x24BEE4AF8];
      result = sub_23A5977EC(0, v4 & ~(v4 >> 63), 0);
      if (v4 < 0)
        goto LABEL_62;
      v27 = 0;
      v28 = *v26;
      v29 = v3 & 0xC000000000000001;
      do
      {
        if (v29)
          v30 = (id)MEMORY[0x23B85198C](v27, v3);
        else
          v30 = *(id *)(v3 + 8 * v27 + 32);
        v31 = v30;
        v32 = objc_msgSend(v30, sel_alarmIDString);
        v33 = sub_23A59E9A4();
        v35 = v34;

        *v26 = v28;
        v37 = *(_QWORD *)(v28 + 16);
        v36 = *(_QWORD *)(v28 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_23A5977EC(v36 > 1, v37 + 1, 1);
          v28 = *v26;
        }
        ++v27;
        *(_QWORD *)(v28 + 16) = v37 + 1;
        v38 = (_QWORD *)(v28 + 24 * v37);
        v38[4] = v33;
        v38[5] = v35;
        v38[6] = v31;
        v3 = v97;
      }
      while (v4 != v27);
      swift_bridgeObjectRelease();
      v0 = v96;
    }
    else
    {
      swift_bridgeObjectRelease();
      v28 = MEMORY[0x24BEE4AF8];
    }
    v39 = v93 + 3;
    if (!*(_QWORD *)(v28 + 16))
      break;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569949F0);
    v40 = (_QWORD *)sub_23A59EEFC();
    v41 = *(_QWORD **)(v28 + 16);
    *v39 = v40;
    v95 = v41;
    if (!v41)
      goto LABEL_43;
    swift_bridgeObjectRetain();
    v3 = 0;
    v42 = (void **)(v28 + 48);
    while (1)
    {
      v0 = (_QWORD *)(v3 + 1);
      if (__OFADD__(v3, 1))
        break;
      v45 = (uint64_t)*(v42 - 2);
      v44 = (uint64_t)*(v42 - 1);
      v46 = *v42;
      swift_bridgeObjectRetain();
      v47 = v46;
      v49 = sub_23A563F00(v45, v44);
      v50 = v40[2];
      v51 = (v48 & 1) == 0;
      v52 = v50 + v51;
      if (__OFADD__(v50, v51))
        goto LABEL_58;
      v53 = v48;
      if (v40[3] < v52)
      {
        sub_23A597D90(v52, 1, &qword_2569949F0);
        v54 = sub_23A563F00(v45, v44);
        if ((v53 & 1) != (v55 & 1))
          return sub_23A59F088();
        v49 = v54;
      }
      v40 = (_QWORD *)v93[3];
      if ((v53 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v43 = v40[7];

        *(_QWORD *)(v43 + 8 * v49) = v47;
      }
      else
      {
        v40[(v49 >> 6) + 8] |= 1 << v49;
        v56 = (uint64_t *)(v40[6] + 16 * v49);
        *v56 = v45;
        v56[1] = v44;
        *(_QWORD *)(v40[7] + 8 * v49) = v47;
        v57 = v40[2];
        v58 = __OFADD__(v57, 1);
        v59 = v57 + 1;
        if (v58)
          goto LABEL_59;
        v40[2] = v59;
      }
      ++v3;
      v42 += 3;
      if (v0 == v95)
      {
        v60 = v96;
        v61 = (void *)v96[28];
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    swift_bridgeObjectRetain();
    v4 = sub_23A59EED8();
    swift_bridgeObjectRelease();
  }
  v40 = (_QWORD *)MEMORY[0x24BEE4B00];
  *v39 = MEMORY[0x24BEE4B00];
LABEL_43:
  v60 = v0;
  v61 = (void *)v0[28];
LABEL_45:

  v62 = v60[24];
  v63 = v60[15];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v63 + v62) = v40;
  swift_bridgeObjectRelease();
  v64 = (_BYTE *)(v60[15] + v60[23]);
  v65 = v60;
  if (*v64 == 1)
  {
    v66 = v93 - 3;
    p_ivar_base_size = (_DWORD *)(&DTDaemonShim__metaData + 8);
    v68 = 0x800000023A5A2A90;
    v69 = qword_256998478;
    while (1)
    {
      v79 = (void *)v65[22];
      *v64 = 0;
      v80 = objc_msgSend(v79, *((SEL *)p_ivar_base_size + 160));
      v65[28] = v80;
      v81 = v79;
      if (v80)
        break;
      sub_23A59E614();
      v65[8] = 0;
      v65[9] = 0xE000000000000000;
      sub_23A59EE00();
      swift_bridgeObjectRelease();
      v82 = (void *)sub_23A59E620();
      swift_willThrow();
      v83 = (void *)v65[22];

      if (qword_256998470 != -1)
        swift_once();
      __swift_project_value_buffer(v94, (uint64_t)v69);
      v84 = v82;
      v85 = v82;
      v86 = sub_23A59E68C();
      v87 = sub_23A59EBB4();
      if (os_log_type_enabled(v86, v87))
      {
        v70 = swift_slowAlloc();
        v71 = v68;
        v72 = v66;
        v73 = v69;
        v74 = swift_slowAlloc();
        v98[0] = v74;
        *(_DWORD *)v70 = 136315138;
        swift_getErrorValue();
        v75 = sub_23A59F0C4();
        *(_QWORD *)(v70 + 4) = sub_23A538FBC(v75, v76, v98);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23A52C000, v86, v87, "### Fetch alarms failed: error=%s", (uint8_t *)v70, 0xCu);
        swift_arrayDestroy();
        v77 = v74;
        v69 = v73;
        v66 = v72;
        v68 = v71;
        MEMORY[0x23B852178](v77, -1, -1);
        v78 = v70;
        p_ivar_base_size = &DTDaemonShim__metaData.ivar_base_size;
        MEMORY[0x23B852178](v78, -1, -1);

      }
      else
      {

      }
      v64 = (_BYTE *)(v65[15] + v65[23]);
      if ((*v64 & 1) == 0)
        goto LABEL_54;
    }
    v88 = v65;
    v89 = v65[22];
    v90 = (_QWORD *)swift_task_alloc();
    v88[25] = v90;
    v90[2] = v80;
    v90[3] = v89;
    v90[4] = 0x616C416863746566;
    v90[5] = 0xEB00000000736D72;
    v91 = v80;
    v92 = (_QWORD *)swift_task_alloc();
    v88[26] = v92;
    sub_23A53AB74(0, &qword_2569947E0);
    *v92 = v88;
    v92[1] = sub_23A591B50;
    return sub_23A59F070();
  }
  else
  {
LABEL_54:

    swift_task_dealloc();
    return ((uint64_t (*)(void))v65[1])();
  }
}

uint64_t sub_23A592560()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;

  swift_task_dealloc();
  v1 = *(void **)(v0 + 216);
  v2 = &unk_256998000;
  v3 = qword_256998478;
  while (1)
  {
    v4 = *(void **)(v0 + 176);

    if (v2[142] != -1)
      swift_once();
    v5 = sub_23A59E6A4();
    __swift_project_value_buffer(v5, (uint64_t)v3);
    v6 = v1;
    v7 = v1;
    v8 = sub_23A59E68C();
    v9 = sub_23A59EBB4();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = v3;
      v11 = v2;
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v27 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_getErrorValue();
      v14 = sub_23A59F0C4();
      *(_QWORD *)(v12 + 4) = sub_23A538FBC(v14, v15, &v27);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A52C000, v8, v9, "### Fetch alarms failed: error=%s", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v13, -1, -1);
      v16 = v12;
      v2 = v11;
      v3 = v10;
      MEMORY[0x23B852178](v16, -1, -1);

    }
    else
    {

    }
    v17 = *(_QWORD *)(v0 + 120);
    v19 = *(void **)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 184);
    if ((*(_BYTE *)(v17 + v18) & 1) == 0)
    {

      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    *(_BYTE *)(v17 + v18) = 0;
    v20 = objc_msgSend(v19, sel_alarms);
    *(_QWORD *)(v0 + 224) = v20;
    v21 = v19;
    if (v20)
      break;
    sub_23A59E614();
    *(_QWORD *)(v0 + 64) = 0;
    *(_QWORD *)(v0 + 72) = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    v1 = (void *)sub_23A59E620();
    swift_willThrow();
  }
  v23 = *(_QWORD *)(v0 + 176);
  v24 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v24;
  v24[2] = v20;
  v24[3] = v23;
  v24[4] = 0x616C416863746566;
  v24[5] = 0xEB00000000736D72;
  v25 = v20;
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v26;
  sub_23A53AB74(0, &qword_2569947E0);
  *v26 = v0;
  v26[1] = sub_23A591B50;
  return sub_23A59F070();
}

uint64_t sub_23A592904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[9];
  __int128 v24;
  __int128 v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v7 = result;
  v8 = sub_23A59E020();
  if (!v8)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_12:
    sub_23A53B9B4((uint64_t)&v24, &qword_256994968);
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = v8;
  v22[1] = sub_23A59E9A4();
  v22[2] = v10;
  sub_23A59EDC4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_23A53A068((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_23A53E8B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23A53BA00((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_12;
  sub_23A53AB74(0, &qword_2569947E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v13 = (void *)v23[0];
  v23[0] = 0;
  sub_23A53AB74(0, qword_2569947F0);
  sub_23A59EA28();

  v14 = v23[0];
  if (!v23[0])
    goto LABEL_13;
LABEL_14:
  v15 = sub_23A59E560();
  v16 = sub_23A59EAB8();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
  swift_retain();
  if (v19 == 1)
  {
    sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
  }
  v20 = sub_23A56B150();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_2569949D8;
  *(_QWORD *)(v21 + 24) = v18;
  v23[5] = 6;
  v23[6] = 0;
  v23[7] = v15;
  v23[8] = v20;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_23A592C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  type metadata accessor for DTTimerDaemon();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A592C9C()
{
  uint64_t v0;

  sub_23A592CCC(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A592CCC(unint64_t a1)
{
  NSObject *v1;
  uint64_t *v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  _BOOL4 v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t Strong;
  uint64_t result;
  NSObject *v48;
  NSObject *v49;
  _DWORD *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _DWORD *v54;
  uint64_t v55;
  NSObject *v56;

  v3 = (uint64_t *)sub_23A59E260();
  isUniquelyReferenced_nonNull_native = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (unint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256998470 != -1)
    goto LABEL_40;
LABEL_2:
  v7 = sub_23A59E6A4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256998478);
  swift_bridgeObjectRetain_n();
  v8 = sub_23A59E68C();
  LODWORD(v9) = sub_23A59EB9C();
  v10 = os_log_type_enabled(v8, (os_log_type_t)v9);
  v11 = (_DWORD *)(a1 >> 62);
  v53 = a1;
  v50 = (_DWORD *)(a1 >> 62);
  if (v10)
  {
    v12 = (_DWORD *)swift_slowAlloc();
    v1 = swift_slowAlloc();
    v56 = v1;
    v54 = v12;
    *v12 = 136315138;
    if (!v11)
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_57;
  }

  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v11)
    {
      swift_bridgeObjectRetain();
      v11 = (_DWORD *)sub_23A59EED8();
      if (!v11)
        goto LABEL_42;
LABEL_19:
      v3 = (uint64_t *)(v51 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimers);
      v52 = a1 & 0xC000000000000001;
      v23 = 4;
      while (1)
      {
        if (v52)
          v25 = (id)MEMORY[0x23B85198C](v23 - 4, a1);
        else
          v25 = *(id *)(a1 + 8 * v23);
        v26 = v25;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_once();
          goto LABEL_2;
        }
        v54 = (_DWORD *)(v23 - 3);
        v27 = objc_msgSend(v25, sel_timerIDString);
        v28 = sub_23A59E9A4();
        v9 = v29;

        swift_beginAccess();
        v1 = v26;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v55 = *v3;
        v30 = v55;
        *v3 = 0x8000000000000000;
        v6 = sub_23A563F00(v28, v9);
        v32 = *(_QWORD *)(v30 + 16);
        v33 = (v31 & 1) == 0;
        v34 = v32 + v33;
        if (__OFADD__(v32, v33))
          goto LABEL_38;
        a1 = v31;
        if (*(_QWORD *)(v30 + 24) >= v34)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v37 = (_QWORD *)v55;
            if ((v31 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_23A597BE8(&qword_256994928);
            v37 = (_QWORD *)v55;
            if ((a1 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_23A597D90(v34, isUniquelyReferenced_nonNull_native, &qword_256994928);
          v35 = sub_23A563F00(v28, v9);
          if ((a1 & 1) != (v36 & 1))
            goto LABEL_59;
          v6 = v35;
          v37 = (_QWORD *)v55;
          if ((a1 & 1) != 0)
          {
LABEL_20:
            v24 = v37[7];
            isUniquelyReferenced_nonNull_native = 8 * v6;

            *(_QWORD *)(v24 + 8 * v6) = v1;
            goto LABEL_21;
          }
        }
        v37[(v6 >> 6) + 8] |= 1 << v6;
        v38 = (uint64_t *)(v37[6] + 16 * v6);
        *v38 = v28;
        v38[1] = v9;
        *(_QWORD *)(v37[7] + 8 * v6) = v1;
        v39 = v37[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_39;
        v37[2] = v41;
        swift_bridgeObjectRetain();
LABEL_21:
        *v3 = (uint64_t)v37;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        ++v23;
        a1 = v53;
        if (v54 == v11)
          goto LABEL_42;
      }
    }
    v11 = *(_DWORD **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_19;
LABEL_42:
    swift_bridgeObjectRelease();
    if (v50)
    {
      swift_bridgeObjectRetain();
      v42 = sub_23A59EED8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v42 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x24BEE4AF8];
    if (!v42)
      goto LABEL_53;
    v56 = MEMORY[0x24BEE4AF8];
    sub_23A59EE60();
    if ((v42 & 0x8000000000000000) == 0)
    {
      v43 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v44 = (id)MEMORY[0x23B85198C](v43, a1);
        else
          v44 = *(id *)(a1 + 8 * v43 + 32);
        v45 = v44;
        ++v43;
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTTimer_, v44);

        sub_23A59EE48();
        sub_23A59EE6C();
        sub_23A59EE78();
        sub_23A59EE54();
      }
      while (v42 != v43);
      v8 = v56;
LABEL_53:
      Strong = swift_weakLoadStrong();
      if (!Strong)
        return swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](Strong);
      *(&v48 - 2) = 5;
      *(&v48 - 1) = v8;
      sub_23A5439C0((uint64_t)sub_23A598EA4, (uint64_t)&(&v48)[-4]);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    v13 = sub_23A59EED8();
    swift_bridgeObjectRelease();
LABEL_5:
    v14 = MEMORY[0x24BEE4AF8];
    LODWORD(v52) = v9;
    v49 = v1;
    if (v13)
      break;
LABEL_16:
    isUniquelyReferenced_nonNull_native = (uint64_t)v54;
    v3 = (uint64_t *)MEMORY[0x23B8515B4](v14, v3);
    v1 = v21;
    swift_bridgeObjectRelease();
    v55 = sub_23A538FBC((uint64_t)v3, (unint64_t)v1, (uint64_t *)&v56);
    sub_23A59ED1C();
    a1 = v53;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v8, (os_log_type_t)v52, "TimersAdded: timerIDs=%s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0xCu);
    v22 = v49;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v22, -1, -1);
    MEMORY[0x23B852178](isUniquelyReferenced_nonNull_native, -1, -1);

  }
  v55 = MEMORY[0x24BEE4AF8];
  sub_23A597818(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v48 = v8;
    v15 = 0;
    v14 = v55;
    v16 = v53 & 0xC000000000000001;
    do
    {
      if (v16)
        v17 = (id)MEMORY[0x23B85198C](v15, v53);
      else
        v17 = *(id *)(v53 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_timerID, v48);
      sub_23A59E23C();

      v55 = v14;
      v9 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v9 >= v20 >> 1)
      {
        sub_23A597818(v20 > 1, v9 + 1, 1);
        v14 = v55;
      }
      ++v15;
      *(_QWORD *)(v14 + 16) = v9 + 1;
      (*(void (**)(unint64_t, unint64_t, uint64_t *))(isUniquelyReferenced_nonNull_native + 32))(v14+ ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80))+ *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v9, v6, v3);
    }
    while (v13 != v15);
    v11 = v50;
    v8 = v48;
    goto LABEL_16;
  }
  __break(1u);
LABEL_59:
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A5933E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[9];
  __int128 v24;
  __int128 v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v7 = result;
  v8 = sub_23A59E020();
  if (!v8)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_12:
    sub_23A53B9B4((uint64_t)&v24, &qword_256994968);
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = v8;
  v22[1] = sub_23A59E9A4();
  v22[2] = v10;
  sub_23A59EDC4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_23A53A068((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_23A53E8B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23A53BA00((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_12;
  sub_23A53AB74(0, &qword_2569947E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v13 = (void *)v23[0];
  v23[0] = 0;
  sub_23A53AB74(0, qword_2569947F0);
  sub_23A59EA28();

  v14 = v23[0];
  if (!v23[0])
    goto LABEL_13;
LABEL_14:
  v15 = sub_23A59E560();
  v16 = sub_23A59EAB8();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
  swift_retain();
  if (v19 == 1)
  {
    sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
  }
  v20 = sub_23A56B150();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_2569949C0;
  *(_QWORD *)(v21 + 24) = v18;
  v23[5] = 6;
  v23[6] = 0;
  v23[7] = v15;
  v23[8] = v20;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_23A593700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  type metadata accessor for DTTimerDaemon();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A593778()
{
  uint64_t v0;

  sub_23A5937A8(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5937A8(unint64_t a1)
{
  NSObject *v1;
  uint64_t *v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  _BOOL4 v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t Strong;
  uint64_t result;
  NSObject *v48;
  NSObject *v49;
  _DWORD *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _DWORD *v54;
  uint64_t v55;
  NSObject *v56;

  v3 = (uint64_t *)sub_23A59E260();
  isUniquelyReferenced_nonNull_native = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (unint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256998470 != -1)
    goto LABEL_40;
LABEL_2:
  v7 = sub_23A59E6A4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256998478);
  swift_bridgeObjectRetain_n();
  v8 = sub_23A59E68C();
  LODWORD(v9) = sub_23A59EB9C();
  v10 = os_log_type_enabled(v8, (os_log_type_t)v9);
  v11 = (_DWORD *)(a1 >> 62);
  v53 = a1;
  v50 = (_DWORD *)(a1 >> 62);
  if (v10)
  {
    v12 = (_DWORD *)swift_slowAlloc();
    v1 = swift_slowAlloc();
    v56 = v1;
    v54 = v12;
    *v12 = 136315138;
    if (!v11)
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_57;
  }

  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v11)
    {
      swift_bridgeObjectRetain();
      v11 = (_DWORD *)sub_23A59EED8();
      if (!v11)
        goto LABEL_42;
LABEL_19:
      v3 = (uint64_t *)(v51 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimers);
      v52 = a1 & 0xC000000000000001;
      v23 = 4;
      while (1)
      {
        if (v52)
          v25 = (id)MEMORY[0x23B85198C](v23 - 4, a1);
        else
          v25 = *(id *)(a1 + 8 * v23);
        v26 = v25;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_once();
          goto LABEL_2;
        }
        v54 = (_DWORD *)(v23 - 3);
        v27 = objc_msgSend(v25, sel_timerIDString);
        v28 = sub_23A59E9A4();
        v9 = v29;

        swift_beginAccess();
        v1 = v26;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v55 = *v3;
        v30 = v55;
        *v3 = 0x8000000000000000;
        v6 = sub_23A563F00(v28, v9);
        v32 = *(_QWORD *)(v30 + 16);
        v33 = (v31 & 1) == 0;
        v34 = v32 + v33;
        if (__OFADD__(v32, v33))
          goto LABEL_38;
        a1 = v31;
        if (*(_QWORD *)(v30 + 24) >= v34)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v37 = (_QWORD *)v55;
            if ((v31 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_23A597BE8(&qword_256994928);
            v37 = (_QWORD *)v55;
            if ((a1 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_23A597D90(v34, isUniquelyReferenced_nonNull_native, &qword_256994928);
          v35 = sub_23A563F00(v28, v9);
          if ((a1 & 1) != (v36 & 1))
            goto LABEL_59;
          v6 = v35;
          v37 = (_QWORD *)v55;
          if ((a1 & 1) != 0)
          {
LABEL_20:
            v24 = v37[7];
            isUniquelyReferenced_nonNull_native = 8 * v6;

            *(_QWORD *)(v24 + 8 * v6) = v1;
            goto LABEL_21;
          }
        }
        v37[(v6 >> 6) + 8] |= 1 << v6;
        v38 = (uint64_t *)(v37[6] + 16 * v6);
        *v38 = v28;
        v38[1] = v9;
        *(_QWORD *)(v37[7] + 8 * v6) = v1;
        v39 = v37[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_39;
        v37[2] = v41;
        swift_bridgeObjectRetain();
LABEL_21:
        *v3 = (uint64_t)v37;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        ++v23;
        a1 = v53;
        if (v54 == v11)
          goto LABEL_42;
      }
    }
    v11 = *(_DWORD **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_19;
LABEL_42:
    swift_bridgeObjectRelease();
    if (v50)
    {
      swift_bridgeObjectRetain();
      v42 = sub_23A59EED8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v42 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x24BEE4AF8];
    if (!v42)
      goto LABEL_53;
    v56 = MEMORY[0x24BEE4AF8];
    sub_23A59EE60();
    if ((v42 & 0x8000000000000000) == 0)
    {
      v43 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v44 = (id)MEMORY[0x23B85198C](v43, a1);
        else
          v44 = *(id *)(a1 + 8 * v43 + 32);
        v45 = v44;
        ++v43;
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTTimer_, v44);

        sub_23A59EE48();
        sub_23A59EE6C();
        sub_23A59EE78();
        sub_23A59EE54();
      }
      while (v42 != v43);
      v8 = v56;
LABEL_53:
      Strong = swift_weakLoadStrong();
      if (!Strong)
        return swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](Strong);
      *(&v48 - 2) = 6;
      *(&v48 - 1) = v8;
      sub_23A5439C0((uint64_t)sub_23A598EA4, (uint64_t)&(&v48)[-4]);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    v13 = sub_23A59EED8();
    swift_bridgeObjectRelease();
LABEL_5:
    v14 = MEMORY[0x24BEE4AF8];
    LODWORD(v52) = v9;
    v49 = v1;
    if (v13)
      break;
LABEL_16:
    isUniquelyReferenced_nonNull_native = (uint64_t)v54;
    v3 = (uint64_t *)MEMORY[0x23B8515B4](v14, v3);
    v1 = v21;
    swift_bridgeObjectRelease();
    v55 = sub_23A538FBC((uint64_t)v3, (unint64_t)v1, (uint64_t *)&v56);
    sub_23A59ED1C();
    a1 = v53;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v8, (os_log_type_t)v52, "TimersUpdated: timerIDs=%s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0xCu);
    v22 = v49;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v22, -1, -1);
    MEMORY[0x23B852178](isUniquelyReferenced_nonNull_native, -1, -1);

  }
  v55 = MEMORY[0x24BEE4AF8];
  sub_23A597818(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v48 = v8;
    v15 = 0;
    v14 = v55;
    v16 = v53 & 0xC000000000000001;
    do
    {
      if (v16)
        v17 = (id)MEMORY[0x23B85198C](v15, v53);
      else
        v17 = *(id *)(v53 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_timerID, v48);
      sub_23A59E23C();

      v55 = v14;
      v9 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v9 >= v20 >> 1)
      {
        sub_23A597818(v20 > 1, v9 + 1, 1);
        v14 = v55;
      }
      ++v15;
      *(_QWORD *)(v14 + 16) = v9 + 1;
      (*(void (**)(unint64_t, unint64_t, uint64_t *))(isUniquelyReferenced_nonNull_native + 32))(v14+ ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80))+ *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v9, v6, v3);
    }
    while (v13 != v15);
    v11 = v50;
    v8 = v48;
    goto LABEL_16;
  }
  __break(1u);
LABEL_59:
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A593EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[9];
  __int128 v24;
  __int128 v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v7 = result;
  v8 = sub_23A59E020();
  if (!v8)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_12:
    sub_23A53B9B4((uint64_t)&v24, &qword_256994968);
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = v8;
  v22[1] = sub_23A59E9A4();
  v22[2] = v10;
  sub_23A59EDC4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_23A53A068((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_23A53E8B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23A53BA00((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_12;
  sub_23A53AB74(0, &qword_2569947E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v13 = (void *)v23[0];
  v23[0] = 0;
  sub_23A53AB74(0, qword_2569947F0);
  sub_23A59EA28();

  v14 = v23[0];
  if (!v23[0])
    goto LABEL_13;
LABEL_14:
  v15 = sub_23A59E560();
  v16 = sub_23A59EAB8();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
  swift_retain();
  if (v19 == 1)
  {
    sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
  }
  v20 = sub_23A56B150();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_2569949A8;
  *(_QWORD *)(v21 + 24) = v18;
  v23[5] = 6;
  v23[6] = 0;
  v23[7] = v15;
  v23[8] = v20;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_23A5941DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  type metadata accessor for DTTimerDaemon();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A594254()
{
  uint64_t v0;

  sub_23A594284(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A594284(unint64_t a1)
{
  uint64_t v2;
  void (**v3)(unint64_t, unint64_t, uint64_t);
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  _BOOL4 v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  unint64_t v19;
  void *v20;
  os_log_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t Strong;
  uint64_t v38;
  uint64_t v39;
  int v40;
  void (**v41)(unint64_t, unint64_t, uint64_t);
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[3];

  v2 = sub_23A59E260();
  v3 = *(void (***)(unint64_t, unint64_t, uint64_t))(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (unint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256998470 != -1)
    swift_once();
  v6 = sub_23A59E6A4();
  __swift_project_value_buffer(v6, (uint64_t)qword_256998478);
  swift_bridgeObjectRetain_n();
  v7 = sub_23A59E68C();
  LODWORD(v8) = sub_23A59EB9C();
  v9 = os_log_type_enabled((os_log_t)v7, (os_log_type_t)v8);
  v10 = a1 >> 62;
  v43 = a1 >> 62;
  if (!v9)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v11 = (_DWORD *)swift_slowAlloc();
  v39 = swift_slowAlloc();
  v46[0] = v39;
  v41 = (void (**)(unint64_t, unint64_t, uint64_t))v11;
  *v11 = 136315138;
  if (v10)
    goto LABEL_47;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    v42 = (os_log_t)v7;
    v40 = (int)v8;
    if (v12)
    {
      v45 = MEMORY[0x24BEE4AF8];
      result = sub_23A597818(0, v12 & ~(v12 >> 63), 0);
      if (v12 < 0)
      {
        __break(1u);
        return result;
      }
      v15 = 0;
      v13 = v45;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v16 = (id)MEMORY[0x23B85198C](v15, a1);
        else
          v16 = *(id *)(a1 + 8 * v15 + 32);
        v17 = v16;
        v18 = objc_msgSend(v16, sel_timerID);
        sub_23A59E23C();

        v45 = v13;
        v7 = *(_QWORD *)(v13 + 16);
        v19 = *(_QWORD *)(v13 + 24);
        if (v7 >= v19 >> 1)
        {
          sub_23A597818(v19 > 1, v7 + 1, 1);
          v13 = v45;
        }
        ++v15;
        *(_QWORD *)(v13 + 16) = v7 + 1;
        v3[4](v13+ ((*((unsigned __int8 *)v3 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v3 + 80))+ (_QWORD)v3[9] * v7, v5, v2);
      }
      while (v12 != v15);
      v10 = v43;
    }
    v3 = v41;
    v2 = MEMORY[0x23B8515B4](v13, v2);
    v8 = v20;
    swift_bridgeObjectRelease();
    v45 = sub_23A538FBC(v2, (unint64_t)v8, v46);
    sub_23A59ED1C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v21 = v42;
    _os_log_impl(&dword_23A52C000, v42, (os_log_type_t)v40, "TimersRemoved: timerIDs=%s", (uint8_t *)v3, 0xCu);
    v22 = v39;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v22, -1, -1);
    MEMORY[0x23B852178](v3, -1, -1);

LABEL_18:
    if (v10)
    {
      swift_bridgeObjectRetain();
      v10 = sub_23A59EED8();
      if (!v10)
        goto LABEL_31;
    }
    else
    {
      v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v10)
        goto LABEL_31;
    }
    if (v10 < 1)
    {
      __break(1u);
      goto LABEL_46;
    }
    v2 = 0;
    v3 = (void (**)(unint64_t, unint64_t, uint64_t))(v44
                                                                           + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimers);
    v7 = a1 & 0xC000000000000001;
    do
    {
      if (v7)
        v23 = (id)MEMORY[0x23B85198C](v2, a1);
      else
        v23 = *(id *)(a1 + 8 * v2 + 32);
      v8 = v23;
      v24 = objc_msgSend(v23, sel_timerIDString);
      v25 = sub_23A59E9A4();
      v27 = v26;

      swift_beginAccess();
      swift_bridgeObjectRetain();
      v5 = sub_23A563F00(v25, v27);
      v29 = v28;
      swift_bridgeObjectRelease();
      if ((v29 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v31 = (uint64_t)*v3;
        v45 = (uint64_t)*v3;
        *v3 = (void (*)(unint64_t, unint64_t, uint64_t))0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23A597BE8(&qword_256994928);
          v31 = v45;
        }
        swift_bridgeObjectRelease();
        v32 = *(void **)(*(_QWORD *)(v31 + 56) + 8 * v5);
        sub_23A56532C(v5, v31);
        v5 = (unint64_t)*v3;
        *v3 = (void (*)(unint64_t, unint64_t, uint64_t))v31;

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      ++v2;
      swift_endAccess();

    }
    while (v10 != v2);
LABEL_31:
    swift_bridgeObjectRelease();
    if (v43)
    {
      swift_bridgeObjectRetain();
      v33 = sub_23A59EED8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v10 = MEMORY[0x24BEE4AF8];
    if (!v33)
      goto LABEL_42;
    v46[0] = MEMORY[0x24BEE4AF8];
    sub_23A59EE60();
    if ((v33 & 0x8000000000000000) == 0)
      break;
LABEL_46:
    __break(1u);
LABEL_47:
    swift_bridgeObjectRetain();
    v12 = sub_23A59EED8();
    swift_bridgeObjectRelease();
  }
  v34 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v35 = (id)MEMORY[0x23B85198C](v34, a1);
    else
      v35 = *(id *)(a1 + 8 * v34 + 32);
    v36 = v35;
    ++v34;
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTTimer_, v35);

    sub_23A59EE48();
    sub_23A59EE6C();
    sub_23A59EE78();
    sub_23A59EE54();
  }
  while (v33 != v34);
  v10 = v46[0];
LABEL_42:
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](Strong);
  *(&v38 - 2) = 7;
  *(&v38 - 1) = v10;
  sub_23A5439C0((uint64_t)sub_23A598EA4, (uint64_t)(&v38 - 4));
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23A5948C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[9];
  __int128 v24;
  __int128 v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v7 = result;
  v8 = sub_23A59E020();
  if (!v8)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_12:
    sub_23A53B9B4((uint64_t)&v24, &qword_256994968);
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = v8;
  v22[1] = sub_23A59E9A4();
  v22[2] = v10;
  sub_23A59EDC4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_23A53A068((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_23A53E8B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23A53BA00((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_12;
  sub_23A53AB74(0, &qword_2569947E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v13 = (void *)v23[0];
  v23[0] = 0;
  sub_23A53AB74(0, qword_2569947F0);
  sub_23A59EA28();

  v14 = v23[0];
  if (!v23[0])
    goto LABEL_13;
LABEL_14:
  v15 = sub_23A59E560();
  v16 = sub_23A59EAB8();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
  swift_retain();
  if (v19 == 1)
  {
    sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
  }
  v20 = sub_23A56B150();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_256994990;
  *(_QWORD *)(v21 + 24) = v18;
  v23[5] = 6;
  v23[6] = 0;
  v23[7] = v15;
  v23[8] = v20;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_23A594BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  type metadata accessor for DTTimerDaemon();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A594C58()
{
  uint64_t v0;

  sub_23A594C88(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A594C88(unint64_t a1)
{
  NSObject *v1;
  uint64_t *v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  _BOOL4 v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t Strong;
  uint64_t result;
  NSObject *v48;
  NSObject *v49;
  _DWORD *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _DWORD *v54;
  uint64_t v55;
  NSObject *v56;

  v3 = (uint64_t *)sub_23A59E260();
  isUniquelyReferenced_nonNull_native = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (unint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256998470 != -1)
    goto LABEL_40;
LABEL_2:
  v7 = sub_23A59E6A4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256998478);
  swift_bridgeObjectRetain_n();
  v8 = sub_23A59E68C();
  LODWORD(v9) = sub_23A59EB9C();
  v10 = os_log_type_enabled(v8, (os_log_type_t)v9);
  v11 = (_DWORD *)(a1 >> 62);
  v53 = a1;
  v50 = (_DWORD *)(a1 >> 62);
  if (v10)
  {
    v12 = (_DWORD *)swift_slowAlloc();
    v1 = swift_slowAlloc();
    v56 = v1;
    v54 = v12;
    *v12 = 136315138;
    if (!v11)
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_57;
  }

  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v11)
    {
      swift_bridgeObjectRetain();
      v11 = (_DWORD *)sub_23A59EED8();
      if (!v11)
        goto LABEL_42;
LABEL_19:
      v3 = (uint64_t *)(v51 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimers);
      v52 = a1 & 0xC000000000000001;
      v23 = 4;
      while (1)
      {
        if (v52)
          v25 = (id)MEMORY[0x23B85198C](v23 - 4, a1);
        else
          v25 = *(id *)(a1 + 8 * v23);
        v26 = v25;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_once();
          goto LABEL_2;
        }
        v54 = (_DWORD *)(v23 - 3);
        v27 = objc_msgSend(v25, sel_timerIDString);
        v28 = sub_23A59E9A4();
        v9 = v29;

        swift_beginAccess();
        v1 = v26;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v55 = *v3;
        v30 = v55;
        *v3 = 0x8000000000000000;
        v6 = sub_23A563F00(v28, v9);
        v32 = *(_QWORD *)(v30 + 16);
        v33 = (v31 & 1) == 0;
        v34 = v32 + v33;
        if (__OFADD__(v32, v33))
          goto LABEL_38;
        a1 = v31;
        if (*(_QWORD *)(v30 + 24) >= v34)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v37 = (_QWORD *)v55;
            if ((v31 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_23A597BE8(&qword_256994928);
            v37 = (_QWORD *)v55;
            if ((a1 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_23A597D90(v34, isUniquelyReferenced_nonNull_native, &qword_256994928);
          v35 = sub_23A563F00(v28, v9);
          if ((a1 & 1) != (v36 & 1))
            goto LABEL_59;
          v6 = v35;
          v37 = (_QWORD *)v55;
          if ((a1 & 1) != 0)
          {
LABEL_20:
            v24 = v37[7];
            isUniquelyReferenced_nonNull_native = 8 * v6;

            *(_QWORD *)(v24 + 8 * v6) = v1;
            goto LABEL_21;
          }
        }
        v37[(v6 >> 6) + 8] |= 1 << v6;
        v38 = (uint64_t *)(v37[6] + 16 * v6);
        *v38 = v28;
        v38[1] = v9;
        *(_QWORD *)(v37[7] + 8 * v6) = v1;
        v39 = v37[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_39;
        v37[2] = v41;
        swift_bridgeObjectRetain();
LABEL_21:
        *v3 = (uint64_t)v37;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        ++v23;
        a1 = v53;
        if (v54 == v11)
          goto LABEL_42;
      }
    }
    v11 = *(_DWORD **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_19;
LABEL_42:
    swift_bridgeObjectRelease();
    if (v50)
    {
      swift_bridgeObjectRetain();
      v42 = sub_23A59EED8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v42 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x24BEE4AF8];
    if (!v42)
      goto LABEL_53;
    v56 = MEMORY[0x24BEE4AF8];
    sub_23A59EE60();
    if ((v42 & 0x8000000000000000) == 0)
    {
      v43 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v44 = (id)MEMORY[0x23B85198C](v43, a1);
        else
          v44 = *(id *)(a1 + 8 * v43 + 32);
        v45 = v44;
        ++v43;
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTTimer_, v44);

        sub_23A59EE48();
        sub_23A59EE6C();
        sub_23A59EE78();
        sub_23A59EE54();
      }
      while (v42 != v43);
      v8 = v56;
LABEL_53:
      Strong = swift_weakLoadStrong();
      if (!Strong)
        return swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](Strong);
      *(&v48 - 2) = 10;
      *(&v48 - 1) = v8;
      sub_23A5439C0((uint64_t)sub_23A598EA4, (uint64_t)&(&v48)[-4]);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    v13 = sub_23A59EED8();
    swift_bridgeObjectRelease();
LABEL_5:
    v14 = MEMORY[0x24BEE4AF8];
    LODWORD(v52) = v9;
    v49 = v1;
    if (v13)
      break;
LABEL_16:
    isUniquelyReferenced_nonNull_native = (uint64_t)v54;
    v3 = (uint64_t *)MEMORY[0x23B8515B4](v14, v3);
    v1 = v21;
    swift_bridgeObjectRelease();
    v55 = sub_23A538FBC((uint64_t)v3, (unint64_t)v1, (uint64_t *)&v56);
    sub_23A59ED1C();
    a1 = v53;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v8, (os_log_type_t)v52, "TimersFired: timerIDs=%s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0xCu);
    v22 = v49;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v22, -1, -1);
    MEMORY[0x23B852178](isUniquelyReferenced_nonNull_native, -1, -1);

  }
  v55 = MEMORY[0x24BEE4AF8];
  sub_23A597818(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v48 = v8;
    v15 = 0;
    v14 = v55;
    v16 = v53 & 0xC000000000000001;
    do
    {
      if (v16)
        v17 = (id)MEMORY[0x23B85198C](v15, v53);
      else
        v17 = *(id *)(v53 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_timerID, v48);
      sub_23A59E23C();

      v55 = v14;
      v9 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v9 >= v20 >> 1)
      {
        sub_23A597818(v20 > 1, v9 + 1, 1);
        v14 = v55;
      }
      ++v15;
      *(_QWORD *)(v14 + 16) = v9 + 1;
      (*(void (**)(unint64_t, unint64_t, uint64_t *))(isUniquelyReferenced_nonNull_native + 32))(v14+ ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80))+ *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v9, v6, v3);
    }
    while (v13 != v15);
    v11 = v50;
    v8 = v48;
    goto LABEL_16;
  }
  __break(1u);
LABEL_59:
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A59539C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[9];
  __int128 v24;
  __int128 v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v7 = result;
  v8 = sub_23A59E020();
  if (!v8)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_12:
    sub_23A53B9B4((uint64_t)&v24, &qword_256994968);
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v9 = v8;
  v22[1] = sub_23A59E9A4();
  v22[2] = v10;
  sub_23A59EDC4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_23A53A068((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_23A53E8B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23A53BA00((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_12;
  sub_23A53AB74(0, &qword_2569947E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v13 = (void *)v23[0];
  v23[0] = 0;
  sub_23A53AB74(0, qword_2569947F0);
  sub_23A59EA28();

  v14 = v23[0];
  if (!v23[0])
    goto LABEL_13;
LABEL_14:
  v15 = sub_23A59E560();
  v16 = sub_23A59EAB8();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23A54123C((uint64_t)v5, (uint64_t)v3);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
  swift_retain();
  if (v19 == 1)
  {
    sub_23A53B9B4((uint64_t)v3, (uint64_t *)&unk_256993920);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
  }
  v20 = sub_23A56B150();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_256994978;
  *(_QWORD *)(v21 + 24) = v18;
  v23[5] = 6;
  v23[6] = 0;
  v23[7] = v15;
  v23[8] = v20;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_23A5956BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  type metadata accessor for DTTimerDaemon();
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A595734()
{
  uint64_t v0;

  sub_23A595764(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A595764(unint64_t a1)
{
  NSObject *v1;
  uint64_t *v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  _BOOL4 v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t Strong;
  uint64_t result;
  NSObject *v48;
  NSObject *v49;
  _DWORD *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _DWORD *v54;
  uint64_t v55;
  NSObject *v56;

  v3 = (uint64_t *)sub_23A59E260();
  isUniquelyReferenced_nonNull_native = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (unint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256998470 != -1)
    goto LABEL_40;
LABEL_2:
  v7 = sub_23A59E6A4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256998478);
  swift_bridgeObjectRetain_n();
  v8 = sub_23A59E68C();
  LODWORD(v9) = sub_23A59EB9C();
  v10 = os_log_type_enabled(v8, (os_log_type_t)v9);
  v11 = (_DWORD *)(a1 >> 62);
  v53 = a1;
  v50 = (_DWORD *)(a1 >> 62);
  if (v10)
  {
    v12 = (_DWORD *)swift_slowAlloc();
    v1 = swift_slowAlloc();
    v56 = v1;
    v54 = v12;
    *v12 = 136315138;
    if (!v11)
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_57;
  }

  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v11)
    {
      swift_bridgeObjectRetain();
      v11 = (_DWORD *)sub_23A59EED8();
      if (!v11)
        goto LABEL_42;
LABEL_19:
      v3 = (uint64_t *)(v51 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimers);
      v52 = a1 & 0xC000000000000001;
      v23 = 4;
      while (1)
      {
        if (v52)
          v25 = (id)MEMORY[0x23B85198C](v23 - 4, a1);
        else
          v25 = *(id *)(a1 + 8 * v23);
        v26 = v25;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_once();
          goto LABEL_2;
        }
        v54 = (_DWORD *)(v23 - 3);
        v27 = objc_msgSend(v25, sel_timerIDString);
        v28 = sub_23A59E9A4();
        v9 = v29;

        swift_beginAccess();
        v1 = v26;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v55 = *v3;
        v30 = v55;
        *v3 = 0x8000000000000000;
        v6 = sub_23A563F00(v28, v9);
        v32 = *(_QWORD *)(v30 + 16);
        v33 = (v31 & 1) == 0;
        v34 = v32 + v33;
        if (__OFADD__(v32, v33))
          goto LABEL_38;
        a1 = v31;
        if (*(_QWORD *)(v30 + 24) >= v34)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v37 = (_QWORD *)v55;
            if ((v31 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_23A597BE8(&qword_256994928);
            v37 = (_QWORD *)v55;
            if ((a1 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_23A597D90(v34, isUniquelyReferenced_nonNull_native, &qword_256994928);
          v35 = sub_23A563F00(v28, v9);
          if ((a1 & 1) != (v36 & 1))
            goto LABEL_59;
          v6 = v35;
          v37 = (_QWORD *)v55;
          if ((a1 & 1) != 0)
          {
LABEL_20:
            v24 = v37[7];
            isUniquelyReferenced_nonNull_native = 8 * v6;

            *(_QWORD *)(v24 + 8 * v6) = v1;
            goto LABEL_21;
          }
        }
        v37[(v6 >> 6) + 8] |= 1 << v6;
        v38 = (uint64_t *)(v37[6] + 16 * v6);
        *v38 = v28;
        v38[1] = v9;
        *(_QWORD *)(v37[7] + 8 * v6) = v1;
        v39 = v37[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_39;
        v37[2] = v41;
        swift_bridgeObjectRetain();
LABEL_21:
        *v3 = (uint64_t)v37;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        ++v23;
        a1 = v53;
        if (v54 == v11)
          goto LABEL_42;
      }
    }
    v11 = *(_DWORD **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_19;
LABEL_42:
    swift_bridgeObjectRelease();
    if (v50)
    {
      swift_bridgeObjectRetain();
      v42 = sub_23A59EED8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v42 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x24BEE4AF8];
    if (!v42)
      goto LABEL_53;
    v56 = MEMORY[0x24BEE4AF8];
    sub_23A59EE60();
    if ((v42 & 0x8000000000000000) == 0)
    {
      v43 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v44 = (id)MEMORY[0x23B85198C](v43, a1);
        else
          v44 = *(id *)(a1 + 8 * v43 + 32);
        v45 = v44;
        ++v43;
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2D5A8]), sel_initWithMTTimer_, v44);

        sub_23A59EE48();
        sub_23A59EE6C();
        sub_23A59EE78();
        sub_23A59EE54();
      }
      while (v42 != v43);
      v8 = v56;
LABEL_53:
      Strong = swift_weakLoadStrong();
      if (!Strong)
        return swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](Strong);
      *(&v48 - 2) = 9;
      *(&v48 - 1) = v8;
      sub_23A5439C0((uint64_t)sub_23A598EA4, (uint64_t)&(&v48)[-4]);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    v13 = sub_23A59EED8();
    swift_bridgeObjectRelease();
LABEL_5:
    v14 = MEMORY[0x24BEE4AF8];
    LODWORD(v52) = v9;
    v49 = v1;
    if (v13)
      break;
LABEL_16:
    isUniquelyReferenced_nonNull_native = (uint64_t)v54;
    v3 = (uint64_t *)MEMORY[0x23B8515B4](v14, v3);
    v1 = v21;
    swift_bridgeObjectRelease();
    v55 = sub_23A538FBC((uint64_t)v3, (unint64_t)v1, (uint64_t *)&v56);
    sub_23A59ED1C();
    a1 = v53;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A52C000, v8, (os_log_type_t)v52, "TimersDismissed: timerIDs=%s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0xCu);
    v22 = v49;
    swift_arrayDestroy();
    MEMORY[0x23B852178](v22, -1, -1);
    MEMORY[0x23B852178](isUniquelyReferenced_nonNull_native, -1, -1);

  }
  v55 = MEMORY[0x24BEE4AF8];
  sub_23A597818(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v48 = v8;
    v15 = 0;
    v14 = v55;
    v16 = v53 & 0xC000000000000001;
    do
    {
      if (v16)
        v17 = (id)MEMORY[0x23B85198C](v15, v53);
      else
        v17 = *(id *)(v53 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_timerID, v48);
      sub_23A59E23C();

      v55 = v14;
      v9 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v9 >= v20 >> 1)
      {
        sub_23A597818(v20 > 1, v9 + 1, 1);
        v14 = v55;
      }
      ++v15;
      *(_QWORD *)(v14 + 16) = v9 + 1;
      (*(void (**)(unint64_t, unint64_t, uint64_t *))(isUniquelyReferenced_nonNull_native + 32))(v14+ ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80))+ *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v9, v6, v3);
    }
    while (v13 != v15);
    v11 = v50;
    v8 = v48;
    goto LABEL_16;
  }
  __break(1u);
LABEL_59:
  result = sub_23A59F088();
  __break(1u);
  return result;
}

uint64_t sub_23A595E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v18 - v8;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    v12 = sub_23A59E560();
    v13 = sub_23A59EAB8();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, 1, 1, v13);
    sub_23A54123C((uint64_t)v9, (uint64_t)v7);
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13);
    swift_retain();
    if (v15 == 1)
    {
      sub_23A53B9B4((uint64_t)v7, (uint64_t *)&unk_256993920);
    }
    else
    {
      sub_23A59EAAC();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v13);
    }
    v16 = sub_23A56B150();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a3;
    *(_QWORD *)(v17 + 24) = v11;
    v18[1] = 6;
    v18[2] = 0;
    v18[3] = v12;
    v18[4] = v16;
    swift_task_create();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23A59604C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A541460;
  return sub_23A596094();
}

uint64_t sub_23A596094()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A596100()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_256998470 != -1)
    swift_once();
  v1 = sub_23A59E6A4();
  __swift_project_value_buffer(v1, (uint64_t)qword_256998478);
  v2 = sub_23A59E68C();
  v3 = sub_23A59EB9C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23A52C000, v2, v3, "TimerStateReset", v4, 2u);
    MEMORY[0x23B852178](v4, -1, -1);
  }

  if (swift_weakLoadStrong())
  {
    v5 = swift_task_alloc();
    *(_OWORD *)(v5 + 16) = xmmword_23A5A15F0;
    sub_23A5439C0((uint64_t)sub_23A598924, v5);
    swift_release();
    swift_task_dealloc();
  }
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v6;
  *v6 = v0;
  v6[1] = sub_23A596260;
  return sub_23A5962A8();
}

uint64_t sub_23A596260()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A5962A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[16] = v0;
  v2 = sub_23A59E260();
  v1[17] = v2;
  v1[18] = *(_QWORD *)(v2 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  v1[21] = sub_23A59EA7C();
  v1[22] = v3;
  return swift_task_switch();
}

uint64_t sub_23A596340()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint32_t *p_ivar_base_size;
  uint64_t v9;
  uint32_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  _QWORD *v28;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimerManager);
  *(_QWORD *)(v0 + 184) = v2;
  if (v2)
  {
    v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__monitorTimersFetchRunning);
    v4 = OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__monitorTimersFetchPending;
    *(_QWORD *)(v0 + 192) = OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__monitorTimersFetchPending;
    if ((v3 & 1) != 0)
    {
      *(_BYTE *)(v1 + v4) = 1;
    }
    else
    {
      *(_QWORD *)(v0 + 200) = OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimers;
      v5 = v2;
      swift_beginAccess();
      v6 = *(_QWORD *)(v0 + 192);
      v7 = *(_QWORD *)(v0 + 128);
      p_ivar_base_size = &DTDaemonShim__metaData.ivar_base_size;
      do
      {
        v15 = *(void **)(v0 + 184);
        *(_BYTE *)(v7 + v6) = 0;
        v16 = objc_msgSend(v15, *((SEL *)p_ivar_base_size + 161));
        *(_QWORD *)(v0 + 232) = v16;
        v17 = v15;
        if (v16)
        {
          v25 = *(_QWORD *)(v0 + 184);
          v26 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 208) = v26;
          v26[2] = v16;
          v26[3] = v25;
          v26[4] = 0x6D69546863746566;
          v26[5] = 0xEB00000000737265;
          v27 = v16;
          v28 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 216) = v28;
          sub_23A53AB74(0, &qword_2569947E0);
          *v28 = v0;
          v28[1] = sub_23A596734;
          return sub_23A59F070();
        }
        sub_23A59E614();
        *(_QWORD *)(v0 + 64) = 0;
        *(_QWORD *)(v0 + 72) = 0xE000000000000000;
        sub_23A59EE00();
        swift_bridgeObjectRelease();
        v18 = (void *)sub_23A59E620();
        swift_willThrow();
        v19 = *(void **)(v0 + 184);

        if (qword_256998470 != -1)
          swift_once();
        v20 = sub_23A59E6A4();
        __swift_project_value_buffer(v20, (uint64_t)qword_256998478);
        v21 = v18;
        v22 = v18;
        v23 = sub_23A59E68C();
        v24 = sub_23A59EBB4();
        if (os_log_type_enabled(v23, v24))
        {
          v9 = swift_slowAlloc();
          v10 = p_ivar_base_size;
          v11 = swift_slowAlloc();
          v30 = v11;
          *(_DWORD *)v9 = 136315138;
          swift_getErrorValue();
          v12 = sub_23A59F0C4();
          *(_QWORD *)(v9 + 4) = sub_23A538FBC(v12, v13, &v30);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_23A52C000, v23, v24, "### Fetch timers failed: error=%s", (uint8_t *)v9, 0xCu);
          swift_arrayDestroy();
          v14 = v11;
          p_ivar_base_size = v10;
          MEMORY[0x23B852178](v14, -1, -1);
          MEMORY[0x23B852178](v9, -1, -1);

        }
        else
        {

        }
        v6 = *(_QWORD *)(v0 + 192);
        v7 = *(_QWORD *)(v0 + 128);
      }
      while ((*(_BYTE *)(v7 + v6) & 1) != 0);

    }
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A596734()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

void sub_23A5967A0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  void **v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  void *v55;
  id v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint32_t *p_ivar_base_size;
  uint32_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  void *v84;
  id v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  _QWORD *v90;
  id v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101[2];

  v1 = *(void **)(v0 + 184);

  v3 = v0 + 88;
  v2 = *(void **)(v0 + 88);
  v101[0] = 0;
  sub_23A53AB74(0, qword_2569947F0);
  sub_23A59EA28();

  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 96) = MEMORY[0x24BEE4AF8];
  v95 = (uint64_t *)(v0 + 96);
  v5 = v4;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_23A59EED8();
    swift_bridgeObjectRelease();
    v100 = v0;
    if (v6)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_75;
    goto LABEL_16;
  }
  v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v100 = v0;
  if (!v6)
    goto LABEL_15;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    return;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x23B85198C](i, v5);
    else
      v8 = *(id *)(v5 + 8 * i + 32);
    v9 = v8;
    if ((objc_msgSend(v8, sel_isCurrentTimer) & 1) != 0)
    {

    }
    else
    {
      sub_23A59EE48();
      sub_23A59EE6C();
      sub_23A59EE78();
      sub_23A59EE54();
    }
  }
  swift_bridgeObjectRelease();
  v10 = *v95;
  v0 = v100;
  if (*v95 < 0)
    goto LABEL_75;
LABEL_16:
  if ((v10 & 0x4000000000000000) == 0)
  {
    v11 = *(_QWORD *)(v10 + 16);
    goto LABEL_18;
  }
  while (1)
  {
LABEL_75:
    swift_bridgeObjectRetain();
    v11 = sub_23A59EED8();
    swift_release();
LABEL_18:
    v12 = v11 & ~(v11 >> 63);
    v13 = v10;
    v99 = v11;
    v93 = v3;
    if (v11)
    {
      v95[1] = MEMORY[0x24BEE4AF8];
      sub_23A597818(0, v11 & ~(v11 >> 63), 0);
      if (v11 < 0)
        goto LABEL_77;
      v96 = v11 & ~(v11 >> 63);
      v14 = 0;
      v15 = *(_QWORD *)(v0 + 104);
      v16 = v10 & 0xC000000000000001;
      do
      {
        if (v16)
          v17 = (id)MEMORY[0x23B85198C](v14, v10);
        else
          v17 = *(id *)(v10 + 8 * v14 + 32);
        v18 = v17;
        v19 = objc_msgSend(v17, sel_timerID, v93, v94);
        sub_23A59E23C();

        *(_QWORD *)(v0 + 104) = v15;
        v21 = *(_QWORD *)(v15 + 16);
        v20 = *(_QWORD *)(v15 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_23A597818(v20 > 1, v21 + 1, 1);
          v15 = v95[1];
        }
        v23 = *(_QWORD *)(v0 + 144);
        v22 = *(_QWORD *)(v0 + 152);
        v24 = *(_QWORD *)(v0 + 136);
        ++v14;
        *(_QWORD *)(v15 + 16) = v21 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(v15+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v21, v22, v24);
        v11 = v99;
        v10 = v13;
      }
      while (v99 != v14);
      v12 = v96;
    }
    if (qword_256998470 != -1)
      swift_once();
    v94 = sub_23A59E6A4();
    __swift_project_value_buffer(v94, (uint64_t)qword_256998478);
    swift_bridgeObjectRetain();
    v25 = sub_23A59E68C();
    v26 = sub_23A59EB9C();
    v3 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v27 = *(_QWORD *)(v0 + 136);
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v101[0] = v29;
      *(_DWORD *)v28 = 136315138;
      v30 = swift_bridgeObjectRetain();
      v31 = MEMORY[0x23B8515B4](v30, v27);
      v33 = v32;
      swift_bridgeObjectRelease();
      v34 = v31;
      v10 = v13;
      *(_QWORD *)(v28 + 4) = sub_23A538FBC(v34, v33, v101);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A52C000, v25, (os_log_type_t)v3, "Fetched timers: timerIDs=%s", (uint8_t *)v28, 0xCu);
      swift_arrayDestroy();
      v35 = v29;
      v11 = v99;
      MEMORY[0x23B852178](v35, -1, -1);
      MEMORY[0x23B852178](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    if (v11)
    {
      v36 = v95 + 2;
      v95[2] = MEMORY[0x24BEE4AF8];
      sub_23A597834(0, v12, 0);
      if (v11 < 0)
        goto LABEL_78;
      v37 = 0;
      v38 = *v36;
      v39 = v10;
      v97 = v10 & 0xC000000000000001;
      v0 = v100;
      do
      {
        if (v97)
          v40 = (id)MEMORY[0x23B85198C](v37, v39);
        else
          v40 = *(id *)(v39 + 8 * v37 + 32);
        v41 = v40;
        v42 = objc_msgSend(v40, sel_timerIDString, v93, v94);
        v3 = sub_23A59E9A4();
        v44 = v43;

        *v36 = v38;
        v46 = *(_QWORD *)(v38 + 16);
        v45 = *(_QWORD *)(v38 + 24);
        if (v46 >= v45 >> 1)
        {
          sub_23A597834(v45 > 1, v46 + 1, 1);
          v38 = *v36;
        }
        ++v37;
        *(_QWORD *)(v38 + 16) = v46 + 1;
        v47 = (_QWORD *)(v38 + 24 * v46);
        v47[4] = v3;
        v47[5] = v44;
        v47[6] = v41;
      }
      while (v99 != v37);
      swift_release();
    }
    else
    {
      swift_release();
      v38 = MEMORY[0x24BEE4AF8];
    }
    v48 = v95 + 3;
    if (!*(_QWORD *)(v38 + 16))
      break;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994928);
    v49 = (_QWORD *)sub_23A59EEFC();
    v50 = *(_QWORD *)(v38 + 16);
    *v48 = v49;
    v98 = v50;
    if (!v50)
      goto LABEL_58;
    swift_bridgeObjectRetain();
    v10 = 0;
    v51 = (void **)(v38 + 48);
    while (1)
    {
      v0 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v3 = (uint64_t)*(v51 - 2);
      v54 = (uint64_t)*(v51 - 1);
      v55 = *v51;
      swift_bridgeObjectRetain();
      v56 = v55;
      v58 = sub_23A563F00(v3, v54);
      v59 = v49[2];
      v60 = (v57 & 1) == 0;
      v61 = v59 + v60;
      if (__OFADD__(v59, v60))
        goto LABEL_73;
      v62 = v57;
      if (v49[3] < v61)
      {
        sub_23A597D90(v61, 1, &qword_256994928);
        v63 = sub_23A563F00(v3, v54);
        if ((v62 & 1) != (v64 & 1))
        {
          sub_23A59F088();
          return;
        }
        v58 = v63;
      }
      v49 = (_QWORD *)v95[3];
      if ((v62 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v52 = v49[7];

        *(_QWORD *)(v52 + 8 * v58) = v56;
      }
      else
      {
        v49[(v58 >> 6) + 8] |= 1 << v58;
        v65 = (uint64_t *)(v49[6] + 16 * v58);
        *v65 = v3;
        v65[1] = v54;
        *(_QWORD *)(v49[7] + 8 * v58) = v56;
        v66 = v49[2];
        v67 = __OFADD__(v66, 1);
        v68 = v66 + 1;
        if (v67)
          goto LABEL_74;
        v49[2] = v68;
      }
      ++v10;
      v51 += 3;
      v53 = v0 == v98;
      v0 = v100;
      if (v53)
      {
        v69 = *(void **)(v100 + 232);
        swift_bridgeObjectRelease();
        goto LABEL_60;
      }
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
  }
  v49 = (_QWORD *)MEMORY[0x24BEE4B00];
  *v48 = MEMORY[0x24BEE4B00];
LABEL_58:
  v69 = *(void **)(v0 + 232);
LABEL_60:

  v70 = *(_QWORD *)(v0 + 200);
  v71 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v71 + v70) = v49;
  swift_bridgeObjectRelease();
  v72 = (_BYTE *)(*(_QWORD *)(v0 + 128) + *(_QWORD *)(v0 + 192));
  if (*v72 == 1)
  {
    p_ivar_base_size = &DTDaemonShim__metaData.ivar_base_size;
    while (1)
    {
      v80 = *(void **)(v0 + 184);
      *v72 = 0;
      v81 = objc_msgSend(v80, *((SEL *)p_ivar_base_size + 161), v93);
      *(_QWORD *)(v0 + 232) = v81;
      v82 = v80;
      if (v81)
        break;
      sub_23A59E614();
      *(_QWORD *)(v0 + 64) = 0;
      *(_QWORD *)(v0 + 72) = 0xE000000000000000;
      sub_23A59EE00();
      swift_bridgeObjectRelease();
      v83 = (void *)sub_23A59E620();
      swift_willThrow();
      v84 = *(void **)(v0 + 184);

      if (qword_256998470 != -1)
        swift_once();
      __swift_project_value_buffer(v94, (uint64_t)qword_256998478);
      v85 = v83;
      v86 = v83;
      v87 = sub_23A59E68C();
      v88 = sub_23A59EBB4();
      if (os_log_type_enabled(v87, v88))
      {
        v74 = p_ivar_base_size;
        v75 = swift_slowAlloc();
        v76 = swift_slowAlloc();
        v101[0] = v76;
        *(_DWORD *)v75 = 136315138;
        swift_getErrorValue();
        v77 = sub_23A59F0C4();
        *(_QWORD *)(v75 + 4) = sub_23A538FBC(v77, v78, v101);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23A52C000, v87, v88, "### Fetch timers failed: error=%s", (uint8_t *)v75, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B852178](v76, -1, -1);
        v79 = v75;
        p_ivar_base_size = v74;
        v0 = v100;
        MEMORY[0x23B852178](v79, -1, -1);

      }
      else
      {

      }
      v72 = (_BYTE *)(*(_QWORD *)(v0 + 128) + *(_QWORD *)(v0 + 192));
      if ((*v72 & 1) == 0)
        goto LABEL_69;
    }
    v89 = *(_QWORD *)(v0 + 184);
    v90 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v90;
    v90[2] = v81;
    v90[3] = v89;
    v90[4] = 0x6D69546863746566;
    v90[5] = 0xEB00000000737265;
    v91 = v81;
    v92 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v92;
    sub_23A53AB74(0, &qword_2569947E0);
    *v92 = v0;
    v92[1] = sub_23A596734;
    sub_23A59F070();
  }
  else
  {
LABEL_69:

    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A597234()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;

  swift_task_dealloc();
  v1 = *(void **)(v0 + 224);
  v2 = &unk_256998000;
  v3 = qword_256998478;
  while (1)
  {
    v4 = *(void **)(v0 + 184);

    if (v2[142] != -1)
      swift_once();
    v5 = sub_23A59E6A4();
    __swift_project_value_buffer(v5, (uint64_t)v3);
    v6 = v1;
    v7 = v1;
    v8 = sub_23A59E68C();
    v9 = sub_23A59EBB4();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = v3;
      v11 = v2;
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v27 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_getErrorValue();
      v14 = sub_23A59F0C4();
      *(_QWORD *)(v12 + 4) = sub_23A538FBC(v14, v15, &v27);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A52C000, v8, v9, "### Fetch timers failed: error=%s", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B852178](v13, -1, -1);
      v16 = v12;
      v2 = v11;
      v3 = v10;
      MEMORY[0x23B852178](v16, -1, -1);

    }
    else
    {

    }
    v17 = *(_QWORD *)(v0 + 128);
    v19 = *(void **)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 192);
    if ((*(_BYTE *)(v17 + v18) & 1) == 0)
    {

      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    *(_BYTE *)(v17 + v18) = 0;
    v20 = objc_msgSend(v19, sel_timers);
    *(_QWORD *)(v0 + 232) = v20;
    v21 = v19;
    if (v20)
      break;
    sub_23A59E614();
    *(_QWORD *)(v0 + 64) = 0;
    *(_QWORD *)(v0 + 72) = 0xE000000000000000;
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    v1 = (void *)sub_23A59E620();
    swift_willThrow();
  }
  v23 = *(_QWORD *)(v0 + 184);
  v24 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v24;
  v24[2] = v20;
  v24[3] = v23;
  v24[4] = 0x6D69546863746566;
  v24[5] = 0xEB00000000737265;
  v25 = v20;
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v26;
  sub_23A53AB74(0, &qword_2569947E0);
  *v26 = v0;
  v26[1] = sub_23A596734;
  return sub_23A59F070();
}

uint64_t DTTimerDaemon.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_weakDestroy();
  v1 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__environment;
  v2 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DTTimerDaemon.__deallocating_deinit()
{
  DTTimerDaemon.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23A5976A8()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

uint64_t sub_23A5976F4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5624D8;
  return DTTimerDaemon.summary.getter();
}

uint64_t sub_23A597738()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_23A586164;
  return sub_23A586210();
}

uint64_t sub_23A597780()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A5977EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A597A40(a1, a2, a3, (_QWORD *)*v3, &qword_2569949F8, &qword_256994A00);
  *v3 = result;
  return result;
}

uint64_t sub_23A597818(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A597860(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23A597834(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A597A40(a1, a2, a3, (_QWORD *)*v3, &qword_256994930, &qword_256994938);
  *v3 = result;
  return result;
}

uint64_t sub_23A597860(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994940);
  v10 = *(_QWORD *)(sub_23A59E260() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_23A59E260() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

uint64_t sub_23A597A40(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 24 * v11)
      memmove(v13 + 4, a4 + 4, 24 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 24 * v11 || v15 >= v16 + 24 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

id sub_23A597BE8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23A59EEE4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23A597D90(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_23A59EEF0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_23A59F0E8();
    sub_23A59E9C8();
    result = sub_23A59F100();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23A598098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_weakInit();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarmManager) = 0;
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarmObservers) = MEMORY[0x24BEE4AF8];
  v5 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtAlarms) = MEMORY[0x24BEE4B00];
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__monitorAlarmsFetchPending) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__monitorAlarmsFetchRunning) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimerManager) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimerObservers) = v4;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__mtTimers) = v5;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__monitorTimersFetchPending) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__monitorTimersFetchRunning) = 0;
  swift_weakAssign();
  v6 = v2 + OBJC_IVAR____TtC23DistributedTimersDaemon13DTTimerDaemon__environment;
  v7 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a2, v7);
  return v2;
}

uint64_t type metadata accessor for DTTimerDaemon()
{
  uint64_t result;

  result = qword_2569985F0;
  if (!qword_2569985F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x23B852178);
  return result;
}

uint64_t sub_23A5981FC()
{
  uint64_t v0;
  char v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v0 = type metadata accessor for DTTransportDaemon(0);
  static DTTransportDaemon.alternateAccessoryIDs.getter(v0);
  v1 = sub_23A59EC68();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    return 1;
  v3 = sub_23A59E518();
  if (v3)
  {
    v4 = (_QWORD *)v3;
    v5 = sub_23A59EC74();
    if (v6)
    {
      v7 = sub_23A58CE00(v5, v6, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

void sub_23A5982C0(uint64_t a1)
{
  uint64_t v1;

  sub_23A58CEC4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23A5982CC(unint64_t a1, uint64_t (*a2)(id), uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v6 = a1;
  v18 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v16 = v6 & 0xFFFFFFFFFFFFFF8;
      v17 = v6 & 0xC000000000000001;
      v15 = v6;
      while (v17)
      {
        v9 = (id)MEMORY[0x23B85198C](v8, v6);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v12 = a3;
        v13 = a2(v9);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          sub_23A59EE48();
          sub_23A59EE6C();
          v6 = v15;
          sub_23A59EE78();
          sub_23A59EE54();
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v18;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_23A59EED8();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_23A59846C(uint64_t a1)
{
  uint64_t result;

  result = sub_23A52EAEC(&qword_256994750, (uint64_t (*)(uint64_t))type metadata accessor for DTTimerDaemon, (uint64_t)&protocol conformance descriptor for DTTimerDaemon);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23A5984A8()
{
  return type metadata accessor for DTTimerDaemon();
}

uint64_t sub_23A5984B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A59E5B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DTTimerDaemon()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DTTimerDaemon.__allocating_init(daemon:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_23A59856C()
{
  return objectdestroyTm(&qword_256994908);
}

uint64_t sub_23A598578(void *a1)
{
  return sub_23A598648(a1, &qword_256994908);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_23A59859C()
{
  return objectdestroy_24Tm(&qword_256994908);
}

uint64_t sub_23A5985A8(void *a1)
{
  return sub_23A598754(a1, &qword_256994908);
}

void sub_23A5985B4(uint64_t a1)
{
  uint64_t v1;

  sub_23A58D118(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23A5985C0()
{
  return objectdestroyTm(&qword_256994918);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A59863C(void *a1)
{
  return sub_23A598648(a1, &qword_256994918);
}

uint64_t sub_23A598648(void *a1, uint64_t *a2)
{
  id v4;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  return sub_23A59EA94();
}

uint64_t sub_23A5986B0()
{
  return objectdestroy_24Tm(&qword_256994918);
}

uint64_t objectdestroy_24Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A598748(void *a1)
{
  return sub_23A598754(a1, &qword_256994918);
}

uint64_t sub_23A598754(void *a1, uint64_t *a2)
{
  id v4;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_23A59E614();
  sub_23A59E9E0();
  v4 = a1;
  sub_23A59E620();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  return sub_23A59EA88();
}

uint64_t sub_23A598844()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A598868()
{
  return sub_23A592904();
}

uint64_t sub_23A598870()
{
  return sub_23A5933E0();
}

uint64_t sub_23A598878()
{
  return sub_23A593EBC();
}

uint64_t sub_23A598880()
{
  return sub_23A5948C0();
}

uint64_t sub_23A598888()
{
  return sub_23A59539C();
}

uint64_t sub_23A598890()
{
  uint64_t v0;

  return sub_23A595E78(v0, (uint64_t)&unk_250B6D690, (uint64_t)&unk_256994950);
}

uint64_t sub_23A5988C0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A541460;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return sub_23A596094();
}

uint64_t sub_23A598924@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  return sub_23A587948(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23A59893C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A598960()
{
  uint64_t v0;

  return DTTransportDaemon.report(eventType:timers:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23A598994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541460;
  return sub_23A5956BC((uint64_t)v4, v2, v3);
}

uint64_t sub_23A5989E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541460;
  return sub_23A594BE0((uint64_t)v4, v2, v3);
}

uint64_t sub_23A598A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541460;
  return sub_23A5941DC((uint64_t)v4, v2, v3);
}

uint64_t sub_23A598A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541124;
  return sub_23A593700((uint64_t)v4, v2, v3);
}

uint64_t sub_23A598AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541460;
  return sub_23A592C24((uint64_t)v4, v2, v3);
}

uint64_t sub_23A598B34()
{
  return sub_23A58D3BC();
}

uint64_t sub_23A598B3C()
{
  return sub_23A58DF3C();
}

uint64_t sub_23A598B44()
{
  return sub_23A58EA18();
}

uint64_t sub_23A598B4C()
{
  return sub_23A58F41C();
}

uint64_t sub_23A598B54()
{
  return sub_23A58FEF8();
}

uint64_t sub_23A598B5C()
{
  return sub_23A5909D4();
}

uint64_t sub_23A598B64()
{
  uint64_t v0;

  return sub_23A595E78(v0, (uint64_t)&unk_250B6D960, (uint64_t)&unk_256994A10);
}

uint64_t sub_23A598B94()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A541460;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return sub_23A5914F8();
}

uint64_t sub_23A598BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541460;
  return sub_23A590CF4((uint64_t)v4, v2, v3);
}

uint64_t sub_23A598C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541460;
  return sub_23A590218((uint64_t)v4, v2, v3);
}

uint64_t sub_23A598CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541460;
  return sub_23A58F73C((uint64_t)v4, v2, v3);
}

uint64_t sub_23A598CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541460;
  return sub_23A58ED38((uint64_t)v4, v2, v3);
}

uint64_t sub_23A598D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541460;
  return sub_23A58E25C((uint64_t)v4, v2, v3);
}

uint64_t objectdestroy_113Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A598DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541460;
  return sub_23A58D6DC((uint64_t)v4, v2, v3);
}

uint64_t sub_23A598EA4@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  return sub_23A598924(a1, a2);
}

uint64_t sub_23A598F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v36 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v38 = (char *)&v32 - v3;
  v4 = sub_23A59EC44();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23A59E8F0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23A59EBFC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256994AB8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23A59E5B4();
  v13 = *(_QWORD *)(v33 - 8);
  v14 = MEMORY[0x24BDAC7A8](v33);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v34 = (char *)&v32 - v18;
  v35 = (void *)MEMORY[0x23B851D10](v17);
  v19 = &v12[*(int *)(v10 + 48)];
  _s23DistributedTimersDaemon06DTSyncC0C6daemon11environmentAcA8DTDaemonCSg_0aB019DTEnvironmentValuesVtcfcfA0__0();
  sub_23A53AB74(0, (unint64_t *)&qword_256993A10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5758], v6);
  sub_23A59E8E4();
  v43 = MEMORY[0x24BEE4AF8];
  sub_23A59933C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256993568);
  sub_23A540FE0();
  sub_23A59ED4C();
  v20 = (uint64_t)v36;
  v21 = v33;
  sub_23A59EC50();
  sub_23A59E56C();
  type metadata accessor for DTDaemon();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v19, v21);
  v22 = (uint64_t)v16;
  v23 = v34;
  v24 = DTDaemon.__allocating_init(environment:)(v22);
  objc_autoreleasePoolPop(v35);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v23, v19, v21);
  *(_QWORD *)(v37 + OBJC_IVAR___DTDaemonShim__daemon) = v24;
  swift_retain();
  swift_release();
  v25 = sub_23A59E560();
  v26 = sub_23A59EAB8();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v38, 1, 1, v26);
  sub_23A54123C(v28, v20);
  LODWORD(v28) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v20, 1, v26);
  swift_retain();
  if ((_DWORD)v28 == 1)
  {
    sub_23A541284(v20);
  }
  else
  {
    sub_23A59EAAC();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v20, v26);
  }
  v29 = sub_23A56B150();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = &unk_256994AD0;
  *(_QWORD *)(v30 + 24) = v24;
  v39 = 6;
  v40 = 0;
  v41 = v25;
  v42 = v29;
  swift_task_create();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v23, v21);
}

unint64_t sub_23A59933C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256993560;
  if (!qword_256993560)
  {
    v1 = sub_23A59EC44();
    result = MEMORY[0x23B8520D0](MEMORY[0x24BEE5940], v1);
    atomic_store(result, (unint64_t *)&qword_256993560);
  }
  return result;
}

uint64_t sub_23A599384()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A541460;
  return DTDaemon.activate()();
}

uint64_t sub_23A5993D0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A541124;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A541460;
  return DTDaemon.activate()();
}

void __swiftcall DTDaemonShim.init()(DTDaemonShim *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id DTDaemonShim.init()()
{
  uint64_t v0;
  objc_super v2;

  *(_QWORD *)(v0 + OBJC_IVAR___DTDaemonShim__daemon) = 0;
  v2.super_class = (Class)DTDaemonShim;
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_23A599520()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for DTDaemonShim(uint64_t a1)
{
  return sub_23A53AB74(a1, (unint64_t *)&unk_256998600);
}

uint64_t sub_23A599558()
{
  uint64_t v0;

  v0 = sub_23A59E6A4();
  __swift_allocate_value_buffer(v0, qword_256998618);
  __swift_project_value_buffer(v0, (uint64_t)qword_256998618);
  sub_23A59E3F8();
  return sub_23A59E698();
}

uint64_t DTXPCServer.localOnly.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer_localOnly);
  swift_beginAccess();
  return *v1;
}

uint64_t DTXPCServer.localOnly.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer_localOnly);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*DTXPCServer.localOnly.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t DTXPCServer.unownedExecutor.getter()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

uint64_t DTXPCServer.__allocating_init(daemon:environment:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_allocObject();
  swift_weakInit();
  *(_BYTE *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__invalidateCalled) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer_localOnly) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcConnections) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcListener) = 0;
  swift_weakAssign();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__environment;
  v5 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
  return v3;
}

uint64_t DTXPCServer.init(daemon:environment:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  swift_weakInit();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__invalidateCalled) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer_localOnly) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcConnections) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcListener) = 0;
  swift_weakAssign();
  swift_release();
  v4 = v2 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__environment;
  v5 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

uint64_t DTXPCServer.summary.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[15] = v0;
  sub_23A52EAEC(&qword_256994310, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCServer, (uint64_t)&protocol conformance descriptor for DTXPCServer);
  v1[16] = sub_23A59EA7C();
  v1[17] = v2;
  return swift_task_switch();
}

uint64_t sub_23A5998B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[3];

  *(_QWORD *)(v0 + 80) = 0;
  v1 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 88) = 0xE000000000000000;
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcConnections);
  swift_beginAccess();
  if ((*v2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v3 = sub_23A59ED7C();
    swift_bridgeObjectRelease();
    if (!v3)
      return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  }
  else if (!*(_QWORD *)(*v2 + 16))
  {
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  }
  v4 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23A59ED70();
    type metadata accessor for DTXPCConnection();
    sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
    sub_23A59EB24();
    result = *(_QWORD *)(v0 + 16);
    v6 = *(_QWORD *)(v0 + 24);
    v8 = *(_QWORD *)(v0 + 32);
    v7 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v10 = -1 << *(_BYTE *)(v4 + 32);
    v6 = v4 + 56;
    v8 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(v4 + 56);
    result = swift_bridgeObjectRetain();
    v7 = 0;
  }
  *(_QWORD *)(v0 + 144) = result;
  *(_QWORD *)(v0 + 152) = v6;
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 160) = v8;
  *(_QWORD *)(v0 + 168) = v13;
  if (result < 0)
  {
    v18 = sub_23A59ED94();
    if (v18)
    {
      *(_QWORD *)(v0 + 112) = v18;
      type metadata accessor for DTXPCConnection();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v17 = *(_QWORD *)(v0 + 96);
      swift_unknownObjectRelease();
      v16 = v7;
      v14 = v9;
LABEL_17:
      *(_QWORD *)(v0 + 184) = v16;
      *(_QWORD *)(v0 + 192) = v14;
      *(_QWORD *)(v0 + 176) = v17;
      if (v17)
      {
        *(_QWORD *)(v0 + 96) = 0;
        *(_QWORD *)(v0 + 104) = 0xE000000000000000;
        type metadata accessor for DTXPCConnection();
        sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
        sub_23A59EA7C();
        return swift_task_switch();
      }
      goto LABEL_33;
    }
    goto LABEL_33;
  }
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v7 << 6);
    v16 = v7;
LABEL_14:
    v17 = *(_QWORD *)(*(_QWORD *)(result + 48) + 8 * v15);
    swift_retain();
    goto LABEL_17;
  }
  v19 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    v20 = (unint64_t)(v8 + 64) >> 6;
    if (v19 < v20)
    {
      v21 = *(_QWORD *)(v6 + 8 * v19);
      v16 = v7 + 1;
      if (v21)
      {
LABEL_22:
        v14 = (v21 - 1) & v21;
        v15 = __clz(__rbit64(v21)) + (v16 << 6);
        goto LABEL_14;
      }
      v16 = v7 + 2;
      if (v7 + 2 < v20)
      {
        v21 = *(_QWORD *)(v6 + 8 * v16);
        if (v21)
          goto LABEL_22;
        v16 = v7 + 3;
        if (v7 + 3 < v20)
        {
          v21 = *(_QWORD *)(v6 + 8 * v16);
          if (v21)
            goto LABEL_22;
          v16 = v7 + 4;
          if (v7 + 4 < v20)
          {
            v21 = *(_QWORD *)(v6 + 8 * v16);
            if (v21)
              goto LABEL_22;
            v22 = v7 + 5;
            while (v20 != v22)
            {
              v21 = *(_QWORD *)(v6 + 8 * v22++);
              if (v21)
              {
                v16 = v22 - 1;
                goto LABEL_22;
              }
            }
          }
        }
      }
    }
LABEL_33:
    sub_23A59A19C();
    sub_23A59EE00();
    swift_bridgeObjectRelease();
    v25[0] = 0xD000000000000014;
    v25[1] = 0x800000023A5A2DF0;
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v13 + 16);
    sub_23A59F034();
    sub_23A59E9E0();
    swift_bridgeObjectRelease();
    sub_23A59E9E0();
    sub_23A59E9E0();
    swift_bridgeObjectRelease();
    v25[0] = v13;
    swift_bridgeObjectRetain_n();
    sub_23A59BBAC(v25);
    swift_bridgeObjectRelease_n();
    v23 = *(_QWORD *)(v25[0] + 16);
    if (v23)
    {
      v24 = v25[0] + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_23A59E9E0();
        swift_bridgeObjectRelease();
        v24 += 16;
        --v23;
      }
      while (v23);
    }
    swift_release();
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  }
  __break(1u);
  return result;
}

uint64_t sub_23A599D34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 200) = DTXPCConnection.summary.getter();
  *(_QWORD *)(v0 + 208) = v1;
  return swift_task_switch();
}

uint64_t sub_23A599D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];

  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = v1;
  sub_23A59E9E0();
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *(_QWORD **)(v0 + 168);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v6 = sub_23A562D44(0, v6[2] + 1, 1, *(_QWORD **)(v0 + 168));
  v8 = v6[2];
  v7 = v6[3];
  if (v8 >= v7 >> 1)
    v6 = sub_23A562D44((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v6[2] = v8 + 1;
  v9 = &v6[2 * v8];
  v9[4] = v3;
  v9[5] = v4;
  result = swift_release();
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 168) = v6;
  v13 = *(_QWORD *)(v0 + 144);
  if (v13 < 0)
  {
    v18 = sub_23A59ED94();
    if (v18)
    {
      *(_QWORD *)(v0 + 112) = v18;
      type metadata accessor for DTXPCConnection();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v17 = *(_QWORD *)(v0 + 96);
      swift_unknownObjectRelease();
      v16 = v11;
      v14 = v12;
LABEL_11:
      *(_QWORD *)(v0 + 184) = v16;
      *(_QWORD *)(v0 + 192) = v14;
      *(_QWORD *)(v0 + 176) = v17;
      if (v17)
      {
        *(_QWORD *)(v0 + 96) = 0;
        *(_QWORD *)(v0 + 104) = 0xE000000000000000;
        type metadata accessor for DTXPCConnection();
        sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
        sub_23A59EA7C();
        return swift_task_switch();
      }
    }
  }
  else
  {
    if (v12)
    {
      v14 = (v12 - 1) & v12;
      v15 = __clz(__rbit64(v12)) | (v11 << 6);
      v16 = v11;
LABEL_8:
      v17 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v15);
      swift_retain();
      goto LABEL_11;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      return result;
    }
    v20 = (unint64_t)(*(_QWORD *)(v0 + 160) + 64) >> 6;
    if (v19 < v20)
    {
      v21 = *(_QWORD *)(v0 + 152);
      v22 = *(_QWORD *)(v21 + 8 * v19);
      v16 = v11 + 1;
      if (v22)
      {
LABEL_16:
        v14 = (v22 - 1) & v22;
        v15 = __clz(__rbit64(v22)) + (v16 << 6);
        goto LABEL_8;
      }
      v16 = v11 + 2;
      if (v11 + 2 < v20)
      {
        v22 = *(_QWORD *)(v21 + 8 * v16);
        if (v22)
          goto LABEL_16;
        v16 = v11 + 3;
        if (v11 + 3 < v20)
        {
          v22 = *(_QWORD *)(v21 + 8 * v16);
          if (v22)
            goto LABEL_16;
          v16 = v11 + 4;
          if (v11 + 4 < v20)
          {
            v22 = *(_QWORD *)(v21 + 8 * v16);
            if (v22)
              goto LABEL_16;
            v23 = v11 + 5;
            while (v20 != v23)
            {
              v22 = *(_QWORD *)(v21 + 8 * v23++);
              if (v22)
              {
                v16 = v23 - 1;
                goto LABEL_16;
              }
            }
          }
        }
      }
    }
  }
  sub_23A59A19C();
  sub_23A59EE00();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000014;
  v26[1] = 0x800000023A5A2DF0;
  *(_QWORD *)(v0 + 96) = v6[2];
  sub_23A59F034();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  sub_23A59E9E0();
  sub_23A59E9E0();
  swift_bridgeObjectRelease();
  v26[0] = (uint64_t)v6;
  swift_bridgeObjectRetain_n();
  sub_23A59BBAC(v26);
  swift_bridgeObjectRelease_n();
  v24 = *(_QWORD *)(v26[0] + 16);
  if (v24)
  {
    v25 = v26[0] + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23A59E9E0();
      swift_bridgeObjectRelease();
      v25 += 16;
      --v24;
    }
    while (v24);
  }
  swift_release();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t type metadata accessor for DTXPCServer()
{
  uint64_t result;

  result = qword_256998750;
  if (!qword_256998750)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A59A19C()
{
  return swift_release();
}

uint64_t DTXPCServer.activate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = v0;
  sub_23A52EAEC(&qword_256994310, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCServer, (uint64_t)&protocol conformance descriptor for DTXPCServer);
  sub_23A59EA7C();
  return swift_task_switch();
}

uint64_t sub_23A59A210()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  NSObject *v4;
  _xpc_connection_s *mach_service;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v1 = v0[11];
  v2 = OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcListener;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcListener))
  {
    v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer_localOnly);
    swift_beginAccess();
    if (*v3 == 1)
    {
      v4 = sub_23A59E560();
      mach_service = xpc_connection_create(0, v4);
    }
    else
    {
      sub_23A59E404();
      v4 = sub_23A59E560();
      v6 = sub_23A59E9B0();
      swift_bridgeObjectRelease();
      mach_service = xpc_connection_create_mach_service((const char *)(v6 + 32), v4, 1uLL);
      swift_release();
    }

    *(_QWORD *)(v1 + v2) = mach_service;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    v7 = swift_allocObject();
    swift_weakInit();
    v0[6] = sub_23A59BC38;
    v0[7] = v7;
    v0[2] = MEMORY[0x24BDAC760];
    v0[3] = 1107296256;
    v0[4] = sub_23A5437D8;
    v0[5] = &block_descriptor_3;
    v8 = _Block_copy(v0 + 2);
    swift_release();
    xpc_connection_set_event_handler(mach_service, v8);
    _Block_release(v8);
    xpc_connection_activate(mach_service);
    swift_unknownObjectRelease();
  }
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_23A59A3C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256993920);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993728);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - v13;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v16 = result;
    v31 = a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256994C80);
    sub_23A59E290();
    v25 = sub_23A59E560();
    v17 = sub_23A59EAB8();
    v18 = v14;
    v19 = *(_QWORD *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v7, 1, 1, v17);
    v20 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v26 = v18;
    v20(v12, v18, v8);
    v21 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v16;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v22 + v21, v12, v8);
    sub_23A54123C((uint64_t)v7, (uint64_t)v5);
    LODWORD(v21) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v5, 1, v17);
    swift_retain();
    if ((_DWORD)v21 == 1)
    {
      sub_23A541284((uint64_t)v5);
    }
    else
    {
      sub_23A59EAAC();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v17);
    }
    v23 = sub_23A52EAEC((unint64_t *)&qword_256993940, (uint64_t (*)(uint64_t))sub_23A540FA4, MEMORY[0x24BE2D540]);
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = &unk_256994C90;
    *(_QWORD *)(v24 + 24) = v22;
    v27 = 6;
    v28 = 0;
    v29 = v25;
    v30 = v23;
    swift_task_create();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v26, v8);
  }
  return result;
}

uint64_t sub_23A59A6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_23A541460;
  return sub_23A59A6F4(a3);
}

uint64_t sub_23A59A6F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[7] = a1;
  v2[8] = v1;
  sub_23A52EAEC(&qword_256994310, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCServer, (uint64_t)&protocol conformance descriptor for DTXPCServer);
  v2[9] = sub_23A59EA7C();
  v2[10] = v3;
  return swift_task_switch();
}

uint64_t sub_23A59A760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256993728);
  sub_23A59E284();
  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 88) = v1;
  v2 = MEMORY[0x23B85234C](v1);
  if (v2 == sub_23A59E6B0())
  {
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v11;
    *v11 = v0;
    v11[1] = sub_23A59AA64;
    return sub_23A59B594(v1);
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  v3 = sub_23A59E6C8();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v1 == v3)
  {
    v13 = *(_QWORD *)(v0 + 64);
    v14 = OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcListener;
    *(_QWORD *)(v13 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcListener) = 0;
    swift_unknownObjectRelease();
    if (*(_BYTE *)(v13 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__invalidateCalled) == 1
      && !*(_QWORD *)(v13 + v14))
    {
      v15 = (_QWORD *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcConnections);
      swift_beginAccess();
      if ((*v15 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        sub_23A59ED7C();
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    if (qword_256998610 != -1)
      swift_once();
    v4 = sub_23A59E6A4();
    __swift_project_value_buffer(v4, (uint64_t)qword_256998618);
    swift_unknownObjectRetain_n();
    v5 = sub_23A59E68C();
    v6 = sub_23A59EBB4();
    if (!os_log_type_enabled(v5, v6))
    {
      swift_unknownObjectRelease_n();

      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v16 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = sub_23A59EB90();
    *(_QWORD *)(v0 + 48) = sub_23A538FBC(v9, v10, &v16);
    sub_23A59ED1C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_23A52C000, v5, v6, "### XPC listener error: error=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B852178](v8, -1, -1);
    MEMORY[0x23B852178](v7, -1, -1);

  }
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A59AA64()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A59AAB0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTXPCServer.invalidate()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[12] = v0;
  sub_23A52EAEC(&qword_256994310, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCServer, (uint64_t)&protocol conformance descriptor for DTXPCServer);
  v1[13] = sub_23A59EA7C();
  v1[14] = v2;
  return swift_task_switch();
}

uint64_t sub_23A59AB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _xpc_connection_s *v25;

  v1 = *(_QWORD *)(v0 + 96);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__invalidateCalled) = 1;
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcConnections);
  result = swift_beginAccess();
  v4 = *v2;
  *v2 = MEMORY[0x24BEE4B08];
  if ((v4 & 0xC000000000000001) != 0)
  {
    sub_23A59ED70();
    type metadata accessor for DTXPCConnection();
    sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
    result = sub_23A59EB24();
    v4 = *(_QWORD *)(v0 + 16);
    v5 = *(_QWORD *)(v0 + 24);
    v6 = *(_QWORD *)(v0 + 32);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 128) = v5;
    *(_QWORD *)(v0 + 136) = v6;
    *(_QWORD *)(v0 + 120) = v4;
    if (v4 < 0)
    {
      v22 = sub_23A59ED94();
      if (v22)
      {
        *(_QWORD *)(v0 + 88) = v22;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = *(_QWORD *)(v0 + 80);
        swift_unknownObjectRelease();
        v11 = v7;
        v9 = v8;
LABEL_6:
        *(_QWORD *)(v0 + 152) = v11;
        *(_QWORD *)(v0 + 160) = v9;
        *(_QWORD *)(v0 + 144) = v12;
        if (v12)
        {
          type metadata accessor for DTXPCConnection();
          sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
          sub_23A59EA7C();
          return swift_task_switch();
        }
        goto LABEL_28;
      }
      goto LABEL_28;
    }
    if (v8)
    {
LABEL_4:
      v9 = (v8 - 1) & v8;
      v10 = __clz(__rbit64(v8)) | (v7 << 6);
      v11 = v7;
LABEL_5:
      v12 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v10);
      swift_retain();
      goto LABEL_6;
    }
  }
  else
  {
    v7 = 0;
    v13 = -1;
    v14 = -1 << *(_BYTE *)(v4 + 32);
    v6 = ~v14;
    v5 = v4 + 56;
    v15 = *(_QWORD *)(v4 + 56);
    v16 = -v14;
    v17 = v16 < 64;
    v18 = -1 << v16;
    *(_QWORD *)(v0 + 128) = v4 + 56;
    *(_QWORD *)(v0 + 136) = v6;
    if (v17)
      v13 = ~v18;
    v8 = v13 & v15;
    *(_QWORD *)(v0 + 120) = v4;
    if ((v13 & v15) != 0)
      goto LABEL_4;
  }
  v19 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    return result;
  }
  v20 = (unint64_t)(v6 + 64) >> 6;
  if (v19 < v20)
  {
    v21 = *(_QWORD *)(v5 + 8 * v19);
    v11 = v7 + 1;
    if (v21)
    {
LABEL_15:
      v9 = (v21 - 1) & v21;
      v10 = __clz(__rbit64(v21)) + (v11 << 6);
      goto LABEL_5;
    }
    v11 = v7 + 2;
    if (v7 + 2 < v20)
    {
      v21 = *(_QWORD *)(v5 + 8 * v11);
      if (v21)
        goto LABEL_15;
      v11 = v7 + 3;
      if (v7 + 3 < v20)
      {
        v21 = *(_QWORD *)(v5 + 8 * v11);
        if (v21)
          goto LABEL_15;
        v11 = v7 + 4;
        if (v7 + 4 < v20)
        {
          v21 = *(_QWORD *)(v5 + 8 * v11);
          if (v21)
            goto LABEL_15;
          v23 = v7 + 5;
          while (v20 != v23)
          {
            v21 = *(_QWORD *)(v5 + 8 * v23++);
            if (v21)
            {
              v11 = v23 - 1;
              goto LABEL_15;
            }
          }
        }
      }
    }
  }
LABEL_28:
  v24 = *(_QWORD *)(v0 + 96);
  sub_23A59A19C();
  v25 = *(_xpc_connection_s **)(v24 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcListener);
  if (v25)
    xpc_connection_cancel(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A59AE38()
{
  DTXPCConnection.invalidate()();
  return swift_task_switch();
}

uint64_t sub_23A59AE70()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _xpc_connection_s *v16;

  result = swift_release();
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 120);
  if (v4 < 0)
  {
    v9 = sub_23A59ED94();
    if (v9)
    {
      *(_QWORD *)(v0 + 88) = v9;
      type metadata accessor for DTXPCConnection();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v8 = *(_QWORD *)(v0 + 80);
      swift_unknownObjectRelease();
      v7 = v2;
      v5 = v3;
LABEL_7:
      *(_QWORD *)(v0 + 152) = v7;
      *(_QWORD *)(v0 + 160) = v5;
      *(_QWORD *)(v0 + 144) = v8;
      if (v8)
      {
        type metadata accessor for DTXPCConnection();
        sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
        sub_23A59EA7C();
        return swift_task_switch();
      }
    }
  }
  else
  {
    if (v3)
    {
      v5 = (v3 - 1) & v3;
      v6 = __clz(__rbit64(v3)) | (v2 << 6);
      v7 = *(_QWORD *)(v0 + 152);
LABEL_4:
      v8 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v6);
      swift_retain();
      goto LABEL_7;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      return result;
    }
    v11 = (unint64_t)(*(_QWORD *)(v0 + 136) + 64) >> 6;
    if (v10 < v11)
    {
      v12 = *(_QWORD *)(v0 + 128);
      v13 = *(_QWORD *)(v12 + 8 * v10);
      v7 = v2 + 1;
      if (v13)
      {
LABEL_12:
        v5 = (v13 - 1) & v13;
        v6 = __clz(__rbit64(v13)) + (v7 << 6);
        goto LABEL_4;
      }
      v7 = v2 + 2;
      if (v2 + 2 < v11)
      {
        v13 = *(_QWORD *)(v12 + 8 * v7);
        if (v13)
          goto LABEL_12;
        v7 = v2 + 3;
        if (v2 + 3 < v11)
        {
          v13 = *(_QWORD *)(v12 + 8 * v7);
          if (v13)
            goto LABEL_12;
          v7 = v2 + 4;
          if (v2 + 4 < v11)
          {
            v13 = *(_QWORD *)(v12 + 8 * v7);
            if (v13)
              goto LABEL_12;
            v14 = v2 + 5;
            while (v11 != v14)
            {
              v13 = *(_QWORD *)(v12 + 8 * v14++);
              if (v13)
              {
                v7 = v14 - 1;
                goto LABEL_12;
              }
            }
          }
        }
      }
    }
  }
  v15 = *(_QWORD *)(v0 + 96);
  sub_23A59A19C();
  v16 = *(_xpc_connection_s **)(v15 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcListener);
  if (v16)
    xpc_connection_cancel(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall DTXPCServer._invalidated()()
{
  uint64_t v0;
  _QWORD *v1;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__invalidateCalled) == 1
    && !*(_QWORD *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcListener))
  {
    v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcConnections);
    swift_beginAccess();
    if ((*v1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_23A59ED7C();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t DTXPCServer.report(eventType:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isEscapingClosureAtFileLocation;
  int64_t v24;
  uint64_t result;
  _QWORD v26[8];
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;

  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcConnections);
  swift_beginAccess();
  v5 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23A59ED70();
    type metadata accessor for DTXPCConnection();
    sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
    sub_23A59EB24();
    v5 = v32;
    v28 = v33;
    v6 = v34;
    v7 = v35;
    v8 = v36;
  }
  else
  {
    v9 = -1 << *(_BYTE *)(v5 + 32);
    v10 = *(_QWORD *)(v5 + 56);
    v28 = v5 + 56;
    v11 = ~v9;
    v12 = -v9;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v8 = v13 & v10;
    swift_bridgeObjectRetain();
    v6 = v11;
    v7 = 0;
  }
  v26[5] = v6;
  v26[7] = v5 & 0x7FFFFFFFFFFFFFFFLL;
  v27 = (unint64_t)(v6 + 64) >> 6;
  v26[6] = MEMORY[0x24BEE4AD0] + 8;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  v14 = sub_23A59ED94();
  if (!v14)
    return sub_23A59A19C();
  v29 = v14;
  type metadata accessor for DTXPCConnection();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v2 = v30;
  v15 = swift_unknownObjectRelease();
  v16 = v7;
  v17 = v8;
  if (!v2)
    return sub_23A59A19C();
  while (1)
  {
    MEMORY[0x24BDAC7A8](v15);
    v26[2] = a1;
    type metadata accessor for DTXPCConnection();
    sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
    sub_23A59EA7C();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      goto LABEL_36;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = sub_23A59BC58;
    *(_QWORD *)(v21 + 24) = v26;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = sub_23A56EAD0;
    *(_QWORD *)(v22 + 24) = v21;
    swift_retain();
    sub_23A548F60();
    swift_release();
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      v30 = 0;
      v31 = 0xE000000000000000;
      sub_23A59EE00();
      sub_23A59E9E0();
      v29 = v2;
      sub_23A59EEB4();
      sub_23A59E9E0();
      result = sub_23A59EECC();
      __break(1u);
      return result;
    }
    v7 = v16;
    v8 = v17;
    if (v5 < 0)
      goto LABEL_8;
LABEL_11:
    if (!v8)
      break;
    v17 = (v8 - 1) & v8;
    v18 = __clz(__rbit64(v8)) | (v7 << 6);
    v16 = v7;
LABEL_22:
    v2 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
    v15 = swift_retain();
    if (!v2)
      return sub_23A59A19C();
  }
  v16 = v7 + 1;
  if (__OFADD__(v7, 1))
    goto LABEL_35;
  if (v16 >= v27)
    return sub_23A59A19C();
  v19 = *(_QWORD *)(v28 + 8 * v16);
  if (v19)
  {
LABEL_21:
    v17 = (v19 - 1) & v19;
    v18 = __clz(__rbit64(v19)) + (v16 << 6);
    goto LABEL_22;
  }
  v20 = v7 + 2;
  if (v7 + 2 >= v27)
    return sub_23A59A19C();
  v19 = *(_QWORD *)(v28 + 8 * v20);
  if (v19)
    goto LABEL_20;
  v20 = v7 + 3;
  if (v7 + 3 >= v27)
    return sub_23A59A19C();
  v19 = *(_QWORD *)(v28 + 8 * v20);
  if (v19)
  {
LABEL_20:
    v16 = v20;
    goto LABEL_21;
  }
  v16 = v7 + 4;
  if (v7 + 4 >= v27)
    return sub_23A59A19C();
  v19 = *(_QWORD *)(v28 + 8 * v16);
  if (v19)
    goto LABEL_21;
  v24 = v7 + 5;
  while (v27 != v24)
  {
    v19 = *(_QWORD *)(v28 + 8 * v24++);
    if (v19)
    {
      v16 = v24 - 1;
      goto LABEL_21;
    }
  }
  return sub_23A59A19C();
}

uint64_t sub_23A59B594(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[6] = a1;
  v2[7] = v1;
  v3 = sub_23A59E5B4();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256993728);
  v2[11] = swift_task_alloc();
  sub_23A52EAEC(&qword_256994310, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCServer, (uint64_t)&protocol conformance descriptor for DTXPCServer);
  v2[12] = sub_23A59EA7C();
  v2[13] = v4;
  return swift_task_switch();
}

uint64_t sub_23A59B64C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 112) = Strong;
  if (!Strong)
    goto LABEL_4;
  v2 = Strong;
  v3 = *(_QWORD *)(v0 + 56);
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__invalidateCalled) & 1) != 0)
  {
    swift_release();
LABEL_4:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 48);
  type metadata accessor for DTXPCConnection();
  *(_QWORD *)(v0 + 40) = v9;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256994C80);
  sub_23A59E290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v3 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__environment, v8);
  swift_retain();
  *(_QWORD *)(v0 + 120) = DTXPCConnection.__allocating_init(xpcConnection:daemon:environment:)(v5, v2, v6);
  v10 = swift_allocObject();
  *(_QWORD *)(v0 + 128) = v10;
  swift_weakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v0 + 136) = v11;
  swift_weakInit();
  v12 = swift_allocObject();
  *(_QWORD *)(v0 + 144) = v12;
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v11;
  sub_23A52EAEC(&qword_256993968, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
  swift_retain();
  swift_retain();
  *(_QWORD *)(v0 + 152) = sub_23A59EA7C();
  *(_QWORD *)(v0 + 160) = v13;
  return swift_task_switch();
}

uint64_t sub_23A59B83C()
{
  uint64_t v0;

  DTXPCConnection.setInvalidationHandler(_:)((uint64_t)sub_23A59DE48, *(_QWORD *)(v0 + 144));
  swift_release();
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A59B8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  swift_beginAccess();
  swift_retain();
  sub_23A59C78C(&v3, v1);
  swift_endAccess();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A59B930()
{
  DTXPCConnection.activate()();
  return swift_task_switch();
}

uint64_t sub_23A59B968()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DTXPCServer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_weakDestroy();
  v1 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__environment;
  v2 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t DTXPCServer.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_weakDestroy();
  v1 = v0 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__environment;
  v2 = sub_23A59E5B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23A59BA94()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23A59E560();
  v1 = sub_23A59EC5C();

  return v1;
}

uint64_t sub_23A59BAE0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5624D8;
  return DTXPCServer.summary.getter();
}

uint64_t sub_23A59BB24()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A541460;
  return DTXPCServer.activate()();
}

uint64_t sub_23A59BB68()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A541460;
  return DTXPCServer.invalidate()();
}

uint64_t sub_23A59BBAC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23A567450(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_23A59BC98(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_23A59BC14()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A59BC38(uint64_t a1)
{
  return sub_23A59A3C8(a1);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_23A59BC58()
{
  uint64_t v0;

  return DTXPCConnection.report(eventType:)(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A59BC88()
{
  return swift_deallocObject();
}

uint64_t sub_23A59BC98(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;

  v3 = a1[1];
  result = sub_23A59F028();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_133;
    if (v3)
      return sub_23A59C3BC(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_141;
  v90 = result;
  v87 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v92 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v89 = MEMORY[0x24BEE4AF8];
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_99:
      if (v11 >= 2)
      {
        v81 = *v87;
        do
        {
          v82 = v11 - 2;
          if (v11 < 2)
            goto LABEL_128;
          if (!v81)
            goto LABEL_140;
          v83 = *(_QWORD *)&v8[16 * v82 + 32];
          v84 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_23A59C4B0((char *)(v81 + 16 * v83), (char *)(v81 + 16 * *(_QWORD *)&v8[16 * v11 + 16]), v81 + 16 * v84, v92);
          if (v1)
            break;
          if (v84 < v83)
            goto LABEL_129;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_23A563CAC((uint64_t)v8);
          if (v82 >= *((_QWORD *)v8 + 2))
            goto LABEL_130;
          v85 = &v8[16 * v82 + 32];
          *(_QWORD *)v85 = v83;
          *((_QWORD *)v85 + 1) = v84;
          v86 = *((_QWORD *)v8 + 2);
          if (v11 > v86)
            goto LABEL_131;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v86 - v11));
          *((_QWORD *)v8 + 2) = v86 - 1;
          v11 = v86 - 1;
        }
        while (v86 > 2);
      }
LABEL_110:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v89 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_23A59EA64();
    *(_QWORD *)(v7 + 16) = v6;
    v89 = v7;
    v92 = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v88 = *a1 + 24;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v91 = v3;
LABEL_15:
  v12 = v9++;
  if (v9 >= v3)
    goto LABEL_32;
  sub_23A56DBE0();
  v13 = sub_23A59ED34();
  v9 = v12 + 2;
  if (v12 + 2 >= v3)
    goto LABEL_21;
  v14 = v88 + 16 * v12;
  do
  {
    v14 += 16;
    if ((v13 == -1) == (sub_23A59ED34() != -1))
    {
      v3 = v91;
      if (v13 == -1)
        goto LABEL_24;
LABEL_32:
      if (v9 < v3)
      {
        if (__OFSUB__(v9, v12))
          goto LABEL_132;
        if (v9 - v12 < v90)
        {
          if (__OFADD__(v12, v90))
            goto LABEL_134;
          if (v12 + v90 >= v3)
            v22 = v3;
          else
            v22 = v12 + v90;
          if (v22 < v12)
          {
LABEL_135:
            __break(1u);
            goto LABEL_136;
          }
          if (v9 != v22)
          {
            sub_23A56DBE0();
            v23 = (_QWORD *)(v10 + 16 * v9);
            do
            {
              v24 = v12;
              v25 = v23;
              do
              {
                if (sub_23A59ED34() != -1)
                  break;
                if (!v10)
                  goto LABEL_137;
                v26 = *v25;
                v27 = v25[1];
                *(_OWORD *)v25 = *((_OWORD *)v25 - 1);
                *(v25 - 1) = v27;
                *(v25 - 2) = v26;
                v25 -= 2;
                ++v24;
              }
              while (v9 != v24);
              ++v9;
              v23 += 2;
            }
            while (v9 != v22);
            v9 = v22;
          }
        }
      }
      if (v9 < v12)
        goto LABEL_127;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_23A563B0C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v29 = *((_QWORD *)v8 + 2);
      v28 = *((_QWORD *)v8 + 3);
      v11 = v29 + 1;
      if (v29 >= v28 >> 1)
        v8 = sub_23A563B0C((char *)(v28 > 1), v29 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v11;
      v93 = v8 + 32;
      v30 = &v8[16 * v29 + 32];
      *(_QWORD *)v30 = v12;
      *((_QWORD *)v30 + 1) = v9;
      if (v29)
      {
        v31 = v8 + 32;
        while (1)
        {
          v32 = v11 - 1;
          if (v11 >= 4)
          {
            v37 = &v31[16 * v11];
            v38 = *((_QWORD *)v37 - 8);
            v39 = *((_QWORD *)v37 - 7);
            v43 = __OFSUB__(v39, v38);
            v40 = v39 - v38;
            if (v43)
              goto LABEL_116;
            v42 = *((_QWORD *)v37 - 6);
            v41 = *((_QWORD *)v37 - 5);
            v43 = __OFSUB__(v41, v42);
            v35 = v41 - v42;
            v36 = v43;
            if (v43)
              goto LABEL_117;
            v44 = v11 - 2;
            v45 = &v31[16 * v11 - 32];
            v47 = *(_QWORD *)v45;
            v46 = *((_QWORD *)v45 + 1);
            v43 = __OFSUB__(v46, v47);
            v48 = v46 - v47;
            if (v43)
              goto LABEL_119;
            v43 = __OFADD__(v35, v48);
            v49 = v35 + v48;
            if (v43)
              goto LABEL_122;
            if (v49 >= v40)
            {
              v67 = &v31[16 * v32];
              v69 = *(_QWORD *)v67;
              v68 = *((_QWORD *)v67 + 1);
              v43 = __OFSUB__(v68, v69);
              v70 = v68 - v69;
              if (v43)
                goto LABEL_126;
              v60 = v35 < v70;
              goto LABEL_87;
            }
          }
          else
          {
            if (v11 != 3)
            {
              v61 = *((_QWORD *)v8 + 4);
              v62 = *((_QWORD *)v8 + 5);
              v43 = __OFSUB__(v62, v61);
              v54 = v62 - v61;
              v55 = v43;
              goto LABEL_81;
            }
            v34 = *((_QWORD *)v8 + 4);
            v33 = *((_QWORD *)v8 + 5);
            v43 = __OFSUB__(v33, v34);
            v35 = v33 - v34;
            v36 = v43;
          }
          if ((v36 & 1) != 0)
            goto LABEL_118;
          v44 = v11 - 2;
          v50 = &v31[16 * v11 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v53 = __OFSUB__(v51, v52);
          v54 = v51 - v52;
          v55 = v53;
          if (v53)
            goto LABEL_121;
          v56 = &v31[16 * v32];
          v58 = *(_QWORD *)v56;
          v57 = *((_QWORD *)v56 + 1);
          v43 = __OFSUB__(v57, v58);
          v59 = v57 - v58;
          if (v43)
            goto LABEL_124;
          if (__OFADD__(v54, v59))
            goto LABEL_125;
          if (v54 + v59 >= v35)
          {
            v60 = v35 < v59;
LABEL_87:
            if (v60)
              v32 = v44;
            goto LABEL_89;
          }
LABEL_81:
          if ((v55 & 1) != 0)
            goto LABEL_120;
          v63 = &v31[16 * v32];
          v65 = *(_QWORD *)v63;
          v64 = *((_QWORD *)v63 + 1);
          v43 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          if (v43)
            goto LABEL_123;
          if (v66 < v54)
            goto LABEL_14;
LABEL_89:
          v71 = v32 - 1;
          if (v32 - 1 >= v11)
          {
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
            goto LABEL_135;
          }
          v72 = v10;
          if (!v10)
            goto LABEL_138;
          v73 = v8;
          v74 = &v31[16 * v71];
          v75 = v31;
          v76 = *(_QWORD *)v74;
          v77 = &v75[16 * v32];
          v78 = *((_QWORD *)v77 + 1);
          v79 = v72;
          sub_23A59C4B0((char *)(v72 + 16 * *(_QWORD *)v74), (char *)(v72 + 16 * *(_QWORD *)v77), v72 + 16 * v78, v92);
          if (v1)
            goto LABEL_110;
          if (v78 < v76)
            goto LABEL_113;
          if (v32 > *((_QWORD *)v73 + 2))
            goto LABEL_114;
          *(_QWORD *)v74 = v76;
          v31 = v93;
          *(_QWORD *)&v93[16 * v71 + 8] = v78;
          v80 = *((_QWORD *)v73 + 2);
          if (v32 >= v80)
            goto LABEL_115;
          v8 = v73;
          v11 = v80 - 1;
          memmove(v77, v77 + 16, 16 * (v80 - 1 - v32));
          *((_QWORD *)v73 + 2) = v80 - 1;
          v10 = v79;
          if (v80 <= 2)
            goto LABEL_14;
        }
      }
      v11 = 1;
LABEL_14:
      v3 = v91;
      if (v9 >= v91)
        goto LABEL_99;
      goto LABEL_15;
    }
    ++v9;
    v3 = v91;
  }
  while (v91 != v9);
  v9 = v91;
LABEL_21:
  if (v13 != -1)
    goto LABEL_32;
LABEL_24:
  if (v9 >= v12)
  {
    if (v12 < v9)
    {
      v15 = 16 * v9;
      v16 = 16 * v12;
      v17 = v9;
      v18 = v12;
      while (1)
      {
        if (v18 != --v17)
        {
          if (!v10)
            goto LABEL_139;
          v19 = v10 + v15;
          v20 = *(_QWORD *)(v10 + v16);
          v21 = *(_QWORD *)(v10 + v16 + 8);
          *(_OWORD *)(v10 + v16) = *(_OWORD *)(v10 + v15 - 16);
          *(_QWORD *)(v19 - 16) = v20;
          *(_QWORD *)(v19 - 8) = v21;
        }
        ++v18;
        v15 -= 16;
        v16 += 16;
        if (v18 >= v17)
          goto LABEL_32;
      }
    }
    goto LABEL_32;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  result = sub_23A59EEC0();
  __break(1u);
  return result;
}

uint64_t sub_23A59C3BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v12 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    sub_23A56DBE0();
    v6 = (_QWORD *)(v5 + 16 * v4);
LABEL_5:
    v7 = v12;
    v8 = v6;
    while (1)
    {
      result = sub_23A59ED34();
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v6 += 2;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v9 = *v8;
      v10 = v8[1];
      *(_OWORD *)v8 = *((_OWORD *)v8 - 1);
      *(v8 - 1) = v10;
      *(v8 - 2) = v9;
      v8 -= 2;
      if (v4 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23A59C4B0(char *__src, char *a2, unint64_t a3, char *a4)
{
  char *v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t result;
  char *v21;
  char *v22;
  char *v23;

  v5 = a2;
  v6 = __src;
  v7 = a2 - __src;
  v8 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v8 = a2 - __src;
  v9 = v8 >> 4;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 4;
  v23 = __src;
  v22 = a4;
  if (v9 >= v11 >> 4)
  {
    if (v10 >= -15)
    {
      if (a4 != a2 || &a2[16 * v12] <= a4)
        memmove(a4, a2, 16 * v12);
      v15 = &a4[16 * v12];
      v21 = v15;
      v23 = v5;
      if (v6 < v5 && v10 >= 16)
      {
        sub_23A56DBE0();
        v16 = (char *)(a3 - 16);
        v17 = v5;
        do
        {
          v18 = v16 + 16;
          v17 -= 16;
          if (sub_23A59ED34() == -1)
          {
            if (v18 != v5 || v16 >= v5)
              *(_OWORD *)v16 = *(_OWORD *)v17;
            v23 = v17;
          }
          else
          {
            v21 = v15 - 16;
            if (v18 < v15 || v16 >= v15 || v18 != v15)
              *(_OWORD *)v16 = *((_OWORD *)v15 - 1);
            v17 = v5;
            v15 -= 16;
          }
          if (v17 <= v6)
            break;
          v16 -= 16;
          v5 = v17;
        }
        while (v15 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v7 >= -15)
  {
    v13 = a4;
    if (a4 != __src || &__src[16 * v9] <= a4)
      memmove(a4, __src, 16 * v9);
    v21 = &a4[16 * v9];
    if ((unint64_t)v5 < a3 && v7 >= 16)
    {
      sub_23A56DBE0();
      do
      {
        if (sub_23A59ED34() == -1)
        {
          v14 = v5 + 16;
          if (v6 < v5 || v6 >= v14 || v6 != v5)
            *(_OWORD *)v6 = *(_OWORD *)v5;
        }
        else
        {
          if (v6 != v13)
            *(_OWORD *)v6 = *(_OWORD *)v13;
          v13 += 16;
          v22 = v13;
          v14 = v5;
        }
        v6 += 16;
        if (v13 >= &a4[16 * v9])
          break;
        v5 = v14;
      }
      while ((unint64_t)v14 < a3);
      v23 = v6;
    }
LABEL_43:
    sub_23A563C04((void **)&v23, (const void **)&v22, &v21);
    return 1;
  }
  result = sub_23A59EF08();
  __break(1u);
  return result;
}

uint64_t sub_23A59C78C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_23A59ED88();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for DTXPCConnection();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_23A59ED7C();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_23A59CA54(v7, result + 1);
    v20 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_23A59CC74();
      v17 = v20;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_23A59CF84(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  type metadata accessor for DTXPCConnection();
  sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
  swift_bridgeObjectRetain();
  v10 = sub_23A59E95C();
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v2;
    *v2 = 0x8000000000000000;
    v15 = swift_retain();
    sub_23A59D050(v15, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v13 = ~v11;
  sub_23A52EAEC(&qword_256993770, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
  while ((sub_23A59E98C() & 1) == 0)
  {
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_11;
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_23A59CA54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256994CC0);
    v2 = sub_23A59EDE8();
    v14 = v2;
    sub_23A59ED70();
    if (sub_23A59ED94())
    {
      type metadata accessor for DTXPCConnection();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_23A59CC74();
          v2 = v14;
        }
        sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
        result = sub_23A59E95C();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_23A59ED94());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_23A59CC74()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256994CC0);
  v2 = sub_23A59EDDC();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v26 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v25 = (unint64_t)(v4 + 63) >> 6;
    v7 = v2 + 56;
    result = swift_retain();
    v9 = 0;
    while (1)
    {
      if (v6)
      {
        v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v12 = v11 | (v9 << 6);
      }
      else
      {
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v25)
          goto LABEL_33;
        v14 = v26[v13];
        ++v9;
        if (!v14)
        {
          v9 = v13 + 1;
          if (v13 + 1 >= v25)
            goto LABEL_33;
          v14 = v26[v9];
          if (!v14)
          {
            v9 = v13 + 2;
            if (v13 + 2 >= v25)
              goto LABEL_33;
            v14 = v26[v9];
            if (!v14)
            {
              v15 = v13 + 3;
              if (v15 >= v25)
              {
LABEL_33:
                swift_release();
                v24 = 1 << *(_BYTE *)(v1 + 32);
                if (v24 > 63)
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v24;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v14 = v26[v15];
              if (!v14)
              {
                while (1)
                {
                  v9 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_39;
                  if (v9 >= v25)
                    goto LABEL_33;
                  v14 = v26[v9];
                  ++v15;
                  if (v14)
                    goto LABEL_23;
                }
              }
              v9 = v15;
            }
          }
        }
LABEL_23:
        v6 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v9 << 6);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
      type metadata accessor for DTXPCConnection();
      sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
      result = sub_23A59E95C();
      v17 = -1 << *(_BYTE *)(v3 + 32);
      v18 = result & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v20 = 0;
        v21 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v22 = v19 == v21;
          if (v19 == v21)
            v19 = 0;
          v20 |= v22;
          v23 = *(_QWORD *)(v7 + 8 * v19);
        }
        while (v23 == -1);
        v10 = __clz(__rbit64(~v23)) + (v19 << 6);
      }
      *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

unint64_t sub_23A59CF84(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  type metadata accessor for DTXPCConnection();
  sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
  sub_23A59E95C();
  result = sub_23A59ED64();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_23A59D050(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23A59CC74();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23A59D1F8();
      goto LABEL_12;
    }
    sub_23A59D3A0();
  }
  v8 = *v3;
  type metadata accessor for DTXPCConnection();
  sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
  result = sub_23A59E95C();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    sub_23A52EAEC(&qword_256993770, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
    do
    {
      result = sub_23A59E98C();
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23A59F07C();
  __break(1u);
  return result;
}

void *sub_23A59D1F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256994CC0);
  v2 = *v0;
  v3 = sub_23A59EDD0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23A59D3A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256994CC0);
  v2 = sub_23A59EDDC();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v24 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v25 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v13);
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v25)
        goto LABEL_33;
      v14 = *(_QWORD *)(v24 + 8 * v9);
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v24 + 8 * v9);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
    type metadata accessor for DTXPCConnection();
    sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
    swift_retain();
    result = sub_23A59E95C();
    v17 = -1 << *(_BYTE *)(v3 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  v15 = v13 + 3;
  if (v15 >= v25)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23A59D684()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;

  v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v2 = sub_23A59EDA0();
    swift_release();
    if ((v2 & 1) != 0)
    {
      v3 = sub_23A59D870();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  type metadata accessor for DTXPCConnection();
  sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
  swift_bridgeObjectRetain();
  v4 = sub_23A59E95C();
  v5 = -1 << *(_BYTE *)(v1 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_8;
  v7 = ~v5;
  sub_23A52EAEC(&qword_256993770, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
  while ((sub_23A59E98C() & 1) == 0)
  {
    v6 = (v6 + 1) & v7;
    if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v0;
  v11 = *v0;
  *v0 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23A59D1F8();
    v10 = v11;
  }
  v3 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v6);
  sub_23A59DA20(v6);
  *v0 = v11;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_23A59D870()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v1 = sub_23A59ED7C();
  v2 = swift_unknownObjectRetain();
  v3 = sub_23A59CA54(v2, v1);
  v10 = v3;
  type metadata accessor for DTXPCConnection();
  sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
  swift_retain();
  v4 = sub_23A59E95C();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v7 = ~v5;
    sub_23A52EAEC(&qword_256993770, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
    while ((sub_23A59E98C() & 1) == 0)
    {
      v6 = (v6 + 1) & v7;
      if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      {
        swift_release();
        __break(1u);
        break;
      }
    }
    swift_release();
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
    sub_23A59DA20(v6);
    if ((sub_23A59E98C() & 1) != 0)
    {
      *v0 = v10;
      return v8;
    }
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_23A59DA20(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23A59ED58();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      type metadata accessor for DTXPCConnection();
      sub_23A52EAEC((unint64_t *)&unk_256994B20, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCConnection, (uint64_t)&protocol conformance descriptor for DTXPCConnection);
      do
      {
        v10 = sub_23A59E95C() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_16:
            v13 = *(_QWORD *)(v3 + 48);
            v14 = (_QWORD *)(v13 + 8 * v2);
            v15 = (_QWORD *)(v13 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v14 >= v15 + 1))
            {
              *v14 = *v15;
              v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_23A59DBF4(uint64_t a1)
{
  uint64_t result;

  result = sub_23A52EAEC(&qword_256994310, (uint64_t (*)(uint64_t))type metadata accessor for DTXPCServer, (uint64_t)&protocol conformance descriptor for DTXPCServer);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23A59DC30()
{
  return type metadata accessor for DTXPCServer();
}

uint64_t sub_23A59DC38()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A59E5B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DTXPCServer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DTXPCServer.__allocating_init(daemon:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_23A59DCE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256993728);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23A59DD60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256993728) - 8) + 80);
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A541124;
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_23A541460;
  return sub_23A59A6F4(v3);
}

uint64_t sub_23A59DDF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A59DE1C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A59DE48()
{
  uint64_t result;
  uint64_t Strong;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      sub_23A5518A8((uint64_t)sub_23A59DEFC, Strong);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23A59DEFC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t result;

  v2 = (_QWORD *)(a1 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcConnections);
  swift_beginAccess();
  sub_23A59D684();
  swift_endAccess();
  result = swift_release();
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__invalidateCalled) == 1
    && !*(_QWORD *)(a1 + OBJC_IVAR____TtC23DistributedTimersDaemon11DTXPCServer__xpcListener)
    && (*v2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23A59ED7C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23A59DFCC()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23A59DFD8()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23A59DFE4()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23A59DFF0()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23A59DFFC()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23A59E008()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23A59E014()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_23A59E020()
{
  return MEMORY[0x24BDCB918]();
}

uint64_t sub_23A59E02C()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_23A59E038()
{
  return MEMORY[0x24BDCBAC0]();
}

uint64_t sub_23A59E044()
{
  return MEMORY[0x24BDCBB78]();
}

uint64_t sub_23A59E050()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_23A59E05C()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_23A59E068()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_23A59E074()
{
  return MEMORY[0x24BDCC7A0]();
}

uint64_t sub_23A59E080()
{
  return MEMORY[0x24BDCC808]();
}

uint64_t sub_23A59E08C()
{
  return MEMORY[0x24BDCC818]();
}

uint64_t sub_23A59E098()
{
  return MEMORY[0x24BDCD280]();
}

uint64_t sub_23A59E0A4()
{
  return MEMORY[0x24BDCD288]();
}

uint64_t sub_23A59E0B0()
{
  return MEMORY[0x24BDCD290]();
}

uint64_t sub_23A59E0BC()
{
  return MEMORY[0x24BDCD298]();
}

uint64_t sub_23A59E0C8()
{
  return MEMORY[0x24BDCD2A0]();
}

uint64_t sub_23A59E0D4()
{
  return MEMORY[0x24BDCD2A8]();
}

uint64_t sub_23A59E0E0()
{
  return MEMORY[0x24BDCD2B8]();
}

uint64_t sub_23A59E0EC()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23A59E0F8()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23A59E104()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_23A59E110()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_23A59E11C()
{
  return MEMORY[0x24BDCD8A0]();
}

uint64_t sub_23A59E128()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_23A59E134()
{
  return MEMORY[0x24BDCD968]();
}

uint64_t sub_23A59E140()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_23A59E14C()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_23A59E158()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_23A59E164()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23A59E170()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_23A59E17C()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23A59E188()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_23A59E194()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t _s23DistributedTimersDaemon13DTSyncedAlarmV2id4hour6minute16modificationDateACSS_S2i10Foundation0J0VtcfcfA2__0()
{
  return MEMORY[0x24BDCE2D8]();
}

uint64_t sub_23A59E1AC()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_23A59E1B8()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_23A59E1C4()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_23A59E1D0()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23A59E1DC()
{
  return MEMORY[0x24BDCE8B0]();
}

uint64_t sub_23A59E1E8()
{
  return MEMORY[0x24BDCE8C8]();
}

uint64_t sub_23A59E1F4()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23A59E200()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_23A59E20C()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23A59E218()
{
  return MEMORY[0x24BDCE9B8]();
}

uint64_t sub_23A59E224()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_23A59E230()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23A59E23C()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_23A59E248()
{
  return MEMORY[0x24BDCEA10]();
}

uint64_t sub_23A59E254()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23A59E260()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23A59E26C()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_23A59E278()
{
  return MEMORY[0x24BE29C48]();
}

uint64_t sub_23A59E284()
{
  return MEMORY[0x24BE29C50]();
}

uint64_t sub_23A59E290()
{
  return MEMORY[0x24BE29C60]();
}

uint64_t sub_23A59E29C()
{
  return MEMORY[0x24BE29C68]();
}

uint64_t sub_23A59E2A8()
{
  return MEMORY[0x24BE29C78]();
}

uint64_t sub_23A59E2B4()
{
  return MEMORY[0x24BE29C80]();
}

uint64_t sub_23A59E2C0()
{
  return MEMORY[0x24BE29C90]();
}

uint64_t sub_23A59E2CC()
{
  return MEMORY[0x24BE29C98]();
}

uint64_t sub_23A59E2D8()
{
  return MEMORY[0x24BE29CA0]();
}

uint64_t sub_23A59E2E4()
{
  return MEMORY[0x24BE29CA8]();
}

uint64_t sub_23A59E2F0()
{
  return MEMORY[0x24BE29CB8]();
}

uint64_t sub_23A59E2FC()
{
  return MEMORY[0x24BE29D08]();
}

uint64_t sub_23A59E308()
{
  return MEMORY[0x24BE29D10]();
}

uint64_t sub_23A59E314()
{
  return MEMORY[0x24BE29D20]();
}

uint64_t sub_23A59E320()
{
  return MEMORY[0x24BE29D30]();
}

uint64_t sub_23A59E32C()
{
  return MEMORY[0x24BE29D40]();
}

uint64_t sub_23A59E338()
{
  return MEMORY[0x24BE29D68]();
}

uint64_t sub_23A59E344()
{
  return MEMORY[0x24BE29DF8]();
}

uint64_t sub_23A59E350()
{
  return MEMORY[0x24BE2D190]();
}

uint64_t sub_23A59E35C()
{
  return MEMORY[0x24BE2D1A0]();
}

uint64_t sub_23A59E368()
{
  return MEMORY[0x24BE2D1A8]();
}

uint64_t sub_23A59E374()
{
  return MEMORY[0x24BE2D1B8]();
}

uint64_t sub_23A59E380()
{
  return MEMORY[0x24BE2D1C8]();
}

uint64_t sub_23A59E38C()
{
  return MEMORY[0x24BE2D1E0]();
}

uint64_t sub_23A59E398()
{
  return MEMORY[0x24BE2D1F0]();
}

uint64_t sub_23A59E3A4()
{
  return MEMORY[0x24BE2D1F8]();
}

uint64_t sub_23A59E3B0()
{
  return MEMORY[0x24BE2D200]();
}

uint64_t sub_23A59E3BC()
{
  return MEMORY[0x24BE2D208]();
}

uint64_t sub_23A59E3C8()
{
  return MEMORY[0x24BE2D210]();
}

uint64_t sub_23A59E3D4()
{
  return MEMORY[0x24BE2D218]();
}

uint64_t sub_23A59E3E0()
{
  return MEMORY[0x24BE2D228]();
}

uint64_t sub_23A59E3EC()
{
  return MEMORY[0x24BE2D230]();
}

uint64_t sub_23A59E3F8()
{
  return MEMORY[0x24BE2D238]();
}

uint64_t sub_23A59E404()
{
  return MEMORY[0x24BE2D240]();
}

uint64_t sub_23A59E410()
{
  return MEMORY[0x24BE2D248]();
}

uint64_t sub_23A59E41C()
{
  return MEMORY[0x24BE2D250]();
}

uint64_t sub_23A59E428()
{
  return MEMORY[0x24BE2D258]();
}

uint64_t sub_23A59E434()
{
  return MEMORY[0x24BE2D260]();
}

uint64_t sub_23A59E440()
{
  return MEMORY[0x24BE2D268]();
}

uint64_t sub_23A59E44C()
{
  return MEMORY[0x24BE2D270]();
}

uint64_t sub_23A59E458()
{
  return MEMORY[0x24BE2D278]();
}

uint64_t sub_23A59E464()
{
  return MEMORY[0x24BE2D298]();
}

uint64_t sub_23A59E470()
{
  return MEMORY[0x24BE2D2A0]();
}

uint64_t sub_23A59E47C()
{
  return MEMORY[0x24BE2D2A8]();
}

uint64_t sub_23A59E488()
{
  return MEMORY[0x24BE2D2B8]();
}

uint64_t sub_23A59E494()
{
  return MEMORY[0x24BE2D2C0]();
}

uint64_t sub_23A59E4A0()
{
  return MEMORY[0x24BE2D2C8]();
}

uint64_t sub_23A59E4AC()
{
  return MEMORY[0x24BE2D2D0]();
}

uint64_t sub_23A59E4B8()
{
  return MEMORY[0x24BE2D2E0]();
}

uint64_t sub_23A59E4C4()
{
  return MEMORY[0x24BE2D2F0]();
}

uint64_t sub_23A59E4D0()
{
  return MEMORY[0x24BE2D300]();
}

uint64_t sub_23A59E4DC()
{
  return MEMORY[0x24BE2D308]();
}

uint64_t sub_23A59E4E8()
{
  return MEMORY[0x24BE2D310]();
}

uint64_t sub_23A59E4F4()
{
  return MEMORY[0x24BE2D318]();
}

uint64_t sub_23A59E500()
{
  return MEMORY[0x24BE2D330]();
}

uint64_t sub_23A59E50C()
{
  return MEMORY[0x24BE2D338]();
}

uint64_t sub_23A59E518()
{
  return MEMORY[0x24BE2D340]();
}

uint64_t sub_23A59E524()
{
  return MEMORY[0x24BE2D348]();
}

uint64_t sub_23A59E530()
{
  return MEMORY[0x24BE2D350]();
}

uint64_t sub_23A59E53C()
{
  return MEMORY[0x24BE2D378]();
}

uint64_t sub_23A59E548()
{
  return MEMORY[0x24BE2D388]();
}

uint64_t sub_23A59E554()
{
  return MEMORY[0x24BE2D390]();
}

uint64_t sub_23A59E560()
{
  return MEMORY[0x24BE2D398]();
}

uint64_t sub_23A59E56C()
{
  return MEMORY[0x24BE2D3A0]();
}

uint64_t sub_23A59E578()
{
  return MEMORY[0x24BE2D3A8]();
}

uint64_t sub_23A59E584()
{
  return MEMORY[0x24BE2D3B0]();
}

uint64_t sub_23A59E590()
{
  return MEMORY[0x24BE2D3B8]();
}

uint64_t sub_23A59E59C()
{
  return MEMORY[0x24BE2D3C0]();
}

uint64_t _s23DistributedTimersDaemon06DTSyncC0C6daemon11environmentAcA8DTDaemonCSg_0aB019DTEnvironmentValuesVtcfcfA0__0()
{
  return MEMORY[0x24BE2D3C8]();
}

uint64_t sub_23A59E5B4()
{
  return MEMORY[0x24BE2D3D0]();
}

uint64_t sub_23A59E5C0()
{
  return MEMORY[0x24BE2D3F8]();
}

uint64_t sub_23A59E5CC()
{
  return MEMORY[0x24BE2D400]();
}

uint64_t sub_23A59E5D8()
{
  return MEMORY[0x24BE2D408]();
}

uint64_t sub_23A59E5E4()
{
  return MEMORY[0x24BE2D418]();
}

uint64_t sub_23A59E5F0()
{
  return MEMORY[0x24BE2D428]();
}

uint64_t sub_23A59E5FC()
{
  return MEMORY[0x24BE2D430]();
}

uint64_t sub_23A59E608()
{
  return MEMORY[0x24BE2D440]();
}

uint64_t sub_23A59E614()
{
  return MEMORY[0x24BE2D448]();
}

uint64_t sub_23A59E620()
{
  return MEMORY[0x24BE2D450]();
}

uint64_t sub_23A59E62C()
{
  return MEMORY[0x24BE2D468]();
}

uint64_t sub_23A59E638()
{
  return MEMORY[0x24BE2D470]();
}

uint64_t sub_23A59E644()
{
  return MEMORY[0x24BE2D480]();
}

uint64_t sub_23A59E650()
{
  return MEMORY[0x24BE2D4C0]();
}

uint64_t sub_23A59E65C()
{
  return MEMORY[0x24BE2D4D8]();
}

uint64_t sub_23A59E668()
{
  return MEMORY[0x24BE2D4E8]();
}

uint64_t sub_23A59E674()
{
  return MEMORY[0x24BE2D500]();
}

uint64_t sub_23A59E680()
{
  return MEMORY[0x24BE2D508]();
}

uint64_t sub_23A59E68C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23A59E698()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_23A59E6A4()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23A59E6B0()
{
  return MEMORY[0x24BEE64B0]();
}

uint64_t sub_23A59E6BC()
{
  return MEMORY[0x24BEE64B8]();
}

uint64_t sub_23A59E6C8()
{
  return MEMORY[0x24BEE64C8]();
}

uint64_t sub_23A59E6D4()
{
  return MEMORY[0x24BDB8808]();
}

uint64_t sub_23A59E6E0()
{
  return MEMORY[0x24BDB8810]();
}

uint64_t sub_23A59E6EC()
{
  return MEMORY[0x24BDB8818]();
}

uint64_t sub_23A59E6F8()
{
  return MEMORY[0x24BDB8820]();
}

uint64_t sub_23A59E704()
{
  return MEMORY[0x24BDB8828]();
}

uint64_t sub_23A59E710()
{
  return MEMORY[0x24BDB8830]();
}

uint64_t sub_23A59E71C()
{
  return MEMORY[0x24BDB8850]();
}

uint64_t sub_23A59E728()
{
  return MEMORY[0x24BDB8858]();
}

uint64_t sub_23A59E734()
{
  return MEMORY[0x24BDB8870]();
}

uint64_t sub_23A59E740()
{
  return MEMORY[0x24BDB8878]();
}

uint64_t sub_23A59E74C()
{
  return MEMORY[0x24BDB88E0]();
}

uint64_t sub_23A59E758()
{
  return MEMORY[0x24BDB8908]();
}

uint64_t sub_23A59E764()
{
  return MEMORY[0x24BDB8940]();
}

uint64_t sub_23A59E770()
{
  return MEMORY[0x24BDB8950]();
}

uint64_t sub_23A59E77C()
{
  return MEMORY[0x24BDB8958]();
}

uint64_t sub_23A59E788()
{
  return MEMORY[0x24BDB8980]();
}

uint64_t sub_23A59E794()
{
  return MEMORY[0x24BDB8988]();
}

uint64_t sub_23A59E7A0()
{
  return MEMORY[0x24BDB8990]();
}

uint64_t sub_23A59E7AC()
{
  return MEMORY[0x24BDB8A20]();
}

uint64_t sub_23A59E7B8()
{
  return MEMORY[0x24BDB8A28]();
}

uint64_t sub_23A59E7C4()
{
  return MEMORY[0x24BDB8A30]();
}

uint64_t sub_23A59E7D0()
{
  return MEMORY[0x24BDB8A38]();
}

uint64_t sub_23A59E7DC()
{
  return MEMORY[0x24BDB8A48]();
}

uint64_t sub_23A59E7E8()
{
  return MEMORY[0x24BDB8A50]();
}

uint64_t sub_23A59E7F4()
{
  return MEMORY[0x24BDB8A58]();
}

uint64_t sub_23A59E800()
{
  return MEMORY[0x24BDB8A70]();
}

uint64_t sub_23A59E80C()
{
  return MEMORY[0x24BDB8A78]();
}

uint64_t sub_23A59E818()
{
  return MEMORY[0x24BDB8A88]();
}

uint64_t sub_23A59E824()
{
  return MEMORY[0x24BDB8A90]();
}

uint64_t sub_23A59E830()
{
  return MEMORY[0x24BDB8A98]();
}

uint64_t sub_23A59E83C()
{
  return MEMORY[0x24BDB8AE0]();
}

uint64_t sub_23A59E848()
{
  return MEMORY[0x24BDB8AF0]();
}

uint64_t sub_23A59E854()
{
  return MEMORY[0x24BDB8B18]();
}

uint64_t sub_23A59E860()
{
  return MEMORY[0x24BDB8B28]();
}

uint64_t sub_23A59E86C()
{
  return MEMORY[0x24BDB8B30]();
}

uint64_t sub_23A59E878()
{
  return MEMORY[0x24BDB8B38]();
}

uint64_t sub_23A59E884()
{
  return MEMORY[0x24BDB8B40]();
}

uint64_t sub_23A59E890()
{
  return MEMORY[0x24BDB8B48]();
}

uint64_t sub_23A59E89C()
{
  return MEMORY[0x24BDB8B58]();
}

uint64_t sub_23A59E8A8()
{
  return MEMORY[0x24BDB8B60]();
}

uint64_t sub_23A59E8B4()
{
  return MEMORY[0x24BDB8B70]();
}

uint64_t sub_23A59E8C0()
{
  return MEMORY[0x24BDB8B80]();
}

uint64_t sub_23A59E8CC()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_23A59E8D8()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_23A59E8E4()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23A59E8F0()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23A59E8FC()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_23A59E908()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_23A59E914()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_23A59E920()
{
  return MEMORY[0x24BEE5620]();
}

uint64_t sub_23A59E92C()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_23A59E938()
{
  return MEMORY[0x24BDB8BC0]();
}

uint64_t sub_23A59E944()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23A59E950()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23A59E95C()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23A59E968()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23A59E974()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_23A59E980()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_23A59E98C()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23A59E998()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23A59E9A4()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23A59E9B0()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_23A59E9BC()
{
  return MEMORY[0x24BE29E38]();
}

uint64_t sub_23A59E9C8()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23A59E9D4()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_23A59E9E0()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23A59E9EC()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_23A59E9F8()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23A59EA04()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_23A59EA10()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_23A59EA1C()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23A59EA28()
{
  return MEMORY[0x24BDCFBC0]();
}

uint64_t sub_23A59EA34()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23A59EA40()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23A59EA4C()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23A59EA58()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23A59EA64()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23A59EA70()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23A59EA7C()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23A59EA88()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_23A59EA94()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_23A59EAA0()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_23A59EAAC()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23A59EAB8()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23A59EAC4()
{
  return MEMORY[0x24BEE69A8]();
}

uint64_t sub_23A59EAD0()
{
  return MEMORY[0x24BEE69F8]();
}

uint64_t sub_23A59EADC()
{
  return MEMORY[0x24BEE6A30]();
}

uint64_t sub_23A59EAE8()
{
  return MEMORY[0x24BEE6A38]();
}

uint64_t sub_23A59EAF4()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_23A59EB00()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_23A59EB0C()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_23A59EB18()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_23A59EB24()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_23A59EB30()
{
  return MEMORY[0x24BDB8C60]();
}

uint64_t sub_23A59EB3C()
{
  return MEMORY[0x24BDB8C68]();
}

uint64_t sub_23A59EB48()
{
  return MEMORY[0x24BDB8C98]();
}

uint64_t sub_23A59EB54()
{
  return MEMORY[0x24BDB8CA0]();
}

uint64_t sub_23A59EB60()
{
  return MEMORY[0x24BDB8CB0]();
}

uint64_t sub_23A59EB6C()
{
  return MEMORY[0x24BDB8CB8]();
}

uint64_t sub_23A59EB78()
{
  return MEMORY[0x24BDB8CC0]();
}

uint64_t sub_23A59EB84()
{
  return MEMORY[0x24BDB8D20]();
}

uint64_t sub_23A59EB90()
{
  return MEMORY[0x24BE29E48]();
}

uint64_t sub_23A59EB9C()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23A59EBA8()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23A59EBB4()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23A59EBC0()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23A59EBCC()
{
  return MEMORY[0x24BDB8D38]();
}

uint64_t sub_23A59EBD8()
{
  return MEMORY[0x24BE29E60]();
}

uint64_t sub_23A59EBE4()
{
  return MEMORY[0x24BEE5660]();
}

uint64_t sub_23A59EBF0()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_23A59EBFC()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_23A59EC08()
{
  return MEMORY[0x24BEE5920]();
}

uint64_t sub_23A59EC14()
{
  return MEMORY[0x24BEE5928]();
}

uint64_t sub_23A59EC20()
{
  return MEMORY[0x24BE2D530]();
}

uint64_t sub_23A59EC2C()
{
  return MEMORY[0x24BDB8D98]();
}

uint64_t sub_23A59EC38()
{
  return MEMORY[0x24BE2D538]();
}

uint64_t sub_23A59EC44()
{
  return MEMORY[0x24BEE5930]();
}

uint64_t sub_23A59EC50()
{
  return MEMORY[0x24BEE5948]();
}

uint64_t sub_23A59EC5C()
{
  return MEMORY[0x24BEE59A0]();
}

uint64_t sub_23A59EC68()
{
  return MEMORY[0x24BE2D548]();
}

uint64_t sub_23A59EC74()
{
  return MEMORY[0x24BE2D550]();
}

uint64_t sub_23A59EC80()
{
  return MEMORY[0x24BE2D558]();
}

uint64_t sub_23A59EC8C()
{
  return MEMORY[0x24BE2D560]();
}

uint64_t sub_23A59EC98()
{
  return MEMORY[0x24BE2D568]();
}

uint64_t sub_23A59ECA4()
{
  return MEMORY[0x24BE2D570]();
}

uint64_t sub_23A59ECB0()
{
  return MEMORY[0x24BE2D578]();
}

uint64_t sub_23A59ECBC()
{
  return MEMORY[0x24BE2D580]();
}

uint64_t sub_23A59ECC8()
{
  return MEMORY[0x24BE2D588]();
}

uint64_t sub_23A59ECD4()
{
  return MEMORY[0x24BE2D590]();
}

uint64_t sub_23A59ECE0()
{
  return MEMORY[0x24BE2D598]();
}

uint64_t sub_23A59ECEC()
{
  return MEMORY[0x24BDB8E28]();
}

uint64_t sub_23A59ECF8()
{
  return MEMORY[0x24BDB8E30]();
}

uint64_t sub_23A59ED04()
{
  return MEMORY[0x24BEE5BD0]();
}

uint64_t sub_23A59ED10()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23A59ED1C()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23A59ED28()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23A59ED34()
{
  return MEMORY[0x24BDD0580]();
}

uint64_t sub_23A59ED40()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_23A59ED4C()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23A59ED58()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23A59ED64()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_23A59ED70()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_23A59ED7C()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_23A59ED88()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_23A59ED94()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_23A59EDA0()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_23A59EDAC()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_23A59EDB8()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_23A59EDC4()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_23A59EDD0()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23A59EDDC()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23A59EDE8()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_23A59EDF4()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23A59EE00()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23A59EE0C()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23A59EE18()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23A59EE24()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23A59EE30()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23A59EE3C()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23A59EE48()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23A59EE54()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23A59EE60()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_23A59EE6C()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23A59EE78()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23A59EE84()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_23A59EE90()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_23A59EE9C()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_23A59EEA8()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_23A59EEB4()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23A59EEC0()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23A59EECC()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23A59EED8()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23A59EEE4()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23A59EEF0()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23A59EEFC()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23A59EF08()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23A59EF14()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23A59EF20()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23A59EF2C()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23A59EF38()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_23A59EF44()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_23A59EF50()
{
  return MEMORY[0x24BEE32E8]();
}

uint64_t sub_23A59EF5C()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23A59EF68()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23A59EF74()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_23A59EF80()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_23A59EF8C()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_23A59EF98()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23A59EFA4()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23A59EFB0()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23A59EFBC()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_23A59EFC8()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_23A59EFD4()
{
  return MEMORY[0x24BEE3438]();
}

uint64_t sub_23A59EFE0()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23A59EFEC()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23A59EFF8()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_23A59F004()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_23A59F010()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_23A59F01C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23A59F028()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23A59F034()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23A59F040()
{
  return MEMORY[0x24BE29EA0]();
}

uint64_t sub_23A59F04C()
{
  return MEMORY[0x24BE29EA8]();
}

uint64_t sub_23A59F058()
{
  return MEMORY[0x24BE29EB8]();
}

uint64_t sub_23A59F064()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23A59F070()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_23A59F07C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_23A59F088()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23A59F094()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_23A59F0A0()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_23A59F0AC()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_23A59F0B8()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_23A59F0C4()
{
  return MEMORY[0x24BE29EC8]();
}

uint64_t sub_23A59F0D0()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23A59F0DC()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_23A59F0E8()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23A59F0F4()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23A59F100()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23A59F10C()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23A59F118()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23A59F124()
{
  return MEMORY[0x24BEE4828]();
}

uint64_t sub_23A59F130()
{
  return MEMORY[0x24BEE48A0]();
}

uint64_t sub_23A59F13C()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23A59F148()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t CUNextID64()
{
  return MEMORY[0x24BE29178]();
}

uint64_t IsAppleInternalBuild()
{
  return MEMORY[0x24BE295B0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x24BDADF28](value);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x24BDAF438]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x24BEE4E38]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_isCurrentExecutor()
{
  return MEMORY[0x24BEE7250]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakCopyAssign()
{
  return MEMORY[0x24BEE5018]();
}

uint64_t swift_weakCopyInit()
{
  return MEMORY[0x24BEE5020]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_weakTakeAssign()
{
  return MEMORY[0x24BEE5040]();
}

uint64_t swift_weakTakeInit()
{
  return MEMORY[0x24BEE5048]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

void xpc_connection_activate(xpc_connection_t connection)
{
  MEMORY[0x24BDB0710](connection);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
  MEMORY[0x24BDB0718](connection);
}

xpc_connection_t xpc_connection_create(const char *name, dispatch_queue_t targetq)
{
  return (xpc_connection_t)MEMORY[0x24BDB0730](name, targetq);
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x24BDB0740](name, targetq, flags);
}

uint64_t xpc_connection_get_audit_token()
{
  return MEMORY[0x24BDB0758]();
}

uint64_t xpc_connection_get_peer_instance()
{
  return MEMORY[0x24BDB0780]();
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return MEMORY[0x24BDB0788](connection);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
  MEMORY[0x24BDB07A8](connection, message);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
  MEMORY[0x24BDB07C8](connection, handler);
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
  MEMORY[0x24BDB07E8](connection, targetq);
}

uint64_t xpc_copy_code_signing_identity_for_token()
{
  return MEMORY[0x24BDB0810]();
}

uint64_t xpc_copy_entitlement_for_token()
{
  return MEMORY[0x24BDB0830]();
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x24BDB08D0]();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x24BDB08D8](original);
}

uint64_t xpc_dictionary_expects_reply()
{
  return MEMORY[0x24BDB08E8]();
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x24BDB0908](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x24BDB0950](xdict, key);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x24BDB0A70](object);
}

