uint64_t sub_1D68151D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D680DF28(a1, (uint64_t (*)(_QWORD))type metadata accessor for SearchFeedConfigManager, (uint64_t)&off_1E9B42368, a2);
}

uint64_t sub_1D68151E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[6];

  v2 = sub_1D6E219EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED60AF58 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED698608);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5FAFA74();
  result = sub_1D6E19F64();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78050(0, &qword_1ED5F39E0);
    result = sub_1D6E19F70();
    if (v8[4])
    {
      sub_1D5FAE90C();
      swift_allocObject();
      return sub_1D6E23BDC();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D681534C(_QWORD *a1)
{
  return sub_1D6815B94(a1, (unint64_t *)&qword_1ED5F42B0, 0x1E0D58A40, (void (*)(_QWORD))type metadata accessor for SharedWithYouFeedPoolService);
}

uint64_t sub_1D6815368(_QWORD *a1)
{
  return sub_1D5EA8D8C(a1, (unint64_t *)&unk_1ED5F3BF0, MEMORY[0x1E0D5DFF0], (void (*)(_QWORD))type metadata accessor for SharedWithYouFeedGroupEmitterFactory, (void (*)(_BYTE *, uint64_t))sub_1D5E8D7A0);
}

uint64_t sub_1D681538C(_QWORD *a1)
{
  return sub_1D68153B0(a1, &qword_1ED60AD10, (uint64_t)&protocol descriptor for SharedWithYouFeedDataProviderType, (void (*)(_QWORD))type metadata accessor for SharedWithYouFeedServiceContextFactory, (void (*)(_BYTE *, uint64_t))sub_1D5E8D7A0);
}

uint64_t sub_1D68153B0(_QWORD *a1, unint64_t *a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(_BYTE *, uint64_t))
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, a2);
  result = sub_1D6E19F70();
  if (v13)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46A0);
    result = sub_1D6E19F64();
    if (result)
    {
      v10 = result;
      a4(0);
      v11 = swift_allocObject();
      a5(v12, v11 + 16);
      *(_QWORD *)(v11 + 56) = v10;
      return v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D68154B8(_QWORD *a1)
{
  return sub_1D6812350(a1, (uint64_t (*)(_QWORD))type metadata accessor for SharedWithYouFeedServiceConfigFetcher, (void (*)(_QWORD))sub_1D5FB0748, sub_1D681C964, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))MEMORY[0x1E0D5A2D8]);
}

uint64_t sub_1D68154DC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  _BYTE v18[24];
  uint64_t v19;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46A0);
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED601F40);
  result = sub_1D6E19F70();
  if (!v19)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5E95E0);
  result = sub_1D6E19F64();
  if (result)
  {
    v4 = result;
    v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    MEMORY[0x1E0C80A78](v5);
    v7 = (_QWORD *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    v9 = *v7;
    v10 = type metadata accessor for SharedWithYouFeedConfigManager();
    v17[3] = v10;
    v17[4] = &off_1E9B359B0;
    v17[0] = v9;
    type metadata accessor for SharedWithYouFeedServiceConfigFetcher();
    v11 = (_QWORD *)swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v10);
    MEMORY[0x1E0C80A78](v12);
    v14 = (_QWORD *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    v16 = *v14;
    v11[8] = v10;
    v11[9] = &off_1E9B359B0;
    v11[2] = 0xD000000000000011;
    v11[3] = 0x80000001D6F273F0;
    v11[4] = v3;
    v11[5] = v16;
    v11[10] = v4;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    return (uint64_t)v11;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D6815718()
{
  sub_1D5FAFA74();
  sub_1D6E1A780();
  swift_release();
  sub_1D5E78050(0, (unint64_t *)&unk_1ED601F40);
  sub_1D6E1A78C();
  return swift_release();
}

uint64_t sub_1D6815794(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_1;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[5];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for SharedWithYouFeedGroupEmitterFactory();
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5FB0214();
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46C0);
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BE0);
  result = sub_1D6E19F70();
  v3 = v13;
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = v14;
  v5 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v11[3] = v3;
  v11[4] = *(_QWORD *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  if (qword_1ED624198 != -1)
    swift_once();
  v7 = (void *)qword_1ED698E18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F38F0);
  v8 = v7;
  result = sub_1D6E19F70();
  if (v10)
  {
    sub_1D5FAFA74();
    swift_allocObject();
    v9 = sub_1D6E22094();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return v9;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1D68159FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D680DF28(a1, (uint64_t (*)(_QWORD))type metadata accessor for SharedWithYouFeedConfigManager, (uint64_t)&off_1E9B359B0, a2);
}

uint64_t sub_1D6815A10(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[6];

  v2 = sub_1D6E219EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED622C90 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED698DC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5FAF898();
  result = sub_1D6E19F64();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78050(0, &qword_1ED5F39E0);
    result = sub_1D6E19F70();
    if (v8[4])
    {
      sub_1D5FAE75C();
      swift_allocObject();
      return sub_1D6E23BDC();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6815B78(_QWORD *a1)
{
  return sub_1D6815B94(a1, (unint64_t *)&qword_1ED5F42B0, 0x1E0D58A40, (void (*)(_QWORD))type metadata accessor for SavedFeedPoolService);
}

uint64_t sub_1D6815B94(_QWORD *a1, unint64_t *a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E6F04C(0, a2);
  result = sub_1D6E19F64();
  if (result)
  {
    v8 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3C20);
    result = sub_1D6E19F70();
    if (v11)
    {
      a4(0);
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = v8;
      sub_1D5E8D7A0(&v10, v9 + 24);
      return v9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6815C98(_QWORD *a1)
{
  return sub_1D5EA8D8C(a1, (unint64_t *)&unk_1ED5F3BF0, MEMORY[0x1E0D5DFF0], (void (*)(_QWORD))type metadata accessor for SavedFeedGroupEmitterFactory, (void (*)(_BYTE *, uint64_t))sub_1D5E8D7A0);
}

uint64_t sub_1D6815CBC(_QWORD *a1)
{
  return sub_1D68153B0(a1, &qword_1ED615910, (uint64_t)&protocol descriptor for SavedFeedDataProviderType, (void (*)(_QWORD))type metadata accessor for SavedFeedServiceContextFactory, (void (*)(_BYTE *, uint64_t))sub_1D5E8D7A0);
}

uint64_t sub_1D6815CE0(_QWORD *a1)
{
  return sub_1D6812350(a1, (uint64_t (*)(_QWORD))type metadata accessor for SavedFeedServiceConfigFetcher, (void (*)(_QWORD))sub_1D5FB05E8, sub_1D681C948, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))MEMORY[0x1E0D5A2D8]);
}

uint64_t sub_1D6815D04(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  _BYTE v17[24];
  uint64_t v18;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46A0);
  result = sub_1D6E19F64();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78050(0, &qword_1ED5FEA28);
    result = sub_1D6E19F70();
    if (v18)
    {
      v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
      MEMORY[0x1E0C80A78](v4);
      v6 = (_QWORD *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v7 + 16))(v6);
      v8 = *v6;
      v9 = type metadata accessor for SavedFeedConfigManager();
      v16[3] = v9;
      v16[4] = &off_1E9AFD300;
      v16[0] = v8;
      type metadata accessor for SavedFeedServiceConfigFetcher();
      v10 = (_QWORD *)swift_allocObject();
      v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v9);
      MEMORY[0x1E0C80A78](v11);
      v13 = (_QWORD *)((char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v14 + 16))(v13);
      v15 = *v13;
      v10[8] = v9;
      v10[9] = &off_1E9AFD300;
      v10[2] = 0x6565466465766153;
      v10[3] = 0xE900000000000064;
      v10[4] = v3;
      v10[5] = v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      return (uint64_t)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6815EF0()
{
  sub_1D5FAF898();
  sub_1D6E1A780();
  swift_release();
  sub_1D5E78050(0, &qword_1ED5FEA28);
  sub_1D6E1A78C();
  return swift_release();
}

uint64_t sub_1D6815F6C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_1;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[5];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for SavedFeedGroupEmitterFactory();
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5FAFFEC();
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46C0);
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BE0);
  result = sub_1D6E19F70();
  v3 = v13;
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = v14;
  v5 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v11[3] = v3;
  v11[4] = *(_QWORD *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  if (qword_1ED624198 != -1)
    swift_once();
  v7 = (void *)qword_1ED698E18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F38F0);
  v8 = v7;
  result = sub_1D6E19F70();
  if (v10)
  {
    sub_1D5FAF898();
    swift_allocObject();
    v9 = sub_1D6E22094();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return v9;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1D68161D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D680DF28(a1, (uint64_t (*)(_QWORD))type metadata accessor for SavedFeedConfigManager, (uint64_t)&off_1E9AFD300, a2);
}

uint64_t sub_1D68161E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[6];

  v2 = sub_1D6E219EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED622C98 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED698DE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5FAF614();
  result = sub_1D6E19F64();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78050(0, &qword_1ED5F39E0);
    result = sub_1D6E19F70();
    if (v8[4])
    {
      sub_1D5FAE524();
      swift_allocObject();
      return sub_1D6E23BDC();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6816350(_QWORD *a1)
{
  return sub_1D6815B94(a1, (unint64_t *)&qword_1ED5F42B0, 0x1E0D58A40, (void (*)(_QWORD))type metadata accessor for HistoryFeedPoolService);
}

uint64_t sub_1D681636C(_QWORD *a1)
{
  return sub_1D5EA8D8C(a1, (unint64_t *)&unk_1ED5F3BF0, MEMORY[0x1E0D5DFF0], (void (*)(_QWORD))type metadata accessor for HistoryFeedGroupEmitterFactory, (void (*)(_BYTE *, uint64_t))sub_1D5E8D7A0);
}

uint64_t sub_1D6816390(_QWORD *a1)
{
  return sub_1D68153B0(a1, (unint64_t *)&unk_1ED616FA0, (uint64_t)&protocol descriptor for HistoryFeedDataProviderType, (void (*)(_QWORD))type metadata accessor for HistoryFeedServiceContextFactory, (void (*)(_BYTE *, uint64_t))sub_1D5E8D7A0);
}

uint64_t sub_1D68163B4(_QWORD *a1)
{
  return sub_1D6812350(a1, (uint64_t (*)(_QWORD))type metadata accessor for HistoryFeedServiceConfigFetcher, (void (*)(_QWORD))sub_1D5FB0548, sub_1D681C92C, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))MEMORY[0x1E0D5A2D8]);
}

uint64_t sub_1D68163D8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  _BYTE v17[24];
  uint64_t v18;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46A0);
  result = sub_1D6E19F64();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78050(0, &qword_1ED5FF668);
    result = sub_1D6E19F70();
    if (v18)
    {
      v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
      MEMORY[0x1E0C80A78](v4);
      v6 = (_QWORD *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v7 + 16))(v6);
      v8 = *v6;
      v9 = type metadata accessor for HistoryFeedConfigManager();
      v16[3] = v9;
      v16[4] = &off_1E9AD1828;
      v16[0] = v8;
      type metadata accessor for HistoryFeedServiceConfigFetcher();
      v10 = (_QWORD *)swift_allocObject();
      v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v9);
      MEMORY[0x1E0C80A78](v11);
      v13 = (_QWORD *)((char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v14 + 16))(v13);
      v15 = *v13;
      v10[8] = v9;
      v10[9] = &off_1E9AD1828;
      v10[2] = 0x4679726F74736948;
      v10[3] = 0xEB00000000646565;
      v10[4] = v3;
      v10[5] = v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      return (uint64_t)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D68165C8()
{
  sub_1D5FAF614();
  sub_1D6E1A780();
  swift_release();
  sub_1D5E78050(0, &qword_1ED5FF668);
  sub_1D6E1A78C();
  return swift_release();
}

uint64_t sub_1D6816644(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_1;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[5];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for HistoryFeedGroupEmitterFactory();
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5FAFDC4();
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46C0);
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BE0);
  result = sub_1D6E19F70();
  v3 = v13;
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = v14;
  v5 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v11[3] = v3;
  v11[4] = *(_QWORD *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  if (qword_1ED624198 != -1)
    swift_once();
  v7 = (void *)qword_1ED698E18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F38F0);
  v8 = v7;
  result = sub_1D6E19F70();
  if (v10)
  {
    sub_1D5FAF614();
    swift_allocObject();
    v9 = sub_1D6E22094();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return v9;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1D68168AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D680DF28(a1, (uint64_t (*)(_QWORD))type metadata accessor for HistoryFeedConfigManager, (uint64_t)&off_1E9AD1828, a2);
}

uint64_t sub_1D68168C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  uint64_t v14[5];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_1D6E219EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFFD29D0 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1F00ABEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E82F10();
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5F39E0);
  result = sub_1D6E19F70();
  if (!v18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BE0);
  result = sub_1D6E19F70();
  v8 = v16;
  if (v16)
  {
    v9 = v17;
    v10 = __swift_project_boxed_opaque_existential_1(v15, v16);
    v14[3] = v8;
    v14[4] = *(_QWORD *)(v9 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
    sub_1D5FAEADC();
    swift_allocObject();
    v12 = sub_1D6E23BD0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return v12;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D6816AC8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5E9EB0);
  result = sub_1D6E19F70();
  if (v7)
  {
    v3 = v8;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3C20);
    result = sub_1D6E19F70();
    if (v6)
    {
      type metadata accessor for SearchMoreFeedPoolService();
      v4 = swift_allocObject();
      *(_QWORD *)(v4 + 16) = v7;
      *(_QWORD *)(v4 + 24) = v3;
      sub_1D5E8D7A0(&v5, v4 + 32);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6816BC8(_QWORD *a1)
{
  return sub_1D5EA8D8C(a1, (unint64_t *)&unk_1ED5F3BF0, MEMORY[0x1E0D5DFF0], (void (*)(_QWORD))type metadata accessor for SearchMoreFeedGroupEmitterFactory, (void (*)(_BYTE *, uint64_t))sub_1D5E8D7A0);
}

uint64_t sub_1D6816BEC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  _QWORD v17[3];
  uint64_t v18;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46A0);
  result = sub_1D6E19F64();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78050(0, &qword_1ED601298);
    result = sub_1D6E19F70();
    if (v18)
    {
      v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
      MEMORY[0x1E0C80A78](v4);
      v6 = (_QWORD *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v7 + 16))(v6);
      v8 = *v6;
      v9 = type metadata accessor for SearchMoreFeedConfigManager();
      v16[3] = v9;
      v16[4] = &off_1E9AEA9B0;
      v16[0] = v8;
      type metadata accessor for SearchMoreFeedServiceConfigFetcher();
      v10 = swift_allocObject();
      v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v9);
      MEMORY[0x1E0C80A78](v11);
      v13 = (_QWORD *)((char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v14 + 16))(v13);
      v15 = *v13;
      *(_QWORD *)(v10 + 64) = v9;
      *(_QWORD *)(v10 + 72) = &off_1E9AEA9B0;
      strcpy((char *)(v10 + 16), "SearchMoreFeed");
      *(_BYTE *)(v10 + 31) = -18;
      *(_QWORD *)(v10 + 32) = v3;
      *(_QWORD *)(v10 + 40) = v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      v17[0] = v10;
      sub_1D5FB0960();
      swift_allocObject();
      sub_1D5E6D8C0((unint64_t *)&unk_1EFFF2FF0, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedServiceConfigFetcher, (uint64_t)&unk_1D6EBEE80);
      return sub_1D6E217F4();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6816E38()
{
  sub_1D5E82F10();
  sub_1D6E1A780();
  swift_release();
  sub_1D5E78050(0, &qword_1ED601298);
  sub_1D6E1A78C();
  return swift_release();
}

uint64_t sub_1D6816EB4(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_1;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[5];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for SearchMoreFeedGroupEmitterFactory();
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5FB03D4();
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46C0);
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BE0);
  result = sub_1D6E19F70();
  v3 = v13;
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = v14;
  v5 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v11[3] = v3;
  v11[4] = *(_QWORD *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  if (qword_1ED624198 != -1)
    swift_once();
  v7 = (void *)qword_1ED698E18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F38F0);
  v8 = v7;
  result = sub_1D6E19F70();
  if (v10)
  {
    sub_1D5E82F10();
    swift_allocObject();
    v9 = sub_1D6E22094();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return v9;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1D681711C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D680DF28(a1, (uint64_t (*)(_QWORD))type metadata accessor for SearchMoreFeedConfigManager, (uint64_t)&off_1E9AEA9B0, a2);
}

uint64_t sub_1D6817130(_QWORD *a1)
{
  void *v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  if (qword_1ED62DB78 != -1)
    swift_once();
  v2 = (void *)qword_1ED698F38;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5F4E6D0();
  v3 = v2;
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BF0);
  result = sub_1D6E19F70();
  if (!v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  type metadata accessor for AudioFeedDatabaseGroupProcessor();
  v5 = swift_allocObject();
  sub_1D5E8D7A0(&v6, v5 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED60C1F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  result = sub_1D6E19F34();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6E1A318();
  result = sub_1D6E19F64();
  if (result)
  {
    *(_QWORD *)&v6 = v5;
    sub_1D5F4E7B4();
    swift_allocObject();
    return sub_1D6E23C9C();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D6817334(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];

  v2 = sub_1D6E219EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED5F9830 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED698348);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5F4E7B4();
  result = sub_1D6E19F34();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5F4E8F8();
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v9 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for AudioFeedServiceConfigFetcher();
  result = sub_1D6E19F64();
  if (result)
  {
    v10[2] = v8;
    v10[3] = 0;
    v10[0] = result;
    v10[1] = v9;
    sub_1D5F4E990();
    swift_allocObject();
    return sub_1D6E23B70();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D68174EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  uint64_t v14[5];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_1D6E219EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED5F9830 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED698348);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5F4E6D0();
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5F39E0);
  result = sub_1D6E19F70();
  if (!v18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BE0);
  result = sub_1D6E19F70();
  v8 = v16;
  if (v16)
  {
    v9 = v17;
    v10 = __swift_project_boxed_opaque_existential_1(v15, v16);
    v14[3] = v8;
    v14[4] = *(_QWORD *)(v9 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
    sub_1D5F4E8F8();
    swift_allocObject();
    v12 = sub_1D6E23BD0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return v12;
  }
LABEL_9:
  __break(1u);
  return result;
}

_QWORD *sub_1D68176F4(_QWORD *a1)
{
  _QWORD *result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5E7160);
  result = (_QWORD *)sub_1D6E19F70();
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E6F04C(0, (unint64_t *)&unk_1ED5F4340);
    result = (_QWORD *)sub_1D6E19F64();
    if (result)
    {
      v3 = result;
      type metadata accessor for AudioFeedPoolService();
      result = (_QWORD *)swift_allocObject();
      result[2] = v4;
      result[3] = v5;
      result[4] = v3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D68177DC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5F7CF0);
  result = sub_1D6E19F70();
  if (!v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BF0);
  result = sub_1D6E19F70();
  if (!v9)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5DE4E0);
  result = sub_1D6E19F70();
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5E0ED0);
  result = sub_1D6E19F70();
  if (v4)
  {
    type metadata accessor for AudioFeedGroupEmitterFactory();
    v3 = swift_allocObject();
    sub_1D5E8D7A0(&v10, v3 + 16);
    sub_1D5E8D7A0(&v8, v3 + 56);
    sub_1D5E8D7A0(&v6, v3 + 96);
    *(_QWORD *)(v3 + 136) = v4;
    *(_QWORD *)(v3 + 144) = v5;
    return v3;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D681798C()
{
  type metadata accessor for AudioFeedServiceContextFactory();
  return swift_allocObject();
}

uint64_t sub_1D68179AC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  __int128 v18;
  uint64_t v19;
  _BYTE v20[40];
  _BYTE v21[24];
  uint64_t v22;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46A0);
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5FE5F8);
  result = sub_1D6E19F70();
  if (!v22)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&qword_1ED62D8D8);
  sub_1D6E19F70();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3CA0);
  result = sub_1D6E19F70();
  if (!v19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4600);
  result = sub_1D6E19F64();
  if (result)
  {
    v4 = result;
    v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    MEMORY[0x1E0C80A78](v5);
    v7 = (_QWORD *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    v9 = *v7;
    v10 = type metadata accessor for AudioFeedConfigManager();
    v17[3] = v10;
    v17[4] = &off_1E9B11D88;
    v17[0] = v9;
    type metadata accessor for AudioFeedServiceConfigFetcher();
    v11 = (_QWORD *)swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v10);
    MEMORY[0x1E0C80A78](v12);
    v14 = (_QWORD *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    v16 = *v14;
    v11[8] = v10;
    v11[9] = &off_1E9B11D88;
    v11[2] = 0x6565466F69647541;
    v11[3] = 0xE900000000000064;
    v11[4] = v3;
    v11[5] = v16;
    sub_1D612136C((uint64_t)v20, (uint64_t)(v11 + 10), &qword_1ED62D8E0, (unint64_t *)&qword_1ED62D8D8, (uint64_t)&protocol descriptor for AudioFeedConfigTransformerType);
    sub_1D5E8D7A0(&v18, (uint64_t)(v11 + 15));
    v11[20] = v4;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return (uint64_t)v11;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D6817CAC(_QWORD *a1)
{
  return sub_1D6812350(a1, (uint64_t (*)(_QWORD))type metadata accessor for AudioFeedServiceConfigFetcher, (void (*)(_QWORD))sub_1D5E830A0, sub_1D681BF44, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))MEMORY[0x1E0D5A2D8]);
}

uint64_t sub_1D6817CD0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  _BYTE v18[24];
  uint64_t v19;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5FE600);
  result = sub_1D6E19F70();
  if (v19)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    MEMORY[0x1E0C80A78](v4);
    v6 = (_QWORD *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    v8 = *v6;
    v9 = type metadata accessor for AudioFeedConfigService();
    v17[3] = v9;
    v17[4] = &off_1E9B3FDC0;
    v17[0] = v8;
    v10 = type metadata accessor for AudioFeedConfigManager();
    v11 = swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v9);
    MEMORY[0x1E0C80A78](v12);
    v14 = (_QWORD *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    v16 = sub_1D5F4F92C(*v14, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    a2[3] = v10;
    a2[4] = (uint64_t)&off_1E9B11D88;
    *a2 = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D6817E6C()
{
  sub_1D5F4E6D0();
  sub_1D6E1A780();
  swift_release();
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5FE600);
  sub_1D6E1A78C();
  return swift_release();
}

uint64_t sub_1D6817EE8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_1;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[5];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for AudioFeedGroupEmitterFactory();
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5F4E658();
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46C0);
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BE0);
  result = sub_1D6E19F70();
  v3 = v13;
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = v14;
  v5 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v11[3] = v3;
  v11[4] = *(_QWORD *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  if (qword_1ED5F9988 != -1)
    swift_once();
  v7 = (void *)qword_1ED6983B0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F38F0);
  v8 = v7;
  result = sub_1D6E19F70();
  if (v10)
  {
    sub_1D5F4E6D0();
    swift_allocObject();
    v9 = sub_1D6E22094();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return v9;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1D6818150@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&unk_1ED5F4330);
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46A0);
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&unk_1ED603E90);
  result = sub_1D6E19F64();
  if (result)
  {
    v7 = result;
    v8 = type metadata accessor for AudioFeedConfigService();
    v9 = (_QWORD *)swift_allocObject();
    sub_1D6E22088();
    swift_allocObject();
    result = sub_1D6E2207C();
    v9[2] = result;
    v9[3] = v5;
    v9[4] = v6;
    v9[5] = v7;
    a2[3] = v8;
    a2[4] = &off_1E9B3FDC0;
    *a2 = v9;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D68182AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  uint64_t v14[5];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_1D6E219EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFFD29B8 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1F00ABE98);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5FAFB54();
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5F39E0);
  result = sub_1D6E19F70();
  if (!v18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BE0);
  result = sub_1D6E19F70();
  v8 = v16;
  if (v16)
  {
    v9 = v17;
    v10 = __swift_project_boxed_opaque_existential_1(v15, v16);
    v14[3] = v8;
    v14[4] = *(_QWORD *)(v9 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
    sub_1D5FAEA64();
    swift_allocObject();
    v12 = sub_1D6E23BD0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return v12;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D68184B4(_QWORD *a1)
{
  return sub_1D6815B94(a1, (unint64_t *)&unk_1ED5F4340, 0x1E0D58E70, (void (*)(_QWORD))type metadata accessor for AudioHistoryFeedPoolService);
}

uint64_t sub_1D68184D0(_QWORD *a1)
{
  return sub_1D5EA8D8C(a1, (unint64_t *)&unk_1ED5F3BF0, MEMORY[0x1E0D5DFF0], (void (*)(_QWORD))type metadata accessor for AudioHistoryFeedGroupEmitterFactory, (void (*)(_BYTE *, uint64_t))sub_1D5E8D7A0);
}

uint64_t sub_1D68184F4(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  _QWORD v17[3];
  uint64_t v18;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46A0);
  result = sub_1D6E19F64();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78050(0, &qword_1ED601860);
    result = sub_1D6E19F70();
    if (v18)
    {
      v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
      MEMORY[0x1E0C80A78](v4);
      v6 = (_QWORD *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v7 + 16))(v6);
      v8 = *v6;
      v9 = type metadata accessor for AudioHistoryFeedConfigManager();
      v16[3] = v9;
      v16[4] = &off_1E9AFC738;
      v16[0] = v8;
      type metadata accessor for AudioHistoryFeedServiceConfigFetcher();
      v10 = (_QWORD *)swift_allocObject();
      v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v9);
      MEMORY[0x1E0C80A78](v11);
      v13 = (_QWORD *)((char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v14 + 16))(v13);
      v15 = *v13;
      v10[8] = v9;
      v10[9] = &off_1E9AFC738;
      v10[2] = 0xD000000000000010;
      v10[3] = 0x80000001D6EEA8C0;
      v10[4] = v3;
      v10[5] = v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      v17[0] = v10;
      sub_1D5FB08A4();
      swift_allocObject();
      sub_1D5E6D8C0(&qword_1ED61FA08, (uint64_t (*)(uint64_t))type metadata accessor for AudioHistoryFeedServiceConfigFetcher, (uint64_t)&unk_1D6E83510);
      return sub_1D6E217F4();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6818738()
{
  sub_1D5FAFB54();
  sub_1D6E1A780();
  swift_release();
  sub_1D5E78050(0, &qword_1ED601860);
  sub_1D6E1A78C();
  return swift_release();
}

uint64_t sub_1D68187B4(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_1;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[5];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for AudioHistoryFeedGroupEmitterFactory();
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D681BF60();
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46C0);
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BE0);
  result = sub_1D6E19F70();
  v3 = v13;
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = v14;
  v5 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v11[3] = v3;
  v11[4] = *(_QWORD *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  if (qword_1ED624158 != -1)
    swift_once();
  v7 = (void *)qword_1ED6987C8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F38F0);
  v8 = v7;
  result = sub_1D6E19F70();
  if (v10)
  {
    sub_1D5FAFB54();
    swift_allocObject();
    v9 = sub_1D6E22094();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return v9;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1D6818A1C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D680DF28(a1, (uint64_t (*)(_QWORD))type metadata accessor for AudioHistoryFeedConfigManager, (uint64_t)&off_1E9AFC738, a2);
}

uint64_t sub_1D6818A30(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  uint64_t v14[5];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_1D6E219EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFFD29C0 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1F00ABEB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E82FD8();
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5F39E0);
  result = sub_1D6E19F70();
  if (!v18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BE0);
  result = sub_1D6E19F70();
  v8 = v16;
  if (v16)
  {
    v9 = v17;
    v10 = __swift_project_boxed_opaque_existential_1(v15, v16);
    v14[3] = v8;
    v14[4] = *(_QWORD *)(v9 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
    sub_1D5FAE9EC();
    swift_allocObject();
    v12 = sub_1D6E23BD0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return v12;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D6818C38(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  _BYTE v15[24];
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5E86D0);
  result = sub_1D6E19F70();
  if (v16)
  {
    v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    MEMORY[0x1E0C80A78](v2);
    v4 = (_QWORD *)((char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v5 + 16))(v4);
    v6 = *v4;
    v7 = type metadata accessor for AudioPlaylistStore();
    v14[3] = v7;
    v14[4] = &off_1E9AD0FA0;
    v14[0] = v6;
    type metadata accessor for AudioPlaylistFeedPoolService();
    v8 = (_QWORD *)swift_allocObject();
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v7);
    MEMORY[0x1E0C80A78](v9);
    v11 = (_QWORD *)((char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    v13 = *v11;
    v8[5] = v7;
    v8[6] = &off_1E9AD0FA0;
    v8[2] = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return (uint64_t)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D6818DB4(_QWORD *a1)
{
  return sub_1D5EA8D8C(a1, (unint64_t *)&unk_1ED5F3BF0, MEMORY[0x1E0D5DFF0], (void (*)(_QWORD))type metadata accessor for AudioPlaylistFeedGroupEmitterFactory, (void (*)(_BYTE *, uint64_t))sub_1D5E8D7A0);
}

uint64_t sub_1D6818DD8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  _QWORD v17[3];
  uint64_t v18;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46A0);
  result = sub_1D6E19F64();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78050(0, qword_1ED601CE8);
    result = sub_1D6E19F70();
    if (v18)
    {
      v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
      MEMORY[0x1E0C80A78](v4);
      v6 = (_QWORD *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v7 + 16))(v6);
      v8 = *v6;
      v9 = type metadata accessor for AudioPlaylistFeedConfigManager();
      v16[3] = v9;
      v16[4] = &off_1E9AB7B48;
      v16[0] = v8;
      type metadata accessor for AudioPlaylistFeedServiceConfigFetcher();
      v10 = (_QWORD *)swift_allocObject();
      v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v9);
      MEMORY[0x1E0C80A78](v11);
      v13 = (_QWORD *)((char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v14 + 16))(v13);
      v15 = *v13;
      v10[8] = v9;
      v10[9] = &off_1E9AB7B48;
      v10[2] = 0xD000000000000011;
      v10[3] = 0x80000001D6EF39F0;
      v10[4] = v3;
      v10[5] = v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      v17[0] = v10;
      sub_1D5FB07E8();
      swift_allocObject();
      sub_1D5E6D8C0(&qword_1ED620648, (uint64_t (*)(uint64_t))type metadata accessor for AudioPlaylistFeedServiceConfigFetcher, (uint64_t)&unk_1D6EC62F0);
      return sub_1D6E217F4();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D681901C()
{
  sub_1D5E82FD8();
  sub_1D6E1A780();
  swift_release();
  sub_1D5E78050(0, qword_1ED601CE8);
  sub_1D6E1A78C();
  return swift_release();
}

uint64_t sub_1D6819098(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_1;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[5];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for AudioPlaylistFeedGroupEmitterFactory();
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5FB02F4();
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46C0);
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3BE0);
  result = sub_1D6E19F70();
  v3 = v13;
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = v14;
  v5 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v11[3] = v3;
  v11[4] = *(_QWORD *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  if (qword_1ED624170 != -1)
    swift_once();
  v7 = (void *)qword_1ED6987D0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F38F0);
  v8 = v7;
  result = sub_1D6E19F70();
  if (v10)
  {
    sub_1D5E82FD8();
    swift_allocObject();
    v9 = sub_1D6E22094();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return v9;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1D6819300@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D680DF28(a1, (uint64_t (*)(_QWORD))type metadata accessor for AudioPlaylistFeedConfigManager, (uint64_t)&off_1E9AB7B48, a2);
}

uint64_t sub_1D6819314@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E6F04C(0, &qword_1ED5F45E8);
  result = sub_1D6E19F64();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5E78884(0, &qword_1ED5F4660);
    result = sub_1D6E19F64();
    if (result)
    {
      v6 = result;
      v7 = type metadata accessor for PushNotificationService();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v5;
      *(_QWORD *)(result + 24) = v6;
      a2[3] = v7;
      a2[4] = (uint64_t)&off_1E9AD9E78;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D68193FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46A0);
  result = sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5F39E0);
  result = sub_1D6E19F70();
  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, &qword_1ED624108);
  result = sub_1D6E19F64();
  if (result)
  {
    v6 = result;
    v7 = type metadata accessor for LegacyMyMagazinesPersonalizationService();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v5;
    sub_1D5E8D7A0(&v9, v8 + 24);
    *(_QWORD *)(v8 + 64) = v6;
    a2[3] = v7;
    result = sub_1D5E6D8C0((unint64_t *)&unk_1EFFF2FE0, (uint64_t (*)(uint64_t))type metadata accessor for LegacyMyMagazinesPersonalizationService, (uint64_t)&unk_1D6E3B198);
    a2[4] = result;
    *a2 = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void *sub_1D681956C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  id v13;
  _BYTE v14[24];
  uint64_t v15;
  _BYTE v16[24];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5F46A0);
  result = (void *)sub_1D6E19F64();
  if (!result)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v5 = objc_msgSend(result, sel_possiblyUnfetchedAppConfiguration);
  swift_unknownObjectRelease();
  if ((objc_msgSend(v5, sel_respondsToSelector_, sel_enableTabiMyMagazinesPersonalization) & 1) != 0)
    objc_msgSend(v5, sel_enableTabiMyMagazinesPersonalization);
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, &qword_1ED5F4538);
  result = (void *)sub_1D6E19F64();
  if (!result)
    goto LABEL_15;
  v6 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5F7750);
  result = (void *)sub_1D6E19F70();
  if (!v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&unk_1ED5F4620);
  result = (void *)sub_1D6E19F64();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v7 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4600);
  result = (void *)sub_1D6E19F64();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E6F04C(0, (unint64_t *)&unk_1ED5F43E0);
  result = (void *)sub_1D6E19F64();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5E9C90);
  result = (void *)sub_1D6E19F70();
  if (!v18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5F3CA0);
  result = (void *)sub_1D6E19F70();
  if (!v17)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED60C1F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  result = (void *)sub_1D6E19F34();
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1EFFF2FD8);
  sub_1D6E19F40();
  result = (void *)swift_bridgeObjectRelease();
  if (v15)
  {
    v11 = (objc_class *)type metadata accessor for MyMagazinesStore();
    v12 = objc_allocWithZone(v11);
    v13 = sub_1D69859F4(v6, (uint64_t)v20, v7, v8, v9, v18, v19, (uint64_t)v16, v10, (uint64_t)v14);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    result = (void *)swift_release();
    a2[3] = v11;
    a2[4] = &off_1E9B1FE48;
    *a2 = v13;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1D68199EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5F7750);
  result = sub_1D6E19F70();
  if (v6)
  {
    v4 = type metadata accessor for AutomationMyMagazinesStore();
    swift_allocObject();
    result = (uint64_t)sub_1D62008B4(&v5);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1E9ACA068;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D6819A98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t result;

  v2 = type metadata accessor for StubMyMagazinesStore();
  v3 = swift_allocObject();
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB31C0];
  sub_1D5E847C4(0, &qword_1ED5E08C0, type metadata accessor for MyMagazinesState, MEMORY[0x1E0DB31C0]);
  swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1D6E19D30();
  sub_1D5E847C4(0, &qword_1ED5E08E0, (uint64_t (*)(uint64_t))sub_1D5F4EDE0, v4);
  swift_allocObject();
  result = sub_1D6E19D30();
  *(_QWORD *)(v3 + 24) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E9AF8D48;
  *a1 = v3;
  return result;
}

uint64_t sub_1D6819B60(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[5];
  _BYTE v27[24];
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1D5E78050(0, &qword_1ED5F7750);
  result = sub_1D6E19F70();
  if (!v30)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5E82A0);
  result = sub_1D6E19F70();
  if (!v28)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v7 + 16))(v6);
  v8 = *v6;
  v9 = type metadata accessor for IssueModelFactory();
  v26[3] = v9;
  v26[4] = &off_1E9B13588;
  v26[0] = v8;
  v10 = type metadata accessor for IssueModelReferenceService();
  v11 = (_QWORD *)swift_allocObject();
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v9);
  MEMORY[0x1E0C80A78](v12);
  v14 = (_QWORD *)((char *)&v26[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  v16 = *v14;
  v11[10] = v9;
  v11[11] = &off_1E9B13588;
  v11[7] = v16;
  sub_1D5E8D7A0(&v29, (uint64_t)(v11 + 2));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  v30 = v10;
  v31 = sub_1D5E6D8C0(&qword_1ED5DE6F8, (uint64_t (*)(uint64_t))type metadata accessor for IssueModelReferenceService, (uint64_t)&unk_1D6E39FBC);
  *(_QWORD *)&v29 = v11;
  sub_1D6E1A30C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1D5E6F04C(0, (unint64_t *)&unk_1ED624080);
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v17 = result;
  v18 = type metadata accessor for FCSportsEventReferenceService();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v17;
  v30 = v18;
  v31 = sub_1D5E6D8C0(&qword_1ED619358, (uint64_t (*)(uint64_t))type metadata accessor for FCSportsEventReferenceService, (uint64_t)&unk_1D6E8EED0);
  *(_QWORD *)&v29 = v19;
  sub_1D6E1A30C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5E95E0);
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v20 = result;
  v21 = type metadata accessor for FeatureAvailabilityReferenceService();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v20;
  v30 = v21;
  v31 = sub_1D5E6D8C0(&qword_1ED61F038, (uint64_t (*)(uint64_t))type metadata accessor for FeatureAvailabilityReferenceService, (uint64_t)&unk_1D6EC2120);
  *(_QWORD *)&v29 = v22;
  sub_1D6E1A30C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1D5E78050(0, &qword_1ED5EBFC8);
  result = sub_1D6E19F70();
  if (v30)
  {
    v23 = type metadata accessor for FeedDescriptorReferenceService();
    v24 = swift_allocObject();
    sub_1D5E8D7A0(&v29, v24 + 16);
    v30 = v23;
    v31 = sub_1D5E6D8C0(&qword_1ED61AC00, (uint64_t (*)(uint64_t))type metadata accessor for FeedDescriptorReferenceService, (uint64_t)&unk_1D6E4EFC8);
    *(_QWORD *)&v29 = v24;
    sub_1D6E1A30C();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D6819F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  unint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_1D6E216EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F43C0);
  *v7 = sub_1D6E27674();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = sub_1D6E21710();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v9 = (unint64_t *)(a2 + OBJC_IVAR____TtC7NewsUI215ShortcutService_observers);
  v10 = swift_beginAccess();
  v11 = *v9;
  MEMORY[0x1E0C80A78](v10);
  *(&v15 - 2) = a1;
  *(&v15 - 1) = (uint64_t)&off_1E9AC59C0;
  swift_bridgeObjectRetain();
  *v9 = (unint64_t)sub_1D5F07984((uint64_t (*)(uint64_t *))sub_1D5F07B84, &v15 - 4, v11);
  swift_bridgeObjectRelease();
  type metadata accessor for ShortcutServiceObserverProxy();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 24) = &off_1E9AC59C0;
  swift_unknownObjectWeakAssign();
  v13 = swift_beginAccess();
  MEMORY[0x1D828F58C](v13);
  if (*(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_5:
    sub_1D6E26E40();
  sub_1D6E26E70();
  sub_1D6E26DA4();
  return swift_endAccess();
}

uint64_t sub_1D681A184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  unint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_1D6E216EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F43C0);
  *v7 = sub_1D6E27674();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = sub_1D6E21710();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v9 = (unint64_t *)(a2 + OBJC_IVAR____TtC7NewsUI215ShortcutService_observers);
  v10 = swift_beginAccess();
  v11 = *v9;
  MEMORY[0x1E0C80A78](v10);
  *(&v15 - 2) = a1;
  *(&v15 - 1) = (uint64_t)&off_1E9B0BF70;
  swift_bridgeObjectRetain();
  *v9 = (unint64_t)sub_1D5F07984((uint64_t (*)(uint64_t *))sub_1D5F07B6C, &v15 - 4, v11);
  swift_bridgeObjectRelease();
  type metadata accessor for ShortcutServiceObserverProxy();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 24) = &off_1E9B0BF70;
  swift_unknownObjectWeakAssign();
  v13 = swift_beginAccess();
  MEMORY[0x1D828F58C](v13);
  if (*(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_5:
    sub_1D6E26E40();
  sub_1D6E26E70();
  sub_1D6E26DA4();
  return swift_endAccess();
}

uint64_t sub_1D681A36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  unint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_1D6E216EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F43C0);
  *v7 = sub_1D6E27674();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = sub_1D6E21710();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v9 = (unint64_t *)(a2 + OBJC_IVAR____TtC7NewsUI215ShortcutService_observers);
  v10 = swift_beginAccess();
  v11 = *v9;
  MEMORY[0x1E0C80A78](v10);
  *(&v15 - 2) = a1;
  *(&v15 - 1) = (uint64_t)&off_1E9ADD2C0;
  swift_bridgeObjectRetain();
  *v9 = (unint64_t)sub_1D5F07984((uint64_t (*)(uint64_t *))sub_1D5F07B6C, &v15 - 4, v11);
  swift_bridgeObjectRelease();
  type metadata accessor for ShortcutServiceObserverProxy();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 24) = &off_1E9ADD2C0;
  swift_unknownObjectWeakAssign();
  v13 = swift_beginAccess();
  MEMORY[0x1D828F58C](v13);
  if (*(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_5:
    sub_1D6E26E40();
  sub_1D6E26E70();
  sub_1D6E26DA4();
  return swift_endAccess();
}

_QWORD *sub_1D681A554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, __int128 *a6, __int128 *a7, uint64_t a8, __int128 *a9, uint64_t a10, _QWORD *a11)
{
  a11[30] = type metadata accessor for TodayFeedPoolTracker();
  a11[31] = &off_1E9B14290;
  a11[27] = a10;
  a11[2] = a1;
  a11[3] = a2;
  a11[4] = a3;
  a11[5] = a4;
  sub_1D5E8D7A0(a5, (uint64_t)(a11 + 6));
  sub_1D5E8D7A0(a6, (uint64_t)(a11 + 17));
  sub_1D5E8D7A0(a7, (uint64_t)(a11 + 22));
  a11[11] = a8;
  sub_1D5E8D7A0(a9, (uint64_t)(a11 + 12));
  return a11;
}

_QWORD *sub_1D681A618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _QWORD *a13)
{
  id v20;
  __int128 v23;
  uint64_t v24;
  _UNKNOWN **v25;
  __int128 v26;
  uint64_t v27;
  _UNKNOWN **v28;
  __int128 v29;
  uint64_t v30;
  _UNKNOWN **v31;
  __int128 v32;
  uint64_t v33;
  _UNKNOWN **v34;
  __int128 v35;
  uint64_t v36;
  _UNKNOWN **v37;

  v36 = type metadata accessor for SearchService();
  v37 = &off_1E9B2F3C0;
  *(_QWORD *)&v35 = a1;
  v33 = type metadata accessor for HeadlineService();
  v34 = &off_1E9B25168;
  *(_QWORD *)&v32 = a4;
  v30 = type metadata accessor for SearchTagFactory();
  v31 = &off_1E9B494E0;
  *(_QWORD *)&v29 = a8;
  v27 = type metadata accessor for SearchArticleFactory();
  v28 = &off_1E9AF3BF0;
  *(_QWORD *)&v26 = a9;
  v24 = type metadata accessor for HeadlineModelFactory();
  v25 = &off_1E9B36088;
  *(_QWORD *)&v23 = a11;
  if (qword_1ED624198 != -1)
    swift_once();
  v20 = (id)qword_1ED698E18;
  sub_1D6E1C670();
  sub_1D5E8D7A0(&v35, (uint64_t)(a13 + 2));
  a13[7] = a2;
  a13[8] = a3;
  sub_1D5E8D7A0(&v32, (uint64_t)(a13 + 9));
  a13[14] = a5;
  a13[15] = a6;
  a13[16] = a7;
  sub_1D5E8D7A0(&v26, (uint64_t)(a13 + 22));
  sub_1D5E8D7A0(&v29, (uint64_t)(a13 + 17));
  a13[27] = a10;
  sub_1D5E8D7A0(&v23, (uint64_t)(a13 + 28));
  a13[33] = a12;
  return a13;
}

_QWORD *sub_1D681A7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  _UNKNOWN **v45;
  _QWORD v46[3];
  uint64_t v47;
  _UNKNOWN **v48;
  _QWORD v49[3];
  uint64_t v50;
  _UNKNOWN **v51;
  _QWORD v52[3];
  uint64_t v53;
  _UNKNOWN **v54;
  _QWORD v55[3];
  uint64_t v56;
  _UNKNOWN **v57;

  v42 = a7;
  v41 = a6;
  v40 = a5;
  v39 = a3;
  v56 = type metadata accessor for SearchService();
  v57 = &off_1E9B2F3C0;
  v55[0] = a1;
  v53 = type metadata accessor for HeadlineService();
  v54 = &off_1E9B25168;
  v52[0] = a4;
  v50 = type metadata accessor for SearchTagFactory();
  v51 = &off_1E9B494E0;
  v49[0] = a8;
  v47 = type metadata accessor for SearchArticleFactory();
  v48 = &off_1E9AF3BF0;
  v46[0] = a9;
  v45 = &off_1E9B36088;
  v44 = type metadata accessor for HeadlineModelFactory();
  v43[0] = a11;
  type metadata accessor for ModernSearchService();
  v16 = (_QWORD *)swift_allocObject();
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v55, v56);
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v52, v53);
  MEMORY[0x1E0C80A78](v21);
  v23 = (uint64_t *)((char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v49, v50);
  MEMORY[0x1E0C80A78](v25);
  v27 = (uint64_t *)((char *)&v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v46, v47);
  MEMORY[0x1E0C80A78](v29);
  v31 = (uint64_t *)((char *)&v39 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v32 + 16))(v31);
  v33 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
  MEMORY[0x1E0C80A78](v33);
  v35 = (uint64_t *)((char *)&v39 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v36 + 16))(v35);
  v37 = sub_1D681A618(*v19, a2, v39, *v23, v40, v41, v42, *v27, *v31, a10, *v35, a12, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  return v37;
}

uint64_t sub_1D681AAD4(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4, __int128 *a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 *a9, uint64_t a10, __int128 *a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 *a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 *a19, __int128 a20,uint64_t a21,uint64_t a22,uint64_t a23,__int128 *a24,__int128 *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,__int128 *a30,uint64_t a31,uint64_t a32,__int128 *a33,uint64_t a34)
{
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  *(_QWORD *)(a34 + 40) = &type metadata for NewspaperGroupService;
  *(_QWORD *)(a34 + 48) = &off_1E9B09188;
  v36 = swift_allocObject();
  *(_QWORD *)(a34 + 16) = v36;
  v37 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v36 + 176) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v36 + 192) = v37;
  *(_QWORD *)(v36 + 208) = *(_QWORD *)(a1 + 192);
  v38 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v36 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v36 + 128) = v38;
  v39 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v36 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v36 + 160) = v39;
  v40 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v36 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v36 + 64) = v40;
  v41 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v36 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v36 + 96) = v41;
  v42 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v36 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v36 + 32) = v42;
  *(_QWORD *)(a34 + 80) = type metadata accessor for LocalNewsTodayFeedGroupService();
  *(_QWORD *)(a34 + 88) = &off_1E9AD4550;
  *(_QWORD *)(a34 + 56) = a2;
  *(_QWORD *)(a34 + 352) = type metadata accessor for TagHighlightsService();
  *(_QWORD *)(a34 + 360) = &off_1E9B3C160;
  *(_QWORD *)(a34 + 328) = a12;
  *(_QWORD *)(a34 + 400) = type metadata accessor for LocalNewsChannelService();
  *(_QWORD *)(a34 + 408) = &off_1E9B0E2F8;
  *(_QWORD *)(a34 + 376) = a14;
  *(_QWORD *)(a34 + 480) = type metadata accessor for TodayFeedEngagementEventHandler();
  *(_QWORD *)(a34 + 488) = &off_1E9B0F0D0;
  *(_QWORD *)(a34 + 456) = a16;
  *(_QWORD *)(a34 + 600) = type metadata accessor for SportsFavoritesService();
  *(_QWORD *)(a34 + 608) = &off_1E9AFD048;
  *(_QWORD *)(a34 + 576) = a22;
  *(_QWORD *)(a34 + 640) = type metadata accessor for SportsRecommendationManager();
  *(_QWORD *)(a34 + 648) = &off_1E9B1B708;
  *(_QWORD *)(a34 + 616) = a23;
  *(_QWORD *)(a34 + 776) = type metadata accessor for MySportsTagService();
  *(_QWORD *)(a34 + 784) = &off_1E9B463D8;
  *(_QWORD *)(a34 + 752) = a28;
  *(_QWORD *)(a34 + 816) = type metadata accessor for HistoryService();
  *(_QWORD *)(a34 + 824) = &off_1E9B0F1D8;
  *(_QWORD *)(a34 + 792) = a29;
  sub_1D5E8D7A0(a3, a34 + 96);
  sub_1D5E8D7A0(a4, a34 + 136);
  sub_1D5E8D7A0(a5, a34 + 176);
  *(_QWORD *)(a34 + 216) = a6;
  *(_QWORD *)(a34 + 224) = a7;
  *(_QWORD *)(a34 + 232) = a8;
  sub_1D5E8D7A0(a9, a34 + 240);
  *(_QWORD *)(a34 + 280) = a10;
  sub_1D5E8D7A0(a11, a34 + 288);
  *(_QWORD *)(a34 + 368) = a13;
  sub_1D5E8D7A0(a15, a34 + 416);
  *(_QWORD *)(a34 + 496) = a17;
  *(_QWORD *)(a34 + 504) = a18;
  sub_1D5E8D7A0(a19, a34 + 512);
  *(_OWORD *)(a34 + 552) = a20;
  *(_QWORD *)(a34 + 568) = a21;
  sub_1D5E8D7A0(a24, a34 + 656);
  sub_1D5E8D7A0(a25, a34 + 696);
  *(_QWORD *)(a34 + 736) = a26;
  *(_QWORD *)(a34 + 744) = a27;
  sub_1D5E8D7A0(a30, a34 + 832);
  *(_QWORD *)(a34 + 872) = a31;
  *(_QWORD *)(a34 + 880) = a32;
  sub_1D5E8D7A0(a33, a34 + 888);
  return a34;
}

_QWORD *sub_1D681ADF0(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4, uint64_t a5, uint64_t a6, __int128 *a7, __int128 *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _QWORD *a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 *v30;
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _QWORD v34[3];
  uint64_t v35;
  _UNKNOWN **v36;

  v29 = a7;
  v30 = a8;
  v27 = a5;
  v28 = a6;
  v35 = type metadata accessor for SportsFavoritesService();
  v36 = &off_1E9AFD048;
  v34[0] = a11;
  v32 = type metadata accessor for MySportsTagService();
  v33 = &off_1E9B463D8;
  v31[0] = a12;
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  MEMORY[0x1E0C80A78](v21);
  v23 = (uint64_t *)((char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  v25 = sub_1D5E933D0(a1, a2, a3, a4, v27, v28, v29, v30, a9, a10, *v19, *v23, a13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return v25;
}

uint64_t sub_1D681AF74(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 *a10, __int128 a11, uint64_t a12, uint64_t a13, __int128 *a14, uint64_t a15, uint64_t a16, __int128 *a17, __int128 *a18, uint64_t a19, uint64_t a20,__int128 *a21,__int128 *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,__int128 *a27,__int128 *a28,__int128 *a29,__int128 *a30,__int128 *a31,uint64_t a32,uint64_t a33,__int128 *a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  *(_QWORD *)(a37 + 168) = &type metadata for ChannelLocationService;
  *(_QWORD *)(a37 + 176) = &off_1E9ABDE48;
  *(_QWORD *)(a37 + 144) = a5;
  *(_QWORD *)(a37 + 152) = a6;
  *(_QWORD *)(a37 + 208) = type metadata accessor for ChannelSectionsGroupPersonalizer();
  *(_QWORD *)(a37 + 216) = &off_1E9B578B0;
  *(_QWORD *)(a37 + 184) = a7;
  *(_QWORD *)(a37 + 448) = type metadata accessor for SportsFavoritesService();
  *(_QWORD *)(a37 + 456) = &off_1E9AFD048;
  *(_QWORD *)(a37 + 424) = a13;
  *(_QWORD *)(a37 + 368) = type metadata accessor for SportsScoreSectionService();
  *(_QWORD *)(a37 + 376) = &off_1E9B38158;
  *(_QWORD *)(a37 + 344) = a15;
  *(_QWORD *)(a37 + 408) = type metadata accessor for TagHighlightsService();
  *(_QWORD *)(a37 + 416) = &off_1E9B3C160;
  *(_QWORD *)(a37 + 384) = a16;
  *(_QWORD *)(a37 + 568) = type metadata accessor for PromotedHeadlineService();
  *(_QWORD *)(a37 + 576) = &off_1E9ACD570;
  *(_QWORD *)(a37 + 544) = a19;
  *(_QWORD *)(a37 + 704) = type metadata accessor for SportsRecommendationManager();
  *(_QWORD *)(a37 + 712) = &off_1E9B1B708;
  *(_QWORD *)(a37 + 680) = a24;
  *(_QWORD *)(a37 + 944) = type metadata accessor for MySportsTagService();
  *(_QWORD *)(a37 + 952) = &off_1E9B463D8;
  *(_QWORD *)(a37 + 920) = a25;
  *(_QWORD *)(a37 + 1040) = type metadata accessor for PuzzleArchiveFilterOptionsManager();
  *(_QWORD *)(a37 + 1048) = &off_1E9B1B978;
  *(_QWORD *)(a37 + 1016) = a33;
  *(_QWORD *)(a37 + 16) = a1;
  sub_1D5E8D7A0(a2, a37 + 24);
  sub_1D5E8D7A0(a3, a37 + 64);
  sub_1D5E8D7A0(a4, a37 + 104);
  *(_QWORD *)(a37 + 224) = a8;
  *(_QWORD *)(a37 + 232) = a9;
  sub_1D5E8D7A0(a10, a37 + 240);
  *(_OWORD *)(a37 + 280) = a11;
  *(_QWORD *)(a37 + 296) = a12;
  sub_1D5E8D7A0(a14, a37 + 304);
  sub_1D5E8D7A0(a17, a37 + 464);
  sub_1D5E8D7A0(a18, a37 + 504);
  *(_QWORD *)(a37 + 584) = a20;
  sub_1D5E8D7A0(a21, a37 + 592);
  sub_1D5E8D7A0(a22, a37 + 632);
  *(_QWORD *)(a37 + 672) = a23;
  *(_QWORD *)(a37 + 960) = a26;
  sub_1D5E8D7A0(a27, a37 + 720);
  sub_1D5E8D7A0(a28, a37 + 760);
  sub_1D5E8D7A0(a29, a37 + 800);
  sub_1D5E8D7A0(a30, a37 + 840);
  sub_1D5E8D7A0(a31, a37 + 880);
  *(_QWORD *)(a37 + 968) = a32;
  sub_1D5E8D7A0(a34, a37 + 976);
  *(_QWORD *)(a37 + 1056) = a35;
  *(_QWORD *)(a37 + 1064) = a36;
  return a37;
}

uint64_t sub_1D681B264(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11, uint64_t a12, __int128 *a13, uint64_t a14, uint64_t a15, __int128 *a16, __int128 *a17, uint64_t a18, __int128 a19, __int128 *a20,uint64_t a21,uint64_t a22,uint64_t a23,__int128 a24,__int128 a25,__int128 a26,uint64_t a27,uint64_t a28,__int128 a29,uint64_t a30)
{
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 *v77;
  __int128 *v78;
  __int128 v79;
  __int128 *v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  __int128 *v88;
  __int128 *v89;
  __int128 *v90;
  uint64_t v91;
  _QWORD v92[3];
  uint64_t v93;
  _UNKNOWN **v94;
  _QWORD v95[3];
  uint64_t v96;
  _UNKNOWN **v97;
  _QWORD v98[3];
  uint64_t v99;
  _UNKNOWN **v100;
  _QWORD v101[3];
  uint64_t v102;
  _UNKNOWN **v103;
  _QWORD v104[3];
  uint64_t v105;
  _UNKNOWN **v106;
  _QWORD v107[3];
  uint64_t v108;
  _UNKNOWN **v109;
  _QWORD v110[3];
  uint64_t v111;
  _UNKNOWN **v112;
  _QWORD v113[5];
  _QWORD v114[6];

  v90 = a4;
  v91 = a8;
  v88 = a2;
  v89 = a3;
  v87 = a1;
  v86 = a9;
  v85 = a10;
  v84 = a19;
  v83 = a20;
  v82 = a21;
  v79 = a24;
  v76 = a25;
  v75 = a26;
  v73 = a29;
  v72 = a30;
  v74 = a27;
  v77 = a17;
  v78 = a16;
  v80 = a13;
  v81 = a11;
  v114[3] = &type metadata for ChannelLocationService;
  v114[4] = &off_1E9ABDE48;
  v114[0] = a5;
  v114[1] = a6;
  v31 = type metadata accessor for ChannelSectionsGroupPersonalizer();
  v113[3] = v31;
  v113[4] = &off_1E9B578B0;
  v113[0] = a7;
  v111 = type metadata accessor for SportsFavoritesService();
  v112 = &off_1E9AFD048;
  v110[0] = a12;
  v108 = type metadata accessor for SportsScoreSectionService();
  v109 = &off_1E9B38158;
  v107[0] = a14;
  v105 = type metadata accessor for TagHighlightsService();
  v106 = &off_1E9B3C160;
  v104[0] = a15;
  v102 = type metadata accessor for PromotedHeadlineService();
  v103 = &off_1E9ACD570;
  v101[0] = a18;
  v99 = type metadata accessor for SportsRecommendationManager();
  v100 = &off_1E9B1B708;
  v98[0] = a22;
  v96 = type metadata accessor for MySportsTagService();
  v97 = &off_1E9B463D8;
  v95[0] = a23;
  v93 = type metadata accessor for PuzzleArchiveFilterOptionsManager();
  v94 = &off_1E9B1B978;
  v92[0] = a28;
  type metadata accessor for TagFeedGroupEmitterFactory();
  v71 = swift_allocObject();
  v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v114, (uint64_t)&type metadata for ChannelLocationService);
  MEMORY[0x1E0C80A78](v32);
  v34 = (uint64_t *)((char *)&v69 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v35 + 16))(v34);
  v36 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v113, v31);
  MEMORY[0x1E0C80A78](v36);
  v70 = (uint64_t *)((char *)&v69 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void))(v38 + 16))();
  v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v110, v111);
  MEMORY[0x1E0C80A78](v39);
  v41 = (uint64_t *)((char *)&v69 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v42 + 16))(v41);
  v43 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v107, v108);
  MEMORY[0x1E0C80A78](v43);
  v45 = (uint64_t *)((char *)&v69 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v46 + 16))(v45);
  v47 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v104, v105);
  MEMORY[0x1E0C80A78](v47);
  v49 = (uint64_t *)((char *)&v69 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v50 + 16))(v49);
  v51 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v101, v102);
  MEMORY[0x1E0C80A78](v51);
  v53 = (uint64_t *)((char *)&v69 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v54 + 16))(v53);
  v55 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v98, v99);
  MEMORY[0x1E0C80A78](v55);
  v57 = (uint64_t *)((char *)&v69 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v58 + 16))(v57);
  v59 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v95, v96);
  MEMORY[0x1E0C80A78](v59);
  v61 = (uint64_t *)((char *)&v69 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v62 + 16))(v61);
  v63 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v92, v93);
  MEMORY[0x1E0C80A78](v63);
  v65 = (uint64_t *)((char *)&v69 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v66 + 16))(v65);
  v67 = sub_1D681AF74(v87, v88, v89, v90, *v34, v34[1], *v70, v91, v86, *((__int128 **)&v86 + 1), v85, v81, *v41, v80, *v45, *v49, v78, v77, *v53,
          v84,
          *((__int128 **)&v84 + 1),
          v83,
          v82,
          *v57,
          *v61,
          v79,
          *((__int128 **)&v79 + 1),
          (__int128 *)v76,
          *((__int128 **)&v76 + 1),
          (__int128 *)v75,
          *((__int128 **)&v75 + 1),
          v74,
          *v65,
          (__int128 *)v73,
          *((uint64_t *)&v73 + 1),
          v72,
          v71);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
  return v67;
}

uint64_t sub_1D681B828(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4, __int128 *a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 *a10, uint64_t a11, uint64_t a12, uint64_t a13, __int128 *a14, uint64_t a15, __int128 a16, __int128 a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,__int128 a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,__int128 a27,uint64_t a28,__int128 *a29)
{
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int128 *v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  uint64_t v85;
  __int128 v86;
  __int128 *v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 *v93;
  __int128 *v94;
  __int128 *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[3];
  uint64_t v100;
  _UNKNOWN **v101;
  _QWORD v102[3];
  uint64_t v103;
  _UNKNOWN **v104;
  _QWORD v105[3];
  uint64_t v106;
  _UNKNOWN **v107;
  _QWORD v108[3];
  uint64_t v109;
  _UNKNOWN **v110;
  _QWORD v111[3];
  uint64_t v112;
  _UNKNOWN **v113;
  _QWORD v114[3];
  uint64_t v115;
  _UNKNOWN **v116;
  _QWORD v117[3];
  uint64_t v118;
  _UNKNOWN **v119;
  _QWORD v120[5];
  _QWORD v121[6];

  v97 = a7;
  v98 = a8;
  v95 = a5;
  v96 = a6;
  v93 = a3;
  v94 = a4;
  v92 = a9;
  v91 = a16;
  v90 = a17;
  v89 = a18;
  v88 = a19;
  v86 = a22;
  v83 = a23;
  v82 = a24;
  v81 = a27;
  v80 = a28;
  v79 = a29;
  v78 = a26;
  v84 = a14;
  v85 = a12;
  v87 = a10;
  v121[3] = &type metadata for NewspaperGroupService;
  v121[4] = &off_1E9B09188;
  v31 = swift_allocObject();
  v121[0] = v31;
  v32 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v31 + 176) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v31 + 192) = v32;
  *(_QWORD *)(v31 + 208) = *(_QWORD *)(a1 + 192);
  v33 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v31 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v31 + 128) = v33;
  v34 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v31 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v31 + 160) = v34;
  v35 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v31 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v31 + 64) = v35;
  v36 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v31 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v31 + 96) = v36;
  v37 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v31 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v31 + 32) = v37;
  v38 = type metadata accessor for LocalNewsTodayFeedGroupService();
  v120[3] = v38;
  v120[4] = &off_1E9AD4550;
  v120[0] = a2;
  v118 = type metadata accessor for TagHighlightsService();
  v119 = &off_1E9B3C160;
  v117[0] = a11;
  v115 = type metadata accessor for LocalNewsChannelService();
  v116 = &off_1E9B0E2F8;
  v114[0] = a13;
  v112 = type metadata accessor for TodayFeedEngagementEventHandler();
  v113 = &off_1E9B0F0D0;
  v111[0] = a15;
  v109 = type metadata accessor for SportsFavoritesService();
  v110 = &off_1E9AFD048;
  v108[0] = a20;
  v106 = type metadata accessor for SportsRecommendationManager();
  v107 = &off_1E9B1B708;
  v105[0] = a21;
  v103 = type metadata accessor for MySportsTagService();
  v104 = &off_1E9B463D8;
  v102[0] = a25;
  v100 = type metadata accessor for HistoryService();
  v101 = &off_1E9B0F1D8;
  v99[0] = v78;
  type metadata accessor for TodayFeedGroupEmitterFactory();
  v77 = swift_allocObject();
  v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v121, (uint64_t)&type metadata for NewspaperGroupService);
  MEMORY[0x1E0C80A78](v39);
  v78 = (uint64_t)&v77 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v41 + 16))();
  v42 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v120, v38);
  MEMORY[0x1E0C80A78](v42);
  v44 = (uint64_t *)((char *)&v77 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v45 + 16))(v44);
  v46 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v117, v118);
  MEMORY[0x1E0C80A78](v46);
  v48 = (uint64_t *)((char *)&v77 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v49 + 16))(v48);
  v50 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v114, v115);
  MEMORY[0x1E0C80A78](v50);
  v52 = (uint64_t *)((char *)&v77 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v53 + 16))(v52);
  v54 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v111, v112);
  MEMORY[0x1E0C80A78](v54);
  v56 = (uint64_t *)((char *)&v77 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v57 + 16))(v56);
  v58 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v108, v109);
  MEMORY[0x1E0C80A78](v58);
  v60 = (uint64_t *)((char *)&v77 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v61 + 16))(v60);
  v62 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v105, v106);
  MEMORY[0x1E0C80A78](v62);
  v64 = (uint64_t *)((char *)&v77 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v65 + 16))(v64);
  v66 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v102, v103);
  MEMORY[0x1E0C80A78](v66);
  v68 = (uint64_t *)((char *)&v77 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v69 + 16))(v68);
  v70 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v99, v100);
  MEMORY[0x1E0C80A78](v70);
  v72 = (uint64_t *)((char *)&v77 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v73 + 16))(v72);
  *((_QWORD *)&v76 + 1) = v89;
  *(_QWORD *)&v76 = *((_QWORD *)&v90 + 1);
  v74 = sub_1D681AAD4(v78, *v44, v93, v94, v95, v96, v97, v98, (__int128 *)v92, *((uint64_t *)&v92 + 1), v87, *v48, v85, *v52, v84, *v56, v91, *((uint64_t *)&v91 + 1), (__int128 *)v90,
          v76,
          v88,
          *v60,
          *v64,
          (__int128 *)v86,
          *((__int128 **)&v86 + 1),
          v83,
          v82,
          *v68,
          *v72,
          (__int128 *)v81,
          *((uint64_t *)&v81 + 1),
          v80,
          v79,
          v77);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v120);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v121);
  return v74;
}

uint64_t sub_1D681BE28()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D681BE4C(_QWORD *a1)
{
  return sub_1D680E750(a1);
}

void sub_1D681BE54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5F3A70)
  {
    sub_1D5FAF994();
    sub_1D5E6D8C0((unint64_t *)&unk_1ED5F37B0, (uint64_t (*)(uint64_t))sub_1D5FAF994, MEMORY[0x1E0D5AC10]);
    v0 = sub_1D6E23BF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5F3A70);
  }
}

void sub_1D681BECC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5DF798)
  {
    type metadata accessor for SearchFeedPoolService();
    sub_1D5E6D8C0(&qword_1ED5DDB10, (uint64_t (*)(uint64_t))type metadata accessor for SearchFeedPoolService, (uint64_t)&unk_1D6EB8CB8);
    v0 = sub_1D6E21D4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5DF798);
  }
}

uint64_t sub_1D681BF44()
{
  return sub_1D5E6D8C0(qword_1ED619000, (uint64_t (*)(uint64_t))type metadata accessor for AudioFeedServiceConfigFetcher, (uint64_t)&unk_1D6EB7630);
}

void sub_1D681BF60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED603B20)
  {
    type metadata accessor for AudioHistoryFeedPoolService();
    sub_1D5E6D8C0(&qword_1ED5FEC10, (uint64_t (*)(uint64_t))type metadata accessor for AudioHistoryFeedPoolService, (uint64_t)&unk_1D6ED9A1C);
    v0 = sub_1D6E21D4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED603B20);
  }
}

char *sub_1D681BFD8(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char *a6)
{
  objc_class *ObjectType;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  objc_super v19;
  _QWORD v20[5];
  _QWORD v21[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v21[3] = type metadata accessor for HeadlineModelFactory();
  v21[4] = &off_1E9B36088;
  v21[0] = a4;
  v13 = type metadata accessor for HeadlineService();
  *(_QWORD *)&a6[OBJC_IVAR____TtC7NewsUI212SavedService_observers] = MEMORY[0x1E0DEE9D8];
  v20[3] = v13;
  v20[4] = &off_1E9B25168;
  *(_QWORD *)&a6[OBJC_IVAR____TtC7NewsUI212SavedService_readingList] = a1;
  v20[0] = a5;
  *(_QWORD *)&a6[OBJC_IVAR____TtC7NewsUI212SavedService_headlineStreamingResults] = a2;
  *(_QWORD *)&a6[OBJC_IVAR____TtC7NewsUI212SavedService_articleController] = a3;
  sub_1D5E96490((uint64_t)v21, (uint64_t)&a6[OBJC_IVAR____TtC7NewsUI212SavedService_headlineModelFactory]);
  sub_1D5E96490((uint64_t)v20, (uint64_t)&a6[OBJC_IVAR____TtC7NewsUI212SavedService_headlineService]);
  v19.receiver = a6;
  v19.super_class = ObjectType;
  v14 = a1;
  v15 = a2;
  v16 = a3;
  v17 = (char *)objc_msgSendSuper2(&v19, sel_init);
  objc_msgSend(*(id *)&v17[OBJC_IVAR____TtC7NewsUI212SavedService_readingList], sel_addObserver_, v17, v19.receiver, v19.super_class, v20[0]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v17;
}

char *sub_1D681C118(void *a1, void *a2, void *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  _QWORD v22[3];
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[3];
  uint64_t v26;
  _UNKNOWN **v27;

  v10 = *a5;
  v26 = type metadata accessor for HeadlineModelFactory();
  v27 = &off_1E9B36088;
  v25[0] = a4;
  v23 = v10;
  v24 = &off_1E9B25168;
  v22[0] = a5;
  v11 = (char *)objc_allocWithZone((Class)type metadata accessor for SavedService());
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
  MEMORY[0x1E0C80A78](v12);
  v14 = (_QWORD *)((char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  MEMORY[0x1E0C80A78](v16);
  v18 = (_QWORD *)((char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  v20 = sub_1D681BFD8(a1, a2, a3, *v14, *v18, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v20;
}

char *sub_1D681C274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, char *a17)
{
  uint64_t v22;
  char *v23;
  char *v24;
  id v25;
  id v26;
  char *v27;
  void *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  objc_class *ObjectType;
  objc_super v37;
  _QWORD v38[5];
  _QWORD v39[5];
  _QWORD v40[5];
  _QWORD v41[5];
  _QWORD v42[6];

  ObjectType = (objc_class *)swift_getObjectType();
  v42[3] = type metadata accessor for CachedShortcutsManager();
  v42[4] = &off_1E9AB9738;
  v42[0] = a2;
  v41[3] = type metadata accessor for ShortcutService();
  v41[4] = &off_1E9ACCC00;
  v41[0] = a3;
  v40[3] = type metadata accessor for HeadlineService();
  v40[4] = &off_1E9B25168;
  v40[0] = a4;
  v39[3] = type metadata accessor for IssueModelFactory();
  v39[4] = &off_1E9B13588;
  v39[0] = a13;
  v38[3] = type metadata accessor for HeadlineModelFactory();
  v38[4] = &off_1E9B36088;
  v38[0] = a14;
  v22 = OBJC_IVAR____TtC7NewsUI216ShortcutsService_jsonDecoder;
  sub_1D6E19C94();
  swift_allocObject();
  v23 = a17;
  *(_QWORD *)&a17[v22] = sub_1D6E19C88();
  *(_QWORD *)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_appConfigManager] = a1;
  sub_1D5E96490((uint64_t)v42, (uint64_t)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_cacheManager]);
  sub_1D5E96490((uint64_t)v41, (uint64_t)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_favoritedShortcutService]);
  sub_1D5E96490((uint64_t)v40, (uint64_t)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_headlineService]);
  sub_1D5E96490(a5, (uint64_t)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_resourceService]);
  v24 = &v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_tagService];
  *(_QWORD *)v24 = a6;
  *((_QWORD *)v24 + 1) = a7;
  sub_1D5E96490(a8, (uint64_t)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_tagSuggestionService]);
  sub_1D5E96490(a9, (uint64_t)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_issueService]);
  sub_1D5E96490(a10, (uint64_t)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_puzzleAccessProvider]);
  sub_1D5E96490(a11, (uint64_t)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_puzzleService]);
  sub_1D5E96490(a12, (uint64_t)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_sportsEventController]);
  sub_1D5E96490((uint64_t)v39, (uint64_t)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_issueModelFactory]);
  sub_1D5E96490((uint64_t)v38, (uint64_t)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_headlineModelFactory]);
  *(_QWORD *)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_subscriptionController] = a15;
  *(_QWORD *)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_shortcutCategoryList] = a16;
  *(_QWORD *)&v23[OBJC_IVAR____TtC7NewsUI216ShortcutsService_observers] = MEMORY[0x1E0DEE9D8];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v25 = a15;
  v26 = a16;

  v37.receiver = v23;
  v37.super_class = ObjectType;
  v27 = (char *)objc_msgSendSuper2(&v37, sel_init);
  v28 = *(void **)&v27[OBJC_IVAR____TtC7NewsUI216ShortcutsService_subscriptionController];
  v29 = v27;
  objc_msgSend(v28, sel_addObserver_, v29);
  v30 = *__swift_project_boxed_opaque_existential_1(&v29[OBJC_IVAR____TtC7NewsUI216ShortcutsService_favoritedShortcutService], *(_QWORD *)&v29[OBJC_IVAR____TtC7NewsUI216ShortcutsService_favoritedShortcutService + 24]);
  v31 = v29;
  sub_1D6819F9C((uint64_t)v31, v30);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_1(a12);
  __swift_destroy_boxed_opaque_existential_1(a11);
  __swift_destroy_boxed_opaque_existential_1(a10);
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1(a8);
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return v31;
}

char *sub_1D681C5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  _UNKNOWN **v51;
  _QWORD v52[3];
  uint64_t v53;
  _UNKNOWN **v54;
  _QWORD v55[3];
  uint64_t v56;
  _UNKNOWN **v57;
  _QWORD v58[3];
  uint64_t v59;
  _UNKNOWN **v60;
  _QWORD v61[3];
  uint64_t v62;
  _UNKNOWN **v63;

  v48 = a8;
  v47 = a7;
  v46 = a6;
  v45 = a5;
  v44 = a1;
  v43 = a9;
  v42 = a10;
  v62 = type metadata accessor for CachedShortcutsManager();
  v63 = &off_1E9AB9738;
  v61[0] = a2;
  v59 = type metadata accessor for ShortcutService();
  v60 = &off_1E9ACCC00;
  v58[0] = a3;
  v56 = type metadata accessor for HeadlineService();
  v57 = &off_1E9B25168;
  v55[0] = a4;
  v53 = type metadata accessor for IssueModelFactory();
  v54 = &off_1E9B13588;
  v52[0] = a12;
  v51 = &off_1E9B36088;
  v50 = type metadata accessor for HeadlineModelFactory();
  v49[0] = a13;
  v18 = (char *)objc_allocWithZone((Class)type metadata accessor for ShortcutsService());
  v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v61, v62);
  MEMORY[0x1E0C80A78](v19);
  v21 = (uint64_t *)((char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
  MEMORY[0x1E0C80A78](v23);
  v25 = (uint64_t *)((char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v55, v56);
  MEMORY[0x1E0C80A78](v27);
  v29 = (uint64_t *)((char *)&v41 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v30 + 16))(v29);
  v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v52, v53);
  MEMORY[0x1E0C80A78](v31);
  v33 = (uint64_t *)((char *)&v41 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v34 + 16))(v33);
  v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v49, v50);
  MEMORY[0x1E0C80A78](v35);
  v37 = (uint64_t *)((char *)&v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v38 + 16))(v37);
  v39 = sub_1D681C274(v44, *v21, *v25, *v29, v45, v46, v47, v48, v43, *((uint64_t *)&v43 + 1), v42, a11, *v33, *v37, a14, a15, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  return v39;
}

uint64_t sub_1D681C92C()
{
  return sub_1D5E6D8C0(qword_1ED61BFD0, (uint64_t (*)(uint64_t))type metadata accessor for HistoryFeedServiceConfigFetcher, (uint64_t)&unk_1D6E36338);
}

uint64_t sub_1D681C948()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1ED619E70, (uint64_t (*)(uint64_t))type metadata accessor for SavedFeedServiceConfigFetcher, (uint64_t)&unk_1D6EA8EC8);
}

uint64_t sub_1D681C964()
{
  return sub_1D5E6D8C0(&qword_1ED60AE00, (uint64_t (*)(uint64_t))type metadata accessor for SharedWithYouFeedServiceConfigFetcher, (uint64_t)&unk_1D6EB99A8);
}

uint64_t sub_1D681C980()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  return swift_deallocObject();
}

uint64_t sub_1D681C9C4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D681C9F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1D681CA14()
{
  uint64_t v0;

  return sub_1D6D23998(*(void **)(v0 + 16));
}

char *sub_1D681CA1C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  objc_super v23;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC7NewsUI239TagFeedViewerPuzzleFullArchiveTitleView_containerView;
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v13 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC7NewsUI239TagFeedViewerPuzzleFullArchiveTitleView_titleLabel;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC7NewsUI239TagFeedViewerPuzzleFullArchiveTitleView_subtitleLabel;
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v23.receiver = v13;
  v23.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  v17 = *(void **)&v16[OBJC_IVAR____TtC7NewsUI239TagFeedViewerPuzzleFullArchiveTitleView_containerView];
  v18 = v16;
  objc_msgSend(v18, sel_addSubview_, v17);
  objc_msgSend(v17, sel_addSubview_, *(_QWORD *)&v18[OBJC_IVAR____TtC7NewsUI239TagFeedViewerPuzzleFullArchiveTitleView_titleLabel]);
  v19 = *(void **)&v18[OBJC_IVAR____TtC7NewsUI239TagFeedViewerPuzzleFullArchiveTitleView_subtitleLabel];
  v20 = v17;
  v21 = v19;
  objc_msgSend(v20, sel_addSubview_, v21);

  return v18;
}

id sub_1D681CBF8()
{
  char *v0;
  void *v1;
  double Width;
  double v3;
  CGFloat v4;
  double v5;
  double v6;
  double v7;
  double v8;
  objc_super v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI239TagFeedViewerPuzzleFullArchiveTitleView_containerView];
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v11);
  objc_msgSend(v1, sel_frame);
  v3 = CGRectGetWidth(v12);
  objc_msgSend(v0, sel_bounds);
  v4 = CGRectGetHeight(v13) * 0.5;
  objc_msgSend(v1, sel_frame);
  v5 = v4 - CGRectGetHeight(v14) * 0.5;
  if (v5 < 0.0)
    v6 = 0.0;
  else
    v6 = v5;
  v7 = Width * 0.5 - v3 * 0.5;
  objc_msgSend(v1, sel_frame);
  v8 = CGRectGetWidth(v15);
  objc_msgSend(v1, sel_frame);
  return objc_msgSend(v1, sel_setFrame_, v7, v6, v8, CGRectGetHeight(v16));
}

uint64_t type metadata accessor for TagFeedViewerPuzzleFullArchiveTitleView()
{
  return objc_opt_self();
}

void sub_1D681CDB0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC7NewsUI239TagFeedViewerPuzzleFullArchiveTitleView_containerView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC7NewsUI239TagFeedViewerPuzzleFullArchiveTitleView_titleLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC7NewsUI239TagFeedViewerPuzzleFullArchiveTitleView_subtitleLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1D6E28010();
  __break(1u);
}

uint64_t sub_1D681CEA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[4];

  v1 = a1 + 32;
  swift_beginAccess();
  sub_1D5E96490(v1, (uint64_t)v3);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1D5FB5328(&qword_1ED6012A8, (uint64_t)&unk_1D6E93F30);
  sub_1D6E1B2CC();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_1D681CF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[4];
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1D6E1B044();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1D5E96490(a1 + 32, (uint64_t)v22);
  v8 = v23;
  v9 = v24;
  v10 = __swift_project_boxed_opaque_existential_1(v22, v23);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v19[1] = v10;
    v19[2] = v9;
    v19[3] = v8;
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1D5F67E70(0, v11, 0);
    v12 = v21;
    v20 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v13 = a2 + v20;
    v14 = *(_QWORD *)(v5 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    do
    {
      v15(v7, v13, v4);
      v21 = v12;
      v17 = *(_QWORD *)(v12 + 16);
      v16 = *(_QWORD *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1D5F67E70(v16 > 1, v17 + 1, 1);
        v12 = v21;
      }
      *(_QWORD *)(v12 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v20 + v17 * v14, v7, v4);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  sub_1D5F67E9C(v12);
  swift_bridgeObjectRelease();
  sub_1D6E1B2D8();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t sub_1D681D110(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t result;

  result = MEMORY[0x1D82919D4](v2 + 16);
  if (result)
  {
    sub_1D69EE6A4(a1, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D681D168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = MEMORY[0x1D82919D4](v3 + 16);
  if (result)
  {
    sub_1D69EC914(a1, a2, a3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D681D1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = MEMORY[0x1D82919D4](v2 + 16);
  if (result)
  {
    sub_1D69ED110(a1, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D681D234()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D681D260()
{
  uint64_t v0;

  return sub_1D681CEA4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D681D268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _OWORD v32[2];

  v5 = sub_1D6E198BC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D6E17FC0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  if (a2)
  {
    v29 = v10;
    swift_getObjectType();
    sub_1D6E27740();
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v9);
    sub_1D5F11528();
    v16 = sub_1D6E16940();
    v30 = a3;
    v17 = v16;
    v18 = *(_QWORD *)(v16 - 8);
    v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v20 = swift_allocObject();
    v31 = v8;
    *(_OWORD *)(v20 + 16) = xmmword_1D6E32F90;
    v21 = v20 + v19;
    v22 = *MEMORY[0x1E0CF8170];
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 104))(v21, v22, v17);
    sub_1D5E6D8C0((unint64_t *)&unk_1ED5E0650, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53C48], MEMORY[0x1E0D53BE0]);
    sub_1D6E168E0();
    v8 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v9);
  }
  else
  {
    v22 = *MEMORY[0x1E0CF8170];
  }
  sub_1D6E15AF4();
  sub_1D6E198B0();
  sub_1D5F11528();
  v23 = sub_1D6E16940();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1D6E32F90;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 104))(v26 + v25, v22, v23);
  sub_1D5E6D8C0((unint64_t *)&unk_1ED609DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56320], MEMORY[0x1E0D56310]);
  sub_1D6E168E0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1D6E18F2C();
  sub_1D5E6D8C0(&qword_1ED609DA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55438], MEMORY[0x1E0D55430]);
  memset(v32, 0, sizeof(v32));
  sub_1D6E168F8();
  return sub_1D5F117D8((uint64_t)v32);
}

uint64_t type metadata accessor for WebEmbedCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_1D681D5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = sub_1D6E15BE4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_unknownObjectRetain();
  sub_1D6E16C04();
  return swift_release();
}

uint64_t sub_1D681D6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D6E15BE4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D681D740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D6E15BE4() - 8) + 80);
  return sub_1D681D268(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t type metadata accessor for FollowingLayoutConstants()
{
  return objc_opt_self();
}

uint64_t sub_1D681D7A0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  void **v4;

  v4 = (void **)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_1D681F4B4(*v4, a2, v2);
}

uint64_t sub_1D681D7D0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  void **v4;

  v4 = (void **)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_1D681F558(*v4, a2, v2);
}

void sub_1D681D8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  void *v8;
  _QWORD *v9;
  void *v10;
  char *v11;
  _QWORD aBlock[6];

  v4 = a1 + 20;
  if (__OFADD__(a1, 20))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(void **)&v3[OBJC_IVAR____TtC7NewsUI214HistoryService_headlineStreamingResults];
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a2;
    v9[3] = a3;
    v9[4] = v3;
    v9[5] = a1;
    aBlock[4] = sub_1D681FCD8;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D6921854;
    aBlock[3] = &block_descriptor_21_3;
    v10 = _Block_copy(aBlock);
    swift_retain();
    v11 = v3;
    swift_release();
    objc_msgSend(v8, sel_fetchObjectsUpToCount_qualityOfService_completion_, v4, 17, v10);
    _Block_release(v10);
    return;
  }
  sub_1D6E28004();
  __break(1u);
}

void sub_1D681D9F0(void *a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  uint64_t v35;

  if (a1)
  {
    v7 = a1;
    a2(a1, 256);

    return;
  }
  v10 = *(void **)(a4 + OBJC_IVAR____TtC7NewsUI214HistoryService_headlineStreamingResults);
  v11 = objc_msgSend(v10, sel_array);
  v12 = sub_1D5E6F04C(0, &qword_1EFFF3130);
  v13 = sub_1D6E26D80();

  v14 = v13 >> 62;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15 >= a5)
    v16 = a5;
  else
    v16 = v15;
  if (__OFADD__(a5, 20))
  {
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v15 >= a5 + 20)
    v17 = a5 + 20;
  else
    v17 = v15;
  if ((uint64_t)v17 < v16)
    goto LABEL_49;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v18 < v16)
    goto LABEL_50;
  if (v16 < 0)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v14)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v19 < (uint64_t)v17)
    goto LABEL_52;
  if ((v13 & 0xC000000000000001) != 0 && v16 != v17)
  {
    if (v16 >= v17)
    {
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v20 = v16;
    do
    {
      v21 = v20 + 1;
      sub_1D6E27ED8();
      v20 = v21;
    }
    while (v17 != v21);
  }
  if (!v14)
  {
    v12 = v13 & 0xFFFFFFFFFFFFFF8;
    v19 = (v13 & 0xFFFFFFFFFFFFFF8) + 32;
    v17 = (2 * v17) | 1;
    if ((v17 & 1) != 0)
      goto LABEL_29;
LABEL_36:
    swift_unknownObjectRetain();
LABEL_37:
    v24 = sub_1D61001A8(v12, v19, v16, v17);
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1D6E2804C();
  v19 = v25;
  v16 = v26;
  v17 = v27;
  swift_bridgeObjectRelease_n();
  if ((v17 & 1) == 0)
    goto LABEL_36;
LABEL_29:
  sub_1D6E282F8();
  swift_unknownObjectRetain_n();
  v22 = swift_dynamicCastClass();
  if (!v22)
  {
    swift_unknownObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
  }
  v23 = *(_QWORD *)(v22 + 16);
  swift_release();
  if (__OFSUB__(v17 >> 1, v16))
    goto LABEL_58;
  if (v23 != (v17 >> 1) - v16)
  {
LABEL_59:
    swift_unknownObjectRelease();
    goto LABEL_37;
  }
  v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_unknownObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
  }
LABEL_38:
  swift_unknownObjectRelease();
  v13 = (unint64_t)__swift_project_boxed_opaque_existential_1((_QWORD *)(a4 + OBJC_IVAR____TtC7NewsUI214HistoryService_headlineModelFactory), *(_QWORD *)(a4 + OBJC_IVAR____TtC7NewsUI214HistoryService_headlineModelFactory + 24));
  if ((v24 & 0x8000000000000000) == 0 && (v24 & 0x4000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    v28 = v24;
    sub_1D6E282EC();
    sub_1D5FAC880();
    goto LABEL_41;
  }
LABEL_53:
  sub_1D5FAC880();
  v28 = sub_1D6E28028();
LABEL_41:
  v29 = swift_release();
  v35 = *(_QWORD *)v13;
  MEMORY[0x1E0C80A78](v29);
  v34[2] = &v35;
  v30 = sub_1D5FDE158((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1D681FCE4, (uint64_t)v34, v28);
  swift_bridgeObjectRelease();
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    v33 = sub_1D6E28040();
    swift_bridgeObjectRelease();
    if (v33)
      goto LABEL_43;
LABEL_55:
    swift_bridgeObjectRelease();
    a2(0, 2);
    swift_unknownObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_55;
LABEL_43:
  if (objc_msgSend(v10, sel_isFinished))
  {
    v31 = v30;
    v32 = 1;
  }
  else
  {
    v31 = v30;
    v32 = 0;
  }
  a2((void *)v31, v32);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1D681DE64(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  unsigned int v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC7NewsUI214HistoryService_issueReadingHistory);
  v4 = objc_msgSend(a1, sel_identifier);
  if (!v4)
  {
    sub_1D6E26978();
    v4 = (id)sub_1D6E26948();
    swift_bridgeObjectRelease();
  }
  v5 = objc_msgSend(v3, sel_hasIssueWithIDBeenSeen_, v4);

  v6 = objc_msgSend(a1, sel_identifier);
  if (!v6)
  {
    sub_1D6E26978();
    v6 = (id)sub_1D6E26948();
    swift_bridgeObjectRelease();
  }
  v7 = objc_msgSend(v3, sel_hasIssueWithIDBeenVisited_, v6);

  v8 = objc_msgSend(a1, sel_identifier);
  if (!v8)
  {
    sub_1D6E26978();
    v8 = (id)sub_1D6E26948();
    swift_bridgeObjectRelease();
  }
  v9 = 4;
  if (!v5)
    v9 = 0;
  if (v7)
    v10 = 14;
  else
    v10 = v9;
  v11 = objc_msgSend(v3, sel_hasIssueWithIDBeenEngaged_, v8);

  if (v11)
    return 30;
  else
    return v10;
}

void sub_1D681DFB8(unint64_t a1, char a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *, uint64_t, uint64_t, uint64_t);
  char *v28;
  unint64_t v29;
  uint64_t ObjectType;
  _QWORD v31[8];

  ObjectType = swift_getObjectType();
  if ((a2 & 1) != 0)
  {
    sub_1D60A8940();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1D6E32F90;
    v13 = (id)a1;
    sub_1D6E27EA8();
    sub_1D6E26A98();
    v31[5] = a1;
    sub_1D5F2BB38();
    sub_1D6E27F98();
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 32) = 0;
    *(_QWORD *)(v12 + 40) = 0xE000000000000000;
    sub_1D6E283DC();
    swift_bridgeObjectRelease();
    sub_1D607B3C0((id)a1, 1);
    return;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1D6E28040();
    sub_1D607B3C0((id)a1, 0);
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v31[0] = MEMORY[0x1E0DEE9D8];
    sub_1D6228B18(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
    {
      __break(1u);
      goto LABEL_32;
    }
    v7 = v31[0];
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v6; ++i)
      {
        v9 = MEMORY[0x1D8290720](i, a1);
        v31[0] = v7;
        v11 = *(_QWORD *)(v7 + 16);
        v10 = *(_QWORD *)(v7 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1D6228B18(v10 > 1, v11 + 1, 1);
          v7 = v31[0];
        }
        *(_QWORD *)(v7 + 16) = v11 + 1;
        *(_QWORD *)(v7 + 8 * v11 + 32) = v9 | 0x8000000000000000;
      }
    }
    else
    {
      v14 = (uint64_t *)(a1 + 32);
      v15 = *(_QWORD *)(v31[0] + 16);
      do
      {
        v16 = *v14;
        v31[0] = v7;
        v17 = *(_QWORD *)(v7 + 24);
        swift_retain();
        if (v15 >= v17 >> 1)
        {
          sub_1D6228B18(v17 > 1, v15 + 1, 1);
          v7 = v31[0];
        }
        *(_QWORD *)(v7 + 16) = v15 + 1;
        *(_QWORD *)(v7 + 8 * v15 + 32) = v16 | 0x8000000000000000;
        ++v14;
        ++v15;
        --v6;
      }
      while (v6);
    }
  }
  v18 = &a3[OBJC_IVAR____TtC7NewsUI214HistoryService_observers];
  swift_beginAccess();
  v19 = *(_QWORD *)v18;
  if (!(*(_QWORD *)v18 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_19;
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v20 = sub_1D6E28040();
  if (!v20)
    goto LABEL_30;
LABEL_19:
  if (v20 >= 1)
  {
    v21 = 0;
    v29 = v19 & 0xC000000000000001;
    do
    {
      if (v29)
      {
        v23 = MEMORY[0x1D8290720](v21, v19);
      }
      else
      {
        v23 = *(_QWORD *)(v19 + 8 * v21 + 32);
        swift_retain();
      }
      v31[3] = ObjectType;
      v31[4] = &off_1E9B0F1D8;
      v31[0] = a3;
      if (MEMORY[0x1D82919D4](v23 + 16))
      {
        v24 = *(_QWORD *)(v23 + 24);
        v25 = swift_getObjectType();
        v26 = v19;
        v27 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v24 + 8);
        v28 = a3;
        v27(v31, v7, v25, v24);
        v19 = v26;
        swift_unknownObjectRelease();
      }
      else
      {
        v22 = a3;
      }
      ++v21;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);

      swift_release();
    }
    while (v20 != v21);
    goto LABEL_30;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1D681E498(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[7];

  v4 = sub_1D6E21668();
  v25 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D6E216B0();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D6E21674();
  v11 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v15 = a1;
    v16 = swift_bridgeObjectRetain();
    v17 = sub_1D681F5FC(v16, a1);
    swift_bridgeObjectRelease();

    sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F43C0);
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E0DEF548], v10);
    v18 = (void *)sub_1D6E276A4();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 24) = v17;
    aBlock[4] = sub_1D681FC68;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D5EB52E8;
    aBlock[3] = &block_descriptor_11_1;
    v21 = _Block_copy(aBlock);
    swift_retain();
    sub_1D6E2168C();
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1D60C56BC();
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F3FD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1D5ED16A0();
    sub_1D6E27D88();
    MEMORY[0x1D828FEBC](0, v9, v6, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D681E760(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[5];

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1D82919D4](v3);
  if (result)
  {
    v5 = (void *)result;
    sub_1D5E96490(result + OBJC_IVAR____TtC7NewsUI214HistoryService_headlineService, (uint64_t)v9);
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v6 = *MEMORY[0x1E0D58640];
    v7 = swift_allocObject();
    swift_beginAccess();
    v8 = (void *)MEMORY[0x1D82919D4](v3);
    swift_unknownObjectWeakInit();

    swift_retain();
    sub_1D69DE640(a2, v6, 17, (uint64_t)sub_1D681FC70, v7);
    swift_release_n();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  return result;
}

void sub_1D681E880(unint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  void (*v28)(_QWORD *, uint64_t, uint64_t, uint64_t);
  char *v29;
  unint64_t v30;
  _QWORD v31[11];

  if ((a2 & 1) != 0)
  {
    sub_1D60A8940();
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1D6E32F90;
    v14 = (id)a1;
    sub_1D6E27EA8();
    sub_1D6E26A98();
    v31[8] = a1;
    sub_1D5F2BB38();
    sub_1D6E27F98();
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 32) = 0;
    *(_QWORD *)(v13 + 40) = 0xE000000000000000;
    sub_1D6E283DC();
    swift_bridgeObjectRelease();
    sub_1D607B3C0((id)a1, 1);
    return;
  }
  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1D82919D4](v4);
  if (v5)
  {
    v6 = (char *)v5;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1D6E28040();
      sub_1D607B3C0((id)a1, 0);
    }
    else
    {
      v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x1E0DEE9D8];
    if (v7)
    {
      v31[0] = MEMORY[0x1E0DEE9D8];
      sub_1D6228B18(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      v8 = v31[0];
      if ((a1 & 0xC000000000000001) != 0)
      {
        for (i = 0; i != v7; ++i)
        {
          v10 = MEMORY[0x1D8290720](i, a1);
          v31[0] = v8;
          v12 = *(_QWORD *)(v8 + 16);
          v11 = *(_QWORD *)(v8 + 24);
          if (v12 >= v11 >> 1)
          {
            sub_1D6228B18(v11 > 1, v12 + 1, 1);
            v8 = v31[0];
          }
          *(_QWORD *)(v8 + 16) = v12 + 1;
          *(_QWORD *)(v8 + 8 * v12 + 32) = v10;
        }
      }
      else
      {
        v15 = (uint64_t *)(a1 + 32);
        v16 = *(_QWORD *)(v31[0] + 16);
        do
        {
          v17 = *v15;
          v31[0] = v8;
          v18 = *(_QWORD *)(v8 + 24);
          swift_retain();
          if (v16 >= v18 >> 1)
          {
            sub_1D6228B18(v18 > 1, v16 + 1, 1);
            v8 = v31[0];
          }
          *(_QWORD *)(v8 + 16) = v16 + 1;
          *(_QWORD *)(v8 + 8 * v16 + 32) = v17;
          ++v15;
          ++v16;
          --v7;
        }
        while (v7);
      }
    }
    v19 = &v6[OBJC_IVAR____TtC7NewsUI214HistoryService_observers];
    swift_beginAccess();
    v20 = *(_QWORD *)v19;
    if (*(_QWORD *)v19 >> 62)
    {
      swift_bridgeObjectRetain();
      v21 = sub_1D6E28040();
      if (v21)
      {
LABEL_20:
        if (v21 >= 1)
        {
          v22 = 0;
          v30 = v20 & 0xC000000000000001;
          do
          {
            if (v30)
            {
              v24 = MEMORY[0x1D8290720](v22, v20);
            }
            else
            {
              v24 = *(_QWORD *)(v20 + 8 * v22 + 32);
              swift_retain();
            }
            v31[3] = type metadata accessor for HistoryService();
            v31[4] = &off_1E9B0F1D8;
            v31[0] = v6;
            if (MEMORY[0x1D82919D4](v24 + 16))
            {
              v25 = *(_QWORD *)(v24 + 24);
              ObjectType = swift_getObjectType();
              v27 = v20;
              v28 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v25 + 8);
              v29 = v6;
              v28(v31, v8, ObjectType, v25);
              v20 = v27;
              swift_unknownObjectRelease();
            }
            else
            {
              v23 = v6;
            }
            ++v22;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);

            swift_release();
          }
          while (v21 != v22);
          goto LABEL_31;
        }
LABEL_34:
        __break(1u);
        return;
      }
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v21)
        goto LABEL_20;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1D681ECC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[5];

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1D82919D4](v3);
  if (result)
  {
    v5 = (void *)result;
    sub_1D5E96490(result + OBJC_IVAR____TtC7NewsUI214HistoryService_headlineService, (uint64_t)v9);
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v6 = *MEMORY[0x1E0D58640];
    v7 = swift_allocObject();
    swift_beginAccess();
    v8 = (void *)MEMORY[0x1D82919D4](v3);
    swift_unknownObjectWeakInit();

    swift_retain();
    sub_1D69DE640(a2, v6, 17, (uint64_t)sub_1D681FC58, v7);
    swift_release_n();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  return result;
}

void sub_1D681EDE4(unint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  void (*v28)(_QWORD *, uint64_t, uint64_t, uint64_t);
  char *v29;
  unint64_t v30;
  _QWORD v31[11];

  if ((a2 & 1) != 0)
  {
    sub_1D60A8940();
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1D6E32F90;
    v14 = (id)a1;
    sub_1D6E27EA8();
    sub_1D6E26A98();
    v31[8] = a1;
    sub_1D5F2BB38();
    sub_1D6E27F98();
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 32) = 0;
    *(_QWORD *)(v13 + 40) = 0xE000000000000000;
    sub_1D6E283DC();
    swift_bridgeObjectRelease();
    sub_1D607B3C0((id)a1, 1);
    return;
  }
  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1D82919D4](v4);
  if (v5)
  {
    v6 = (char *)v5;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1D6E28040();
      sub_1D607B3C0((id)a1, 0);
    }
    else
    {
      v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x1E0DEE9D8];
    if (v7)
    {
      v31[0] = MEMORY[0x1E0DEE9D8];
      sub_1D6228B18(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      v8 = v31[0];
      if ((a1 & 0xC000000000000001) != 0)
      {
        for (i = 0; i != v7; ++i)
        {
          v10 = MEMORY[0x1D8290720](i, a1);
          v31[0] = v8;
          v12 = *(_QWORD *)(v8 + 16);
          v11 = *(_QWORD *)(v8 + 24);
          if (v12 >= v11 >> 1)
          {
            sub_1D6228B18(v11 > 1, v12 + 1, 1);
            v8 = v31[0];
          }
          *(_QWORD *)(v8 + 16) = v12 + 1;
          *(_QWORD *)(v8 + 8 * v12 + 32) = v10 | 0x4000000000000000;
        }
      }
      else
      {
        v15 = (uint64_t *)(a1 + 32);
        v16 = *(_QWORD *)(v31[0] + 16);
        do
        {
          v17 = *v15;
          v31[0] = v8;
          v18 = *(_QWORD *)(v8 + 24);
          swift_retain();
          if (v16 >= v18 >> 1)
          {
            sub_1D6228B18(v18 > 1, v16 + 1, 1);
            v8 = v31[0];
          }
          *(_QWORD *)(v8 + 16) = v16 + 1;
          *(_QWORD *)(v8 + 8 * v16 + 32) = v17 | 0x4000000000000000;
          ++v15;
          ++v16;
          --v7;
        }
        while (v7);
      }
    }
    v19 = &v6[OBJC_IVAR____TtC7NewsUI214HistoryService_observers];
    swift_beginAccess();
    v20 = *(_QWORD *)v19;
    if (*(_QWORD *)v19 >> 62)
    {
      swift_bridgeObjectRetain();
      v21 = sub_1D6E28040();
      if (v21)
      {
LABEL_20:
        if (v21 >= 1)
        {
          v22 = 0;
          v30 = v20 & 0xC000000000000001;
          do
          {
            if (v30)
            {
              v24 = MEMORY[0x1D8290720](v22, v20);
            }
            else
            {
              v24 = *(_QWORD *)(v20 + 8 * v22 + 32);
              swift_retain();
            }
            v31[3] = type metadata accessor for HistoryService();
            v31[4] = &off_1E9B0F1D8;
            v31[0] = v6;
            if (MEMORY[0x1D82919D4](v24 + 16))
            {
              v25 = *(_QWORD *)(v24 + 24);
              ObjectType = swift_getObjectType();
              v27 = v20;
              v28 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v25 + 8);
              v29 = v6;
              v28(v31, v8, ObjectType, v25);
              v20 = v27;
              swift_unknownObjectRelease();
            }
            else
            {
              v23 = v6;
            }
            ++v22;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);

            swift_release();
          }
          while (v21 != v22);
          goto LABEL_31;
        }
LABEL_34:
        __break(1u);
        return;
      }
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v21)
        goto LABEL_20;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1D681F1D8(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8;
  id v9;
  id v10;

  v8 = sub_1D6E26D80();
  v9 = a3;
  v10 = a1;
  a5(v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D681F244(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t result;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC7NewsUI214HistoryService_readingHistory);
  v3 = objc_msgSend(a1, sel_articleID);
  if (!v3)
  {
    sub_1D6E26978();
    v3 = (id)sub_1D6E26948();
    swift_bridgeObjectRelease();
  }
  v4 = objc_msgSend(v2, sel_likingStatusForArticleID_, v3);

  if ((unint64_t)v4 < 3)
    return (uint64_t)v4;
  result = sub_1D6E28010();
  __break(1u);
  return result;
}

id sub_1D681F324(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC7NewsUI214HistoryService_readingHistory);
  v3 = objc_msgSend(a1, sel_articleID);
  if (!v3)
  {
    sub_1D6E26978();
    v3 = (id)sub_1D6E26948();
    swift_bridgeObjectRelease();
  }
  v4 = objc_msgSend(v2, sel_hasArticleBeenMarkedAsOffensive_, v3);

  return v4;
}

uint64_t sub_1D681F3A4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED603CB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5CE48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - v5;
  if (MEMORY[0x1D82919D4](a2 + 136))
  {
    swift_getObjectType();
    sub_1D6E22ACC();
    swift_unknownObjectRelease();
    v7 = sub_1D6E23AF8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  }
  else
  {
    v8 = sub_1D6E23AF8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  }
  v9 = sub_1D6B25E70(a1, (uint64_t)v6);
  sub_1D6410D00((uint64_t)v6);
  return v9;
}

uint64_t sub_1D681F4B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(_QWORD *, uint64_t, uint64_t, uint64_t);
  id v9;
  id v10;
  _QWORD v12[5];

  v12[3] = type metadata accessor for HistoryService();
  v12[4] = &off_1E9B0F1D8;
  v12[0] = a1;
  if (MEMORY[0x1D82919D4](a3 + 16))
  {
    v6 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    v8 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v6 + 8);
    v9 = a1;
    v8(v12, a2, ObjectType, v6);
    swift_unknownObjectRelease();
  }
  else
  {
    v10 = a1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t sub_1D681F558(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(_QWORD *, uint64_t, uint64_t, uint64_t);
  id v9;
  id v10;
  _QWORD v12[5];

  v12[3] = type metadata accessor for HistoryService();
  v12[4] = &off_1E9B0F1D8;
  v12[0] = a1;
  if (MEMORY[0x1D82919D4](a3 + 16))
  {
    v6 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    v8 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v6 + 16);
    v9 = a1;
    v8(v12, a2, ObjectType, v6);
    swift_unknownObjectRelease();
  }
  else
  {
    v10 = a1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t sub_1D681F5FC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    result = swift_bridgeObjectRetain();
    v5 = (uint64_t *)(result + 40);
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (a2)
    {
      v8 = *(v5 - 1);
      v7 = *v5;
      swift_bridgeObjectRetain();
      v9 = (void *)sub_1D6E26948();
      v10 = objc_msgSend(a2, sel_hasArticleBeenRead_, v9);

      if (v10)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D5F8B8E0(0, v6[2] + 1, 1, v6);
          v6 = (_QWORD *)result;
        }
        v12 = v6[2];
        v11 = v6[3];
        if (v12 >= v11 >> 1)
        {
          result = (uint64_t)sub_1D5F8B8E0((_QWORD *)(v11 > 1), v12 + 1, 1, v6);
          v6 = (_QWORD *)result;
        }
        v6[2] = v12 + 1;
        v13 = &v6[2 * v12];
        v13[4] = v8;
        v13[5] = v7;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      v5 += 2;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v6;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1D681F744(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v2 = sub_1D6E21668();
  v19 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D6E216B0();
  v17 = *(_QWORD *)(v5 - 8);
  v18 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D6E21674();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F43C0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF548], v8);
  v12 = (void *)sub_1D6E276A4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = a1;
  aBlock[4] = sub_1D681FC50;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5EB52E8;
  aBlock[3] = &block_descriptor_120;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D6E2168C();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1D60C56BC();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F3FD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D5ED16A0();
  sub_1D6E27D88();
  MEMORY[0x1D828FEBC](0, v7, v4, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v18);
  swift_release();
  return swift_release();
}

uint64_t sub_1D681F9DC(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t, uint64_t, uint64_t);
  id v20;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  void *v27;
  uint64_t v28[5];
  uint64_t v29;

  ObjectType = swift_getObjectType();
  v27 = v1;
  v3 = &v1[OBJC_IVAR____TtC7NewsUI214HistoryService_observers];
  swift_beginAccess();
  v22 = *(_QWORD *)v3;
  if (*(_QWORD *)v3 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain_n();
    v4 = sub_1D6E28040();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((*(_QWORD *)v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v4)
    {
LABEL_3:
      v5 = 0;
      v25 = v4;
      v23 = (uint64_t *)(a1 + 40);
      v24 = *(_QWORD *)(a1 + 16);
      do
      {
        if ((v22 & 0xC000000000000001) != 0)
        {
          v7 = MEMORY[0x1D8290720](v5, v22);
          v8 = __OFADD__(v5++, 1);
          if (v8)
            goto LABEL_17;
        }
        else
        {
          v7 = *(_QWORD *)(v22 + 32 + 8 * v5);
          swift_retain();
          v8 = __OFADD__(v5++, 1);
          if (v8)
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        v9 = v27;
        v10 = a1;
        swift_bridgeObjectRetain();
        v11 = sub_1D6E27050();
        v29 = v11;
        v12 = v23;
        v13 = v24;
        if (v24)
        {
          do
          {
            v14 = *(v12 - 1);
            v15 = *v12;
            swift_bridgeObjectRetain();
            sub_1D5F095D0(v28, v14, v15);
            swift_bridgeObjectRelease();
            v12 += 2;
            --v13;
          }
          while (v13);
          a1 = v10;
          swift_bridgeObjectRelease();
          v16 = v29;
        }
        else
        {
          v16 = v11;
          a1 = v10;
          swift_bridgeObjectRelease();
        }
        v28[3] = ObjectType;
        v28[4] = (uint64_t)&off_1E9B0F1D8;
        v28[0] = (uint64_t)v9;
        if (MEMORY[0x1D82919D4](v7 + 16))
        {
          v17 = *(_QWORD *)(v7 + 24);
          v18 = swift_getObjectType();
          v19 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v17 + 16);
          v20 = v9;
          v19(v28, v16, v18, v17);
          swift_unknownObjectRelease();
        }
        else
        {
          v6 = v9;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
        swift_release();

        swift_bridgeObjectRelease();
      }
      while (v5 != v25);
    }
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D681FC28()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D681FC50()
{
  uint64_t v0;

  return sub_1D681ECC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1D681FC58(unint64_t a1, char a2)
{
  uint64_t v2;

  sub_1D681EDE4(a1, a2 & 1, v2);
}

uint64_t sub_1D681FC68()
{
  uint64_t v0;

  return sub_1D681E760(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1D681FC70(unint64_t a1, char a2)
{
  uint64_t v2;

  sub_1D681E880(a1, a2 & 1, v2);
}

uint64_t sub_1D681FC7C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1D681FCA0(unint64_t a1, char a2)
{
  uint64_t v2;

  sub_1D681DFB8(a1, a2 & 1, *(char **)(v2 + 16));
}

uint64_t sub_1D681FCAC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1D681FCD8(void *a1)
{
  uint64_t v1;

  sub_1D681D9F0(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1D681FCE4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = sub_1D681F3A4(*a1, **(_QWORD **)(v2 + 16));
  if (!v3)
    *a2 = result;
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for IssueSubscribeAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1D6067AA0(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for IssueSubscribeAction(unint64_t *a1)
{
  return sub_1D6067B10(*a1);
}

unint64_t *assignWithCopy for IssueSubscribeAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1D6067AA0(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1D6067B10(v4);
  return a1;
}

unint64_t *assignWithTake for IssueSubscribeAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1D6067B10(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueSubscribeAction(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for IssueSubscribeAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1D681FE70(_QWORD *a1)
{
  return *a1 >> 62;
}

_QWORD *sub_1D681FE7C(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1D681FE8C(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for HistoryServiceChange()
{
  return &type metadata for HistoryServiceChange;
}

ValueMetadata *type metadata accessor for HistoryState()
{
  return &type metadata for HistoryState;
}

unint64_t sub_1D681FEC4()
{
  unint64_t result;

  result = qword_1EFFF3138;
  if (!qword_1EFFF3138)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94164, &type metadata for HistoryState);
    atomic_store(result, (unint64_t *)&qword_1EFFF3138);
  }
  return result;
}

unint64_t sub_1D681FF0C()
{
  unint64_t result;

  result = qword_1EFFF3140;
  if (!qword_1EFFF3140)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94134, &type metadata for HistoryState);
    atomic_store(result, (unint64_t *)&qword_1EFFF3140);
  }
  return result;
}

unint64_t sub_1D681FF54()
{
  unint64_t result;

  result = qword_1EFFF3148;
  if (!qword_1EFFF3148)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9418C, &type metadata for HistoryState);
    atomic_store(result, (unint64_t *)&qword_1EFFF3148);
  }
  return result;
}

unint64_t sub_1D681FF9C()
{
  unint64_t result;

  result = qword_1EFFF3150;
  if (!qword_1EFFF3150)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E941C4, &type metadata for HistoryState);
    atomic_store(result, (unint64_t *)&qword_1EFFF3150);
  }
  return result;
}

uint64_t type metadata accessor for ChannelTagStyler()
{
  return objc_opt_self();
}

uint64_t *sub_1D682019C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1D608A014();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = a3[8];
    v11 = (uint64_t *)((char *)v4 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = v12[3];
    v11[2] = v12[2];
    v11[3] = v14;
    v15 = (uint64_t *)((char *)v4 + v10);
    v16 = (uint64_t *)((char *)a2 + v10);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v22 = v16[3];
    v15[2] = v16[2];
    v15[3] = v22;
    v18 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v18) = *(uint64_t *)((char *)a2 + v18);
    v19 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    *(uint64_t *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D682033C(uint64_t a1)
{
  uint64_t v2;

  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D6820420(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = v11[3];
  v10[2] = v11[2];
  v10[3] = v13;
  v14 = (_QWORD *)(a1 + v9);
  v15 = (_QWORD *)(a2 + v9);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v20 = v15[3];
  v14[2] = v15[2];
  v14[3] = v20;
  v17 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1D6820598(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_retain();
  swift_release();
  v8[1] = v9[1];
  swift_retain();
  swift_release();
  v8[2] = v9[2];
  swift_retain();
  swift_release();
  v8[3] = v9[3];
  swift_retain();
  swift_release();
  v10 = a3[8];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_retain();
  swift_release();
  v11[1] = v12[1];
  swift_retain();
  swift_release();
  v11[2] = v12[2];
  swift_retain();
  swift_release();
  v11[3] = v12[3];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D682078C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = (_OWORD *)(a1 + v8);
  v11 = (_OWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_OWORD *)(a1 + v9);
  v14 = (_OWORD *)(a2 + v9);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1D6820848(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release();
  v8[1] = v9[1];
  swift_release();
  v8[2] = v9[2];
  swift_release();
  v8[3] = v9[3];
  swift_release();
  v10 = a3[8];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_release();
  v11[1] = v12[1];
  swift_release();
  v11[2] = v12[2];
  swift_release();
  v11[3] = v12[3];
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_release();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_release();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_release();
  return a1;
}

uint64_t sub_1D68209C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68209D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1D608A014();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1D6820A4C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1D6820A58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1D608A014();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
}

uint64_t type metadata accessor for SportsScoresTagFeedGroupKnobs()
{
  uint64_t result;

  result = qword_1ED61A260;
  if (!qword_1ED61A260)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D6820B0C()
{
  unint64_t v0;

  sub_1D608A014();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1D6820B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v59 = a4;
  v60 = a8;
  v57 = a5;
  v58 = a6;
  sub_1D60D9DDC();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D608A014();
  v26 = v25;
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6181DB8(a1, (uint64_t)v24);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26);
  v55 = a1;
  if (v30 == 1)
  {
    type metadata accessor for TagFeedServiceConfig();
    sub_1D5E6D8C0(&qword_1ED611DD0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, (uint64_t)&unk_1D6E513A8);
    sub_1D6E22568();
    sub_1D6181DFC((uint64_t)v24);
    v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  }
  else
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v31(v29, v24, v26);
  }
  v32 = v59;
  v31(a9, v29, v26);
  if (a2)
  {
    v33 = a2;
  }
  else
  {
    v61 = 0x7FFFFFFFFFFFFFFFLL;
    sub_1D5F31B14();
    swift_allocObject();
    v33 = sub_1D6E22E80();
  }
  v34 = (int *)type metadata accessor for SportsScoresTagFeedGroupKnobs();
  *(_QWORD *)&a9[v34[5]] = v33;
  v54[2] = a2;
  if (a3)
  {
    swift_retain();
    v35 = a3;
  }
  else
  {
    v61 = 1;
    sub_1D5F31B14();
    swift_allocObject();
    swift_retain();
    v35 = sub_1D6E22E80();
  }
  v56 = a12;
  *(_QWORD *)&a9[v34[6]] = v35;
  v54[1] = a3;
  if (v32)
  {
    swift_retain();
    v36 = v32;
    v38 = v57;
    v37 = v58;
    v39 = a7;
  }
  else
  {
    sub_1D5ECA4AC();
    swift_allocObject();
    swift_retain();
    v36 = sub_1D6E22CE8();
    sub_1D5ECA42C();
    swift_allocObject();
    v38 = sub_1D6E22CE8();
    v61 = 0;
    sub_1D5ECA3AC();
    swift_allocObject();
    v37 = sub_1D6E22E80();
    LOBYTE(v61) = 1;
    sub_1D5ECA2DC();
    swift_allocObject();
    v39 = sub_1D6E22E80();
  }
  v40 = (uint64_t *)&a9[v34[7]];
  *v40 = v36;
  v40[1] = v38;
  v40[2] = v37;
  v40[3] = v39;
  v41 = v60;
  v54[0] = a7;
  if (v60)
  {
    sub_1D5E9BB00(v59);
    v44 = v56;
  }
  else
  {
    sub_1D5ECA4AC();
    swift_allocObject();
    sub_1D5E9BB00(v59);
    v41 = sub_1D6E22CE8();
    sub_1D5ECA42C();
    swift_allocObject();
    a10 = sub_1D6E22CE8();
    v61 = 0;
    sub_1D5ECA3AC();
    swift_allocObject();
    a11 = sub_1D6E22E80();
    LOBYTE(v61) = 1;
    sub_1D5ECA2DC();
    swift_allocObject();
    v44 = sub_1D6E22E80();
  }
  v45 = (uint64_t *)&a9[v34[8]];
  *v45 = v41;
  v45[1] = a10;
  v45[2] = a11;
  v45[3] = v44;
  if (a13)
  {
    sub_1D5E9BB00(v60);
    v46 = a13;
  }
  else
  {
    LOBYTE(v61) = 1;
    sub_1D5ECA2DC();
    swift_allocObject();
    sub_1D5E9BB00(v60);
    v46 = sub_1D6E22E80();
  }
  *(_QWORD *)&a9[v34[9]] = v46;
  if (a14)
  {
    swift_retain();
    v47 = a14;
  }
  else
  {
    v61 = 14;
    sub_1D5F31B14();
    swift_allocObject();
    swift_retain();
    v47 = sub_1D6E22E80();
  }
  v48 = a16;
  *(_QWORD *)&a9[v34[10]] = v47;
  if (a15)
  {
    swift_retain();
    v49 = a15;
  }
  else
  {
    LOBYTE(v61) = 1;
    sub_1D5FAECCC();
    swift_allocObject();
    swift_retain();
    v49 = sub_1D6E22E80();
  }
  v50 = a17;
  *(_QWORD *)&a9[v34[11]] = v49;
  swift_retain();
  if (!a16)
  {
    v51 = sub_1D6E24830();
    sub_1D622DFC0(v51);
    swift_bridgeObjectRelease();
    sub_1D61F2AC8();
    swift_allocObject();
    v48 = sub_1D6E22988();
  }
  *(_QWORD *)&a9[v34[12]] = v48;
  if (!a17)
  {
    sub_1D61F2AC8();
    swift_allocObject();
    v50 = sub_1D6E22988();
  }
  swift_release();
  swift_release();
  swift_release();
  v52 = v59;
  sub_1D5E9AA08(v60);
  sub_1D5E9AA08(v52);
  swift_release();
  swift_release();
  result = sub_1D6181DFC(v55);
  *(_QWORD *)&a9[v34[13]] = v50;
  return result;
}

uint64_t sub_1D68211F0@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_1D60D9DDC();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6821C68(0, &qword_1ED624538, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v9 = v8;
  v30 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6821C24();
  sub_1D6E2846C();
  if (!v2)
  {
    sub_1D608A014();
    LOBYTE(v40) = 0;
    sub_1D5E6D8C0(&qword_1ED623058, (uint64_t (*)(uint64_t))sub_1D608A014, MEMORY[0x1E0D5B228]);
    sub_1D6E280F4();
    sub_1D5F31B14();
    v29 = v7;
    LOBYTE(v40) = 1;
    sub_1D5E6D8C0(&qword_1ED6233A0, (uint64_t (*)(uint64_t))sub_1D5F31B14, MEMORY[0x1E0D5BD20]);
    sub_1D6E280F4();
    v28 = v45;
    LOBYTE(v40) = 2;
    sub_1D6E280F4();
    v27 = v44;
    LOBYTE(v37) = 3;
    sub_1D5FBDB84();
    v26 = a2;
    sub_1D6E280F4();
    v25 = v40;
    v24 = v41;
    v23 = v42;
    v22 = v43;
    LOBYTE(v36) = 4;
    sub_1D6E280F4();
    v21 = v37;
    v20 = v38;
    v19 = v39;
    sub_1D5ECA2DC();
    LOBYTE(v35) = 5;
    v12 = MEMORY[0x1E0D5BD20];
    sub_1D5E6D8C0(&qword_1ED623370, (uint64_t (*)(uint64_t))sub_1D5ECA2DC, MEMORY[0x1E0D5BD20]);
    sub_1D6E280F4();
    v18 = v36;
    LOBYTE(v34) = 6;
    sub_1D6E280F4();
    v17 = v35;
    sub_1D5FAECCC();
    LOBYTE(v33) = 7;
    sub_1D5E6D8C0(&qword_1ED623318, (uint64_t (*)(uint64_t))sub_1D5FAECCC, v12);
    sub_1D6E280F4();
    v13 = v34;
    sub_1D61F2AC8();
    LOBYTE(v32) = 8;
    sub_1D5E6D8C0(&qword_1ED623168, (uint64_t (*)(uint64_t))sub_1D61F2AC8, MEMORY[0x1E0D5B780]);
    sub_1D6E280F4();
    v14 = v33;
    v31 = 9;
    sub_1D6E280F4();
    sub_1D6820B98((uint64_t)v29, v28, v27, v25, v24, v23, v22, v21, v26, v20, *((uint64_t *)&v20 + 1), v19, v18, v17, v13, v14, v32);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D6821668(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D6821698 + 4 * byte_1D6E94340[a1]))(0x73656C7572, 0xE500000000000000);
}

unint64_t sub_1D6821698()
{
  return 0xD000000000000010;
}

uint64_t sub_1D682176C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  __int128 *v13;
  __int128 v14;
  _QWORD v16[2];
  __int128 v17;
  __int128 v18;
  char v19;

  v3 = v1;
  sub_1D6821C68(0, &qword_1EFFF3218, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6821C24();
  sub_1D6E28478();
  LOBYTE(v17) = 0;
  sub_1D608A014();
  sub_1D5E6D8C0(&qword_1EFFDB3A0, (uint64_t (*)(uint64_t))sub_1D608A014, MEMORY[0x1E0D5B220]);
  sub_1D6E28238();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SportsScoresTagFeedGroupKnobs();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v10[5]);
    v19 = 1;
    sub_1D5F31B14();
    sub_1D5E6D8C0(&qword_1ED623398, (uint64_t (*)(uint64_t))sub_1D5F31B14, MEMORY[0x1E0D5BD10]);
    sub_1D6E28238();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v10[6]);
    v19 = 2;
    sub_1D6E28238();
    v11 = (__int128 *)(v3 + v10[7]);
    v12 = v11[1];
    v17 = *v11;
    v18 = v12;
    v19 = 3;
    v16[1] = sub_1D630E018();
    sub_1D6E28238();
    v13 = (__int128 *)(v3 + v10[8]);
    v14 = v13[1];
    v17 = *v13;
    v18 = v14;
    v19 = 4;
    sub_1D6E28238();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v10[9]);
    v19 = 5;
    sub_1D5ECA2DC();
    sub_1D5E6D8C0(&qword_1ED623368, (uint64_t (*)(uint64_t))sub_1D5ECA2DC, MEMORY[0x1E0D5BD10]);
    sub_1D6E28238();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v10[10]);
    v19 = 6;
    sub_1D6E28238();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v10[11]);
    v19 = 7;
    sub_1D5FAECCC();
    sub_1D5E6D8C0(&qword_1ED623310, (uint64_t (*)(uint64_t))sub_1D5FAECCC, MEMORY[0x1E0D5BD10]);
    sub_1D6E28238();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v10[12]);
    v19 = 8;
    sub_1D61F2AC8();
    sub_1D5E6D8C0(&qword_1EFFDCB68, (uint64_t (*)(uint64_t))sub_1D61F2AC8, MEMORY[0x1E0D5B778]);
    sub_1D6E28238();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v10[13]);
    v19 = 9;
    sub_1D6E28238();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D6821B80()
{
  unsigned __int8 *v0;

  return sub_1D6821668(*v0);
}

uint64_t sub_1D6821B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D6821E68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D6821BAC()
{
  sub_1D6821C24();
  return sub_1D6E28538();
}

uint64_t sub_1D6821BD4()
{
  sub_1D6821C24();
  return sub_1D6E28544();
}

uint64_t sub_1D6821BFC@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return sub_1D68211F0(a1, a2);
}

uint64_t sub_1D6821C10(_QWORD *a1)
{
  return sub_1D682176C(a1);
}

unint64_t sub_1D6821C24()
{
  unint64_t result;

  result = qword_1ED61A240;
  if (!qword_1ED61A240)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E944EC, &type metadata for SportsScoresTagFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED61A240);
  }
  return result;
}

void sub_1D6821C68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D6821C24();
    v7 = a3(a1, &type metadata for SportsScoresTagFeedGroupKnobs.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsScoresTagFeedGroupKnobs.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D6821D10 + 4 * byte_1D6E9434F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D6821D44 + 4 * byte_1D6E9434A[v4]))();
}

uint64_t sub_1D6821D44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6821D4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D6821D54);
  return result;
}

uint64_t sub_1D6821D60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D6821D68);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D6821D6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6821D74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsScoresTagFeedGroupKnobs.CodingKeys()
{
  return &type metadata for SportsScoresTagFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1D6821D94()
{
  unint64_t result;

  result = qword_1EFFF3220;
  if (!qword_1EFFF3220)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E944C4, &type metadata for SportsScoresTagFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3220);
  }
  return result;
}

unint64_t sub_1D6821DDC()
{
  unint64_t result;

  result = qword_1ED61A250;
  if (!qword_1ED61A250)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94434, &type metadata for SportsScoresTagFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED61A250);
  }
  return result;
}

unint64_t sub_1D6821E24()
{
  unint64_t result;

  result = qword_1ED61A248;
  if (!qword_1ED61A248)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9445C, &type metadata for SportsScoresTagFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED61A248);
  }
  return result;
}

uint64_t sub_1D6821E68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D6EEF330 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D6EF2A70 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F5365726F6373 && a2 == 0xEC000000676E6974 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D6F02480 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D6F024A0 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D6F068F0 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D6F02380 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D6EF9130 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D6EF9150)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1D6E282C8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t FollowingPuzzleHubModel.identifier.getter()
{
  return 0x7548656C7A7A7570;
}

BOOL static FollowingPuzzleHubModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for FollowingPuzzleHubModel();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  sub_1D63C2730(a1, (uint64_t)&v13 - v8);
  sub_1D63C2730(a2, (uint64_t)v7);
  v10 = *(_QWORD *)&v9[*(int *)(v4 + 40)];
  sub_1D6822308((uint64_t)v9);
  v11 = *(_QWORD *)&v7[*(int *)(v4 + 40)];
  sub_1D6822308((uint64_t)v7);
  return v10 == v11;
}

uint64_t sub_1D6822308(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FollowingPuzzleHubModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D6822344()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  sub_1D602AD74();
  v0 = (void *)sub_1D6E279D4();
  v1 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v0);

  v2 = (void *)sub_1D6E26948();
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v2, v1);

  if (v3)
  {
    objc_msgSend(v3, sel_imageWithRenderingMode_, 2);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D6822444()
{
  return 0x7548656C7A7A7570;
}

void sub_1D6822460()
{
  sub_1D6822344();
}

uint64_t sub_1D682247C(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 40));
}

uint64_t FollowingPuzzleHubModel.hashValue.getter()
{
  sub_1D6E28400();
  type metadata accessor for FollowingPuzzleHubModel();
  sub_1D68226BC(&qword_1EFFF3228, (uint64_t)&protocol conformance descriptor for FollowingPuzzleHubModel);
  sub_1D6E26888();
  return sub_1D6E28430();
}

uint64_t sub_1D6822508()
{
  sub_1D68226BC(&qword_1EFFF3230, (uint64_t)&protocol conformance descriptor for FollowingPuzzleHubModel);
  return sub_1D6E1AE4C();
}

BOOL sub_1D6822550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v14 - v9;
  sub_1D63C2730(v8, (uint64_t)&v14 - v9);
  sub_1D63C2730(a2, (uint64_t)v7);
  v11 = *(_QWORD *)&v10[*(int *)(a3 + 40)];
  sub_1D6822308((uint64_t)v10);
  v12 = *(_QWORD *)&v7[*(int *)(a3 + 40)];
  sub_1D6822308((uint64_t)v7);
  return v11 == v12;
}

uint64_t FollowingPuzzleHubModel.canPreview.getter()
{
  return 0;
}

uint64_t sub_1D6822608()
{
  return sub_1D68226BC(&qword_1EFFF3230, (uint64_t)&protocol conformance descriptor for FollowingPuzzleHubModel);
}

uint64_t sub_1D682262C()
{
  return sub_1D68226BC(&qword_1EFFF3238, (uint64_t)&protocol conformance descriptor for FollowingPuzzleHubModel);
}

uint64_t sub_1D6822650()
{
  return sub_1D68226BC(&qword_1EFFF3228, (uint64_t)&protocol conformance descriptor for FollowingPuzzleHubModel);
}

uint64_t sub_1D6822674()
{
  return sub_1D68226BC(&qword_1EFFF3240, (uint64_t)&protocol conformance descriptor for FollowingPuzzleHubModel);
}

uint64_t sub_1D6822698()
{
  return sub_1D68226BC(&qword_1EFFF3248, (uint64_t)&protocol conformance descriptor for FollowingPuzzleHubModel);
}

uint64_t sub_1D68226BC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FollowingPuzzleHubModel();
    result = MEMORY[0x1D82917D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FollowingPuzzleHubModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = (void *)a2[4];
    v10 = a3[7];
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    a1[4] = v9;
    v12 = sub_1D6E15BE4();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v9;
    if (v14(v11, 1, v12))
    {
      sub_1D5F53614();
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v18 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)v4 + v18) = *(_QWORD *)((char *)a2 + v18);
    *(_QWORD *)((char *)v4 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  }
  return v4;
}

_QWORD *initializeWithCopy for FollowingPuzzleHubModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = (void *)a2[4];
  a1[4] = v8;
  v9 = a3[7];
  __dst = (char *)a1 + v9;
  v10 = (char *)a2 + v9;
  v11 = sub_1D6E15BE4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v8;
  if (v13(v10, 1, v11))
  {
    sub_1D5F53614();
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v16 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

_QWORD *assignWithCopy for FollowingPuzzleHubModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a1[4];
  v7 = (void *)a2[4];
  a1[4] = v7;
  v8 = v7;

  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1D6E15BE4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1D5F53614();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for FollowingPuzzleHubModel(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[7];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1D6E15BE4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1D5F53614();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

_QWORD *assignWithTake for FollowingPuzzleHubModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (void *)a1[4];
  a1[4] = a2[4];

  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1D6E15BE4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1D5F53614();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingPuzzleHubModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6822D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1D5F53614();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FollowingPuzzleHubModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6822DD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1D5F53614();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D6822E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  unint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_1D6E216EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(v0 + 32);
  sub_1D5F99504();
  *v5 = sub_1D6E27674();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = sub_1D6E21710();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
  {
    v9 = (unint64_t *)(v6 + OBJC_IVAR____TtC7NewsUI230OfflineStatusBannerDataManager_observers);
    v10 = swift_beginAccess();
    v11 = *v9;
    MEMORY[0x1E0C80A78](v10);
    *(&v12 - 2) = v1;
    *(&v12 - 1) = (uint64_t)&off_1E9B0F808;
    swift_bridgeObjectRetain();
    *v9 = (unint64_t)sub_1D5F07984((uint64_t (*)(uint64_t *))sub_1D5F07B84, &v12 - 4, v11);
    swift_bridgeObjectRelease();
    sub_1D5FF43C0(v1 + 16);
    swift_unknownObjectRelease();
    return swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D6822FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unsigned int v18;
  unsigned int *v19;
  uint64_t v20;
  id v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t result;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char v76;

  v1 = sub_1D6E15ECC();
  v70 = *(_QWORD *)(v1 - 8);
  v71 = v1;
  MEMORY[0x1E0C80A78](v1);
  v69 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6823C4C();
  v4 = v3;
  MEMORY[0x1E0C80A78](v3);
  v75 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D6E23F78();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D6E237A4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v67 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v68 = (char *)&v67 - v14;
  v74 = v0;
  v15 = *(_QWORD *)(v0 + 32);
  v16 = OBJC_IVAR____TtC7NewsUI230OfflineStatusBannerDataManager_bundleSubscriptionManager;
  v17 = objc_msgSend(*(id *)(v15 + OBJC_IVAR____TtC7NewsUI230OfflineStatusBannerDataManager_bundleSubscriptionManager), sel_cachedSubscription);
  v18 = objc_msgSend(v17, sel_isSubscribed);

  v19 = (unsigned int *)MEMORY[0x1E0D5D350];
  v72 = v11;
  v73 = v10;
  if (v18)
  {
    v20 = v15 + OBJC_IVAR____TtC7NewsUI230OfflineStatusBannerDataManager_feedModeState;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v20, v6);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v9, *MEMORY[0x1E0D5CB48], v10);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v19, v6);
  }
  v21 = objc_msgSend(*(id *)(v15 + v16), sel_cachedSubscription);
  v22 = objc_msgSend(v21, sel_isSubscribed);

  v23 = *(int *)(v4 + 48);
  v24 = (uint64_t)v75;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v75, v9, v6);
  *(_BYTE *)(v24 + v23) = v22;
  v25 = (_DWORD *)MEMORY[0x1E0D5D348];
  if ((v22 & 1) != 0)
  {
    v26 = v15;
    v27 = *(unsigned int (**)(uint64_t, uint64_t))(v7 + 88);
    if (v27(v24, v6) == *v25)
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v15 + OBJC_IVAR____TtC7NewsUI230OfflineStatusBannerDataManager_offlineFeatures), *(_QWORD *)(v15 + OBJC_IVAR____TtC7NewsUI230OfflineStatusBannerDataManager_offlineFeatures + 24));
      sub_1D5F69CF4(0);
      sub_1D6E1A180();
      swift_release();
      v28 = v74;
      v29 = (_DWORD *)MEMORY[0x1E0D5D350];
      if (v76 == 6)
      {
        swift_beginAccess();
        v30 = MEMORY[0x1D82919D4](v28 + 16);
        if (v30)
        {
          v31 = v30;
          v32 = sub_1D6DDA2C0(objc_msgSend(*(id *)(v26 + OBJC_IVAR____TtC7NewsUI230OfflineStatusBannerDataManager_appConfigManager), sel_possiblyUnfetchedAppConfiguration));
LABEL_14:
          v41 = (uint64_t)v32;
          v42 = v33;
          swift_unknownObjectRelease();
          v43 = (char *)MEMORY[0x1D82919D4](v31 + 16);
          if (v43)
          {
            sub_1D6823960(v41, v42, v43);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          swift_unknownObjectRelease();
          goto LABEL_31;
        }
        goto LABEL_31;
      }
    }
    else
    {
      v28 = v74;
      v29 = (_DWORD *)MEMORY[0x1E0D5D350];
    }
  }
  else
  {
    v34 = OBJC_IVAR____TtC7NewsUI230OfflineStatusBannerDataManager_appConfigManager;
    v35 = v15;
    v36 = (unint64_t)sub_1D6DDA47C(objc_msgSend(*(id *)(v15 + OBJC_IVAR____TtC7NewsUI230OfflineStatusBannerDataManager_appConfigManager), sel_possiblyUnfetchedAppConfiguration));
    v38 = v37;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v39 = HIBYTE(v38) & 0xF;
    if ((v38 & 0x2000000000000000) == 0)
      v39 = v36 & 0xFFFFFFFFFFFFLL;
    if (v39)
    {
      v28 = v74;
      swift_beginAccess();
      v40 = MEMORY[0x1D82919D4](v28 + 16);
      if (v40)
      {
        v31 = v40;
        v32 = sub_1D6DDA47C(objc_msgSend(*(id *)(v35 + v34), sel_possiblyUnfetchedAppConfiguration));
        goto LABEL_14;
      }
LABEL_31:
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v24, v6);
      goto LABEL_37;
    }
    v27 = *(unsigned int (**)(uint64_t, uint64_t))(v7 + 88);
    v28 = v74;
    v29 = (_DWORD *)MEMORY[0x1E0D5D350];
    v25 = (_DWORD *)MEMORY[0x1E0D5D348];
  }
  v44 = v27(v24, v6);
  if (v44 == *v29 || v44 == *MEMORY[0x1E0D5D328] || v44 == *v25 || v44 == *MEMORY[0x1E0D5D338])
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 96))(v24, v6);
    v56 = v72;
    v55 = v73;
    v57 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v68, v24, v73);
    swift_beginAccess();
    v58 = MEMORY[0x1D82919D4](v28 + 16);
    if (v58)
    {
      v59 = v58;
      swift_endAccess();
      v60 = v69;
      sub_1D6DD9C7C(v57);
      v61 = sub_1D6DD9EB8();
      v63 = v62;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v60, v71);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v55);
      v64 = (char *)MEMORY[0x1D82919D4](v59 + 16);
      if (v64)
      {
        sub_1D6823960(v61, v63, v64);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v55);
      swift_endAccess();
    }
  }
  else
  {
    swift_beginAccess();
    v45 = MEMORY[0x1D82919D4](v28 + 16);
    if (v45)
    {
      v46 = v45;
      v48 = v72;
      v47 = v73;
      v49 = (uint64_t)v67;
      (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v67, *MEMORY[0x1E0D5CB48], v73);
      v50 = v69;
      sub_1D6DD9C7C(v49);
      v51 = sub_1D6DD9EB8();
      v53 = v52;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v50, v71);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v47);
      v54 = (char *)MEMORY[0x1D82919D4](v46 + 16);
      if (v54)
      {
        sub_1D6823960(v51, v53, v54);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    sub_1D5E8D20C(v24, (uint64_t (*)(_QWORD))sub_1D6823C4C);
  }
LABEL_37:
  swift_beginAccess();
  result = MEMORY[0x1D82919D4](v28 + 16);
  if (result)
  {
    v66 = (char *)MEMORY[0x1D82919D4](result + 16);
    if (v66)
    {
      sub_1D6823B08(v66);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D6823698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  char *v9;

  v1 = v0 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1D82919D4](v0 + 16);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1D6DDA5BC(objc_msgSend(*(id *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC7NewsUI230OfflineStatusBannerDataManager_appConfigManager), sel_possiblyUnfetchedAppConfiguration));
    v6 = v5;
    swift_unknownObjectRelease();
    v7 = (void *)MEMORY[0x1D82919D4](v3 + 16);
    if (v7)
    {
      sub_1D6823CB0((uint64_t)v4, v6, v7);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  result = MEMORY[0x1D82919D4](v1);
  if (result)
  {
    v9 = (char *)MEMORY[0x1D82919D4](result + 16);
    if (v9)
    {
      sub_1D6823E64(v9, (uint64_t (*)(void))sub_1D688F6F4, (uint64_t (*)(id))sub_1D688F794);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1D68237C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED605438)
  {
    v0 = sub_1D6E27C38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED605438);
  }
}

void sub_1D6823814(uint64_t a1, uint64_t a2, char *a3)
{
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  void *v14;
  id v15;
  id v16;

  v6 = *(void **)&a3[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_connectionLabel];
  v7 = objc_msgSend(v6, sel_text);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1D6E26978();
    v11 = v10;

    if (v9 == a1 && v11 == a2)
    {
      swift_bridgeObjectRelease();
      return;
    }
    v13 = sub_1D6E282C8();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      return;
  }
  v14 = (void *)sub_1D6E26948();
  objc_msgSend(v6, sel_setText_, v14);

  v15 = objc_msgSend(a3, sel_view);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, sel_setNeedsLayout);

  }
  else
  {
    __break(1u);
  }
}

void sub_1D6823960(uint64_t a1, uint64_t a2, char *a3)
{
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v6 = *(void **)&a3[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_secondaryLabel];
  v7 = objc_msgSend(v6, sel_text);
  if (!v7)
    goto LABEL_7;
  v8 = v7;
  v9 = sub_1D6E26978();
  v11 = v10;

  if (v9 == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v13 = sub_1D6E282C8();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
LABEL_7:
    v14 = (void *)sub_1D6E26948();
    objc_msgSend(v6, sel_setText_, v14);

    v15 = objc_msgSend(v6, sel_superview);
    v16 = objc_msgSend(a3, sel_view);
    if (v15)
    {
      v18 = v16;

      if (!v18)
        return;

      if (v15 != v18)
        return;
    }
    else if (v16)
    {
      goto LABEL_15;
    }
    v17 = objc_msgSend(a3, sel_view);
    if (!v17)
    {
      __break(1u);
      return;
    }
    v19 = v17;
    objc_msgSend(v17, sel_setNeedsLayout);
    v16 = v19;
LABEL_15:

  }
}

void sub_1D6823B08(char *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v2 = *(void **)&a1[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_secondaryLabel];
  v3 = objc_msgSend(v2, sel_superview);
  v4 = objc_msgSend(a1, sel_view);
  v5 = v4;
  if (v3)
  {

    if (v5)
    {

      if (v3 == v5)
        return;
    }
  }
  else
  {
    if (!v4)
      return;

  }
  v6 = sub_1D688F6F4();
  objc_msgSend(v6, sel_removeFromSuperview);

  v7 = sub_1D688F794();
  objc_msgSend(v7, sel_removeFromSuperview);

  v8 = objc_msgSend(a1, sel_view);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_addSubview_, v2);

    v10 = objc_msgSend(a1, sel_view);
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, sel_setNeedsLayout);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1D6823C4C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EFFF3250)
  {
    sub_1D6E23F78();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EFFF3250);
  }
}

void sub_1D6823CB0(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;

  v6 = sub_1D688F6F4();
  v7 = objc_msgSend(v6, sel_titleForState_, 0);

  if (!v7)
    goto LABEL_7;
  v8 = sub_1D6E26978();
  v10 = v9;

  if (v8 == a1 && v10 == a2)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v12 = sub_1D6E282C8();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_7:
    v13 = sub_1D688F6F4();
    v14 = (void *)sub_1D6E26948();
    objc_msgSend(v13, sel_setTitle_forState_, v14, 0);

    v15 = sub_1D688F6F4();
    v16 = objc_msgSend(v15, sel_superview);

    v17 = objc_msgSend(a3, sel_view);
    if (v16)
    {
      v19 = v17;

      if (!v19)
        return;

      if (v16 != v19)
        return;
    }
    else if (v17)
    {
      goto LABEL_15;
    }
    v18 = objc_msgSend(a3, sel_view);
    if (!v18)
    {
      __break(1u);
      return;
    }
    v20 = v18;
    objc_msgSend(v18, sel_setNeedsLayout);
    v17 = v20;
LABEL_15:

  }
}

void sub_1D6823E64(char *a1, uint64_t (*a2)(void), uint64_t (*a3)(id))
{
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;

  v6 = (void *)a2();
  v7 = objc_msgSend(v6, sel_superview);

  v8 = objc_msgSend(a1, sel_view);
  v9 = v8;
  if (v7)
  {

    if (v9)
    {

      if (v7 == v9)
        return;
    }
  }
  else
  {
    if (!v8)
      return;

  }
  v10 = (void *)a3(objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_secondaryLabel], sel_removeFromSuperview));
  objc_msgSend(v10, sel_removeFromSuperview);

  v11 = objc_msgSend(a1, sel_view);
  if (v11)
  {
    v12 = v11;
    v13 = (void *)a2();
    objc_msgSend(v12, sel_addSubview_, v13);

    v14 = objc_msgSend(a1, sel_view);
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, sel_setNeedsLayout);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t storeEnumTagSinglePayload for OfflineStatusBannerInteractor.BannerButton(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D6824008 + 4 * byte_1D6E94735[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D682403C + 4 * byte_1D6E94730[v4]))();
}

uint64_t sub_1D682403C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6824044(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D682404CLL);
  return result;
}

uint64_t sub_1D6824058(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D6824060);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D6824064(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D682406C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OfflineStatusBannerInteractor.BannerButton()
{
  return &type metadata for OfflineStatusBannerInteractor.BannerButton;
}

unint64_t sub_1D682408C()
{
  unint64_t result;

  result = qword_1EFFF3258;
  if (!qword_1EFFF3258)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94840, &type metadata for OfflineStatusBannerInteractor.BannerButton);
    atomic_store(result, (unint64_t *)&qword_1EFFF3258);
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertTagRemoval()
{
  return &type metadata for AlertTagRemoval;
}

uint64_t sub_1D68240E0(uint64_t a1)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D6E15968();

  sub_1D5F2C60C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D6E32F90;
  v5 = objc_msgSend(*(id *)(a1 + 16), sel_name, 0x80000001D6F2A030);
  v6 = sub_1D6E26978();
  v8 = v7;

  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1D5F2C5C8();
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v8;
  v9 = sub_1D6E269A8();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1D6824238(uint64_t a1)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D6E15968();

  sub_1D5F2C60C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D6E32F90;
  v5 = objc_msgSend(*(id *)(a1 + 16), sel_name, 0x80000001D6F29FA0);
  v6 = sub_1D6E26978();
  v8 = v7;

  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1D5F2C5C8();
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v8;
  v9 = sub_1D6E269A8();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1D6824394()
{
  uint64_t *v0;

  return sub_1D68240E0(*v0);
}

uint64_t sub_1D682439C()
{
  uint64_t *v0;

  return sub_1D6824238(*v0);
}

uint64_t sub_1D68243A4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1D6E15968();

  return v2;
}

uint64_t sub_1D6824464()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1D6E15968();

  return v2;
}

ValueMetadata *type metadata accessor for TodayOnlineBlueprintModifier()
{
  return &type metadata for TodayOnlineBlueprintModifier;
}

uint64_t sub_1D6824534()
{
  sub_1D62A9E30();
  return sub_1D6E1E164();
}

unint64_t sub_1D6824560()
{
  unint64_t result;

  result = qword_1ED618FF0;
  if (!qword_1ED618FF0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94940, &type metadata for TodayOnlineBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1ED618FF0);
  }
  return result;
}

uint64_t sub_1D68245A4(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(__int128 *, _QWORD);
  uint64_t v41;
  void (*v42)(char *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(__int128 *, _QWORD);
  void (*v63)(char *);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(void);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  _QWORD v90[3];
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *);
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;

  v98 = a3;
  v99 = a2;
  v97 = sub_1D6E1D7E0();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v94 = (char *)v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5F48CD4(0, &qword_1ED5E1598, MEMORY[0x1E0DB9A28]);
  v95 = v5;
  v93 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v92 = (char *)v90 - v6;
  v112 = sub_1D6E15EF0();
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v110 = (char *)v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TodayGapLocation(0);
  MEMORY[0x1E0C80A78](v8);
  v109 = (uint64_t)v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for TodayModel(0);
  v10 = MEMORY[0x1E0C80A78](v120);
  v108 = (_QWORD *)((char *)v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v122 = (uint64_t)v90 - v12;
  sub_1D5F84898(0);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x1E0C80A78](v13);
  v117 = (char *)v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v123 = (char *)v90 - v18;
  sub_1D5F7DC74();
  MEMORY[0x1E0C80A78](v19);
  v102 = (char *)v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v22 = v21;
  v106 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v121 = (char *)v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v116 = (char *)v90 - v25;
  sub_1D5E6D900();
  MEMORY[0x1E0C80A78](v26);
  v90[2] = (char *)v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0DBC790];
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E1A00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v30 = v29;
  v91 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v100 = (char *)v90 - v31;
  v90[1] = sub_1D6E20930();
  v90[0] = v32;
  v33 = sub_1D5F81184(&qword_1ED5E19F8, (unint64_t *)&qword_1ED5E1A00, (uint64_t (*)(uint64_t, _QWORD *))v28, MEMORY[0x1E0DBC7C8]);
  v34 = sub_1D6E270D4();
  v35 = MEMORY[0x1E0DEE9D8];
  v113 = v22;
  if (v34)
  {
    v129 = MEMORY[0x1E0DEE9D8];
    v105 = v34;
    sub_1D6228B44(0, v34 & ~(v34 >> 63), 0);
    result = sub_1D6E27098();
    v37 = v105;
    if ((v105 & 0x8000000000000000) == 0)
    {
      v38 = 0;
      v39 = v121;
      v101 = a1;
      v104 = v30;
      v115 = v15;
      v103 = v33;
      while (v38 != v37)
      {
        v114 = v38;
        v40 = (void (*)(__int128 *, _QWORD))sub_1D6E27134();
        v41 = v106;
        v42 = *(void (**)(char *))(v106 + 16);
        v42(v39);
        v40(&v127, 0);
        sub_1D6E1D474();
        if ((v126 >> 58) & 0x3C | (v126 >> 1) & 3
          || (v107 = v126,
              type metadata accessor for TodaySectionGapDescriptor(0),
              v43 = swift_projectBox(),
              v44 = type metadata accessor for TodayBlueprintCollapsedSection(0),
              v45 = *(_QWORD *)(v44 - 8),
              v46 = v43,
              v39 = v121,
              (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v44) != 1))
        {
          swift_release();
          ((void (*)(char *, char *, uint64_t))v42)(v116, v39, v22);
        }
        else
        {
          v47 = swift_allocBox();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v48, 1, 1, v44);
          v125 = v47;
          v49 = sub_1D5F81184(&qword_1ED5E11D8, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B98]);
          v50 = sub_1D6E270D4();
          v51 = v117;
          if (v50)
          {
            v52 = v50;
            v124 = MEMORY[0x1E0DEE9D8];
            sub_1D5F95840(0, v50 & ~(v50 >> 63), 0);
            result = sub_1D6E27098();
            v53 = v115;
            v119 = v49;
            if (v52 < 0)
              goto LABEL_32;
            do
            {
              v62 = (void (*)(__int128 *, _QWORD))sub_1D6E27134();
              v63 = *(void (**)(char *))(v53 + 16);
              v63(v51);
              v62(&v127, 0);
              sub_1D6E1CD60();
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                sub_1D6080BB0();
                v118 = v122 + *(int *)(v64 + 48);
                v65 = v14;
                v66 = v109;
                sub_1D6825208(v122, v109);
                sub_1D5F8DD80();
                v68 = v108;
                v69 = (uint64_t)v108 + *(int *)(v67 + 48);
                v70 = v110;
                sub_1D6E15EE4();
                v71 = sub_1D6E15ED8();
                v73 = v72;
                (*(void (**)(char *, uint64_t))(v111 + 8))(v70, v112);
                *v68 = v71;
                v68[1] = v73;
                v22 = v113;
                sub_1D6080B6C(v66, v69);
                swift_storeEnumTagMultiPayload();
                sub_1D5E6D8C0(&qword_1ED60D620, type metadata accessor for TodayModel, (uint64_t)&unk_1D6EDC754);
                v53 = v115;
                sub_1D6E1CD54();
                v74 = v66;
                v14 = v65;
                sub_1D5E8D20C(v74, type metadata accessor for TodayGapLocation);
                v75 = sub_1D6E241E8();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v118, v75);
                v51 = v117;
              }
              else
              {
                ((void (*)(char *, char *, uint64_t))v63)(v123, v51, v14);
                sub_1D5E8D20C(v122, type metadata accessor for TodayModel);
              }
              (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v14);
              v61 = v124;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1D5F95840(0, *(_QWORD *)(v61 + 16) + 1, 1);
                v61 = v124;
              }
              v77 = *(_QWORD *)(v61 + 16);
              v76 = *(_QWORD *)(v61 + 24);
              if (v77 >= v76 >> 1)
              {
                sub_1D5F95840(v76 > 1, v77 + 1, 1);
                v61 = v124;
              }
              *(_QWORD *)(v61 + 16) = v77 + 1;
              (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v61+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(_QWORD *)(v53 + 72) * v77, v123, v14);
              v124 = v61;
              v39 = v121;
              sub_1D6E27104();
              --v52;
            }
            while (v52);
          }
          else
          {
            v61 = MEMORY[0x1E0DEE9D8];
          }
          v78 = sub_1D5E6D8C0(&qword_1ED5E1028, (uint64_t (*)(uint64_t))sub_1D5F84898, MEMORY[0x1E0DB6F08]);
          v79 = sub_1D5E6D8C0(&qword_1ED5E1020, (uint64_t (*)(uint64_t))sub_1D5F84898, MEMORY[0x1E0DB6EF8]);
          MEMORY[0x1D8282BD8](v61, v14, v78, v79);
          sub_1D5F93158();
          sub_1D5E6D8C0(&qword_1ED60D620, type metadata accessor for TodayModel, (uint64_t)&unk_1D6EDC754);
          sub_1D6E1D468();
          swift_release();
          a1 = v101;
          v41 = v106;
        }
        (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v22);
        v35 = v129;
        v54 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D6228B44(0, *(_QWORD *)(v35 + 16) + 1, 1);
          v35 = v129;
        }
        v55 = v114;
        v56 = a1;
        v58 = *(_QWORD *)(v35 + 16);
        v57 = *(_QWORD *)(v35 + 24);
        if (v58 >= v57 >> 1)
        {
          sub_1D6228B44(v57 > 1, v58 + 1, 1);
          v55 = v114;
          v35 = v129;
        }
        v59 = v55 + 1;
        *(_QWORD *)(v35 + 16) = v58 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v35+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72) * v58, v116, v54);
        v129 = v35;
        v60 = v56;
        v22 = v54;
        v30 = v104;
        result = sub_1D6E27104();
        v38 = v59;
        a1 = v60;
        v37 = v105;
        if (v38 == v105)
          goto LABEL_27;
      }
      __break(1u);
LABEL_32:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_27:
    v80 = MEMORY[0x1E0DB7B60];
    v81 = sub_1D5F81184((unint64_t *)&unk_1ED5E11C0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B88]);
    v82 = sub_1D5F81184(&qword_1ED5E11B0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))v80, MEMORY[0x1E0DB7B80]);
    MEMORY[0x1D8282BD8](v35, v113, v81, v82);
    sub_1D5F93158();
    sub_1D5E6D8C0(&qword_1ED60D620, type metadata accessor for TodayModel, (uint64_t)&unk_1D6EDC754);
    sub_1D6E20924();
    v83 = sub_1D5F908DC();
    sub_1D6E22AFC();
    sub_1D6E22AF0();
    type metadata accessor for TodayFeedServiceConfig();
    sub_1D5E6D8C0((unint64_t *)&qword_1ED5E8E40, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t)&unk_1D6EA89F0);
    v84 = sub_1D6E22AD8();
    swift_release();
    if (v84)
    {
      *((_QWORD *)&v128 + 1) = sub_1D6E21B90();
      *(_QWORD *)&v127 = v84;
    }
    else
    {
      v127 = 0u;
      v128 = 0u;
    }
    v85 = v100;
    sub_1D6E209F0();
    sub_1D5F63054(v83);
    v86 = v96;
    v87 = v94;
    v88 = v97;
    (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v94, *MEMORY[0x1E0DB7FB8], v97);
    sub_1D5F8E704();
    v89 = v92;
    sub_1D6E1E950();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v88);
    v99(v89);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v89, v95);
    return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v85, v30);
  }
  return result;
}

uint64_t sub_1D6825208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TodayGapLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_1D682524C(uint64_t a1, uint64_t a2)
{
  return sub_1D6825260(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)a2, *(_QWORD *)(a2 + 8));
}

BOOL sub_1D6825260(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  _BOOL8 result;

  v7 = objc_msgSend(a1, sel_articleID);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1D6E26978();
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  v12 = objc_msgSend(a3, sel_articleID);
  if (!v12)
  {
    if (!v11)
      return a2 == a4;
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  v13 = v12;
  v14 = sub_1D6E26978();
  v16 = v15;

  if (!v11)
  {
    if (!v16)
      return a2 == a4;
    goto LABEL_16;
  }
  if (!v16)
    goto LABEL_16;
  if (v9 == v14 && v11 == v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a2 == a4;
  }
  v18 = sub_1D6E282C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v18 & 1) != 0)
    return a2 == a4;
  return result;
}

uint64_t assignWithCopy for MagazineFeedPoolFeedItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for MagazineFeedPoolFeedItem(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for MagazineFeedPoolFeedItem()
{
  return &type metadata for MagazineFeedPoolFeedItem;
}

BOOL sub_1D6825418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  double v11;
  double v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;

  v1 = sub_1D6E15ECC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6056B0 != -1)
    swift_once();
  type metadata accessor for PuzzlePrewarmer();
  sub_1D5E6D4DC(&qword_1ED605A10, v5, (uint64_t (*)(uint64_t))type metadata accessor for PuzzlePrewarmer, (uint64_t)&unk_1D6E94B00);
  sub_1D6E16544();
  v6 = v19;
  if (v19 <= 0.0)
    return 1;
  sub_1D6E15EC0();
  sub_1D6E15E48();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1D6E164C0();
  sub_1D6E16544();
  swift_release();
  v9 = v19;
  if (v19 <= 0.0)
  {
    v10 = objc_msgSend(objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_configurationManager), sel_possiblyUnfetchedAppConfiguration), sel_puzzlesConfig);
    swift_unknownObjectRelease();
    objc_msgSend(v10, sel_puzzlesPrewarmTimeInterval);
    v9 = v11;

  }
  if (qword_1ED605840 != -1)
    swift_once();
  v12 = v8 - v6;
  v13 = sub_1D6E1C664();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED6986E8);
  v14 = sub_1D6E1C64C();
  v15 = sub_1D6E27374();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    *(_DWORD *)v16 = 134218496;
    v19 = v6;
    sub_1D6E27C44();
    *(_WORD *)(v16 + 12) = 2048;
    v19 = v9;
    sub_1D6E27C44();
    *(_WORD *)(v16 + 22) = 2048;
    v19 = v12;
    sub_1D6E27C44();
    _os_log_impl(&dword_1D5E69000, v14, v15, "Puzzles lastPrewarmTime=%f puzzlesPrewarmTimeInterval=%f timeDiff=%f", (uint8_t *)v16, 0x20u);
    MEMORY[0x1D82918CC](v16, -1, -1);
  }

  return v9 < v12;
}

uint64_t sub_1D68256EC(uint64_t a1, void *a2)
{
  id v3;

  sub_1D5E76DF0(0, (unint64_t *)&qword_1ED5E0E60, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  *(_QWORD *)(swift_allocObject() + 16) = a2;
  v3 = a2;
  return sub_1D6E1AC0C();
}

uint64_t sub_1D6825774(void *a1)
{
  id v2;

  sub_1D5E76DF0(0, (unint64_t *)&qword_1ED5E0E60, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v2 = a1;
  return sub_1D6E1AC0C();
}

uint64_t sub_1D68257F0(uint64_t a1, void *a2)
{
  id v3;

  sub_1D5E76DF0(0, (unint64_t *)&qword_1ED5E0E60, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  *(_QWORD *)(swift_allocObject() + 16) = a2;
  v3 = a2;
  return sub_1D6E1AC0C();
}

uint64_t sub_1D6825880(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED62F240, (uint64_t (*)(uint64_t))sub_1D6828BEC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  *(_QWORD *)(swift_allocObject() + 16) = a2;
  v3 = a2;
  sub_1D6E1AC0C();
  v4 = (void *)sub_1D6E1AB4C();
  type metadata accessor for PuzzlePrewarmer();
  sub_1D6E1AC30();

  swift_release();
  v5 = (void *)sub_1D6E1AB4C();
  v6 = sub_1D6E1ACCC();

  swift_release();
  return v6;
}

void sub_1D6825988(void *a1)
{
  sub_1D6825B28(a1, "Error in prewarming puzzles error=%@");
}

id sub_1D68259C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PuzzlePrewarmer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D6825A78()
{
  return sub_1D6E16718();
}

uint64_t sub_1D6825A84()
{
  return sub_1D6E16730();
}

uint64_t sub_1D6825A94(void *a1)
{
  id v2;

  sub_1D5E76DF0(0, (unint64_t *)&qword_1ED5E0E60, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v2 = a1;
  return sub_1D6E1AC0C();
}

void sub_1D6825B1C(void *a1)
{
  sub_1D6825B28(a1, "Error in prewarming stats error=%@");
}

void sub_1D6825B28(void *a1, const char *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  NSObject *oslog;
  uint64_t v12;

  if (qword_1ED605840 != -1)
    swift_once();
  v4 = sub_1D6E1C664();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED6986E8);
  v5 = a1;
  v6 = a1;
  oslog = sub_1D6E1C64C();
  v7 = sub_1D6E2735C();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = a1;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    sub_1D6E27C44();
    *v9 = v12;

    _os_log_impl(&dword_1D5E69000, oslog, v7, a2, v8, 0xCu);
    sub_1D603741C();
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v9, -1, -1);
    MEMORY[0x1D82918CC](v8, -1, -1);
  }
  else
  {

  }
}

uint64_t sub_1D6825CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1D6825CFC()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  id v3;
  _QWORD *v4;

  v1 = v0[3];
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleService), *(_QWORD *)(v1 + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleService + 24));
  v2 = objc_msgSend(objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_configurationManager), sel_appConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  v3 = objc_msgSend(v2, sel_puzzleTypes);

  v0[4] = sub_1D6E26D80();
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_1D6825E00;
  return sub_1D6E24A1C();
}

uint64_t sub_1D6825E00(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 56) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1D6825E7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D6825EB0()
{
  sub_1D5E76DF0(0, (unint64_t *)&qword_1ED5E0E60, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1D6E1AD08();
}

uint64_t sub_1D6825F24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1D6825F3C()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleHistoryService), *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleHistoryService + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1D6825FB4;
  return sub_1D6E257CC();
}

uint64_t sub_1D6825FB4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D6826018()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_1ED605840 != -1)
    swift_once();
  v1 = sub_1D6E1C664();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED6986E8);
  v2 = sub_1D6E1C64C();
  v3 = sub_1D6E27374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D5E69000, v2, v3, "Finished syncing puzzle history", v4, 2u);
    MEMORY[0x1D82918CC](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D68260F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  if (qword_1ED605840 != -1)
    swift_once();
  v1 = *(void **)(v0 + 40);
  v2 = sub_1D6E1C664();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED6986E8);
  v3 = v1;
  v4 = v1;
  v5 = sub_1D6E1C64C();
  v6 = sub_1D6E2735C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 40);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v12;
    sub_1D6E27C44();
    *v10 = v12;

    _os_log_impl(&dword_1D5E69000, v5, v6, "Error syncing puzzle history list error=%@", v9, 0xCu);
    sub_1D603741C();
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v10, -1, -1);
    MEMORY[0x1D82918CC](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D68262C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[5] = a2;
  v3 = sub_1D6E15ECC();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_1D5E847C4(0, &qword_1ED60BDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2[9] = swift_task_alloc();
  v4 = sub_1D6E19DB4();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D6826394()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  unsigned int *v6;
  void (*v7)(uint64_t, _QWORD, uint64_t);
  char **v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  uint64_t v36;
  os_log_type_t type;
  uint64_t v38;
  id v39;
  uint64_t v40;

  v1 = v0[5];
  v2 = v0[13];
  v3 = v0[10];
  v4 = v0[11];
  v5 = sub_1D6826C28();
  v6 = (unsigned int *)MEMORY[0x1E0DB32A0];
  v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104);
  if (v5)
  {
    v8 = &selRef_ignoreCacheCachePolicy;
  }
  else
  {
    v6 = (unsigned int *)MEMORY[0x1E0DB32B0];
    v8 = &selRef_cachedOnlyCachePolicy;
  }
  v7(v2, *v6, v3);
  v39 = objc_msgSend((id)objc_opt_self(), *v8);
  v0[14] = v39;
  v9 = objc_msgSend(objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_configurationManager), sel_appConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  v10 = objc_msgSend(v9, sel_puzzleTypes);

  v0[15] = sub_1D6E26D80();
  if (qword_1ED605840 != -1)
    swift_once();
  v11 = v0[12];
  v12 = v0[13];
  v13 = v0[10];
  v14 = v0[11];
  v15 = sub_1D6E1C664();
  v0[16] = __swift_project_value_buffer(v15, (uint64_t)qword_1ED6986E8);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v0[17] = v16;
  v16(v11, v12, v13);
  swift_bridgeObjectRetain_n();
  v17 = sub_1D6E1C64C();
  v18 = sub_1D6E27374();
  v19 = os_log_type_enabled(v17, v18);
  v21 = v0[11];
  v20 = v0[12];
  v22 = v0[10];
  if (v19)
  {
    v23 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v40 = v38;
    *(_DWORD *)v23 = 136315394;
    v24 = swift_bridgeObjectRetain();
    type = v18;
    v25 = MEMORY[0x1D828F5BC](v24, MEMORY[0x1E0DEA968]);
    v36 = v20;
    v27 = v26;
    swift_bridgeObjectRelease();
    v0[3] = sub_1D5F69694(v25, v27, &v40);
    sub_1D6E27C44();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    sub_1D5E6D4DC((unint64_t *)&unk_1ED60BDA0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], MEMORY[0x1E0DB32E0]);
    v28 = sub_1D6E28280();
    v0[4] = sub_1D5F69694(v28, v29, &v40);
    sub_1D6E27C44();
    swift_bridgeObjectRelease();
    v30 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v30(v36, v22);
    _os_log_impl(&dword_1D5E69000, v17, type, "Prewarming list of puzzlesType=%s with cachePolicy=%s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v38, -1, -1);
    MEMORY[0x1D82918CC](v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    v30 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v30(v20, v22);
  }

  v31 = v0[5];
  v32 = OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleService;
  v0[18] = v30;
  v0[19] = v32;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v31 + v32), *(_QWORD *)(v31 + v32 + 24));
  v33 = v39;
  v34 = (_QWORD *)swift_task_alloc();
  v0[20] = v34;
  *v34 = v0;
  v34[1] = sub_1D6826784;
  return sub_1D6E24A04();
}

uint64_t sub_1D6826784(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc();
  v5 = *(void **)(v4 + 112);
  if (v1)
  {
    swift_bridgeObjectRelease();

  }
  else
  {
    *(_QWORD *)(v4 + 176) = a1;

    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1D682681C()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[17];
  v2 = v0[13];
  v3 = v0[10];
  v4 = v0[11];
  v5 = v0[9];
  v6 = (_QWORD *)(v0[5] + v0[19]);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  v1(v5, v2, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
  v7 = (_QWORD *)swift_task_alloc();
  v0[23] = v7;
  *v7 = v0;
  v7[1] = sub_1D68268E8;
  return sub_1D6E249F8();
}

uint64_t sub_1D68268E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  sub_1D5F377D4(v2, (uint64_t)&qword_1ED60BDB0, (uint64_t)MEMORY[0x1E0DB32D0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D5E847C4);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D6826980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  if (qword_1ED60B778 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  sub_1D6E15EC0();
  sub_1D6E15E48();
  v5 = v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v0 + 16) = v5;
  type metadata accessor for PuzzlePrewarmer();
  sub_1D5E6D4DC(&qword_1ED605A18, v6, (uint64_t (*)(uint64_t))type metadata accessor for PuzzlePrewarmer, (uint64_t)&unk_1D6E94AC0);
  sub_1D6E16718();
  v7 = sub_1D6E1C64C();
  v8 = sub_1D6E27374();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D5E69000, v7, v8, "Finished prewarming puzzle types", v9, 2u);
    MEMORY[0x1D82918CC](v9, -1, -1);
  }
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
  v11 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 80);

  v10(v11, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D6826B18()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);

  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D6826BA0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);

  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_1D6826C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  double v11;
  double v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;

  v1 = sub_1D6E15ECC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED60B778 != -1)
    swift_once();
  type metadata accessor for PuzzlePrewarmer();
  sub_1D5E6D4DC(&qword_1ED605A10, v5, (uint64_t (*)(uint64_t))type metadata accessor for PuzzlePrewarmer, (uint64_t)&unk_1D6E94B00);
  sub_1D6E16544();
  v6 = v19;
  if (v19 <= 0.0)
    return 1;
  sub_1D6E15EC0();
  sub_1D6E15E48();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1D6E164F0();
  sub_1D6E16544();
  swift_release();
  v9 = v19;
  if (v19 <= 0.0)
  {
    v10 = objc_msgSend(objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_configurationManager), sel_appConfiguration), sel_puzzlesConfig);
    swift_unknownObjectRelease();
    objc_msgSend(v10, sel_puzzlesEngineRefreshTimeInterval);
    v9 = v11;

  }
  if (qword_1ED605840 != -1)
    swift_once();
  v12 = v8 - v6;
  v13 = sub_1D6E1C664();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED6986E8);
  v14 = sub_1D6E1C64C();
  v15 = sub_1D6E27374();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    *(_DWORD *)v16 = 134218496;
    v19 = v6;
    sub_1D6E27C44();
    *(_WORD *)(v16 + 12) = 2048;
    v19 = v9;
    sub_1D6E27C44();
    *(_WORD *)(v16 + 22) = 2048;
    v19 = v12;
    sub_1D6E27C44();
    _os_log_impl(&dword_1D5E69000, v14, v15, "Puzzles lastRefreshEngineTime=%f puzzlesEngineRefreshTimeInterval=%f timeDiff=%f", (uint8_t *)v16, 0x20u);
    MEMORY[0x1D82918CC](v16, -1, -1);
  }

  return v9 < v12;
}

uint64_t sub_1D6826EFC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[23] = a2;
  v3 = sub_1D6E15ECC();
  v2[24] = v3;
  v2[25] = *(_QWORD *)(v3 - 8);
  v2[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D6826F5C()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  id v5;
  id v6;
  unint64_t v7;
  id v8;
  unsigned int v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  const char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = (char *)objc_msgSend(*(id *)(*(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_bundleSubscriptionManager), sel_cachedSubscription);
  if (objc_getAssociatedObject(v1, v1 + 1))
  {
    sub_1D6E27D04();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
  }
  v2 = MEMORY[0x1E0DEE9B8];
  v3 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1D5FA9CDC(v0 + 48, v0 + 16, (uint64_t)&qword_1ED5F4F00, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D5E76DF0);
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_1D5F377D4(v0 + 16, (uint64_t)&qword_1ED5F4F00, v3, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D5E76DF0);
    goto LABEL_9;
  }
  v4 = (id *)(v0 + 176);
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4780);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v5 = 0;
    v7 = 0;
    goto LABEL_10;
  }
  v5 = *v4;
  v6 = objc_msgSend(*v4, sel_integerValue);
  if (v6 == (id)-1)
  {

    goto LABEL_24;
  }
  v7 = (unint64_t)v6;
LABEL_10:
  if (objc_getAssociatedObject(v1, (const void *)~v7))
  {
    sub_1D6E27D04();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
  }
  sub_1D5FA9CDC(v0 + 112, v0 + 80, (uint64_t)&qword_1ED5F4F00, v2 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D5E76DF0);
  if (!*(_QWORD *)(v0 + 104))
  {
    sub_1D5F377D4(v0 + 80, (uint64_t)&qword_1ED5F4F00, v2 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D5E76DF0);
LABEL_18:

    if ((v7 & 1) != 0)
      goto LABEL_24;
LABEL_19:
    if (qword_1ED605840 != -1)
      swift_once();
    v10 = sub_1D6E1C664();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED6986E8);
    v11 = sub_1D6E1C64C();
    v12 = sub_1D6E27374();
    if (!os_log_type_enabled(v11, v12))
      goto LABEL_30;
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = "Not a bundle subscriber. Not eligible for prewarming puzzles.";
    goto LABEL_29;
  }
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4780);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_18;
  v8 = *(id *)(v0 + 168);
  v9 = objc_msgSend(v8, sel_integerValue);

  if (((v9 ^ v7) & 1) == 0)
    goto LABEL_19;
LABEL_24:
  v15 = (_QWORD *)(*(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleHistoryService);
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  if ((sub_1D6E257C0() & 1) != 0)
  {
    if (qword_1ED605840 != -1)
      swift_once();
    v16 = sub_1D6E1C664();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED6986E8);
    v11 = sub_1D6E1C64C();
    v12 = sub_1D6E27374();
    if (!os_log_type_enabled(v11, v12))
      goto LABEL_30;
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = "Prewarming puzzles is ignored since user has no puzzles in their history.";
LABEL_29:
    _os_log_impl(&dword_1D5E69000, v11, v12, v14, v13, 2u);
    MEMORY[0x1D82918CC](v13, -1, -1);
LABEL_30:

LABEL_31:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_1D6E164FC();
  type metadata accessor for PuzzlePrewarmer();
  sub_1D5E6D4DC(&qword_1ED605A10, v18, (uint64_t (*)(uint64_t))type metadata accessor for PuzzlePrewarmer, (uint64_t)&unk_1D6E94B00);
  sub_1D6E16544();
  swift_release();
  if (*(double *)(v0 + 144) <= 0.0)
  {
    v19 = objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_configurationManager), sel_appConfiguration), sel_puzzlesConfig);
    swift_unknownObjectRelease();
    objc_msgSend(v19, sel_puzzleHistoryPrewarmTimeInterval);

  }
  sub_1D6E15E24();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  v20 = sub_1D6E257F0();
  if (!*(_QWORD *)(v20 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED605840 != -1)
      swift_once();
    v40 = sub_1D6E1C664();
    __swift_project_value_buffer(v40, (uint64_t)qword_1ED6986E8);
    v41 = sub_1D6E1C64C();
    v42 = sub_1D6E27374();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1D5E69000, v41, v42, "No puzzles found in puzzle history. Nothing to prewarm for puzzles.", v43, 2u);
      MEMORY[0x1D82918CC](v43, -1, -1);
    }
    v45 = *(_QWORD *)(v0 + 200);
    v44 = *(_QWORD *)(v0 + 208);
    v46 = *(_QWORD *)(v0 + 192);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
    goto LABEL_31;
  }
  sub_1D6E16484();
  sub_1D6E16544();
  swift_release();
  v21 = *(id *)(v0 + 152);
  if ((uint64_t)v21 <= 0)
  {
    v22 = objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_configurationManager), sel_appConfiguration), sel_puzzlesConfig);
    swift_unknownObjectRelease();
    v21 = objc_msgSend(v22, sel_numberOfHistoryPuzzlesToPrewarm);

  }
  v23 = sub_1D60FDAE4((int64_t)v21, v20);
  v25 = v24;
  v54 = v26;
  v28 = v27;
  *(_QWORD *)(v0 + 216) = v23;
  if (qword_1ED605840 != -1)
    swift_once();
  v29 = sub_1D6E1C664();
  *(_QWORD *)(v0 + 224) = __swift_project_value_buffer(v29, (uint64_t)qword_1ED6986E8);
  swift_unknownObjectRetain_n();
  v30 = sub_1D6E1C64C();
  v31 = sub_1D6E27374();
  if (os_log_type_enabled(v30, v31))
  {
    v53 = v28;
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v55 = v33;
    *(_DWORD *)v32 = 136315138;
    swift_unknownObjectRetain();
    v34 = v25;
    v35 = sub_1D6E27D10();
    v37 = v36;
    swift_unknownObjectRelease();
    v38 = v35;
    v25 = v34;
    *(_QWORD *)(v0 + 160) = sub_1D5F69694(v38, v37, &v55);
    sub_1D6E27C44();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D5E69000, v30, v31, "Prewarming list of puzzleIDs=%s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v33, -1, -1);
    v39 = v32;
    v28 = v53;
    MEMORY[0x1D82918CC](v39, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v47 = *(_QWORD *)(v0 + 184);
  v48 = OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleService;
  *(_QWORD *)(v0 + 232) = OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleService;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v47 + v48), *(_QWORD *)(v47 + v48 + 24));
  if ((v28 & 1) != 0)
  {
    sub_1D6E282F8();
    swift_unknownObjectRetain_n();
    v50 = swift_dynamicCastClass();
    if (!v50)
    {
      swift_unknownObjectRelease();
      v50 = MEMORY[0x1E0DEE9D8];
    }
    v51 = *(_QWORD *)(v50 + 16);
    swift_release();
    if (__OFSUB__(v28 >> 1, v54))
    {
      __break(1u);
    }
    else if (v51 == (v28 >> 1) - v54)
    {
      v49 = swift_dynamicCastClass();
      if (!v49)
      {
        swift_unknownObjectRelease();
        v49 = MEMORY[0x1E0DEE9D8];
      }
      goto LABEL_56;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRetain();
  }
  v49 = sub_1D60FEED0(v23, v25, v54, v28);
LABEL_56:
  *(_QWORD *)(v0 + 240) = v49;
  swift_unknownObjectRelease();
  v52 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v52;
  *v52 = v0;
  v52[1] = sub_1D68278A4;
  return sub_1D6E24A58();
}

uint64_t sub_1D68278A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 256) = v1;
  swift_task_dealloc();
  swift_release();
  if (!v1)
    *(_QWORD *)(v4 + 264) = a1;
  return swift_task_switch();
}

uint64_t sub_1D6827920()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(v0[23] + v0[29]);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v2 = (_QWORD *)swift_task_alloc();
  v0[34] = v2;
  *v2 = v0;
  v2[1] = sub_1D682799C;
  return sub_1D6E249EC();
}

uint64_t sub_1D682799C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D6827A08()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1D6E1C64C();
  v2 = sub_1D6E27374();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1D5E69000, v1, v2, "Finished prewarming puzzles", v3, 2u);
    MEMORY[0x1D82918CC](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 200);

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D6827ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D6827B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D6827B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch();
}

uint64_t sub_1D6827BA4()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleStatsService), *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleStatsService + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_1D6827C1C;
  return sub_1D6E253C4();
}

uint64_t sub_1D6827C1C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D6827C70()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_1ED605840 != -1)
    swift_once();
  v1 = sub_1D6E1C664();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED6986E8);
  v2 = sub_1D6E1C64C();
  v3 = sub_1D6E27374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D5E69000, v2, v3, "PuzzlePrewarmer: Finished updating puzzle stats", v4, 2u);
    MEMORY[0x1D82918CC](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D6827D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v20;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED623EB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = sub_1D6E26F60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = a5;
  v17[5] = a6;
  v17[6] = sub_1D5EC0B70;
  v17[7] = v15;
  v17[8] = a3;
  v17[9] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  v18 = a6;
  swift_retain();
  sub_1D6BD1D98((uint64_t)v14, (uint64_t)&unk_1EFFF32C0, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1D6827E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8[50] = a8;
  v8[51] = v12;
  v8[48] = a6;
  v8[49] = a7;
  v8[46] = a4;
  v8[47] = a5;
  v9 = sub_1D6E154E8();
  v8[52] = v9;
  v8[53] = *(_QWORD *)(v9 - 8);
  v8[54] = swift_task_alloc();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8[55] = swift_task_alloc();
  v10 = sub_1D6E15BE4();
  v8[56] = v10;
  v8[57] = *(_QWORD *)(v10 - 8);
  v8[58] = swift_task_alloc();
  v8[59] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D6827F64()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 368);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D6E28040();
    v1 = *(_QWORD *)(v0 + 368);
    *(_QWORD *)(v0 + 480) = result;
    if (result)
      goto LABEL_3;
LABEL_9:
    v7 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v0 + 384))(v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 480) = v2;
  if (!v2)
    goto LABEL_9;
LABEL_3:
  v4 = OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleService;
  *(_QWORD *)(v0 + 488) = OBJC_IVAR____TtC7NewsUI215PuzzlePrewarmer_puzzleService;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v5 = MEMORY[0x1D8290720](0, v1);
    v4 = *(_QWORD *)(v0 + 488);
LABEL_7:
    *(_QWORD *)(v0 + 496) = v5;
    *(_QWORD *)(v0 + 504) = 1;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 376) + v4), *(_QWORD *)(*(_QWORD *)(v0 + 376) + v4 + 24));
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 512) = v6;
    *v6 = v0;
    v6[1] = sub_1D68280C8;
    return sub_1D6E24A28();
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(_QWORD *)(v1 + 32);
    swift_unknownObjectRetain();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D68280C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 520) = a1;
  *(_QWORD *)(v3 + 528) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D6828140()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1D6E27224();
  swift_retain();
  sub_1D6E27230();
  sub_1D5FA9CDC(v0 + 80, v0 + 16, (uint64_t)&unk_1ED630AA0, (uint64_t)sub_1D6828DC4, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D5E847C4);
  if (*(_QWORD *)(v0 + 40))
  {
    v1 = (_OWORD *)(v0 + 256);
    v2 = (uint64_t *)(v0 + 352);
    sub_1D5F79F98((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 192));
    while (1)
    {
      sub_1D5F79F98((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 224));
      if ((swift_dynamicCast() & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1(v0 + 192);
        goto LABEL_4;
      }
      v3 = *(_QWORD *)(v0 + 328);
      v36 = *(_QWORD *)(v0 + 320);
      sub_1D5F79E0C(v0 + 192, v0 + 288);
      sub_1D607CD50();
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v0 + 192);
        goto LABEL_4;
      }
      v4 = *v2;
      if (*(_QWORD *)(*v2 + 16) && (v5 = sub_1D5F77FD0(0x55746C7561666564, 0xEA00000000006C72), (v6 & 1) != 0))
      {
        sub_1D5F79E0C(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)v1);
      }
      else
      {
        *v1 = 0u;
        v1[1] = 0u;
      }
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v0 + 280))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v8 = *(_QWORD *)(v0 + 448);
          v7 = *(_QWORD *)(v0 + 456);
          v9 = *(_QWORD *)(v0 + 440);
          sub_1D6E15BB4();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v8) == 1)
          {
            sub_1D5F377D4(*(_QWORD *)(v0 + 440), (uint64_t)&qword_1ED5E0210, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D5E847C4);
          }
          else
          {
            v11 = *(_QWORD *)(v0 + 464);
            v10 = *(_QWORD *)(v0 + 472);
            v12 = *(_QWORD *)(v0 + 448);
            v31 = v12;
            v32 = *(_QWORD *)(v0 + 456);
            v35 = *(_QWORD *)(v0 + 432);
            v33 = *(_QWORD *)(v0 + 424);
            v34 = *(_QWORD *)(v0 + 416);
            v29 = *(void **)(v0 + 376);
            v30 = *(_QWORD *)(v0 + 496);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v32 + 32))(v10, *(_QWORD *)(v0 + 440), v12);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v11, v10, v12);
            sub_1D6E154D0();
            v28 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
            v27 = (void *)sub_1D6E154B8();
            v13 = (_QWORD *)swift_allocObject();
            v13[2] = v29;
            v13[3] = v30;
            v13[4] = v36;
            v13[5] = v3;
            *(_QWORD *)(v0 + 176) = sub_1D6828E60;
            *(_QWORD *)(v0 + 184) = v13;
            *(_QWORD *)(v0 + 144) = MEMORY[0x1E0C809B0];
            *(_QWORD *)(v0 + 152) = 1107296256;
            *(_QWORD *)(v0 + 160) = sub_1D682896C;
            *(_QWORD *)(v0 + 168) = &block_descriptor_121;
            v14 = _Block_copy((const void *)(v0 + 144));
            v15 = v29;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_release();
            v16 = objc_msgSend(v28, sel_dataTaskWithRequest_completionHandler_, v27, v14);
            _Block_release(v14);

            objc_msgSend(v16, sel_resume);
            (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
            (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v10, v31);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1(v0 + 192);
          v1 = (_OWORD *)(v0 + 256);
          goto LABEL_22;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1D5F377D4((uint64_t)v1, (uint64_t)&qword_1ED5F4F00, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D5E76DF0);
      }
      __swift_destroy_boxed_opaque_existential_1(v0 + 192);
LABEL_22:
      v2 = (uint64_t *)(v0 + 352);
LABEL_4:
      sub_1D6E27230();
      sub_1D5FA9CDC(v0 + 80, v0 + 16, (uint64_t)&unk_1ED630AA0, (uint64_t)sub_1D6828DC4, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D5E847C4);
      if (!*(_QWORD *)(v0 + 40))
        break;
      sub_1D5F79F98((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 192));
    }
  }
  v17 = *(void **)(v0 + 520);
  v18 = *(_QWORD *)(v0 + 504);
  v19 = *(_QWORD *)(v0 + 480);
  swift_unknownObjectRelease();

  result = swift_release_n();
  if (v18 == v19)
  {
    v21 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v0 + 384))(v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v22 = *(_QWORD *)(v0 + 504);
  v23 = *(_QWORD *)(v0 + 368);
  if ((v23 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x1D8290720](*(_QWORD *)(v0 + 504));
    v24 = result;
  }
  else
  {
    if (v22 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_32;
    v24 = *(_QWORD *)(v23 + 8 * v22 + 32);
    result = swift_unknownObjectRetain();
  }
  *(_QWORD *)(v0 + 496) = v24;
  *(_QWORD *)(v0 + 504) = v22 + 1;
  if (!__OFADD__(v22, 1))
  {
    v25 = (_QWORD *)(*(_QWORD *)(v0 + 376) + *(_QWORD *)(v0 + 488));
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 512) = v26;
    *v26 = v0;
    v26[1] = sub_1D68280C8;
    return sub_1D6E24A28();
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1D6828704()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void (*v14)(void *);

  swift_unknownObjectRelease();
  if (qword_1ED605840 != -1)
    swift_once();
  v1 = *(void **)(v0 + 528);
  v2 = sub_1D6E1C664();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED6986E8);
  v3 = v1;
  v4 = v1;
  v5 = sub_1D6E1C64C();
  v6 = sub_1D6E2735C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 528);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 360) = v12;
    sub_1D6E27C44();
    *v10 = v12;

    _os_log_impl(&dword_1D5E69000, v5, v6, "Error in downloading small thumbnails when prewarming error=%@", v9, 0xCu);
    sub_1D603741C();
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v10, -1, -1);
    MEMORY[0x1D82918CC](v9, -1, -1);
  }
  else
  {

  }
  v13 = *(void **)(v0 + 528);
  v14 = *(void (**)(void *))(v0 + 400);

  v14(v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D68288FC(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, void *a7, void *a8)
{
  uint64_t v12;

  if (a2 >> 60 != 15)
  {
    v12 = result;
    sub_1D5FCC858(result, a2);
    sub_1D6828E6C(v12, a2, a6, a7, a8);
    return sub_1D5EC50D0(v12, a2);
  }
  return result;
}

uint64_t sub_1D682896C(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, void *, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_1D6E15C68();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a3;
  v12 = a4;
  v7(v6, v10, a3, a4);

  sub_1D5EC50D0((uint64_t)v6, v10);
  return swift_release();
}

uint64_t sub_1D6828AB8(uint64_t a1, uint64_t a2)
{
  return sub_1D5E6D4DC(&qword_1ED605A10, a2, (uint64_t (*)(uint64_t))type metadata accessor for PuzzlePrewarmer, (uint64_t)&unk_1D6E94B00);
}

uint64_t sub_1D6828AE4()
{
  uint64_t v0;

  return sub_1D6825A94(*(void **)(v0 + 16));
}

uint64_t sub_1D6828AFC()
{
  swift_getObjectType();
  return sub_1D6E278E4();
}

uint64_t sub_1D6828B40()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D6828B64(uint64_t a1)
{
  uint64_t v1;

  return sub_1D68256EC(a1, *(void **)(v1 + 16));
}

uint64_t sub_1D6828B7C()
{
  uint64_t v0;

  return sub_1D6825774(*(void **)(v0 + 16));
}

uint64_t sub_1D6828B84(uint64_t a1)
{
  uint64_t v1;

  return sub_1D68257F0(a1, *(void **)(v1 + 16));
}

uint64_t sub_1D6828BAC(uint64_t a1)
{
  uint64_t v1;

  return sub_1D68257F0(a1, *(void **)(v1 + 16));
}

uint64_t sub_1D6828BD4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D6825880(a1, *(void **)(v1 + 16));
}

void sub_1D6828BEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED62F410)
  {
    sub_1D5E78884(255, (unint64_t *)&unk_1ED624020);
    v0 = sub_1D6E26EDC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED62F410);
  }
}

uint64_t sub_1D6828C50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D60373D4;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1D6828CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1D6827D50(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_1D6828CBC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D6828CE0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D6828D24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1D60373D4;
  return sub_1D6827E88(a1, v4, v5, v6, v7, v8, v9, v10);
}

void sub_1D6828DC4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED630A98)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED630A98);
  }
}

uint64_t sub_1D6828E2C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D6828E60(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1D68288FC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(char **)(v4 + 24), *(void **)(v4 + 32), *(void **)(v4 + 40));
}

uint64_t sub_1D6828E6C(uint64_t a1, uint64_t a2, char *a3, void *a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void *v31;
  id v32;
  void *v33;
  unsigned int v34;
  id v35;
  char *v36;
  void *v37;
  void *v38;
  void (*v39)(char *, uint64_t);
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  _QWORD *v48;
  id v49;
  void *v50;
  void *v51;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  id v58;
  id v59[4];

  v51 = a4;
  v52 = a5;
  v55 = a2;
  v56 = a3;
  v54 = a1;
  v59[3] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1D6E15ADC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v51 - v10;
  v12 = sub_1D6E15BE4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v53 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v57 = (char *)&v51 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v51 - v18;
  v20 = 1;
  v58 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v21 = objc_msgSend(v58, sel_URLsForDirectory_inDomains_, 9, 1);
  v22 = sub_1D6E26D80();

  if (*(_QWORD *)(v22 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, v22 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v12);
    v20 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v20, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {

    return sub_1D5F377D4((uint64_t)v11, (uint64_t)&qword_1ED5E0210, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D5E847C4);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v11, v12);
  sub_1D5E76DF0(0, (unint64_t *)&qword_1ED5F4E10, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1D6E349D0;
  *(_QWORD *)(v24 + 32) = 0x7954656C7A7A7570;
  *(_QWORD *)(v24 + 40) = 0xEA00000000006570;
  v25 = objc_msgSend(v56, sel_identifier);
  v26 = sub_1D6E26978();
  v56 = v19;
  v28 = v27;

  *(_QWORD *)(v24 + 48) = v26;
  *(_QWORD *)(v24 + 56) = v28;
  v29 = v56;
  *(_QWORD *)(v24 + 64) = 0x69616E626D756874;
  *(_QWORD *)(v24 + 72) = 0xEA0000000000736CLL;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CAFD78], v5);
  sub_1D5F5EA98();
  v30 = v57;
  sub_1D6E15BD8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1D6E15B9C();
  v31 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  v32 = v58;
  LOBYTE(v25) = objc_msgSend(v58, sel_fileExistsAtPath_, v31);

  if ((v25 & 1) == 0)
  {
    v33 = (void *)sub_1D6E15B30();
    v59[0] = 0;
    v34 = objc_msgSend(v32, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v33, 1, 0, v59);

    if (!v34)
    {
      v40 = v59[0];
      v41 = (void *)sub_1D6E15A34();

      swift_willThrow();
      if (qword_1ED605840 != -1)
        swift_once();
      v42 = sub_1D6E1C664();
      __swift_project_value_buffer(v42, (uint64_t)qword_1ED6986E8);
      v43 = v41;
      v44 = v41;
      v45 = sub_1D6E1C64C();
      v46 = sub_1D6E2735C();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        v48 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v47 = 138412290;
        v49 = v41;
        v50 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v59[0] = v50;
        v29 = v56;
        v30 = v57;
        sub_1D6E27C44();
        *v48 = v50;

        _os_log_impl(&dword_1D5E69000, v45, v46, "Error in creating small thumbnails documents directory error=%@", v47, 0xCu);
        sub_1D603741C();
        swift_arrayDestroy();
        MEMORY[0x1D82918CC](v48, -1, -1);
        MEMORY[0x1D82918CC](v47, -1, -1);

      }
      else
      {

      }
      v39 = *(void (**)(char *, uint64_t))(v13 + 8);
      goto LABEL_15;
    }
    v35 = v59[0];
  }
  v59[0] = v51;
  v59[1] = v52;
  swift_bridgeObjectRetain();
  sub_1D6E26A98();
  v36 = v53;
  sub_1D6E15B3C();
  swift_bridgeObjectRelease();
  sub_1D6E15B9C();
  v37 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  v38 = (void *)sub_1D6E15C50();
  objc_msgSend(v32, sel_createFileAtPath_contents_attributes_, v37, v38, 0);

  v39 = *(void (**)(char *, uint64_t))(v13 + 8);
  v39(v36, v12);
LABEL_15:
  v39(v30, v12);
  return ((uint64_t (*)(char *, uint64_t))v39)(v29, v12);
}

uint64_t sub_1D68294C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D603769C;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1D6829524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D603769C;
  return sub_1D6826EFC(a1, v4);
}

uint64_t sub_1D682957C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D603769C;
  return sub_1D68262C4(a1, v4);
}

uint64_t sub_1D68295D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D603769C;
  v3[3] = v2;
  return swift_task_switch();
}

id sub_1D6829660()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = *(id *)(v0 + 24);
  }
  else
  {
    v3 = (void *)sub_1D68296B8(v0);
    v4 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1D68296B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  BOOL v7;
  unsigned int *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v13;

  v2 = sub_1D6E1FF34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*(id *)(a1 + 80), sel_feedConfiguration);
  v7 = v6 == (id)9 || v6 == (id)3;
  v8 = (unsigned int *)MEMORY[0x1E0DBBE60];
  v9 = *(void **)(a1 + 16);
  if (!v7)
    v8 = (unsigned int *)MEMORY[0x1E0DBBE68];
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *v8, v2);
  v10 = objc_allocWithZone((Class)sub_1D6E1F9AC());
  v11 = v9;
  return sub_1D6E1F994();
}

void sub_1D6829778(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t Strong;
  id v5;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = *(id *)(Strong + 16);
    sub_1D6933E50((uint64_t)v5, 2, a3);
    swift_release();

  }
}

void sub_1D68297F0()
{
  uint64_t Strong;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = Strong;
    v2 = __swift_project_boxed_opaque_existential_1((_QWORD *)(Strong + 32), *(_QWORD *)(Strong + 56));
    v3 = *v2;
    v4 = *(_QWORD *)(*v2 + 112);
    if (v4)
    {
      v5 = *(void **)(v3 + 120);
      v6 = *(_QWORD *)(v3 + 104);
      v7 = *(void **)(v1 + 16);
      v8 = v5;
      v9 = v7;
      swift_bridgeObjectRetain();
      sub_1D6933F74((uint64_t)v9, v6, v4, v5, 2);
      sub_1D6829AB0(v6, v4, v5);
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

void sub_1D68298C0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double Width;
  id v14;
  void *v15;
  double v16;
  uint64_t v17;
  void *v18;
  char v19;
  CGRect v20;

  v2 = v1;
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v4, sel_bounds);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v20.origin.x = v6;
  v20.origin.y = v8;
  v20.size.width = v10;
  v20.size.height = v12;
  Width = CGRectGetWidth(v20);
  v14 = sub_1D6829660();
  v15 = v14;
  if (Width >= 375.0)
    v16 = 298.0;
  else
    v16 = 121.0;
  objc_msgSend(v14, sel_setFrame_, 0.0, 0.0, v16, 44.0);

  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  v17 = v2[2];
  v18 = (void *)v2[10];
  sub_1D69328EC(v17, a1, v18);
  sub_1D6E19FC4();
  if (v19 == 2)
    sub_1D6933E50(v17, 3, v18);
}

uint64_t sub_1D6829A0C()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TagFeedViewerTitleViewProvider()
{
  return objc_opt_self();
}

id sub_1D6829A70()
{
  return sub_1D6829660();
}

void sub_1D6829A90(void *a1)
{
  sub_1D68298C0(a1);
}

void sub_1D6829AB0(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

_QWORD *sub_1D6829AE4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SportsManagementRecommendations(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for SportsManagementRecommendations(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for SportsManagementRecommendations()
{
  return &type metadata for SportsManagementRecommendations;
}

uint64_t sub_1D6829BD8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a2;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6)
  {
    if (qword_1ED6241A8 != -1)
      swift_once();
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1D6E32F90;
    sub_1D5E847C4(0, (unint64_t *)&unk_1ED5F3FC0, (uint64_t (*)(uint64_t))type metadata accessor for TagModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    *(_QWORD *)(v7 + 56) = v8;
    *(_QWORD *)(v7 + 64) = sub_1D6829E70();
    *(_QWORD *)(v7 + 32) = v4;
    swift_bridgeObjectRetain();
    sub_1D6E27374();
    sub_1D6E1C61C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    return v4;
  }
  if (qword_1ED6241A8 != -1)
    swift_once();
  sub_1D6E27374();
  sub_1D6E1C61C();
  swift_bridgeObjectRetain();
  v9 = sub_1D61047A4(a3, a1);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_10:
    v4 = sub_1D60FF3D0(v9, v11, v13, v15);
    swift_unknownObjectRelease();
    return v4;
  }
  sub_1D6E282F8();
  swift_unknownObjectRetain_n();
  v16 = swift_dynamicCastClass();
  if (!v16)
  {
    swift_unknownObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
  }
  v17 = *(_QWORD *)(v16 + 16);
  swift_release();
  if (__OFSUB__(v15 >> 1, v13))
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v17 != (v15 >> 1) - v13)
  {
LABEL_20:
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  v4 = swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (!v4)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v4;
}

uint64_t sub_1D6829E64(unint64_t *a1, unint64_t *a2)
{
  return sub_1D6829ED0(*a1, *a2);
}

unint64_t sub_1D6829E70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFFEDAC0;
  if (!qword_1EFFEDAC0)
  {
    sub_1D5E847C4(255, (unint64_t *)&unk_1ED5F3FC0, (uint64_t (*)(uint64_t))type metadata accessor for TagModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1EFFEDAC0);
  }
  return result;
}

uint64_t sub_1D6829ED0(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  _QWORD *v31;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1D6E28040();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v30 = a2;
  if (v4)
  {
    v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    result = sub_1D5F949A4(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
    {
      __break(1u);
      goto LABEL_29;
    }
    v7 = 0;
    v8 = v31;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x1D8290720](v7, a1);
      }
      else
      {
        v9 = *(_QWORD *)(a1 + 8 * v7 + 32);
        swift_retain();
      }
      v10 = objc_msgSend(*(id *)(v9 + 16), sel_identifier, v30);
      v11 = sub_1D6E26978();
      v13 = v12;
      swift_release();

      v15 = v31[2];
      v14 = v31[3];
      if (v15 >= v14 >> 1)
        sub_1D5F949A4(v14 > 1, v15 + 1, 1);
      ++v7;
      v31[2] = v15 + 1;
      v16 = &v31[2 * v15];
      v16[4] = v11;
      v16[5] = v13;
    }
    while (v4 != v7);
    swift_bridgeObjectRelease();
    a2 = v30;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!(v30 >> 62))
    {
LABEL_13:
      v17 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v17)
        goto LABEL_14;
LABEL_25:
      swift_bridgeObjectRelease();
      v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_26:
      v29 = sub_1D5F6CC90(v8, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v29 & 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!(a2 >> 62))
      goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1D6E28040();
  if (!v17)
    goto LABEL_25;
LABEL_14:
  result = sub_1D5F949A4(0, v17 & ~(v17 >> 63), 0);
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = 0;
    v19 = v5;
    v20 = a2 & 0xC000000000000001;
    do
    {
      if (v20)
      {
        v21 = MEMORY[0x1D8290720](v18, a2);
      }
      else
      {
        v21 = *(_QWORD *)(a2 + 8 * v18 + 32);
        swift_retain();
      }
      v22 = objc_msgSend(*(id *)(v21 + 16), sel_identifier, v30);
      v23 = sub_1D6E26978();
      v25 = v24;
      swift_release();

      v27 = v19[2];
      v26 = v19[3];
      if (v27 >= v26 >> 1)
        sub_1D5F949A4(v26 > 1, v27 + 1, 1);
      ++v18;
      v19[2] = v27 + 1;
      v28 = &v19[2 * v27];
      v28[4] = v23;
      v28[5] = v25;
      a2 = v30;
    }
    while (v17 != v18);
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1D682A1C4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D6E28400();
  __asm { BR              X9 }
}

uint64_t sub_1D682A210()
{
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

void sub_1D682A27C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D682A2B8()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D682A310()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D6E28400();
  __asm { BR              X9 }
}

uint64_t sub_1D682A358()
{
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

uint64_t sub_1D682A3C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D682BAA8();
  *a1 = result;
  return result;
}

uint64_t sub_1D682A3F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D682A428 + 4 * byte_1D6E94C2C[*v0]))();
}

void sub_1D682A428(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x68736572666572;
  a1[1] = v1;
}

void sub_1D682A440(_QWORD *a1@<X8>)
{
  *a1 = 0x6863746566657270;
  a1[1] = 0xE800000000000000;
}

void sub_1D682A45C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F697461727563;
  a1[1] = 0xE800000000000000;
}

void sub_1D682A478(char *a1)
{
  sub_1D658D094(*a1);
}

uint64_t sub_1D682A484()
{
  sub_1D682B8C0();
  return sub_1D6E26D44();
}

uint64_t sub_1D682A4E0()
{
  sub_1D682B8C0();
  return sub_1D6E26D08();
}

uint64_t sub_1D682A52C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  char *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void (*v42)(char *, char *, uint64_t);
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;

  v55 = a2;
  v4 = *v2;
  v5 = sub_1D6E15EF0();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = (void *)v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D6E223DC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D6E22694();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == *MEMORY[0x1E0D5B398] || v16 == *MEMORY[0x1E0D5B380] || v16 == *MEMORY[0x1E0D5B390])
  {
    sub_1D6E239D8();
    v19 = *(_QWORD **)(v56 + 16);
    swift_retain();
    swift_release();
    v20 = v19[3];
    v55 = v19[2];
    v21 = (void *)v19[4];
    v22 = (void *)v19[5];
    v23 = (void *)v19[6];
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, (uint64_t)v19 + OBJC_IVAR____TtC7NewsUI221TagFeedServiceContext_serviceOptions, v8);
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v55;
    *(_QWORD *)(v24 + 24) = v20;
    *(_QWORD *)(v24 + 32) = v21;
    *(_QWORD *)(v24 + 40) = v22;
    *(_QWORD *)(v24 + 48) = v23;
    *(_BYTE *)(v24 + 56) = 1;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24 + OBJC_IVAR____TtC7NewsUI221TagFeedServiceContext_serviceOptions, v11, v8);
    swift_bridgeObjectRetain();
    v25 = v21;
    v26 = v22;
    v27 = v23;
    swift_release();
  }
  else
  {
    v52 = v4;
    v28 = v11;
    if (v16 == *MEMORY[0x1E0D5B388])
    {
      v29 = (void *)v2[4];
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, (uint64_t)v2 + OBJC_IVAR____TtC7NewsUI221TagFeedServiceContext_serviceOptions, v8);
      v30 = v29;
      sub_1D6E15EE4();
      v31 = sub_1D6E15ED8();
      v33 = v32;
      (*(void (**)(char *, void *))(v53 + 8))(v7, v54);
      v34 = qword_1ED6241B8;
      v35 = (id)*MEMORY[0x1E0D58688];
      if (v34 != -1)
        swift_once();
      v36 = (void *)qword_1ED698E28;
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = v31;
      *(_QWORD *)(v24 + 24) = v33;
      *(_QWORD *)(v24 + 32) = v30;
      *(_QWORD *)(v24 + 40) = v35;
      *(_QWORD *)(v24 + 48) = v36;
      *(_BYTE *)(v24 + 56) = 1;
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24 + OBJC_IVAR____TtC7NewsUI221TagFeedServiceContext_serviceOptions, v28, v8);
      v37 = v36;
    }
    else
    {
      sub_1D6E239D8();
      v38 = *(char **)(v56 + 16);
      swift_retain();
      swift_release();
      v39 = *((_QWORD *)v38 + 2);
      v53 = *((_QWORD *)v38 + 3);
      v40 = (void *)*((_QWORD *)v38 + 5);
      v54 = (void *)*((_QWORD *)v38 + 4);
      v55 = v39;
      v41 = (void *)*((_QWORD *)v38 + 6);
      v42 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v50 = v8;
      v51 = v28;
      v42(v28, &v38[OBJC_IVAR____TtC7NewsUI221TagFeedServiceContext_serviceOptions], v8);
      v24 = swift_allocObject();
      v43 = v54;
      v44 = v53;
      *(_QWORD *)(v24 + 16) = v55;
      *(_QWORD *)(v24 + 24) = v44;
      *(_QWORD *)(v24 + 32) = v43;
      *(_QWORD *)(v24 + 40) = v40;
      *(_QWORD *)(v24 + 48) = v41;
      *(_BYTE *)(v24 + 56) = 1;
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24 + OBJC_IVAR____TtC7NewsUI221TagFeedServiceContext_serviceOptions, v51, v50);
      swift_bridgeObjectRetain();
      v45 = v43;
      v46 = v40;
      v47 = v41;
      swift_release();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  return v24;
}

uint64_t sub_1D682A904()
{
  id *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  v1 = (char *)v0 + OBJC_IVAR____TtC7NewsUI221TagFeedServiceContext_serviceOptions;
  v2 = sub_1D6E223DC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D682A974()
{
  return type metadata accessor for TagFeedServiceContext();
}

ValueMetadata *type metadata accessor for TagFeedServiceContextKind()
{
  return &type metadata for TagFeedServiceContextKind;
}

unint64_t sub_1D682A994()
{
  unint64_t result;

  result = qword_1EFFF3320;
  if (!qword_1EFFF3320)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94D4C, &type metadata for TagFeedServiceContextKind);
    atomic_store(result, (unint64_t *)&qword_1EFFF3320);
  }
  return result;
}

uint64_t sub_1D682A9D8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC7NewsUI221TagFeedServiceContext_serviceOptions;
  v4 = sub_1D6E223DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_1D682AA20(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16)
    && *(_QWORD *)(*a1 + 24) == *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (v3 || (sub_1D6E282C8() & 1) != 0)
    sub_1D658D094(*(_BYTE *)(v2 + 56));
}

uint64_t sub_1D682AA78()
{
  sub_1D6E28400();
  swift_bridgeObjectRetain();
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

uint64_t sub_1D682AAD4()
{
  swift_bridgeObjectRetain();
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D682AB1C()
{
  sub_1D6E28400();
  swift_bridgeObjectRetain();
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

uint64_t sub_1D682AB74(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  _BYTE v38[16];
  __int128 v39;
  id v40;

  v2 = v1;
  v4 = sub_1D6E1A000();
  v5 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  v31 = v5;
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D682B744();
  v33 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D682B820(0, &qword_1EFFF3348, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v27 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D682B798();
  sub_1D6E28478();
  LOBYTE(v40) = 0;
  v16 = v34;
  sub_1D6E28208();
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v17 = v30;
  v28 = v15;
  v29 = v8;
  v27 = v12;
  v34 = v13;
  v18 = *(id *)(v2 + 32);
  sub_1D627244C(v18, (uint64_t)&v36);
  v40 = v18;
  v19 = qword_1ED60BE88;
  v20 = v18;
  if (v19 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED60BE68);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v32, v21, v17);
  sub_1D627135C();
  v39 = v36;
  sub_1D605365C((uint64_t)&v39);
  sub_1D618F63C((uint64_t)&v37, (uint64_t)v38);
  sub_1D605365C((uint64_t)v38);
  sub_1D6076DD8();
  sub_1D6E1AF18();

  LOBYTE(v40) = 1;
  sub_1D5E6D8C0(&qword_1EFFF3350, (uint64_t (*)(uint64_t))sub_1D682B744, MEMORY[0x1E0DB5098]);
  v23 = v27;
  v22 = v28;
  v24 = v33;
  sub_1D6E28238();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v24);
  LOBYTE(v40) = *(_BYTE *)(v2 + 56);
  v35 = 2;
  sub_1D682B87C();
  sub_1D6E28238();
  v25 = v34;
  LOBYTE(v40) = 3;
  sub_1D6E223DC();
  sub_1D5E6D8C0(&qword_1ED60AFA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B040], MEMORY[0x1E0D5B050]);
  sub_1D6E28238();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v22, v23);
}

void sub_1D682AF0C(char *a1)
{
  sub_1D658F6C0(*a1);
}

void sub_1D682AF18()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D6E28400();
  __asm { BR              X9 }
}

uint64_t sub_1D682AF68()
{
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

void sub_1D682AFE8()
{
  __asm { BR              X10 }
}

uint64_t sub_1D682B028()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D682B094()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D6E28400();
  __asm { BR              X9 }
}

uint64_t sub_1D682B0E0()
{
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

uint64_t sub_1D682B160@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D682BAA8();
  *a1 = result;
  return result;
}

uint64_t sub_1D682B194()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D682B1C8 + 4 * byte_1D6E94C3C[*v0]))();
}

void sub_1D682B1C8(char *a1@<X8>)
{
  strcpy(a1, "feedDescriptor");
  a1[15] = -18;
}

void sub_1D682B1F0(_QWORD *a1@<X8>)
{
  *a1 = 1684957547;
  a1[1] = 0xE400000000000000;
}

void sub_1D682B204(char *a1@<X8>)
{
  strcpy(a1, "serviceOptions");
  a1[15] = -18;
}

uint64_t sub_1D682B22C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D682B260 + 4 * byte_1D6E94C40[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1D682B260()
{
  return 0x6373654464656566;
}

uint64_t sub_1D682B284()
{
  return 1684957547;
}

uint64_t sub_1D682B294()
{
  return 0x4F65636976726573;
}

uint64_t sub_1D682B2B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D682BAA8();
  *a1 = result;
  return result;
}

uint64_t sub_1D682B2E4()
{
  sub_1D682B798();
  return sub_1D6E28538();
}

uint64_t sub_1D682B30C()
{
  sub_1D682B798();
  return sub_1D6E28544();
}

uint64_t sub_1D682B334@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D682B3A8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D682B35C(_QWORD *a1)
{
  return sub_1D682AB74(a1);
}

uint64_t sub_1D682B37C()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1ED605CC0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceContext, (uint64_t)&unk_1D6E94E7C);
}

uint64_t sub_1D682B3A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  id v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;

  v2 = sub_1D6E223DC();
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x1E0C80A78](v2);
  v35 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D682B744();
  v36 = v4;
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D682B820(0, &qword_1EFFF3328, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v29 - v11;
  __swift_project_boxed_opaque_existential_1((_QWORD *)a1, *(_QWORD *)(a1 + 24));
  sub_1D682B798();
  v13 = v37;
  sub_1D6E2846C();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v32 = v5;
    v14 = v36;
    v37 = a1;
    v43 = 0;
    v15 = v9;
    v30 = sub_1D6E28154();
    v31 = v16;
    v42 = 1;
    sub_1D5E6D8C0(&qword_1EFFF3338, (uint64_t (*)(uint64_t))sub_1D682B744, MEMORY[0x1E0DB50A0]);
    sub_1D6E28184();
    sub_1D6E1AF30();
    (*(void (**)(char *, id))(v32 + 8))(v7, v14);
    v17 = v12;
    v18 = v38;
    v40 = 2;
    sub_1D682B7DC();
    sub_1D6E28184();
    v19 = v41;
    v39 = 3;
    sub_1D5E6D8C0(&qword_1ED60AFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B040], MEMORY[0x1E0D5B058]);
    v20 = v34;
    sub_1D6E28184();
    v22 = v17;
    v32 = v15;
    v23 = qword_1ED6241B8;
    v36 = (id)*MEMORY[0x1E0D58688];
    if (v23 != -1)
      swift_once();
    v24 = *(void (**)(char *, uint64_t))(v10 + 8);
    v25 = (id)qword_1ED698E28;
    v24(v22, v32);
    type metadata accessor for TagFeedServiceContext();
    a1 = swift_allocObject();
    v26 = v31;
    *(_QWORD *)(a1 + 16) = v30;
    *(_QWORD *)(a1 + 24) = v26;
    v27 = v35;
    v28 = v36;
    *(_QWORD *)(a1 + 32) = v18;
    *(_QWORD *)(a1 + 40) = v28;
    *(_QWORD *)(a1 + 48) = v25;
    *(_BYTE *)(a1 + 56) = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(a1 + OBJC_IVAR____TtC7NewsUI221TagFeedServiceContext_serviceOptions, v27, v20);
    __swift_destroy_boxed_opaque_existential_1(v37);
  }
  return a1;
}

void sub_1D682B744()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFDF0E8)
  {
    sub_1D6076DD8();
    v0 = sub_1D6E1AFD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFDF0E8);
  }
}

unint64_t sub_1D682B798()
{
  unint64_t result;

  result = qword_1EFFF3330;
  if (!qword_1EFFF3330)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94FF0, &type metadata for TagFeedServiceContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3330);
  }
  return result;
}

unint64_t sub_1D682B7DC()
{
  unint64_t result;

  result = qword_1EFFF3340;
  if (!qword_1EFFF3340)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94D24, &type metadata for TagFeedServiceContextKind);
    atomic_store(result, (unint64_t *)&qword_1EFFF3340);
  }
  return result;
}

void sub_1D682B820(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D682B798();
    v7 = a3(a1, &type metadata for TagFeedServiceContext.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D682B87C()
{
  unint64_t result;

  result = qword_1EFFF3358;
  if (!qword_1EFFF3358)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94CFC, &type metadata for TagFeedServiceContextKind);
    atomic_store(result, (unint64_t *)&qword_1EFFF3358);
  }
  return result;
}

unint64_t sub_1D682B8C0()
{
  unint64_t result;

  result = qword_1EFFF3360;
  if (!qword_1EFFF3360)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94D74, &type metadata for TagFeedServiceContextKind);
    atomic_store(result, (unint64_t *)&qword_1EFFF3360);
  }
  return result;
}

uint64_t _s7NewsUI225TagFeedServiceContextKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D682B950 + 4 * byte_1D6E94C49[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D682B984 + 4 * byte_1D6E94C44[v4]))();
}

uint64_t sub_1D682B984(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D682B98C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D682B994);
  return result;
}

uint64_t sub_1D682B9A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D682B9A8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D682B9AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D682B9B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TagFeedServiceContext.CodingKeys()
{
  return &type metadata for TagFeedServiceContext.CodingKeys;
}

unint64_t sub_1D682B9D4()
{
  unint64_t result;

  result = qword_1EFFF3368;
  if (!qword_1EFFF3368)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94FC8, &type metadata for TagFeedServiceContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3368);
  }
  return result;
}

unint64_t sub_1D682BA1C()
{
  unint64_t result;

  result = qword_1EFFF3370;
  if (!qword_1EFFF3370)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94F00, &type metadata for TagFeedServiceContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3370);
  }
  return result;
}

unint64_t sub_1D682BA64()
{
  unint64_t result;

  result = qword_1EFFF3378;
  if (!qword_1EFFF3378)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94F28, &type metadata for TagFeedServiceContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3378);
  }
  return result;
}

uint64_t sub_1D682BAA8()
{
  unint64_t v0;

  v0 = sub_1D6E280D0();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t *sub_1D682BAEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  char *v14;
  void (*v15)(uint64_t *, _QWORD, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for MagazineFeedExpandResult(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = *(int *)(v7 + 20);
      v12 = (uint64_t *)((char *)a1 + v11);
      v13 = (uint64_t *)((char *)a2 + v11);
      type metadata accessor for MagazineFeedExpandResult.Result(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        type metadata accessor for MagazineFeedGroup();
        v14 = (char *)&loc_1D682BBF0
            + 4 * (unsigned __int16)asc_1D6E95040[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      *v12 = *v13;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
      v15 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v15(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1D682D31C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  id *v31;
  int *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  id *v53;
  int *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  id *v69;
  int *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;

  v2 = type metadata accessor for MagazineFeedExpandResult(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(v2 + 20);
    type metadata accessor for MagazineFeedExpandResult.Result(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for MagazineFeedGroup();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = type metadata accessor for CategoriesMagazineFeedGroup();
          goto LABEL_10;
        case 1u:
          sub_1D5F62490();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
          v8 = type metadata accessor for FeaturedArticleMagazineFeedGroup();
          goto LABEL_24;
        case 2u:
        case 0xAu:
        case 0xBu:
          v5 = sub_1D6E2198C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
          break;
        case 3u:
          sub_1D5F62348();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v4, v9);
          v8 = type metadata accessor for FeaturedIssueArticleMagazineFeedGroup();
          goto LABEL_24;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = type metadata accessor for InlineCategoriesMagazineFeedGroup();
LABEL_10:
          v10 = (char *)(v4 + *(int *)(v6 + 40));
          v11 = sub_1D6E22E98();
          goto LABEL_25;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v12 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
          v13 = v4 + v12[10];
          v14 = sub_1D6E22E98();
          v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
          v15(v13, v14);
          v15(v4 + v12[11], v14);
          v16 = v4 + v12[13];
          sub_1D5E84E78(0, (unint64_t *)&qword_1ED623090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
          v18 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
          swift_release();
          v19 = v16 + *(int *)(v18 + 24);
          sub_1D5E84E78(0, (unint64_t *)&qword_1ED623140, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B580]);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
          swift_unknownObjectRelease();
          v21 = v4 + v12[16];
          v22 = sub_1D6E230A8();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
          v23 = v4 + v12[17];
          v24 = sub_1D6E222BC();
          v25 = *(_QWORD *)(v24 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
            (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
          goto LABEL_22;
        case 6u:
          sub_1D5F627C4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v4, v26);
          v8 = type metadata accessor for NewIssueMagazineFeedGroup();
          goto LABEL_24;
        case 7u:
          swift_bridgeObjectRelease();
          v27 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
          v28 = v4 + v27[5];
          v29 = sub_1D6E22E98();
          v30 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8);
          v30(v28, v29);
          v30(v4 + v27[6], v29);
          v31 = (id *)(v4 + v27[9]);
          type metadata accessor for FeedPaywallModel(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v32 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            v33 = (char *)v31 + v32[5];
            v34 = sub_1D6E15BE4();
            v35 = *(_QWORD *)(v34 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
              (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v36 = (char *)v31 + v32[22];
            v37 = sub_1D6E1BC20();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
            swift_bridgeObjectRelease();
            v38 = v32[24];
          }
          else
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v46 = type metadata accessor for FeedRegularPaywallModel(0);
            v47 = (char *)v31 + *(int *)(v46 + 64);
            v48 = sub_1D6E1BC20();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
            swift_bridgeObjectRelease();
            v38 = *(int *)(v46 + 72);
          }
          v49 = (char *)v31 + v38;
          v50 = sub_1D6E1BA7C();
          v51 = *(_QWORD *)(v50 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
            (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v50);
          v52 = (int *)type metadata accessor for FeedPaywallConfig();
          v53 = (id *)((char *)v31 + v52[5]);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v54 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            v55 = (char *)v53 + v54[5];
            v56 = sub_1D6E15BE4();
            v57 = *(_QWORD *)(v56 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
              (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v56);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v58 = (char *)v53 + v54[22];
            v59 = sub_1D6E1BC20();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
            swift_bridgeObjectRelease();
            v60 = (char *)v53 + v54[24];
            v61 = sub_1D6E1BA7C();
            v62 = *(_QWORD *)(v61 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
              (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v61);
          }
          else
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v63 = type metadata accessor for FeedRegularPaywallModel(0);
            v64 = (char *)v53 + *(int *)(v63 + 64);
            v65 = sub_1D6E1BC20();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
            swift_bridgeObjectRelease();
            v66 = (char *)v53 + *(int *)(v63 + 72);
            v67 = sub_1D6E1BA7C();
            v68 = *(_QWORD *)(v67 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
              (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v67);
          }
          v69 = (id *)((char *)v31 + v52[6]);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v70 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            v71 = (char *)v69 + v70[5];
            v72 = sub_1D6E15BE4();
            v73 = *(_QWORD *)(v72 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
              (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v72);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v74 = (char *)v69 + v70[22];
            v75 = sub_1D6E1BC20();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v74, v75);
            swift_bridgeObjectRelease();
            v76 = v70[24];
          }
          else
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v77 = type metadata accessor for FeedRegularPaywallModel(0);
            v78 = (char *)v69 + *(int *)(v77 + 64);
            v79 = sub_1D6E1BC20();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v78, v79);
            swift_bridgeObjectRelease();
            v76 = *(int *)(v77 + 72);
          }
          v80 = (char *)v69 + v76;
          v81 = sub_1D6E1BA7C();
          v82 = *(_QWORD *)(v81 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
            (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v81);
          v83 = (char *)v31 + v52[7];
          type metadata accessor for FeedPaywallType(0);
          if (swift_getEnumCaseMultiPayload())
            break;
          sub_1D6108060();
          v10 = &v83[*(int *)(v84 + 48)];
          v11 = sub_1D6E1B884();
          goto LABEL_25;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v39 = type metadata accessor for RecommendedIssuesMagazineFeedGroup();
          v40 = v4 + *(int *)(v39 + 44);
          v41 = sub_1D6E22E98();
          v42 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8);
          v42(v40, v41);
          v42(v4 + *(int *)(v39 + 48), v41);
          break;
        case 9u:
          sub_1D5F629B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v4, v43);
          v8 = type metadata accessor for TopicMagazineFeedGroup();
          goto LABEL_24;
        case 0xCu:
          v44 = sub_1D6E2198C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v4, v44);
          type metadata accessor for NewspaperMagazineFeedGroup();
          swift_unknownObjectRelease();
LABEL_22:
          swift_bridgeObjectRelease();
          break;
        case 0xDu:
          sub_1D5F6290C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v4, v45);
          v8 = type metadata accessor for CuratedMagazineFeedGroup();
LABEL_24:
          v10 = (char *)(v4 + *(int *)(v8 + 20));
          v11 = sub_1D6E2198C();
LABEL_25:
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
          break;
        default:
          break;
      }
      sub_1D630B650();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1D682DEF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  char *v12;
  void (*v13)(_QWORD *, _QWORD, uint64_t, uint64_t);

  v6 = type metadata accessor for MagazineFeedExpandResult(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = *(int *)(v6 + 20);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    type metadata accessor for MagazineFeedExpandResult.Result(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for MagazineFeedGroup();
      v12 = (char *)&loc_1D682DFD4 + 4 * (unsigned __int16)asc_1D6E95078[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    *v10 = *v11;
    swift_retain();
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
    v13 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v13(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_1D682F700(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  void (*v19)(_QWORD *, _QWORD, uint64_t, uint64_t);

  v6 = type metadata accessor for MagazineFeedExpandResult(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v11 = *(int *)(v6 + 20);
      v12 = (_QWORD *)((char *)a1 + v11);
      v13 = (_QWORD *)((char *)a2 + v11);
      type metadata accessor for MagazineFeedExpandResult.Result(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        type metadata accessor for MagazineFeedGroup();
        v14 = (char *)&loc_1D682F7E8 + 4 * word_1D6E95094[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      *v12 = *v13;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
      v19 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56);
      swift_bridgeObjectRetain();
      v19(a1, 0, 1, v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_1D5E8D20C((uint64_t)a1, type metadata accessor for MagazineFeedExpandResult);
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v15 = *(int *)(v6 + 20);
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    sub_1D5E8D20C((uint64_t)a1 + v15, type metadata accessor for MagazineFeedExpandResult.Result);
    type metadata accessor for MagazineFeedExpandResult.Result(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for MagazineFeedGroup();
      v18 = (char *)&loc_1D682F8D0 + 4 * word_1D6E950B0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    *v16 = *v17;
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1D6832A60(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;

  v6 = type metadata accessor for MagazineFeedExpandResult(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for MagazineFeedExpandResult.Result(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for MagazineFeedGroup();
      v12 = (char *)&loc_1D6832B38 + 4 * word_1D6E950CC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_1D6833CD8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v6 = type metadata accessor for MagazineFeedExpandResult(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v11 = *(int *)(v6 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for MagazineFeedExpandResult.Result(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        type metadata accessor for MagazineFeedGroup();
        v15 = (char *)&loc_1D6833DB0 + 4 * (unsigned __int16)aJg[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_1D5E8D20C((uint64_t)a1, type metadata accessor for MagazineFeedExpandResult);
    goto LABEL_7;
  }
  v16 = a2[1];
  *a1 = *a2;
  a1[1] = v16;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v17 = *(int *)(v6 + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    sub_1D5E8D20C((uint64_t)a1 + v17, type metadata accessor for MagazineFeedExpandResult.Result);
    v20 = type metadata accessor for MagazineFeedExpandResult.Result(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for MagazineFeedGroup();
      v21 = (char *)&loc_1D6833E88 + 4 * word_1D6E95104[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D6836158()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6836164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for MagazineFeedExpandResult(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1D68361B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68361BC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for MagazineFeedExpandResult(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1D683620C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MagazineFeedExpandResult(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1D6836244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MagazineFeedExpandResult(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for MagazineFeedRefreshResult()
{
  uint64_t result;

  result = qword_1ED5EB0A8;
  if (!qword_1ED5EB0A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D68362C0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MagazineFeedExpandResult(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1D6836314(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(uint64_t *, _QWORD, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArticleListHistoryFeedGroup();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = *(int *)(v7 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1D6E2198C();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
      v16 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v16(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1D6836428(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for ArticleListHistoryFeedGroup();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(v2 + 20);
    v5 = sub_1D6E2198C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1D68364B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  void (*v14)(_QWORD *, _QWORD, uint64_t, uint64_t);

  v6 = type metadata accessor for ArticleListHistoryFeedGroup();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = *(int *)(v6 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1D6E2198C();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
    v14 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v14(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_1D68365A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = type metadata accessor for ArticleListHistoryFeedGroup();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v18 = *(int *)(v6 + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_1D6E2198C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
      *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D5E8D20C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListHistoryFeedGroup);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  v11 = *(int *)(v6 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1D6E2198C();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
  v16 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  v16(a1, 0, 1, v6);
  return a1;
}

_OWORD *sub_1D6836738(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for ArticleListHistoryFeedGroup();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D6E2198C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_1D6836808(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = type metadata accessor for ArticleListHistoryFeedGroup();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      swift_bridgeObjectRelease();
      v17 = *(int *)(v6 + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_1D6E2198C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
      *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D5E8D20C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListHistoryFeedGroup);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v11 = *(int *)(v6 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1D6E2198C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1D6836960()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D683696C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for ArticleListHistoryFeedGroup();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1D68369B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68369C4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for ArticleListHistoryFeedGroup();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1D6836A14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleListHistoryFeedGroup();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1D6836A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleListHistoryFeedGroup();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for HistoryFeedSectionDescriptor()
{
  uint64_t result;

  result = qword_1ED62A850;
  if (!qword_1ED62A850)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D6836AC8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ArticleListHistoryFeedGroup();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D6836B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for ArticleListHistoryFeedGroup();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6836E80(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    return 7364967;
  sub_1D61959F0((uint64_t)v8, (uint64_t)v6);
  v9 = *v6;
  swift_bridgeObjectRetain();
  sub_1D5E8D20C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListHistoryFeedGroup);
  return v9;
}

uint64_t sub_1D6836C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6836E80(v5, (uint64_t)v4);
  v6 = type metadata accessor for ArticleListHistoryFeedGroup();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) != 1)
    sub_1D5E8D20C((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for HistoryFeedSectionDescriptor);
  v7 = *MEMORY[0x1E0D5A808];
  v8 = sub_1D6E21CA4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a2, v7, v8);
}

uint64_t sub_1D6836CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, _QWORD, uint64_t);
  uint64_t v11;

  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6836E80(v5, (uint64_t)v4);
  v6 = type metadata accessor for ArticleListHistoryFeedGroup();
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6);
  v8 = sub_1D6E23ED0();
  v9 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104);
  if (v7 == 1)
    return v9(a2, *MEMORY[0x1E0D5D278], v8);
  v9(a2, *MEMORY[0x1E0D5D290], v8);
  return sub_1D5E8D20C((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for HistoryFeedSectionDescriptor);
}

uint64_t sub_1D6836DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;

  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6836E80(v5, (uint64_t)v4);
  v6 = type metadata accessor for ArticleListHistoryFeedGroup();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6);
  if ((_DWORD)result == 1)
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = v6;
    *(_QWORD *)(a2 + 32) = sub_1D6836EC4();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
    return sub_1D61959F0((uint64_t)v4, (uint64_t)boxed_opaque_existential_1);
  }
  return result;
}

uint64_t sub_1D6836E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HistoryFeedSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D6836EC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFFE07C0;
  if (!qword_1EFFE07C0)
  {
    v1 = type metadata accessor for ArticleListHistoryFeedGroup();
    result = MEMORY[0x1D82917D0](&unk_1D6E548F0, v1);
    atomic_store(result, (unint64_t *)&qword_1EFFE07C0);
  }
  return result;
}

uint64_t sub_1D6836F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v20;

  v4 = type metadata accessor for ArticleListHistoryFeedGroup();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for HistoryFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D68370DC();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1D6836E80(a1, (uint64_t)v14);
  sub_1D6836E80(a2, v15);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) == 1)
  {
    v17 = 1;
    if (v16(v15, 1, v4) == 1)
      goto LABEL_8;
  }
  else
  {
    sub_1D6836E80((uint64_t)v14, (uint64_t)v10);
    if (v16(v15, 1, v4) != 1)
    {
      sub_1D61959F0(v15, (uint64_t)v7);
      v17 = MEMORY[0x1D828A12C](&v10[*(int *)(v4 + 20)], &v7[*(int *)(v4 + 20)]);
      sub_1D5E8D20C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListHistoryFeedGroup);
      sub_1D5E8D20C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListHistoryFeedGroup);
LABEL_8:
      v18 = (uint64_t (*)(_QWORD))type metadata accessor for HistoryFeedSectionDescriptor;
      goto LABEL_9;
    }
    sub_1D5E8D20C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListHistoryFeedGroup);
  }
  v17 = 0;
  v18 = (uint64_t (*)(_QWORD))sub_1D68370DC;
LABEL_9:
  sub_1D5E8D20C((uint64_t)v14, v18);
  return v17 & 1;
}

void sub_1D68370DC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EFFF3380)
  {
    type metadata accessor for HistoryFeedSectionDescriptor();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EFFF3380);
  }
}

uint64_t *sub_1D683713C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, _QWORD, uint64_t, int *);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    sub_1D60B0D80(0);
    v8 = v7;
    v9 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v9 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v11 = sub_1D6E2198C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      *(uint64_t *)((char *)a1 + v8[7]) = *(uint64_t *)((char *)a2 + v8[7]);
      *(uint64_t *)((char *)a1 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
      *(uint64_t *)((char *)a1 + v8[9]) = *(uint64_t *)((char *)a2 + v8[9]);
      v12 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v9 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(a1, 0, 2, v8);
    }
  }
  return a1;
}

uint64_t type metadata accessor for SavedFeedLayoutSectionDescriptor.Data(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SavedFeedLayoutSectionDescriptor.Data);
}

uint64_t sub_1D6837254(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1D60B0D80(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1D6E2198C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1D68372E0(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, _QWORD, uint64_t, int *);

  sub_1D60B0D80(0);
  v7 = v6;
  v8 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1D6E2198C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    *(_QWORD *)&a1[v7[7]] = *(_QWORD *)&a2[v7[7]];
    *(_QWORD *)&a1[v7[8]] = *(_QWORD *)&a2[v7[8]];
    *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
    v10 = *(void (**)(char *, _QWORD, uint64_t, int *))(v8 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(a1, 0, 2, v7);
  }
  return a1;
}

char *sub_1D68373C8(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, int *);
  int v10;
  int v11;
  uint64_t v12;
  void (*v13)(char *, _QWORD, uint64_t, int *);
  uint64_t v15;

  sub_1D60B0D80(0);
  v7 = v6;
  v8 = *((_QWORD *)v6 - 1);
  v9 = *(uint64_t (**)(char *, uint64_t, int *))(v8 + 48);
  v10 = v9(a1, 2, v6);
  v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      v15 = sub_1D6E2198C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(a1, a2, v15);
      *(_QWORD *)&a1[v7[7]] = *(_QWORD *)&a2[v7[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[v7[8]] = *(_QWORD *)&a2[v7[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D5E8D20C((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1D60B0D80);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1D6E2198C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
  *(_QWORD *)&a1[v7[7]] = *(_QWORD *)&a2[v7[7]];
  *(_QWORD *)&a1[v7[8]] = *(_QWORD *)&a2[v7[8]];
  *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
  v13 = *(void (**)(char *, _QWORD, uint64_t, int *))(v8 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(a1, 0, 2, v7);
  return a1;
}

char *sub_1D683755C(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D60B0D80(0);
  v7 = v6;
  v8 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1D6E2198C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    *(_QWORD *)&a1[v7[7]] = *(_QWORD *)&a2[v7[7]];
    *(_QWORD *)&a1[v7[8]] = *(_QWORD *)&a2[v7[8]];
    *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

char *sub_1D6837630(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, int *);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D60B0D80(0);
  v7 = v6;
  v8 = *((_QWORD *)v6 - 1);
  v9 = *(uint64_t (**)(char *, uint64_t, int *))(v8 + 48);
  v10 = v9(a1, 2, v6);
  v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      v14 = sub_1D6E2198C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(a1, a2, v14);
      *(_QWORD *)&a1[v7[7]] = *(_QWORD *)&a2[v7[7]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[v7[8]] = *(_QWORD *)&a2[v7[8]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D5E8D20C((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1D60B0D80);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1D6E2198C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
  *(_QWORD *)&a1[v7[7]] = *(_QWORD *)&a2[v7[7]];
  *(_QWORD *)&a1[v7[8]] = *(_QWORD *)&a2[v7[8]];
  *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_1D6837798()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68377A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  sub_1D60B0D80(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_1D68377F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68377FC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  sub_1D60B0D80(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1D6837850(uint64_t a1)
{
  uint64_t v2;

  sub_1D60B0D80(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_1D6837888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D60B0D80(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t type metadata accessor for SavedFeedLayoutSectionDescriptor(uint64_t a1)
{
  return sub_1D5E6E20C(a1, qword_1ED62B4D0);
}

void sub_1D68378DC()
{
  unint64_t v0;

  sub_1D60B0D80(319);
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

uint64_t sub_1D6837930(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D68379BC + 4 * byte_1D6E95200[v10]))();
  }
}

void sub_1D6837A40(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1D6837B44()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1D6837BB8);
}

void sub_1D6837B4C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1D6837B54);
  JUMPOUT(0x1D6837BB8);
}

void sub_1D6837B94()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D6837BB8);
}

void sub_1D6837B9C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D6837BB8);
}

uint64_t sub_1D6837BA4(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1D6837BB8);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1D6837BB4);
    JUMPOUT(0x1D6837BB0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_1D6837BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  sub_1D60B0D80(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SavedFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E82ECC(v0, (uint64_t)v8, v9);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2);
  v11 = 0;
  if (!v10)
  {
    sub_1D60B0DD4((uint64_t)v8, (uint64_t)v5);
    v12 = sub_1D600DFE0(*(_QWORD *)&v5[*(int *)(v2 + 28)], type metadata accessor for SavedFeedLayoutSectionDescriptor.Header);
    v13 = sub_1D600DFE0(*(_QWORD *)&v5[*(int *)(v2 + 32)], type metadata accessor for SavedFeedLayoutSectionDescriptor.Footer);
    v16 = v12;
    sub_1D5F8F5C8(v13);
    v11 = v16;
    sub_1D5E8D20C((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1D60B0D80);
  }
  return v11;
}

uint64_t sub_1D6837CFC()
{
  sub_1D5E6D8C0(qword_1EFFF3388, type metadata accessor for SavedFeedLayoutSectionDescriptor, (uint64_t)&unk_1D6E952D0);
  return sub_1D6E200B4();
}

uint64_t sub_1D6837D3C()
{
  sub_1D5E6D8C0(&qword_1ED62B4C8, type metadata accessor for SavedFeedLayoutSectionDescriptor, (uint64_t)&unk_1D6E95280);
  return sub_1D6E1FAB4();
}

uint64_t sub_1D6837D7C()
{
  return sub_1D5E6D8C0(&qword_1ED62B4C0, type metadata accessor for SavedFeedLayoutSectionDescriptor, (uint64_t)&unk_1D6E95248);
}

uint64_t sub_1D6837DA8()
{
  return sub_1D5E6D8C0(&qword_1ED62B4C8, type metadata accessor for SavedFeedLayoutSectionDescriptor, (uint64_t)&unk_1D6E95280);
}

uint64_t type metadata accessor for SavedFeedLayoutSectionDescriptor.Footer(uint64_t a1)
{
  return sub_1D5E6E20C(a1, qword_1EFFF3480);
}

uint64_t type metadata accessor for SavedFeedLayoutSectionDescriptor.Header(uint64_t a1)
{
  return sub_1D5E6E20C(a1, (uint64_t *)&unk_1EFFF3500);
}

uint64_t type metadata accessor for SavedFeedLayoutSectionDescriptor.Decoration(uint64_t a1)
{
  return sub_1D5E6E20C(a1, qword_1EFFF3400);
}

uint64_t sub_1D6837E10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1D6837E70 + 4 * word_1D6E95350[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_1D6838F54(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1D60536DC();
      v4 = a1 + *(int *)(v3 + 48);
      v5 = sub_1D6E1F6F4();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

void sub_1D6838FF4()
{
  char *v0;

  v0 = (char *)sub_1D683904C + 4 * byte_1D6E9537A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1D683904C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = v1[3];
  v0[2] = v1[2];
  v0[3] = v3;
  v4 = v1[5];
  v0[4] = v1[4];
  v0[5] = v4;
  v6 = (void *)v1[6];
  v5 = v1[7];
  v0[6] = v6;
  v0[7] = v5;
  v0[8] = v1[8];
  sub_1D60536DC();
  v8 = *(int *)(v7 + 48);
  v9 = (char *)v0 + v8;
  v10 = (char *)v1 + v8;
  v11 = sub_1D6E1F6F4();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v6;
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v14 = (int *)type metadata accessor for TitleViewLayoutAttributes(0);
  v15 = v14[5];
  v16 = &v9[v15];
  v17 = &v10[v15];
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v19 = v14[6];
  v20 = &v9[v19];
  v21 = &v10[v19];
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  v23 = v14[7];
  v24 = &v9[v23];
  v25 = &v10[v23];
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  v27 = v14[8];
  v28 = &v9[v27];
  v29 = &v10[v27];
  v28[32] = v29[32];
  v30 = *((_OWORD *)v29 + 1);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v30;
  v31 = v14[9];
  v32 = &v9[v31];
  v33 = &v10[v31];
  v32[32] = v33[32];
  v34 = *((_OWORD *)v33 + 1);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v34;
  v9[v14[10]] = v10[v14[10]];
  v9[v14[11]] = v10[v14[11]];
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1D68391A0(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1D6839428(result);
    v2 = (char *)&loc_1D683920C + 4 * byte_1D6E95388[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1D6839380()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  id v9;

  *v0 = *v1;
  v0[1] = v1[1];
  v0[2] = v1[2];
  v0[3] = v1[3];
  v0[4] = v1[4];
  v0[5] = v1[5];
  v2 = (void *)v1[6];
  v0[6] = v2;
  v0[7] = v1[7];
  v0[8] = v1[8];
  sub_1D60536DC();
  v4 = *(int *)(v3 + 48);
  v5 = (char *)v0 + v4;
  v6 = (char *)v1 + v4;
  v7 = sub_1D6E1F6F4();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v2;
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  JUMPOUT(0x1D68392B0);
}

uint64_t sub_1D6839428(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FollowingSectionLayoutDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D6839464()
{
  char *v0;

  v0 = (char *)sub_1D68394B0 + 4 * byte_1D6E95396[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1D68394B0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v2 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 64);
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v3;
  sub_1D60536DC();
  v5 = *(int *)(v4 + 48);
  v6 = v0 + v5;
  v7 = v1 + v5;
  v8 = sub_1D6E1F6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  v9 = (int *)type metadata accessor for TitleViewLayoutAttributes(0);
  v10 = v9[5];
  v11 = (_OWORD *)(v6 + v10);
  v12 = (_OWORD *)(v7 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = v9[6];
  v15 = (_OWORD *)(v6 + v14);
  v16 = (_OWORD *)(v7 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v9[7];
  v19 = (_OWORD *)(v6 + v18);
  v20 = (_OWORD *)(v7 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = v9[8];
  v23 = v6 + v22;
  v24 = v7 + v22;
  *(_BYTE *)(v23 + 32) = *(_BYTE *)(v24 + 32);
  v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  v26 = v9[9];
  v27 = v6 + v26;
  v28 = v7 + v26;
  *(_BYTE *)(v27 + 32) = *(_BYTE *)(v28 + 32);
  v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(_BYTE *)(v6 + v9[10]) = *(_BYTE *)(v7 + v9[10]);
  *(_BYTE *)(v6 + v9[11]) = *(_BYTE *)(v7 + v9[11]);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1D68395C0(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1D6839428(result);
    v2 = (char *)&loc_1D683961C + 4 * byte_1D6E953A4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1D683972C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;

  v1 = type metadata accessor for FollowingSectionLayoutDescriptor();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TitleViewLayoutAttributes(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D683993C(v0, (uint64_t)v3);
  v7 = (void *)*((_QWORD *)v3 + 6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1D60536DC();
  sub_1D60A9F44((uint64_t)&v3[*(int *)(v8 + 48)], (uint64_t)v6);
  sub_1D5F8FA74();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D6E32F90;
  *(_QWORD *)(v9 + 56) = v4;
  *(_QWORD *)(v9 + 64) = sub_1D5E6D8C0((unint64_t *)&qword_1ED62A0B8, type metadata accessor for TitleViewLayoutAttributes, (uint64_t)&unk_1D6E98F70);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 32));
  sub_1D60A9F44((uint64_t)v6, (uint64_t)boxed_opaque_existential_1);
  return v9;
}

uint64_t sub_1D6839890()
{
  sub_1D5E6D8C0(&qword_1EFFF3510, (uint64_t (*)(uint64_t))type metadata accessor for FollowingSectionLayoutDescriptor, (uint64_t)&unk_1D6E95488);
  return sub_1D6E200B4();
}

uint64_t sub_1D68398D0()
{
  sub_1D5E6D8C0(&qword_1ED6014A8, (uint64_t (*)(uint64_t))type metadata accessor for FollowingSectionLayoutDescriptor, (uint64_t)&unk_1D6E95438);
  return sub_1D6E1FAB4();
}

uint64_t sub_1D6839910()
{
  return sub_1D5E6D8C0(&qword_1ED6014A8, (uint64_t (*)(uint64_t))type metadata accessor for FollowingSectionLayoutDescriptor, (uint64_t)&unk_1D6E95438);
}

uint64_t sub_1D683993C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FollowingSectionLayoutDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6839980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  v1 = sub_1D6E15ECC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 112));
  sub_1D6E18ADC();
  sub_1D6E1D6E4();
  sub_1D6839AE4();
  sub_1D6E16C1C();
  v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v7, v1);
  sub_1D6E1D6E4();
  sub_1D6E1D6F0();
  sub_1D6E15DDC();
  v8(v5, v1);
  sub_1D6E16C34();
  return ((uint64_t (*)(char *, uint64_t))v8)(v7, v1);
}

uint64_t type metadata accessor for WebEmbedEventHandler()
{
  return objc_opt_self();
}

unint64_t sub_1D6839AE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFFF35D0;
  if (!qword_1EFFF35D0)
  {
    v1 = sub_1D6E18ADC();
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0D54D70], v1);
    atomic_store(result, (unint64_t *)&qword_1EFFF35D0);
  }
  return result;
}

void sub_1D6839B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[18];

  v5 = v4;
  v19[12] = a2;
  v19[13] = a3;
  sub_1D5E84CE0();
  v19[10] = *(_QWORD *)(v7 - 8);
  v19[11] = v7;
  MEMORY[0x1E0C80A78](v7);
  v19[9] = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D6E15BE4();
  v19[2] = *(_QWORD *)(v9 - 8);
  v19[3] = v9;
  MEMORY[0x1E0C80A78](v9);
  v19[1] = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D649561C(0);
  MEMORY[0x1E0C80A78](v11);
  v19[8] = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FollowingModel();
  MEMORY[0x1E0C80A78](v13);
  v14 = *a4;
  v19[6] = a4[1];
  v19[7] = v14;
  v15 = a4[2];
  v19[4] = a4[3];
  v19[5] = v15;
  __swift_project_boxed_opaque_existential_1(v5 + 11, v5[14]);
  sub_1D6518C94();
  v16 = v5[5];
  swift_getObjectType();
  sub_1D5FE5890(0);
  v17 = sub_1D6E1CD30();
  (*(void (**)(uint64_t))(v16 + 144))(v17);
  swift_bridgeObjectRelease();
  sub_1D6E1CD60();
  v18 = (char *)&loc_1D6839CE0 + *((int *)qword_1D683A1B8 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1D6839CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(*(_QWORD *)v1 + 32) == 1)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 72));
    v3 = swift_retain();
    sub_1D61F8B9C(v3, *(_QWORD *)(v2 - 128), *(_QWORD *)(v2 - 120), 0);
    swift_release();
  }
  return swift_release();
}

void sub_1D683A210()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  sub_1D649561C(0);
  MEMORY[0x1E0C80A78](v0);
  v1 = type metadata accessor for FollowingModel();
  MEMORY[0x1E0C80A78](v1);
  sub_1D5FE5890(0);
  sub_1D6E1CD60();
  v2 = (char *)&loc_1D683A2CC + dword_1D683A58C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1D683A2DC()
{
  swift_release();
  return 0;
}

void sub_1D683A4AC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 72));
  sub_1D61F9F2C(v4, v2, v1);
  swift_release();
  JUMPOUT(0x1D683A310);
}

void sub_1D683A4E0()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 72));
  v3 = objc_msgSend(v2, sel_identifier);
  sub_1D6E26978();

  sub_1D61FAA90();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1D683A310);
}

void sub_1D683A574()
{
  swift_release();
  JUMPOUT(0x1D683A45CLL);
}

uint64_t sub_1D683A5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = sub_1D6E17F6C();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D6E19964();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D6E1994C();
  v15 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 112));
  v12 = *v11;
  v14 = *(_QWORD *)(*v11 + 16);
  sub_1D6E1F7A8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0D56518], v4);
  sub_1D6516D54(v12, (uint64_t)v3);
  sub_1D6E19940();
  sub_1D5E6D8C0((unint64_t *)&qword_1ED5E0820, (uint64_t (*)(uint64_t))MEMORY[0x1E0D564B0], MEMORY[0x1E0D56498]);
  sub_1D6E16C7C();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, v8);
}

uint64_t type metadata accessor for FollowingEventHandler()
{
  return objc_opt_self();
}

uint64_t sub_1D683A7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;

  sub_1D683B13C();
  sub_1D6E201F8();
  swift_allocObject();
  swift_retain();
  sub_1D6E20198();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = a1;
  v5[3] = &off_1E9B10400;
  v5[4] = a3;
  swift_retain();
  swift_retain();
  sub_1D6E201B0();
  swift_release();
  swift_release();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = &off_1E9B10400;
  swift_retain();
  sub_1D6E201E0();
  swift_release();
  swift_release();
  sub_1D6E201A4();
  return swift_release();
}

void *sub_1D683A8F8(uint64_t a1, uint64_t a2)
{
  void *result;

  result = (void *)MEMORY[0x1D82919D4](a2 + 16);
  if (result)
  {
    sub_1D664C838(a1, result);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D683A940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = MEMORY[0x1D82919D4](a3 + 16);
  if (result)
  {
    sub_1D683A7C4(a3, a1, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D683A9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D683AA24(a1, a2, a3, a4, a5, (uint64_t)&type metadata for AlertWebSubscriptionRemoval, (void (*)(void))sub_1D683B1BC);
}

uint64_t sub_1D683A9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D683AA24(a1, a2, a3, a4, a5, (uint64_t)&type metadata for AlertTagRemoval, (void (*)(void))sub_1D683B204);
}

uint64_t sub_1D683AA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  uint64_t result;
  _QWORD *v11;

  result = MEMORY[0x1D82919D4](a3 + 16);
  if (result)
  {
    a7();
    sub_1D6E201F8();
    swift_allocObject();
    swift_retain();
    sub_1D6E20198();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a3;
    v11[3] = &off_1E9B10400;
    v11[4] = a2;
    swift_retain();
    swift_retain();
    sub_1D6E201B0();
    swift_release();
    swift_release();
    sub_1D6E201A4();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D683AB50(uint64_t a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 72));
  return sub_1D61F913C(a1);
}

void sub_1D683AB84(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72));
  v2 = (void *)MEMORY[0x1D82919D4](*v1 + 80);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_presentedViewController);

    if (v4)
    {
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
        objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
  }
}

void *sub_1D683AC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *result;
  id v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;

  v6 = a2 + 16;
  result = (void *)MEMORY[0x1D82919D4](a2 + 16);
  if (result)
  {
    v8 = objc_msgSend(result, sel_splitViewController);
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, sel_ts_isCollapsedOrCollapsing);
      swift_unknownObjectRelease();

      v11 = v10 ^ 1;
    }
    else
    {
      swift_unknownObjectRelease();
      v11 = 1;
    }
    result = (void *)MEMORY[0x1D82919D4](v6);
    if (result)
    {
      v12 = objc_msgSend(result, sel_splitViewController);
      if (v12)
      {
        v13 = v12;
        v14 = (uint64_t)objc_msgSend(v12, sel_isCollapsed);
        swift_unknownObjectRelease();

      }
      else
      {
        swift_unknownObjectRelease();
        v14 = 1;
      }
      return (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 32))(v11, v14, a3, a4);
    }
  }
  return result;
}

uint64_t sub_1D683AD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for EngagementDismissal();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 88), *(_QWORD *)(a2 + 112));
  sub_1D5E82ECC(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for EngagementDismissal);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  sub_1D5F0D758((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for EngagementDismissal);
  sub_1D6E16C04();
  return swift_release();
}

uint64_t sub_1D683AE24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v3 = type metadata accessor for EngagementPresentation();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D6E15ECC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - v12;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 88), *(_QWORD *)(a2 + 112));
  sub_1D6E15EC0();
  sub_1D5E82ECC(v19, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EngagementPresentation);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v15 = (v5 + *(unsigned __int8 *)(v8 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = swift_allocObject();
  sub_1D5F0D758((uint64_t)v6, v16 + v14, (uint64_t (*)(_QWORD))type metadata accessor for EngagementPresentation);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, v11, v7);
  sub_1D6E16C04();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_1D683AFC0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  __int128 v11;
  uint64_t v12;
  _QWORD v13[4];

  v4 = type metadata accessor for EngagementAction();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a2 + 11, a2[14]);
  sub_1D5E82ECC(a1, (uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for EngagementAction);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  sub_1D5F0D758((uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for EngagementAction);
  sub_1D6E16C04();
  swift_release();
  v9 = __swift_project_boxed_opaque_existential_1(a2 + 6, a2[9]);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v9 + 16), *(_QWORD *)(*v9 + 40));
  sub_1D683B658();
  result = sub_1D6E19F70();
  if (v12)
  {
    sub_1D5E8D7A0(&v11, (uint64_t)v13);
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    sub_1D6E1D7BC();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1D683B13C()
{
  unint64_t result;

  result = qword_1EFFF35D8;
  if (!qword_1EFFF35D8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E57984, &type metadata for AlertAppStoreSubscriptionRemoval);
    atomic_store(result, (unint64_t *)&qword_1EFFF35D8);
  }
  return result;
}

uint64_t sub_1D683B184(uint64_t a1)
{
  _QWORD *v1;

  return sub_1D6BB3A18(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1D683B190()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D683B1B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D6BB3A1C(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1D683B1BC()
{
  unint64_t result;

  result = qword_1EFFF35E0;
  if (!qword_1EFFF35E0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E8675C, &type metadata for AlertWebSubscriptionRemoval);
    atomic_store(result, (unint64_t *)&qword_1EFFF35E0);
  }
  return result;
}

unint64_t sub_1D683B204()
{
  unint64_t result;

  result = qword_1EFFF35E8;
  if (!qword_1EFFF35E8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E94878, &type metadata for AlertTagRemoval);
    atomic_store(result, (unint64_t *)&qword_1EFFF35E8);
  }
  return result;
}

uint64_t sub_1D683B24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for EngagementPresentation();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v14 = *(_QWORD *)(v2 + 64);
  v4 = sub_1D6E15ECC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = sub_1D6E1B044();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 24);
  v9 = sub_1D6E1B224();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v10 = v0 + v3 + *(int *)(v1 + 32);
  v11 = sub_1D6E1B554();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v10, v11);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v14 + v6) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_1D683B3A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for EngagementPresentation() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D6E15ECC() - 8) + 80);
  return sub_1D65184B8(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1D683B40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for EngagementDismissal();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1D6E1B044();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  v5 = v3 + *(int *)(v1 + 24);
  v6 = sub_1D6E1B224();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v7 = v3 + *(int *)(v1 + 32);
  v8 = sub_1D6E1B554();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return swift_deallocObject();
}

uint64_t sub_1D683B50C(uint64_t a1)
{
  return sub_1D63D4644(a1, (uint64_t (*)(_QWORD))type metadata accessor for EngagementDismissal, sub_1D6517EB4);
}

uint64_t sub_1D683B520()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for EngagementAction();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1D6E1B044();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  v5 = v3 + v1[6];
  v6 = sub_1D6E15BE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v3 + v1[7];
  v8 = sub_1D6E1B224();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v9 = v3 + v1[9];
  v10 = sub_1D6E1B554();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1D683B644(uint64_t a1)
{
  return sub_1D63D4644(a1, (uint64_t (*)(_QWORD))type metadata accessor for EngagementAction, sub_1D651777C);
}

unint64_t sub_1D683B658()
{
  unint64_t result;

  result = qword_1ED5E1240;
  if (!qword_1ED5E1240)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5E1240);
  }
  return result;
}

uint64_t *sub_1D683B6AC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int EnumCaseMultiPayload;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  char *v103;
  char *v104;
  int v105;
  int *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  void *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(char *, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(char *, char *, uint64_t);
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  id v172;
  id v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  unsigned int (*v183)(char *, uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  int v188;
  int *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void *v196;
  void *v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int *v202;
  uint64_t v203;
  uint64_t v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  unsigned int (*v219)(char *, uint64_t, uint64_t);
  uint64_t v220;
  uint64_t v221;
  void *v222;
  uint64_t v223;
  void *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  void (*v246)(char *, char *, uint64_t);
  id v247;
  id v248;
  id v249;
  id v250;
  id v251;
  id v252;
  id v253;
  id v254;
  id v255;
  id v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  unsigned int (*v266)(char *, uint64_t, uint64_t);
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  char *v278;
  char *v279;
  char *v280;
  void *v281;
  char *v282;
  char *v283;
  void *v284;
  void *v285;
  char *v286;
  void *v287;
  void *v288;
  void *v289;
  uint64_t v290;
  void *v291;
  uint64_t v292;
  void (*v293)(char *, char *, uint64_t);
  void *v294;
  void (*v295)(char *, char *, uint64_t);
  uint64_t v296;
  void *v297;
  char *v298;
  void *v299;
  char *v300;
  void *v301;
  void *v302;
  char *v303;
  void *v304;
  char *v305;
  void *v306;
  void (*v307)(char *, char *, uint64_t);
  void *v308;
  void *v309;
  void *v310;
  void *v311;
  void *v312;
  char *v313;
  void *v314;
  void *v315;
  void *v316;
  void *v317;
  void *v318;
  uint64_t *v319;
  char *v320;
  void *v321;
  int *v322;
  char *v323;
  void *v324;
  char *v325;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    v26 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v26;
  }
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1D6E22E98();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v12((char *)a1 + a3[6], (char *)a2 + a3[6], v11);
  v13 = a3[8];
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
  v14 = a3[9];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  type metadata accessor for FeedPaywallModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v15 = *v16;
  v323 = v15;
  v325 = v16;
  v319 = a1;
  if (EnumCaseMultiPayload == 1)
  {
    v18 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v19 = v18[5];
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = sub_1D6E15BE4();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    *(_QWORD *)&v15[v18[6]] = *(_QWORD *)&v16[v18[6]];
    *(_QWORD *)&v15[v18[7]] = *(_QWORD *)&v16[v18[7]];
    *(_QWORD *)&v15[v18[8]] = *(_QWORD *)&v16[v18[8]];
    v56 = v18[9];
    v57 = *(void **)&v16[v56];
    *(_QWORD *)&v15[v56] = v57;
    v58 = v18[10];
    v59 = *(void **)&v325[v58];
    *(_QWORD *)&v15[v58] = v59;
    v60 = v18[11];
    v61 = *(void **)&v325[v60];
    *(_QWORD *)&v15[v60] = v61;
    v62 = v18[12];
    v63 = *(void **)&v325[v62];
    *(_QWORD *)&v15[v62] = v63;
    v64 = v18[13];
    v289 = *(void **)&v325[v64];
    *(_QWORD *)&v15[v64] = v289;
    v65 = v18[14];
    v297 = *(void **)&v325[v65];
    *(_QWORD *)&v15[v65] = v297;
    v66 = v18[15];
    v302 = *(void **)&v325[v66];
    *(_QWORD *)&v15[v66] = v302;
    v67 = v18[16];
    v308 = *(void **)&v325[v67];
    *(_QWORD *)&v15[v67] = v308;
    v68 = v18[17];
    v314 = *(void **)&v325[v68];
    *(_QWORD *)&v15[v68] = v314;
    v69 = v18[18];
    v321 = *(void **)&v325[v69];
    *(_QWORD *)&v15[v69] = v321;
    v70 = v18[19];
    v71 = &v15[v70];
    v72 = &v325[v70];
    v292 = *((_QWORD *)v72 + 1);
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *((_QWORD *)v71 + 1) = v292;
    v73 = v18[20];
    v74 = &v15[v73];
    v75 = &v325[v73];
    v76 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    v77 = v18[21];
    v78 = &v15[v77];
    v79 = &v325[v77];
    v80 = *((_QWORD *)v79 + 1);
    *(_QWORD *)v78 = *(_QWORD *)v79;
    *((_QWORD *)v78 + 1) = v80;
    v81 = v18[22];
    v286 = &v15[v81];
    v283 = &v325[v81];
    v82 = sub_1D6E1BC20();
    v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
    v84 = v57;
    v44 = v325;
    v85 = v59;
    v86 = v61;
    v87 = v63;
    v88 = v289;
    v89 = v297;
    v90 = v302;
    v91 = v308;
    v92 = v314;
    v93 = v321;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v83(v286, v283, v82);
    v94 = v18[23];
    v95 = &v15[v94];
    v96 = &v325[v94];
    v97 = *((_QWORD *)v96 + 1);
    *(_QWORD *)v95 = *(_QWORD *)v96;
    *((_QWORD *)v95 + 1) = v97;
    v98 = v18[24];
    v50 = &v15[v98];
    v51 = &v325[v98];
    v99 = sub_1D6E1BA7C();
    v100 = *(_QWORD *)(v99 - 8);
    v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
    swift_bridgeObjectRetain();
    if (!v101(v51, 1, v99))
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v50, v51, v99);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v50, 0, 1, v99);
      goto LABEL_13;
    }
  }
  else
  {
    v28 = (void *)*((_QWORD *)v16 + 1);
    v27 = (void *)*((_QWORD *)v16 + 2);
    *((_QWORD *)v15 + 1) = v28;
    *((_QWORD *)v15 + 2) = v27;
    v30 = (void *)*((_QWORD *)v16 + 3);
    v29 = (void *)*((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = v30;
    *((_QWORD *)v15 + 4) = v29;
    *(_OWORD *)(v15 + 40) = *(_OWORD *)(v16 + 40);
    v31 = (void *)*((_QWORD *)v16 + 8);
    *((_QWORD *)v323 + 7) = *((_QWORD *)v16 + 7);
    *((_QWORD *)v323 + 8) = v31;
    v32 = *((_QWORD *)v16 + 10);
    *((_QWORD *)v323 + 9) = *((_QWORD *)v16 + 9);
    *((_QWORD *)v323 + 10) = v32;
    v33 = *((_QWORD *)v16 + 12);
    *((_QWORD *)v323 + 11) = *((_QWORD *)v16 + 11);
    *((_QWORD *)v323 + 12) = v33;
    v34 = *((_QWORD *)v16 + 14);
    *((_QWORD *)v323 + 13) = *((_QWORD *)v16 + 13);
    *((_QWORD *)v323 + 14) = v34;
    v35 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v36 = v35[16];
    v320 = &v323[v36];
    v313 = &v16[v36];
    v37 = sub_1D6E1BC20();
    v307 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
    v38 = v28;
    v39 = v27;
    v40 = v30;
    v41 = v29;
    v42 = v31;
    v15 = v323;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = v37;
    v44 = v325;
    v307(v320, v313, v43);
    v45 = v35[17];
    v46 = &v323[v45];
    v47 = &v325[v45];
    v48 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *((_QWORD *)v46 + 1) = v48;
    v49 = v35[18];
    v50 = &v323[v49];
    v51 = &v325[v49];
    v52 = sub_1D6E1BA7C();
    v53 = *(_QWORD *)(v52 - 8);
    v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    swift_bridgeObjectRetain();
    if (!v54(v51, 1, v52))
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      goto LABEL_13;
    }
  }
  sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
  memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
LABEL_13:
  swift_storeEnumTagMultiPayload();
  v322 = (int *)type metadata accessor for FeedPaywallConfig();
  v102 = v322[5];
  v103 = &v15[v102];
  v104 = &v44[v102];
  v105 = swift_getEnumCaseMultiPayload();
  *v103 = *v104;
  if (v105 == 1)
  {
    v106 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v107 = v106[5];
    v108 = &v103[v107];
    v109 = &v104[v107];
    v110 = sub_1D6E15BE4();
    v111 = *(_QWORD *)(v110 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v108, v109, v110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
    }
    *(_QWORD *)&v103[v106[6]] = *(_QWORD *)&v104[v106[6]];
    *(_QWORD *)&v103[v106[7]] = *(_QWORD *)&v104[v106[7]];
    *(_QWORD *)&v103[v106[8]] = *(_QWORD *)&v104[v106[8]];
    v138 = v106[9];
    v139 = *(void **)&v104[v138];
    *(_QWORD *)&v103[v138] = v139;
    v140 = v106[10];
    v141 = *(void **)&v104[v140];
    *(_QWORD *)&v103[v140] = v141;
    v142 = v106[11];
    v281 = *(void **)&v104[v142];
    *(_QWORD *)&v103[v142] = v281;
    v143 = v106[12];
    v284 = *(void **)&v104[v143];
    *(_QWORD *)&v103[v143] = v284;
    v144 = v106[13];
    v287 = *(void **)&v104[v144];
    *(_QWORD *)&v103[v144] = v287;
    v145 = v106[14];
    v294 = *(void **)&v104[v145];
    *(_QWORD *)&v103[v145] = v294;
    v146 = v106[15];
    v299 = *(void **)&v104[v146];
    *(_QWORD *)&v103[v146] = v299;
    v147 = v106[16];
    v304 = *(void **)&v104[v147];
    *(_QWORD *)&v103[v147] = v304;
    v148 = v106[17];
    v310 = *(void **)&v104[v148];
    *(_QWORD *)&v103[v148] = v310;
    v149 = v106[18];
    v316 = *(void **)&v104[v149];
    *(_QWORD *)&v103[v149] = v316;
    v150 = v106[19];
    v151 = &v103[v150];
    v152 = &v104[v150];
    v290 = *((_QWORD *)v152 + 1);
    *(_QWORD *)v151 = *(_QWORD *)v152;
    *((_QWORD *)v151 + 1) = v290;
    v153 = v106[20];
    v154 = &v103[v153];
    v155 = &v104[v153];
    v156 = *((_QWORD *)v155 + 1);
    *(_QWORD *)v154 = *(_QWORD *)v155;
    *((_QWORD *)v154 + 1) = v156;
    v157 = v106[21];
    v158 = &v103[v157];
    v159 = &v104[v157];
    v160 = *((_QWORD *)v159 + 1);
    *(_QWORD *)v158 = *(_QWORD *)v159;
    *((_QWORD *)v158 + 1) = v160;
    v161 = v106[22];
    v278 = &v104[v161];
    v279 = &v103[v161];
    v162 = sub_1D6E1BC20();
    v163 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 16);
    v164 = v139;
    v165 = v141;
    v166 = v281;
    v167 = v284;
    v168 = v287;
    v169 = v294;
    v170 = v299;
    v171 = v304;
    v172 = v310;
    v173 = v316;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v163(v279, v278, v162);
    v174 = v106[23];
    v175 = &v103[v174];
    v176 = &v104[v174];
    v177 = *((_QWORD *)v176 + 1);
    *(_QWORD *)v175 = *(_QWORD *)v176;
    *((_QWORD *)v175 + 1) = v177;
    v178 = v106[24];
    v179 = &v103[v178];
    v180 = &v104[v178];
    v181 = sub_1D6E1BA7C();
    v182 = *(_QWORD *)(v181 - 8);
    v183 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48);
    swift_bridgeObjectRetain();
    if (v183(v180, 1, v181))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v179, v180, v181);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v179, 0, 1, v181);
    }
  }
  else
  {
    v113 = (void *)*((_QWORD *)v104 + 1);
    v114 = (void *)*((_QWORD *)v104 + 2);
    *((_QWORD *)v103 + 1) = v113;
    *((_QWORD *)v103 + 2) = v114;
    v115 = (void *)*((_QWORD *)v104 + 3);
    v315 = (void *)*((_QWORD *)v104 + 4);
    *((_QWORD *)v103 + 3) = v115;
    *((_QWORD *)v103 + 4) = v315;
    *(_OWORD *)(v103 + 40) = *(_OWORD *)(v104 + 40);
    v309 = (void *)*((_QWORD *)v104 + 8);
    *((_QWORD *)v103 + 7) = *((_QWORD *)v104 + 7);
    *((_QWORD *)v103 + 8) = v309;
    v116 = *((_QWORD *)v104 + 10);
    *((_QWORD *)v103 + 9) = *((_QWORD *)v104 + 9);
    *((_QWORD *)v103 + 10) = v116;
    v117 = *((_QWORD *)v104 + 12);
    *((_QWORD *)v103 + 11) = *((_QWORD *)v104 + 11);
    *((_QWORD *)v103 + 12) = v117;
    v118 = *((_QWORD *)v104 + 14);
    *((_QWORD *)v103 + 13) = *((_QWORD *)v104 + 13);
    *((_QWORD *)v103 + 14) = v118;
    v119 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v120 = v119[16];
    v298 = &v104[v120];
    v303 = &v103[v120];
    v121 = sub_1D6E1BC20();
    v293 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16);
    v122 = v113;
    v123 = v114;
    v124 = v115;
    v125 = v315;
    v126 = v309;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v293(v303, v298, v121);
    v127 = v119[17];
    v128 = &v103[v127];
    v129 = &v104[v127];
    v130 = *((_QWORD *)v129 + 1);
    *(_QWORD *)v128 = *(_QWORD *)v129;
    *((_QWORD *)v128 + 1) = v130;
    v131 = v119[18];
    v132 = &v103[v131];
    v133 = &v104[v131];
    v134 = sub_1D6E1BA7C();
    v135 = *(_QWORD *)(v134 - 8);
    v136 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48);
    swift_bridgeObjectRetain();
    if (v136(v133, 1, v134))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v132, v133, v134);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
    }
    v15 = v323;
  }
  swift_storeEnumTagMultiPayload();
  v185 = v322[6];
  v186 = &v15[v185];
  v187 = &v325[v185];
  v188 = swift_getEnumCaseMultiPayload();
  *v186 = *v187;
  if (v188 == 1)
  {
    v189 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v190 = v189[5];
    v191 = &v186[v190];
    v192 = &v187[v190];
    v193 = sub_1D6E15BE4();
    v194 = *(_QWORD *)(v193 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48))(v192, 1, v193))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v191, v192, v193);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v194 + 56))(v191, 0, 1, v193);
    }
    *(_QWORD *)&v186[v189[6]] = *(_QWORD *)&v187[v189[6]];
    *(_QWORD *)&v186[v189[7]] = *(_QWORD *)&v187[v189[7]];
    *(_QWORD *)&v186[v189[8]] = *(_QWORD *)&v187[v189[8]];
    v221 = v189[9];
    v222 = *(void **)&v187[v221];
    *(_QWORD *)&v186[v221] = v222;
    v223 = v189[10];
    v224 = *(void **)&v187[v223];
    *(_QWORD *)&v186[v223] = v224;
    v225 = v189[11];
    v285 = *(void **)&v187[v225];
    *(_QWORD *)&v186[v225] = v285;
    v226 = v189[12];
    v288 = *(void **)&v187[v226];
    *(_QWORD *)&v186[v226] = v288;
    v227 = v189[13];
    v291 = *(void **)&v187[v227];
    *(_QWORD *)&v186[v227] = v291;
    v228 = v189[14];
    v301 = *(void **)&v187[v228];
    *(_QWORD *)&v186[v228] = v301;
    v229 = v189[15];
    v306 = *(void **)&v187[v229];
    *(_QWORD *)&v186[v229] = v306;
    v230 = v189[16];
    v312 = *(void **)&v187[v230];
    *(_QWORD *)&v186[v230] = v312;
    v231 = v189[17];
    v318 = *(void **)&v187[v231];
    *(_QWORD *)&v186[v231] = v318;
    v232 = v189[18];
    v324 = *(void **)&v187[v232];
    *(_QWORD *)&v186[v232] = v324;
    v233 = v189[19];
    v234 = &v186[v233];
    v235 = &v187[v233];
    v296 = *((_QWORD *)v235 + 1);
    *(_QWORD *)v234 = *(_QWORD *)v235;
    *((_QWORD *)v234 + 1) = v296;
    v236 = v189[20];
    v237 = &v186[v236];
    v238 = &v187[v236];
    v239 = *((_QWORD *)v238 + 1);
    *(_QWORD *)v237 = *(_QWORD *)v238;
    *((_QWORD *)v237 + 1) = v239;
    v240 = v189[21];
    v241 = &v186[v240];
    v242 = &v187[v240];
    v243 = *((_QWORD *)v242 + 1);
    *(_QWORD *)v241 = *(_QWORD *)v242;
    *((_QWORD *)v241 + 1) = v243;
    v244 = v189[22];
    v280 = &v187[v244];
    v282 = &v186[v244];
    v245 = sub_1D6E1BC20();
    v246 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 16);
    v247 = v222;
    v248 = v224;
    v249 = v285;
    v250 = v288;
    v251 = v291;
    v252 = v301;
    v253 = v306;
    v254 = v312;
    v255 = v318;
    v256 = v324;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v246(v282, v280, v245);
    v257 = v189[23];
    v258 = &v186[v257];
    v259 = &v187[v257];
    v260 = *((_QWORD *)v259 + 1);
    *(_QWORD *)v258 = *(_QWORD *)v259;
    *((_QWORD *)v258 + 1) = v260;
    v261 = v189[24];
    v262 = &v186[v261];
    v263 = &v187[v261];
    v264 = sub_1D6E1BA7C();
    v265 = *(_QWORD *)(v264 - 8);
    v266 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v265 + 48);
    swift_bridgeObjectRetain();
    if (v266(v263, 1, v264))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v262, v263, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v265 + 16))(v262, v263, v264);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v265 + 56))(v262, 0, 1, v264);
    }
    v26 = v319;
  }
  else
  {
    v196 = (void *)*((_QWORD *)v187 + 1);
    v197 = (void *)*((_QWORD *)v187 + 2);
    *((_QWORD *)v186 + 1) = v196;
    *((_QWORD *)v186 + 2) = v197;
    v198 = (void *)*((_QWORD *)v187 + 3);
    v317 = (void *)*((_QWORD *)v187 + 4);
    *((_QWORD *)v186 + 3) = v198;
    *((_QWORD *)v186 + 4) = v317;
    *(_OWORD *)(v186 + 40) = *(_OWORD *)(v187 + 40);
    v311 = (void *)*((_QWORD *)v187 + 8);
    *((_QWORD *)v186 + 7) = *((_QWORD *)v187 + 7);
    *((_QWORD *)v186 + 8) = v311;
    v199 = *((_QWORD *)v187 + 10);
    *((_QWORD *)v186 + 9) = *((_QWORD *)v187 + 9);
    *((_QWORD *)v186 + 10) = v199;
    v200 = *((_QWORD *)v187 + 12);
    *((_QWORD *)v186 + 11) = *((_QWORD *)v187 + 11);
    *((_QWORD *)v186 + 12) = v200;
    v201 = *((_QWORD *)v187 + 14);
    *((_QWORD *)v186 + 13) = *((_QWORD *)v187 + 13);
    *((_QWORD *)v186 + 14) = v201;
    v202 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v203 = v202[16];
    v300 = &v187[v203];
    v305 = &v186[v203];
    v204 = sub_1D6E1BC20();
    v295 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 16);
    v205 = v196;
    v206 = v197;
    v207 = v198;
    v208 = v317;
    v209 = v311;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v295(v305, v300, v204);
    v210 = v202[17];
    v211 = &v186[v210];
    v212 = &v187[v210];
    v213 = *((_QWORD *)v212 + 1);
    *(_QWORD *)v211 = *(_QWORD *)v212;
    *((_QWORD *)v211 + 1) = v213;
    v214 = v202[18];
    v215 = &v186[v214];
    v216 = &v187[v214];
    v217 = sub_1D6E1BA7C();
    v218 = *(_QWORD *)(v217 - 8);
    v219 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48);
    swift_bridgeObjectRetain();
    if (v219(v216, 1, v217))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v218 + 16))(v215, v216, v217);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v218 + 56))(v215, 0, 1, v217);
    }
    v26 = v319;
    v15 = v323;
  }
  swift_storeEnumTagMultiPayload();
  v268 = v322[7];
  v269 = &v15[v268];
  v270 = &v325[v268];
  v271 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v269 = *(_QWORD *)v270;
    sub_1D6108060();
    v273 = *(int *)(v272 + 48);
    v274 = &v269[v273];
    v275 = &v270[v273];
    v276 = sub_1D6E1B884();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v276 - 8) + 16))(v274, v275, v276);
    swift_storeEnumTagMultiPayload();
  }
  return v26;
}

uint64_t sub_1D683C648(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id *v7;
  int *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  id *v22;
  int *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id *v36;
  int *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t result;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1D6E22E98();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  v7 = (id *)(a1 + a2[9]);
  type metadata accessor for FeedPaywallModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v9 = (char *)v7 + v8[5];
    v10 = sub_1D6E15BE4();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = (char *)v7 + v8[22];
    v13 = sub_1D6E1BC20();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    v14 = v8[24];
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = type metadata accessor for FeedRegularPaywallModel(0);
    v16 = (char *)v7 + *(int *)(v15 + 64);
    v17 = sub_1D6E1BC20();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    v14 = *(int *)(v15 + 72);
  }
  v18 = (char *)v7 + v14;
  v19 = sub_1D6E1BA7C();
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
  v21 = (int *)type metadata accessor for FeedPaywallConfig();
  v22 = (id *)((char *)v7 + v21[5]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v24 = (char *)v22 + v23[5];
    v25 = sub_1D6E15BE4();
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = (char *)v22 + v23[22];
    v28 = sub_1D6E1BC20();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
    swift_bridgeObjectRelease();
    v29 = v23[24];
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = type metadata accessor for FeedRegularPaywallModel(0);
    v31 = (char *)v22 + *(int *)(v30 + 64);
    v32 = sub_1D6E1BC20();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
    swift_bridgeObjectRelease();
    v29 = *(int *)(v30 + 72);
  }
  v33 = (char *)v22 + v29;
  v34 = sub_1D6E1BA7C();
  v35 = *(_QWORD *)(v34 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
  v36 = (id *)((char *)v7 + v21[6]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v37 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v38 = (char *)v36 + v37[5];
    v39 = sub_1D6E15BE4();
    v40 = *(_QWORD *)(v39 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
      (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = (char *)v36 + v37[22];
    v42 = sub_1D6E1BC20();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
    swift_bridgeObjectRelease();
    v43 = v37[24];
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v44 = type metadata accessor for FeedRegularPaywallModel(0);
    v45 = (char *)v36 + *(int *)(v44 + 64);
    v46 = sub_1D6E1BC20();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
    swift_bridgeObjectRelease();
    v43 = *(int *)(v44 + 72);
  }
  v47 = (char *)v36 + v43;
  v48 = sub_1D6E1BA7C();
  v49 = *(_QWORD *)(v48 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v48);
  v50 = (char *)v7 + v21[7];
  type metadata accessor for FeedPaywallType(0);
  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    sub_1D6108060();
    v53 = &v50[*(int *)(v52 + 48)];
    v54 = sub_1D6E1B884();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
  }
  return result;
}

char *sub_1D683CD5C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int EnumCaseMultiPayload;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  char *v38;
  id v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  int v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  void *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int (*v132)(char *, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(char *, char *, uint64_t);
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  unsigned int (*v179)(char *, uint64_t, uint64_t);
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  int v184;
  int *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  void *v193;
  void *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int *v198;
  uint64_t v199;
  uint64_t v200;
  id v201;
  id v202;
  id v203;
  id v204;
  id v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  unsigned int (*v215)(char *, uint64_t, uint64_t);
  uint64_t v216;
  uint64_t v217;
  void *v218;
  uint64_t v219;
  void *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  void (*v242)(char *, char *, uint64_t);
  id v243;
  id v244;
  id v245;
  id v246;
  id v247;
  id v248;
  id v249;
  id v250;
  id v251;
  id v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  unsigned int (*v262)(char *, uint64_t, uint64_t);
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  uint64_t v272;
  char *v274;
  char *v275;
  char *v276;
  void *v277;
  char *v278;
  char *v279;
  void *v280;
  void *v281;
  char *v282;
  void *v283;
  void *v284;
  void *v285;
  uint64_t v286;
  void *v287;
  uint64_t v288;
  void (*v289)(char *, char *, uint64_t);
  void *v290;
  void (*v291)(char *, char *, uint64_t);
  uint64_t v292;
  void *v293;
  char *v294;
  void *v295;
  char *v296;
  void *v297;
  void *v298;
  char *v299;
  void *v300;
  char *v301;
  void *v302;
  void (*v303)(char *, char *, uint64_t);
  void *v304;
  void *v305;
  void *v306;
  void *v307;
  void *v308;
  char *v309;
  void *v310;
  void *v311;
  void *v312;
  void *v313;
  void *v314;
  char *v315;
  char *v316;
  void *v317;
  int *v318;
  char *v319;
  void *v320;
  char *v321;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1D6E22E98();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v13 = a3[9];
  v315 = a1;
  v14 = &a2[v13];
  v15 = &a1[v13];
  type metadata accessor for FeedPaywallModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v15 = *v14;
  v319 = v15;
  v321 = v14;
  if (EnumCaseMultiPayload == 1)
  {
    v17 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v18 = v17[5];
    v19 = &v15[v18];
    v20 = &v14[v18];
    v21 = sub_1D6E15BE4();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    *(_QWORD *)&v15[v17[6]] = *(_QWORD *)&v14[v17[6]];
    *(_QWORD *)&v15[v17[7]] = *(_QWORD *)&v14[v17[7]];
    *(_QWORD *)&v15[v17[8]] = *(_QWORD *)&v14[v17[8]];
    v52 = v17[9];
    v53 = *(void **)&v14[v52];
    *(_QWORD *)&v15[v52] = v53;
    v54 = v17[10];
    v55 = *(void **)&v14[v54];
    *(_QWORD *)&v15[v54] = v55;
    v56 = v17[11];
    v57 = *(void **)&v14[v56];
    *(_QWORD *)&v15[v56] = v57;
    v58 = v17[12];
    v59 = *(void **)&v14[v58];
    *(_QWORD *)&v15[v58] = v59;
    v60 = v17[13];
    v285 = *(void **)&v14[v60];
    *(_QWORD *)&v15[v60] = v285;
    v61 = v17[14];
    v293 = *(void **)&v14[v61];
    *(_QWORD *)&v15[v61] = v293;
    v62 = v17[15];
    v298 = *(void **)&v14[v62];
    *(_QWORD *)&v15[v62] = v298;
    v63 = v17[16];
    v304 = *(void **)&v14[v63];
    *(_QWORD *)&v15[v63] = v304;
    v64 = v17[17];
    v310 = *(void **)&v14[v64];
    *(_QWORD *)&v15[v64] = v310;
    v65 = v17[18];
    v317 = *(void **)&v14[v65];
    *(_QWORD *)&v15[v65] = v317;
    v66 = v17[19];
    v67 = &v15[v66];
    v68 = &v14[v66];
    v288 = *((_QWORD *)v68 + 1);
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *((_QWORD *)v67 + 1) = v288;
    v69 = v17[20];
    v70 = &v15[v69];
    v71 = &v14[v69];
    v72 = *((_QWORD *)v71 + 1);
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *((_QWORD *)v70 + 1) = v72;
    v73 = v17[21];
    v74 = &v15[v73];
    v75 = &v14[v73];
    v76 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    v77 = v17[22];
    v282 = &v15[v77];
    v279 = &v14[v77];
    v78 = sub_1D6E1BC20();
    v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
    v80 = v53;
    v81 = v55;
    v82 = v57;
    v38 = v321;
    v83 = v59;
    v84 = v285;
    v85 = v293;
    v86 = v298;
    v87 = v304;
    v88 = v310;
    v89 = v317;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79(v282, v279, v78);
    v90 = v17[23];
    v91 = &v15[v90];
    v92 = &v321[v90];
    v93 = *((_QWORD *)v92 + 1);
    *(_QWORD *)v91 = *(_QWORD *)v92;
    *((_QWORD *)v91 + 1) = v93;
    v94 = v17[24];
    v46 = &v15[v94];
    v47 = &v321[v94];
    v95 = sub_1D6E1BA7C();
    v96 = *(_QWORD *)(v95 - 8);
    v97 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48);
    swift_bridgeObjectRetain();
    if (v97(v47, 1, v95))
      goto LABEL_5;
    (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v46, v47, v95);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v46, 0, 1, v95);
  }
  else
  {
    v25 = (void *)*((_QWORD *)v14 + 1);
    v24 = (void *)*((_QWORD *)v14 + 2);
    *((_QWORD *)v15 + 1) = v25;
    *((_QWORD *)v15 + 2) = v24;
    v26 = (void *)*((_QWORD *)v14 + 3);
    v27 = (void *)*((_QWORD *)v14 + 4);
    *((_QWORD *)v15 + 3) = v26;
    *((_QWORD *)v15 + 4) = v27;
    *(_OWORD *)(v15 + 40) = *(_OWORD *)(v321 + 40);
    v28 = (void *)*((_QWORD *)v321 + 8);
    *((_QWORD *)v319 + 7) = *((_QWORD *)v321 + 7);
    *((_QWORD *)v319 + 8) = v28;
    v29 = *((_QWORD *)v321 + 10);
    *((_QWORD *)v319 + 9) = *((_QWORD *)v321 + 9);
    *((_QWORD *)v319 + 10) = v29;
    v30 = *((_QWORD *)v321 + 12);
    *((_QWORD *)v319 + 11) = *((_QWORD *)v321 + 11);
    *((_QWORD *)v319 + 12) = v30;
    v31 = *((_QWORD *)v321 + 14);
    *((_QWORD *)v319 + 13) = *((_QWORD *)v321 + 13);
    *((_QWORD *)v319 + 14) = v31;
    v32 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v33 = v32[16];
    v316 = &v319[v33];
    v309 = &v321[v33];
    v34 = sub_1D6E1BC20();
    v303 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    v35 = v25;
    v36 = v24;
    v37 = v26;
    v38 = v321;
    v39 = v27;
    v40 = v28;
    v15 = v319;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v303(v316, v309, v34);
    v41 = v32[17];
    v42 = &v319[v41];
    v43 = &v321[v41];
    v44 = *((_QWORD *)v43 + 1);
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *((_QWORD *)v42 + 1) = v44;
    v45 = v32[18];
    v46 = &v319[v45];
    v47 = &v321[v45];
    v48 = sub_1D6E1BA7C();
    v49 = *(_QWORD *)(v48 - 8);
    v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
    swift_bridgeObjectRetain();
    if (v50(v47, 1, v48))
    {
LABEL_5:
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      goto LABEL_11;
    }
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
LABEL_11:
  swift_storeEnumTagMultiPayload();
  v318 = (int *)type metadata accessor for FeedPaywallConfig();
  v98 = v318[5];
  v99 = &v15[v98];
  v100 = &v38[v98];
  v101 = swift_getEnumCaseMultiPayload();
  *v99 = *v100;
  if (v101 == 1)
  {
    v102 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v103 = v102[5];
    v104 = &v99[v103];
    v105 = &v100[v103];
    v106 = sub_1D6E15BE4();
    v107 = *(_QWORD *)(v106 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v104, v105, v106);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
    }
    *(_QWORD *)&v99[v102[6]] = *(_QWORD *)&v100[v102[6]];
    *(_QWORD *)&v99[v102[7]] = *(_QWORD *)&v100[v102[7]];
    *(_QWORD *)&v99[v102[8]] = *(_QWORD *)&v100[v102[8]];
    v134 = v102[9];
    v135 = *(void **)&v100[v134];
    *(_QWORD *)&v99[v134] = v135;
    v136 = v102[10];
    v137 = *(void **)&v100[v136];
    *(_QWORD *)&v99[v136] = v137;
    v138 = v102[11];
    v277 = *(void **)&v100[v138];
    *(_QWORD *)&v99[v138] = v277;
    v139 = v102[12];
    v280 = *(void **)&v100[v139];
    *(_QWORD *)&v99[v139] = v280;
    v140 = v102[13];
    v283 = *(void **)&v100[v140];
    *(_QWORD *)&v99[v140] = v283;
    v141 = v102[14];
    v290 = *(void **)&v100[v141];
    *(_QWORD *)&v99[v141] = v290;
    v142 = v102[15];
    v295 = *(void **)&v100[v142];
    *(_QWORD *)&v99[v142] = v295;
    v143 = v102[16];
    v300 = *(void **)&v100[v143];
    *(_QWORD *)&v99[v143] = v300;
    v144 = v102[17];
    v306 = *(void **)&v100[v144];
    *(_QWORD *)&v99[v144] = v306;
    v145 = v102[18];
    v312 = *(void **)&v100[v145];
    *(_QWORD *)&v99[v145] = v312;
    v146 = v102[19];
    v147 = &v99[v146];
    v148 = &v100[v146];
    v286 = *((_QWORD *)v148 + 1);
    *(_QWORD *)v147 = *(_QWORD *)v148;
    *((_QWORD *)v147 + 1) = v286;
    v149 = v102[20];
    v150 = &v99[v149];
    v151 = &v100[v149];
    v152 = *((_QWORD *)v151 + 1);
    *(_QWORD *)v150 = *(_QWORD *)v151;
    *((_QWORD *)v150 + 1) = v152;
    v153 = v102[21];
    v154 = &v99[v153];
    v155 = &v100[v153];
    v156 = *((_QWORD *)v155 + 1);
    *(_QWORD *)v154 = *(_QWORD *)v155;
    *((_QWORD *)v154 + 1) = v156;
    v157 = v102[22];
    v274 = &v100[v157];
    v275 = &v99[v157];
    v158 = sub_1D6E1BC20();
    v159 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16);
    v160 = v135;
    v161 = v137;
    v162 = v277;
    v163 = v280;
    v164 = v283;
    v165 = v290;
    v166 = v295;
    v167 = v300;
    v168 = v306;
    v169 = v312;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v159(v275, v274, v158);
    v170 = v102[23];
    v171 = &v99[v170];
    v172 = &v100[v170];
    v173 = *((_QWORD *)v172 + 1);
    *(_QWORD *)v171 = *(_QWORD *)v172;
    *((_QWORD *)v171 + 1) = v173;
    v174 = v102[24];
    v175 = &v99[v174];
    v176 = &v100[v174];
    v177 = sub_1D6E1BA7C();
    v178 = *(_QWORD *)(v177 - 8);
    v179 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48);
    swift_bridgeObjectRetain();
    if (v179(v176, 1, v177))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v175, v176, v177);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v178 + 56))(v175, 0, 1, v177);
    }
  }
  else
  {
    v109 = (void *)*((_QWORD *)v100 + 1);
    v110 = (void *)*((_QWORD *)v100 + 2);
    *((_QWORD *)v99 + 1) = v109;
    *((_QWORD *)v99 + 2) = v110;
    v111 = (void *)*((_QWORD *)v100 + 3);
    v311 = (void *)*((_QWORD *)v100 + 4);
    *((_QWORD *)v99 + 3) = v111;
    *((_QWORD *)v99 + 4) = v311;
    *(_OWORD *)(v99 + 40) = *(_OWORD *)(v100 + 40);
    v305 = (void *)*((_QWORD *)v100 + 8);
    *((_QWORD *)v99 + 7) = *((_QWORD *)v100 + 7);
    *((_QWORD *)v99 + 8) = v305;
    v112 = *((_QWORD *)v100 + 10);
    *((_QWORD *)v99 + 9) = *((_QWORD *)v100 + 9);
    *((_QWORD *)v99 + 10) = v112;
    v113 = *((_QWORD *)v100 + 12);
    *((_QWORD *)v99 + 11) = *((_QWORD *)v100 + 11);
    *((_QWORD *)v99 + 12) = v113;
    v114 = *((_QWORD *)v100 + 14);
    *((_QWORD *)v99 + 13) = *((_QWORD *)v100 + 13);
    *((_QWORD *)v99 + 14) = v114;
    v115 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v116 = v115[16];
    v294 = &v100[v116];
    v299 = &v99[v116];
    v117 = sub_1D6E1BC20();
    v289 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 16);
    v118 = v109;
    v119 = v110;
    v120 = v111;
    v121 = v311;
    v122 = v305;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v289(v299, v294, v117);
    v123 = v115[17];
    v124 = &v99[v123];
    v125 = &v100[v123];
    v126 = *((_QWORD *)v125 + 1);
    *(_QWORD *)v124 = *(_QWORD *)v125;
    *((_QWORD *)v124 + 1) = v126;
    v127 = v115[18];
    v128 = &v99[v127];
    v129 = &v100[v127];
    v130 = sub_1D6E1BA7C();
    v131 = *(_QWORD *)(v130 - 8);
    v132 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48);
    swift_bridgeObjectRetain();
    if (v132(v129, 1, v130))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v128, v129, v130);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
    }
    v15 = v319;
  }
  swift_storeEnumTagMultiPayload();
  v181 = v318[6];
  v182 = &v15[v181];
  v183 = &v321[v181];
  v184 = swift_getEnumCaseMultiPayload();
  *v182 = *v183;
  if (v184 == 1)
  {
    v185 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v186 = v185[5];
    v187 = &v182[v186];
    v188 = &v183[v186];
    v189 = sub_1D6E15BE4();
    v190 = *(_QWORD *)(v189 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v187, v188, v189);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v190 + 56))(v187, 0, 1, v189);
    }
    *(_QWORD *)&v182[v185[6]] = *(_QWORD *)&v183[v185[6]];
    *(_QWORD *)&v182[v185[7]] = *(_QWORD *)&v183[v185[7]];
    *(_QWORD *)&v182[v185[8]] = *(_QWORD *)&v183[v185[8]];
    v217 = v185[9];
    v218 = *(void **)&v183[v217];
    *(_QWORD *)&v182[v217] = v218;
    v219 = v185[10];
    v220 = *(void **)&v183[v219];
    *(_QWORD *)&v182[v219] = v220;
    v221 = v185[11];
    v281 = *(void **)&v183[v221];
    *(_QWORD *)&v182[v221] = v281;
    v222 = v185[12];
    v284 = *(void **)&v183[v222];
    *(_QWORD *)&v182[v222] = v284;
    v223 = v185[13];
    v287 = *(void **)&v183[v223];
    *(_QWORD *)&v182[v223] = v287;
    v224 = v185[14];
    v297 = *(void **)&v183[v224];
    *(_QWORD *)&v182[v224] = v297;
    v225 = v185[15];
    v302 = *(void **)&v183[v225];
    *(_QWORD *)&v182[v225] = v302;
    v226 = v185[16];
    v308 = *(void **)&v183[v226];
    *(_QWORD *)&v182[v226] = v308;
    v227 = v185[17];
    v314 = *(void **)&v183[v227];
    *(_QWORD *)&v182[v227] = v314;
    v228 = v185[18];
    v320 = *(void **)&v183[v228];
    *(_QWORD *)&v182[v228] = v320;
    v229 = v185[19];
    v230 = &v182[v229];
    v231 = &v183[v229];
    v292 = *((_QWORD *)v231 + 1);
    *(_QWORD *)v230 = *(_QWORD *)v231;
    *((_QWORD *)v230 + 1) = v292;
    v232 = v185[20];
    v233 = &v182[v232];
    v234 = &v183[v232];
    v235 = *((_QWORD *)v234 + 1);
    *(_QWORD *)v233 = *(_QWORD *)v234;
    *((_QWORD *)v233 + 1) = v235;
    v236 = v185[21];
    v237 = &v182[v236];
    v238 = &v183[v236];
    v239 = *((_QWORD *)v238 + 1);
    *(_QWORD *)v237 = *(_QWORD *)v238;
    *((_QWORD *)v237 + 1) = v239;
    v240 = v185[22];
    v276 = &v183[v240];
    v278 = &v182[v240];
    v241 = sub_1D6E1BC20();
    v242 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 16);
    v243 = v218;
    v244 = v220;
    v245 = v281;
    v246 = v284;
    v247 = v287;
    v248 = v297;
    v249 = v302;
    v250 = v308;
    v251 = v314;
    v252 = v320;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v242(v278, v276, v241);
    v253 = v185[23];
    v254 = &v182[v253];
    v255 = &v183[v253];
    v256 = *((_QWORD *)v255 + 1);
    *(_QWORD *)v254 = *(_QWORD *)v255;
    *((_QWORD *)v254 + 1) = v256;
    v257 = v185[24];
    v258 = &v182[v257];
    v259 = &v183[v257];
    v260 = sub_1D6E1BA7C();
    v261 = *(_QWORD *)(v260 - 8);
    v262 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v261 + 48);
    swift_bridgeObjectRetain();
    if (v262(v259, 1, v260))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v258, v259, *(_QWORD *)(*(_QWORD *)(v263 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v261 + 16))(v258, v259, v260);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v261 + 56))(v258, 0, 1, v260);
    }
  }
  else
  {
    v192 = (void *)*((_QWORD *)v183 + 1);
    v193 = (void *)*((_QWORD *)v183 + 2);
    *((_QWORD *)v182 + 1) = v192;
    *((_QWORD *)v182 + 2) = v193;
    v194 = (void *)*((_QWORD *)v183 + 3);
    v313 = (void *)*((_QWORD *)v183 + 4);
    *((_QWORD *)v182 + 3) = v194;
    *((_QWORD *)v182 + 4) = v313;
    *(_OWORD *)(v182 + 40) = *(_OWORD *)(v183 + 40);
    v307 = (void *)*((_QWORD *)v183 + 8);
    *((_QWORD *)v182 + 7) = *((_QWORD *)v183 + 7);
    *((_QWORD *)v182 + 8) = v307;
    v195 = *((_QWORD *)v183 + 10);
    *((_QWORD *)v182 + 9) = *((_QWORD *)v183 + 9);
    *((_QWORD *)v182 + 10) = v195;
    v196 = *((_QWORD *)v183 + 12);
    *((_QWORD *)v182 + 11) = *((_QWORD *)v183 + 11);
    *((_QWORD *)v182 + 12) = v196;
    v197 = *((_QWORD *)v183 + 14);
    *((_QWORD *)v182 + 13) = *((_QWORD *)v183 + 13);
    *((_QWORD *)v182 + 14) = v197;
    v198 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v199 = v198[16];
    v296 = &v183[v199];
    v301 = &v182[v199];
    v200 = sub_1D6E1BC20();
    v291 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 16);
    v201 = v192;
    v202 = v193;
    v203 = v194;
    v204 = v313;
    v205 = v307;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v291(v301, v296, v200);
    v206 = v198[17];
    v207 = &v182[v206];
    v208 = &v183[v206];
    v209 = *((_QWORD *)v208 + 1);
    *(_QWORD *)v207 = *(_QWORD *)v208;
    *((_QWORD *)v207 + 1) = v209;
    v210 = v198[18];
    v211 = &v182[v210];
    v212 = &v183[v210];
    v213 = sub_1D6E1BA7C();
    v214 = *(_QWORD *)(v213 - 8);
    v215 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48);
    swift_bridgeObjectRetain();
    if (v215(v212, 1, v213))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v211, v212, v213);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v211, 0, 1, v213);
    }
    v15 = v319;
  }
  swift_storeEnumTagMultiPayload();
  v264 = v318[7];
  v265 = &v15[v264];
  v266 = &v321[v264];
  v267 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v265, v266, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v265 = *(_QWORD *)v266;
    sub_1D6108060();
    v269 = *(int *)(v268 + 48);
    v270 = &v265[v269];
    v271 = &v266[v269];
    v272 = sub_1D6E1B884();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v272 - 8) + 16))(v270, v271, v272);
    swift_storeEnumTagMultiPayload();
  }
  return v315;
}

char *sub_1D683DCF8(char *a1, char *a2, int *a3)
{
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int EnumCaseMultiPayload;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  _QWORD *v33;
  id v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  int v92;
  int *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  void *v101;
  void *v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int (*v119)(char *, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t);
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  unsigned int (*v163)(char *, uint64_t, uint64_t);
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  int v168;
  int *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  void *v177;
  void *v178;
  int *v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  unsigned int (*v195)(char *, uint64_t, uint64_t);
  uint64_t v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  void (*v220)(char *, char *, uint64_t);
  id v221;
  id v222;
  id v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  unsigned int (*v239)(char *, uint64_t, uint64_t);
  uint64_t v240;
  uint64_t v241;
  _QWORD *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  char *v251;
  char *v252;
  char *v253;
  void *v254;
  char *v255;
  char *v256;
  void *v257;
  void *v258;
  char *v259;
  void *v260;
  void *v261;
  void *v262;
  void *v263;
  void (*v264)(char *, char *, uint64_t);
  void *v265;
  void (*v266)(char *, char *, uint64_t);
  void *v267;
  char *v268;
  void *v269;
  char *v270;
  void *v271;
  void *v272;
  char *v273;
  void *v274;
  char *v275;
  void *v276;
  void (*v277)(char *, char *, uint64_t);
  void *v278;
  void *v279;
  void *v280;
  void *v281;
  void *v282;
  char *v283;
  void *v284;
  void *v285;
  void *v286;
  void *v287;
  void *v288;
  char *v289;
  char *v290;
  void *v291;
  int *v292;
  char *v293;
  void *v294;
  _QWORD *v295;

  v5 = a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &v5[v6];
  v8 = &a2[v6];
  v9 = sub_1D6E22E98();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&v5[a3[6]], &a2[a3[6]], v9);
  *(_QWORD *)&v5[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&v5[a3[8]] = *(_QWORD *)&a2[a3[8]];
  if (v5 == a2)
  {
    type metadata accessor for FeedPaywallConfig();
    return v5;
  }
  v11 = a3[9];
  v289 = v5;
  v12 = &v5[v11];
  v13 = &a2[v11];
  sub_1D5E8D20C((uint64_t)&v5[v11], type metadata accessor for FeedPaywallModel);
  type metadata accessor for FeedPaywallModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v12 = *v13;
  v293 = v13;
  v295 = v12;
  if (EnumCaseMultiPayload == 1)
  {
    v15 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v16 = v15[5];
    v17 = &v12[v16];
    v18 = &v13[v16];
    v19 = sub_1D6E15BE4();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    *(_QWORD *)&v12[v15[6]] = *(_QWORD *)&v13[v15[6]];
    *(_QWORD *)&v12[v15[7]] = *(_QWORD *)&v13[v15[7]];
    *(_QWORD *)&v12[v15[8]] = *(_QWORD *)&v13[v15[8]];
    v46 = v15[9];
    v47 = *(void **)&v13[v46];
    *(_QWORD *)&v12[v46] = v47;
    v48 = v15[10];
    v49 = *(void **)&v13[v48];
    *(_QWORD *)&v12[v48] = v49;
    v50 = v15[11];
    v51 = *(void **)&v13[v50];
    *(_QWORD *)&v12[v50] = v51;
    v52 = v15[12];
    v53 = *(void **)&v13[v52];
    *(_QWORD *)&v12[v52] = v53;
    v54 = v15[13];
    v262 = *(void **)&v13[v54];
    *(_QWORD *)&v12[v54] = v262;
    v55 = v15[14];
    v267 = *(void **)&v13[v55];
    *(_QWORD *)&v12[v55] = v267;
    v56 = v15[15];
    v272 = *(void **)&v13[v56];
    *(_QWORD *)&v12[v56] = v272;
    v57 = v15[16];
    v278 = *(void **)&v13[v57];
    *(_QWORD *)&v12[v57] = v278;
    v58 = v15[17];
    v284 = *(void **)&v13[v58];
    *(_QWORD *)&v12[v58] = v284;
    v59 = v15[18];
    v291 = *(void **)&v13[v59];
    *(_QWORD *)&v12[v59] = v291;
    v60 = v15[19];
    v61 = &v12[v60];
    v62 = &v13[v60];
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
    v63 = v15[20];
    v64 = &v12[v63];
    v65 = &v13[v63];
    *(_QWORD *)v64 = *(_QWORD *)v65;
    *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
    v66 = v15[21];
    v67 = &v12[v66];
    v68 = &v13[v66];
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *((_QWORD *)v67 + 1) = *((_QWORD *)v68 + 1);
    v69 = v15[22];
    v256 = &v13[v69];
    v259 = &v12[v69];
    v70 = sub_1D6E1BC20();
    v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
    v72 = v47;
    v73 = v49;
    v74 = v51;
    v33 = v295;
    v75 = v53;
    v76 = v262;
    v77 = v267;
    v78 = v272;
    v79 = v278;
    v80 = v284;
    v81 = v291;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v71(v259, v256, v70);
    v82 = v15[23];
    v83 = (_QWORD *)((char *)v295 + v82);
    v84 = &v13[v82];
    *v83 = *(_QWORD *)v84;
    v83[1] = *((_QWORD *)v84 + 1);
    v85 = v15[24];
    v40 = (char *)v295 + v85;
    v41 = &v13[v85];
    v86 = sub_1D6E1BA7C();
    v87 = *(_QWORD *)(v86 - 8);
    v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
    swift_bridgeObjectRetain();
    if (!v88(v41, 1, v86))
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v40, v41, v86);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v40, 0, 1, v86);
      goto LABEL_13;
    }
  }
  else
  {
    v22 = (void *)*((_QWORD *)v13 + 1);
    *((_QWORD *)v12 + 1) = v22;
    v23 = (void *)*((_QWORD *)v13 + 2);
    *((_QWORD *)v12 + 2) = v23;
    v24 = (void *)*((_QWORD *)v13 + 3);
    *((_QWORD *)v12 + 3) = v24;
    v25 = (void *)*((_QWORD *)v13 + 4);
    v295[4] = v25;
    v295[5] = *((_QWORD *)v13 + 5);
    v295[6] = *((_QWORD *)v13 + 6);
    v295[7] = *((_QWORD *)v13 + 7);
    v26 = (void *)*((_QWORD *)v13 + 8);
    v295[8] = v26;
    v295[9] = *((_QWORD *)v293 + 9);
    v295[10] = *((_QWORD *)v293 + 10);
    v295[11] = *((_QWORD *)v293 + 11);
    v295[12] = *((_QWORD *)v293 + 12);
    v295[13] = *((_QWORD *)v293 + 13);
    v295[14] = *((_QWORD *)v293 + 14);
    v27 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v28 = v27[16];
    v290 = (char *)v295 + v28;
    v283 = &v293[v28];
    v29 = sub_1D6E1BC20();
    v277 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    v30 = v22;
    v31 = v23;
    v32 = v24;
    v33 = v295;
    v34 = v25;
    v35 = v26;
    v13 = v293;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v277(v290, v283, v29);
    v36 = v27[17];
    v37 = (_QWORD *)((char *)v295 + v36);
    v38 = &v293[v36];
    *v37 = *(_QWORD *)v38;
    v37[1] = *((_QWORD *)v38 + 1);
    v39 = v27[18];
    v40 = (char *)v295 + v39;
    v41 = &v293[v39];
    v42 = sub_1D6E1BA7C();
    v43 = *(_QWORD *)(v42 - 8);
    v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    swift_bridgeObjectRetain();
    if (!v44(v41, 1, v42))
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      goto LABEL_13;
    }
  }
  sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
  memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
LABEL_13:
  swift_storeEnumTagMultiPayload();
  v292 = (int *)type metadata accessor for FeedPaywallConfig();
  v89 = v292[5];
  v90 = (char *)v33 + v89;
  v91 = &v13[v89];
  sub_1D5E8D20C((uint64_t)v33 + v89, type metadata accessor for FeedPaywallModel);
  v92 = swift_getEnumCaseMultiPayload();
  *v90 = *v91;
  if (v92 == 1)
  {
    v93 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v94 = v93[5];
    v95 = &v90[v94];
    v96 = &v91[v94];
    v97 = sub_1D6E15BE4();
    v98 = *(_QWORD *)(v97 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v96, v97);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
    }
    *(_QWORD *)&v90[v93[6]] = *(_QWORD *)&v91[v93[6]];
    *(_QWORD *)&v90[v93[7]] = *(_QWORD *)&v91[v93[7]];
    *(_QWORD *)&v90[v93[8]] = *(_QWORD *)&v91[v93[8]];
    v121 = v93[9];
    v122 = *(void **)&v91[v121];
    *(_QWORD *)&v90[v121] = v122;
    v123 = v93[10];
    v124 = *(void **)&v91[v123];
    *(_QWORD *)&v90[v123] = v124;
    v125 = v93[11];
    v254 = *(void **)&v91[v125];
    *(_QWORD *)&v90[v125] = v254;
    v126 = v93[12];
    v257 = *(void **)&v91[v126];
    *(_QWORD *)&v90[v126] = v257;
    v127 = v93[13];
    v260 = *(void **)&v91[v127];
    *(_QWORD *)&v90[v127] = v260;
    v128 = v93[14];
    v265 = *(void **)&v91[v128];
    *(_QWORD *)&v90[v128] = v265;
    v129 = v93[15];
    v269 = *(void **)&v91[v129];
    *(_QWORD *)&v90[v129] = v269;
    v130 = v93[16];
    v274 = *(void **)&v91[v130];
    *(_QWORD *)&v90[v130] = v274;
    v131 = v93[17];
    v280 = *(void **)&v91[v131];
    *(_QWORD *)&v90[v131] = v280;
    v132 = v93[18];
    v286 = *(void **)&v91[v132];
    *(_QWORD *)&v90[v132] = v286;
    v133 = v93[19];
    v134 = &v90[v133];
    v135 = &v91[v133];
    *(_QWORD *)v134 = *(_QWORD *)v135;
    *((_QWORD *)v134 + 1) = *((_QWORD *)v135 + 1);
    v136 = v93[20];
    v137 = &v90[v136];
    v138 = &v91[v136];
    *(_QWORD *)v137 = *(_QWORD *)v138;
    *((_QWORD *)v137 + 1) = *((_QWORD *)v138 + 1);
    v139 = v93[21];
    v140 = &v90[v139];
    v141 = &v91[v139];
    *(_QWORD *)v140 = *(_QWORD *)v141;
    *((_QWORD *)v140 + 1) = *((_QWORD *)v141 + 1);
    v142 = v93[22];
    v251 = &v91[v142];
    v252 = &v90[v142];
    v143 = sub_1D6E1BC20();
    v144 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16);
    v145 = v122;
    v146 = v124;
    v147 = v254;
    v148 = v257;
    v149 = v260;
    v150 = v265;
    v151 = v269;
    v152 = v274;
    v153 = v280;
    v154 = v286;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v144(v252, v251, v143);
    v155 = v93[23];
    v156 = &v90[v155];
    v157 = &v91[v155];
    *(_QWORD *)v156 = *(_QWORD *)v157;
    *((_QWORD *)v156 + 1) = *((_QWORD *)v157 + 1);
    v158 = v93[24];
    v159 = &v90[v158];
    v160 = &v91[v158];
    v161 = sub_1D6E1BA7C();
    v162 = *(_QWORD *)(v161 - 8);
    v163 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48);
    swift_bridgeObjectRetain();
    if (v163(v160, 1, v161))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v162 + 16))(v159, v160, v161);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v159, 0, 1, v161);
    }
  }
  else
  {
    v100 = (void *)*((_QWORD *)v91 + 1);
    *((_QWORD *)v90 + 1) = v100;
    v101 = (void *)*((_QWORD *)v91 + 2);
    *((_QWORD *)v90 + 2) = v101;
    v279 = (void *)*((_QWORD *)v91 + 3);
    *((_QWORD *)v90 + 3) = v279;
    v285 = (void *)*((_QWORD *)v91 + 4);
    *((_QWORD *)v90 + 4) = v285;
    *((_QWORD *)v90 + 5) = *((_QWORD *)v91 + 5);
    *((_QWORD *)v90 + 6) = *((_QWORD *)v91 + 6);
    *((_QWORD *)v90 + 7) = *((_QWORD *)v91 + 7);
    v102 = (void *)*((_QWORD *)v91 + 8);
    *((_QWORD *)v90 + 8) = v102;
    *((_QWORD *)v90 + 9) = *((_QWORD *)v91 + 9);
    *((_QWORD *)v90 + 10) = *((_QWORD *)v91 + 10);
    *((_QWORD *)v90 + 11) = *((_QWORD *)v91 + 11);
    *((_QWORD *)v90 + 12) = *((_QWORD *)v91 + 12);
    *((_QWORD *)v90 + 13) = *((_QWORD *)v91 + 13);
    *((_QWORD *)v90 + 14) = *((_QWORD *)v91 + 14);
    v103 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v104 = v103[16];
    v268 = &v91[v104];
    v273 = &v90[v104];
    v105 = sub_1D6E1BC20();
    v264 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16);
    v106 = v100;
    v107 = v101;
    v108 = v279;
    v109 = v285;
    v110 = v102;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v264(v273, v268, v105);
    v111 = v103[17];
    v112 = &v90[v111];
    v113 = &v91[v111];
    *(_QWORD *)v112 = *(_QWORD *)v113;
    *((_QWORD *)v112 + 1) = *((_QWORD *)v113 + 1);
    v114 = v103[18];
    v115 = &v90[v114];
    v116 = &v91[v114];
    v117 = sub_1D6E1BA7C();
    v118 = *(_QWORD *)(v117 - 8);
    v119 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
    swift_bridgeObjectRetain();
    if (v119(v116, 1, v117))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v115, v116, v117);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
    }
    v13 = v293;
  }
  swift_storeEnumTagMultiPayload();
  v165 = v292[6];
  v166 = (char *)v295 + v165;
  v167 = &v13[v165];
  sub_1D5E8D20C((uint64_t)v295 + v165, type metadata accessor for FeedPaywallModel);
  v168 = swift_getEnumCaseMultiPayload();
  *v166 = *v167;
  if (v168 == 1)
  {
    v169 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v170 = v169[5];
    v171 = &v166[v170];
    v172 = &v167[v170];
    v173 = sub_1D6E15BE4();
    v174 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48))(v172, 1, v173))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v171, v172, v173);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v171, 0, 1, v173);
    }
    *(_QWORD *)&v166[v169[6]] = *(_QWORD *)&v167[v169[6]];
    *(_QWORD *)&v166[v169[7]] = *(_QWORD *)&v167[v169[7]];
    *(_QWORD *)&v166[v169[8]] = *(_QWORD *)&v167[v169[8]];
    v197 = v169[9];
    v198 = *(void **)&v167[v197];
    *(_QWORD *)&v166[v197] = v198;
    v199 = v169[10];
    v200 = *(void **)&v167[v199];
    *(_QWORD *)&v166[v199] = v200;
    v201 = v169[11];
    v258 = *(void **)&v167[v201];
    *(_QWORD *)&v166[v201] = v258;
    v202 = v169[12];
    v261 = *(void **)&v167[v202];
    *(_QWORD *)&v166[v202] = v261;
    v203 = v169[13];
    v263 = *(void **)&v167[v203];
    *(_QWORD *)&v166[v203] = v263;
    v204 = v169[14];
    v271 = *(void **)&v167[v204];
    *(_QWORD *)&v166[v204] = v271;
    v205 = v169[15];
    v276 = *(void **)&v167[v205];
    *(_QWORD *)&v166[v205] = v276;
    v206 = v169[16];
    v282 = *(void **)&v167[v206];
    *(_QWORD *)&v166[v206] = v282;
    v207 = v169[17];
    v288 = *(void **)&v167[v207];
    *(_QWORD *)&v166[v207] = v288;
    v208 = v169[18];
    v294 = *(void **)&v167[v208];
    *(_QWORD *)&v166[v208] = v294;
    v209 = v169[19];
    v210 = &v166[v209];
    v211 = &v167[v209];
    *(_QWORD *)v210 = *(_QWORD *)v211;
    *((_QWORD *)v210 + 1) = *((_QWORD *)v211 + 1);
    v212 = v169[20];
    v213 = &v166[v212];
    v214 = &v167[v212];
    *(_QWORD *)v213 = *(_QWORD *)v214;
    *((_QWORD *)v213 + 1) = *((_QWORD *)v214 + 1);
    v215 = v169[21];
    v216 = &v166[v215];
    v217 = &v167[v215];
    *(_QWORD *)v216 = *(_QWORD *)v217;
    *((_QWORD *)v216 + 1) = *((_QWORD *)v217 + 1);
    v218 = v169[22];
    v253 = &v167[v218];
    v255 = &v166[v218];
    v219 = sub_1D6E1BC20();
    v220 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 16);
    v221 = v198;
    v222 = v200;
    v223 = v258;
    v224 = v261;
    v225 = v263;
    v226 = v271;
    v227 = v276;
    v228 = v282;
    v229 = v288;
    v230 = v294;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v220(v255, v253, v219);
    v231 = v169[23];
    v232 = &v166[v231];
    v233 = &v167[v231];
    *(_QWORD *)v232 = *(_QWORD *)v233;
    *((_QWORD *)v232 + 1) = *((_QWORD *)v233 + 1);
    v234 = v169[24];
    v235 = &v166[v234];
    v236 = &v167[v234];
    v237 = sub_1D6E1BA7C();
    v238 = *(_QWORD *)(v237 - 8);
    v239 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v238 + 48);
    swift_bridgeObjectRetain();
    if (v239(v236, 1, v237))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v235, v236, *(_QWORD *)(*(_QWORD *)(v240 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v238 + 16))(v235, v236, v237);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v238 + 56))(v235, 0, 1, v237);
    }
    v5 = v289;
  }
  else
  {
    v176 = (void *)*((_QWORD *)v167 + 1);
    *((_QWORD *)v166 + 1) = v176;
    v177 = (void *)*((_QWORD *)v167 + 2);
    *((_QWORD *)v166 + 2) = v177;
    v281 = (void *)*((_QWORD *)v167 + 3);
    *((_QWORD *)v166 + 3) = v281;
    v287 = (void *)*((_QWORD *)v167 + 4);
    *((_QWORD *)v166 + 4) = v287;
    *((_QWORD *)v166 + 5) = *((_QWORD *)v167 + 5);
    *((_QWORD *)v166 + 6) = *((_QWORD *)v167 + 6);
    *((_QWORD *)v166 + 7) = *((_QWORD *)v167 + 7);
    v178 = (void *)*((_QWORD *)v167 + 8);
    *((_QWORD *)v166 + 8) = v178;
    *((_QWORD *)v166 + 9) = *((_QWORD *)v167 + 9);
    *((_QWORD *)v166 + 10) = *((_QWORD *)v167 + 10);
    *((_QWORD *)v166 + 11) = *((_QWORD *)v167 + 11);
    *((_QWORD *)v166 + 12) = *((_QWORD *)v167 + 12);
    *((_QWORD *)v166 + 13) = *((_QWORD *)v167 + 13);
    *((_QWORD *)v166 + 14) = *((_QWORD *)v167 + 14);
    v179 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v180 = v179[16];
    v270 = &v167[v180];
    v275 = &v166[v180];
    v181 = sub_1D6E1BC20();
    v266 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 16);
    v182 = v176;
    v183 = v177;
    v184 = v281;
    v185 = v287;
    v186 = v178;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v266(v275, v270, v181);
    v187 = v179[17];
    v188 = &v166[v187];
    v189 = &v167[v187];
    *(_QWORD *)v188 = *(_QWORD *)v189;
    *((_QWORD *)v188 + 1) = *((_QWORD *)v189 + 1);
    v190 = v179[18];
    v191 = &v166[v190];
    v192 = &v167[v190];
    v193 = sub_1D6E1BA7C();
    v194 = *(_QWORD *)(v193 - 8);
    v195 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48);
    swift_bridgeObjectRetain();
    if (v195(v192, 1, v193))
    {
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v191, v192, v193);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v194 + 56))(v191, 0, 1, v193);
    }
    v5 = v289;
    v13 = v293;
  }
  swift_storeEnumTagMultiPayload();
  v241 = v292[7];
  v242 = (_QWORD *)((char *)v295 + v241);
  v243 = &v13[v241];
  sub_1D5E8D20C((uint64_t)v295 + v241, type metadata accessor for FeedPaywallType);
  v244 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v242, v243, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
  }
  else
  {
    *v242 = *(_QWORD *)v243;
    sub_1D6108060();
    v246 = *(int *)(v245 + 48);
    v247 = (char *)v242 + v246;
    v248 = &v243[v246];
    v249 = sub_1D6E1B884();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 16))(v247, v248, v249);
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

char *sub_1D683EDF8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int EnumCaseMultiPayload;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  int *v108;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1D6E22E98();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v11] = *(_QWORD *)&a2[v11];
  v12 = a3[9];
  v13 = &a1[v12];
  v14 = &a2[v12];
  type metadata accessor for FeedPaywallModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v13 = *v14;
  if (EnumCaseMultiPayload == 1)
  {
    v16 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v17 = v16[5];
    v18 = &v13[v17];
    v19 = &v14[v17];
    v20 = sub_1D6E15BE4();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    *(_QWORD *)&v13[v16[6]] = *(_QWORD *)&v14[v16[6]];
    *(_QWORD *)&v13[v16[7]] = *(_QWORD *)&v14[v16[7]];
    *(_QWORD *)&v13[v16[8]] = *(_QWORD *)&v14[v16[8]];
    *(_QWORD *)&v13[v16[9]] = *(_QWORD *)&v14[v16[9]];
    *(_QWORD *)&v13[v16[10]] = *(_QWORD *)&v14[v16[10]];
    *(_QWORD *)&v13[v16[11]] = *(_QWORD *)&v14[v16[11]];
    *(_QWORD *)&v13[v16[12]] = *(_QWORD *)&v14[v16[12]];
    *(_QWORD *)&v13[v16[13]] = *(_QWORD *)&v14[v16[13]];
    *(_QWORD *)&v13[v16[14]] = *(_QWORD *)&v14[v16[14]];
    *(_QWORD *)&v13[v16[15]] = *(_QWORD *)&v14[v16[15]];
    *(_QWORD *)&v13[v16[16]] = *(_QWORD *)&v14[v16[16]];
    *(_QWORD *)&v13[v16[17]] = *(_QWORD *)&v14[v16[17]];
    *(_QWORD *)&v13[v16[18]] = *(_QWORD *)&v14[v16[18]];
    *(_OWORD *)&v13[v16[19]] = *(_OWORD *)&v14[v16[19]];
    *(_OWORD *)&v13[v16[20]] = *(_OWORD *)&v14[v16[20]];
    *(_OWORD *)&v13[v16[21]] = *(_OWORD *)&v14[v16[21]];
    v35 = v16[22];
    v36 = &v13[v35];
    v37 = &v14[v35];
    v38 = sub_1D6E1BC20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
    *(_OWORD *)&v13[v16[23]] = *(_OWORD *)&v14[v16[23]];
    v39 = v16[24];
    v30 = &v13[v39];
    v31 = &v14[v39];
    v32 = sub_1D6E1BA7C();
    v33 = *(_QWORD *)(v32 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      goto LABEL_8;
LABEL_5:
    sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_9;
  }
  *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
  *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
  *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
  v23 = *((_QWORD *)v14 + 8);
  *((_QWORD *)v13 + 7) = *((_QWORD *)v14 + 7);
  *((_QWORD *)v13 + 8) = v23;
  *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
  v24 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  v25 = v24[16];
  v26 = &v13[v25];
  v27 = &v14[v25];
  v28 = sub_1D6E1BC20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  *(_OWORD *)&v13[v24[17]] = *(_OWORD *)&v14[v24[17]];
  v29 = v24[18];
  v30 = &v13[v29];
  v31 = &v14[v29];
  v32 = sub_1D6E1BA7C();
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    goto LABEL_5;
LABEL_8:
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_9:
  swift_storeEnumTagMultiPayload();
  v108 = (int *)type metadata accessor for FeedPaywallConfig();
  v40 = v108[5];
  v41 = &v13[v40];
  v42 = &v14[v40];
  v43 = swift_getEnumCaseMultiPayload();
  *v41 = *v42;
  if (v43 == 1)
  {
    v44 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v45 = v44[5];
    v46 = &v41[v45];
    v47 = &v42[v45];
    v48 = sub_1D6E15BE4();
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    *(_QWORD *)&v41[v44[6]] = *(_QWORD *)&v42[v44[6]];
    *(_QWORD *)&v41[v44[7]] = *(_QWORD *)&v42[v44[7]];
    *(_QWORD *)&v41[v44[8]] = *(_QWORD *)&v42[v44[8]];
    *(_QWORD *)&v41[v44[9]] = *(_QWORD *)&v42[v44[9]];
    *(_QWORD *)&v41[v44[10]] = *(_QWORD *)&v42[v44[10]];
    *(_QWORD *)&v41[v44[11]] = *(_QWORD *)&v42[v44[11]];
    *(_QWORD *)&v41[v44[12]] = *(_QWORD *)&v42[v44[12]];
    *(_QWORD *)&v41[v44[13]] = *(_QWORD *)&v42[v44[13]];
    *(_QWORD *)&v41[v44[14]] = *(_QWORD *)&v42[v44[14]];
    *(_QWORD *)&v41[v44[15]] = *(_QWORD *)&v42[v44[15]];
    *(_QWORD *)&v41[v44[16]] = *(_QWORD *)&v42[v44[16]];
    *(_QWORD *)&v41[v44[17]] = *(_QWORD *)&v42[v44[17]];
    *(_QWORD *)&v41[v44[18]] = *(_QWORD *)&v42[v44[18]];
    *(_OWORD *)&v41[v44[19]] = *(_OWORD *)&v42[v44[19]];
    *(_OWORD *)&v41[v44[20]] = *(_OWORD *)&v42[v44[20]];
    *(_OWORD *)&v41[v44[21]] = *(_OWORD *)&v42[v44[21]];
    v63 = v44[22];
    v64 = &v41[v63];
    v65 = &v42[v63];
    v66 = sub_1D6E1BC20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
    *(_OWORD *)&v41[v44[23]] = *(_OWORD *)&v42[v44[23]];
    v67 = v44[24];
    v58 = &v41[v67];
    v59 = &v42[v67];
    v68 = sub_1D6E1BA7C();
    v69 = *(_QWORD *)(v68 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v59, 1, v68))
      goto LABEL_13;
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v58, v59, v68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v58, 0, 1, v68);
  }
  else
  {
    *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v42 + 40);
    v51 = *((_QWORD *)v42 + 8);
    *((_QWORD *)v41 + 7) = *((_QWORD *)v42 + 7);
    *((_QWORD *)v41 + 8) = v51;
    *(_OWORD *)(v41 + 72) = *(_OWORD *)(v42 + 72);
    *(_OWORD *)(v41 + 88) = *(_OWORD *)(v42 + 88);
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v42 + 104);
    v52 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v53 = v52[16];
    v54 = &v41[v53];
    v55 = &v42[v53];
    v56 = sub_1D6E1BC20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
    *(_OWORD *)&v41[v52[17]] = *(_OWORD *)&v42[v52[17]];
    v57 = v52[18];
    v58 = &v41[v57];
    v59 = &v42[v57];
    v60 = sub_1D6E1BA7C();
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
LABEL_13:
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      goto LABEL_19;
    }
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
  }
LABEL_19:
  swift_storeEnumTagMultiPayload();
  v70 = v108[6];
  v71 = &v13[v70];
  v72 = &v14[v70];
  v73 = swift_getEnumCaseMultiPayload();
  *v71 = *v72;
  if (v73 == 1)
  {
    v74 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v75 = v74[5];
    v76 = &v71[v75];
    v77 = &v72[v75];
    v78 = sub_1D6E15BE4();
    v79 = *(_QWORD *)(v78 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v76, v77, v78);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
    }
    *(_QWORD *)&v71[v74[6]] = *(_QWORD *)&v72[v74[6]];
    *(_QWORD *)&v71[v74[7]] = *(_QWORD *)&v72[v74[7]];
    *(_QWORD *)&v71[v74[8]] = *(_QWORD *)&v72[v74[8]];
    *(_QWORD *)&v71[v74[9]] = *(_QWORD *)&v72[v74[9]];
    *(_QWORD *)&v71[v74[10]] = *(_QWORD *)&v72[v74[10]];
    *(_QWORD *)&v71[v74[11]] = *(_QWORD *)&v72[v74[11]];
    *(_QWORD *)&v71[v74[12]] = *(_QWORD *)&v72[v74[12]];
    *(_QWORD *)&v71[v74[13]] = *(_QWORD *)&v72[v74[13]];
    *(_QWORD *)&v71[v74[14]] = *(_QWORD *)&v72[v74[14]];
    *(_QWORD *)&v71[v74[15]] = *(_QWORD *)&v72[v74[15]];
    *(_QWORD *)&v71[v74[16]] = *(_QWORD *)&v72[v74[16]];
    *(_QWORD *)&v71[v74[17]] = *(_QWORD *)&v72[v74[17]];
    *(_QWORD *)&v71[v74[18]] = *(_QWORD *)&v72[v74[18]];
    *(_OWORD *)&v71[v74[19]] = *(_OWORD *)&v72[v74[19]];
    *(_OWORD *)&v71[v74[20]] = *(_OWORD *)&v72[v74[20]];
    *(_OWORD *)&v71[v74[21]] = *(_OWORD *)&v72[v74[21]];
    v93 = v74[22];
    v94 = &v71[v93];
    v95 = &v72[v93];
    v96 = sub_1D6E1BC20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
    *(_OWORD *)&v71[v74[23]] = *(_OWORD *)&v72[v74[23]];
    v97 = v74[24];
    v88 = &v71[v97];
    v89 = &v72[v97];
    v90 = sub_1D6E1BA7C();
    v91 = *(_QWORD *)(v90 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
      goto LABEL_26;
LABEL_23:
    sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    goto LABEL_27;
  }
  *(_OWORD *)(v71 + 8) = *(_OWORD *)(v72 + 8);
  *(_OWORD *)(v71 + 24) = *(_OWORD *)(v72 + 24);
  *(_OWORD *)(v71 + 40) = *(_OWORD *)(v72 + 40);
  v81 = *((_QWORD *)v72 + 8);
  *((_QWORD *)v71 + 7) = *((_QWORD *)v72 + 7);
  *((_QWORD *)v71 + 8) = v81;
  *(_OWORD *)(v71 + 72) = *(_OWORD *)(v72 + 72);
  *(_OWORD *)(v71 + 88) = *(_OWORD *)(v72 + 88);
  *(_OWORD *)(v71 + 104) = *(_OWORD *)(v72 + 104);
  v82 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  v83 = v82[16];
  v84 = &v71[v83];
  v85 = &v72[v83];
  v86 = sub_1D6E1BC20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
  *(_OWORD *)&v71[v82[17]] = *(_OWORD *)&v72[v82[17]];
  v87 = v82[18];
  v88 = &v71[v87];
  v89 = &v72[v87];
  v90 = sub_1D6E1BA7C();
  v91 = *(_QWORD *)(v90 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
    goto LABEL_23;
LABEL_26:
  (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
LABEL_27:
  swift_storeEnumTagMultiPayload();
  v98 = v108[7];
  v99 = &v13[v98];
  v100 = &v14[v98];
  v101 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v99 = *(_QWORD *)v100;
    sub_1D6108060();
    v103 = *(int *)(v102 + 48);
    v104 = &v99[v103];
    v105 = &v100[v103];
    v106 = sub_1D6E1B884();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1D683F9D4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int EnumCaseMultiPayload;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  int *v109;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1D6E22E98();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  if (a1 == a2)
  {
    type metadata accessor for FeedPaywallConfig();
    return a1;
  }
  v13 = a3[9];
  v14 = &a1[v13];
  v15 = &a2[v13];
  sub_1D5E8D20C((uint64_t)&a1[v13], type metadata accessor for FeedPaywallModel);
  type metadata accessor for FeedPaywallModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v14 = *v15;
  if (EnumCaseMultiPayload == 1)
  {
    v17 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v18 = v17[5];
    v19 = &v14[v18];
    v20 = &v15[v18];
    v21 = sub_1D6E15BE4();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    *(_QWORD *)&v14[v17[6]] = *(_QWORD *)&v15[v17[6]];
    *(_QWORD *)&v14[v17[7]] = *(_QWORD *)&v15[v17[7]];
    *(_QWORD *)&v14[v17[8]] = *(_QWORD *)&v15[v17[8]];
    *(_QWORD *)&v14[v17[9]] = *(_QWORD *)&v15[v17[9]];
    *(_QWORD *)&v14[v17[10]] = *(_QWORD *)&v15[v17[10]];
    *(_QWORD *)&v14[v17[11]] = *(_QWORD *)&v15[v17[11]];
    *(_QWORD *)&v14[v17[12]] = *(_QWORD *)&v15[v17[12]];
    *(_QWORD *)&v14[v17[13]] = *(_QWORD *)&v15[v17[13]];
    *(_QWORD *)&v14[v17[14]] = *(_QWORD *)&v15[v17[14]];
    *(_QWORD *)&v14[v17[15]] = *(_QWORD *)&v15[v17[15]];
    *(_QWORD *)&v14[v17[16]] = *(_QWORD *)&v15[v17[16]];
    *(_QWORD *)&v14[v17[17]] = *(_QWORD *)&v15[v17[17]];
    *(_QWORD *)&v14[v17[18]] = *(_QWORD *)&v15[v17[18]];
    *(_OWORD *)&v14[v17[19]] = *(_OWORD *)&v15[v17[19]];
    *(_OWORD *)&v14[v17[20]] = *(_OWORD *)&v15[v17[20]];
    *(_OWORD *)&v14[v17[21]] = *(_OWORD *)&v15[v17[21]];
    v36 = v17[22];
    v37 = &v14[v36];
    v38 = &v15[v36];
    v39 = sub_1D6E1BC20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    *(_OWORD *)&v14[v17[23]] = *(_OWORD *)&v15[v17[23]];
    v40 = v17[24];
    v31 = &v14[v40];
    v32 = &v15[v40];
    v33 = sub_1D6E1BA7C();
    v34 = *(_QWORD *)(v33 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      goto LABEL_10;
LABEL_7:
    sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_11;
  }
  *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
  v24 = *((_QWORD *)v15 + 8);
  *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
  *((_QWORD *)v14 + 8) = v24;
  *(_OWORD *)(v14 + 72) = *(_OWORD *)(v15 + 72);
  *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
  *(_OWORD *)(v14 + 104) = *(_OWORD *)(v15 + 104);
  v25 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  v26 = v25[16];
  v27 = &v14[v26];
  v28 = &v15[v26];
  v29 = sub_1D6E1BC20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  *(_OWORD *)&v14[v25[17]] = *(_OWORD *)&v15[v25[17]];
  v30 = v25[18];
  v31 = &v14[v30];
  v32 = &v15[v30];
  v33 = sub_1D6E1BA7C();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    goto LABEL_7;
LABEL_10:
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_11:
  swift_storeEnumTagMultiPayload();
  v109 = (int *)type metadata accessor for FeedPaywallConfig();
  v41 = v109[5];
  v42 = &v14[v41];
  v43 = &v15[v41];
  sub_1D5E8D20C((uint64_t)&v14[v41], type metadata accessor for FeedPaywallModel);
  v44 = swift_getEnumCaseMultiPayload();
  *v42 = *v43;
  if (v44 == 1)
  {
    v45 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v46 = v45[5];
    v47 = &v42[v46];
    v48 = &v43[v46];
    v49 = sub_1D6E15BE4();
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    *(_QWORD *)&v42[v45[6]] = *(_QWORD *)&v43[v45[6]];
    *(_QWORD *)&v42[v45[7]] = *(_QWORD *)&v43[v45[7]];
    *(_QWORD *)&v42[v45[8]] = *(_QWORD *)&v43[v45[8]];
    *(_QWORD *)&v42[v45[9]] = *(_QWORD *)&v43[v45[9]];
    *(_QWORD *)&v42[v45[10]] = *(_QWORD *)&v43[v45[10]];
    *(_QWORD *)&v42[v45[11]] = *(_QWORD *)&v43[v45[11]];
    *(_QWORD *)&v42[v45[12]] = *(_QWORD *)&v43[v45[12]];
    *(_QWORD *)&v42[v45[13]] = *(_QWORD *)&v43[v45[13]];
    *(_QWORD *)&v42[v45[14]] = *(_QWORD *)&v43[v45[14]];
    *(_QWORD *)&v42[v45[15]] = *(_QWORD *)&v43[v45[15]];
    *(_QWORD *)&v42[v45[16]] = *(_QWORD *)&v43[v45[16]];
    *(_QWORD *)&v42[v45[17]] = *(_QWORD *)&v43[v45[17]];
    *(_QWORD *)&v42[v45[18]] = *(_QWORD *)&v43[v45[18]];
    *(_OWORD *)&v42[v45[19]] = *(_OWORD *)&v43[v45[19]];
    *(_OWORD *)&v42[v45[20]] = *(_OWORD *)&v43[v45[20]];
    *(_OWORD *)&v42[v45[21]] = *(_OWORD *)&v43[v45[21]];
    v64 = v45[22];
    v65 = &v42[v64];
    v66 = &v43[v64];
    v67 = sub_1D6E1BC20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
    *(_OWORD *)&v42[v45[23]] = *(_OWORD *)&v43[v45[23]];
    v68 = v45[24];
    v59 = &v42[v68];
    v60 = &v43[v68];
    v69 = sub_1D6E1BA7C();
    v70 = *(_QWORD *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v60, 1, v69))
      goto LABEL_15;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v59, v60, v69);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v59, 0, 1, v69);
  }
  else
  {
    *(_OWORD *)(v42 + 8) = *(_OWORD *)(v43 + 8);
    *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
    *(_OWORD *)(v42 + 40) = *(_OWORD *)(v43 + 40);
    v52 = *((_QWORD *)v43 + 8);
    *((_QWORD *)v42 + 7) = *((_QWORD *)v43 + 7);
    *((_QWORD *)v42 + 8) = v52;
    *(_OWORD *)(v42 + 72) = *(_OWORD *)(v43 + 72);
    *(_OWORD *)(v42 + 88) = *(_OWORD *)(v43 + 88);
    *(_OWORD *)(v42 + 104) = *(_OWORD *)(v43 + 104);
    v53 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v54 = v53[16];
    v55 = &v42[v54];
    v56 = &v43[v54];
    v57 = sub_1D6E1BC20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
    *(_OWORD *)&v42[v53[17]] = *(_OWORD *)&v43[v53[17]];
    v58 = v53[18];
    v59 = &v42[v58];
    v60 = &v43[v58];
    v61 = sub_1D6E1BA7C();
    v62 = *(_QWORD *)(v61 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
    {
LABEL_15:
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      goto LABEL_21;
    }
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  }
LABEL_21:
  swift_storeEnumTagMultiPayload();
  v71 = v109[6];
  v72 = &v14[v71];
  v73 = &v15[v71];
  sub_1D5E8D20C((uint64_t)&v14[v71], type metadata accessor for FeedPaywallModel);
  v74 = swift_getEnumCaseMultiPayload();
  *v72 = *v73;
  if (v74 == 1)
  {
    v75 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    v76 = v75[5];
    v77 = &v72[v76];
    v78 = &v73[v76];
    v79 = sub_1D6E15BE4();
    v80 = *(_QWORD *)(v79 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
    {
      sub_1D5E8481C(0, (unint64_t *)&qword_1ED5E0210, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
    }
    *(_QWORD *)&v72[v75[6]] = *(_QWORD *)&v73[v75[6]];
    *(_QWORD *)&v72[v75[7]] = *(_QWORD *)&v73[v75[7]];
    *(_QWORD *)&v72[v75[8]] = *(_QWORD *)&v73[v75[8]];
    *(_QWORD *)&v72[v75[9]] = *(_QWORD *)&v73[v75[9]];
    *(_QWORD *)&v72[v75[10]] = *(_QWORD *)&v73[v75[10]];
    *(_QWORD *)&v72[v75[11]] = *(_QWORD *)&v73[v75[11]];
    *(_QWORD *)&v72[v75[12]] = *(_QWORD *)&v73[v75[12]];
    *(_QWORD *)&v72[v75[13]] = *(_QWORD *)&v73[v75[13]];
    *(_QWORD *)&v72[v75[14]] = *(_QWORD *)&v73[v75[14]];
    *(_QWORD *)&v72[v75[15]] = *(_QWORD *)&v73[v75[15]];
    *(_QWORD *)&v72[v75[16]] = *(_QWORD *)&v73[v75[16]];
    *(_QWORD *)&v72[v75[17]] = *(_QWORD *)&v73[v75[17]];
    *(_QWORD *)&v72[v75[18]] = *(_QWORD *)&v73[v75[18]];
    *(_OWORD *)&v72[v75[19]] = *(_OWORD *)&v73[v75[19]];
    *(_OWORD *)&v72[v75[20]] = *(_OWORD *)&v73[v75[20]];
    *(_OWORD *)&v72[v75[21]] = *(_OWORD *)&v73[v75[21]];
    v93 = v75[22];
    v94 = &v72[v93];
    v95 = &v73[v93];
    v96 = sub_1D6E1BC20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
    *(_OWORD *)&v72[v75[23]] = *(_OWORD *)&v73[v75[23]];
    v97 = v75[24];
    v89 = &v72[v97];
    v90 = &v73[v97];
    v91 = sub_1D6E1BA7C();
    v92 = *(_QWORD *)(v91 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
      goto LABEL_28;
  }
  else
  {
    *(_OWORD *)(v72 + 8) = *(_OWORD *)(v73 + 8);
    *(_OWORD *)(v72 + 24) = *(_OWORD *)(v73 + 24);
    *(_OWORD *)(v72 + 40) = *(_OWORD *)(v73 + 40);
    v82 = *((_QWORD *)v73 + 8);
    *((_QWORD *)v72 + 7) = *((_QWORD *)v73 + 7);
    *((_QWORD *)v72 + 8) = v82;
    *(_OWORD *)(v72 + 72) = *(_OWORD *)(v73 + 72);
    *(_OWORD *)(v72 + 88) = *(_OWORD *)(v73 + 88);
    *(_OWORD *)(v72 + 104) = *(_OWORD *)(v73 + 104);
    v83 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    v84 = v83[16];
    v85 = &v72[v84];
    v86 = &v73[v84];
    v87 = sub_1D6E1BC20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
    *(_OWORD *)&v72[v83[17]] = *(_OWORD *)&v73[v83[17]];
    v88 = v83[18];
    v89 = &v72[v88];
    v90 = &v73[v88];
    v91 = sub_1D6E1BA7C();
    v92 = *(_QWORD *)(v91 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
    {
LABEL_28:
      sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0F10, (void (*)(uint64_t))MEMORY[0x1E0D61DC8]);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
      goto LABEL_30;
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v89, v90, v91);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
LABEL_30:
  swift_storeEnumTagMultiPayload();
  v99 = v109[7];
  v100 = &v14[v99];
  v101 = &v15[v99];
  sub_1D5E8D20C((uint64_t)v100, type metadata accessor for FeedPaywallType);
  v102 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v100 = *(_QWORD *)v101;
    sub_1D6108060();
    v104 = *(int *)(v103 + 48);
    v105 = &v100[v104];
    v106 = &v101[v104];
    v107 = sub_1D6E1B884();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D6840608()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6840614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D6E22E98();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for FeedPaywallConfig();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1D68406B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68406C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1D6E22E98();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for FeedPaywallConfig();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1D684075C()
{
  sub_1D6840944(&qword_1ED614688, (uint64_t)&unk_1D6E95710);
  return sub_1D6E23F24();
}

uint64_t sub_1D6840794(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = type metadata accessor for FeedPaywallType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D6E1B884();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + *(int *)(a1 + 36);
  v11 = type metadata accessor for FeedPaywallConfig();
  sub_1D62E6418(v10 + *(int *)(v11 + 28), (uint64_t)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D61AC0], v6);
  }
  else
  {
    sub_1D6108060();
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, &v5[*(int *)(v12 + 48)], v6);
  }
  v13 = sub_1D6E1B86C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

uint64_t sub_1D68408D8()
{
  return sub_1D6840944(&qword_1ED614690, (uint64_t)&unk_1D6E95678);
}

uint64_t sub_1D68408FC()
{
  return sub_1D6840944(&qword_1ED6146A0, (uint64_t)&unk_1D6E956E8);
}

uint64_t sub_1D6840920()
{
  return sub_1D6840944(&qword_1ED614698, (uint64_t)&unk_1D6E956C0);
}

uint64_t sub_1D6840944(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PaywallMagazineFeedGroup();
    result = MEMORY[0x1D82917D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SportsNavigationStyler()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for LegacyAudioFeedConfiguration.NotificationConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LegacyAudioFeedConfiguration.NotificationConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v5;
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for LegacyAudioFeedConfiguration.NotificationConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyAudioFeedConfiguration.NotificationConfig(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyAudioFeedConfiguration.NotificationConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.NotificationConfig()
{
  return &type metadata for LegacyAudioFeedConfiguration.NotificationConfig;
}

uint64_t *sub_1D6840C30(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D6E15ECC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    v16 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1D6840D64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1D6E15ECC();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_1D6840DE8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D6E15ECC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  v14 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1D6840EF0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = sub_1D6E15ECC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1D6841070(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1D6E15ECC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  return a1;
}

char *sub_1D684115C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1D6E15ECC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  v17 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D68412B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

void sub_1D684134C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
}

uint64_t sub_1D68413DC()
{
  return sub_1D5E6D8C0(&qword_1ED5FE958, (uint64_t (*)(uint64_t))type metadata accessor for LegacyAudioFeedGroupConfig, (uint64_t)&unk_1D6EC55E8);
}

unint64_t sub_1D684140C()
{
  unint64_t result;

  result = qword_1EFFF3690;
  if (!qword_1EFFF3690)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E5F6B0, &type metadata for LegacyAudioFeedServiceContext);
    atomic_store(result, (unint64_t *)&qword_1EFFF3690);
  }
  return result;
}

uint64_t sub_1D6841450()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_1D6E28418();
    swift_bridgeObjectRetain();
    sub_1D6E26A44();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 24))
      goto LABEL_3;
LABEL_6:
    sub_1D6E28418();
    if (*(_QWORD *)(v0 + 40))
      goto LABEL_4;
    goto LABEL_7;
  }
  sub_1D6E28418();
  if (!*(_QWORD *)(v0 + 24))
    goto LABEL_6;
LABEL_3:
  sub_1D6E28418();
  swift_bridgeObjectRetain();
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
  {
LABEL_4:
    sub_1D6E28418();
    swift_bridgeObjectRetain();
    sub_1D6E26A44();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  sub_1D6E28418();
LABEL_8:
  if (*(_BYTE *)(v0 + 56) == 1)
  {
    sub_1D6E28418();
  }
  else
  {
    sub_1D6E28418();
    sub_1D6E28424();
  }
  if (*(_BYTE *)(v0 + 72) == 1)
    return sub_1D6E28418();
  sub_1D6E28418();
  return sub_1D6E28424();
}

uint64_t sub_1D68415A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;

  sub_1D5EB2A68(0, &qword_1EFFF36A0, (uint64_t (*)(void))sub_1D6843CEC, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6843CEC();
  sub_1D6E28478();
  v14 = 0;
  sub_1D6E281C0();
  if (!v1)
  {
    v13 = 1;
    sub_1D6E281C0();
    v12 = 2;
    sub_1D6E281C0();
    v11 = 3;
    sub_1D6E281D8();
    v10 = 4;
    sub_1D6E281D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D6841750(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D658C294(*a1, *a2);
}

uint64_t sub_1D684175C()
{
  sub_1D6E28400();
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

uint64_t sub_1D6841808()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D6841890()
{
  sub_1D6E28400();
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

uint64_t sub_1D6841938@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D6843778();
  *a1 = result;
  return result;
}

void sub_1D6841964(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB00000000657461;
  v4 = 0xEC0000006E6F6974;
  v5 = 0x63416F546C6C6163;
  if (v2 != 1)
  {
    v5 = 0x7370756F7267;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x446873696C627570;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D68419D0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x63416F546C6C6163;
  if (*v0 != 1)
    v1 = 0x7370756F7267;
  if (*v0)
    return v1;
  else
    return 0x446873696C627570;
}

uint64_t sub_1D6841A38@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D6843778();
  *a1 = result;
  return result;
}

uint64_t sub_1D6841A5C()
{
  sub_1D6843D30();
  return sub_1D6E28538();
}

uint64_t sub_1D6841A84()
{
  sub_1D6843D30();
  return sub_1D6E28544();
}

uint64_t sub_1D6841AAC()
{
  return 0x656C746974;
}

uint64_t sub_1D6841AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D6E282C8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D6841B4C()
{
  sub_1D6844594();
  return sub_1D6E28538();
}

uint64_t sub_1D6841B74()
{
  sub_1D6844594();
  return sub_1D6E28544();
}

uint64_t sub_1D6841B9C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;

  v15 = a2;
  sub_1D5EB2A68(0, &qword_1ED62EE68, (uint64_t (*)(void))sub_1D6844594, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.CallToAction.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6844594();
  sub_1D6E2846C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  v10 = sub_1D6E2810C();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1D6841CE0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5EB2A68(0, &qword_1EFFF36D8, (uint64_t (*)(void))sub_1D6844594, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.CallToAction.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6844594();
  sub_1D6E28478();
  sub_1D6E281C0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D6841DE4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D6841E10 + 4 * byte_1D6E957E0[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1D6841E10()
{
  return 0x656C746974627573;
}

uint64_t sub_1D6841E28()
{
  return 2036625250;
}

unint64_t sub_1D6841E38()
{
  return 0xD000000000000022;
}

uint64_t sub_1D6841E54()
{
  return 0x65536F54656D6974;
}

uint64_t sub_1D6841E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D68437C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D6841E94()
{
  sub_1D6843CEC();
  return sub_1D6E28538();
}

uint64_t sub_1D6841EBC()
{
  sub_1D6843CEC();
  return sub_1D6E28544();
}

__n128 sub_1D6841EE4@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[3];
  _OWORD v7[2];

  sub_1D68439C8(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v7[0];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 57) = *(_OWORD *)((char *)v7 + 9);
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1D6841F2C(_QWORD *a1)
{
  return sub_1D68415A0(a1);
}

BOOL sub_1D6841F40(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[2];
  _OWORD v9[3];
  _OWORD v10[2];

  v2 = a1[3];
  v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 57);
  v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  v4 = a2[3];
  v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 57);
  v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return sub_1D6843638((uint64_t)v7, (uint64_t)v9);
}

uint64_t sub_1D6841F98()
{
  sub_1D6E28400();
  sub_1D6841450();
  return sub_1D6E28430();
}

uint64_t sub_1D6841FD8()
{
  sub_1D6E28400();
  sub_1D6841450();
  return sub_1D6E28430();
}

uint64_t sub_1D6842010@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v21 = a2;
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - v5;
  sub_1D5EB2A68(0, &qword_1ED604060, (uint64_t (*)(void))sub_1D6843D30, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v22 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6843D30();
  sub_1D6E2846C();
  if (!v2)
  {
    v11 = v8;
    v12 = v21;
    sub_1D6E15ECC();
    LOBYTE(v23) = 0;
    sub_1D5E6D8C0((unint64_t *)&unk_1ED5E0260, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v13 = v22;
    sub_1D6E28148();
    v25 = 1;
    sub_1D6318558();
    sub_1D6E28148();
    v14 = v24;
    v19 = v23;
    v20 = v6;
    if (v24 == 1)
      v15 = 0;
    else
      v15 = v24;
    type metadata accessor for LegacyAudioFeedGroupConfig();
    LOBYTE(v23) = 2;
    sub_1D5E6D8C0(&qword_1ED5FE978, (uint64_t (*)(uint64_t))type metadata accessor for LegacyAudioFeedGroupConfig, (uint64_t)&unk_1D6EC56A0);
    v16 = sub_1D6E280E8();
    if (v14 == 1)
      v18 = 0;
    else
      v18 = v19;
    sub_1D684229C((uint64_t)v20, v18, v15, v16, 0, v12);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v13);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D684229C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v11 = a5 & 1;
  v12 = type metadata accessor for LegacyAudioFeedGroupConfig();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5F3DF44(a1, a6);
  v16 = (int *)type metadata accessor for LegacyAudioFeedConfiguration();
  v17 = (_QWORD *)(a6 + v16[5]);
  *v17 = a2;
  v17[1] = a3;
  *(_QWORD *)(a6 + v16[6]) = a4;
  *(_BYTE *)(a6 + v16[7]) = v11;
  v25 = MEMORY[0x1E0DEE9E0];
  v18 = *(_QWORD *)(a4 + 16);
  if (v18)
  {
    v24 = a1;
    v19 = a4 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v20 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain_n();
    do
    {
      sub_1D5E82ECC(v19, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LegacyAudioFeedGroupConfig);
      sub_1D684262C((uint64_t)&v25, (uint64_t)v15);
      sub_1D5E8D20C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LegacyAudioFeedGroupConfig);
      v19 += v20;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    v21 = v25;
    a1 = v24;
  }
  else
  {
    swift_bridgeObjectRetain();
    v21 = MEMORY[0x1E0DEE9E0];
  }
  sub_1D5FCC7A8(a1);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + v16[8]) = v21;
  return result;
}

uint64_t sub_1D684243C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v12;
  char v13;

  v3 = v1;
  sub_1D5EB2A68(0, &qword_1EFFF36A8, (uint64_t (*)(void))sub_1D6843D30, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6843D30();
  sub_1D6E28478();
  LOBYTE(v12) = 0;
  sub_1D6E15ECC();
  sub_1D5E6D8C0(&qword_1ED5E0248, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1D6E281FC();
  if (!v2)
  {
    v10 = type metadata accessor for LegacyAudioFeedConfiguration();
    v12 = *(_OWORD *)(v3 + *(int *)(v10 + 20));
    v13 = 1;
    sub_1D6318710();
    sub_1D6E28238();
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    v13 = 2;
    sub_1D5E847C4(0, &qword_1EFFF36B0, (uint64_t (*)(uint64_t))type metadata accessor for LegacyAudioFeedGroupConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1D6843DD8();
    sub_1D6E28238();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1D684262C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  char *v18;
  _QWORD v19[16];

  v19[15] = a1;
  v3 = type metadata accessor for LegacyAudioEditorialHeroFeedGroupConfig();
  MEMORY[0x1E0C80A78](v3);
  v19[6] = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LegacyAudioDailyBriefingInTodayFeedGroupConfig();
  MEMORY[0x1E0C80A78](v5);
  v19[12] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LegacyAudioConfigArticle(0);
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v9 = MEMORY[0x1E0C80A78](v7);
  v19[14] = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v19[13] = (char *)v19 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig();
  MEMORY[0x1E0C80A78](v13);
  v19[11] = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LegacyAudioFeedGroupConfig();
  MEMORY[0x1E0C80A78](v15);
  sub_1D5E82ECC(a2, (uint64_t)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
  v18 = (char *)&loc_1D68427F8 + *((int *)qword_1D68434D0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1D6842808()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D68434EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6842010(a1, a2);
}

uint64_t sub_1D6843500(_QWORD *a1)
{
  return sub_1D684243C(a1);
}

uint64_t sub_1D6843514(uint64_t a1, int a2)
{
  return sub_1D6843E68(a2);
}

uint64_t sub_1D684351C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  sub_1D5F3DF44(v3, (uint64_t)&v14 - v8);
  v10 = (uint64_t *)(v3 + *(int *)(a2 + 20));
  v11 = *v10;
  v12 = v10[1];
  LOBYTE(a2) = *(_BYTE *)(v3 + *(int *)(a2 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1D684229C((uint64_t)v9, v11, v12, a1, a2, a3);
}

unint64_t sub_1D68435F4()
{
  unint64_t result;

  result = qword_1EFFF3698;
  if (!qword_1EFFF3698)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95970, &type metadata for LegacyAudioFeedConfiguration.NotificationConfig);
    atomic_store(result, (unint64_t *)&qword_1EFFF3698);
  }
  return result;
}

BOOL sub_1D6843638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && v4 == v5;
  if (v6 || (v7 = sub_1D6E282C8(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v9 = *(_QWORD *)(a1 + 24);
    v10 = *(_QWORD *)(a2 + 24);
    if (v9)
    {
      if (!v10)
        return 0;
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || v9 != v10)
      {
        v11 = sub_1D6E282C8();
        result = 0;
        if ((v11 & 1) == 0)
          return result;
      }
    }
    else if (v10)
    {
      return 0;
    }
    v12 = *(_QWORD *)(a1 + 40);
    v13 = *(_QWORD *)(a2 + 40);
    if (v12)
    {
      if (!v13)
        return 0;
      if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || v12 != v13)
      {
        v14 = sub_1D6E282C8();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v13)
    {
      return 0;
    }
    v15 = *(_BYTE *)(a2 + 56);
    if ((*(_BYTE *)(a1 + 56) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 56))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 48) != *(double *)(a2 + 48))
        v15 = 1;
      if ((v15 & 1) != 0)
        return 0;
    }
    v16 = *(_BYTE *)(a2 + 72);
    if ((*(_BYTE *)(a1 + 72) & 1) == 0)
    {
      if (*(double *)(a1 + 64) != *(double *)(a2 + 64))
        v16 = 1;
      return (v16 & 1) == 0;
    }
    return (*(_BYTE *)(a2 + 72) & 1) != 0;
  }
  return result;
}

uint64_t sub_1D6843778()
{
  unint64_t v0;

  v0 = sub_1D6E280D0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1D68437C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001D6F2A360 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65536F54656D6974 && a2 == 0xEA0000000000646ELL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D6E282C8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1D68439C8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v36 = a2;
  sub_1D5EB2A68(0, &qword_1ED62EE70, (uint64_t (*)(void))sub_1D6843CEC, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6843CEC();
  sub_1D6E2846C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v35 = a1;
  v9 = v6;
  v41 = 0;
  v10 = v5;
  v11 = sub_1D6E2810C();
  v13 = v12;
  v40 = 1;
  swift_bridgeObjectRetain();
  v14 = sub_1D6E2810C();
  v34 = v15;
  v32 = v14;
  v33 = v11;
  v39 = 2;
  swift_bridgeObjectRetain();
  v16 = sub_1D6E2810C();
  v18 = v17;
  v31 = v16;
  v38 = 3;
  swift_bridgeObjectRetain();
  v19 = sub_1D6E28124();
  v30 = v20;
  v37 = 4;
  v21 = sub_1D6E28124();
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  LOBYTE(v9) = v23;
  v22(v8, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  swift_bridgeObjectRelease();
  v24 = v19;
  v25 = v18;
  v26 = v34;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v28 = v36;
  *v36 = v33;
  v28[1] = v13;
  v28[2] = v32;
  v28[3] = v26;
  v28[4] = v31;
  v28[5] = v25;
  v28[6] = v24;
  *((_BYTE *)v28 + 56) = v30 & 1;
  v28[8] = v21;
  *((_BYTE *)v28 + 72) = v9 & 1;
  return result;
}

unint64_t sub_1D6843CEC()
{
  unint64_t result;

  result = qword_1ED62E670;
  if (!qword_1ED62E670)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95C80, &type metadata for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED62E670);
  }
  return result;
}

unint64_t sub_1D6843D30()
{
  unint64_t result;

  result = qword_1ED5FF670;
  if (!qword_1ED5FF670)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95C30, &type metadata for LegacyAudioFeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED5FF670);
  }
  return result;
}

uint64_t sub_1D6843D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for LegacyAudioConfigArticle(0);
  return sub_1D6008CA0(a1, a2);
}

unint64_t sub_1D6843DD8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EFFF36B8;
  if (!qword_1EFFF36B8)
  {
    sub_1D5E847C4(255, &qword_1EFFF36B0, (uint64_t (*)(uint64_t))type metadata accessor for LegacyAudioFeedGroupConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1D5E6D8C0(&qword_1ED5FE968, (uint64_t (*)(uint64_t))type metadata accessor for LegacyAudioFeedGroupConfig, (uint64_t)&unk_1D6EC5678);
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EFFF36B8);
  }
  return result;
}

uint64_t sub_1D6843E68(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v16 = a1;
  v2 = type metadata accessor for LegacyAudioFeedGroupConfig();
  v18 = *(_QWORD *)(v2 - 8);
  v19 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v20 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for LegacyAudioFeedConfiguration() + 24));
  v11 = MEMORY[0x1E0DEE9D8];
  v21 = MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  v17 = v12;
  if (v12)
  {
    if (*(_QWORD *)(v10 + 16))
    {
      sub_1D5E82ECC(v10 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LegacyAudioFeedGroupConfig);
      sub_1D5E82ECC((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LegacyAudioFeedGroupConfig);
      v13 = (char *)&loc_1D6843FC8 + dword_1D684410C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1D684410CLL);
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t storeEnumTagSinglePayload for LegacyAudioFeedConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D6844174 + 4 * byte_1D6E957EA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D68441A8 + 4 * byte_1D6E957E5[v4]))();
}

uint64_t sub_1D68441A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68441B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D68441B8);
  return result;
}

uint64_t sub_1D68441C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D68441CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D68441D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68441D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.CodingKeys()
{
  return &type metadata for LegacyAudioFeedConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D6844240 + 4 * byte_1D6E957F4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D6844274 + 4 * byte_1D6E957EF[v4]))();
}

uint64_t sub_1D6844274(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D684427C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D6844284);
  return result;
}

uint64_t sub_1D6844290(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D6844298);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D684429C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68442A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys()
{
  return &type metadata for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LegacyAudioFeedConfiguration.DailyBriefingKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D684430C + 4 * byte_1D6E957FE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D6844340 + 4 * byte_1D6E957F9[v4]))();
}

uint64_t sub_1D6844340(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6844348(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D6844350);
  return result;
}

uint64_t sub_1D684435C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D6844364);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D6844368(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6844370(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.DailyBriefingKind()
{
  return &type metadata for LegacyAudioFeedConfiguration.DailyBriefingKind;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.CallToAction()
{
  return &type metadata for LegacyAudioFeedConfiguration.CallToAction;
}

unint64_t sub_1D68443A0()
{
  unint64_t result;

  result = qword_1EFFF36C0;
  if (!qword_1EFFF36C0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95A60, &type metadata for LegacyAudioFeedConfiguration.DailyBriefingKind);
    atomic_store(result, (unint64_t *)&qword_1EFFF36C0);
  }
  return result;
}

unint64_t sub_1D68443E8()
{
  unint64_t result;

  result = qword_1EFFF36C8;
  if (!qword_1EFFF36C8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95B18, &type metadata for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF36C8);
  }
  return result;
}

unint64_t sub_1D6844430()
{
  unint64_t result;

  result = qword_1EFFF36D0;
  if (!qword_1EFFF36D0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95C08, &type metadata for LegacyAudioFeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF36D0);
  }
  return result;
}

unint64_t sub_1D6844478()
{
  unint64_t result;

  result = qword_1ED5FF680;
  if (!qword_1ED5FF680)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95B40, &type metadata for LegacyAudioFeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED5FF680);
  }
  return result;
}

unint64_t sub_1D68444C0()
{
  unint64_t result;

  result = qword_1ED5FF678;
  if (!qword_1ED5FF678)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95B68, &type metadata for LegacyAudioFeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED5FF678);
  }
  return result;
}

unint64_t sub_1D6844508()
{
  unint64_t result;

  result = qword_1ED62E680;
  if (!qword_1ED62E680)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95A88, &type metadata for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED62E680);
  }
  return result;
}

unint64_t sub_1D6844550()
{
  unint64_t result;

  result = qword_1ED62E678;
  if (!qword_1ED62E678)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95AB0, &type metadata for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED62E678);
  }
  return result;
}

unint64_t sub_1D6844594()
{
  unint64_t result;

  result = qword_1ED62E658;
  if (!qword_1ED62E658)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95DD8, &type metadata for LegacyAudioFeedConfiguration.CallToAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED62E658);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LegacyAudioFeedConfiguration.CallToAction.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D6844618 + 4 * byte_1D6E95803[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D6844638 + 4 * byte_1D6E95808[v4]))();
}

_BYTE *sub_1D6844618(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D6844638(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D6844640(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D6844648(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D6844650(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D6844658(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.CallToAction.CodingKeys()
{
  return &type metadata for LegacyAudioFeedConfiguration.CallToAction.CodingKeys;
}

unint64_t sub_1D6844678()
{
  unint64_t result;

  result = qword_1EFFF36E0;
  if (!qword_1EFFF36E0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95DB0, &type metadata for LegacyAudioFeedConfiguration.CallToAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF36E0);
  }
  return result;
}

unint64_t sub_1D68446C0()
{
  unint64_t result;

  result = qword_1ED62E668;
  if (!qword_1ED62E668)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95D20, &type metadata for LegacyAudioFeedConfiguration.CallToAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED62E668);
  }
  return result;
}

unint64_t sub_1D6844708()
{
  unint64_t result;

  result = qword_1ED62E660;
  if (!qword_1ED62E660)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E95D48, &type metadata for LegacyAudioFeedConfiguration.CallToAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED62E660);
  }
  return result;
}

uint64_t sub_1D684474C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(void);
  _QWORD *v10;
  uint64_t v11;
  _QWORD v13[8];

  sub_1D5E847C4(0, (unint64_t *)&unk_1ED624860, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = sub_1D6E1A594();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1D6E334D0;
  v8 = (_QWORD *)(v7 + v6);
  *v8 = 0x6C656E6E616863;
  v8[1] = 0xE700000000000000;
  v9 = *(void (**)(void))(v4 + 104);
  ((void (*)(unint64_t, _QWORD, uint64_t))v9)(v7 + v6, *MEMORY[0x1E0DB3F90], v3);
  v10 = (_QWORD *)(v7 + v6 + v5);
  *v10 = 0x657573734977656ELL;
  v10[1] = 0xE900000000000073;
  v9();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v7;
  v13[5] = sub_1D66138C4(MEMORY[0x1E0DEE9D8]);
  v11 = sub_1D638F8D0((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1D60AAB04, (uint64_t)v13, (uint64_t)&unk_1E9AB0450);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  *(_QWORD *)(v1 + 16) = v11;
  *(_QWORD *)(v1 + 24) = a1;
  return v1;
}

uint64_t sub_1D68448BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5DCD70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D545D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v41 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v42 = (char *)&v41 - v6;
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v41 - v7;
  v8 = sub_1D6E1A2D0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v41 - v13;
  v15 = sub_1D6E1A300();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v41 - v20;
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED60C160, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3F28]);
  v43 = a1;
  sub_1D6E1A4EC();
  sub_1D6E1A2E8();
  v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  v22(v21, v15);
  v23 = sub_1D6E1A2DC();
  v25 = v24;
  v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26(v14, v8);
  if (v25)
  {
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v23;
    *(_QWORD *)(v27 + 24) = v25;
    *(_BYTE *)(v27 + 32) = 0;
    v28 = sub_1D6E1865C();
    v29 = (uint64_t)v44;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v44, 1, 1, v28);
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    v47 = 0;
    v45 = 0u;
    v46 = 0u;
    swift_retain();
    sub_1D6C618C4(v27 | 0x8000000000000004, 0, v29, (uint64_t)&v48, 0, 0, 0, 0, (uint64_t)&v45);
    swift_release();
    sub_1D5E828A8((uint64_t)&v45, (uint64_t)&qword_1ED5E0920, (uint64_t)&unk_1ED5E0910, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1D5EE93F4);
    sub_1D5E828A8((uint64_t)&v48, (uint64_t)&unk_1ED5DD090, (uint64_t)&qword_1ED5E1AC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1D5EE93F4);
    sub_1D5E828A8(v29, (uint64_t)&qword_1ED5DCD70, (uint64_t)MEMORY[0x1E0D545D0], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1D5E847C4);
LABEL_7:
    swift_release();
    goto LABEL_11;
  }
  v30 = (uint64_t)v42;
  sub_1D6E1A4EC();
  sub_1D6E1A2E8();
  v22(v19, v15);
  v31 = sub_1D6E1A2DC();
  v33 = v32;
  v26(v12, v8);
  if (!v33)
  {
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = 0;
    *(_QWORD *)(v35 + 24) = 0;
    *(_BYTE *)(v35 + 32) = 2;
    v36 = sub_1D6E1865C();
    v37 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v41, 1, 1, v36);
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    v47 = 0;
    v45 = 0u;
    v46 = 0u;
    swift_retain();
    sub_1D6C618C4(v35 | 0x8000000000000004, 0, v37, (uint64_t)&v48, 0, 0, 0, 0, (uint64_t)&v45);
    swift_release();
    sub_1D5E828A8((uint64_t)&v45, (uint64_t)&qword_1ED5E0920, (uint64_t)&unk_1ED5E0910, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1D5EE93F4);
    sub_1D5E828A8((uint64_t)&v48, (uint64_t)&unk_1ED5DD090, (uint64_t)&qword_1ED5E1AC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1D5EE93F4);
    sub_1D5E828A8(v37, (uint64_t)&qword_1ED5DCD70, (uint64_t)MEMORY[0x1E0D545D0], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1D5E847C4);
    goto LABEL_7;
  }
  if (v31 == 49 && v33 == 0xE100000000000000)
    v34 = 1;
  else
    v34 = sub_1D6E282C8() & 1;
  v38 = swift_allocObject();
  swift_retain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 16) = v34;
  *(_QWORD *)(v38 + 24) = 0;
  *(_BYTE *)(v38 + 32) = 1;
  v39 = sub_1D6E1865C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v30, 1, 1, v39);
  v50 = 0;
  v48 = 0u;
  v49 = 0u;
  v47 = 0;
  v45 = 0u;
  v46 = 0u;
  sub_1D6C618C4(v38 | 0x8000000000000004, 0, v30, (uint64_t)&v48, 0, 0, 0, 0, (uint64_t)&v45);
  swift_release();
  sub_1D5E828A8((uint64_t)&v45, (uint64_t)&qword_1ED5E0920, (uint64_t)&unk_1ED5E0910, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1D5EE93F4);
  sub_1D5E828A8((uint64_t)&v48, (uint64_t)&unk_1ED5DD090, (uint64_t)&qword_1ED5E1AC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1D5EE93F4);
  sub_1D5E828A8(v30, (uint64_t)&qword_1ED5DCD70, (uint64_t)MEMORY[0x1E0D545D0], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1D5E847C4);
  swift_release();
LABEL_11:
  swift_release();
  return 1;
}

uint64_t type metadata accessor for SystemNotificationsURLHandler()
{
  return objc_opt_self();
}

uint64_t sub_1D6845260(uint64_t a1)
{
  return sub_1D68448BC(a1) & 1;
}

unint64_t sub_1D6845288()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED61A320;
  if (!qword_1ED61A320)
  {
    v1 = type metadata accessor for SystemNotificationsURLHandler();
    result = MEMORY[0x1D82917D0](&unk_1D6E95E60, v1);
    atomic_store(result, (unint64_t *)&qword_1ED61A320);
  }
  return result;
}

uint64_t sub_1D68452CC()
{
  uint64_t v0;

  sub_1D63816F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t destroy for SearchMoreFeedServiceContext(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 3u)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

void initializeWithCopy for SearchMoreFeedServiceContext(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1D684533C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  __int128 v3;

  v3 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v0 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(v0, v1);
  *(_BYTE *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(v0 + 56) = *(_BYTE *)(v1 + 56);
  return v0;
}

uint64_t assignWithCopy for SearchMoreFeedServiceContext(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (result != a2)
  {
    sub_1D6771400(result);
    __asm { BR              X9 }
  }
  v3 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(result + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(result + 48) = v3;
  return result;
}

uint64_t assignWithTake for SearchMoreFeedServiceContext(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (a1 != a2)
  {
    sub_1D6771400(a1);
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchMoreFeedServiceContext(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchMoreFeedServiceContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMoreFeedServiceContext()
{
  return &type metadata for SearchMoreFeedServiceContext;
}

uint64_t sub_1D6845518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7NewsUI233FormatGroupFeedGroupEmitterCursor_formatGroup;
  v2 = sub_1D6E2198C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D6845568()
{
  return type metadata accessor for FormatGroupFeedGroupEmitterCursor();
}

uint64_t type metadata accessor for FormatGroupFeedGroupEmitterCursor()
{
  uint64_t result;

  result = qword_1ED62CCD0;
  if (!qword_1ED62CCD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t dispatch thunk of AppReviewRequestStoreType.appReviewRequestState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AppReviewRequestStoreType.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AppReviewRequestStoreType.update(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1D68455C4()
{
  return sub_1D6E1A348();
}

uint64_t sub_1D68455FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1D6845A6C(0, &qword_1EFFF3700, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68459E4();
  sub_1D6E28478();
  v9[15] = 0;
  sub_1D6845AC8();
  sub_1D6E28238();
  if (!v1)
  {
    v9[14] = 1;
    sub_1D6E2822C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D6845724@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D6E280D0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1D6845780@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D6E280D0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1D68457E0()
{
  sub_1D68459E4();
  return sub_1D6E28538();
}

uint64_t sub_1D6845808()
{
  sub_1D68459E4();
  return sub_1D6E28544();
}

uint64_t sub_1D6845830@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D6845880(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D6845858(_QWORD *a1)
{
  return sub_1D68455FC(a1);
}

ValueMetadata *type metadata accessor for SearchMoreFeedKnobsConfig()
{
  return &type metadata for SearchMoreFeedKnobsConfig;
}

uint64_t sub_1D6845880(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;
  char v13;

  sub_1D6845A6C(0, &qword_1EFFF36E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v10[-v6];
  v8 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68459E4();
  sub_1D6E2846C();
  if (!v1)
  {
    v13 = 0;
    sub_1D6845A28();
    sub_1D6E280F4();
    v10[15] = 1;
    sub_1D6E280F4();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    if (v12)
      v8 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v8 = v11 & ~(v11 >> 63);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1D68459E4()
{
  unint64_t result;

  result = qword_1EFFF36F0;
  if (!qword_1EFFF36F0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96168, &type metadata for SearchMoreFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF36F0);
  }
  return result;
}

unint64_t sub_1D6845A28()
{
  unint64_t result;

  result = qword_1EFFF36F8;
  if (!qword_1EFFF36F8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6EA6C84, &type metadata for SearchMoreFeedGroupKnobs);
    atomic_store(result, (unint64_t *)&qword_1EFFF36F8);
  }
  return result;
}

void sub_1D6845A6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D68459E4();
    v7 = a3(a1, &type metadata for SearchMoreFeedKnobsConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D6845AC8()
{
  unint64_t result;

  result = qword_1EFFF3708;
  if (!qword_1EFFF3708)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6EA6C5C, &type metadata for SearchMoreFeedGroupKnobs);
    atomic_store(result, (unint64_t *)&qword_1EFFF3708);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchMoreFeedKnobsConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D6845B58 + 4 * byte_1D6E95FB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D6845B8C + 4 * byte_1D6E95FB0[v4]))();
}

uint64_t sub_1D6845B8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6845B94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D6845B9CLL);
  return result;
}

uint64_t sub_1D6845BA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D6845BB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D6845BB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6845BBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchMoreFeedKnobsConfig.CodingKeys()
{
  return &type metadata for SearchMoreFeedKnobsConfig.CodingKeys;
}

unint64_t sub_1D6845BDC()
{
  unint64_t result;

  result = qword_1EFFF3710;
  if (!qword_1EFFF3710)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96140, &type metadata for SearchMoreFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3710);
  }
  return result;
}

unint64_t sub_1D6845C24()
{
  unint64_t result;

  result = qword_1EFFF3718;
  if (!qword_1EFFF3718)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96078, &type metadata for SearchMoreFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3718);
  }
  return result;
}

unint64_t sub_1D6845C6C()
{
  unint64_t result;

  result = qword_1EFFF3720;
  if (!qword_1EFFF3720)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E960A0, &type metadata for SearchMoreFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3720);
  }
  return result;
}

uint64_t *sub_1D6845CB0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  void (*v22)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D6845E40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D608A014();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = (int *)type metadata accessor for ArticleListTagFeedGroupKnobs();
    *(_QWORD *)&v9[v12[5]] = *(_QWORD *)&v10[v12[5]];
    *(_QWORD *)&v9[v12[6]] = *(_QWORD *)&v10[v12[6]];
    *(_QWORD *)&v9[v12[7]] = *(_QWORD *)&v10[v12[7]];
    *(_QWORD *)&v9[v12[8]] = *(_QWORD *)&v10[v12[8]];
    *(_QWORD *)&v9[v12[9]] = *(_QWORD *)&v10[v12[9]];
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v16;
    v17 = v16;
    v22 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v22(v14, v15, v17);
    v18 = a3[7];
    v19 = *(_OWORD *)((char *)a2 + v18 + 24);
    *(_OWORD *)((char *)a1 + v18 + 24) = v19;
    (**(void (***)(void))(v19 - 8))();
  }
  return a1;
}

void sub_1D6845E40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED622DA0)
  {
    type metadata accessor for ArticleListTagFeedGroupConfigData();
    sub_1D5E6D8C0(&qword_1ED61D690, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupConfigData, (uint64_t)&unk_1D6EC2668);
    sub_1D5E6D8C0((unint64_t *)&unk_1ED61D680, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupConfigData, (uint64_t)&unk_1D6EC2640);
    v0 = sub_1D6E21C68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED622DA0);
  }
}

uint64_t sub_1D6845EE4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D6845E40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  return __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
}

uint64_t sub_1D6845FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  __int128 v19;
  uint64_t v21;

  sub_1D6845E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v21 = a3;
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for ArticleListTagFeedGroupKnobs();
  *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
  *(_QWORD *)(v8 + v11[6]) = *(_QWORD *)(v9 + v11[6]);
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_QWORD *)(v8 + v11[9]) = *(_QWORD *)(v9 + v11[9]);
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  v16 = v15;
  v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v17(v13, v14, v16);
  v18 = *(int *)(v21 + 28);
  v19 = *(_OWORD *)(a2 + v18 + 24);
  *(_OWORD *)(a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  return a1;
}

uint64_t sub_1D684610C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;

  sub_1D6845E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = (int *)type metadata accessor for ArticleListTagFeedGroupKnobs();
  *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v11[6]) = *(_QWORD *)(v9 + v11[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v11[9]) = *(_QWORD *)(v9 + v11[9]);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t sub_1D6846250(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  sub_1D6845E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = (int *)type metadata accessor for ArticleListTagFeedGroupKnobs();
  *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
  *(_QWORD *)(v8 + v11[6]) = *(_QWORD *)(v9 + v11[6]);
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_QWORD *)(v8 + v11[9]) = *(_QWORD *)(v9 + v11[9]);
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  v17 = a1 + v13;
  v18 = a2 + v13;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  return a1;
}

uint64_t sub_1D684634C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  sub_1D6845E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)type metadata accessor for ArticleListTagFeedGroupKnobs();
  *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
  swift_release();
  *(_QWORD *)(v8 + v11[6]) = *(_QWORD *)(v9 + v11[6]);
  swift_release();
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  swift_release();
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  swift_release();
  *(_QWORD *)(v8 + v11[9]) = *(_QWORD *)(v9 + v11[9]);
  swift_release();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  __swift_destroy_boxed_opaque_existential_1(a1 + v16);
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  return a1;
}

uint64_t sub_1D6846488()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6846494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_1D6845E40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for ArticleListTagFeedGroupKnobs();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1D6846540()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D684654C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_1D6845E40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for ArticleListTagFeedGroupKnobs();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ArticleListTagFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1ED61A830;
  if (!qword_1ED61A830)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D6846630()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D6845E40();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ArticleListTagFeedGroupKnobs();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1D68466C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  type metadata accessor for ArticleListTagFeedGroupEmitter();
  sub_1D608A014();
  v0 = sub_1D6E2255C();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED624A20, (uint64_t (*)(uint64_t))sub_1D60D15FC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1D60D15FC(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D6E32F90;
  v6 = (uint64_t *)(v5 + v4);
  *(_BYTE *)(swift_allocObject() + 16) = 1;
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED623400, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5C200]);
  swift_allocObject();
  *v6 = sub_1D6E2324C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0D5B508], v2);
  sub_1D6686B78(v5);
  return v0;
}

uint64_t sub_1D6846878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for ArticleListTagFeedGroupEmitter();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6E1AE1C();
  v7 = (void *)sub_1D6E1AB4C();
  sub_1D5F78160(0, (unint64_t *)&unk_1ED60D6D0);
  sub_1D6E1AC18();
  swift_release();

  v22 = v1;
  sub_1D5E82ECC(v1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroupEmitter);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23 = v8;
  v24 = v8 + v5;
  v9 = (v8 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = swift_allocObject();
  sub_1D5F0D758((uint64_t)v6, v10 + v8, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroupEmitter);
  *(_QWORD *)(v10 + v9) = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1D6849160;
  *(_QWORD *)(v11 + 24) = v10;
  swift_retain();
  v12 = (void *)sub_1D6E1AB4C();
  sub_1D68491F0();
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  sub_1D5E82ECC(v1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroupEmitter);
  v13 = swift_allocObject();
  v14 = v23;
  sub_1D5F0D758((uint64_t)v6, v13 + v23, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroupEmitter);
  *(_QWORD *)(v13 + v9) = a1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1D6849270;
  *(_QWORD *)(v15 + 24) = v13;
  swift_retain();
  v16 = (void *)sub_1D6E1AB4C();
  sub_1D609D134(0);
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  sub_1D5E82ECC(v22, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroupEmitter);
  v17 = swift_allocObject();
  sub_1D5F0D758((uint64_t)v6, v17 + v14, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroupEmitter);
  v18 = (void *)sub_1D6E1AB4C();
  v19 = sub_1D6E1ACCC();
  swift_release();
  swift_release();

  return v19;
}

uint64_t sub_1D6846B64(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  _OWORD v10[5];
  uint64_t v11;

  v2 = *(_OWORD *)(a1 + 48);
  v10[2] = *(_OWORD *)(a1 + 32);
  v10[3] = v2;
  v10[4] = *(_OWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v3;
  v4 = swift_allocObject();
  v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v4 + 64) = v5;
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v4 + 96) = *(_QWORD *)(a1 + 80);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v6;
  sub_1D60A0044((uint64_t)v10);
  v7 = (void *)sub_1D6E1AB4C();
  sub_1D5F78160(0, (unint64_t *)&unk_1ED60D6D0);
  v8 = sub_1D6E1AC24();
  swift_release();

  return v8;
}

uint64_t sub_1D6846C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned __int8 v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_1D68491F0();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED60D800, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - v12;
  v14 = type metadata accessor for ArticleListTagFeedGroupEmitter();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v17 = v41;
  v18 = sub_1D684A124(a4, *(_QWORD *)a1, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  if (!v17)
  {
    v21 = v18;
    v40 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    v41 = v8;
    if (v20 > 2u)
    {
      v27 = v18;
      v28 = v19;
      v29 = v20;
      v30 = type metadata accessor for TagFeedGroup();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v13, 1, 1, v30);
      v31 = &v10[*(int *)(v41 + 48)];
      sub_1D684A564((uint64_t)v13, (uint64_t)v10);
      *(_QWORD *)v31 = v27;
      *((_QWORD *)v31 + 1) = v28;
      v31[16] = v29;
      sub_1D5E847C4(0, (unint64_t *)&unk_1EFFF3728, (uint64_t (*)(uint64_t))sub_1D68491F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      return sub_1D6E1AC90();
    }
    else
    {
      v22 = a4;
      v23 = a4;
      v24 = v20;
      v25 = v21;
      v26 = v19;
      v39 = sub_1D6846F40(v23, v21, v19);
      sub_1D5E82ECC(a3, v40, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroupEmitter);
      v32 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v33 = (v16 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
      v34 = swift_allocObject();
      sub_1D5F0D758(v40, v34 + v32, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroupEmitter);
      *(_QWORD *)(v34 + v33) = v22;
      v35 = v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_QWORD *)v35 = v25;
      *(_QWORD *)(v35 + 8) = v26;
      *(_BYTE *)(v35 + 16) = v24;
      swift_retain();
      swift_bridgeObjectRetain();
      v36 = v26;
      v37 = (void *)sub_1D6E1AB4C();
      a3 = sub_1D6E1AC24();

      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

    }
  }
  return a3;
}

uint64_t sub_1D6846F40(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  unint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  id v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(_QWORD *, _QWORD, uint64_t);
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(_QWORD *, _QWORD, uint64_t);
  uint64_t v115;

  v82 = a3;
  v95 = a1;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, &qword_1ED603D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v78 - v7;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED623980, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v5);
  MEMORY[0x1E0C80A78](v9);
  v92 = (char *)&v78 - v10;
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED623060, (uint64_t (*)(uint64_t))sub_1D608A014, v5);
  MEMORY[0x1E0C80A78](v11);
  v91 = (char *)&v78 - v12;
  v13 = sub_1D6E24F8C();
  v97 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v96 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F3CD0, (uint64_t (*)(uint64_t))sub_1D609FF00, v5);
  MEMORY[0x1E0C80A78](v15);
  v89 = (char *)&v78 - v16;
  v86 = sub_1D6E15EF0();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v84 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ArticleListTagFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v18);
  v83 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1D6E2444C();
  v101 = *(_QWORD *)(v107 - 8);
  v20 = MEMORY[0x1E0C80A78](v107);
  v88 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v106 = (char *)&v78 - v22;
  sub_1D5E847C4(0, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v5);
  MEMORY[0x1E0C80A78](v23);
  v87 = (char *)&v78 - v24;
  v94 = sub_1D6E2489C();
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v105 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1D6E25AFC();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (uint64_t *)((char *)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v28);
  v32 = (uint64_t *)((char *)&v78 - v31);
  v33 = sub_1D6E25C40();
  v103 = *(_QWORD *)(v33 - 8);
  v104 = v33;
  MEMORY[0x1E0C80A78](v33);
  v102 = (char *)&v78 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = a2;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v35 = sub_1D6E28040();
  }
  else
  {
    v35 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v99 = v8;
  v100 = v3;
  v98 = v13;
  if (v35)
  {
    v112 = MEMORY[0x1E0DEE9D8];
    result = sub_1D62275AC(0, v35 & ~(v35 >> 63), 0);
    if (v35 < 0)
    {
      __break(1u);
      return result;
    }
    v37 = v112;
    v38 = v110;
    if ((v110 & 0xC000000000000001) != 0)
    {
      v39 = 0;
      v40 = *MEMORY[0x1E0D5F7C8];
      do
      {
        *v32 = MEMORY[0x1D8290720](v39);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v27 + 104))(v32, v40, v26);
        v112 = v37;
        v42 = *(_QWORD *)(v37 + 16);
        v41 = *(_QWORD *)(v37 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_1D62275AC(v41 > 1, v42 + 1, 1);
          v37 = v112;
        }
        ++v39;
        *(_QWORD *)(v37 + 16) = v42 + 1;
        (*(void (**)(unint64_t, _QWORD *, uint64_t))(v27 + 32))(v37+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v42, v32, v26);
      }
      while (v35 != v39);
    }
    else
    {
      v44 = 0;
      LODWORD(v109) = *MEMORY[0x1E0D5F7C8];
      v108 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v27 + 104);
      do
      {
        *v30 = *(_QWORD *)(v38 + 8 * v44 + 32);
        v108(v30, v109, v26);
        v112 = v37;
        v46 = *(_QWORD *)(v37 + 16);
        v45 = *(_QWORD *)(v37 + 24);
        swift_unknownObjectRetain();
        if (v46 >= v45 >> 1)
        {
          sub_1D62275AC(v45 > 1, v46 + 1, 1);
          v37 = v112;
        }
        ++v44;
        *(_QWORD *)(v37 + 16) = v46 + 1;
        (*(void (**)(unint64_t, _QWORD *, uint64_t))(v27 + 32))(v37+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v46, v30, v26);
        v38 = v110;
      }
      while (v35 != v44);
    }
    swift_bridgeObjectRelease();
    v43 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v43 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
  }
  sub_1D6473000(v43);
  sub_1D6473114(v43);
  sub_1D6473238(v43);
  v47 = v102;
  sub_1D6E25C34();
  v48 = sub_1D6E27464();
  v49 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1D5E76DF0(0, (unint64_t *)&qword_1ED624AD0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1D6E3C090;
  *(_QWORD *)(v50 + 32) = v48;
  v110 = v48;
  v112 = v50;
  sub_1D6E26DA4();
  sub_1D5E847C4(0, &qword_1ED5F4E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F978], v49);
  v51 = v103;
  v52 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1D6E32F90;
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 16))(v53 + v52, v47, v104);
  v80 = sub_1D6E212F0();
  v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56);
  v54 = (uint64_t)v87;
  v79(v87, 1, 1, v80);
  swift_unknownObjectRetain();
  sub_1D6CFC87C(v43);
  sub_1D6CFC87C(v43);
  sub_1D6CFC9A0(v43);
  sub_1D6CFC9AC(v43);
  sub_1D6CFCACC(v43);
  sub_1D6CFCAD8(v43);
  sub_1D6E24890();
  v81 = type metadata accessor for ArticleListTagFeedGroupEmitter();
  v55 = v90;
  sub_1D5E96490(v90 + *(int *)(v81 + 24), (uint64_t)&v112);
  v108 = v114;
  v109 = v113;
  v82 = __swift_project_boxed_opaque_existential_1(&v112, v113);
  sub_1D6845E40();
  v56 = v83;
  sub_1D6E21C08();
  v57 = v88;
  v58 = v107;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v88, v56, v107);
  v59 = v84;
  sub_1D6E15EE4();
  sub_1D6E15ED8();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v59, v86);
  v60 = objc_msgSend((id)v110, sel_identifier);
  sub_1D6E26978();

  v79((char *)v54, 1, 1, v80);
  sub_1D609FF00(0);
  v62 = (uint64_t)v89;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v89, 1, 1, v61);
  sub_1D6E24308();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D5EC4E54(v62, (unint64_t *)&qword_1ED5F3CD0, (uint64_t (*)(uint64_t))sub_1D609FF00);
  sub_1D5EC4E54(v54, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40]);
  v63 = *(void (**)(char *, uint64_t))(v101 + 8);
  v63(v57, v58);
  v64 = v55 + *(int *)(v81 + 20);
  sub_1D608A014();
  v66 = v65;
  v67 = *(_QWORD *)(v65 - 8);
  v68 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v91, v64, v65);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v68, 0, 1, v66);
  swift_retain();
  sub_1D6E22B80();
  v69 = *(id *)(v115 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  v70 = sub_1D6E256AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v92, 1, 1, v70);
  LOBYTE(v111) = 1;
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED6239B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5F438]);
  swift_allocObject();
  sub_1D6E2588C();
  sub_1D6E22B80();
  sub_1D6292ABC();
  swift_release();
  sub_1D6E22B80();
  v71 = *(id *)(v111 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1D6E258BC();
  swift_allocObject();
  sub_1D6E258B0();
  v72 = sub_1D6E24D4C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v99, 1, 1, v72);
  v73 = qword_1ED6241B8;
  (id)*MEMORY[0x1E0D58688];
  if (v73 != -1)
    swift_once();
  (id)qword_1ED698E28;
  v74 = v96;
  sub_1D6E24F68();
  v75 = v105;
  v76 = v106;
  v77 = sub_1D6E2498C();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v74, v98);
  v63(v76, v107);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v75, v94);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v104);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v112);
  return v77;
}

id sub_1D6847BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, void *a3@<X4>, char a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D68491F0();
  v11 = a5 + *(int *)(v10 + 48);
  sub_1D6847C80(a1, a5);
  v12 = type metadata accessor for TagFeedGroup();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a5, 0, 1, v12);
  *(_QWORD *)v11 = a2;
  *(_QWORD *)(v11 + 8) = a3;
  *(_BYTE *)(v11 + 16) = a4;
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t sub_1D6847C80@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v13[1] = a2;
  sub_1D5E847C4(0, &qword_1ED5F3850, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5AE10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v13 - v4;
  v6 = sub_1D6E22E98();
  v7 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1D6E24428();
  MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1D6845E40();
  sub_1D6E21BC0();
  sub_1D6E21BCC();
  sub_1D6E21BCC();
  type metadata accessor for ArticleListTagFeedGroupEmitter();
  sub_1D608A014();
  sub_1D6E22598();
  sub_1D6E22574();
  sub_1D6E225B0();
  v11 = sub_1D6E222BC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  sub_1D6E2192C();
  type metadata accessor for TagFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

void sub_1D6847ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v18 = a1;
  v14[2] = a6;
  v14[0] = a5;
  v19 = a4;
  v15 = sub_1D6E23AF8();
  v14[1] = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  sub_1D609D134(0);
  v16 = v6;
  MEMORY[0x1E0C80A78](v6);
  v17 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED60D800, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for TagFeedGroup();
  v12 = MEMORY[0x1E0C80A78](v11);
  v13 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  __asm { BR              X10 }
}

uint64_t sub_1D684808C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D6849F94(*(_QWORD *)(v4 - 120), v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v0) == 1)
  {
    sub_1D5EC4E54(v1, (unint64_t *)&unk_1ED60D800, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup);
    v5 = sub_1D6E22964();
    sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    swift_allocError();
    *v6 = 0xD000000000000024;
    v6[1] = 0x80000001D6F2A480;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v6, *MEMORY[0x1E0D5B6F0], v5);
    swift_willThrow();
  }
  else
  {
    sub_1D5F0D758(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for TagFeedGroup);
    sub_1D5E82ECC(v2, *(_QWORD *)(v4 - 136), (uint64_t (*)(_QWORD))type metadata accessor for TagFeedGroup);
    swift_storeEnumTagMultiPayload();
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED60C4D0, (uint64_t (*)(uint64_t))sub_1D609D134, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v0 = sub_1D6E1AC90();
    sub_1D609EC18(v2);
  }
  return v0;
}

uint64_t sub_1D68485F0()
{
  type metadata accessor for ArticleListTagFeedGroupEmitter();
  sub_1D5E6D8C0(&qword_1ED61A800, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter, (uint64_t)&unk_1D6E96288);
  sub_1D6E22808();
  if (qword_1ED6241B8 != -1)
    swift_once();
  type metadata accessor for TagFeedGroup();
  sub_1D609D158();
  sub_1D6E22C1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D68486D8(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_1ED6241B8 != -1)
    swift_once();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D6E32F90;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 32) = v5;
  sub_1D6E27374();
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();
  v7 = sub_1D68494A4(a1, a2);
  v8 = sub_1D684965C(v7);
  swift_bridgeObjectRelease();
  v9 = sub_1D6849ABC(v8);
  swift_bridgeObjectRelease();
  v10 = sub_1D6849DB0(v9);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1D6E28040();
    swift_bridgeObjectRelease();
    if (!v11)
      goto LABEL_10;
  }
  else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_10;
  }
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1D68488E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;

  v52 = a4;
  v53 = a3;
  v5 = sub_1D6E22388();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (unint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D6E2327C();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D6E23AF8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ArticleListTagFeedGroupEmitter();
  v17 = *(int *)(v16 + 20);
  v49 = a1;
  v18 = *(_QWORD *)(a1 + v17 + *(int *)(type metadata accessor for ArticleListTagFeedGroupKnobs() + 24));
  sub_1D6E22BE0();
  sub_1D6E22E74();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if ((v55 & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v49 + *(int *)(v16 + 28)), *(_QWORD *)(v49 + *(int *)(v16 + 28) + 24));
    v20 = v50;
    v19 = v51;
    (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v11, *MEMORY[0x1E0D5C228], v51);
    v18 = sub_1D6E233F0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
    v21 = sub_1D60FDB6C(v52, v18);
    v15 = (char *)(v24 >> 1);
    v25 = (v24 >> 1) - v23;
    if (__OFSUB__(v24 >> 1, v23))
      goto LABEL_45;
    if (v25)
    {
      v26 = v22;
      v20 = v23;
      v53 = v21;
      v54 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      v27 = &v54;
      sub_1D6E27F38();
      if (v25 < 0)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      v52 = v18;
      if ((uint64_t)v20 <= (uint64_t)v15)
        v18 = (uint64_t)v15;
      else
        v18 = v20;
      do
      {
        if (v18 == v20)
        {
          __break(1u);
          goto LABEL_44;
        }
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v8, v26 + *(_QWORD *)(v6 + 72) * v20, v5);
        sub_1D6E2237C();
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v8, v5);
        sub_1D6E27F20();
        v16 = *(_QWORD *)(v54 + 16);
        sub_1D6E27F50();
        sub_1D6E27F5C();
        sub_1D6E27F2C();
        ++v20;
      }
      while (v15 != (char *)v20);
      v28 = v54;
      swift_unknownObjectRelease();
      v18 = v52;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      v28 = MEMORY[0x1E0DEE9D8];
    }
    v53 = v28;
    if (v28 >> 62)
      goto LABEL_47;
    v27 = *(_QWORD **)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v41 = sub_1D6E03158((uint64_t)v27, v18);
      v18 = v44 >> 1;
      v25 = (v44 >> 1) - v43;
      if (__OFSUB__(v44 >> 1, v43))
        break;
      v45 = v41;
      if (!v25)
      {
LABEL_41:
        swift_unknownObjectRelease();
        return v53;
      }
      v15 = v42;
      v20 = v43;
      v54 = MEMORY[0x1E0DEE9D8];
      v27 = &v54;
      sub_1D6E27F38();
      if (v25 < 0)
        goto LABEL_50;
      v52 = v45;
      if ((uint64_t)v20 <= v18)
        v46 = v18;
      else
        v46 = v20;
      while (v46 != v20)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v6 + 16))(v8, &v15[*(_QWORD *)(v6 + 72) * v20], v5);
        sub_1D6E2237C();
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v8, v5);
        sub_1D6E27F20();
        v16 = *(_QWORD *)(v54 + 16);
        sub_1D6E27F50();
        sub_1D6E27F5C();
        sub_1D6E27F2C();
        if (v18 == ++v20)
          goto LABEL_41;
      }
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      swift_bridgeObjectRetain();
      v27 = (_QWORD *)sub_1D6E28040();
      swift_bridgeObjectRelease();
    }
    __break(1u);
    goto LABEL_49;
  }
  v29 = v53;
  swift_bridgeObjectRetain();
  v5 = sub_1D6104984(v52, v29);
  v25 = v30;
  v16 = v31;
  v20 = v32;
  swift_bridgeObjectRelease();
  v6 = (v20 >> 1) - v16;
  if (__OFSUB__(v20 >> 1, v16))
    goto LABEL_46;
  swift_bridgeObjectRetain();
  v27 = (_QWORD *)sub_1D6E052E8((v20 >> 1) - v16, v29);
  v52 = v33;
  v15 = v34;
  v8 = v35;
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
    swift_unknownObjectRetain();
LABEL_14:
    v36 = sub_1D60FF060(v5, v25, v16, v20);
    goto LABEL_20;
  }
  sub_1D6E282F8();
  swift_unknownObjectRetain_n();
  v37 = swift_dynamicCastClass();
  if (!v37)
  {
    swift_unknownObjectRelease();
    v37 = MEMORY[0x1E0DEE9D8];
  }
  v38 = *(_QWORD *)(v37 + 16);
  swift_release();
  if (v38 != v6)
  {
LABEL_51:
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  v36 = swift_dynamicCastClass();
  if (!v36)
  {
    swift_unknownObjectRelease();
    v36 = MEMORY[0x1E0DEE9D8];
  }
LABEL_20:
  swift_unknownObjectRelease();
  if ((v8 & 1) != 0)
  {
    sub_1D6E282F8();
    swift_unknownObjectRetain_n();
    v39 = swift_dynamicCastClass();
    if (!v39)
    {
      swift_unknownObjectRelease();
      v39 = MEMORY[0x1E0DEE9D8];
    }
    v40 = *(_QWORD *)(v39 + 16);
    swift_release();
    if (__OFSUB__(v8 >> 1, v15))
    {
      __break(1u);
    }
    else if (v40 == (v8 >> 1) - (_QWORD)v15)
    {
      if (!swift_dynamicCastClass())
        swift_unknownObjectRelease();
      goto LABEL_29;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRetain();
  }
  sub_1D60FF060((uint64_t)v27, v52, (uint64_t)v15, v8);
LABEL_29:
  swift_unknownObjectRelease();
  swift_unknownObjectRelease_n();
  return v36;
}

uint64_t sub_1D6848EA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1D6845E40();
  v4 = v3;
  v5 = swift_allocBox();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5;
  return result;
}

uint64_t sub_1D6848EF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;

  v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for ArticleListTagFeedGroupKnobs();
  a2[4] = sub_1D5E6D8C0(&qword_1ED617DE0, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupKnobs, (uint64_t)&unk_1D6EDA548);
  a2[5] = sub_1D5E6D8C0(&qword_1EFFF3738, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupKnobs, (uint64_t)&unk_1D6EDA520);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1D5E82ECC(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroupKnobs);
}

uint64_t sub_1D6848F8C()
{
  sub_1D6845E40();
  return sub_1D6E21BB4();
}

uint64_t sub_1D6848FA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D60A00F4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D6E32F90;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1D6845E40();
  v3 = sub_1D6E21BB4();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  sub_1D5F77E70(inited);
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED60C010, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
  a1[3] = v5;
  a1[4] = sub_1D684A848();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D6E1A330();
}

uint64_t sub_1D6849098()
{
  sub_1D5E6D8C0((unint64_t *)&unk_1ED61A810, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter, (uint64_t)&unk_1D6E96230);
  return sub_1D6E1A324();
}

uint64_t sub_1D68490D8()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1ED61A820, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter, (uint64_t)&unk_1D6E96208);
}

uint64_t sub_1D6849104()
{
  return sub_1D5E6D8C0(&qword_1ED61A808, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter, (uint64_t)&unk_1D6E96260);
}

uint64_t sub_1D6849130()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1ED61A810, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter, (uint64_t)&unk_1D6E96230);
}

uint64_t sub_1D6849160(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for ArticleListTagFeedGroupEmitter() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1D6846C50(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1D68491CC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D68491F0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED60D810)
  {
    sub_1D5E847C4(255, (unint64_t *)&unk_1ED60D800, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED60D810);
  }
}

void sub_1D6849270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for ArticleListTagFeedGroupEmitter() - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_1D6847ED0(a1, a2, a3, a4, v4 + v10, *(_QWORD *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1D68492F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v1 + 16);
  sub_1D68491F0();
  return v3(a1, *(_QWORD *)(a1 + *(int *)(v4 + 48)), *(_QWORD *)(a1 + *(int *)(v4 + 48) + 8), *(unsigned __int8 *)(a1 + *(int *)(v4 + 48) + 16));
}

uint64_t sub_1D6849344()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (int *)type metadata accessor for ArticleListTagFeedGroupEmitter();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_1D6845E40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + v1[5];
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[6]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[7]);
  return swift_deallocObject();
}

uint64_t sub_1D684944C()
{
  type metadata accessor for ArticleListTagFeedGroupEmitter();
  return sub_1D68485F0();
}

uint64_t sub_1D68494A4(unint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_retain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1D609EC54(v4, a2);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_1ED6241B8 != -1)
    swift_once();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  v7 = (_QWORD *)result;
  *(_OWORD *)(result + 16) = xmmword_1D6E334D0;
  if (!(a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!(v5 >> 62))
      goto LABEL_5;
LABEL_8:
    swift_bridgeObjectRetain();
    v9 = sub_1D6E28040();
    result = swift_bridgeObjectRelease();
    v10 = v8 - v9;
    if (!__OFSUB__(v8, v9))
      goto LABEL_6;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1D6E28040();
  result = swift_bridgeObjectRelease();
  if (v5 >> 62)
    goto LABEL_8;
LABEL_5:
  v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v10 = v8 - v9;
  if (!__OFSUB__(v8, v9))
  {
LABEL_6:
    v11 = MEMORY[0x1E0DEB418];
    v12 = MEMORY[0x1E0DEB490];
    v7[7] = MEMORY[0x1E0DEB418];
    v7[8] = v12;
    v7[4] = v10;
    v7[12] = v11;
    v7[13] = v12;
    v7[9] = v9;
    sub_1D6E27374();
    sub_1D6E1C61C();
    swift_bridgeObjectRelease();
    return v5;
  }
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_1D684965C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_1D6E15ECC();
  v23 = *(_QWORD *)(v2 - 8);
  v24 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D6E23AF8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArticleListTagFeedGroupEmitter();
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  sub_1D6E22BE0();
  sub_1D6E22E74();
  v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v8, v5);
  if (v25 == 1)
  {
    sub_1D6E22BE0();
    sub_1D6E22E74();
    v9(v8, v5);
    v10 = v25;
    v11 = sub_1D6E15EC0();
    MEMORY[0x1E0C80A78](v11);
    *(&v23 - 2) = v10;
    *(&v23 - 1) = (uint64_t)v4;
    swift_bridgeObjectRetain();
    v12 = (unint64_t)sub_1D6970178((uint64_t (*)(uint64_t *))sub_1D684A79C, &v23 - 4, a1);
    if (v12 >> 62)
    {
      sub_1D5FAC880();
      v13 = sub_1D6E28028();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D6E282EC();
      sub_1D5FAC880();
      v13 = v12;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
    if (qword_1ED6241B8 != -1)
      swift_once();
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1D6E334D0;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_1D6E28040();
      swift_bridgeObjectRelease();
      if (!(v13 >> 62))
      {
LABEL_8:
        a1 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        v16 = v15 - a1;
        if (!__OFSUB__(v15, a1))
        {
LABEL_9:
          v17 = MEMORY[0x1E0DEB418];
          v18 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v14 + 64) = v18;
          *(_QWORD *)(v14 + 32) = v16;
          *(_QWORD *)(v14 + 96) = v17;
          *(_QWORD *)(v14 + 104) = v18;
          *(_QWORD *)(v14 + 72) = a1;
          sub_1D6E27374();
          sub_1D6E1C61C();
          swift_bridgeObjectRelease();
          return v13;
        }
        goto LABEL_19;
      }
    }
    else
    {
      v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!(v13 >> 62))
        goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    a1 = sub_1D6E28040();
    swift_bridgeObjectRelease();
    v16 = v15 - a1;
    if (!__OFSUB__(v15, a1))
      goto LABEL_9;
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (qword_1ED6241B8 != -1)
LABEL_20:
    swift_once();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1D6E32F90;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v21 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v19 + 64) = v21;
  *(_QWORD *)(v19 + 32) = v20;
  sub_1D6E27374();
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D6849ABC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];

  v2 = sub_1D6E15ECC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D6E23AF8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArticleListTagFeedGroupEmitter();
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  sub_1D6E22BE0();
  sub_1D6E22E74();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1D6E15E24();
  v19[2] = v5;
  swift_bridgeObjectRetain();
  v10 = (unint64_t)sub_1D6970178((uint64_t (*)(uint64_t *))sub_1D684A780, v19, a1);
  if (v10 >> 62)
  {
    sub_1D5FAC880();
    v11 = sub_1D6E28028();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D6E282EC();
    sub_1D5FAC880();
    v11 = v10;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_1ED6241B8 != -1)
    swift_once();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  v13 = (_QWORD *)result;
  *(_OWORD *)(result + 16) = xmmword_1D6E334D0;
  if (!(a1 >> 62))
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!(v11 >> 62))
      goto LABEL_7;
LABEL_11:
    swift_bridgeObjectRetain();
    v15 = sub_1D6E28040();
    result = swift_bridgeObjectRelease();
    v16 = v14 - v15;
    if (!__OFSUB__(v14, v15))
      goto LABEL_8;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1D6E28040();
  result = swift_bridgeObjectRelease();
  if (v11 >> 62)
    goto LABEL_11;
LABEL_7:
  v15 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  v16 = v14 - v15;
  if (!__OFSUB__(v14, v15))
  {
LABEL_8:
    v17 = MEMORY[0x1E0DEB418];
    v18 = MEMORY[0x1E0DEB490];
    v13[7] = MEMORY[0x1E0DEB418];
    v13[8] = v18;
    v13[4] = v16;
    v13[12] = v17;
    v13[13] = v18;
    v13[9] = v15;
    sub_1D6E27374();
    sub_1D6E1C61C();
    swift_bridgeObjectRelease();
    return v11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1D6849DB0(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4110, (uint64_t (*)(uint64_t))sub_1D5FAC880, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D60650D8();
  v2 = sub_1D6E26BD0();
  if (qword_1ED6241B8 != -1)
    swift_once();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  v4 = (_QWORD *)result;
  *(_OWORD *)(result + 16) = xmmword_1D6E334D0;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!(v2 >> 62))
      goto LABEL_5;
LABEL_8:
    swift_bridgeObjectRetain();
    v6 = sub_1D6E28040();
    result = swift_bridgeObjectRelease();
    v7 = v5 - v6;
    if (!__OFSUB__(v5, v6))
      goto LABEL_6;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v5 = sub_1D6E28040();
  result = swift_bridgeObjectRelease();
  if (v2 >> 62)
    goto LABEL_8;
LABEL_5:
  v6 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = v5 - v6;
  if (!__OFSUB__(v5, v6))
  {
LABEL_6:
    v8 = MEMORY[0x1E0DEB418];
    v9 = MEMORY[0x1E0DEB490];
    v4[7] = MEMORY[0x1E0DEB418];
    v4[8] = v9;
    v4[4] = v7;
    v4[12] = v8;
    v4[13] = v9;
    v4[9] = v6;
    sub_1D6E27374();
    sub_1D6E1C61C();
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1D6849F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5E847C4(0, (unint64_t *)&unk_1ED60D800, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D6849FF0(unint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;

  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D6E28040();
    result = swift_bridgeObjectRelease();
    if (!(a2 >> 62))
    {
LABEL_3:
      v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (a3)
        goto LABEL_4;
LABEL_17:
      if (!v10)
        return 4;
      if ((a6 & 0x8000000000000000) == 0)
        return v10 < 0 || v10 >= a6;
      goto LABEL_25;
    }
  }
  else
  {
    v10 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!(a2 >> 62))
      goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1D6E28040();
  result = swift_bridgeObjectRelease();
  if (!a3)
    goto LABEL_17;
LABEL_4:
  if (v10)
  {
    if ((a6 & 0x8000000000000000) == 0)
    {
      if ((v10 & 0x8000000000000000) == 0 && v10 < a6)
        return 3;
      if ((v11 & 0x8000000000000000) == 0 && v11 < a6)
        return 2;
      return 1;
    }
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  if ((a5 & 1) != 0)
    return 4;
  else
    return 3;
}

uint64_t sub_1D684A124(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  v27 = a4;
  v8 = sub_1D6E23AF8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArticleListTagFeedGroupEmitter();
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  sub_1D6E22BE0();
  sub_1D6E22E74();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v12 = v28;
  if (v28 >= 1)
  {
    v13 = sub_1D68486D8(a2, a1);
    v15 = v14;
    v16 = sub_1D68488E8(v4, a1, v13, v12);
    v18 = v17;
    swift_bridgeObjectRelease();
    v19 = sub_1D6849FF0(v16, v18, a3, v27, v15 & 1, v12);
    if (qword_1ED6241B8 != -1)
      swift_once();
    v26[1] = qword_1ED698E28;
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1D6E39A60;
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      v21 = sub_1D6E28040();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v22 = MEMORY[0x1E0DEB418];
    v23 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v20 + 64) = v23;
    *(_QWORD *)(v20 + 32) = v21;
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      v24 = sub_1D6E28040();
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v20 + 96) = v22;
    *(_QWORD *)(v20 + 104) = v23;
    *(_QWORD *)(v20 + 72) = v24;
    v27 = v19;
    __asm { BR              X10 }
  }
  sub_1D6E22964();
  sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
  swift_allocError();
  sub_1D6E22958();
  swift_willThrow();
  return v4;
}

uint64_t sub_1D684A564(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5E847C4(0, (unint64_t *)&unk_1ED60D800, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D684A5C0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for ArticleListTagFeedGroupEmitter();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  sub_1D6845E40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v5 + v1[5];
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v5 + v1[6]);
  __swift_destroy_boxed_opaque_existential_1(v5 + v1[7]);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1D684A700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = type metadata accessor for ArticleListTagFeedGroupEmitter();
  v6 = (((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64)
        + ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D6847BC8(a1, *(_QWORD *)(v2 + v6), *(void **)(v2 + v6 + 8), *(_BYTE *)(v2 + v6 + 16), a2);
}

uint64_t sub_1D684A780(void **a1)
{
  return sub_1D676E52C(a1) & 1;
}

uint64_t sub_1D684A79C(void **a1)
{
  uint64_t v1;

  return sub_1D60D15BC(a1, *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1D684A7BC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D684A830()
{
  return swift_deallocObject();
}

uint64_t sub_1D684A840@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D67B6044(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_1D684A848()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED60C008;
  if (!qword_1ED60C008)
  {
    sub_1D5E847C4(255, (unint64_t *)&unk_1ED60C010, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0DB3C80], v1);
    atomic_store(result, (unint64_t *)&qword_1ED60C008);
  }
  return result;
}

uint64_t sub_1D684A8AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  v33 = a1;
  v31 = *v1;
  v2 = type metadata accessor for SearchFeedServiceContext();
  v32 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v32 + 64);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D6E154E8();
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - v9;
  v11 = sub_1D6E15BE4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v29 - v16;
  v34 = objc_msgSend((id)v1[4], sel_appConfiguration);
  if (qword_1ED625450 != -1)
    swift_once();
  if ((sub_1D6E16580() & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1(v1 + 5, v1[8]);
    sub_1D6C37A90();
LABEL_10:
    v23 = v1[10];
    sub_1D5E82ECC(v33, (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SearchFeedServiceContext);
    v24 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v25 = (v3 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = swift_allocObject();
    sub_1D684B11C((uint64_t)v4, v26 + v24);
    *(_QWORD *)(v26 + v25) = v34;
    *(_QWORD *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8)) = v23;
    swift_unknownObjectRetain();
    v27 = (void *)sub_1D6E1AB4C();
    type metadata accessor for SearchFeedServiceConfig();
    v20 = sub_1D6E1AC24();
    swift_release();
    swift_release();

    goto LABEL_11;
  }
  if (qword_1EFFD2898 != -1)
    swift_once();
  sub_1D5E6D4DC(&qword_1EFFF3740, v18, (uint64_t (*)(uint64_t))type metadata accessor for SearchFeedServiceConfigFetcher, (uint64_t)&unk_1D6E96378);
  sub_1D6E16544();
  sub_1D6E15BB4();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v31 = *__swift_project_boxed_opaque_existential_1(v1 + 5, v1[8]);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    v21 = sub_1D6E154D0();
    MEMORY[0x1E0C80A78](v21);
    *(&v29 - 2) = (uint64_t)v7;
    sub_1D6E1AE1C();
    v22 = (void *)sub_1D6E1AB4C();
    type metadata accessor for SearchFeedConfigFetchResult();
    type metadata accessor for SearchFeedConfigManager();
    sub_1D6E1AC3C();
    swift_release();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v30);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    goto LABEL_10;
  }
  sub_1D60178E0((uint64_t)v10);
  sub_1D684B1D8();
  swift_allocError();
  *v19 = 0;
  sub_1D5E847C4(0, &qword_1ED625620, (uint64_t (*)(uint64_t))type metadata accessor for SearchFeedServiceConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v20 = sub_1D6E1AC78();
LABEL_11:
  swift_unknownObjectRelease();
  return v20;
}

uint64_t sub_1D684AD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  double v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a4;
  v22 = a1;
  v8 = sub_1D6E22634();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SearchFeedContentConfig();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SearchFeedServiceContext();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E82ECC(a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SearchFeedServiceContext);
  sub_1D5E82ECC(v22, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for SearchFeedContentConfig);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0D5B2F0], v8);
  sub_1D5E82ECC((uint64_t)v17, a5, (uint64_t (*)(_QWORD))type metadata accessor for SearchFeedServiceContext);
  v18 = (int *)type metadata accessor for SearchFeedServiceConfig();
  sub_1D5E82ECC((uint64_t)v14, a5 + v18[5], (uint64_t (*)(_QWORD))type metadata accessor for SearchFeedContentConfig);
  *(_QWORD *)(a5 + v18[6]) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a5 + v18[7], v11, v8);
  v19 = (double)(uint64_t)objc_msgSend((id)swift_unknownObjectRetain(), sel_autoRefreshMinimumInterval);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1D5E8D20C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for SearchFeedContentConfig);
  result = sub_1D5E8D20C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SearchFeedServiceContext);
  *(double *)(a5 + v18[8]) = v19;
  *(_QWORD *)(a5 + v18[9]) = v23;
  return result;
}

uint64_t sub_1D684AF38()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SearchFeedServiceConfigFetcher()
{
  return objc_opt_self();
}

uint64_t sub_1D684AF8C(uint64_t a1)
{
  return sub_1D684A8AC(a1);
}

uint64_t sub_1D684AFAC()
{
  return sub_1D5E6D4DC(&qword_1ED5DDFB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for SearchFeedServiceConfig, (uint64_t)&unk_1D6E6F990);
}

uint64_t sub_1D684AFDC()
{
  return sub_1D5E6D4DC(&qword_1ED5DE3C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for SearchFeedServiceContext, (uint64_t)&unk_1D6ED165C);
}

uint64_t sub_1D684B00C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for SearchFeedServiceContext() - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = type metadata accessor for LegacySearchResults();
  v4 = v2 + *(int *)(v3 + 24);
  v5 = sub_1D6E17F3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = v2 + *(int *)(v3 + 32);
  v7 = sub_1D6E18D94();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D684B11C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchFeedServiceContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D684B160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for SearchFeedServiceContext() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D684AD48(a1, v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)), a2);
}

unint64_t sub_1D684B1D8()
{
  unint64_t result;

  result = qword_1EFFF3748;
  if (!qword_1EFFF3748)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96480, &type metadata for SearchFeedServiceConfigFetcher.Errors);
    atomic_store(result, (unint64_t *)&qword_1EFFF3748);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchFeedServiceConfigFetcher.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D684B268 + 4 * byte_1D6E96325[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D684B29C + 4 * byte_1D6E96320[v4]))();
}

uint64_t sub_1D684B29C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D684B2A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D684B2ACLL);
  return result;
}

uint64_t sub_1D684B2B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D684B2C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D684B2C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D684B2CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchFeedServiceConfigFetcher.Errors()
{
  return &type metadata for SearchFeedServiceConfigFetcher.Errors;
}

unint64_t sub_1D684B2EC()
{
  unint64_t result;

  result = qword_1EFFF3758;
  if (!qword_1EFFF3758)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96458, &type metadata for SearchFeedServiceConfigFetcher.Errors);
    atomic_store(result, (unint64_t *)&qword_1EFFF3758);
  }
  return result;
}

uint64_t sub_1D684B330()
{
  return sub_1D6E1FFC4();
}

uint64_t sub_1D684B348()
{
  return sub_1D6E1FFC4();
}

ValueMetadata *type metadata accessor for FollowingFooterViewLayoutAttributes()
{
  return &type metadata for FollowingFooterViewLayoutAttributes;
}

unint64_t sub_1D684B374()
{
  unint64_t result;

  result = qword_1EFFF3760;
  if (!qword_1EFFF3760)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96554, &type metadata for FollowingFooterViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EFFF3760);
  }
  return result;
}

uint64_t *sub_1D684B3B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1D6E1F460();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t sub_1D684B428(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D6E1F460();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1D684B45C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E1F460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D684B4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E1F460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D684B4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E1F460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D684B528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E1F460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D684B56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D600E700(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0DBAEA0]);
}

uint64_t sub_1D684B578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D600E73C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0DBAEA0]);
}

uint64_t type metadata accessor for MagazineFeedEmbeddedDecoration(uint64_t a1)
{
  return sub_1D5E6E20C(a1, qword_1ED6061D8);
}

uint64_t sub_1D684B598(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = sub_1D6E1F460();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

_QWORD *sub_1D684B5F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  id v31;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = (void *)a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v10 = a2 + 6;
    v9 = a2[6];
    swift_bridgeObjectRetain();
    v11 = v7;
    swift_bridgeObjectRetain();
    if (v9)
    {
      v13 = (void *)a2[7];
      v12 = a2[8];
      a1[6] = v9;
      a1[7] = v13;
      a1[8] = v12;
      swift_unknownObjectRetain();
      v14 = v13;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *v10;
      a1[8] = a2[8];
    }
    sub_1D648D41C();
    v17 = *(int *)(v16 + 48);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(_OWORD *)((char *)a2 + v17 + 16);
    *(_OWORD *)v18 = *(_OWORD *)((char *)a2 + v17);
    *((_OWORD *)v18 + 1) = v20;
    v21 = *(_OWORD *)((char *)a2 + v17 + 48);
    *((_OWORD *)v18 + 2) = *(_OWORD *)((char *)a2 + v17 + 32);
    *((_OWORD *)v18 + 3) = v21;
    v22 = *(_OWORD *)((char *)a2 + v17 + 80);
    *((_OWORD *)v18 + 4) = *(_OWORD *)((char *)a2 + v17 + 64);
    *((_OWORD *)v18 + 5) = v22;
    v18[96] = *((_BYTE *)a2 + v17 + 96);
    v23 = *(void **)((char *)a2 + v17 + 104);
    v24 = *(void **)((char *)a2 + v17 + 112);
    *((_QWORD *)v18 + 13) = v23;
    *((_QWORD *)v18 + 14) = v24;
    *(_OWORD *)(v18 + 120) = *(_OWORD *)((char *)a2 + v17 + 120);
    *(_OWORD *)(v18 + 136) = *(_OWORD *)((char *)a2 + v17 + 136);
    *(_OWORD *)(v18 + 145) = *(_OWORD *)((char *)a2 + v17 + 145);
    v18[161] = *((_BYTE *)a2 + v17 + 161);
    v25 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
    v26 = &v18[v25];
    v27 = &v19[v25];
    v28 = sub_1D6E16784();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    v30 = v23;
    v31 = v24;
    v29(v26, v27, v28);
  }
  return a1;
}

uint64_t sub_1D684B764(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
  {
    swift_unknownObjectRelease();

    swift_release();
  }
  sub_1D648D41C();
  v3 = a1 + *(int *)(v2 + 48);

  v4 = v3 + *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
  v5 = sub_1D6E16784();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1D684B7FC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  id v27;
  id v28;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v8 = a2 + 6;
  v7 = a2[6];
  swift_bridgeObjectRetain();
  v9 = v5;
  swift_bridgeObjectRetain();
  if (v7)
  {
    v11 = (void *)a2[7];
    v10 = a2[8];
    a1[6] = v7;
    a1[7] = v11;
    a1[8] = v10;
    swift_unknownObjectRetain();
    v12 = v11;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *(_OWORD *)v8;
    a1[8] = v8[2];
  }
  sub_1D648D41C();
  v14 = *(int *)(v13 + 48);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_OWORD *)((char *)a2 + v14 + 16);
  *(_OWORD *)v15 = *(_OWORD *)((char *)a2 + v14);
  *((_OWORD *)v15 + 1) = v17;
  v18 = *(_OWORD *)((char *)a2 + v14 + 48);
  *((_OWORD *)v15 + 2) = *(_OWORD *)((char *)a2 + v14 + 32);
  *((_OWORD *)v15 + 3) = v18;
  v19 = *(_OWORD *)((char *)a2 + v14 + 80);
  *((_OWORD *)v15 + 4) = *(_OWORD *)((char *)a2 + v14 + 64);
  *((_OWORD *)v15 + 5) = v19;
  v15[96] = *((_BYTE *)a2 + v14 + 96);
  v20 = *(void **)((char *)a2 + v14 + 104);
  v21 = *(void **)((char *)a2 + v14 + 112);
  *((_QWORD *)v15 + 13) = v20;
  *((_QWORD *)v15 + 14) = v21;
  *(_OWORD *)(v15 + 120) = *(_OWORD *)((char *)a2 + v14 + 120);
  *(_OWORD *)(v15 + 136) = *(_OWORD *)((char *)a2 + v14 + 136);
  *(_OWORD *)(v15 + 145) = *(_OWORD *)((char *)a2 + v14 + 145);
  v15[161] = *((_BYTE *)a2 + v14 + 161);
  v22 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
  v23 = &v15[v22];
  v24 = &v16[v22];
  v25 = sub_1D6E16784();
  v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v27 = v20;
  v28 = v21;
  v26(v23, v24, v25);
  return a1;
}

_QWORD *sub_1D684B940(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v4 = (void *)a1[3];
  v5 = (void *)a2[3];
  a1[3] = v5;
  v6 = v5;

  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a1 + 6;
  v9 = a2 + 6;
  v8 = a2[6];
  if (a1[6])
  {
    if (v8)
    {
      a1[6] = v8;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      v10 = (void *)a2[7];
      v11 = (void *)a1[7];
      a1[7] = v10;
      v12 = v10;

      a1[8] = a2[8];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1D684BB78((uint64_t)(a1 + 6));
      v15 = a2[8];
      *v7 = *v9;
      a1[8] = v15;
    }
  }
  else if (v8)
  {
    a1[6] = v8;
    v13 = (void *)a2[7];
    a1[7] = v13;
    a1[8] = a2[8];
    swift_unknownObjectRetain();
    v14 = v13;
    swift_retain();
  }
  else
  {
    v16 = *v9;
    a1[8] = a2[8];
    *v7 = v16;
  }
  sub_1D648D41C();
  v18 = *(int *)(v17 + 48);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)((char *)a2 + v18);
  *((_QWORD *)v19 + 1) = *(_QWORD *)((char *)a2 + v18 + 8);
  *((_QWORD *)v19 + 2) = *(_QWORD *)((char *)a2 + v18 + 16);
  *((_QWORD *)v19 + 3) = *(_QWORD *)((char *)a2 + v18 + 24);
  *((_QWORD *)v19 + 4) = *(_QWORD *)((char *)a2 + v18 + 32);
  *((_QWORD *)v19 + 5) = *(_QWORD *)((char *)a2 + v18 + 40);
  *((_QWORD *)v19 + 6) = *(_QWORD *)((char *)a2 + v18 + 48);
  *((_QWORD *)v19 + 7) = *(_QWORD *)((char *)a2 + v18 + 56);
  *((_QWORD *)v19 + 8) = *(_QWORD *)((char *)a2 + v18 + 64);
  *((_QWORD *)v19 + 9) = *(_QWORD *)((char *)a2 + v18 + 72);
  *((_QWORD *)v19 + 10) = *(_QWORD *)((char *)a2 + v18 + 80);
  *((_QWORD *)v19 + 11) = *(_QWORD *)((char *)a2 + v18 + 88);
  v19[96] = *((_BYTE *)a2 + v18 + 96);
  v21 = *(void **)((char *)a2 + v18 + 104);
  v22 = (void *)*((_QWORD *)v19 + 13);
  *((_QWORD *)v19 + 13) = v21;
  v23 = v21;

  v24 = (void *)*((_QWORD *)v20 + 14);
  v25 = (void *)*((_QWORD *)v19 + 14);
  *((_QWORD *)v19 + 14) = v24;
  v26 = v24;

  v27 = *(_OWORD *)(v20 + 120);
  v28 = *(_OWORD *)(v20 + 136);
  *(_OWORD *)(v19 + 145) = *(_OWORD *)(v20 + 145);
  *(_OWORD *)(v19 + 136) = v28;
  *(_OWORD *)(v19 + 120) = v27;
  v19[161] = v20[161];
  v29 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
  v30 = &v19[v29];
  v31 = &v20[v29];
  v32 = sub_1D6E16784();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

uint64_t sub_1D684BB78(uint64_t a1)
{
  destroy for MagazineFeedGroupMoreActionsButtonViewModel(a1);
  return a1;
}

uint64_t sub_1D684BBAC(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  sub_1D648D41C();
  v7 = *(int *)(v6 + 48);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  v11 = *(_OWORD *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + v7 + 32);
  *(_OWORD *)(v8 + 48) = v11;
  v12 = *(_OWORD *)(a2 + v7 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(a2 + v7 + 64);
  *(_OWORD *)(v8 + 80) = v12;
  *(_BYTE *)(v8 + 96) = *(_BYTE *)(a2 + v7 + 96);
  *(_OWORD *)(v8 + 104) = *(_OWORD *)(a2 + v7 + 104);
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(a2 + v7 + 120);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(a2 + v7 + 136);
  *(_OWORD *)(v8 + 145) = *(_OWORD *)(a2 + v7 + 145);
  *(_BYTE *)(v8 + 161) = *(_BYTE *)(a2 + v7 + 161);
  v13 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_1D6E16784();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

_QWORD *sub_1D684BC80(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v5 = (void *)a1[3];
  a1[3] = a2[3];

  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[6];
  if (!a1[6])
    goto LABEL_5;
  if (!v7)
  {
    sub_1D684BB78((uint64_t)(a1 + 6));
LABEL_5:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    a1[8] = a2[8];
    goto LABEL_6;
  }
  a1[6] = v7;
  swift_unknownObjectRelease();
  v8 = (void *)a1[7];
  a1[7] = a2[7];

  a1[8] = a2[8];
  swift_release();
LABEL_6:
  sub_1D648D41C();
  v10 = *(int *)(v9 + 48);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *(_OWORD *)((char *)a2 + v10 + 16);
  *(_OWORD *)v11 = *(_OWORD *)((char *)a2 + v10);
  *((_OWORD *)v11 + 1) = v13;
  v14 = *(_OWORD *)((char *)a2 + v10 + 48);
  *((_OWORD *)v11 + 2) = *(_OWORD *)((char *)a2 + v10 + 32);
  *((_OWORD *)v11 + 3) = v14;
  v15 = *(_OWORD *)((char *)a2 + v10 + 80);
  *((_OWORD *)v11 + 4) = *(_OWORD *)((char *)a2 + v10 + 64);
  *((_OWORD *)v11 + 5) = v15;
  v11[96] = *((_BYTE *)a2 + v10 + 96);
  v16 = *(void **)((char *)a1 + v10 + 104);
  *((_QWORD *)v11 + 13) = *(_QWORD *)((char *)a2 + v10 + 104);

  v17 = (void *)*((_QWORD *)v11 + 14);
  *((_QWORD *)v11 + 14) = *((_QWORD *)v12 + 14);

  *(_OWORD *)(v11 + 120) = *(_OWORD *)(v12 + 120);
  *(_OWORD *)(v11 + 136) = *(_OWORD *)(v12 + 136);
  *(_OWORD *)(v11 + 145) = *(_OWORD *)(v12 + 145);
  v11[161] = v12[161];
  v18 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
  v19 = &v11[v18];
  v20 = &v12[v18];
  v21 = sub_1D6E16784();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t sub_1D684BDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D600E700(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1D648D41C);
}

uint64_t sub_1D684BDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D600E73C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1D648D41C);
}

uint64_t *sub_1D684BE00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      v7 = sub_1D6E1E818();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      sub_1D648D388();
      v9 = *(int *)(v8 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1D6E1F9DC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D684BEF0(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
    return swift_release();
  v3 = sub_1D6E1E818();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_1D648D388();
  v5 = a1 + *(int *)(v4 + 48);
  v6 = sub_1D6E1F9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

_QWORD *sub_1D684BF6C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    v4 = sub_1D6E1E818();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    sub_1D648D388();
    v6 = *(int *)(v5 + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1D6E1F9DC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1D684C030(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1D5E8D20C((uint64_t)a1, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      v4 = sub_1D6E1E818();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
      sub_1D648D388();
      v6 = *(int *)(v5 + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1D6E1F9DC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1D684C10C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1D6E1E818();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    sub_1D648D388();
    v8 = *(int *)(v7 + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1D6E1F9DC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1D684C1C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1D5E8D20C((uint64_t)a1, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1D6E1E818();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      sub_1D648D388();
      v8 = *(int *)(v7 + 48);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_1D6E1F9DC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1D684C29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  MEMORY[0x1E0C80A78](a1);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5E82ECC(v2, (uint64_t)v5, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  v6 = (void *)v5[3];
  v7 = v5[6];
  v8 = (void *)v5[7];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1D648D354(v7, v8);
  sub_1D648D41C();
  sub_1D5E8D20C((uint64_t)v5 + *(int *)(v9 + 48), (uint64_t (*)(_QWORD))type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes);
  v10 = *MEMORY[0x1E0DBB2B8];
  v11 = sub_1D6E1F6F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a2, v10, v11);
}

double sub_1D684C38C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  double v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (double *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5E82ECC(v1, (uint64_t)v7, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  v8 = (void *)v7[3];
  v9 = v7[6];
  v10 = (void *)v7[7];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1D648D354(v9, v10);
  sub_1D648D41C();
  sub_1D648D484((uint64_t)v7 + *(int *)(v11 + 48), (uint64_t)v5);
  v12 = *v5;
  sub_1D5E8D20C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes);
  return v12;
}

uint64_t sub_1D684C4C0()
{
  sub_1D5E6D8C0(&qword_1ED6307A8, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader, (uint64_t)&unk_1D6E96758);
  return sub_1D6E1FAB4();
}

uint64_t sub_1D684C500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_1D6E1F9DC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E82ECC(v1, (uint64_t)v8, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D6E26594();
    return swift_release();
  }
  else
  {
    sub_1D648D388();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, &v8[*(int *)(v10 + 48)], v2);
    sub_1D6E1F9C4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v11 = sub_1D6E1E818();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v8, v11);
  }
}

double sub_1D684C638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  v2 = sub_1D6E1F9DC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E82ECC(v1, (uint64_t)v8, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D6E265AC();
    v10 = v9;
    swift_release();
  }
  else
  {
    sub_1D648D388();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, &v8[*(int *)(v11 + 48)], v2);
    sub_1D6E1F9D0();
    v10 = v12;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v13 = sub_1D6E1E818();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v8, v13);
  }
  return v10;
}

uint64_t sub_1D684C79C()
{
  sub_1D5E6D8C0(&qword_1ED6307A0, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter, (uint64_t)&unk_1D6E966D0);
  return sub_1D6E1FAB4();
}

uint64_t sub_1D684C7DC()
{
  return sub_1D5E6D8C0(&qword_1ED630798, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter, (uint64_t)&unk_1D6E96698);
}

uint64_t sub_1D684C808()
{
  return sub_1D5E6D8C0(&qword_1ED62F3E0, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader, (uint64_t)&unk_1D6E96720);
}

uint64_t sub_1D684C834()
{
  return sub_1D5E6D8C0(&qword_1ED6307A8, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader, (uint64_t)&unk_1D6E96758);
}

uint64_t sub_1D684C860()
{
  return sub_1D5E6D8C0(&qword_1ED6307A0, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter, (uint64_t)&unk_1D6E966D0);
}

uint64_t sub_1D684C890()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D684C89C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 217)
  {
    v4 = *a1;
    if (v4 >= 0x27)
      return v4 - 38;
    else
      return 0;
  }
  else
  {
    v8 = sub_1D6E2444C();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1D684C910()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1D684C91C(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 217)
  {
    *result = a2 + 38;
  }
  else
  {
    v7 = sub_1D6E2444C();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for RecentStoriesTagFeedGroupConfigData()
{
  uint64_t result;

  result = qword_1ED61F400;
  if (!qword_1ED61F400)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D684C9C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D6E2444C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D684CA3C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  char v19;

  v16 = a2;
  v17 = sub_1D6E2444C();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D684CE18(0, &qword_1ED624620, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D684CDD4();
  sub_1D6E2846C();
  if (!v2)
  {
    v11 = v16;
    v19 = 1;
    sub_1D5EFD2A8(&qword_1ED5F3B28, MEMORY[0x1E0D5D920]);
    v12 = v17;
    sub_1D6E28184();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *v11 = 27;
    v13 = type metadata accessor for RecentStoriesTagFeedGroupConfigData();
    (*(void (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v11[*(int *)(v13 + 20)], v18, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D684CBF0(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1D684CE18(0, &qword_1EFFF3768, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D684CDD4();
  sub_1D6E28478();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1D5FD2CA8();
  sub_1D6E28238();
  if (!v2)
  {
    type metadata accessor for RecentStoriesTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1D6E2444C();
    sub_1D5EFD2A8(&qword_1ED5F3B20, MEMORY[0x1E0D5D918]);
    sub_1D6E28238();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D684CD5C()
{
  sub_1D684CDD4();
  return sub_1D6E28538();
}

uint64_t sub_1D684CD84()
{
  sub_1D684CDD4();
  return sub_1D6E28544();
}

uint64_t sub_1D684CDAC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1D684CA3C(a1, a2);
}

uint64_t sub_1D684CDC0(_QWORD *a1)
{
  return sub_1D684CBF0(a1);
}

unint64_t sub_1D684CDD4()
{
  unint64_t result;

  result = qword_1ED61F3D8;
  if (!qword_1ED61F3D8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96984, &type metadata for RecentStoriesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED61F3D8);
  }
  return result;
}

void sub_1D684CE18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D684CDD4();
    v7 = a3(a1, &type metadata for RecentStoriesTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for RecentStoriesTagFeedGroupConfigData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D684CEC0 + 4 * byte_1D6E96825[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D684CEF4 + 4 * byte_1D6E96820[v4]))();
}

uint64_t sub_1D684CEF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D684CEFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D684CF04);
  return result;
}

uint64_t sub_1D684CF10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D684CF18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D684CF1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D684CF24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecentStoriesTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for RecentStoriesTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1D684CF44()
{
  unint64_t result;

  result = qword_1EFFF3770;
  if (!qword_1EFFF3770)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9695C, &type metadata for RecentStoriesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3770);
  }
  return result;
}

unint64_t sub_1D684CF8C()
{
  unint64_t result;

  result = qword_1ED61F3E8;
  if (!qword_1ED61F3E8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E968CC, &type metadata for RecentStoriesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED61F3E8);
  }
  return result;
}

unint64_t sub_1D684CFD4()
{
  unint64_t result;

  result = qword_1ED61F3E0;
  if (!qword_1ED61F3E0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E968F4, &type metadata for RecentStoriesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED61F3E0);
  }
  return result;
}

uint64_t dispatch thunk of SportsUpsellStateStoreType.sportsUpsellState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SportsUpsellStateStoreType.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SportsUpsellStateStoreType.update(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t destroy for FollowingSubscriptionChangeAutoModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for FollowingSubscriptionChangeAutoModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = a2 + 40;
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v7(a1 + 40, v4, v6);
  return a1;
}

_QWORD *assignWithCopy for FollowingSubscriptionChangeAutoModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  return a1;
}

uint64_t assignWithTake for FollowingSubscriptionChangeAutoModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingSubscriptionChangeAutoModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowingSubscriptionChangeAutoModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingSubscriptionChangeAutoModifier()
{
  return &type metadata for FollowingSubscriptionChangeAutoModifier;
}

void sub_1D684D2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  _QWORD *v21;
  void *v22;
  _QWORD aBlock[6];
  _OWORD v24[5];

  v4 = v3;
  sub_1D60A9E48(0, (unint64_t *)&qword_1ED625E40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)aBlock - v12;
  v14 = *(void **)(v3 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)aBlock - v12, a1, v9);
  sub_1D615279C(v4, (uint64_t)v24);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v13, v9);
  v18 = (_OWORD *)(v17 + v16);
  v19 = v24[3];
  v18[2] = v24[2];
  v18[3] = v19;
  v18[4] = v24[4];
  v20 = v24[1];
  *v18 = v24[0];
  v18[1] = v20;
  v21 = (_QWORD *)(v17 + ((v16 + 87) & 0xFFFFFFFFFFFFFFF8));
  *v21 = a2;
  v21[1] = a3;
  aBlock[4] = sub_1D684EC38;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5EB52E8;
  aBlock[3] = &block_descriptor_122;
  v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_prepareForUseWithCompletionHandler_, v22);
  _Block_release(v22);
}

uint64_t sub_1D684D484(uint64_t a1, uint64_t *a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *);
  uint64_t v34[4];

  v32 = a4;
  v33 = a3;
  sub_1D60A9E48(0, &qword_1ED625A50, MEMORY[0x1E0DB9A28]);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - v7;
  sub_1D60A9E48(0, (unint64_t *)&qword_1ED625E40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - v11;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v29 = v13;
  v28((char *)&v28 - v11, a1, v10);
  v34[0] = *a2;
  swift_bridgeObjectRetain_n();
  sub_1D684EC98(v34);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v34[0] + 16);
  if (v14)
  {
    v15 = (unsigned __int8 *)(v34[0] + 40);
    do
    {
      v16 = *v15;
      if (v16 <= 0x3F)
      {
        v17 = *((_QWORD *)v15 - 1);
        v18 = swift_retain();
        sub_1D684D750(v18, (uint64_t)v12);
        j__swift_release(v17, v16);
      }
      v15 += 16;
      --v14;
    }
    while (v14);
  }
  swift_release();
  type metadata accessor for FollowingModel();
  sub_1D60CD264();
  sub_1D5FC2F6C();
  sub_1D5E6D8C0(&qword_1ED60E350, (uint64_t (*)(uint64_t))type metadata accessor for FollowingModel, (uint64_t)&unk_1D6E6B1F0);
  sub_1D6E1E02C();
  __swift_project_boxed_opaque_existential_1(v34, v34[3]);
  if ((sub_1D6E1D828() & 1) != 0)
  {
    v19 = (unsigned int *)MEMORY[0x1E0DB9A20];
  }
  else
  {
    sub_1D60CD2A8();
    v21 = (uint64_t)&v8[*(int *)(v20 + 48)];
    v22 = &v8[*(int *)(v20 + 64)];
    v28(v8, (uint64_t)v12, v10);
    sub_1D5E96490((uint64_t)v34, v21);
    v23 = *MEMORY[0x1E0DB7FB8];
    v24 = sub_1D6E1D7E0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
    v19 = (unsigned int *)MEMORY[0x1E0DB9A18];
  }
  v26 = v30;
  v25 = v31;
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v8, *v19, v31);
  v33(v8);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v25);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t sub_1D684D750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  void (*v47)(_QWORD *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  char *v58;
  id v59;
  char v60;
  uint64_t v61;
  id v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  void (*v98)(uint64_t *, _QWORD);
  void (*v99)(char *);
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  void (*v114)(char *, unint64_t);
  unint64_t v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  void (*v128)(uint64_t *, _QWORD);
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t);
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  id v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  unint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(char *, char *, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  void (*v183)(char *, char *, uint64_t);
  uint64_t v184;
  uint64_t v185;
  char v186;
  _QWORD v187[9];

  v162 = a2;
  sub_1D684ED88(0, (unint64_t *)&qword_1ED625530, sub_1D5FE5890, (void (*)(void))sub_1D684ED00, (void (*)(void))sub_1D684ED1C);
  MEMORY[0x1E0C80A78](v4);
  v158 = (char *)&v146 - v5;
  sub_1D5FE5890(0);
  v171 = v6;
  v170 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v159 = (char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v150 = (char *)&v146 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v153 = (char *)&v146 - v12;
  MEMORY[0x1E0C80A78](v11);
  v164 = (char *)&v146 - v13;
  sub_1D60CD0FC();
  v156 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v151 = (char *)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v152 = (uint64_t)&v146 - v18;
  MEMORY[0x1E0C80A78](v17);
  v149 = (char *)&v146 - v19;
  sub_1D684ED88(0, (unint64_t *)&qword_1ED5E0C20, (void (*)(uint64_t))type metadata accessor for FollowingTagModel, (void (*)(void))sub_1D684EE04, (void (*)(void))sub_1D684EE20);
  v168 = v20;
  v167 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v147 = (char *)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v165 = (uint64_t)&v146 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v155 = (char *)&v146 - v26;
  MEMORY[0x1E0C80A78](v25);
  v148 = (char *)&v146 - v27;
  sub_1D6092BB0(0);
  MEMORY[0x1E0C80A78](v28);
  v173 = (void (*)(char *, char *, uint64_t))((char *)&v146 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D60A9E48(0, (unint64_t *)&qword_1ED6257D0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v163 = v30;
  v174 = *(_QWORD *)(v30 - 8);
  v31 = MEMORY[0x1E0C80A78](v30);
  v157 = (char *)&v146 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v166 = (char *)&v146 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v169 = (char *)&v146 - v36;
  MEMORY[0x1E0C80A78](v35);
  v160 = (char *)&v146 - v37;
  v38 = sub_1D6E250C4();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v41 = (uint64_t *)((char *)&v146 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v172 = sub_1D6E24C80();
  v42 = *(_QWORD *)(v172 - 8);
  MEMORY[0x1E0C80A78](v172);
  v44 = (char *)&v146 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *(_QWORD *)(v2 + 64);
  v161 = v2;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 40), v45);
  v46 = *(void **)(a1 + 16);
  *v41 = v46;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v39 + 104))(v41, *MEMORY[0x1E0D5EA68], v38);
  v154 = v46;
  swift_unknownObjectRetain();
  sub_1D6E261B0();
  v47 = *(void (**)(_QWORD *, uint64_t))(v39 + 8);
  v48 = v174;
  v49 = v163;
  v47(v41, v38);
  v50 = sub_1D6E24C68();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v172);
  v51 = type metadata accessor for FollowingTagModel();
  v52 = swift_allocObject();
  *(_BYTE *)(v52 + 16) = 1;
  *(_QWORD *)(v52 + 24) = a1;
  *(_BYTE *)(v52 + 32) = v50 & 1;
  sub_1D60A9E48(0, (unint64_t *)&qword_1ED625E40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v54 = v53;
  swift_retain();
  v55 = (uint64_t)v173;
  sub_1D6E20A5C();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v55, 1, v49) != 1)
  {
    v159 = (char *)v51;
    v58 = v160;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v160, v55, v49);
    v176 = 0;
    v177 = 0xE000000000000000;
    LOBYTE(v187[0]) = 1;
    sub_1D6E27F98();
    sub_1D6E26A98();
    v59 = objc_msgSend(*(id *)(a1 + 16), sel_identifier);
    sub_1D6E26978();

    sub_1D6E26A98();
    swift_bridgeObjectRelease();
    v60 = sub_1D6E1D51C();
    swift_bridgeObjectRelease();
    if ((v60 & 1) != 0)
      goto LABEL_6;
    v61 = *(_QWORD *)(v161 + 16);
    v62 = objc_msgSend(v154, sel_identifier);
    sub_1D6E26978();

    v63 = *(void **)(v61 + OBJC_IVAR____TtC7NewsUI219SubscriptionService_subscriptionController);
    v64 = (void *)sub_1D6E26948();
    LOBYTE(v63) = objc_msgSend(v63, sel_isChannelPermanentForTagID_, v64);
    swift_bridgeObjectRelease();

    if ((v63 & 1) != 0)
    {
LABEL_6:
      (*(void (**)(char *, uint64_t))(v48 + 8))(v58, v49);
      return swift_release();
    }
    v146 = v54;
    v161 = *(_QWORD *)(v161 + 32);
    sub_1D5F7D7E8();
    v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_1D6E3C090;
    *(_QWORD *)(v83 + 32) = v52;
    v176 = v83;
    sub_1D6E26DA4();
    v84 = v176;
    v85 = sub_1D684EE04();
    v86 = sub_1D684EE20();
    v158 = (char *)v52;
    swift_retain();
    v87 = v155;
    MEMORY[0x1D8282BD8](v84, v159, v85, v86);
    v88 = v165;
    (*(void (**)(uint64_t, char *, unint64_t))(v167 + 16))(v165, v87, v168);
    v173 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v173(v169, v58, v49);
    sub_1D684ED38(&qword_1EFFD95C8, MEMORY[0x1E0DB7B90]);
    v89 = (uint64_t)v149;
    sub_1D6E26BA0();
    v90 = (_QWORD *)(v89 + *(int *)(v156 + 36));
    v91 = sub_1D684ED38((unint64_t *)&unk_1ED6257C0, MEMORY[0x1E0DB7B98]);
    v92 = *v90;
    v172 = v91;
    sub_1D6E270F8();
    v93 = v170;
    v94 = v150;
    v95 = v49;
    v96 = (uint64_t)v147;
    if (v92 != v176)
    {
      do
      {
        v97 = v90;
        v98 = (void (*)(uint64_t *, _QWORD))sub_1D6E27134();
        v99 = *(void (**)(char *))(v93 + 16);
        v100 = v164;
        v101 = v171;
        v99(v164);
        v98(&v176, 0);
        v102 = v169;
        v173(v169, (char *)v89, v95);
        sub_1D6E27104();
        (*(void (**)(char *, uint64_t))(v174 + 8))(v102, v95);
        v103 = v170;
        (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v94, v100, v101);
        v104 = v165;
        sub_1D684E948(v165, v96);
        v93 = v103;
        v105 = v95;
        (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v101);
        v106 = v167;
        v107 = v104;
        v88 = v104;
        v108 = v168;
        (*(void (**)(uint64_t, unint64_t))(v167 + 8))(v107, v168);
        (*(void (**)(uint64_t, uint64_t, unint64_t))(v106 + 32))(v88, v96, v108);
        v109 = *v97;
        sub_1D6E270F8();
        v110 = v109 == v176;
        v95 = v105;
        v90 = v97;
      }
      while (!v110);
    }
    swift_getObjectType();
    sub_1D5E8D20C(v89, (uint64_t (*)(_QWORD))sub_1D60CD0FC);
    v111 = v167;
    v112 = v148;
    v113 = v168;
    (*(void (**)(char *, uint64_t, unint64_t))(v167 + 32))(v148, v88, v168);
    v114 = *(void (**)(char *, unint64_t))(v111 + 8);
    v114(v155, v113);
    v115 = sub_1D6E1A3B4();
    v114(v112, v113);
    v168 = sub_1D61EA37C(v115);
    swift_bridgeObjectRelease();
    v116 = v160;
    v117 = v95;
    v118 = v173;
    v173(v166, v160, v95);
    v119 = v151;
    v118(v151, v116, v95);
    sub_1D6E27098();
    v120 = v156;
    *(_QWORD *)&v119[*(int *)(v156 + 36)] = v176;
    v121 = (uint64_t)v119;
    v122 = v152;
    sub_1D684FC64(v121, v152);
    v123 = (uint64_t *)(v122 + *(int *)(v120 + 36));
    v124 = *v123;
    sub_1D6E270F8();
    v125 = v153;
    v126 = v169;
    v127 = v171;
    if (v124 != v176)
    {
      do
      {
        v128 = (void (*)(uint64_t *, _QWORD))sub_1D6E27134();
        (*(void (**)(char *))(v93 + 16))(v125);
        v128(&v176, 0);
        v173(v126, (char *)v122, v117);
        sub_1D6E27104();
        (*(void (**)(char *, uint64_t))(v174 + 8))(v126, v117);
        sub_1D6E1D4EC();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v125, v127);
        v129 = *v123;
        sub_1D6E270F8();
      }
      while (v129 != v176);
    }
    v130 = v174;
    sub_1D5E8D20C(v122, (uint64_t (*)(_QWORD))sub_1D60CD0FC);
    v131 = v168;
    v132 = v168 >> 62;
    if (!(v168 >> 62))
    {
      if (*(uint64_t *)((v168 & 0xFFFFFFFFFFFFF8) + 0x10) >= 13)
        v133 = 13;
      else
        v133 = *(_QWORD *)((v168 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
      v126 = v160;
      if ((v131 & 0xC000000000000001) != 0 && v133)
      {
        v134 = 0;
        do
        {
          v135 = v134 + 1;
          sub_1D6E27ED8();
          v134 = v135;
        }
        while (v133 != v135);
      }
      if (v132)
      {
        swift_bridgeObjectRetain();
        v137 = sub_1D6E2804C();
        v132 = v138;
        v136 = v139;
        v133 = v140;
        swift_bridgeObjectRelease_n();
        if ((v133 & 1) != 0)
          goto LABEL_30;
      }
      else
      {
        v136 = 0;
        v137 = v131 & 0xFFFFFFFFFFFFFF8;
        v132 = (v131 & 0xFFFFFFFFFFFFFF8) + 32;
        v133 = (2 * v133) | 1;
        if ((v133 & 1) != 0)
        {
LABEL_30:
          sub_1D6E282F8();
          swift_unknownObjectRetain_n();
          v143 = swift_dynamicCastClass();
          if (!v143)
          {
            swift_unknownObjectRelease();
            v143 = MEMORY[0x1E0DEE9D8];
          }
          v144 = *(_QWORD *)(v143 + 16);
          swift_release();
          if (!__OFSUB__(v133 >> 1, v136))
          {
            if (v144 == (v133 >> 1) - v136)
            {
              v141 = swift_dynamicCastClass();
              v142 = v166;
              if (!v141)
              {
                swift_unknownObjectRelease();
                v141 = MEMORY[0x1E0DEE9D8];
              }
              goto LABEL_36;
            }
            goto LABEL_48;
          }
LABEL_47:
          __break(1u);
LABEL_48:
          swift_unknownObjectRelease();
        }
      }
      v141 = sub_1D60FFE4C(v137, v132, v136, v133);
      v142 = v166;
LABEL_36:
      swift_unknownObjectRelease();
      sub_1D61EA1E0(v141);
      swift_release();
      sub_1D6E1D4B0();
      swift_bridgeObjectRelease();
      sub_1D6E27098();
      sub_1D6E270F8();
      if (v176 != v187[0])
        sub_1D6E20984();
      swift_release();
      v145 = *(void (**)(char *, uint64_t))(v130 + 8);
      v145(v142, v117);
      return ((uint64_t (*)(char *, uint64_t))v145)(v126, v117);
    }
    swift_bridgeObjectRetain();
    v136 = sub_1D6E28040();
    swift_bridgeObjectRelease();
    if (v136 >= 13)
      v133 = 13;
    else
      v133 = v136;
    if ((v133 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
      v136 = sub_1D6E28040();
      swift_bridgeObjectRelease();
      if ((v136 & 0x8000000000000000) == 0)
      {
        swift_bridgeObjectRetain();
        v137 = sub_1D6E28040();
        swift_bridgeObjectRelease();
        if (v137 < (uint64_t)v133)
        {
          __break(1u);
          goto LABEL_47;
        }
        goto LABEL_51;
      }
    }
    __break(1u);
    (*(void (**)(unint64_t))(v130 + 8))(v133);
    sub_1D5E8D20C((uint64_t)v126, (uint64_t (*)(_QWORD))sub_1D60CD0FC);
    (*(void (**)(uint64_t, unint64_t))(v167 + 8))(v136, v168);
    __break(1u);
LABEL_51:
    v131 = v168;
    goto LABEL_21;
  }
  sub_1D5E8D20C(v55, (uint64_t (*)(_QWORD))sub_1D6092BB0);
  v56 = objc_msgSend(*(id *)(v161 + 8), sel_isOptedInToSiriSuggestions);
  v146 = v54;
  v57 = v52;
  if (v56)
    sub_1D6AE97DC(v187);
  else
    sub_1D6AE98F8(v187);
  v65 = v187[8];
  v173 = (void (*)(char *, char *, uint64_t))v187[7];
  v66 = v187[5];
  v67 = (void *)v187[6];
  v68 = v187[3];
  v69 = v187[4];
  v70 = (void (*)(char *, char *, uint64_t))v187[1];
  v71 = v187[2];
  v72 = v187[0];
  sub_1D5F7D7E8();
  v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_1D6E3C090;
  *(_QWORD *)(v73 + 32) = v57;
  v176 = v73;
  sub_1D6E26DA4();
  v74 = v176;
  v176 = v72;
  v177 = (unint64_t)v70;
  v178 = v71;
  v179 = v68;
  v180 = v69;
  v181 = v66;
  v75 = v67;
  v182 = v67;
  v183 = v173;
  v184 = v65;
  v185 = v74;
  v186 = 8;
  v76 = sub_1D684ED00();
  v77 = sub_1D684ED1C();
  swift_retain();
  v173 = v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v169 = v75;
  v172 = v65;
  swift_bridgeObjectRetain();
  v78 = v171;
  MEMORY[0x1D8282BC0](MEMORY[0x1E0DEE9D8], v171, v76, v77);
  type metadata accessor for FollowingModel();
  sub_1D5FC2F6C();
  sub_1D5E6D8C0(&qword_1ED60E350, (uint64_t (*)(uint64_t))type metadata accessor for FollowingModel, (uint64_t)&unk_1D6E6B1F0);
  v79 = v157;
  sub_1D6E1D468();
  v80 = v159;
  sub_1D61E9CB0();
  v81 = v163;
  sub_1D6E1D4BC();
  (*(void (**)(char *, uint64_t))(v170 + 8))(v80, v78);
  sub_1D684ED38((unint64_t *)&unk_1ED6257C0, MEMORY[0x1E0DB7B98]);
  sub_1D6E27098();
  sub_1D6E270F8();
  if (v176 == v175)
  {
    (*(void (**)(char *, uint64_t))(v174 + 8))(v79, v81);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  sub_1D6142568();
  sub_1D6E20A38();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v174 + 8))(v79, v81);
}

void sub_1D684E948(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;

  v4 = type metadata accessor for FollowingModel();
  MEMORY[0x1E0C80A78](v4);
  sub_1D684ED88(0, (unint64_t *)&qword_1ED5E0C20, (void (*)(uint64_t))type metadata accessor for FollowingTagModel, (void (*)(void))sub_1D684EE04, (void (*)(void))sub_1D684EE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_1D5FE5890(0);
  sub_1D6E1CD60();
  v6 = (char *)sub_1D684EA28 + 4 * byte_1D6E96A40[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1D684EA28()
{
  return swift_release();
}

BOOL sub_1D684EADC(uint64_t a1, uint64_t a2)
{
  return qword_1D6E96B20[*(char *)(a1 + 80)] < qword_1D6E96B20[*(char *)(a2 + 80)];
}

uint64_t sub_1D684EB04()
{
  sub_1D61527D8();
  return sub_1D6E1E164();
}

unint64_t sub_1D684EB30()
{
  unint64_t result;

  result = qword_1EFFF3780;
  if (!qword_1EFFF3780)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96A98, &type metadata for FollowingSubscriptionChangeAutoModifier);
    atomic_store(result, (unint64_t *)&qword_1EFFF3780);
  }
  return result;
}

uint64_t sub_1D684EB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D60A9E48(0, (unint64_t *)&qword_1ED625E40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 40);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D684EC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D60A9E48(0, (unint64_t *)&qword_1ED625E40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D684D484(v0 + v3, (uint64_t *)(v0 + v4), *(void (**)(char *))(v0 + ((v4 + 87) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v4 + 87) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1D684EC98(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D6266800(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1D684EE3C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1D684ED00()
{
  return sub_1D5E6D8C0(&qword_1ED6256A0, (uint64_t (*)(uint64_t))sub_1D5FE5890, MEMORY[0x1E0DB6F08]);
}

uint64_t sub_1D684ED1C()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1ED625690, (uint64_t (*)(uint64_t))sub_1D5FE5890, MEMORY[0x1E0DB6EF8]);
}

uint64_t sub_1D684ED38(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1D60A9E48(255, (unint64_t *)&qword_1ED6257D0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    result = MEMORY[0x1D82917D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D684ED88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void), void (*a5)(void))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    a4();
    a5();
    v8 = sub_1D6E1A408();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1D684EE04()
{
  return sub_1D5E6D8C0(&qword_1ED5E5530, (uint64_t (*)(uint64_t))type metadata accessor for FollowingTagModel, (uint64_t)&protocol conformance descriptor for FollowingTagModel);
}

uint64_t sub_1D684EE20()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1ED5E5520, (uint64_t (*)(uint64_t))type metadata accessor for FollowingTagModel, (uint64_t)&protocol conformance descriptor for FollowingTagModel);
}

uint64_t sub_1D684EE3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned __int8 *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;

  v3 = a1[1];
  result = sub_1D6E28274();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1D684F7E4(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v119 = result;
  v116 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v125 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v118 = MEMORY[0x1E0DEE9D8];
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_118:
      if (v11 >= 2)
      {
        v108 = *v116;
        do
        {
          v109 = v11 - 2;
          if (v11 < 2)
            goto LABEL_147;
          if (!v108)
            goto LABEL_159;
          v110 = v8;
          v111 = v8 + 32;
          v112 = *(_QWORD *)&v8[16 * v109 + 32];
          v113 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_1D684F908((unsigned __int8 *)(v108 + 16 * v112), (unsigned __int8 *)(v108 + 16 * *(_QWORD *)&v111[16 * v11 - 16]), v108 + 16 * v113, v125);
          if (v1)
            break;
          if (v113 < v112)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v110 = sub_1D62666D4((uint64_t)v110);
          if (v109 >= *((_QWORD *)v110 + 2))
            goto LABEL_149;
          v114 = &v110[16 * v109 + 32];
          *(_QWORD *)v114 = v112;
          *((_QWORD *)v114 + 1) = v113;
          v115 = *((_QWORD *)v110 + 2);
          if (v11 > v115)
            goto LABEL_150;
          v8 = v110;
          memmove(&v110[16 * v11 + 16], &v110[16 * v11 + 32], 16 * (v115 - v11));
          *((_QWORD *)v110 + 2) = v115 - 1;
          v11 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_129:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v118 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1D6E26E58();
    *(_QWORD *)(v7 + 16) = v6;
    v118 = v7;
    v125 = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v117 = *a1 + 8;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v121 = v3;
  while (1)
  {
    v123 = v9;
    v12 = v9 + 1;
    v120 = v8;
    if (v9 + 1 >= v3)
    {
      v22 = v9 + 1;
      goto LABEL_50;
    }
    v13 = v10 + 16 * v12;
    v14 = *(unsigned __int8 *)(v13 + 8);
    if (v14 > 0x3F)
    {
      v21 = v9 + 2;
      if (v9 + 2 >= v3)
        goto LABEL_49;
      v19 = 0;
    }
    else
    {
      v15 = (uint64_t *)(v10 + 16 * v9);
      v16 = *((unsigned __int8 *)v15 + 8);
      if (v16 > 0x3F)
      {
        v21 = v123 + 2;
        v3 = v121;
        if (v123 + 2 >= v121)
        {
          v32 = v123;
          if (v123 < v21)
            goto LABEL_40;
LABEL_49:
          v22 = v21;
          goto LABEL_50;
        }
        v19 = 1;
      }
      else
      {
        v17 = *(_QWORD *)v13;
        v18 = *v15;
        j__swift_retain(*v15, *((unsigned __int8 *)v15 + 8));
        j__swift_retain(v17, v14);
        v19 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v17, v18);
        j__swift_release(v18, v16);
        v20 = v17;
        v8 = v120;
        j__swift_release(v20, v14);
        v21 = v123 + 2;
        v3 = v121;
        if (v123 + 2 >= v121)
          goto LABEL_35;
      }
    }
    v23 = (unsigned __int8 *)(v117 + 16 * v21);
    v24 = v21;
    do
    {
      v21 = v24;
      v25 = *v23;
      if (v25 > 0x3F)
      {
        if (v19)
          goto LABEL_36;
      }
      else
      {
        v26 = (uint64_t *)(v10 + 16 * v12);
        v27 = *((unsigned __int8 *)v26 + 8);
        if (v27 > 0x3F)
        {
          v3 = v121;
          if (!v19)
            goto LABEL_49;
        }
        else
        {
          v28 = *((_QWORD *)v23 - 1);
          v29 = *v26;
          j__swift_retain(*v26, *((unsigned __int8 *)v26 + 8));
          j__swift_retain(v28, v25);
          v30 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v28, v29);
          j__swift_release(v29, v27);
          v31 = v28;
          v8 = v120;
          j__swift_release(v31, v25);
          v3 = v121;
          if (((v19 ^ v30) & 1) != 0)
            goto LABEL_35;
        }
      }
      v23 += 16;
      v24 = v21 + 1;
      v12 = v21;
    }
    while (v21 + 1 < v3);
    ++v21;
LABEL_35:
    v22 = v21;
    if (v19)
    {
LABEL_36:
      v32 = v123;
      if (v21 < v123)
        goto LABEL_155;
      if (v123 < v21)
      {
LABEL_40:
        v33 = 16 * v21 - 16;
        v34 = 16 * v32;
        v35 = v21;
        while (1)
        {
          if (v32 != --v35)
          {
            if (!v10)
              goto LABEL_158;
            v37 = (_OWORD *)(v10 + v34);
            v38 = (_OWORD *)(v10 + v33);
            v39 = *(_QWORD *)(v10 + v34);
            v40 = *(_BYTE *)(v10 + v34 + 8);
            if (v34 != v33 || v37 >= v38 + 1)
              *v37 = *v38;
            v36 = v10 + v33;
            *(_QWORD *)v36 = v39;
            *(_BYTE *)(v36 + 8) = v40;
          }
          ++v32;
          v33 -= 16;
          v34 += 16;
          if (v32 >= v35)
            goto LABEL_49;
        }
      }
      goto LABEL_49;
    }
LABEL_50:
    v41 = v22;
    if (v22 >= v3)
      goto LABEL_67;
    v42 = v22 - v123;
    if (__OFSUB__(v41, v123))
      goto LABEL_151;
    if (v42 >= v119)
    {
LABEL_67:
      v44 = v123;
      goto LABEL_68;
    }
    v43 = v123 + v119;
    if (__OFADD__(v123, v119))
      goto LABEL_153;
    if (v43 >= v3)
      v43 = v3;
    if (v43 < v123)
      break;
    v44 = v123;
    if (v41 != v43)
    {
      v45 = (unsigned __int8 *)(v10 + 16 * v41);
      v126 = v10;
      v122 = v43;
      do
      {
        v124 = v45;
        v127 = v41;
        do
        {
          v46 = v45[8];
          if (v46 > 0x3F)
            break;
          v47 = *(v45 - 8);
          if (v47 <= 0x3F)
          {
            v48 = *(_QWORD *)v45;
            v130 = *(_QWORD *)v45;
            v49 = *(void **)(*(_QWORD *)v45 + 16);
            v131 = *((_QWORD *)v45 - 2);
            v129 = *(v45 - 8);
            j__swift_retain(v131, v47);
            j__swift_retain(v48, v46);
            v50 = objc_msgSend(v49, sel_name);
            sub_1D6E26978();

            sub_1D6E269FC();
            swift_bridgeObjectRelease();
            v51 = objc_msgSend(v49, sel_identifier);
            sub_1D6E26978();

            sub_1D6E26A98();
            swift_bridgeObjectRelease();
            v52 = *(void **)(v131 + 16);
            v53 = objc_msgSend(v52, sel_name);
            sub_1D6E26978();

            sub_1D6E269FC();
            swift_bridgeObjectRelease();
            v54 = objc_msgSend(v52, sel_identifier);
            sub_1D6E26978();

            sub_1D6E26A98();
            v10 = v126;
            swift_bridgeObjectRelease();
            sub_1D5F5EA98();
            v55 = sub_1D6E27CBC();
            swift_bridgeObjectRelease();
            v41 = v127;
            swift_bridgeObjectRelease();
            j__swift_release(v131, v129);
            j__swift_release(v130, v46);
            if (v55 != -1)
              break;
          }
          if (!v10)
            goto LABEL_156;
          v56 = *(_QWORD *)v45;
          v57 = v45[8];
          *(_OWORD *)v45 = *((_OWORD *)v45 - 1);
          *(v45 - 8) = v57;
          *((_QWORD *)v45 - 2) = v56;
          v45 -= 16;
          ++v44;
        }
        while (v41 != v44);
        ++v41;
        v44 = v123;
        v45 = v124 + 16;
      }
      while (v41 != v122);
      v41 = v122;
      v8 = v120;
      if (v122 < v123)
        goto LABEL_146;
      goto LABEL_69;
    }
LABEL_68:
    if (v41 < v44)
      goto LABEL_146;
LABEL_69:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1D6265E58(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v59 = *((_QWORD *)v8 + 2);
    v58 = *((_QWORD *)v8 + 3);
    v11 = v59 + 1;
    v128 = v41;
    if (v59 >= v58 >> 1)
      v8 = sub_1D6265E58((char *)(v58 > 1), v59 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11;
    v60 = v8 + 32;
    v61 = &v8[16 * v59 + 32];
    *(_QWORD *)v61 = v44;
    *((_QWORD *)v61 + 1) = v128;
    if (v59)
    {
      while (1)
      {
        v62 = v11 - 1;
        if (v11 >= 4)
        {
          v67 = &v60[16 * v11];
          v68 = *((_QWORD *)v67 - 8);
          v69 = *((_QWORD *)v67 - 7);
          v73 = __OFSUB__(v69, v68);
          v70 = v69 - v68;
          if (v73)
            goto LABEL_135;
          v72 = *((_QWORD *)v67 - 6);
          v71 = *((_QWORD *)v67 - 5);
          v73 = __OFSUB__(v71, v72);
          v65 = v71 - v72;
          v66 = v73;
          if (v73)
            goto LABEL_136;
          v74 = v11 - 2;
          v75 = &v60[16 * v11 - 32];
          v77 = *(_QWORD *)v75;
          v76 = *((_QWORD *)v75 + 1);
          v73 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          if (v73)
            goto LABEL_138;
          v73 = __OFADD__(v65, v78);
          v79 = v65 + v78;
          if (v73)
            goto LABEL_141;
          if (v79 >= v70)
          {
            v97 = &v60[16 * v62];
            v99 = *(_QWORD *)v97;
            v98 = *((_QWORD *)v97 + 1);
            v73 = __OFSUB__(v98, v99);
            v100 = v98 - v99;
            if (v73)
              goto LABEL_145;
            v90 = v65 < v100;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v91 = *((_QWORD *)v8 + 4);
            v92 = *((_QWORD *)v8 + 5);
            v73 = __OFSUB__(v92, v91);
            v84 = v92 - v91;
            v85 = v73;
            goto LABEL_99;
          }
          v64 = *((_QWORD *)v8 + 4);
          v63 = *((_QWORD *)v8 + 5);
          v73 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          v66 = v73;
        }
        if ((v66 & 1) != 0)
          goto LABEL_137;
        v74 = v11 - 2;
        v80 = &v60[16 * v11 - 32];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v83 = __OFSUB__(v81, v82);
        v84 = v81 - v82;
        v85 = v83;
        if (v83)
          goto LABEL_140;
        v86 = &v60[16 * v62];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v73 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v73)
          goto LABEL_143;
        if (__OFADD__(v84, v89))
          goto LABEL_144;
        if (v84 + v89 >= v65)
        {
          v90 = v65 < v89;
LABEL_105:
          if (v90)
            v62 = v74;
          goto LABEL_107;
        }
LABEL_99:
        if ((v85 & 1) != 0)
          goto LABEL_139;
        v93 = &v60[16 * v62];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v73 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v73)
          goto LABEL_142;
        if (v96 < v84)
          goto LABEL_14;
LABEL_107:
        v101 = v62 - 1;
        if (v62 - 1 >= v11)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10)
          goto LABEL_157;
        v102 = v8;
        v103 = &v60[16 * v101];
        v104 = *(_QWORD *)v103;
        v105 = &v60[16 * v62];
        v106 = *((_QWORD *)v105 + 1);
        sub_1D684F908((unsigned __int8 *)(v10 + 16 * *(_QWORD *)v103), (unsigned __int8 *)(v10 + 16 * *(_QWORD *)v105), v10 + 16 * v106, v125);
        if (v1)
          goto LABEL_129;
        if (v106 < v104)
          goto LABEL_132;
        if (v62 > *((_QWORD *)v102 + 2))
          goto LABEL_133;
        *(_QWORD *)v103 = v104;
        *(_QWORD *)&v60[16 * v101 + 8] = v106;
        v107 = *((_QWORD *)v102 + 2);
        if (v62 >= v107)
          goto LABEL_134;
        v8 = v102;
        v11 = v107 - 1;
        memmove(&v60[16 * v62], v105 + 16, 16 * (v107 - 1 - v62));
        *((_QWORD *)v102 + 2) = v107 - 1;
        if (v107 <= 2)
          goto LABEL_14;
      }
    }
    v11 = 1;
LABEL_14:
    v3 = v121;
    v9 = v128;
    if (v128 >= v121)
      goto LABEL_118;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1D6E28004();
  __break(1u);
  return result;
}

uint64_t sub_1D684F7E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v17 = *a4;
    v5 = *a4 + 16 * a3;
LABEL_5:
    v16 = v5;
    v6 = v15;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v5 + 8);
      if (v7 > 0x3F)
        goto LABEL_4;
      v8 = *(_QWORD *)(v5 - 16);
      v9 = *(unsigned __int8 *)(v5 - 8);
      if (v9 <= 0x3F)
      {
        v10 = *(_QWORD *)v5;
        j__swift_retain(*(_QWORD *)(v5 - 16), *(unsigned __int8 *)(v5 - 8));
        j__swift_retain(v10, v7);
        v11 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v10, v8);
        j__swift_release(v8, v9);
        result = j__swift_release(v10, v7);
        if (!v11)
        {
LABEL_4:
          ++v4;
          v5 = v16 + 16;
          if (v4 == a2)
            return result;
          goto LABEL_5;
        }
      }
      if (!v17)
        break;
      v12 = *(_QWORD *)v5;
      v13 = *(_BYTE *)(v5 + 8);
      *(_OWORD *)v5 = *(_OWORD *)(v5 - 16);
      *(_BYTE *)(v5 - 8) = v13;
      *(_QWORD *)(v5 - 16) = v12;
      v5 -= 16;
      if (v4 == ++v6)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D684F908(unsigned __int8 *a1, unsigned __int8 *__src, unint64_t a3, char *__dst)
{
  unint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  char *v20;
  BOOL v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  char *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t result;
  char *v33;
  BOOL v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  unsigned __int8 *v40;

  v4 = a3;
  v5 = __src;
  v6 = a1;
  v7 = __src - a1;
  v8 = __src - a1 + 15;
  if (__src - a1 >= 0)
    v8 = __src - a1;
  v9 = v8 >> 4;
  v10 = a3 - (_QWORD)__src;
  v11 = a3 - (_QWORD)__src + 15;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v11 = a3 - (_QWORD)__src;
  v12 = v11 >> 4;
  v40 = a1;
  v39 = __dst;
  v33 = __dst;
  if (v9 >= v12)
  {
    if (v10 >= -15)
    {
      v24 = 16 * v12;
      if (__dst != (char *)__src || &__src[v24] <= (unsigned __int8 *)__dst)
      {
        memmove(__dst, __src, 16 * v12);
        __dst = v33;
        v6 = a1;
      }
      v25 = &__dst[v24];
      v38 = &__dst[v24];
      v40 = v5;
      if (v6 < v5 && (unint64_t)(v10 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        v26 = (unsigned __int8 *)(v4 - 16);
        while (1)
        {
          v27 = v26 + 16;
          v28 = *((_QWORD *)v25 - 2);
          v29 = *(v25 - 8);
          if (v29 > 0x3F)
            goto LABEL_41;
          v30 = v5 - 16;
          v31 = *(v5 - 8);
          if (v31 > 0x3F)
            goto LABEL_37;
          v37 = *((_QWORD *)v5 - 2);
          j__swift_retain(v37, v31);
          j__swift_retain(v28, v29);
          v35 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v28, v37);
          j__swift_release(v37, v31);
          j__swift_release(v28, v29);
          __dst = v33;
          v6 = a1;
          if (v35)
          {
LABEL_37:
            if (v27 != v5 || v26 >= v5)
              *(_OWORD *)v26 = *(_OWORD *)v30;
            v40 = v5 - 16;
            if (v30 <= v6)
              goto LABEL_47;
          }
          else
          {
LABEL_41:
            v38 = v25 - 16;
            if (v27 < (unsigned __int8 *)v25 || v26 >= (unsigned __int8 *)v25 || v27 != (unsigned __int8 *)v25)
              *(_OWORD *)v26 = *((_OWORD *)v25 - 1);
            v30 = v5;
            v25 -= 16;
            if (v5 <= v6)
              goto LABEL_47;
          }
          v26 -= 16;
          v5 = v30;
          if (v25 <= __dst)
            goto LABEL_47;
        }
      }
      goto LABEL_47;
    }
  }
  else if (v7 >= -15)
  {
    v13 = 16 * v9;
    if (__dst != (char *)a1 || &a1[v13] <= (unsigned __int8 *)__dst)
    {
      memmove(__dst, a1, v13);
      __dst = v33;
      v6 = a1;
    }
    v14 = &__dst[v13];
    v38 = &__dst[v13];
    if ((unint64_t)v5 < v4 && (unint64_t)(v7 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      v36 = v4;
      do
      {
        v15 = v5[8];
        if (v15 > 0x3F)
          goto LABEL_20;
        v16 = __dst[8];
        if (v16 > 0x3F)
          goto LABEL_16;
        v17 = *(_QWORD *)v5;
        v18 = *(_QWORD *)__dst;
        v19 = v6;
        v20 = __dst;
        j__swift_retain(*(_QWORD *)__dst, __dst[8]);
        j__swift_retain(v17, v15);
        v21 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v17, v18);
        j__swift_release(v18, v16);
        v22 = v17;
        v4 = v36;
        j__swift_release(v22, v15);
        v6 = v19;
        __dst = v20;
        if (v21)
        {
LABEL_16:
          v23 = v5 + 16;
          if (v6 < v5 || v6 >= v23 || v6 != v5)
            *(_OWORD *)v6 = *(_OWORD *)v5;
        }
        else
        {
LABEL_20:
          if (v6 != (unsigned __int8 *)__dst)
            *(_OWORD *)v6 = *(_OWORD *)__dst;
          __dst += 16;
          v39 = __dst;
          v23 = v5;
        }
        v6 += 16;
        if (__dst >= v14)
          break;
        v5 = v23;
      }
      while ((unint64_t)v23 < v4);
      v40 = v6;
    }
LABEL_47:
    sub_1D6266428((void **)&v40, (const void **)&v39, &v38);
    return 1;
  }
  result = sub_1D6E280A0();
  __break(1u);
  return result;
}

uint64_t sub_1D684FC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D60CD0FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D684FCA8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D684FCF4()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D684FD5C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D684FD94()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D684FE50(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1D684FE98()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D684FF40(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D684FF84()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D684FFE8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6850020()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D68500C8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6850114()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D68501D0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6850214()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D68502A4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D68502F0()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D6850350(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D685039C()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D6850450(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6850498()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D68504E8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D685052C()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D6850608(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6850640()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D68506E0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6850720()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D68507B8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D68507F0()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D6850898(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D68508D8()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D68509D4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6850A14()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D6850AC4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6850B0C()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D6850B80(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6850BC8()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D6850CB8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1D6850D00()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D6850DE0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6850E20()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D6850EB4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6850EF0()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D685100C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D6851050()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D68510E4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D685112C()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D68511C8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D685120C()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D68512B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  BOOL v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  uint64_t i;
  int v15;
  int v16;
  int v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    while (1)
    {
      v4 = a1 + 32 + 16 * v3;
      v5 = *(_QWORD *)v4;
      v6 = *(_BYTE *)(v4 + 8);
      v7 = a2 + 32 + 16 * v3;
      v8 = *(_QWORD *)v7;
      v9 = *(_BYTE *)(v7 + 8);
      if ((v6 & 1) != 0)
        break;
      if ((v9 & 1) != 0)
        return 0;
      v10 = *(_QWORD *)(v5 + 16);
      if (v10 != *(_QWORD *)(v8 + 16))
        return 0;
      if (v10)
        v11 = v5 == v8;
      else
        v11 = 1;
      if (!v11)
      {
        if (*(unsigned __int8 *)(v5 + 32) != *(unsigned __int8 *)(v8 + 32))
          return 0;
        if (v10 != 1)
        {
          if (*(unsigned __int8 *)(v5 + 33) != *(unsigned __int8 *)(v8 + 33))
            return 0;
          v12 = (unsigned __int8 *)(v5 + 34);
          v13 = (unsigned __int8 *)(v8 + 34);
          for (i = v10 - 2; i; --i)
          {
            v16 = *v12++;
            v15 = v16;
            v17 = *v13++;
            if (v15 != v17)
              return 0;
          }
        }
      }
      if (++v3 == v2)
        return 1;
    }
    if ((v9 & 1) != 0)
      __asm { BR              X10 }
    return 0;
  }
  return 1;
}

BOOL sub_1D6851508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return 0;
  v3 = (unsigned __int8 *)(a1 + 33);
  v4 = (unsigned __int8 *)(a2 + 33);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1D6851574(uint64_t a1, uint64_t a2)
{
  return sub_1D5F6BBFC(a1, a2, (uint64_t (*)(_QWORD))sub_1D5FE76BC, (void (*)(_QWORD))sub_1D6863094);
}

uint64_t sub_1D6851588(uint64_t a1, uint64_t a2)
{
  return sub_1D685319C(a1, a2, type metadata accessor for MagazineCategoryConfig, (uint64_t (*)(char *, char *))sub_1D61E60F4);
}

uint64_t sub_1D685159C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4];
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1D68512B8(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
    return 0;
  v8 = a1 + 5;
  v9 = a2 + 5;
  v10 = v2 - 1;
  do
  {
    v11 = v10 == 0;
    if (!v10)
      break;
    v13 = *v8++;
    v12 = v13;
    v14 = *v9++;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1D68512B8(v12, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v10;
  }
  while ((v15 & 1) != 0);
  return v11;
}

uint64_t sub_1D6851698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  double v6;
  double v7;
  char v8;
  double v9;
  double v10;
  char v11;
  double v12;
  char v13;
  double v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  char v22;
  char v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v5 = *(_BYTE *)(a1 + 80);
    v6 = *(double *)(a1 + 72);
    v7 = *(double *)(a1 + 56);
    v8 = *(_BYTE *)(a1 + 48);
    v9 = *(double *)(a1 + 40);
    v10 = *(double *)(a2 + 40);
    v11 = *(_BYTE *)(a2 + 48);
    v12 = *(double *)(a2 + 56);
    v13 = *(_BYTE *)(a2 + 64);
    v14 = *(double *)(a2 + 72);
    v22 = *(_BYTE *)(a2 + 80);
    v23 = *(_BYTE *)(a1 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1D6E21AAC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
      v16 = 0;
      while (1)
      {
        if ((v8 & 1) != 0)
        {
          if ((v11 & 1) == 0)
            return 0;
        }
        else if (v11 & 1 | (v9 != v10))
        {
          return 0;
        }
        if ((v23 & 1) != 0)
        {
          if ((v13 & 1) == 0)
            return 0;
        }
        else if (v13 & 1 | (v7 != v12))
        {
          return 0;
        }
        if ((v5 & 1) != 0)
        {
          if ((v22 & 1) == 0)
            return 0;
        }
        else if (v22 & 1 | (v6 != v14))
        {
          return 0;
        }
        if (!--v2)
          break;
        v5 = *(_BYTE *)(a1 + v16 + 136);
        v21 = v16 + 56;
        v17 = *(_BYTE *)(a1 + v16 + 120);
        v8 = *(_BYTE *)(a1 + v16 + 104);
        v6 = *(double *)(a1 + v16 + 128);
        v7 = *(double *)(a1 + v16 + 112);
        v9 = *(double *)(a1 + v16 + 96);
        v18 = a2 + v16;
        v10 = *(double *)(v18 + 96);
        v11 = *(_BYTE *)(v18 + 104);
        v12 = *(double *)(v18 + 112);
        v13 = *(_BYTE *)(v18 + 120);
        v14 = *(double *)(v18 + 128);
        v22 = *(_BYTE *)(v18 + 136);
        v23 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = sub_1D6E21AAC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        v16 = v21;
        if ((v19 & 1) == 0)
          return result;
      }
      return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1D6851880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t result;
  uint64_t v39;
  unint64_t v40;
  BOOL v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  uint64_t v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  void *v112;
  void *v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  void *v117;
  char v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  uint64_t (*v127)(_QWORD);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  char *v142;
  _QWORD *v143;
  void *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  void *v167;
  uint64_t v168;
  void *v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  void *v179;

  v153 = type metadata accessor for ShortcutIconURL();
  v4 = MEMORY[0x1E0C80A78](v153);
  v162 = (uint64_t)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v149 = (uint64_t)&v129 - v6;
  sub_1D5F991BC(0, (unint64_t *)&qword_1EFFE4350, (void (*)(uint64_t))type metadata accessor for ShortcutIcon);
  v8 = v7;
  v9 = MEMORY[0x1E0C80A78](v7);
  v163 = (uint64_t)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v129 - v11;
  v13 = type metadata accessor for ShortcutIcon();
  v160 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v154 = (uint64_t *)((char *)&v129 - v18);
  v19 = MEMORY[0x1E0C80A78](v17);
  v151 = (uint64_t)&v129 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v150 = (uint64_t *)((char *)&v129 - v22);
  MEMORY[0x1E0C80A78](v21);
  v157 = (uint64_t)&v129 - v23;
  sub_1D62876F0();
  MEMORY[0x1E0C80A78](v24);
  v158 = (uint64_t)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5F991BC(0, (unint64_t *)&qword_1EFFDF868, v26);
  v159 = v27;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v129 - v28;
  v161 = type metadata accessor for ShortcutCategory();
  v30 = MEMORY[0x1E0C80A78](v161);
  v32 = (uint64_t *)((char *)&v129 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v30);
  v35 = (uint64_t *)((char *)&v129 - v34);
  v36 = *(_QWORD *)(a1 + 16);
  if (v36 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v36 || a1 == a2)
    return 1;
  v37 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v137 = *(_QWORD *)(v33 + 72);
  v143 = v32;
  v147 = (char *)&v129 - v34;
  v148 = v16;
  v139 = a2;
  v138 = a1;
  v146 = v12;
  v145 = v8;
  v152 = v13;
  v142 = v29;
  while (1)
  {
    v156 = v36;
    v39 = a1 + v37;
    v40 = v37;
    sub_1D68540DC(v39, (uint64_t)v35);
    v155 = v40;
    sub_1D68540DC(a2 + v40, (uint64_t)v32);
    v41 = *v35 == *v32 && v35[1] == v32[1];
    if (!v41 && (sub_1D6E282C8() & 1) == 0)
      goto LABEL_66;
    v42 = v35[2] == v32[2] && v35[3] == v32[3];
    if (!v42 && (sub_1D6E282C8() & 1) == 0)
      goto LABEL_66;
    v43 = *(int *)(v161 + 24);
    v44 = (uint64_t)v32 + v43;
    v45 = (uint64_t)&v29[*(int *)(v159 + 48)];
    sub_1D5E82ECC((uint64_t)v35 + v43, (uint64_t)v29, (uint64_t (*)(_QWORD))sub_1D62876F0);
    sub_1D5E82ECC(v44, v45, (uint64_t (*)(_QWORD))sub_1D62876F0);
    v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48);
    if (v46((uint64_t)v29, 1, v13) != 1)
    {
      v49 = (uint64_t)v29;
      v50 = v158;
      sub_1D5E82ECC(v49, v158, (uint64_t (*)(_QWORD))sub_1D62876F0);
      if (v46(v45, 1, v13) == 1)
      {
        sub_1D5E8D20C(v50, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
        v29 = v142;
LABEL_53:
        sub_1D66CB490((uint64_t)v29, (unint64_t *)&qword_1EFFDF868, (void (*)(uint64_t))sub_1D62876F0);
        goto LABEL_66;
      }
      v51 = v45;
      v52 = v157;
      sub_1D5F0D758(v51, v157, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
      v53 = &v12[*(int *)(v8 + 48)];
      sub_1D5E82ECC(v50, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
      sub_1D5E82ECC(v52, (uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v54 = v151;
        sub_1D5E82ECC((uint64_t)v12, v151, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v55 = v149;
          sub_1D5F0D758((uint64_t)v53, v149, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIconURL);
          v56 = _s7NewsUI215ShortcutIconURLV2eeoiySbAC_ACtFZ_0(v54, v55);
          sub_1D5E8D20C(v55, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIconURL);
          sub_1D5E8D20C(v54, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIconURL);
          sub_1D5E8D20C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
          v57 = v158;
          v29 = v142;
          v48 = (uint64_t)v148;
          if ((v56 & 1) == 0)
            goto LABEL_64;
LABEL_29:
          sub_1D5E8D20C(v157, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
          sub_1D5E8D20C(v57, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
          goto LABEL_30;
        }
        sub_1D5E8D20C(v54, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIconURL);
      }
      else
      {
        v58 = v150;
        sub_1D5E82ECC((uint64_t)v12, (uint64_t)v150, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
        v59 = v58[1];
        v60 = (void *)v58[2];
        v61 = (void *)v58[3];
        v62 = v58[4];
        v63 = v58[5];
        v144 = (void *)v58[6];
        v64 = (void *)v58[7];
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          v65 = *v58;
          v66 = v64;
          v141 = v64;
          v67 = *(_QWORD *)v53;
          v68 = *((_QWORD *)v53 + 1);
          v70 = (void *)*((_QWORD *)v53 + 2);
          v69 = (void *)*((_QWORD *)v53 + 3);
          v72 = *((_QWORD *)v53 + 4);
          v71 = (void *)*((_QWORD *)v53 + 5);
          v73 = (void *)*((_QWORD *)v53 + 6);
          v74 = *((_QWORD *)v53 + 7);
          v172 = v65;
          v173 = v59;
          v136 = v60;
          v174 = v60;
          v175 = v61;
          v176 = v62;
          v177 = v63;
          v140 = v63;
          v178 = v144;
          v179 = v66;
          v164 = v67;
          v165 = v68;
          v166 = v70;
          v167 = v69;
          v168 = v72;
          v169 = v71;
          v170 = v73;
          v171 = v74;
          LODWORD(v135) = _s7NewsUI223ShortcutIconSystemImageV2eeoiySbAC_ACtFZ_0(&v172, &v164);
          swift_bridgeObjectRelease();
          sub_1D5FF67C4(v70, v69);
          swift_bridgeObjectRelease();
          sub_1D5FF67C4(v136, v61);
          sub_1D5E8D20C((uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
          v32 = v143;
          v35 = v147;
          v48 = (uint64_t)v148;
          v8 = v145;
          v57 = v158;
          v29 = v142;
          if ((v135 & 1) == 0)
            goto LABEL_64;
          goto LABEL_29;
        }
        swift_bridgeObjectRelease();
        sub_1D5FF67C4(v60, v61);
        v32 = v143;
        v35 = v147;
      }
      v29 = v142;
      sub_1D66CB490((uint64_t)v12, (unint64_t *)&qword_1EFFE4350, (void (*)(uint64_t))type metadata accessor for ShortcutIcon);
      v57 = v158;
LABEL_64:
      sub_1D5E8D20C(v157, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
      sub_1D5E8D20C(v57, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
      v127 = (uint64_t (*)(_QWORD))sub_1D62876F0;
      v128 = (uint64_t)v29;
      goto LABEL_65;
    }
    v47 = v46(v45, 1, v13);
    v48 = (uint64_t)v148;
    if (v47 != 1)
      goto LABEL_53;
LABEL_30:
    sub_1D5E8D20C((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1D62876F0);
    v75 = *(int *)(v161 + 28);
    v76 = (uint64_t)v32 + v75;
    v77 = (uint64_t *)(v163 + *(int *)(v8 + 48));
    sub_1D5E82ECC((uint64_t)v35 + v75, v163, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
    sub_1D5E82ECC(v76, (uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    v99 = v154;
    sub_1D5E82ECC(v163, (uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
    v100 = v99[1];
    v101 = (void *)v99[2];
    v103 = (void *)v99[3];
    v102 = v99[4];
    v105 = v99[5];
    v104 = (void *)v99[6];
    v106 = (void *)v99[7];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      sub_1D5FF67C4(v101, v103);
      v32 = v143;
      v35 = v147;
      goto LABEL_56;
    }
    v107 = *v99;
    v108 = v106;
    v144 = v106;
    v109 = *v77;
    v110 = v77[1];
    v111 = v104;
    v141 = v104;
    v113 = (void *)v77[2];
    v112 = (void *)v77[3];
    v114 = v77[4];
    v136 = (void *)v77[5];
    v115 = (void *)v77[6];
    v116 = v77[7];
    v135 = v115;
    v172 = v107;
    v173 = v100;
    v174 = v101;
    v175 = v103;
    v176 = v102;
    v177 = v105;
    v178 = v111;
    v179 = v108;
    v164 = v109;
    v165 = v110;
    v166 = v113;
    v167 = v112;
    v168 = v114;
    v169 = v136;
    v170 = v115;
    v171 = v116;
    LODWORD(v140) = _s7NewsUI223ShortcutIconSystemImageV2eeoiySbAC_ACtFZ_0(&v172, &v164);
    swift_bridgeObjectRelease();
    v117 = v113;
    v29 = v142;
    sub_1D5FF67C4(v117, v112);
    swift_bridgeObjectRelease();
    sub_1D5FF67C4(v101, v103);
    v32 = v143;
    v35 = v147;
    if ((v140 & 1) == 0)
      goto LABEL_60;
LABEL_8:
    sub_1D5E8D20C(v163, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
    sub_1D5E8D20C((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutCategory);
    sub_1D5E8D20C((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutCategory);
    v37 = v155 + v137;
    result = 1;
    v36 = v156 - 1;
    a2 = v139;
    a1 = v138;
    v12 = v146;
    v8 = v145;
    v13 = v152;
    if (v156 == 1)
      return result;
  }
  sub_1D5E82ECC(v163, v48, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1D5E8D20C(v48, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIconURL);
LABEL_56:
    sub_1D66CB490(v163, (unint64_t *)&qword_1EFFE4350, (void (*)(uint64_t))type metadata accessor for ShortcutIcon);
    goto LABEL_66;
  }
  v78 = v162;
  sub_1D5F0D758((uint64_t)v77, v162, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIconURL);
  v79 = MEMORY[0x1D827E39C](v48, v78);
  v80 = v153;
  if ((v79 & 1) == 0
    || (MEMORY[0x1D827E39C](v48 + *(int *)(v153 + 20), v162 + *(int *)(v153 + 20)) & 1) == 0
    || (MEMORY[0x1D827E39C](v48 + *(int *)(v80 + 24), v162 + *(int *)(v80 + 24)) & 1) == 0)
  {
    goto LABEL_59;
  }
  v81 = *(int *)(v80 + 28);
  v82 = *(void **)(v48 + v81);
  v141 = *(void **)(v48 + v81 + 8);
  v83 = *(void **)(v48 + v81 + 16);
  v144 = *(void **)(v48 + v81 + 24);
  v84 = *(_QWORD *)(v48 + v81 + 40);
  v140 = *(_QWORD *)(v48 + v81 + 32);
  v85 = v162 + v81;
  v87 = *(void **)v85;
  v86 = *(void **)(v85 + 8);
  v136 = *(void **)(v85 + 16);
  v133 = *(void **)(v85 + 24);
  v88 = *(_QWORD *)(v85 + 32);
  v89 = *(_QWORD *)(v85 + 40);
  if (!v82)
  {
    if (v87)
      goto LABEL_57;
LABEL_7:
    sub_1D5E8D20C(v162, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIconURL);
    sub_1D5E8D20C(v48, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIconURL);
    v35 = v147;
    goto LABEL_8;
  }
  if (v87)
  {
    v90 = v87;
    v132 = *(_QWORD *)(v85 + 32);
    sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F47A0);
    v130 = v89;
    v135 = v86;
    v91 = v141;
    v92 = v82;
    v134 = v83;
    sub_1D5FF677C(v82, v141);
    v93 = v134;
    v94 = v84;
    sub_1D5FF677C(v92, v91);
    v95 = v87;
    v96 = v133;
    v97 = v132;
    v98 = v130;
    sub_1D5FF677C(v95, v135);
    v131 = v92;
    if ((sub_1D6E27B78() & 1) == 0
      || (sub_1D6E27B78() & 1) == 0
      || (v93 != v136 || v144 != v96) && (sub_1D6E282C8() & 1) == 0)
    {

      v32 = v143;
      v48 = (uint64_t)v148;
LABEL_51:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v121 = v141;

      v122 = v131;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v123 = v122;
      v124 = v121;
      goto LABEL_58;
    }
    if (v140 == v97 && v94 == v98)
    {

      v32 = v143;
      v48 = (uint64_t)v148;
    }
    else
    {
      v118 = sub_1D6E282C8();

      v32 = v143;
      v48 = (uint64_t)v148;
      if ((v118 & 1) == 0)
        goto LABEL_51;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v119 = v141;

    v120 = v131;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1D5FF67C4(v120, v119);
    goto LABEL_7;
  }
LABEL_57:
  v161 = (uint64_t)v87;
  v125 = v86;
  v135 = v86;
  v126 = v141;
  v131 = v82;
  v132 = v88;
  sub_1D5FF677C(v82, v141);
  sub_1D5FF677C(v87, v125);
  v32 = v143;
  sub_1D5FF67C4(v131, v126);
  v123 = (void *)v161;
  v124 = v135;
LABEL_58:
  sub_1D5FF67C4(v123, v124);
  v35 = v147;
LABEL_59:
  sub_1D5E8D20C(v162, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIconURL);
  sub_1D5E8D20C(v48, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIconURL);
LABEL_60:
  v127 = (uint64_t (*)(_QWORD))type metadata accessor for ShortcutIcon;
  v128 = v163;
LABEL_65:
  sub_1D5E8D20C(v128, v127);
LABEL_66:
  sub_1D5E8D20C((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutCategory);
  sub_1D5E8D20C((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutCategory);
  return 0;
}

uint64_t sub_1D68527CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *v4;
  double v5;
  char v6;
  double v7;
  int v8;
  uint64_t result;
  _BOOL4 v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (double *)(a1 + 40);
    v4 = (double *)(a2 + 40);
    do
    {
      v5 = *(v3 - 1);
      v6 = *(_BYTE *)v3;
      v7 = *(v4 - 1);
      v8 = *(unsigned __int8 *)v4;
      result = 0;
      if (*(char *)v3 < 0)
      {
        if ((v8 & 0x80) == 0)
          return result;
        v10 = (v6 & 1) == 0;
        if (v5 != v7)
          return result;
      }
      else
      {
        if ((v8 & 0x80) != 0)
          return result;
        v10 = (v6 & 1) == 0;
        if (*(_QWORD *)&v5 != *(_QWORD *)&v7)
          return result;
      }
      if (((v10 ^ v8) & 1) == 0)
        return result;
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1D6852868(uint64_t a1, uint64_t a2)
{
  return sub_1D685319C(a1, a2, type metadata accessor for MagazineCategoryConfig.Channel, (uint64_t (*)(char *, char *))sub_1D61E6120);
}

uint64_t sub_1D68528AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v4 = type metadata accessor for PuzzleSettingsItem();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v10 = (uint64_t *)((char *)&v23 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_30:
    v19 = 0;
    return v19 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_1D5E82ECC(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleSettingsItem);
      sub_1D5E82ECC(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleSettingsItem);
      v15 = *v10 == *v7 && v10[1] == v7[1];
      if (!v15 && (sub_1D6E282C8() & 1) == 0)
        break;
      v16 = v10[2] == v7[2] && v10[3] == v7[3];
      if (!v16 && (sub_1D6E282C8() & 1) == 0)
        break;
      v17 = v10[5];
      v18 = v7[5];
      if (v17)
      {
        if (!v18 || (v10[4] != v7[4] || v17 != v18) && (sub_1D6E282C8() & 1) == 0)
          break;
      }
      else if (v18)
      {
        break;
      }
      v19 = sub_1D65FE2C4((uint64_t)v10 + *(int *)(v4 + 28), (uint64_t)v7 + *(int *)(v4 + 28));
      sub_1D5E8D20C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleSettingsItem);
      sub_1D5E8D20C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleSettingsItem);
      v21 = v14-- != 0;
      if ((v19 & 1) != 0)
      {
        v12 += v13;
        if (v21)
          continue;
      }
      return v19 & 1;
    }
    sub_1D5E8D20C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleSettingsItem);
    sub_1D5E8D20C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleSettingsItem);
    goto LABEL_30;
  }
  v19 = 1;
  return v19 & 1;
}

uint64_t sub_1D6852A8C(uint64_t a1, uint64_t a2)
{
  return sub_1D685319C(a1, a2, type metadata accessor for MyMagazinesIssue, (uint64_t (*)(char *, char *))sub_1D697895C);
}

BOOL sub_1D6852AA0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

uint64_t sub_1D6852AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  BOOL v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = type metadata accessor for AudioFeedTrack(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (id *)((char *)&v34 - v10);
  MEMORY[0x1E0C80A78](v9);
  v15 = (id *)((char *)&v34 - v14);
  v16 = *(_QWORD *)(a1 + 16);
  if (v16 != *(_QWORD *)(a2 + 16))
  {
    v33 = 0;
    return v33 & 1;
  }
  v39 = v13;
  if (!v16 || a1 == a2)
  {
    v33 = 1;
    return v33 & 1;
  }
  v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v35 = *(_QWORD *)(v12 + 72);
  v36 = a1;
  v18 = v16 - 1;
  v37 = a2;
  v38 = v4;
  while (1)
  {
    sub_1D6211F7C(a1 + v17, (uint64_t)v15);
    sub_1D6211F7C(a2 + v17, (uint64_t)v11);
    v19 = objc_msgSend(*v15, sel_identifier);
    v20 = sub_1D6E26978();
    v22 = v21;

    v23 = objc_msgSend(*v11, sel_identifier);
    v24 = sub_1D6E26978();
    v26 = v25;

    if (v20 == v24 && v22 == v26)
    {
      swift_bridgeObjectRelease_n();
      v29 = v39;
      sub_1D6211F7C((uint64_t)v15, v39);
      sub_1D6211F7C((uint64_t)v11, (uint64_t)v7);
      goto LABEL_12;
    }
    v28 = sub_1D6E282C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v39;
    sub_1D6211F7C((uint64_t)v15, v39);
    sub_1D6211F7C((uint64_t)v11, (uint64_t)v7);
    if ((v28 & 1) == 0)
      break;
LABEL_12:
    v33 = sub_1D6B8FD6C((_QWORD *)(v29 + *(int *)(v38 + 32)), &v7[*(int *)(v38 + 32)]);
    sub_1D5E8D20C((uint64_t)v7, type metadata accessor for AudioFeedTrack);
    sub_1D5E8D20C(v29, type metadata accessor for AudioFeedTrack);
    sub_1D5E8D20C((uint64_t)v11, type metadata accessor for AudioFeedTrack);
    sub_1D5E8D20C((uint64_t)v15, type metadata accessor for AudioFeedTrack);
    v31 = v18-- != 0;
    if ((v33 & 1) != 0)
    {
      a1 = v36;
      v17 += v35;
      a2 = v37;
      if (v31)
        continue;
    }
    return v33 & 1;
  }
  sub_1D5E8D20C((uint64_t)v7, type metadata accessor for AudioFeedTrack);
  sub_1D5E8D20C(v29, type metadata accessor for AudioFeedTrack);
  sub_1D5E8D20C((uint64_t)v11, type metadata accessor for AudioFeedTrack);
  sub_1D5E8D20C((uint64_t)v15, type metadata accessor for AudioFeedTrack);
  v33 = 0;
  return v33 & 1;
}

id sub_1D6852D74(unint64_t a1, unint64_t a2)
{
  return sub_1D6852D9C(a1, a2, (uint64_t)&qword_1ED62DB60);
}

id sub_1D6852D88(unint64_t a1, unint64_t a2)
{
  return sub_1D6852D9C(a1, a2, (uint64_t)&qword_1ED5F4390);
}

id sub_1D6852D9C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  void *v14;
  id v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  void *v22;
  unint64_t v24;
  void **v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;

  v4 = a2;
  v5 = a1;
  v6 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v29 = sub_1D6E28040();
    swift_bridgeObjectRelease();
    if (v7 == v29)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  swift_bridgeObjectRetain();
  v7 = sub_1D6E28040();
  swift_bridgeObjectRelease();
  v8 = (unint64_t)v4 >> 62;
  if ((unint64_t)v4 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v7 != *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v7)
    goto LABEL_37;
  v9 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0)
    v9 = v5;
  if (!v6)
    v9 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  v10 = v4 & 0xFFFFFFFFFFFFFF8;
  v11 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v4 < 0)
    v12 = v4;
  else
    v12 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v8)
    v11 = v12;
  if (v9 == v11)
  {
LABEL_37:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v30 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v5 + 32); ; result = (id)MEMORY[0x1D8290720](0, v5))
  {
    v14 = result;
    if ((v4 & 0xC000000000000001) == 0)
      break;
    v15 = (id)MEMORY[0x1D8290720](0, v4);
LABEL_21:
    v16 = v15;
    sub_1D5E6F04C(0, (unint64_t *)a3);
    a3 = sub_1D6E27B78();

    if ((a3 & 1) == 0)
      goto LABEL_48;
    v17 = v7 - 1;
    if (v7 == 1)
      return (id)(v7 & 1);
    if (((v4 | v5) & 0xC000000000000001) != 0)
    {
      v18 = 0;
      v19 = v7 - 2;
      while (v17 != v18)
      {
        v7 = v18 + 1;
        if (v30)
          v20 = (id)MEMORY[0x1D8290720](v18 + 1, v5);
        else
          v20 = *(id *)(v5 + 40 + 8 * v18);
        a3 = (uint64_t)v20;
        if ((v4 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x1D8290720](v18 + 1, v4);
        }
        else
        {
          if (v7 >= *(_QWORD *)(v10 + 16))
            goto LABEL_53;
          v21 = *(id *)(v4 + 40 + 8 * v18);
        }
        v22 = v21;
        v7 = sub_1D6E27B78();

        if ((v7 & 1) != 0 && v19 != v18++)
          continue;
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v10 + 16);
      if (v24 <= 1)
        v24 = 1;
      a3 = v24 - 1;
      v25 = (void **)(v5 + 40);
      v10 = v4 + 40;
      while (v17)
      {
        if (!a3)
          goto LABEL_52;
        v27 = *v25++;
        v26 = v27;
        v28 = *(void **)v10;
        v10 += 8;
        v4 = v26;
        v5 = v28;
        v7 = sub_1D6E27B78();

        if ((v7 & 1) != 0)
        {
          --a3;
          if (--v17)
            continue;
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v10 + 16))
  {
    v15 = *(id *)(v4 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id sub_1D6853090(unint64_t a1, unint64_t a2)
{
  return sub_1D6852D9C(a1, a2, (uint64_t)&qword_1ED623F90);
}

id sub_1D68530A4(unint64_t a1, unint64_t a2)
{
  return sub_1D6852D9C(a1, a2, (uint64_t)&qword_1ED5DFA50);
}

uint64_t sub_1D68530B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  _QWORD v8[22];
  _QWORD v9[22];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a1 + 32;
    v4 = a2 + 32;
    do
    {
      sub_1D62051A8(v3, (uint64_t)v9);
      sub_1D62051A8(v4, (uint64_t)v8);
      if (v9[0] == v8[0] && v9[1] == v8[1])
      {
        sub_1D61E1F7C((uint64_t)v8);
        sub_1D61E1F7C((uint64_t)v9);
      }
      else
      {
        v6 = sub_1D6E282C8();
        sub_1D61E1F7C((uint64_t)v8);
        sub_1D61E1F7C((uint64_t)v9);
        if ((v6 & 1) == 0)
          return 0;
      }
      v4 += 176;
      v3 += 176;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1D6853188(uint64_t a1, uint64_t a2)
{
  return sub_1D685319C(a1, a2, type metadata accessor for OfflineContentRequest, (uint64_t (*)(char *, char *))sub_1D66CAE70);
}

uint64_t sub_1D685319C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_1D5E82ECC(a1 + v16, (uint64_t)v14, a3);
        sub_1D5E82ECC(a2 + v16, (uint64_t)v11, a3);
        v19 = a4(v14, v11);
        sub_1D5E8D20C((uint64_t)v11, a3);
        sub_1D5E8D20C((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

NewsUI2::ShortcutsConfigResource __swiftcall ShortcutsConfigResource.init(categories:)(Swift::OpaquePointer categories)
{
  Swift::OpaquePointer *v1;
  Swift::OpaquePointer *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  void *v32;
  void *v33;
  NewsUI2::ShortcutsConfigResource result;
  void *rawValue;
  Swift::OpaquePointer *v36;
  char *v37;
  _QWORD *v38;

  v3 = v1;
  v4 = type metadata accessor for ShortcutCategory();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&rawValue - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&rawValue - v9;
  v11 = *((_QWORD *)categories._rawValue + 2);
  if (v11)
  {
    rawValue = categories._rawValue;
    v36 = v3;
    v12 = (char *)categories._rawValue
        + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v13 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain_n();
    v14 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v37 = v10;
    while (1)
    {
      sub_1D68540DC((uint64_t)v12, (uint64_t)v10);
      v15 = *((_QWORD *)v10 + 2);
      v16 = *((_QWORD *)v10 + 3);
      v17 = (uint64_t)v10;
      v18 = (uint64_t)v7;
      sub_1D68540DC(v17, (uint64_t)v7);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v38 = v14;
      v21 = sub_1D5F77FD0(v15, v16);
      v22 = v14[2];
      v23 = (v20 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
        break;
      v25 = v20;
      if (v14[3] >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1D685CCA0((uint64_t (*)(_QWORD))type metadata accessor for ShortcutCategory, sub_1D6863E88, (void (*)(unint64_t, char *))sub_1D68540DC);
      }
      else
      {
        sub_1D5F435D8(v24, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutCategory, sub_1D6863E88, (void (*)(uint64_t, char *))sub_1D68540DC);
        v26 = sub_1D5F77FD0(v15, v16);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_19;
        v21 = v26;
      }
      v7 = (char *)v18;
      v14 = v38;
      if ((v25 & 1) != 0)
      {
        sub_1D685CED8(v18, v38[7] + v21 * v13);
      }
      else
      {
        v38[(v21 >> 6) + 8] |= 1 << v21;
        v28 = (uint64_t *)(v14[6] + 16 * v21);
        *v28 = v15;
        v28[1] = v16;
        sub_1D5F0D758(v18, v14[7] + v21 * v13, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutCategory);
        v29 = v14[2];
        v30 = __OFADD__(v29, 1);
        v31 = v29 + 1;
        if (v30)
          goto LABEL_18;
        v14[2] = v31;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v37;
      sub_1D5E8D20C((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutCategory);
      v12 += v13;
      if (!--v11)
      {
        categories._rawValue = rawValue;
        swift_bridgeObjectRelease();
        v3 = v36;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    v32 = (void *)sub_1D6E2834C();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    v14 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_16:
    v32 = (void *)swift_bridgeObjectRelease();
    v3->_rawValue = categories._rawValue;
    v3[1]._rawValue = v14;
  }
  result.categoriesById._rawValue = v33;
  result.categories._rawValue = v32;
  return result;
}

uint64_t ShortcutsConfigResource.categories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShortcutsConfigResource.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  char *v21;

  v19 = a2;
  sub_1D5E847C4(0, &qword_1EFFF37A8, (uint64_t (*)(uint64_t))sub_1D685CF1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v21 = (char *)&v18 - v5;
  sub_1D5EB2A68(0, &qword_1EFFF37C8, (uint64_t (*)(void))sub_1D685CFC4, (uint64_t)&type metadata for ShortcutsConfigResource.CodingKeys, MEMORY[0x1E0DB47B8]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D685CFC4();
  sub_1D6E28448();
  if (!v2)
  {
    v18 = v8;
    v11 = v19;
    sub_1D685CF1C();
    v13 = v12;
    sub_1D5E6D8C0(&qword_1EFFF37D8, (uint64_t (*)(uint64_t))sub_1D685CF1C, MEMORY[0x1E0DB3610]);
    v14 = (uint64_t)v21;
    sub_1D6E1A9FC();
    v15 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v14, 1, v13) == 1)
    {
      sub_1D685D008(v14);
      v16 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v16 = sub_1D6E19F7C();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v13);
    }
    ShortcutsConfigResource.init(categories:)((Swift::OpaquePointer)v16);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v7);
    *v11 = v20;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D68537B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x69726F6765746163 && a2 == 0xEA00000000007365)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D6E282C8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D6853850()
{
  sub_1D685CFC4();
  return sub_1D6E28538();
}

uint64_t sub_1D6853878()
{
  sub_1D685CFC4();
  return sub_1D6E28544();
}

uint64_t ShortcutsConfigResource.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];

  sub_1D5EB2A68(0, &qword_1EFFF37E0, (uint64_t (*)(void))sub_1D685CFC4, (uint64_t)&type metadata for ShortcutsConfigResource.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D685CFC4();
  sub_1D6E28478();
  v10[3] = v8;
  sub_1D685D05C(0);
  sub_1D668C918((unint64_t *)&unk_1EFFF37F0, (uint64_t (*)(uint64_t))sub_1D685D05C, sub_1D685CFA8, MEMORY[0x1E0DEAF10]);
  sub_1D6E28238();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D68539E0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return ShortcutsConfigResource.init(from:)(a1, a2);
}

uint64_t sub_1D68539F4(_QWORD *a1)
{
  return ShortcutsConfigResource.encode(to:)(a1);
}

uint64_t sub_1D6853A08()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D6E16700();
  __swift_allocate_value_buffer(v0, qword_1EFFF3790);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFFF3790);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0DB58C8], v0);
}

uint64_t static ShortcutsConfigResource.dataType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EFFD2D20 != -1)
    swift_once();
  v2 = sub_1D6E16700();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFFF3790);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static ShortcutsConfigResource.convert(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  __int128 v8;

  v4 = sub_1D6E1C664();
  MEMORY[0x1E0C80A78](v4);
  sub_1D5F79E0C(a1, (uint64_t)&v8);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    sub_1D6E15554();
    swift_allocObject();
    sub_1D6E15548();
    sub_1D618F7CC();
    sub_1D6E15530();
    sub_1D5F6AEF0(v6, v7);
    result = swift_release();
    *(_OWORD *)a2 = v8;
  }
  else
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  return result;
}

uint64_t ShortcutsConfigResource.toData()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = sub_1D6E1C664();
  MEMORY[0x1E0C80A78](v2);
  sub_1D6E155B4();
  swift_allocObject();
  sub_1D6E155A8();
  sub_1D685D078();
  v3 = sub_1D6E1559C();
  v5 = v4;
  result = swift_release();
  a1[3] = MEMORY[0x1E0CB0338];
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t static ShortcutsConfigResource.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_1D6851880(*a1, *a2) & 1) != 0)
    return sub_1D676318C(v2, v3);
  else
    return 0;
}

uint64_t sub_1D685401C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EFFD2D20 != -1)
    swift_once();
  v2 = sub_1D6E16700();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFFF3790);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1D6854094(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_1D6851880(*a1, *a2) & 1) != 0)
    return sub_1D676318C(v2, v3);
  else
    return 0;
}

uint64_t sub_1D68540DC(uint64_t a1, uint64_t a2)
{
  return sub_1D5E82ECC(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ShortcutCategory);
}

uint64_t sub_1D68540E8(uint64_t a1, int a2)
{
  return sub_1D5F435D8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for CuratedMagazineFeedGroupKnobs, sub_1D6863948, (void (*)(uint64_t, char *))sub_1D6863964);
}

uint64_t sub_1D6854140(uint64_t a1, char a2)
{
  return sub_1D685A45C(a1, a2, (unint64_t *)&qword_1ED5F48E0, (uint64_t)&qword_1ED5F4430, (uint64_t)&protocolRef_FCHeadlineProviding);
}

uint64_t sub_1D685415C(uint64_t a1, char a2)
{
  return sub_1D685C264(a1, a2, sub_1D686350C);
}

uint64_t sub_1D6854168(uint64_t a1, char a2)
{
  return sub_1D685BC1C(a1, a2, (unint64_t *)&unk_1ED5F4900, (uint64_t)&qword_1ED5F46D8, 0x1E0D58B48);
}

uint64_t sub_1D6854184(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;

  v3 = v2;
  v5 = _s9DataStoreC10CaptureKeyVMa();
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1D6863A34();
  v41 = a2;
  v9 = sub_1D6E28070();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v36 = v2;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v38 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v37 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v37)
          goto LABEL_34;
        v22 = v38[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v37)
            goto LABEL_34;
          v22 = v38[v17];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_34:
              swift_release();
              v3 = v36;
              if ((v41 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v8 + 32);
                if (v34 >= 64)
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v34;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                v17 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v17 >= v37)
                  goto LABEL_34;
                v22 = v38[v17];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v17 = v23;
          }
        }
LABEL_21:
        v14 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(v39 + 72);
      v25 = *(_QWORD *)(v8 + 48) + v24 * v20;
      if ((v41 & 1) != 0)
      {
        sub_1D5F0D758(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))_s9DataStoreC10CaptureKeyVMa);
        v26 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
      }
      else
      {
        sub_1D5E82ECC(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))_s9DataStoreC10CaptureKeyVMa);
        v26 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
      }
      sub_1D6E28400();
      swift_bridgeObjectRetain();
      sub_1D6E26A44();
      swift_bridgeObjectRelease();
      sub_1D6E1C250();
      sub_1D5E6D8C0(&qword_1EFFD7A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D611F8], MEMORY[0x1E0D61208]);
      sub_1D6E26888();
      result = sub_1D6E28430();
      v27 = -1 << *(_BYTE *)(v10 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v15 + 8 * v29);
        }
        while (v33 == -1);
        v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      result = sub_1D5F0D758((uint64_t)v7, *(_QWORD *)(v10 + 48) + v24 * v18, (uint64_t (*)(_QWORD))_s9DataStoreC10CaptureKeyVMa);
      *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v18) = v26;
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1D6854550(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  sub_1D6862AF4();
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      v34 = v32;
    }
    result = sub_1D6E27B6C();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D685481C(uint64_t a1, int a2)
{
  return sub_1D5F78FA8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5BF28], &qword_1EFFEBF48);
}

uint64_t sub_1D6854830(uint64_t a1, int a2)
{
  return sub_1D5F435D8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for TagFeedModelPlaceholder, sub_1D6863910, (void (*)(uint64_t, char *))sub_1D639868C);
}

uint64_t sub_1D685484C(uint64_t a1, char a2)
{
  return sub_1D685BF48(a1, a2, sub_1D6862F7C);
}

uint64_t sub_1D6854858(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_1D6862D0C();
  v37 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1D6854B5C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v3 = v2;
  v5 = sub_1D60E79C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1D6862D70();
  v10 = sub_1D6E28070();
  if (*(_QWORD *)(v9 + 16))
  {
    v25 = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = (_QWORD *)(v9 + 64);
    v13 = -1;
    if (v11 < 64)
      v13 = ~(-1 << v11);
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v15 = (unint64_t)(v11 + 63) >> 6;
    swift_retain();
    v16 = 0;
    while (1)
    {
      if (v14)
      {
        v17 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v18 = v17 | (v16 << 6);
      }
      else
      {
        v19 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return;
        }
        if (v19 >= v15)
          goto LABEL_23;
        v20 = v12[v19];
        ++v16;
        if (!v20)
        {
          v16 = v19 + 1;
          if (v19 + 1 >= v15)
            goto LABEL_23;
          v20 = v12[v16];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                swift_release();
                v3 = v25;
                goto LABEL_30;
              }
              v23 = 1 << *(_BYTE *)(v9 + 32);
              if (v23 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v12 = -1 << v23;
              v3 = v25;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v20 = v12[v21];
            if (!v20)
            {
              while (1)
              {
                v16 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_32;
                if (v16 >= v15)
                  goto LABEL_23;
                v20 = v12[v16];
                ++v21;
                if (v20)
                  goto LABEL_20;
              }
            }
            v16 = v21;
          }
        }
LABEL_20:
        v14 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v16 << 6);
      }
      v22 = *(_QWORD *)(v9 + 48) + *(_QWORD *)(v6 + 72) * v18;
      if ((a2 & 1) != 0)
      {
        sub_1D5F0D758(v22, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1D60E79C4);
      }
      else
      {
        sub_1D5E82ECC(v22, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1D60E79C4);
        swift_retain();
      }
      sub_1D685C574((uint64_t)v8);
    }
  }
  swift_release();
LABEL_30:
  *v3 = v10;
}

unint64_t sub_1D6854DB4(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v5 = *v2;
  sub_1D6863FAC();
  v6 = (_QWORD *)sub_1D6E28070();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11)
          goto LABEL_22;
        v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_22;
          v17 = v8[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v22 = 1 << *(_BYTE *)(v5 + 32);
                if (v22 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v22;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_29;
                if (v13 >= v11)
                  goto LABEL_22;
                v17 = v8[v13];
                ++v18;
                if (v17)
                  goto LABEL_19;
              }
            }
            v13 = v18;
          }
        }
LABEL_19:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = 8 * v15;
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v19);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v19);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        swift_retain();
      }
      result = sub_1D685C754(v20, v21, v6);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1D6854F9C(uint64_t a1, char a2)
{
  return sub_1D685C264(a1, a2, sub_1D6864040);
}

unint64_t sub_1D6854FA8(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v5 = *v2;
  sub_1D686405C();
  v6 = (_QWORD *)sub_1D6E28070();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11)
          goto LABEL_22;
        v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_22;
          v17 = v8[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v22 = 1 << *(_BYTE *)(v5 + 32);
                if (v22 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v22;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_29;
                if (v13 >= v11)
                  goto LABEL_22;
                v17 = v8[v13];
                ++v18;
                if (v17)
                  goto LABEL_19;
              }
            }
            v13 = v18;
          }
        }
LABEL_19:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = 8 * v15;
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v19);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v19);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
      }
      result = sub_1D685C754(v20, v21, v6);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1D6855190(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;

  v3 = v2;
  v5 = type metadata accessor for EngagementUpsellTriggerState(0);
  v44 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EngagementUpsellTriggerGroupStateKey(0);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  sub_1D6618F50();
  v47 = a2;
  v12 = sub_1D6E28070();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v42 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v40 = v2;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  v43 = v7;
  while (1)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = v42;
    v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_34;
      v26 = v42[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v41)
              goto LABEL_34;
            v26 = v42[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v45 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v47 & 1) != 0)
    {
      sub_1D5F0D758(v29, (uint64_t)v10, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
      v30 = *(_QWORD *)(v44 + 72);
      sub_1D5F0D758(*(_QWORD *)(v11 + 56) + v30 * v23, (uint64_t)v7, type metadata accessor for EngagementUpsellTriggerState);
    }
    else
    {
      sub_1D5E82ECC(v29, (uint64_t)v10, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
      v30 = *(_QWORD *)(v44 + 72);
      sub_1D5E82ECC(*(_QWORD *)(v11 + 56) + v30 * v23, (uint64_t)v7, type metadata accessor for EngagementUpsellTriggerState);
    }
    sub_1D6E28400();
    swift_bridgeObjectRetain();
    sub_1D6E26A44();
    swift_bridgeObjectRelease();
    sub_1D6E1B044();
    sub_1D5E6D8C0((unint64_t *)&unk_1ED5FA9D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D591D8], MEMORY[0x1E0D591F0]);
    sub_1D6E26888();
    result = sub_1D6E28430();
    v31 = -1 << *(_BYTE *)(v13 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      v7 = v43;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      v7 = v43;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    sub_1D5F0D758((uint64_t)v10, *(_QWORD *)(v13 + 48) + v28 * v21, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    result = sub_1D5F0D758((uint64_t)v7, *(_QWORD *)(v13 + 56) + v30 * v21, type metadata accessor for EngagementUpsellTriggerState);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v40;
  v25 = v42;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v11 + 32);
  if (v38 >= 64)
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v38;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_1D68555E0(uint64_t a1, int a2)
{
  return sub_1D5F435D8(a1, a2, type metadata accessor for AudioFeedTrack, sub_1D6862CF0, (void (*)(uint64_t, char *))sub_1D6211F7C);
}

uint64_t sub_1D68555FC(uint64_t a1, char a2)
{
  return sub_1D685BF48(a1, a2, (void (*)(_QWORD))sub_1D6862BAC);
}

uint64_t sub_1D6855608(uint64_t a1, int a2)
{
  return sub_1D5F78FA8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (unint64_t *)&unk_1ED5F7820);
}

uint64_t sub_1D685561C(uint64_t a1, int a2)
{
  return sub_1D5F435D8(a1, a2, type metadata accessor for SportsHeadlineExposureTracker.GroupSession, sub_1D6862F98, (void (*)(uint64_t, char *))sub_1D6862FB4);
}

uint64_t sub_1D6855638(uint64_t a1, char a2)
{
  return sub_1D685C264(a1, a2, sub_1D6862FC0);
}

uint64_t sub_1D6855644(uint64_t a1, char a2)
{
  return sub_1D5F1C0A0(a1, a2, &qword_1ED6242E8, (unint64_t *)&qword_1ED60BA60, MEMORY[0x1E0CF8108], (void (*)(uint64_t, _BYTE *))sub_1D5E8D7A0);
}

uint64_t sub_1D6855668(uint64_t a1, char a2)
{
  return sub_1D685BF48(a1, a2, sub_1D68629F4);
}

uint64_t sub_1D6855674(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  sub_1D6862A74();
  result = sub_1D6E28070();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_1D6E283F4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1D6855914(uint64_t a1, char a2)
{
  return sub_1D685B604(a1, a2, (void (*)(_QWORD))sub_1D6862990);
}

uint64_t sub_1D6855920(uint64_t a1, char a2)
{
  return sub_1D685BF48(a1, a2, sub_1D6863790);
}

uint64_t sub_1D685592C(uint64_t a1, int a2)
{
  return sub_1D5F435D8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleSetting, sub_1D6862AD8, (void (*)(uint64_t, char *))sub_1D65FE280);
}

uint64_t sub_1D6855948(uint64_t a1, int a2)
{
  return sub_1D5F78FA8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5DC80], (unint64_t *)&unk_1EFFEBF98);
}

uint64_t sub_1D685595C(uint64_t a1, char a2)
{
  return sub_1D685C264(a1, a2, sub_1D6862FF8);
}

uint64_t sub_1D6855968(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  char v33;
  __int128 v34;

  v3 = v2;
  v5 = *v2;
  sub_1D661940C(0, &qword_1ED605630, (void (*)(uint64_t))sub_1D6863C90, (void (*)(void))sub_1D6863D7C);
  v33 = a2;
  result = sub_1D6E28070();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v32 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v31 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v31)
          goto LABEL_33;
        v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v31)
            goto LABEL_33;
          v21 = v32[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v30;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v31)
                  goto LABEL_33;
                v21 = v32[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v19);
      v28 = *(_QWORD *)(v5 + 56) + 24 * v19;
      v34 = *(_OWORD *)v28;
      v29 = *(_QWORD *)(v28 + 16);
      if ((v33 & 1) == 0)
      {
        swift_retain();
        swift_retain();
      }
      sub_1D6E28400();
      sub_1D6E2840C();
      result = sub_1D6E28430();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_OWORD *)v17 = v34;
      *(_QWORD *)(v17 + 16) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1D6855C88(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_1D6863014();
  v37 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D6855F8C(uint64_t a1, char a2)
{
  return sub_1D685BC1C(a1, a2, &qword_1ED5F7830, (uint64_t)&unk_1ED5F4318, 0x1E0D626F0);
}

uint64_t sub_1D6855FA8(uint64_t a1, char a2)
{
  return sub_1D685BC1C(a1, a2, (unint64_t *)&unk_1ED5F48B0, (uint64_t)&unk_1ED5F4260, 0x1E0D62848);
}

uint64_t sub_1D6855FC4(uint64_t a1, char a2)
{
  return sub_1D685BC1C(a1, a2, &qword_1ED624370, (uint64_t)&qword_1ED624030, 0x1E0D62628);
}

uint64_t sub_1D6855FE0(uint64_t a1, char a2)
{
  return sub_1D685BC1C(a1, a2, (unint64_t *)&unk_1ED5F48D0, (uint64_t)&unk_1ED5F43A8, 0x1E0D62630);
}

uint64_t sub_1D6855FFC(uint64_t a1, char a2)
{
  return sub_1D685BC1C(a1, a2, &qword_1ED5F48F0, (uint64_t)&unk_1ED5F4570, 0x1E0D626D8);
}

uint64_t sub_1D6856018(uint64_t a1, int a2)
{
  return sub_1D5F78FA8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E698], (unint64_t *)&unk_1EFFEBFE0);
}

uint64_t sub_1D685602C(uint64_t a1, char a2)
{
  return sub_1D685BF48(a1, a2, sub_1D68635B4);
}

uint64_t sub_1D6856038(uint64_t a1, char a2)
{
  return sub_1D685A45C(a1, a2, (unint64_t *)&qword_1ED5DFBD0, (uint64_t)&qword_1ED5F42C0, (uint64_t)&protocolRef_FCTagProviding);
}

uint64_t sub_1D6856054(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;

  v3 = v2;
  v5 = *v2;
  sub_1D686372C();
  v40 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 24 * v21);
      v33 = *v32;
      v34 = v32[1];
      v35 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1D6E28400();
      sub_1D6E26A44();
      result = sub_1D6E28430();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v17);
      *v19 = v33;
      v19[1] = v34;
      v19[2] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D6856374(uint64_t a1, char a2)
{
  return sub_1D685BF48(a1, a2, (void (*)(_QWORD))sub_1D6473714);
}

uint64_t sub_1D6856380(uint64_t a1, char a2)
{
  return sub_1D685BF48(a1, a2, sub_1D6863078);
}

uint64_t sub_1D685638C(uint64_t a1, char a2)
{
  return sub_1D68563D4(a1, a2, (unint64_t *)&unk_1ED62DBC0, (unint64_t *)&unk_1ED62D860, (uint64_t)&protocol descriptor for OfflineFeedBuilderType, (void (*)(uint64_t, _BYTE *))sub_1D5E8D7A0);
}

uint64_t sub_1D68563B0(uint64_t a1, char a2)
{
  return sub_1D68563D4(a1, a2, (unint64_t *)&unk_1ED62DBD0, (unint64_t *)&unk_1ED62D870, (uint64_t)&protocol descriptor for OfflineFeedUpdaterType, (void (*)(uint64_t, _BYTE *))sub_1D5E8D7A0);
}

uint64_t sub_1D68563D4(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(uint64_t, _BYTE *))
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  int64_t v24;
  char v25;
  _BYTE v26[40];

  v8 = v6;
  v10 = *v6;
  sub_1D6863C1C(0, a3, a4);
  v25 = a2;
  v11 = sub_1D6E28070();
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_29;
  v12 = 1 << *(_BYTE *)(v10 + 32);
  if (v12 < 64)
    v13 = ~(-1 << v12);
  else
    v13 = -1;
  v14 = v13 & *(_QWORD *)(v10 + 64);
  v24 = (unint64_t)(v12 + 63) >> 6;
  swift_retain();
  if (v14)
  {
    v15 = __clz(__rbit64(v14));
    goto LABEL_18;
  }
  if (v24 <= 1)
  {
    swift_release();
    v16 = (_QWORD *)(v10 + 64);
    if ((v25 & 1) == 0)
      goto LABEL_29;
    goto LABEL_25;
  }
  v16 = (_QWORD *)(v10 + 64);
  v17 = *(_QWORD *)(v10 + 72);
  v18 = 1;
  if (v17)
    goto LABEL_17;
  v18 = 2;
  if (v24 <= 2)
    goto LABEL_22;
  v17 = *(_QWORD *)(v10 + 80);
  if (v17)
  {
LABEL_17:
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_18:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v10 + 48) + v15);
    v21 = *(_QWORD *)(v10 + 56) + 40 * v15;
    if ((v25 & 1) != 0)
      a6(v21, v26);
    else
      sub_1D5E96490(v21, (uint64_t)v26);
    sub_1D6E28400();
    __asm { BR              X8 }
  }
  v19 = 3;
  if (v24 > 3)
  {
    v17 = *(_QWORD *)(v10 + 88);
    if (v17)
    {
      v18 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v18 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
        JUMPOUT(0x1D6856820);
      }
      if (v18 >= v24)
        break;
      v17 = *(_QWORD *)(v10 + 64 + 8 * v18);
      ++v19;
      if (v17)
        goto LABEL_17;
    }
  }
LABEL_22:
  swift_release();
  if ((v25 & 1) == 0)
    goto LABEL_29;
LABEL_25:
  v22 = 1 << *(_BYTE *)(v10 + 32);
  if (v22 >= 64)
    bzero(v16, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v16 = -1 << v22;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_29:
  result = swift_release();
  *v8 = v11;
  return result;
}

uint64_t sub_1D685684C(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  int v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;

  v3 = v2;
  v5 = sub_1D6E1C154();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1D6863B74(0, (unint64_t *)&unk_1EFFF39A0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))MEMORY[0x1E0DECD58]);
  v45 = a2;
  v10 = sub_1D6E28070();
  v11 = (_QWORD *)v10;
  if (*(_QWORD *)(v9 + 16))
  {
    v40 = v3;
    v12 = 1 << *(_BYTE *)(v9 + 32);
    v13 = *(_QWORD *)(v9 + 64);
    v42 = (_QWORD *)(v9 + 64);
    if (v12 < 64)
      v14 = ~(-1 << v12);
    else
      v14 = -1;
    v15 = v14 & v13;
    v41 = (unint64_t)(v12 + 63) >> 6;
    v16 = v10 + 64;
    result = swift_retain();
    v18 = 0;
    v43 = v9;
    v44 = v11;
    while (1)
    {
      if (v15)
      {
        v46 = (v15 - 1) & v15;
        v47 = v18;
        v21 = __clz(__rbit64(v15)) | (v18 << 6);
      }
      else
      {
        v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v22 >= v41)
          goto LABEL_36;
        v23 = v42[v22];
        v24 = v18 + 1;
        if (!v23)
        {
          v24 = v18 + 2;
          if (v18 + 2 >= v41)
            goto LABEL_36;
          v23 = v42[v24];
          if (!v23)
          {
            v25 = v18 + 3;
            if (v18 + 3 >= v41)
            {
LABEL_36:
              swift_release();
              v3 = v40;
              if ((v45 & 1) != 0)
              {
                v39 = 1 << *(_BYTE *)(v9 + 32);
                if (v39 >= 64)
                  bzero(v42, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v39;
                *(_QWORD *)(v9 + 16) = 0;
              }
              break;
            }
            v23 = v42[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_43;
                if (v24 >= v41)
                  goto LABEL_36;
                v23 = v42[v24];
                ++v25;
                if (v23)
                  goto LABEL_21;
              }
            }
            v24 = v18 + 3;
          }
        }
LABEL_21:
        v46 = (v23 - 1) & v23;
        v47 = v24;
        v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      v26 = 8 * v21;
      v27 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + v26);
      v48 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + v26);
      if ((v45 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1D6E28400();
      sub_1D6E2840C();
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        v29 = v27 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        v30 = *(_QWORD *)(v6 + 72);
        v31 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
        do
        {
          v31(v8, v29, v5);
          sub_1D6863B58();
          sub_1D6E26888();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          v29 += v30;
          --v28;
        }
        while (v28);
      }
      result = sub_1D6E28430();
      v11 = v44;
      v32 = -1 << *((_BYTE *)v44 + 32);
      v33 = result & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v16 + 8 * v34);
        }
        while (v38 == -1);
        v19 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(v11[6] + v20) = v27;
      *(_QWORD *)(v11[7] + v20) = v48;
      ++v11[2];
      v9 = v43;
      v15 = v46;
      v18 = v47;
    }
  }
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1D6856C08(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1D6E1C0E8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1D6863AB4();
  v42 = a2;
  v10 = sub_1D6E28070();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
    }
    sub_1D5E6D8C0(&qword_1EFFF8000, (uint64_t (*)(uint64_t))MEMORY[0x1E0D60FF8], MEMORY[0x1E0D61008]);
    result = sub_1D6E2687C();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1D6856F98(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  sub_1D68633F4();
  v42 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D68572B8(uint64_t a1, char a2)
{
  return sub_1D685BF48(a1, a2, sub_1D6863EA4);
}

uint64_t sub_1D68572C4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  sub_1D6863EDC();
  result = sub_1D6E28070();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1D6E283F4();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D6857574(uint64_t a1, int a2)
{
  return sub_1D5F78FA8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D458], &qword_1EFFF38C8);
}

uint64_t sub_1D6857588(uint64_t a1, char a2)
{
  return sub_1D685BC1C(a1, a2, (unint64_t *)&unk_1EFFF3830, (uint64_t)&qword_1ED62DB60, 0x1E0DC4430);
}

uint64_t sub_1D68575A4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_1D5F79334(0, &qword_1EFFF3828, (uint64_t (*)(uint64_t))type metadata accessor for FloatingTabGroup, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v38 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D68578C4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  sub_1D68630B0();
  v42 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = *(_QWORD *)(v5 + 56) + v31;
    v36 = *(_QWORD *)v35;
    v37 = *(_BYTE *)(v35 + 8);
    if ((v42 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = *(_QWORD *)(v7 + 56) + v18;
    *(_QWORD *)v20 = v36;
    *(_BYTE *)(v20 + 8) = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D6857BE4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  int64_t v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v3 = v2;
  v5 = *v2;
  sub_1D640A48C();
  v48 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_42;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v47 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v45 = v2;
  v46 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v48 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v24 >= v46)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v47 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v46)
        goto LABEL_35;
      v26 = *(_QWORD *)(v47 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v46)
        {
LABEL_35:
          swift_release();
          v3 = v45;
          if ((v48 & 1) == 0)
            goto LABEL_42;
          goto LABEL_38;
        }
        v26 = *(_QWORD *)(v47 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_44;
            if (v13 >= v46)
              goto LABEL_35;
            v26 = *(_QWORD *)(v47 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_22;
          }
        }
        v13 = v27;
      }
    }
LABEL_22:
    v10 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v13 << 6);
    if ((v48 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 152 * v18;
      v49 = *(_OWORD *)v22;
      v50 = *(_OWORD *)(v22 + 16);
      v55 = *(_OWORD *)(v22 + 48);
      v56 = *(_OWORD *)(v22 + 32);
      v53 = *(_OWORD *)(v22 + 80);
      v54 = *(_OWORD *)(v22 + 64);
      v51 = *(_OWORD *)(v22 + 112);
      v52 = *(_OWORD *)(v22 + 96);
      v57 = *(_OWORD *)(v22 + 128);
      v23 = *(_QWORD *)(v22 + 144);
      goto LABEL_24;
    }
LABEL_23:
    v28 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v28;
    v21 = v28[1];
    v29 = *(_QWORD *)(v5 + 56) + 152 * v18;
    v30 = *(_OWORD *)(v29 + 16);
    v58 = *(_OWORD *)v29;
    v59 = v30;
    v31 = *(_OWORD *)(v29 + 80);
    v33 = *(_OWORD *)(v29 + 32);
    v32 = *(_OWORD *)(v29 + 48);
    v62 = *(_OWORD *)(v29 + 64);
    v63 = v31;
    v60 = v33;
    v61 = v32;
    v35 = *(_OWORD *)(v29 + 112);
    v34 = *(_OWORD *)(v29 + 128);
    v36 = *(_OWORD *)(v29 + 96);
    v67 = *(_QWORD *)(v29 + 144);
    v65 = v35;
    v66 = v34;
    v64 = v36;
    v23 = v67;
    v56 = v33;
    v57 = v34;
    v54 = v62;
    v55 = v61;
    v52 = v36;
    v53 = v63;
    v50 = v59;
    v51 = v35;
    v49 = v58;
    swift_bridgeObjectRetain();
    sub_1D640A504((uint64_t)&v58);
LABEL_24:
    sub_1D6E28400();
    sub_1D6E28418();
    if (v21)
    {
      swift_bridgeObjectRetain();
      sub_1D6E26A44();
      swift_bridgeObjectRelease();
    }
    result = sub_1D6E28430();
    v37 = -1 << *(_BYTE *)(v7 + 32);
    v38 = result & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v11 + 8 * (v38 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v11 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v11 + 8 * v39);
      }
      while (v43 == -1);
      v14 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 152 * v14;
    *(_OWORD *)v16 = v49;
    *(_OWORD *)(v16 + 16) = v50;
    *(_OWORD *)(v16 + 32) = v56;
    *(_OWORD *)(v16 + 48) = v55;
    *(_OWORD *)(v16 + 64) = v54;
    *(_OWORD *)(v16 + 80) = v53;
    *(_OWORD *)(v16 + 96) = v52;
    *(_OWORD *)(v16 + 112) = v51;
    *(_OWORD *)(v16 + 128) = v57;
    *(_QWORD *)(v16 + 144) = v23;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v45;
  v25 = (_QWORD *)(v5 + 64);
  if ((v48 & 1) == 0)
    goto LABEL_42;
LABEL_38:
  v44 = 1 << *(_BYTE *)(v5 + 32);
  if (v44 >= 64)
    bzero(v25, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v44;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D685801C(uint64_t a1, char a2)
{
  return sub_1D685BF48(a1, a2, (void (*)(_QWORD))sub_1D6863878);
}

uint64_t sub_1D6858028(uint64_t a1, char a2)
{
  return sub_1D685BF48(a1, a2, sub_1D68638F4);
}

uint64_t sub_1D6858034(uint64_t a1, char a2)
{
  return sub_1D685A45C(a1, a2, (unint64_t *)&unk_1EFFEBFC8, (uint64_t)&qword_1ED623FE0, (uint64_t)&protocolRef_FCSportsProviding);
}

uint64_t sub_1D6858050(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  sub_1D68634A4();
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1D5F79F98((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1D5EEA938(v25, (uint64_t)&v38);
      sub_1D5F79E0C(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1D6E27E48();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1D5F79F98(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D6858360(uint64_t a1, int a2)
{
  return sub_1D5F435D8(a1, a2, (uint64_t (*)(_QWORD))sub_1D5E7B73C, sub_1D6863C00, (void (*)(uint64_t, char *))sub_1D66630D0);
}

uint64_t sub_1D685837C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;

  v3 = v2;
  v5 = type metadata accessor for EngagementUpsellTriggerGroupStateKey(0);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1D6863114();
  v42 = a2;
  v9 = sub_1D6E28070();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v39 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v37 = v2;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38)
      break;
    v22 = v39;
    v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_34;
      v23 = v39[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v17 >= v38)
              goto LABEL_34;
            v23 = v39[v17];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v17 = v24;
      }
    }
LABEL_21:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(_QWORD *)(v8 + 48) + v25 * v20;
    if ((v42 & 1) != 0)
      sub_1D5F0D758(v26, (uint64_t)v7, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    else
      sub_1D5E82ECC(v26, (uint64_t)v7, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    v27 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
    sub_1D6E28400();
    swift_bridgeObjectRetain();
    sub_1D6E26A44();
    swift_bridgeObjectRelease();
    sub_1D6E1B044();
    sub_1D5E6D8C0((unint64_t *)&unk_1ED5FA9D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D591D8], MEMORY[0x1E0D591F0]);
    sub_1D6E26888();
    result = sub_1D6E28430();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = sub_1D5F0D758((uint64_t)v7, *(_QWORD *)(v10 + 48) + v25 * v18, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v37;
  v22 = v39;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v8 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1D685874C(uint64_t a1, int a2)
{
  return sub_1D5F435D8(a1, a2, type metadata accessor for TagFeedCuration, sub_1D686358C, (void (*)(uint64_t, char *))sub_1D68635A8);
}

uint64_t sub_1D6858768(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_1D66190D4();
  v37 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v20 = v19 | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35)
          goto LABEL_33;
        v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          v13 = v21 + 1;
          if (v21 + 1 >= v35)
            goto LABEL_33;
          v22 = v36[v13];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v37 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                v13 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v22 = v36[v13];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v13 = v23;
          }
        }
LABEL_30:
        v10 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v29 = *(_QWORD *)(v5 + 56) + 16 * v20;
      v31 = *(void **)v29;
      v30 = *(void **)(v29 + 8);
      if ((v37 & 1) == 0)
      {
        v32 = v30;
        swift_retain();
        v33 = v31;
      }
      sub_1D6E28400();
      swift_bridgeObjectRetain();
      sub_1D6E26A44();
      swift_bridgeObjectRelease();
      result = sub_1D6E28430();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v17) = v28;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D6858A78(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t i;
  char v37;
  uint64_t v38;

  v3 = v2;
  v5 = *v2;
  sub_1D68631F8();
  v37 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v20 = v19 | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v34)
          goto LABEL_33;
        v22 = v35[v21];
        ++v13;
        if (!v22)
        {
          v13 = v21 + 1;
          if (v21 + 1 >= v34)
            goto LABEL_33;
          v22 = v35[v13];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v37 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v35[v23];
            if (!v22)
            {
              while (1)
              {
                v13 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_40;
                if (v13 >= v34)
                  goto LABEL_33;
                v22 = v35[v13];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v13 = v23;
          }
        }
LABEL_30:
        v10 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 32 * v20);
      v30 = *v29;
      v31 = v29[1];
      v32 = v29[3];
      v38 = v29[2];
      if ((v37 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1D6E28400();
      swift_bridgeObjectRetain();
      sub_1D6E26A44();
      swift_bridgeObjectRelease();
      result = sub_1D6E28430();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v17) = v28;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 32 * v17);
      *v18 = v30;
      v18[1] = v31;
      v18[2] = v38;
      v18[3] = v32;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D6858DA8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v3 = v2;
  v5 = *v2;
  sub_1D6863194();
  v42 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v40 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v39 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v39)
          goto LABEL_33;
        v23 = v40[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v39)
            goto LABEL_33;
          v23 = v40[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v42 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v5 + 32);
                if (v38 >= 64)
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v38;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v39)
                  goto LABEL_33;
                v23 = v40[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 32 * v21;
      v33 = *(void **)v32;
      v34 = *(_BYTE *)(v32 + 9);
      v46 = *(_BYTE *)(v32 + 10);
      v47 = *(_BYTE *)(v32 + 8);
      v44 = *(_BYTE *)(v32 + 12);
      v45 = *(_BYTE *)(v32 + 11);
      v35 = *(void **)(v32 + 16);
      v43 = *(_BYTE *)(v32 + 24);
      if ((v42 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v36 = v33;
        v37 = v35;
      }
      sub_1D6E28400();
      sub_1D6E26A44();
      result = sub_1D6E28430();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
      *(_QWORD *)v19 = v33;
      *(_BYTE *)(v19 + 8) = v47;
      *(_BYTE *)(v19 + 9) = v34;
      *(_BYTE *)(v19 + 10) = v46;
      *(_BYTE *)(v19 + 11) = v45;
      *(_BYTE *)(v19 + 12) = v44;
      *(_QWORD *)(v19 + 16) = v35;
      *(_BYTE *)(v19 + 24) = v43;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D685910C(uint64_t a1, char a2)
{
  return sub_1D685A45C(a1, a2, &qword_1ED6065E8, (uint64_t)&qword_1ED5F9930, (uint64_t)&protocolRef_FCChannelProviding);
}

uint64_t sub_1D6859128(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  sub_1D6863E24();
  v6 = a2;
  v7 = sub_1D6E28070();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v37)
          goto LABEL_33;
        v24 = v38[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v37)
            goto LABEL_33;
          v24 = v38[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v38[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v37)
                  goto LABEL_33;
                v24 = v38[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v39 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v34 = (id)v39;
        v35 = *((id *)&v39 + 1);
      }
      sub_1D6E28400();
      sub_1D6E26A44();
      result = sub_1D6E28430();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v39;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1D6859438(uint64_t a1, char a2)
{
  return sub_1D685BC1C(a1, a2, &qword_1EFFF39B0, (uint64_t)&qword_1ED5F77F0, 0x1E0DC3628);
}

uint64_t sub_1D6859454(uint64_t a1, char a2)
{
  return sub_1D685A45C(a1, a2, &qword_1EFFF38F8, (uint64_t)&unk_1ED624020, (uint64_t)&protocolRef_FCPuzzleTypeProviding);
}

uint64_t sub_1D6859470(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_1D61EBE00();
  v37 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D6859770(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  sub_1D6863680();
  v35 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v34 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v33)
        goto LABEL_33;
      v23 = *(_QWORD *)(v34 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v33)
              goto LABEL_33;
            v23 = *(_QWORD *)(v34 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = 8 * v20;
    v30 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v29);
    v31 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v29);
    if ((v35 & 1) == 0)
    {
      swift_retain();
      swift_retain();
    }
    sub_1D6E28400();
    swift_bridgeObjectRetain();
    sub_1D6E26A44();
    swift_bridgeObjectRelease();
    result = sub_1D6E28430();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 8 * v17;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v31;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D6859A94(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1D6E1B044();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1D68632EC();
  v42 = a2;
  v10 = sub_1D6E28070();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_1D5E6D8C0((unint64_t *)&unk_1ED5FA9D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D591D8], MEMORY[0x1E0D591F0]);
    result = sub_1D6E2687C();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1D6859E24(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_1D6863390();
  v37 = a2;
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D685A124(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  sub_1D5F79334(0, &qword_1ED62EE28, (uint64_t (*)(uint64_t))sub_1D6863970, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v6 = a2;
  v7 = sub_1D6E28070();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_1D6E28400();
      sub_1D6E26A44();
      result = sub_1D6E28430();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1D685A440(uint64_t a1, char a2)
{
  return sub_1D685A45C(a1, a2, (unint64_t *)&unk_1EFFF3920, (uint64_t)&qword_1ED624048, (uint64_t)&protocolRef_FCSportsEventProviding);
}

uint64_t sub_1D685A45C(uint64_t a1, char a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v6 = v5;
  v8 = *v5;
  sub_1D6618D84(0, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1D5E78884);
  v39 = a2;
  v9 = sub_1D6E28070();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v38 = v8 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v8 + 64);
  v37 = (unint64_t)(v11 + 63) >> 6;
  v14 = v9 + 64;
  result = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v22 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v23 = v22 | (v16 << 6);
      goto LABEL_31;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v37)
      break;
    v25 = (_QWORD *)(v8 + 64);
    v26 = *(_QWORD *)(v38 + 8 * v24);
    ++v16;
    if (!v26)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v37)
        goto LABEL_33;
      v26 = *(_QWORD *)(v38 + 8 * v16);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v37)
        {
LABEL_33:
          swift_release();
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v26 = *(_QWORD *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v16 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_42;
            if (v16 >= v37)
              goto LABEL_33;
            v26 = *(_QWORD *)(v38 + 8 * v16);
            ++v27;
            if (v26)
              goto LABEL_30;
          }
        }
        v16 = v27;
      }
    }
LABEL_30:
    v13 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
    v32 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    v34 = *v32;
    v33 = v32[1];
    v35 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v23);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v17 = -1 << *(_BYTE *)(v10 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v30 = v19 == v29;
        if (v19 == v29)
          v19 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v21 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v20);
    *v21 = v34;
    v21[1] = v33;
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v20) = v35;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v25 = (_QWORD *)(v8 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v8 + 32);
  if (v36 >= 64)
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v36;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v6 = v10;
  return result;
}

uint64_t sub_1D685A784(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;

  v3 = v2;
  v5 = type metadata accessor for SportsHighlights(0);
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SportsHighlights.SubsectionDescriptor(0);
  v44 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  sub_1D68635EC();
  v45 = a2;
  v12 = sub_1D6E28070();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v42 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v40 = v2;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = v42;
    v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_34;
      v26 = v42[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v45 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v41)
              goto LABEL_34;
            v26 = v42[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v44 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v45 & 1) != 0)
    {
      sub_1D5F0D758(v29, (uint64_t)v10, type metadata accessor for SportsHighlights.SubsectionDescriptor);
      v30 = *(_QWORD *)(v43 + 72);
      sub_1D5F0D758(*(_QWORD *)(v11 + 56) + v30 * v23, (uint64_t)v7, type metadata accessor for SportsHighlights);
    }
    else
    {
      sub_1D5E82ECC(v29, (uint64_t)v10, type metadata accessor for SportsHighlights.SubsectionDescriptor);
      v30 = *(_QWORD *)(v43 + 72);
      sub_1D5E82ECC(*(_QWORD *)(v11 + 56) + v30 * v23, (uint64_t)v7, type metadata accessor for SportsHighlights);
    }
    sub_1D6E28400();
    sub_1D6656D54();
    result = sub_1D6E28430();
    v31 = -1 << *(_BYTE *)(v13 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    sub_1D5F0D758((uint64_t)v10, *(_QWORD *)(v13 + 48) + v28 * v21, type metadata accessor for SportsHighlights.SubsectionDescriptor);
    result = sub_1D5F0D758((uint64_t)v7, *(_QWORD *)(v13 + 56) + v30 * v21, type metadata accessor for SportsHighlights);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v40;
  v25 = v42;
  if ((v45 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v11 + 32);
  if (v38 >= 64)
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v38;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_1D685AB70(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  sub_1D6863DC0();
  v6 = a2;
  v7 = sub_1D6E28070();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1D5F0E79C(v37, *((unint64_t *)&v37 + 1));
      }
      sub_1D6E28400();
      sub_1D6E26A44();
      result = sub_1D6E28430();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1D685AE78(uint64_t a1, char a2)
{
  return sub_1D5F1C0A0(a1, a2, &qword_1ED624348, (unint64_t *)&qword_1ED621300, (uint64_t)&protocol descriptor for PuzzleArchiveFilterOptionPredicateType, (void (*)(uint64_t, _BYTE *))sub_1D5E8D7A0);
}

uint64_t sub_1D685AE9C(uint64_t a1, char a2)
{
  return sub_1D685C264(a1, a2, sub_1D6863F90);
}

uint64_t sub_1D685AEA8(uint64_t a1, int a2)
{
  return sub_1D5F78FA8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5C0D8], (unint64_t *)&unk_1EFFF3900);
}

uint64_t sub_1D685AEBC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;

  v3 = v2;
  v5 = sub_1D60EC680();
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1D6862DE8();
  v41 = a2;
  v9 = sub_1D6E28070();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_44;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v38 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v36 = v2;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v21 >= v37)
      break;
    v22 = v38;
    v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v37)
        goto LABEL_37;
      v23 = v38[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_37:
          swift_release();
          v3 = v36;
          if ((v41 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_46;
            if (v17 >= v37)
              goto LABEL_37;
            v23 = v38[v17];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v17 = v24;
      }
    }
LABEL_21:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v39 + 72);
    v26 = *(_QWORD *)(v8 + 48) + v25 * v20;
    if ((v41 & 1) != 0)
    {
      sub_1D5F0D758(v26, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1D60EC680);
      v27 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_1D5E82ECC(v26, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1D60EC680);
      v27 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v20);
    }
    sub_1D6E28400();
    sub_1D6E16178();
    sub_1D5E6D8C0(&qword_1ED5F7B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1668]);
    sub_1D6E26888();
    if (*(_QWORD *)&v7[*(int *)(v40 + 52) + 8])
    {
      v42 = v25;
      sub_1D6E28418();
      swift_bridgeObjectRetain();
      v25 = v42;
      sub_1D6E26A44();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D6E28418();
    }
    result = sub_1D6E28430();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = sub_1D5F0D758((uint64_t)v7, *(_QWORD *)(v10 + 48) + v25 * v18, (uint64_t (*)(_QWORD))sub_1D60EC680);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v36;
  v22 = v38;
  if ((v41 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v35 = 1 << *(_BYTE *)(v8 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_44:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1D685B2F0(uint64_t a1, int a2)
{
  return sub_1D5F435D8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTagFeedGroupKnobs, sub_1D6863454, (void (*)(uint64_t, char *))sub_1D6863470);
}

uint64_t sub_1D685B30C(uint64_t a1, int a2)
{
  return sub_1D5F435D8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupKnobs, sub_1D686347C, (void (*)(uint64_t, char *))sub_1D6863498);
}

uint64_t sub_1D685B328(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  sub_1D6862C30();
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      swift_bridgeObjectRetain();
    }
    result = sub_1D6E27B6C();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D685B5F8(uint64_t a1, char a2)
{
  return sub_1D685B604(a1, a2, (void (*)(_QWORD))sub_1D6863528);
}

uint64_t sub_1D685B604(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v38 = a2;
  v7 = sub_1D6E28070();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          v4 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v36)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v35;
  v23 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1D685B908(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  int64_t v31;
  _QWORD *v32;

  v3 = v2;
  v5 = *v2;
  sub_1D68637AC();
  v6 = sub_1D6E28070();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 0;
  v32 = (_QWORD *)(v5 + 64);
  v9 = 1 << *(_BYTE *)(v5 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v31 = (unint64_t)(v9 + 63) >> 6;
  v12 = v6 + 64;
  while (1)
  {
    if (v11)
    {
      v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v19 = v18 | (v8 << 6);
      goto LABEL_31;
    }
    v20 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_41;
    if (v20 >= v31)
      break;
    v21 = v32[v20];
    ++v8;
    if (!v21)
    {
      v8 = v20 + 1;
      if (v20 + 1 >= v31)
        break;
      v21 = v32[v8];
      if (!v21)
      {
        v22 = v20 + 2;
        if (v22 >= v31)
          break;
        v21 = v32[v22];
        if (!v21)
        {
          while (1)
          {
            v8 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_42;
            if (v8 >= v31)
              goto LABEL_33;
            v21 = v32[v8];
            ++v22;
            if (v21)
              goto LABEL_30;
          }
        }
        v8 = v22;
      }
    }
LABEL_30:
    v11 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v8 << 6);
LABEL_31:
    v27 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v19);
    v28 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
    if ((a2 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D6E28400();
    sub_1D6E2840C();
    v13 = sub_1D6E28430();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = v13 & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    v23 = 0;
    v24 = (unint64_t)(63 - v14) >> 6;
    do
    {
      if (++v16 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x1D685BBD4);
      }
      v25 = v16 == v24;
      if (v16 == v24)
        v16 = 0;
      v23 |= v25;
      v26 = *(_QWORD *)(v12 + 8 * v16);
    }
    while (v26 == -1);
    v17 = __clz(__rbit64(~v26)) + (v16 << 6);
LABEL_8:
    *(_QWORD *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v27;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v28;
    ++*(_QWORD *)(v7 + 16);
  }
LABEL_33:
  if ((a2 & 1) != 0)
  {
    v29 = 1 << *(_BYTE *)(v5 + 32);
    if (v29 >= 64)
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v32 = -1 << v29;
    v3 = v2;
    *(_QWORD *)(v5 + 16) = 0;
LABEL_39:
    result = swift_release();
  }
  else
  {
    result = swift_release();
    v3 = v2;
  }
  *v3 = v7;
  return result;
}

uint64_t sub_1D685BC00(uint64_t a1, char a2)
{
  return sub_1D685BC1C(a1, a2, &qword_1ED5F48F8, (uint64_t)&unk_1ED5F45F0, 0x1E0D58D60);
}

uint64_t sub_1D685BC1C(uint64_t a1, char a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  char v41;

  v6 = v5;
  v8 = *v5;
  sub_1D6618D84(0, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1D5E6F04C);
  v41 = a2;
  v9 = sub_1D6E28070();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v40 = v8 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v8 + 64);
  v38 = v5;
  v39 = (unint64_t)(v11 + 63) >> 6;
  v14 = v9 + 64;
  result = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v22 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v23 = v22 | (v16 << 6);
      goto LABEL_31;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v39)
      break;
    v25 = (_QWORD *)(v8 + 64);
    v26 = *(_QWORD *)(v40 + 8 * v24);
    ++v16;
    if (!v26)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v39)
        goto LABEL_33;
      v26 = *(_QWORD *)(v40 + 8 * v16);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v39)
        {
LABEL_33:
          swift_release();
          v6 = v38;
          if ((v41 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v26 = *(_QWORD *)(v40 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v16 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_42;
            if (v16 >= v39)
              goto LABEL_33;
            v26 = *(_QWORD *)(v40 + 8 * v16);
            ++v27;
            if (v26)
              goto LABEL_30;
          }
        }
        v16 = v27;
      }
    }
LABEL_30:
    v13 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
    v32 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    v34 = *v32;
    v33 = v32[1];
    v35 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v23);
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v36 = v35;
    }
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v17 = -1 << *(_BYTE *)(v10 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v30 = v19 == v29;
        if (v19 == v29)
          v19 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v21 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v20);
    *v21 = v34;
    v21[1] = v33;
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v20) = v35;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v6 = v38;
  v25 = (_QWORD *)(v8 + 64);
  if ((v41 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v8 + 32);
  if (v37 >= 64)
    bzero(v25, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v37;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v6 = v10;
  return result;
}

uint64_t sub_1D685BF3C(uint64_t a1, char a2)
{
  return sub_1D685BF48(a1, a2, sub_1D6863F58);
}

uint64_t sub_1D685BF48(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v37 = a2;
  v7 = sub_1D6E28070();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1D685C258(uint64_t a1, char a2)
{
  return sub_1D685C264(a1, a2, sub_1D686392C);
}

uint64_t sub_1D685C264(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v37 = a2;
  v7 = sub_1D6E28070();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1D6E28400();
    sub_1D6E26A44();
    result = sub_1D6E28430();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

void sub_1D685C574(uint64_t a1)
{
  char *v2;

  sub_1D6E28400();
  sub_1D6E16178();
  sub_1D5E6D8C0(&qword_1ED5F7B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1668]);
  sub_1D6E26888();
  v2 = (char *)sub_1D685C628 + 4 * byte_1D6E96C28[*(unsigned __int8 *)(a1 + *(int *)(sub_1D60E79C4() + 52))];
  __asm { BR              X10 }
}

uint64_t sub_1D685C628()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  sub_1D6E28430();
  v4 = sub_1D6E27DA0();
  *(_QWORD *)((char *)v0 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v4;
  result = sub_1D5F0D758(v2, v0[6] + *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72) * v4, (uint64_t (*)(_QWORD))sub_1D60E79C4);
  *(_QWORD *)(v0[7] + 8 * v4) = v1;
  ++v0[2];
  return result;
}

unint64_t sub_1D685C754(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unint64_t result;
  uint64_t v7;

  sub_1D6E28400();
  swift_bridgeObjectRetain();
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
  {
    sub_1D6E28418();
    swift_bridgeObjectRetain();
    sub_1D6E26A44();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D6E28418();
  }
  sub_1D6E28430();
  result = sub_1D6E27DA0();
  *(_QWORD *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v7 = 8 * result;
  *(_QWORD *)(a3[6] + v7) = a1;
  *(_QWORD *)(a3[7] + v7) = a2;
  ++a3[2];
  return result;
}

void *sub_1D685C86C()
{
  return sub_1D685CCA0((uint64_t (*)(_QWORD))type metadata accessor for CuratedMagazineFeedGroupKnobs, sub_1D6863948, (void (*)(unint64_t, char *))sub_1D6863964);
}

void *sub_1D685C888()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1D5F6EF20();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_retain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685CA24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _OWORD v26[2];

  v1 = v0;
  v2 = sub_1D6E27FC8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5F7AEA8();
  v6 = *v0;
  v7 = sub_1D6E28064();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    sub_1D5F79E0C(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = sub_1D5F79F98(v26, (_OWORD *)(*(_QWORD *)(v8 + 56) + v20));
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D685CC5C()
{
  return sub_1D6861314((unint64_t *)&qword_1ED5F48E0, (uint64_t)&qword_1ED5F4430, (uint64_t)&protocolRef_FCHeadlineProviding);
}

void *sub_1D685CC78()
{
  return sub_1D685DC34(sub_1D686350C);
}

id sub_1D685CC84()
{
  return sub_1D68627B8((unint64_t *)&unk_1ED5F4900, (uint64_t)&qword_1ED5F46D8, 0x1E0D58B48);
}

void *sub_1D685CCA0(uint64_t (*a1)(_QWORD), void (*a2)(_QWORD), void (*a3)(unint64_t, char *))
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  void (*v36)(unint64_t, char *);

  v5 = v3;
  v35 = a1;
  v36 = a3;
  v6 = a1(0);
  v34 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v31 - v7;
  a2(0);
  v9 = *v3;
  v10 = sub_1D6E28064();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v11;
    return result;
  }
  v32 = v5;
  result = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13)
    result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  v33 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v28 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v19)
      goto LABEL_26;
    v29 = *(_QWORD *)(v33 + 8 * v28);
    ++v15;
    if (!v29)
    {
      v15 = v28 + 1;
      if (v28 + 1 >= v19)
        goto LABEL_26;
      v29 = *(_QWORD *)(v33 + 8 * v15);
      if (!v29)
        break;
    }
LABEL_25:
    v18 = (v29 - 1) & v29;
    v21 = __clz(__rbit64(v29)) + (v15 << 6);
LABEL_12:
    v22 = 16 * v21;
    v23 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v21);
    v24 = *v23;
    v25 = v23[1];
    v26 = *(_QWORD *)(v34 + 72) * v21;
    v36(*(_QWORD *)(v9 + 56) + v26, v8);
    v27 = (_QWORD *)(*(_QWORD *)(v11 + 48) + v22);
    *v27 = v24;
    v27[1] = v25;
    sub_1D5F0D758((uint64_t)v8, *(_QWORD *)(v11 + 56) + v26, v35);
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v19)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v32;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v33 + 8 * v30);
  if (v29)
  {
    v15 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v29 = *(_QWORD *)(v33 + 8 * v15);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D685CED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShortcutCategory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1D685CF1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF37B0)
  {
    type metadata accessor for ShortcutCategory();
    sub_1D5E6D8C0(&qword_1EFFF37B8, (uint64_t (*)(uint64_t))type metadata accessor for ShortcutCategory, (uint64_t)&protocol conformance descriptor for ShortcutCategory);
    sub_1D685CFA8();
    v0 = sub_1D6E19F88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF37B0);
  }
}

uint64_t sub_1D685CFA8()
{
  return sub_1D5E6D8C0(&qword_1EFFF37C0, (uint64_t (*)(uint64_t))type metadata accessor for ShortcutCategory, (uint64_t)&protocol conformance descriptor for ShortcutCategory);
}

unint64_t sub_1D685CFC4()
{
  unint64_t result;

  result = qword_1EFFF37D0;
  if (!qword_1EFFF37D0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96DDC, &type metadata for ShortcutsConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF37D0);
  }
  return result;
}

uint64_t sub_1D685D008(uint64_t a1)
{
  uint64_t v2;

  sub_1D5E847C4(0, &qword_1EFFF37A8, (uint64_t (*)(uint64_t))sub_1D685CF1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D685D05C(uint64_t a1)
{
  sub_1D5E847C4(a1, &qword_1EFFF37E8, (uint64_t (*)(uint64_t))type metadata accessor for ShortcutCategory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

unint64_t sub_1D685D078()
{
  unint64_t result;

  result = qword_1EFFF3800;
  if (!qword_1EFFF3800)
  {
    result = MEMORY[0x1D82917D0](&protocol conformance descriptor for ShortcutsConfigResource, &type metadata for ShortcutsConfigResource);
    atomic_store(result, (unint64_t *)&qword_1EFFF3800);
  }
  return result;
}

unint64_t sub_1D685D0C0()
{
  unint64_t result;

  result = qword_1EFFF3808;
  if (!qword_1EFFF3808)
  {
    result = MEMORY[0x1D82917D0](&protocol conformance descriptor for ShortcutsConfigResource, &type metadata for ShortcutsConfigResource);
    atomic_store(result, (unint64_t *)&qword_1EFFF3808);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShortcutsConfigResource()
{
  return &type metadata for ShortcutsConfigResource;
}

uint64_t storeEnumTagSinglePayload for ShortcutsConfigResource.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D685D154 + 4 * byte_1D6E96C2E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D685D174 + 4 * byte_1D6E96C33[v4]))();
}

_BYTE *sub_1D685D154(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D685D174(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D685D17C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D685D184(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D685D18C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D685D194(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShortcutsConfigResource.CodingKeys()
{
  return &type metadata for ShortcutsConfigResource.CodingKeys;
}

unint64_t sub_1D685D1B4()
{
  unint64_t result;

  result = qword_1EFFF3810;
  if (!qword_1EFFF3810)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96DB4, &type metadata for ShortcutsConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3810);
  }
  return result;
}

unint64_t sub_1D685D1FC()
{
  unint64_t result;

  result = qword_1EFFF3818;
  if (!qword_1EFFF3818)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96D24, &type metadata for ShortcutsConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3818);
  }
  return result;
}

unint64_t sub_1D685D244()
{
  unint64_t result;

  result = qword_1EFFF3820;
  if (!qword_1EFFF3820)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E96D4C, &type metadata for ShortcutsConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3820);
  }
  return result;
}

void *sub_1D685D288()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = _s9DataStoreC10CaptureKeyVMa();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6863A34();
  v5 = *v0;
  v6 = sub_1D6E28064();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_1D5E82ECC(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(_QWORD))_s9DataStoreC10CaptureKeyVMa);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_1D5F0D758((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, (uint64_t (*)(_QWORD))_s9DataStoreC10CaptureKeyVMa);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D685D4BC()
{
  return sub_1D6861B6C((uint64_t (*)(uint64_t))MEMORY[0x1E0D5ED50], &qword_1ED624350);
}

id sub_1D685D4D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1D6862AF4();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685D670()
{
  return sub_1D6861B6C((uint64_t (*)(uint64_t))MEMORY[0x1E0D5BF28], &qword_1EFFEBF48);
}

void *sub_1D685D684()
{
  return sub_1D685CCA0((uint64_t (*)(_QWORD))type metadata accessor for TagFeedModelPlaceholder, sub_1D6863910, (void (*)(unint64_t, char *))sub_1D639868C);
}

void *sub_1D685D6A0()
{
  return sub_1D685DFD0(sub_1D6862F7C);
}

void *sub_1D685D6AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1D6862D0C();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685D850()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_1D60E79C4();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6862D70();
  v5 = *v0;
  v6 = sub_1D6E28064();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_1D5E82ECC(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1D60E79C4);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_1D5F0D758((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, (uint64_t (*)(_QWORD))sub_1D60E79C4);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = (void *)swift_retain();
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D685DA84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1D6863FAC();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain();
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685DC28()
{
  return sub_1D685DC34(sub_1D6864040);
}

void *sub_1D685DC34(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1D6E28064();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685DDE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1D686405C();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685DF8C()
{
  return sub_1D68614F4(type metadata accessor for EngagementUpsellTriggerState, type metadata accessor for EngagementUpsellTriggerGroupStateKey, (void (*)(_QWORD))sub_1D6618F50);
}

void *sub_1D685DFA8()
{
  return sub_1D685CCA0(type metadata accessor for AudioFeedTrack, sub_1D6862CF0, (void (*)(unint64_t, char *))sub_1D6211F7C);
}

void *sub_1D685DFC4()
{
  return sub_1D685DFD0((void (*)(_QWORD))sub_1D6862BAC);
}

void *sub_1D685DFD0(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1D6E28064();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685E184()
{
  return sub_1D6861B6C((uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (unint64_t *)&unk_1ED5F7820);
}

void *sub_1D685E198()
{
  return sub_1D685CCA0(type metadata accessor for SportsHeadlineExposureTracker.GroupSession, sub_1D6862F98, (void (*)(unint64_t, char *))sub_1D6862FB4);
}

void *sub_1D685E1B4()
{
  return sub_1D685DC34(sub_1D6862FC0);
}

void *sub_1D685E1C0()
{
  return sub_1D6861954(&qword_1ED6242E8, (unint64_t *)&qword_1ED60BA60, MEMORY[0x1E0CF8108], (void (*)(_BYTE *, uint64_t))sub_1D5E8D7A0);
}

void *sub_1D685E1E4()
{
  return sub_1D685DFD0(sub_1D68629F4);
}

void *sub_1D685E1F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_1D6862A74();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685E378()
{
  return sub_1D6862210((void (*)(_QWORD))sub_1D6862990);
}

void *sub_1D685E384()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_1D5F785C0();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1D5F79E0C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1D5F79F98(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D685E564()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1D5F0FB94();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685E720()
{
  return sub_1D685DFD0(sub_1D6863790);
}

void *sub_1D685E72C()
{
  return sub_1D685CCA0((uint64_t (*)(_QWORD))type metadata accessor for PuzzleSetting, sub_1D6862AD8, (void (*)(unint64_t, char *))sub_1D65FE280);
}

void *sub_1D685E748()
{
  return sub_1D6861B6C((uint64_t (*)(uint64_t))MEMORY[0x1E0D5DC80], (unint64_t *)&unk_1EFFEBF98);
}

void *sub_1D685E75C()
{
  return sub_1D685DC34(sub_1D6862FF8);
}

void *sub_1D685E768()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_1D5F161F8();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = v18[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v17 + v20);
    v22 = *(_QWORD *)(v17 + v20 + 8);
    v23 = *(_BYTE *)(v17 + v20 + 16);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v24 = *v18;
    v24[1] = v19;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v21;
    *(_QWORD *)(v25 + 8) = v22;
    *(_BYTE *)(v25 + 16) = v23;
    swift_bridgeObjectRetain();
    result = (void *)sub_1D5F15ECC();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685E93C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_1D661940C(0, &qword_1ED605630, (void (*)(uint64_t))sub_1D6863C90, (void (*)(void))sub_1D6863D7C);
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v19 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v12)
      goto LABEL_23;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v8;
    if (!v20)
    {
      v8 = v19 + 1;
      if (v19 + 1 >= v12)
        goto LABEL_23;
      v20 = *(_QWORD *)(v6 + 8 * v8);
      if (!v20)
        break;
    }
LABEL_22:
    v11 = (v20 - 1) & v20;
    v14 = __clz(__rbit64(v20)) + (v8 << 6);
LABEL_9:
    v15 = *(_QWORD *)(v2 + 56) + 24 * v14;
    v16 = *(_QWORD *)(v15 + 16);
    v17 = *(_OWORD *)v15;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v14) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    v18 = *(_QWORD *)(v4 + 56) + 24 * v14;
    *(_OWORD *)v18 = v17;
    *(_QWORD *)(v18 + 16) = v16;
    swift_retain();
    result = (void *)swift_retain();
  }
  v21 = v19 + 2;
  if (v21 >= v12)
    goto LABEL_23;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v8 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v8 >= v12)
      goto LABEL_23;
    v20 = *(_QWORD *)(v6 + 8 * v8);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1D685EB1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_1D6863014();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685ECC4()
{
  return sub_1D6861B6C((uint64_t (*)(uint64_t))MEMORY[0x1E0D5E698], (unint64_t *)&unk_1EFFEBFE0);
}

void *sub_1D685ECD8()
{
  return sub_1D685DFD0(sub_1D68635B4);
}

void *sub_1D685ECE4()
{
  return sub_1D6861314((unint64_t *)&qword_1ED5DFBD0, (uint64_t)&qword_1ED5F42C0, (uint64_t)&protocolRef_FCTagProviding);
}

void *sub_1D685ED00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  sub_1D686372C();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v25 = v19;
    v25[1] = v18;
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v26 = v22;
    v26[1] = v23;
    v26[2] = v24;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685EEC4()
{
  return sub_1D685DFD0((void (*)(_QWORD))sub_1D6473714);
}

void *sub_1D685EED0()
{
  return sub_1D685DFD0(sub_1D6863078);
}

void *sub_1D685EEDC()
{
  return sub_1D685EF24((unint64_t *)&unk_1ED62DBC0, (unint64_t *)&unk_1ED62D860, (uint64_t)&protocol descriptor for OfflineFeedBuilderType, (uint64_t (*)(_BYTE *, unint64_t))sub_1D5E8D7A0);
}

void *sub_1D685EF00()
{
  return sub_1D685EF24((unint64_t *)&unk_1ED62DBD0, (unint64_t *)&unk_1ED62D870, (uint64_t)&protocol descriptor for OfflineFeedUpdaterType, (uint64_t (*)(_BYTE *, unint64_t))sub_1D5E8D7A0);
}

void *sub_1D685EF24(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_BYTE *, unint64_t))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  _BYTE v25[40];

  v6 = v4;
  sub_1D6863C1C(0, a1, a2);
  v7 = *v4;
  v8 = sub_1D6E28064();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v6 = v9;
    return result;
  }
  result = (void *)(v8 + 64);
  v11 = v7 + 64;
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v7 + 64), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v18)
      goto LABEL_26;
    v23 = *(_QWORD *)(v11 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v18)
        goto LABEL_26;
      v23 = *(_QWORD *)(v11 + 8 * v14);
      if (!v23)
        break;
    }
LABEL_25:
    v17 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_12:
    v21 = *(_BYTE *)(*(_QWORD *)(v7 + 48) + v20);
    sub_1D5E96490(*(_QWORD *)(v7 + 56) + 40 * v20, (uint64_t)v25);
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v20) = v21;
    result = (void *)a4(v25, *(_QWORD *)(v9 + 56) + 40 * v20);
  }
  v24 = v22 + 2;
  if (v24 >= v18)
  {
LABEL_26:
    result = (void *)swift_release();
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v11 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v18)
      goto LABEL_26;
    v23 = *(_QWORD *)(v11 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D685F104()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1D6863B74(0, (unint64_t *)&unk_1EFFF39A0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))MEMORY[0x1E0DECD58]);
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685F2B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _BYTE v22[16];

  v1 = v0;
  sub_1D5FAB344();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    sub_1D64ACFF0(*(_QWORD *)(v2 + 56) + 16 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_1D5E75810((uint64_t)v22, *(_QWORD *)(v4 + 56) + v18);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685F46C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1D6E1C0E8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6863AB4();
  v24 = v0;
  v5 = *v0;
  v6 = sub_1D6E28064();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685F698()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1D68633F4();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685F84C()
{
  return sub_1D685DFD0(sub_1D6863EA4);
}

void *sub_1D685F858()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1D6863EDC();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685F9F4()
{
  return sub_1D6861B6C((uint64_t (*)(uint64_t))MEMORY[0x1E0D5D458], &qword_1EFFF38C8);
}

id sub_1D685FA08()
{
  return sub_1D68627B8((unint64_t *)&unk_1EFFF3830, (uint64_t)&qword_1ED62DB60, 0x1E0DC4430);
}

id sub_1D685FA24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1D5F79334(0, &qword_1EFFF3828, (uint64_t (*)(uint64_t))type metadata accessor for FloatingTabGroup, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685FBE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1D68630B0();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(v2 + 56) + v16;
    v21 = *(_QWORD *)v20;
    LOBYTE(v20) = *(_BYTE *)(v20 + 8);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    v23 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v23 = v21;
    *(_BYTE *)(v23 + 8) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685FD9C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v1 = v0;
  sub_1D640A48C();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v35 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v35 >= v13)
      goto LABEL_26;
    v36 = *(_QWORD *)(v6 + 8 * v35);
    ++v9;
    if (!v36)
    {
      v9 = v35 + 1;
      if (v35 + 1 >= v13)
        goto LABEL_26;
      v36 = *(_QWORD *)(v6 + 8 * v9);
      if (!v36)
        break;
    }
LABEL_25:
    v12 = (v36 - 1) & v36;
    v15 = __clz(__rbit64(v36)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = 152 * v15;
    v18 = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *(_QWORD *)(v2 + 56) + v17;
    v20 = *(_OWORD *)(v19 + 32);
    v21 = *(_OWORD *)(v19 + 48);
    v22 = *(_OWORD *)(v19 + 80);
    v42 = *(_OWORD *)(v19 + 64);
    v43 = v22;
    v41 = v21;
    v24 = *(_OWORD *)(v19 + 112);
    v23 = *(_OWORD *)(v19 + 128);
    v25 = *(_OWORD *)(v19 + 96);
    v47 = *(_QWORD *)(v19 + 144);
    v45 = v24;
    v46 = v23;
    v44 = v25;
    v26 = *(_OWORD *)(v19 + 16);
    v38 = *(_OWORD *)v19;
    v39 = v26;
    v40 = v20;
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = v18;
    v27 = *(_QWORD *)(v4 + 56) + v17;
    v28 = v39;
    *(_OWORD *)v27 = v38;
    *(_OWORD *)(v27 + 16) = v28;
    v29 = v40;
    v30 = v41;
    v31 = v43;
    *(_OWORD *)(v27 + 64) = v42;
    *(_OWORD *)(v27 + 80) = v31;
    *(_OWORD *)(v27 + 32) = v29;
    *(_OWORD *)(v27 + 48) = v30;
    v32 = v44;
    v33 = v45;
    v34 = v46;
    *(_QWORD *)(v27 + 144) = v47;
    *(_OWORD *)(v27 + 112) = v33;
    *(_OWORD *)(v27 + 128) = v34;
    *(_OWORD *)(v27 + 96) = v32;
    swift_bridgeObjectRetain();
    result = (void *)sub_1D640A504((uint64_t)&v38);
  }
  v37 = v35 + 2;
  if (v37 >= v13)
    goto LABEL_26;
  v36 = *(_QWORD *)(v6 + 8 * v37);
  if (v36)
  {
    v9 = v37;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v36 = *(_QWORD *)(v6 + 8 * v9);
    ++v37;
    if (v36)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D685FFB8()
{
  return sub_1D685DFD0((void (*)(_QWORD))sub_1D6863878);
}

void *sub_1D685FFC4()
{
  return sub_1D685DFD0(sub_1D68638F4);
}

void *sub_1D685FFD0()
{
  return sub_1D6861314((unint64_t *)&unk_1EFFEBFC8, (uint64_t)&qword_1ED623FE0, (uint64_t)&protocolRef_FCSportsProviding);
}

void *sub_1D685FFEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_1D68634A4();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1D5EEA938(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1D5F79E0C(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1D5F79F98(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D68601CC()
{
  return sub_1D685CCA0((uint64_t (*)(_QWORD))sub_1D5E7B73C, sub_1D6863C00, (void (*)(unint64_t, char *))sub_1D66630D0);
}

void *sub_1D68601E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for EngagementUpsellTriggerGroupStateKey(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6863114();
  v5 = *v0;
  v6 = sub_1D6E28064();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_1D5E82ECC(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v19);
    result = (void *)sub_1D5F0D758((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D6860414()
{
  return sub_1D685CCA0(type metadata accessor for TagFeedCuration, sub_1D686358C, (void (*)(unint64_t, char *))sub_1D68635A8);
}

void *sub_1D6860430()
{
  return sub_1D685CCA0((uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupKnobs, sub_1D5F43950, (void (*)(unint64_t, char *))sub_1D5F439B4);
}

void *sub_1D686044C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1D68631F8();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v24 = v20;
    v24[1] = v21;
    v24[2] = v22;
    v24[3] = v23;
    swift_retain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D6860614()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;

  v1 = v0;
  sub_1D6863194();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v32 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v13)
      goto LABEL_26;
    v33 = *(_QWORD *)(v6 + 8 * v32);
    ++v9;
    if (!v33)
    {
      v9 = v32 + 1;
      if (v32 + 1 >= v13)
        goto LABEL_26;
      v33 = *(_QWORD *)(v6 + 8 * v9);
      if (!v33)
        break;
    }
LABEL_25:
    v12 = (v33 - 1) & v33;
    v15 = __clz(__rbit64(v33)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(void **)v21;
    v23 = *(_BYTE *)(v21 + 8);
    v24 = *(_BYTE *)(v21 + 9);
    v25 = *(_BYTE *)(v21 + 10);
    v26 = *(_BYTE *)(v21 + 11);
    v27 = *(_BYTE *)(v21 + 12);
    v28 = *(void **)(v21 + 16);
    LOBYTE(v21) = *(_BYTE *)(v21 + 24);
    v29 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v29 = v19;
    v29[1] = v18;
    v30 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v30 = v22;
    *(_BYTE *)(v30 + 8) = v23;
    *(_BYTE *)(v30 + 9) = v24;
    *(_BYTE *)(v30 + 10) = v25;
    *(_BYTE *)(v30 + 11) = v26;
    *(_BYTE *)(v30 + 12) = v27;
    *(_QWORD *)(v30 + 16) = v28;
    *(_BYTE *)(v30 + 24) = v21;
    swift_bridgeObjectRetain();
    v31 = v22;
    result = v28;
  }
  v34 = v32 + 2;
  if (v34 >= v13)
    goto LABEL_26;
  v33 = *(_QWORD *)(v6 + 8 * v34);
  if (v33)
  {
    v9 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v33 = *(_QWORD *)(v6 + 8 * v9);
    ++v34;
    if (v33)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D686080C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  __int128 v25;

  v1 = v0;
  sub_1D6863E24();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v25 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v25;
    swift_bridgeObjectRetain();
    v21 = (id)v25;
    result = *((id *)&v25 + 1);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D68609D4()
{
  return sub_1D68627B8(&qword_1EFFF39B0, (uint64_t)&qword_1ED5F77F0, 0x1E0DC3628);
}

void *sub_1D68609F0()
{
  return sub_1D6861314(&qword_1EFFF38F8, (uint64_t)&unk_1ED624020, (uint64_t)&protocolRef_FCPuzzleTypeProviding);
}

void *sub_1D6860A0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1D61EBE00();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D6860BB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1D6863680();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain();
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D6860D58()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1D6E1B044();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D68632EC();
  v24 = v0;
  v5 = *v0;
  v6 = sub_1D6E28064();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v24 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D6860F7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1D6863390();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D6861124()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1D5F79334(0, &qword_1ED62EE28, (uint64_t (*)(uint64_t))sub_1D6863970, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D68612F8()
{
  return sub_1D6861314((unint64_t *)&unk_1EFFF3920, (uint64_t)&qword_1ED624048, (uint64_t)&protocolRef_FCSportsEventProviding);
}

void *sub_1D6861314(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v4 = v3;
  sub_1D6618D84(0, a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1D5E78884);
  v5 = *v3;
  v6 = sub_1D6E28064();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v4 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v9 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v21 = v20[1];
    v22 = 8 * v18;
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
    v24 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v24 = *v20;
    v24[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
    goto LABEL_26;
  v26 = *(_QWORD *)(v9 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D68614D8()
{
  return sub_1D68614F4(type metadata accessor for SportsHighlights, type metadata accessor for SportsHighlights.SubsectionDescriptor, (void (*)(_QWORD))sub_1D68635EC);
}

void *sub_1D68614F4(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *result;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;

  v7 = a1(0);
  v34 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - v8;
  v10 = a2(0);
  v33 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - v11;
  a3(0);
  v30 = v3;
  v13 = *v3;
  v14 = sub_1D6E28064();
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v30 = v15;
    return result;
  }
  result = (void *)(v14 + 64);
  v17 = (unint64_t)((1 << *(_BYTE *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)result >= v13 + 64 + 8 * v17)
    result = memmove(result, (const void *)(v13 + 64), 8 * v17);
  v18 = 0;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v13 + 16);
  v19 = 1 << *(_BYTE *)(v13 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & *(_QWORD *)(v13 + 64);
  v31 = v13 + 64;
  v32 = (unint64_t)(v19 + 63) >> 6;
  while (1)
  {
    if (v21)
    {
      v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v23 = v22 | (v18 << 6);
      goto LABEL_9;
    }
    v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v26 >= v32)
      goto LABEL_23;
    v27 = *(_QWORD *)(v31 + 8 * v26);
    ++v18;
    if (!v27)
    {
      v18 = v26 + 1;
      if (v26 + 1 >= v32)
        goto LABEL_23;
      v27 = *(_QWORD *)(v31 + 8 * v18);
      if (!v27)
        break;
    }
LABEL_22:
    v21 = (v27 - 1) & v27;
    v23 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_9:
    v24 = *(_QWORD *)(v33 + 72) * v23;
    sub_1D5E82ECC(*(_QWORD *)(v13 + 48) + v24, (uint64_t)v12, a2);
    v25 = *(_QWORD *)(v34 + 72) * v23;
    sub_1D5E82ECC(*(_QWORD *)(v13 + 56) + v25, (uint64_t)v9, a1);
    sub_1D5F0D758((uint64_t)v12, *(_QWORD *)(v15 + 48) + v24, a2);
    result = (void *)sub_1D5F0D758((uint64_t)v9, *(_QWORD *)(v15 + 56) + v25, a1);
  }
  v28 = v26 + 2;
  if (v28 >= v32)
    goto LABEL_23;
  v27 = *(_QWORD *)(v31 + 8 * v28);
  if (v27)
  {
    v18 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    v18 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v18 >= v32)
      goto LABEL_23;
    v27 = *(_QWORD *)(v31 + 8 * v18);
    ++v28;
    if (v27)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1D6861770()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  sub_1D6863DC0();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    result = (void *)sub_1D5F0E79C(v24, *((unint64_t *)&v24 + 1));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D6861930()
{
  return sub_1D6861954(&qword_1ED624348, (unint64_t *)&qword_1ED621300, (uint64_t)&protocol descriptor for PuzzleArchiveFilterOptionPredicateType, (void (*)(_BYTE *, uint64_t))sub_1D5E8D7A0);
}

void *sub_1D6861954(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  _BYTE v31[40];

  v5 = v4;
  sub_1D5F1C3C0(0, a1, a2);
  v6 = *v4;
  v7 = sub_1D6E28064();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v8;
    return result;
  }
  v29 = v5;
  result = (void *)(v7 + 64);
  v10 = v6 + 64;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v17)
      goto LABEL_26;
    v27 = *(_QWORD *)(v10 + 8 * v26);
    ++v13;
    if (!v27)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v17)
        goto LABEL_26;
      v27 = *(_QWORD *)(v10 + 8 * v13);
      if (!v27)
        break;
    }
LABEL_25:
    v16 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v19);
    v22 = *v21;
    v23 = v21[1];
    v24 = 40 * v19;
    sub_1D5E96490(*(_QWORD *)(v6 + 56) + 40 * v19, (uint64_t)v31);
    v25 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v20);
    *v25 = v22;
    v25[1] = v23;
    a4(v31, *(_QWORD *)(v8 + 56) + v24);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v17)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v29;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v10 + 8 * v28);
  if (v27)
  {
    v13 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v27 = *(_QWORD *)(v10 + 8 * v13);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D6861B4C()
{
  return sub_1D685DC34(sub_1D6863F90);
}

void *sub_1D6861B58()
{
  return sub_1D6861B6C((uint64_t (*)(uint64_t))MEMORY[0x1E0D5C0D8], (unint64_t *)&unk_1EFFF3900);
}

void *sub_1D6861B6C(uint64_t (*a1)(uint64_t), unint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v38 = a1(0);
  v5 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v37 = (char *)&v34 - v6;
  sub_1D5F79334(0, a2, a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v34 = v2;
  v7 = *v2;
  v8 = sub_1D6E28064();
  v9 = *(_QWORD *)(v7 + 16);
  v39 = v8;
  if (!v9)
  {
    result = (void *)swift_release();
    v33 = v39;
    v32 = v34;
LABEL_28:
    *v32 = v33;
    return result;
  }
  v10 = v8;
  result = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    v10 = v39;
  }
  v35 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v36 = (unint64_t)(v15 + 63) >> 6;
  v18 = v37;
  v19 = v38;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_12;
    }
    v29 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v36)
      goto LABEL_26;
    v30 = *(_QWORD *)(v35 + 8 * v29);
    ++v14;
    if (!v30)
    {
      v14 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_26;
      v30 = *(_QWORD *)(v35 + 8 * v14);
      if (!v30)
        break;
    }
LABEL_25:
    v17 = (v30 - 1) & v30;
    v21 = __clz(__rbit64(v30)) + (v14 << 6);
LABEL_12:
    v22 = 16 * v21;
    v23 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v21);
    v25 = *v23;
    v24 = v23[1];
    v26 = *(_QWORD *)(v5 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v18, *(_QWORD *)(v7 + 56) + v26, v19);
    v27 = v39;
    v28 = (_QWORD *)(*(_QWORD *)(v39 + 48) + v22);
    *v28 = v25;
    v28[1] = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v27 + 56) + v26, v18, v19);
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v32 = v34;
    v33 = v39;
    goto LABEL_28;
  }
  v30 = *(_QWORD *)(v35 + 8 * v31);
  if (v30)
  {
    v14 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v14 >= v36)
      goto LABEL_26;
    v30 = *(_QWORD *)(v35 + 8 * v14);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1D6861DDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_1D60EC680();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6862DE8();
  v5 = *v0;
  v6 = sub_1D6E28064();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (id)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_1D5E82ECC(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1D60EC680);
    v19 = 8 * v17;
    v20 = *(void **)(*(_QWORD *)(v5 + 56) + v19);
    sub_1D5F0D758((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, (uint64_t (*)(_QWORD))sub_1D60EC680);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = v20;
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (id)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D686200C()
{
  return sub_1D685CCA0((uint64_t (*)(_QWORD))type metadata accessor for CuratedAudioFeedGroupKnobs, sub_1D5FAB2A8, (void (*)(unint64_t, char *))sub_1D5FBBBC0);
}

void *sub_1D6862028()
{
  return sub_1D685CCA0((uint64_t (*)(_QWORD))type metadata accessor for CuratedTagFeedGroupKnobs, sub_1D6863454, (void (*)(unint64_t, char *))sub_1D6863470);
}

void *sub_1D6862044()
{
  return sub_1D685CCA0((uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupKnobs, sub_1D686347C, (void (*)(unint64_t, char *))sub_1D6863498);
}

void *sub_1D6862060()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1D6862C30();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D6862204()
{
  return sub_1D6862210((void (*)(_QWORD))sub_1D6863528);
}

void *sub_1D6862210(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1D6E28064();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      v10 = v24 + 1;
      if (v24 + 1 >= v14)
        goto LABEL_26;
      v25 = *(_QWORD *)(v7 + 8 * v10);
      if (!v25)
        break;
    }
LABEL_25:
    v13 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 8 * v16;
    v22 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v23 = v20;
    v23[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v21) = v22;
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v14)
    goto LABEL_26;
  v25 = *(_QWORD *)(v7 + 8 * v26);
  if (v25)
  {
    v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v10);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D68623BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1D68637AC();
  v2 = *v0;
  v3 = sub_1D6E28064();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D6862558()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for OfflineFeedManifest(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D661940C(0, &qword_1ED60B520, v5, (void (*)(void))sub_1D5FC5FF8);
  v6 = *v0;
  v7 = sub_1D6E28064();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v18);
    v20 = *(_QWORD *)(v27 + 72) * v18;
    sub_1D5E82ECC(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v4, type metadata accessor for OfflineFeedManifest);
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v19;
    result = (void *)sub_1D5F0D758((uint64_t)v4, *(_QWORD *)(v8 + 56) + v20, type metadata accessor for OfflineFeedManifest);
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1D686279C()
{
  return sub_1D68627B8(&qword_1ED5F48F8, (uint64_t)&unk_1ED5F45F0, 0x1E0D58D60);
}

id sub_1D68627B8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v4 = v3;
  sub_1D6618D84(0, a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1D5E6F04C);
  v5 = *v3;
  v6 = sub_1D6E28064();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v4 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v9 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v21 = v20[1];
    v22 = 8 * v18;
    v23 = *(void **)(*(_QWORD *)(v5 + 56) + v22);
    v24 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v24 = *v20;
    v24[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    result = v23;
  }
  v27 = v25 + 2;
  if (v27 >= v16)
    goto LABEL_26;
  v26 = *(_QWORD *)(v9 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D6862978()
{
  return sub_1D685DFD0(sub_1D6863F58);
}

void *sub_1D6862984()
{
  return sub_1D685DC34(sub_1D686392C);
}

void sub_1D6862990()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5DFBC0)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5DFBC0);
  }
}

void sub_1D68629F4(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1ED5F99A8, (uint64_t (*)(uint64_t))sub_1D6862A10, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6862A10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5F77A0)
  {
    v0 = sub_1D6E2684C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5F77A0);
  }
}

void sub_1D6862A74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5F99B0)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5F99B0);
  }
}

void sub_1D6862AD8(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1EFFF3840, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleSetting, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6862AF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5F4928)
  {
    sub_1D5E6F04C(255, (unint64_t *)&qword_1ED5F4750);
    sub_1D5E6F04C(255, &qword_1ED5F46D8);
    sub_1D5F37058((unint64_t *)&unk_1ED5F4760, (unint64_t *)&qword_1ED5F4750);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5F4928);
  }
}

void sub_1D6862BAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF3848)
  {
    sub_1D5EB2A68(255, (unint64_t *)&qword_1EFFD9C60, (uint64_t (*)(void))sub_1D610544C, (uint64_t)&type metadata for PuzzleArchiveFilterOption, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF3848);
  }
}

void sub_1D6862C30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF3850)
  {
    sub_1D5E6F04C(255, &qword_1F0002910);
    sub_1D5E847C4(255, &qword_1EFFF3860, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB77B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1D5F37058(&qword_1EFFF3868, &qword_1F0002910);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF3850);
  }
}

void sub_1D6862CF0(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1ED5F4878, type metadata accessor for AudioFeedTrack, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6862D0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED630A40)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED630A40);
  }
}

void sub_1D6862D70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF3870)
  {
    sub_1D60E79C4();
    _s4ItemCMa_0();
    sub_1D60E7AA4();
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF3870);
  }
}

void sub_1D6862DE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF3888)
  {
    sub_1D60EC680();
    sub_1D5E6F04C(255, (unint64_t *)&qword_1ED5F77F0);
    sub_1D6862E70();
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF3888);
  }
}

unint64_t sub_1D6862E70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFFF3898;
  if (!qword_1EFFF3898)
  {
    v1 = sub_1D60EC680();
    v2[0] = sub_1D5E6D8C0(&qword_1ED5F7B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1668]);
    v2[1] = sub_1D6862F08((unint64_t *)&qword_1ED5F3DC0, MEMORY[0x1E0DEA978], MEMORY[0x1E0DEE990]);
    result = MEMORY[0x1D82917D0](&unk_1D6EB6C50, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFFF3898);
  }
  return result;
}

uint64_t sub_1D6862F08(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1D5E76DF0(255, (unint64_t *)&qword_1ED5F3DB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v8 = a2;
    result = MEMORY[0x1D82917D0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D6862F7C(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1ED62EE30, (uint64_t (*)(uint64_t))sub_1D6618E6C, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6862F98(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1EFFF38A0, type metadata accessor for SportsHeadlineExposureTracker.GroupSession, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

uint64_t sub_1D6862FB4(uint64_t a1, uint64_t a2)
{
  return sub_1D5E82ECC(a1, a2, type metadata accessor for SportsHeadlineExposureTracker.GroupSession);
}

void sub_1D6862FC0(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1EFFF38A8, (uint64_t (*)(uint64_t))sub_1D6862FDC, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6862FDC(uint64_t a1)
{
  sub_1D5E847C4(a1, &qword_1EFFF38B0, type metadata accessor for SportsHeadlineExposureTracker.FuzzedGroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
}

void sub_1D6862FF8(uint64_t a1)
{
  sub_1D5F79334(a1, (unint64_t *)&unk_1EFFF38B8, (uint64_t (*)(uint64_t))type metadata accessor for TagModel, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6863014()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5F4868)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5F4868);
  }
}

void sub_1D6863078(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1ED5F48A8, (uint64_t (*)(uint64_t))sub_1D5F4EDE0, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

uint64_t sub_1D6863094()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1EFFF38D0, (uint64_t (*)(uint64_t))sub_1D5FE76BC, MEMORY[0x1E0DB6F08]);
}

void sub_1D68630B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF38E0)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF38E0);
  }
}

void sub_1D6863114()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6242D8)
  {
    type metadata accessor for EngagementUpsellTriggerGroupStateKey(255);
    sub_1D5E6D8C0(&qword_1ED61FBA8, type metadata accessor for EngagementUpsellTriggerGroupStateKey, (uint64_t)&protocol conformance descriptor for EngagementUpsellTriggerGroupStateKey);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6242D8);
  }
}

void sub_1D6863194()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF38F0)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF38F0);
  }
}

void sub_1D68631F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6065C0)
  {
    type metadata accessor for TagFeedServiceContext();
    sub_1D686328C();
    sub_1D5E6D8C0(&qword_1ED612C40, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceContext, (uint64_t)&unk_1D6E94E3C);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6065C0);
  }
}

void sub_1D686328C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED5DF940)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED5DF940);
  }
}

void sub_1D68632EC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6242A0)
  {
    sub_1D6E1B044();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D591D8];
    sub_1D5E6F04C(255, (unint64_t *)&unk_1ED606550);
    sub_1D5E6D8C0((unint64_t *)&unk_1ED5FA9D0, v0, MEMORY[0x1E0D591F0]);
    v1 = sub_1D6E28094();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6242A0);
  }
}

void sub_1D6863390()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6065D0)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6065D0);
  }
}

void sub_1D68633F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5DFB88)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5DFB88);
  }
}

void sub_1D6863454(uint64_t a1)
{
  sub_1D5F79334(a1, (unint64_t *)&unk_1ED624310, (uint64_t (*)(uint64_t))type metadata accessor for CuratedTagFeedGroupKnobs, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

uint64_t sub_1D6863470(uint64_t a1, uint64_t a2)
{
  return sub_1D5E82ECC(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTagFeedGroupKnobs);
}

void sub_1D686347C(uint64_t a1)
{
  sub_1D5F79334(a1, (unint64_t *)&unk_1ED624338, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupKnobs, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

uint64_t sub_1D6863498(uint64_t a1, uint64_t a2)
{
  return sub_1D5E82ECC(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupKnobs);
}

void sub_1D68634A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED604000)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED604000);
  }
}

void sub_1D686350C(uint64_t a1)
{
  sub_1D5F79334(a1, (unint64_t *)&unk_1ED5DFBA8, (uint64_t (*)(uint64_t))type metadata accessor for OfflineDownloadMonitor, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6863528()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF3910)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF3910);
  }
}

void sub_1D686358C(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1ED605638, type metadata accessor for TagFeedCuration, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

uint64_t sub_1D68635A8(uint64_t a1, uint64_t a2)
{
  return sub_1D5E82ECC(a1, a2, type metadata accessor for TagFeedCuration);
}

void sub_1D68635B4(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1ED6065E0, (uint64_t (*)(uint64_t))sub_1D68635D0, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D68635D0(uint64_t a1)
{
  sub_1D5E847C4(a1, (unint64_t *)&unk_1ED5F3FF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A6A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1D68635EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF3930)
  {
    type metadata accessor for SportsHighlights.SubsectionDescriptor(255);
    type metadata accessor for SportsHighlights(255);
    sub_1D5E6D8C0((unint64_t *)&unk_1EFFF3938, type metadata accessor for SportsHighlights.SubsectionDescriptor, (uint64_t)&unk_1D6E80448);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF3930);
  }
}

void sub_1D6863680()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6242B0)
  {
    type metadata accessor for TagFeedServiceContext();
    sub_1D5E847C4(255, (unint64_t *)&qword_1ED623A90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5FDE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1D5E6D8C0(&qword_1ED612C40, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceContext, (uint64_t)&unk_1D6E94E3C);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6242B0);
  }
}

void sub_1D686372C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED624300)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED624300);
  }
}

void sub_1D6863790(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1ED624368, (uint64_t (*)(uint64_t))sub_1D61052B4, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D68637AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF3948)
  {
    sub_1D5EB2A68(255, (unint64_t *)&qword_1EFFD9C60, (uint64_t (*)(void))sub_1D610544C, (uint64_t)&type metadata for PuzzleArchiveFilterOption, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1D6863834();
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF3948);
  }
}

unint64_t sub_1D6863834()
{
  unint64_t result;

  result = qword_1EFFF3950;
  if (!qword_1EFFF3950)
  {
    result = MEMORY[0x1D82917D0](&protocol conformance descriptor for PuzzleArchiveFilterOption.GroupType, &type metadata for PuzzleArchiveFilterOption.GroupType);
    atomic_store(result, (unint64_t *)&qword_1EFFF3950);
  }
  return result;
}

void sub_1D6863878()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5F4898)
  {
    sub_1D5E76DF0(255, (unint64_t *)&qword_1ED5F4070, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5F4898);
  }
}

void sub_1D68638F4(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1EFFF3958, (uint64_t (*)(uint64_t))sub_1D6105260, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6863910(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1EFFF3960, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedModelPlaceholder, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D686392C(uint64_t a1)
{
  sub_1D5F79334(a1, (unint64_t *)&unk_1EFFF3968, type metadata accessor for HeadlineModel, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6863948(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1ED624330, (uint64_t (*)(uint64_t))type metadata accessor for CuratedMagazineFeedGroupKnobs, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

uint64_t sub_1D6863964(uint64_t a1, uint64_t a2)
{
  return sub_1D5E82ECC(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for CuratedMagazineFeedGroupKnobs);
}

unint64_t sub_1D6863970()
{
  unint64_t result;

  result = qword_1ED62DFA0;
  if (!qword_1ED62DFA0)
  {
    type metadata accessor for AudioFeedTrack.Configurables(255);
    sub_1D68639CC();
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1ED62DFA0);
  }
  return result;
}

void sub_1D68639CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6238E0)
  {
    sub_1D5E78050(255, (unint64_t *)&qword_1ED5F3C70);
    v0 = sub_1D6E27C38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6238E0);
  }
}

void sub_1D6863A34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF3978)
  {
    _s9DataStoreC10CaptureKeyVMa();
    sub_1D5E6D8C0((unint64_t *)&unk_1EFFF3980, (uint64_t (*)(uint64_t))_s9DataStoreC10CaptureKeyVMa, (uint64_t)&unk_1D6E39148);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF3978);
  }
}

void sub_1D6863AB4()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EFFF3990)
  {
    sub_1D6E1C0E8();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D60FF8];
    sub_1D6863B74(255, (unint64_t *)&qword_1EFFE7AF0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))MEMORY[0x1E0DEA048]);
    sub_1D5E6D8C0(&qword_1EFFF8000, v0, MEMORY[0x1E0D61008]);
    v1 = sub_1D6E28094();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EFFF3990);
  }
}

uint64_t sub_1D6863B58()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1EFFE5B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61070], MEMORY[0x1E0D61080]);
}

void sub_1D6863B74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1D66E0324();
    v7 = v6;
    v8 = sub_1D668C918((unint64_t *)&qword_1EFFE5AF8, (uint64_t (*)(uint64_t))sub_1D66E0324, sub_1D6863B58, MEMORY[0x1E0DEAF18]);
    v9 = a3(a1, v7, MEMORY[0x1E0DEB418], v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1D6863C00(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1ED62F450, (uint64_t (*)(uint64_t))sub_1D5E7B73C, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6863C1C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1D5E78050(255, a3);
    sub_1D5FC5FF8();
    v4 = sub_1D6E28094();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1D6863C90()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED60B368)
  {
    sub_1D6863D00();
    sub_1D6212034();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED60B368);
  }
}

void sub_1D6863D00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6055C0)
  {
    sub_1D5E78050(255, (unint64_t *)&qword_1ED5F4ED0);
    v0 = sub_1D6E26F84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6055C0);
  }
}

unint64_t sub_1D6863D7C()
{
  unint64_t result;

  result = qword_1ED605408;
  if (!qword_1ED605408)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6EA6BCC, &type metadata for PushNotificationDataManager.DebounceKey);
    atomic_store(result, (unint64_t *)&qword_1ED605408);
  }
  return result;
}

void sub_1D6863DC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5F4840)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5F4840);
  }
}

void sub_1D6863E24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF39B8)
  {
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF39B8);
  }
}

void sub_1D6863E88(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1EFFF39C0, (uint64_t (*)(uint64_t))type metadata accessor for ShortcutCategory, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6863EA4(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1EFFF39C8, (uint64_t (*)(uint64_t))sub_1D6863EC0, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6863EC0(uint64_t a1)
{
  sub_1D5E847C4(a1, &qword_1EFFF39D0, (uint64_t (*)(uint64_t))sub_1D600C590, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1D6863EDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF39D8)
  {
    sub_1D5E847C4(255, (unint64_t *)&unk_1EFFF39E0, (uint64_t (*)(uint64_t))sub_1D62301BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF39D8);
  }
}

void sub_1D6863F58(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1EFFF39F0, (uint64_t (*)(uint64_t))sub_1D6863F74, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6863F74(uint64_t a1)
{
  sub_1D5E847C4(a1, (unint64_t *)&unk_1EFFF39F8, (uint64_t (*)(uint64_t))sub_1D5FE76BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1D6863F90(uint64_t a1)
{
  sub_1D5F79334(a1, (unint64_t *)&unk_1ED6242F0, (uint64_t (*)(uint64_t))sub_1D5FCB058, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D6863FAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF3A08)
  {
    type metadata accessor for SportsDateHeader();
    type metadata accessor for SportsScores();
    sub_1D5E6D8C0((unint64_t *)&unk_1EFFF3A10, (uint64_t (*)(uint64_t))type metadata accessor for SportsDateHeader, (uint64_t)&unk_1D6E3F77C);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF3A08);
  }
}

void sub_1D6864040(uint64_t a1)
{
  sub_1D5F79334(a1, &qword_1EFFEC070, (uint64_t (*)(uint64_t))type metadata accessor for SportsScores, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1D686405C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF3A20)
  {
    type metadata accessor for SportsDateHeader();
    sub_1D5F79334(255, &qword_1EFFF3A28, (uint64_t (*)(uint64_t))type metadata accessor for SportsScores, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    sub_1D5E6D8C0((unint64_t *)&unk_1EFFF3A10, (uint64_t (*)(uint64_t))type metadata accessor for SportsDateHeader, (uint64_t)&unk_1D6E3F77C);
    v0 = sub_1D6E28094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF3A20);
  }
}

uint64_t sub_1D6864108(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(_BYTE *, unint64_t, uint64_t);
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  char v63;
  void (*v64)(_BYTE *, uint64_t);
  uint64_t result;
  unint64_t v66;
  unint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t);
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  id *v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _BYTE v95[12];
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  int64_t v99;
  uint64_t v100;
  void (*v101)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  _BYTE *v105;
  id *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  _QWORD *v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE *v119;
  _BYTE *v120;
  __int128 v121;
  _QWORD *v122;
  uint64_t v123;
  unint64_t v124;
  int64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  uint64_t v133;
  _BYTE *v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  int v138;
  unint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  void (*v145)(_BYTE *, unint64_t, uint64_t);
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v113 = a3;
  v122 = a2;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, &qword_1ED606518, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5FCF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v112 = &v95[-v6];
  v111 = sub_1D6E25B08();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v109 = (uint64_t *)&v95[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v108 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  v107 = *(_QWORD *)(v108 - 8);
  v8 = MEMORY[0x1E0C80A78](v108);
  v106 = (id *)&v95[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v8);
  v105 = &v95[-v11];
  MEMORY[0x1E0C80A78](v10);
  v104 = &v95[-v12];
  v142 = sub_1D6E24CEC();
  v13 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v15 = &v95[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D6192C74();
  v135 = *(_QWORD *)(v16 - 8);
  v136 = v16;
  MEMORY[0x1E0C80A78](v16);
  v134 = &v95[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_1D6E24500();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = &v95[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = sub_1D6E248FC();
  v23 = *(_QWORD *)(v22 - 8);
  v129 = v22;
  v130 = v23;
  MEMORY[0x1E0C80A78](v22);
  v132 = &v95[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D5E847C4(0, &qword_1ED623798, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D9E8], v4);
  MEMORY[0x1E0C80A78](v25);
  v115 = &v95[-v26];
  sub_1D5E847C4(0, &qword_1ED5F3D00, (uint64_t (*)(uint64_t))sub_1D5F4DE10, v4);
  MEMORY[0x1E0C80A78](v27);
  v120 = &v95[-v28];
  v114 = sub_1D6E2519C();
  MEMORY[0x1E0C80A78](v114);
  v119 = &v95[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = *(_QWORD *)(a1 + 16);
  v32 = MEMORY[0x1E0DEE9D8];
  if (!v31)
    return v32;
  v149 = MEMORY[0x1E0DEE9D8];
  v33 = v29;
  v99 = v31;
  sub_1D6228B9C(0, v31, 0);
  v98 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v103 = a1 + v98;
  v100 = v33;
  v34 = *(_QWORD *)(v33 + 72);
  sub_1D5F4DE10();
  v35 = 0;
  v102 = v36;
  v101 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v140 = *MEMORY[0x1E0D5E540];
  v138 = *MEMORY[0x1E0D5DFC0];
  v143 = "c}@ Local News articles";
  v139 = 0x80000001D6F2A980;
  v96 = *MEMORY[0x1E0D5F780];
  v121 = xmmword_1D6E32F90;
  v141 = v13;
  v97 = v34;
  v137 = v21;
LABEL_3:
  v37 = v103 + v34 * v35;
  v101(v120, 1, 1, v102);
  v117 = v37;
  v38 = sub_1D6E25184();
  v39 = *(_QWORD *)(v38 + 16);
  v118 = v35;
  if (!v39)
    goto LABEL_34;
  v148 = MEMORY[0x1E0DEE9D8];
  v40 = v38;
  v125 = v39;
  sub_1D6228BC8(0, v39, 0);
  v41 = 0;
  v42 = v148;
  v43 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
  v116 = v40;
  v124 = v43;
  v126 = v40 + v43;
  v44 = *(_QWORD *)(v130 + 72);
  v123 = v44;
  while (2)
  {
    v133 = v42;
    v131 = v41;
    v45 = v126 + v44 * v41;
    v46 = sub_1D6E248A8();
    v47 = *(_QWORD *)(v46 + 16);
    if (!v47)
    {
      swift_bridgeObjectRelease();
LABEL_23:
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v130 + 16))(v132, v45, v129);
      goto LABEL_24;
    }
    v127 = v45;
    v48 = v46 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v128 = v46;
    swift_bridgeObjectRetain();
    v49 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v19 + 16);
    v144 = *(_QWORD *)(v19 + 72);
    v145 = v49;
    v49(v21, v48, v18);
    while (1)
    {
      if (sub_1D6E244DC() == 0xD00000000000001ALL && v50 == v139)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v51 = sub_1D6E282C8();
        swift_bridgeObjectRelease();
        if ((v51 & 1) == 0)
          goto LABEL_8;
      }
      sub_1D6E244F4();
      v53 = v141;
      v52 = v142;
      v54 = (*(uint64_t (**)(_BYTE *, uint64_t))(v141 + 88))(v15, v142);
      if (v54 != v140
        || ((*(void (**)(_BYTE *, uint64_t))(v53 + 96))(v15, v52),
            v52 = sub_1D6E24944(),
            v53 = *(_QWORD *)(v52 - 8),
            v55 = (*(uint64_t (**)(_BYTE *, uint64_t))(v53 + 88))(v15, v52),
            v55 != v138))
      {
        (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v15, v52);
        goto LABEL_8;
      }
      (*(void (**)(_BYTE *, uint64_t))(v53 + 96))(v15, v52);
      v56 = swift_projectBox();
      v57 = v19;
      v58 = v18;
      v59 = v15;
      v61 = v134;
      v60 = v135;
      v62 = v136;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v135 + 16))(v134, v56, v136);
      swift_release();
      sub_1D6E24D04();
      v63 = v146;
      v64 = *(void (**)(_BYTE *, uint64_t))(v60 + 8);
      v15 = v59;
      v18 = v58;
      v19 = v57;
      v21 = v137;
      v64(v61, v62);
      if ((v63 & 1) != 0)
        break;
LABEL_8:
      (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v21, v18);
      v48 += v144;
      if (!--v47)
      {
        swift_bridgeObjectRelease_n();
        v45 = v127;
        goto LABEL_23;
      }
      v145(v21, v48, v18);
    }
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v21, v18);
    result = swift_bridgeObjectRelease_n();
    v66 = v122[1];
    v67 = *(_QWORD *)(*v122 + 16);
    v42 = v133;
    if (v66 == v67)
    {
      v68 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      if (qword_1ED5F9990 != -1)
        swift_once();
      v145 = (void (*)(_BYTE *, unint64_t, uint64_t))qword_1ED6983B8;
      sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, v68);
      v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = v121;
      v70 = v127;
      v71 = sub_1D6E248C0();
      v73 = v72;
      *(_QWORD *)(v69 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v69 + 64) = sub_1D5F2C5C8();
      *(_QWORD *)(v69 + 32) = v71;
      *(_QWORD *)(v69 + 40) = v73;
      sub_1D6E27374();
      sub_1D6E1C61C();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v130 + 16))(v132, v70, v129);
LABEL_25:
      v74 = v131;
      v148 = v42;
      v76 = *(_QWORD *)(v42 + 16);
      v75 = *(_QWORD *)(v42 + 24);
      if (v76 >= v75 >> 1)
      {
        sub_1D6228BC8(v75 > 1, v76 + 1, 1);
        v74 = v131;
        v42 = v148;
      }
      v41 = v74 + 1;
      *(_QWORD *)(v42 + 16) = v76 + 1;
      v44 = v123;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v130 + 32))(v42 + v124 + v76 * v123, v132, v129);
      if (v41 != v125)
        continue;
LABEL_34:
      swift_bridgeObjectRelease();
      v89 = sub_1D6E244C4();
      v90 = (uint64_t)v115;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v115, 1, 1, v89);
      v91 = (uint64_t)v120;
      sub_1D6E25178();
      swift_bridgeObjectRelease();
      sub_1D5EC4E54(v90, &qword_1ED623798, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D9E8]);
      sub_1D5EC4E54(v91, &qword_1ED5F3D00, (uint64_t (*)(uint64_t))sub_1D5F4DE10);
      v32 = v149;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D6228B9C(0, *(_QWORD *)(v32 + 16) + 1, 1);
        v32 = v149;
      }
      v93 = *(_QWORD *)(v32 + 16);
      v92 = *(_QWORD *)(v32 + 24);
      if (v93 >= v92 >> 1)
      {
        sub_1D6228B9C(v92 > 1, v93 + 1, 1);
        v32 = v149;
      }
      v94 = v118 + 1;
      *(_QWORD *)(v32 + 16) = v93 + 1;
      v35 = v94;
      v34 = v97;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v100 + 32))(v32 + v98 + v93 * v97, v119, v114);
      v149 = v32;
      if (v35 == v99)
        return v32;
      goto LABEL_3;
    }
    break;
  }
  v77 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  if (v66 >= v67)
  {
    __break(1u);
  }
  else
  {
    v78 = v105;
    sub_1D5E82ECC(*v122+ ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))+ *(_QWORD *)(v107 + 72) * v66, (uint64_t)v105, type metadata accessor for TodayLocalNewsArticle.Resolved);
    v122[1] = v66 + 1;
    v79 = v104;
    sub_1D6869EB0((uint64_t)v78, (uint64_t)v104);
    v80 = sub_1D6E248C0();
    v144 = v81;
    v145 = (void (*)(_BYTE *, unint64_t, uint64_t))v80;
    sub_1D5E847C4(0, (unint64_t *)&unk_1ED624A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5EAF0], v77);
    sub_1D6E25118();
    *(_OWORD *)(swift_allocObject() + 16) = v121;
    sub_1D6E242A8();
    v82 = v106;
    sub_1D5E82ECC((uint64_t)v79, (uint64_t)v106, type metadata accessor for TodayLocalNewsArticle.Resolved);
    v83 = sub_1D68690AC(v82);
    v84 = v109;
    *v109 = v83;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v110 + 104))(v84, v96, v111);
    v85 = sub_1D6E25F64();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v112, 1, 1, v85);
    sub_1D6E25100();
    sub_1D6E248B4();
    if (qword_1ED5F9990 != -1)
      swift_once();
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, v77);
    v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = v121;
    v146 = 0;
    v147 = 0xE000000000000000;
    sub_1D6E27F98();
    v87 = v146;
    v88 = v147;
    *(_QWORD *)(v86 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v86 + 64) = sub_1D5F2C5C8();
    *(_QWORD *)(v86 + 32) = v87;
    *(_QWORD *)(v86 + 40) = v88;
    sub_1D6E27374();
    sub_1D6E1C61C();
    swift_bridgeObjectRelease();
    result = sub_1D5E8D20C((uint64_t)v79, type metadata accessor for TodayLocalNewsArticle.Resolved);
    if (!__OFADD__(*v113, 1))
    {
      ++*v113;
      v21 = v137;
LABEL_24:
      v42 = v133;
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6864DFC(void (*a1)(char *, char *, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  void (*v44)(uint64_t *);
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v50;
  void (*v51)(char *, char *, uint64_t);
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t *);
  uint64_t v66;
  uint64_t v67;

  v51 = a1;
  v67 = *MEMORY[0x1E0C80C00];
  v2 = sub_1D6E2444C();
  v3 = *(_QWORD *)(v2 - 8);
  v59 = v2;
  v60 = v3;
  v4 = MEMORY[0x1E0C80A78](v2);
  v58 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v62 = (char *)&v50 - v6;
  v63 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  v7 = MEMORY[0x1E0C80A78](v63);
  v56 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v50 - v9;
  v53 = sub_1D6E23AF8();
  v11 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v1;
  LOBYTE(v66) = 0;
  sub_1D5F4E574(0);
  v57 = sub_1D6E2255C();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4D90, (uint64_t (*)(uint64_t))sub_1D6246B8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1D6246B8C();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v64 = *(_QWORD *)(v16 + 72);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1D6E39A60;
  v55 = v18;
  v19 = (uint64_t *)(v18 + v17);
  v20 = swift_allocObject();
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED5F39D0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1D5F48C8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5C200]);
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v20 + 24) = 0;
  v54 = v21;
  swift_allocObject();
  *v19 = sub_1D6E2324C();
  v22 = v19;
  v23 = v19;
  v24 = *MEMORY[0x1E0D5B508];
  v65 = *(void (**)(uint64_t *))(v16 + 104);
  v65(v23);
  type metadata accessor for CuratedTodayFeedGroupKnobs();
  sub_1D6E22BE0();
  sub_1D6E22E74();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v53);
  v25 = 0;
  v26 = 0;
  if (v66 == 1)
  {
    sub_1D5F5DF38();
    sub_1D6E21C08();
    v27 = v62;
    v29 = v59;
    v28 = v60;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v62, &v10[*(int *)(v63 + 20)], v59);
    sub_1D5E8D20C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
    v25 = sub_1D6E24320();
    v26 = v30;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
  }
  v31 = v64;
  v32 = (uint64_t *)((char *)v22 + v64);
  v50 = v22;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v25;
  *(_QWORD *)(v33 + 24) = v26;
  swift_allocObject();
  swift_bridgeObjectRetain();
  *v32 = sub_1D6E2324C();
  v52 = v24;
  ((void (*)(char *, uint64_t, uint64_t))v65)((char *)v22 + v31, v24, v15);
  swift_bridgeObjectRelease();
  v34 = v59;
  v53 = 2 * v31;
  v35 = (uint64_t *)((char *)v22 + 2 * v31);
  v61 += OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_config;
  sub_1D5F5DF38();
  sub_1D6E21C08();
  v36 = v62;
  v37 = v63;
  v38 = &v10[*(int *)(v63 + 20)];
  v39 = v60;
  v51 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  v51(v62, v38, v34);
  sub_1D5E8D20C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  v40 = sub_1D6E242C0();
  v42 = v41;
  v43 = *(void (**)(char *, uint64_t))(v39 + 8);
  v43(v36, v34);
  *v35 = v40;
  v35[1] = v42;
  v44 = v65;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v65)(v35, *MEMORY[0x1E0D5B4C0], v15);
  v45 = (uint64_t *)((char *)v50 + v53 + v64);
  v46 = (uint64_t)v56;
  sub_1D6E21C08();
  v47 = v58;
  v51(v58, (char *)(v46 + *(int *)(v37 + 20)), v34);
  sub_1D5E8D20C(v46, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  v48 = sub_1D6E242E4();
  v43(v47, v34);
  *(_QWORD *)(swift_allocObject() + 16) = v48;
  swift_allocObject();
  swift_bridgeObjectRetain();
  *v45 = sub_1D6E2324C();
  ((void (*)(uint64_t *, _QWORD, uint64_t))v44)(v45, v52, v15);
  swift_bridgeObjectRelease();
  v66 = v57;
  sub_1D66874B4(v55);
  return v66;
}

uint64_t sub_1D68653B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  _QWORD v35[2];
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v2 = v1;
  sub_1D61A748C();
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D6E2444C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  v11 = MEMORY[0x1E0C80A78](v10);
  v37 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v35 - v13;
  if ((objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_featureAvailability), sel_puzzlesEnabled) & 1) != 0)goto LABEL_12;
  v15 = objc_msgSend(objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_configurationManager), sel_possiblyUnfetchedAppConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  v16 = objc_msgSend(v15, sel_puzzleHubTagID);

  if (!v16)
    goto LABEL_12;
  v17 = sub_1D6E26978();
  v36 = v18;

  sub_1D5F5DF38();
  v35[1] = v19;
  sub_1D6E21C08();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v14[*(int *)(v10 + 20)], v6);
  sub_1D5E8D20C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  v20 = sub_1D6E24320();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v20 != v17 || v22 != v36)
  {
    v23 = sub_1D6E282C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
      goto LABEL_9;
LABEL_12:
    sub_1D5E847C4(0, (unint64_t *)&unk_1ED60E190, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedPool, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1D6E1AE1C();
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = a1;
    *(_QWORD *)(v29 + 24) = v2;
    swift_retain();
    swift_retain();
    v30 = (void *)sub_1D6E1AB4C();
    sub_1D6E24D34();
    sub_1D6E1AC18();
    swift_release();
    swift_release();

    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = v2;
    *(_QWORD *)(v31 + 24) = a1;
    swift_retain();
    swift_retain();
    v32 = (void *)sub_1D6E1AB4C();
    sub_1D6E1AC18();
    swift_release();
    swift_release();

    swift_retain();
    v33 = (void *)sub_1D6E1AB4C();
    v28 = sub_1D6E1ACCC();
    swift_release();
    swift_release();

    return v28;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  v40 = 0x2064657461727543;
  v41 = 0xE900000000000028;
  v24 = (uint64_t)v37;
  sub_1D6E21C08();
  swift_bridgeObjectRetain();
  sub_1D5E8D20C(v24, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  v25 = sub_1D6E22964();
  sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
  v26 = (void *)swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x1E0D5B6F8], v25);
  if (qword_1ED5F9990 != -1)
    swift_once();
  type metadata accessor for TodayFeedGroup();
  sub_1D633548C();
  sub_1D6E22C1C();

  swift_bridgeObjectRelease();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0D80, (uint64_t (*)(uint64_t))sub_1D61A748C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1D6E1AC90();
}

uint64_t sub_1D68658FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *boxed_opaque_existential_1;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  CFTimeInterval v58;
  uint64_t v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  _QWORD *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95[5];
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v87 = a3;
  sub_1D5F8FD08(0);
  MEMORY[0x1E0C80A78](v6);
  v70 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED623490, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5C730], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)v66 - v10;
  v82 = sub_1D6E22EA4();
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v90 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1D6E2327C();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v94 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1D6E23AF8();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v69 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, &qword_1ED603D88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E848], v8);
  MEMORY[0x1E0C80A78](v14);
  v93 = (char *)v66 - v15;
  v72 = sub_1D6E24D4C();
  v86 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v85 = (char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D6E21B48();
  MEMORY[0x1E0C80A78](v17);
  v66[2] = (char *)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v76);
  v75 = (char *)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1D6E256AC();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v91 = (_QWORD *)((char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5E847C4(0, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v66 - v22;
  v84 = sub_1D6E2489C();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v92 = (char *)v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a1;
  v73 = a2;
  sub_1D6E22B80();
  v26 = *(_QWORD *)(v99 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_contentConfigData);
  swift_retain();
  swift_release();
  swift_retain();
  v27 = swift_bridgeObjectRetain();
  v28 = sub_1D6869C88(v27, v26);
  v29 = v3;
  swift_bridgeObjectRelease();
  swift_release_n();
  v30 = MEMORY[0x1E0DEE9D8];
  v78 = v25;
  if (v25)
  {
    v31 = *(_QWORD *)(v25 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_headlines + 32);
    v32 = *(_OWORD *)(v25 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_headlines + 16);
    v99 = *(_OWORD *)(v25 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_headlines);
    v100 = v32;
    v101 = v31;
    v102 = v99;
    *(_QWORD *)&v96 = v99;
    sub_1D60650B0((uint64_t)&v102);
    v33 = swift_bridgeObjectRetain();
    v34 = sub_1D5F7CE00(v33);
    v77 = v23;
    v66[1] = v66;
    MEMORY[0x1E0C80A78](v34);
    sub_1D5E8C630(0, (unint64_t *)&qword_1ED5F4110, (unint64_t *)&qword_1ED5F4430);
    sub_1D6869E38((unint64_t *)&qword_1ED5F4120, (unint64_t *)&qword_1ED5F4110, (unint64_t *)&qword_1ED5F4430);
    v74 = sub_1D6E26BDC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = *(_QWORD *)(v25 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_tags + 32);
    v36 = *(_OWORD *)(v25 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_tags + 16);
    v96 = *(_OWORD *)(v25 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_tags);
    v97 = v36;
    v98 = v35;
    v103 = v96;
    v95[0] = v96;
    sub_1D60650B0((uint64_t)&v103);
    v37 = swift_bridgeObjectRetain();
    v38 = sub_1D5FAD86C(v37);
    MEMORY[0x1E0C80A78](v38);
    sub_1D5E8C630(0, (unint64_t *)&unk_1ED5F40D0, (unint64_t *)&qword_1ED5F42C0);
    sub_1D6869E38((unint64_t *)&qword_1ED5F40E0, (unint64_t *)&unk_1ED5F40D0, (unint64_t *)&qword_1ED5F42C0);
    sub_1D6E26BDC();
    v29 = v3;
    v23 = v77;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)&v99 = MEMORY[0x1E0DEE9D8];
    sub_1D5F7CE00(v28);
    v74 = v99;
  }
  v39 = sub_1D6E212F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v23, 1, 1, v39);
  sub_1D6CFC87C(v30);
  sub_1D6CFC87C(v30);
  sub_1D6CFC9A0(v30);
  sub_1D6CFC9AC(v30);
  sub_1D6CFCACC(v30);
  sub_1D6CFCAD8(v30);
  sub_1D6E24890();
  v40 = v87;
  sub_1D5F5DF38();
  v41 = (uint64_t)v75;
  sub_1D6E21C08();
  v42 = *(unsigned __int8 *)(v41 + *(int *)(v76 + 48));
  sub_1D5E8D20C(v41, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  v77 = v29;
  if (v42 == 1)
  {
    *v91 = 0x404E000000000000;
    (*(void (**)(void))(v88 + 104))();
    v43 = v73;
  }
  else
  {
    v43 = v73;
    sub_1D6E22B5C();
    sub_1D6E256B8();
  }
  v44 = v71;
  v45 = (uint64_t)v70;
  v46 = v69;
  sub_1D6E22BE0();
  v47 = v40 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_knobs;
  v48 = type metadata accessor for CuratedTodayFeedGroupKnobs();
  v95[3] = v48;
  v95[4] = sub_1D5E6D8C0(&qword_1ED6162A8, (uint64_t (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroupKnobs, (uint64_t)&unk_1D6E9DF8C);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v95);
  sub_1D5E82ECC(v47, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupKnobs);
  v50 = v93;
  sub_1D6E24F98();
  v51 = sub_1D6E24FA4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 0, 1, v51);
  v76 = sub_1D6866470(v43);
  (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v94, *MEMORY[0x1E0D5C310], v80);
  (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v90, *MEMORY[0x1E0D5BD70], v82);
  sub_1D5E82ECC(v47 + *(int *)(v48 + 40), v45, (uint64_t (*)(_QWORD))sub_1D5F8FD08);
  v52 = sub_1D6E23054();
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v45, 1, v52) == 1)
  {
    sub_1D5E8D20C(v45, (uint64_t (*)(_QWORD))sub_1D5F8FD08);
    v54 = sub_1D6E2354C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v44, 1, 1, v54);
  }
  else
  {
    sub_1D6E22BE0();
    sub_1D6E2303C();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v68);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v45, v52);
    v55 = sub_1D6E2354C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v44, 0, 1, v55);
  }
  v56 = v72;
  v57 = v85;
  sub_1D6E24D40();
  v58 = CACurrentMediaTime();
  MEMORY[0x1E0C80A78](v59);
  v60 = v92;
  v61 = v91;
  sub_1D6E24D34();
  sub_1D6E1AE1C();
  v62 = swift_allocObject();
  *(_QWORD *)(v62 + 16) = v40;
  *(CFTimeInterval *)(v62 + 24) = v58;
  swift_retain();
  v63 = (void *)sub_1D6E1AB4C();
  v64 = sub_1D6E1AC24();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v86 + 8))(v57, v56);
  (*(void (**)(_QWORD *, uint64_t))(v88 + 8))(v61, v89);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v60, v84);
  return v64;
}

uint64_t sub_1D6866470(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(unint64_t, _QWORD, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v23 = a1;
  v1 = sub_1D6E258C8();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F470];
  v3 = *(_QWORD *)(v1 - 8);
  v4 = MEMORY[0x1E0C80A78](v1);
  v22 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v21 = (uint64_t)&v20 - v6;
  v7 = sub_1D6E23AF8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED624A70, v2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = *(_QWORD *)(v3 + 72);
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D6E334D0;
  v14 = v13 + v12;
  v15 = *(void (**)(unint64_t, _QWORD, uint64_t))(v3 + 104);
  v15(v14, *MEMORY[0x1E0D5F460], v1);
  v15(v14 + v11, *MEMORY[0x1E0D5F450], v1);
  v16 = sub_1D666F274(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v25 = v16;
  type metadata accessor for CuratedTodayFeedGroupKnobs();
  sub_1D6E22BE0();
  sub_1D6E22E74();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v24 == 1)
  {
    v17 = v22;
    v15((unint64_t)v22, *MEMORY[0x1E0D5F458], v1);
    v18 = v21;
    sub_1D61BBEA4(v21, v17);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v18, v1);
  }
  return v25;
}

uint64_t sub_1D68666A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD v47[3];
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v65 = a3;
  v59 = a5;
  v60 = a6;
  v53 = a4;
  v49 = a2;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, &qword_1ED603D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v55 = (char *)v47 - v9;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED623980, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v7);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v47 - v11;
  sub_1D5E847C4(0, &qword_1ED5F3880, (uint64_t (*)(uint64_t))sub_1D5F4E574, v7);
  MEMORY[0x1E0C80A78](v12);
  v48 = (char *)v47 - v13;
  v14 = sub_1D6E24F8C();
  v63 = *(_QWORD *)(v14 - 8);
  v64 = v14;
  MEMORY[0x1E0C80A78](v14);
  v62 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  v17 = MEMORY[0x1E0C80A78](v16);
  v50 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v47 - v19;
  v21 = sub_1D6E2444C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v47 - v26;
  sub_1D5E96490(a1 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_formatService, (uint64_t)v66);
  v56 = v68;
  v57 = v67;
  v54 = __swift_project_boxed_opaque_existential_1(v66, v67);
  v47[2] = a1 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_config;
  sub_1D5F5DF38();
  v47[1] = v28;
  sub_1D6E21C08();
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, &v20[*(int *)(v16 + 20)], v21);
  sub_1D5E8D20C((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  sub_1D6E22B80();
  v58 = v27;
  sub_1D6866C58((uint64_t)v25, v69, (uint64_t)v27);
  swift_release();
  v29 = *(void (**)(char *, uint64_t))(v22 + 8);
  v61 = v21;
  v52 = v29;
  v29(v25, v21);
  v30 = a1 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_knobs;
  sub_1D5F4E574(0);
  v32 = v31;
  v33 = *(_QWORD *)(v31 - 8);
  v34 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v48, v30, v31);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v32);
  swift_retain();
  sub_1D6E21C08();
  swift_bridgeObjectRetain();
  sub_1D5E8D20C((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  v35 = sub_1D6E256AC();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v51, v53, v35);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
  LOBYTE(v69) = 0;
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6239C0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1D5F48C8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5F438]);
  swift_allocObject();
  sub_1D6E2588C();
  v38 = (uint64_t)v50;
  v39 = v55;
  sub_1D6E21C08();
  sub_1D61097D0();
  sub_1D5E8D20C(v38, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  v40 = sub_1D6E24D4C();
  v41 = *(_QWORD *)(v40 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v39, v59, v40);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v39, 0, 1, v40);
  if (v60)
    swift_bridgeObjectRetain();
  v42 = qword_1ED5F9990;
  (id)*MEMORY[0x1E0D58690];
  if (v42 != -1)
    swift_once();
  (id)qword_1ED6983B8;
  v43 = v62;
  sub_1D6E24F68();
  v44 = v58;
  v45 = sub_1D6E24974();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v43, v64);
  v52(v44, v61);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  return v45;
}

uint64_t sub_1D6866C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];

  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F3CD0, (uint64_t (*)(uint64_t))sub_1D609FF00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v27[-v8];
  sub_1D5E847C4(0, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v6);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v27[-v11];
  v13 = sub_1D6E2444C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = a1;
  v17 = sub_1D6867E78(a2, (uint64_t (*)(uint64_t))sub_1D6869E78);
  if (!v17)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a3, a1, v13);
  v31[0] = v17;
  v31[1] = 0;
  v30 = 0;
  v18 = sub_1D6E212F0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
  sub_1D609FF00(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
  v20 = sub_1D6E24440();
  sub_1D6864108(v20, v31, &v30);
  swift_bridgeObjectRelease();
  sub_1D6E24308();
  swift_bridgeObjectRelease();
  sub_1D5EC4E54((uint64_t)v9, (unint64_t *)&qword_1ED5F3CD0, (uint64_t (*)(uint64_t))sub_1D609FF00);
  sub_1D5EC4E54((uint64_t)v12, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40]);
  v21 = v30;
  if (v30 < 1)
  {
    if (qword_1ED5F9990 != -1)
      swift_once();
    sub_1D6E27374();
    sub_1D6E1C61C();
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a3, a1, v13);
  }
  else
  {
    if (qword_1ED5F9990 != -1)
      swift_once();
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1D6E32F90;
    v29 = v21;
    v23 = sub_1D6E28280();
    v25 = v24;
    *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v22 + 64) = sub_1D5F2C5C8();
    *(_QWORD *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = v25;
    sub_1D6E27374();
    sub_1D6E1C61C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v14 + 32))(a3, v16, v13);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D6867014@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *a1;
  if (qword_1ED5F9990 != -1)
    swift_once();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D6E334D0;
  sub_1D5F5DF38();
  sub_1D6E21C08();
  v10 = *v6;
  v9 = v6[1];
  swift_bridgeObjectRetain();
  sub_1D5E8D20C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1D5F2C5C8();
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = v9;
  sub_1D6E26FE4();
  v11 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v8 + 96) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v8 + 104) = v11;
  *(_QWORD *)(v8 + 72) = v12;
  sub_1D6E27374();
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();
  *a2 = v7;
  return swift_retain();
}

uint64_t sub_1D68671BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD v57[2];
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  sub_1D61A748C();
  v64 = v5;
  MEMORY[0x1E0C80A78](v5);
  v65 = (uint64_t)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  v7 = MEMORY[0x1E0C80A78](v62);
  v60 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v59 = (char *)v57 - v9;
  v61 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1E0C80A78](v61);
  v63 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D6E23AF8();
  v68 = *(_QWORD *)(v11 - 8);
  v69 = v11;
  MEMORY[0x1E0C80A78](v11);
  v67 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D6E24428();
  v14 = *(_QWORD *)(v13 - 8);
  v76 = v13;
  v77 = v14;
  MEMORY[0x1E0C80A78](v13);
  v75 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, &qword_1ED5F3850, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5AE10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1D6E22E98();
  v18 = MEMORY[0x1E0C80A78](v17);
  v71 = (char *)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = sub_1D6E2198C();
  v79 = *(_QWORD *)(v20 - 8);
  v80 = v20;
  v21 = MEMORY[0x1E0C80A78](v20);
  v58 = (char *)v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v57 - v23;
  v74 = a2;
  v25 = a2 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_config;
  sub_1D5F5DF38();
  v27 = v26;
  swift_retain();
  v28 = sub_1D6E21BC0();
  v72 = v29;
  v73 = v28;
  sub_1D6E21BCC();
  v57[0] = v27;
  v57[1] = v25;
  sub_1D6E21BCC();
  sub_1D5F4E574(0);
  sub_1D6E22598();
  sub_1D6E22574();
  sub_1D6E225B0();
  v66 = type metadata accessor for CuratedTodayFeedGroupKnobs();
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED5F38B0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1D5F48C8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B580]);
  v70 = a3;
  sub_1D6E22850();
  v78 = v24;
  v31 = v75;
  v30 = v76;
  sub_1D6E21914();
  sub_1D6E24D1C();
  v32 = sub_1D6E243F8();
  v33 = *(void (**)(char *, uint64_t))(v77 + 8);
  v33(v31, v30);
  LOBYTE(v25) = sub_1D6867914(v32);
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
  {
    v34 = sub_1D6E22964();
    sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v35, *MEMORY[0x1E0D5B6E8], v34);
    v36 = v78;
  }
  else
  {
    v37 = v67;
    sub_1D6E22BE0();
    sub_1D6E22E74();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v69);
    v38 = v81;
    v36 = v78;
    sub_1D6E21944();
    v39 = sub_1D6E24410();
    v33(v31, v30);
    v40 = *(_QWORD *)(v39 + 16);
    swift_bridgeObjectRelease();
    if (v40 >= v38)
    {
      v45 = v79;
      v46 = v58;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v58, v36, v80);
      v47 = (uint64_t *)v59;
      sub_1D6E21C08();
      v49 = *v47;
      v48 = v47[1];
      swift_bridgeObjectRetain();
      sub_1D5E8D20C((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
      v50 = (uint64_t)v60;
      sub_1D6E21C08();
      v51 = *(_QWORD *)(v50 + *(int *)(v62 + 60));
      swift_bridgeObjectRetain();
      sub_1D5E8D20C(v50, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
      v52 = (uint64_t)v63;
      v53 = v80;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v63, v46, v80);
      v54 = v61;
      v55 = (_QWORD *)(v52 + *(int *)(v61 + 20));
      *v55 = v49;
      v55[1] = v48;
      *(_QWORD *)(v52 + *(int *)(v54 + 24)) = v51;
      sub_1D5E82ECC(v52, v65, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroup);
      type metadata accessor for TodayFeedGroup();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0D80, (uint64_t (*)(uint64_t))sub_1D61A748C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v34 = sub_1D6E1AC90();
      sub_1D5E8D20C(v52, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroup);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v53);
      return v34;
    }
    v34 = sub_1D6E22964();
    sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    swift_allocError();
    v42 = v41;
    sub_1D6E21944();
    v43 = sub_1D6E24410();
    v33(v31, v30);
    v44 = *(_QWORD *)(v43 + 16);
    swift_bridgeObjectRelease();
    *v42 = v38;
    v42[1] = v44;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v42, *MEMORY[0x1E0D5B718], v34);
  }
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v36, v80);
  return v34;
}

uint64_t sub_1D6867914(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v3 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v3);
  v5 = (_QWORD *)((char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1D6869AC0(v6, v1);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D5F5DF38();
  sub_1D6E21C08();
  if (*v5 == 0x73656C7A7A7570 && v5[1] == 0xE700000000000000)
  {
    sub_1D5E8D20C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  }
  else
  {
    v9 = sub_1D6E282C8();
    sub_1D5E8D20C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
    if ((v9 & 1) == 0)
      goto LABEL_13;
  }
  v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1D6E28040();
    swift_bridgeObjectRelease();
    if (!v11)
      goto LABEL_32;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
    {
LABEL_32:
      swift_bridgeObjectRelease();
      return v11;
    }
  }
  if (!(v7 >> 62))
  {
    v12 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
      goto LABEL_12;
LABEL_17:
    swift_bridgeObjectRetain();
    v13 = sub_1D6E28040();
    swift_bridgeObjectRelease();
    if (v12 != v13)
      goto LABEL_13;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1D6E28040();
  swift_bridgeObjectRelease();
  if (v10)
    goto LABEL_17;
LABEL_12:
  if (v12 != *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    v11 = 0;
    goto LABEL_32;
  }
LABEL_18:
  if (qword_1ED5F9990 != -1)
    swift_once();
  v14 = qword_1ED6983B8;
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  v16 = (_QWORD *)v15;
  *(_OWORD *)(v15 + 16) = xmmword_1D6E32F90;
  v33 = 0;
  v34 = 0xE000000000000000;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
LABEL_31:
    v28 = MEMORY[0x1E0DEA968];
    MEMORY[0x1D828F5BC](v19, MEMORY[0x1E0DEA968]);
    sub_1D6E26A98();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v33;
    v30 = v34;
    v16[7] = v28;
    v16[8] = sub_1D5F2C5C8();
    v16[4] = v29;
    v16[5] = v30;
    sub_1D6E27374();
    sub_1D6E1C61C();
    v11 = 1;
    goto LABEL_32;
  }
  v31[0] = v15;
  v31[1] = v14;
  v32 = MEMORY[0x1E0DEE9D8];
  result = sub_1D5F949A4(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    v18 = 0;
    v19 = v32;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v20 = (void *)MEMORY[0x1D8290720](v18, v7);
      }
      else
      {
        v20 = *(void **)(v7 + 8 * v18 + 32);
        swift_unknownObjectRetain();
      }
      v21 = objc_msgSend(v20, sel_identifier);
      v22 = sub_1D6E26978();
      v24 = v23;
      swift_unknownObjectRelease();

      v32 = v19;
      v26 = *(_QWORD *)(v19 + 16);
      v25 = *(_QWORD *)(v19 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1D5F949A4(v25 > 1, v26 + 1, 1);
        v19 = v32;
      }
      ++v18;
      *(_QWORD *)(v19 + 16) = v26 + 1;
      v27 = v19 + 16 * v26;
      *(_QWORD *)(v27 + 32) = v22;
      *(_QWORD *)(v27 + 40) = v24;
    }
    while (v12 != v18);
    swift_bridgeObjectRelease();
    v16 = (_QWORD *)v31[0];
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6867D10()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v4[2];

  v0 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[0] = 0x2064657461727543;
  v4[1] = 0xE900000000000028;
  sub_1D5F5DF38();
  sub_1D6E21C08();
  swift_bridgeObjectRetain();
  sub_1D5E8D20C((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  if (qword_1ED5F9990 != -1)
    swift_once();
  type metadata accessor for TodayFeedGroup();
  sub_1D633548C();
  sub_1D6E22C1C();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D6867E78(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v5 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v10 = (_QWORD *)((char *)v42 - v9);
  v43 = v2;
  sub_1D5F5DF38();
  sub_1D6E21C08();
  if (*v10 == 0x69726F7453706F74 && v10[1] == 0xEA00000000007365)
  {
    sub_1D5E8D20C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  }
  else
  {
    v12 = sub_1D6E282C8();
    sub_1D5E8D20C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
    if ((v12 & 1) == 0)
    {
      if (qword_1ED5F9990 != -1)
        swift_once();
      sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1D6E32F90;
      sub_1D6E21C08();
      v15 = *v8;
      v14 = v8[1];
      swift_bridgeObjectRetain();
      sub_1D5E8D20C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
      *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v13 + 64) = sub_1D5F2C5C8();
      *(_QWORD *)(v13 + 32) = v15;
      *(_QWORD *)(v13 + 40) = v14;
      sub_1D6E27374();
      sub_1D6E1C61C();
LABEL_35:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_contentConfigData);
  if (!*(_QWORD *)(*(_QWORD *)(v16 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_localNewsArticles) + 16))
  {
    if (qword_1ED5F9990 == -1)
      goto LABEL_37;
    goto LABEL_41;
  }
  swift_retain();
  v17 = swift_bridgeObjectRetain();
  v18 = sub_1D6869EF4(v17, v16);
  swift_bridgeObjectRelease();
  v19 = swift_release();
  v45 = v18;
  if (!*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED5F9990 == -1)
      goto LABEL_37;
    goto LABEL_41;
  }
  v20 = a2(v19);
  if (v20 >> 62)
  {
    v21 = sub_1D6E28040();
    if (v21)
      goto LABEL_14;
LABEL_28:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
    goto LABEL_29;
  }
  v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v21)
    goto LABEL_28;
LABEL_14:
  v42[1] = 0;
  v44 = MEMORY[0x1E0DEE9D8];
  sub_1D5F949A4(0, v21 & ~(v21 >> 63), 0);
  if (v21 < 0)
  {
    __break(1u);
    goto LABEL_41;
  }
  v22 = 0;
  v23 = v44;
  v24 = v20 & 0xC000000000000001;
  v25 = v20;
  do
  {
    if (v24)
      MEMORY[0x1D8290720](v22, v20);
    else
      swift_retain();
    v26 = sub_1D6E24278();
    v28 = v27;
    swift_release();
    v44 = v23;
    v30 = *(_QWORD *)(v23 + 16);
    v29 = *(_QWORD *)(v23 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_1D5F949A4(v29 > 1, v30 + 1, 1);
      v23 = v44;
    }
    ++v22;
    *(_QWORD *)(v23 + 16) = v30 + 1;
    v31 = v23 + 16 * v30;
    *(_QWORD *)(v31 + 32) = v26;
    *(_QWORD *)(v31 + 40) = v28;
    v20 = v25;
  }
  while (v21 != v22);
  swift_bridgeObjectRelease();
LABEL_29:
  v32 = sub_1D5F0953C(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v33 = sub_1D686A1F8(&v45, v32);
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v45 + 16);
  if (v34 < v33)
  {
    __break(1u);
    goto LABEL_41;
  }
  sub_1D60984C4(v33, v34);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v45 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED5F9990 == -1)
    {
LABEL_37:
      sub_1D6E27374();
      sub_1D6E1C61C();
      return 0;
    }
LABEL_41:
    swift_once();
    goto LABEL_37;
  }
  sub_1D686849C((uint64_t)&v45);
  v35 = v45;
  if (!*(_QWORD *)(v45 + 16))
  {
    if (qword_1ED5F9990 != -1)
      swift_once();
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1D6E32F90;
    v37 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
    v38 = MEMORY[0x1D828F5BC](v35, v37);
    v40 = v39;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 64) = sub_1D5F2C5C8();
    *(_QWORD *)(v36 + 32) = v38;
    *(_QWORD *)(v36 + 40) = v40;
    sub_1D6E27374();
    sub_1D6E1C61C();
    goto LABEL_35;
  }
  return v35;
}

uint64_t sub_1D686849C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v3 = sub_1D6E284B4();
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  MEMORY[0x1E0C80A78](v3);
  v51 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D6E2849C();
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D6E284FC();
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D6E28508();
  v52 = *(_QWORD *)(v11 - 8);
  v53 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D6E15ECC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v39 - v19;
  v21 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_configurationManager), sel_possiblyUnfetchedAppConfiguration);
  if ((objc_msgSend(v21, sel_respondsToSelector_, sel_topStoriesLocalNewsExpiration) & 1) == 0)
    return swift_unknownObjectRelease();
  v46 = a1;
  objc_msgSend(v21, sel_topStoriesLocalNewsExpiration);
  swift_unknownObjectRelease();
  v22 = sub_1D6E28520();
  v42 = v23;
  v43 = v22;
  sub_1D6E15E6C();
  sub_1D6E15E18();
  v24 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  v45 = v14;
  v40 = v24;
  v24(v18, v14);
  if (qword_1ED5F9990 != -1)
    swift_once();
  v44 = qword_1ED6983B8;
  v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1D6E334D0;
  v41 = v26 + 32;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED624AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB27F0], v25);
  sub_1D6E284E4();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1D6E349D0;
  sub_1D6E284C0();
  sub_1D6E284CC();
  sub_1D6E284D8();
  sub_1D686A7E4(v27);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1D6E284F0();
  sub_1D6E28490();
  v28 = v51;
  sub_1D6E284A8();
  sub_1D6E1550C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v28, v55);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v50);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
  v29 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
  v30 = sub_1D5F2C5C8();
  *(_QWORD *)(v26 + 64) = v30;
  sub_1D5E6D8C0((unint64_t *)&unk_1ED624AE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB2840], MEMORY[0x1E0CB2838]);
  v31 = v53;
  sub_1D6E28514();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v31);
  sub_1D5E6D8C0((unint64_t *)&qword_1ED5E0270, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  v32 = v45;
  v33 = sub_1D6E28280();
  *(_QWORD *)(v26 + 96) = v29;
  *(_QWORD *)(v26 + 104) = v30;
  *(_QWORD *)(v26 + 72) = v33;
  *(_QWORD *)(v26 + 80) = v34;
  sub_1D6E27374();
  sub_1D6E1C61C();
  v35 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v35);
  *(&v39 - 2) = (uint64_t)v20;
  v36 = v46;
  result = sub_1D686976C((uint64_t (*)(unint64_t))sub_1D686AA50);
  v38 = *(_QWORD *)(*(_QWORD *)v36 + 16);
  if (v38 < result)
  {
    __break(1u);
  }
  else
  {
    sub_1D60984C4(result, v38);
    return v40(v20, v32);
  }
  return result;
}

uint64_t sub_1D68689BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  __int128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;

  v3 = sub_1D6E284B4();
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  MEMORY[0x1E0C80A78](v3);
  v60 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D6E2849C();
  v58 = *(_QWORD *)(v5 - 8);
  v59 = v5;
  MEMORY[0x1E0C80A78](v5);
  v57 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D6E284FC();
  v55 = *(_QWORD *)(v7 - 8);
  v56 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D6E28508();
  v61 = *(_QWORD *)(v10 - 8);
  v62 = v10;
  MEMORY[0x1E0C80A78](v10);
  v65 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v47 - v13;
  v15 = sub_1D6E15ECC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v47 - v20;
  v68 = a1;
  v22 = objc_msgSend(*(id *)(a1 + 8), sel_publisherSpecifiedArticleIDsModifiedDate);
  if (v22)
  {
    v23 = v22;
    sub_1D6E15E60();

    v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v24(v14, v19, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      v24(v21, v14, v15);
      if ((sub_1D6E15E00() & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
        return 0;
      }
      sub_1D6E15E30();
      if ((~COERCE__INT64(-v25) & 0x7FF0000000000000) != 0)
      {
        if (v25 < 9.22337204e18)
        {
          if (v25 > -9.22337204e18)
          {
            v49 = v9;
            v54 = v1;
            v26 = sub_1D6E28520();
            v51 = v27;
            v52 = v26;
            if (qword_1ED5F9990 == -1)
            {
LABEL_8:
              v53 = qword_1ED6983B8;
              v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
              sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
              v29 = swift_allocObject();
              v47 = xmmword_1D6E349D0;
              *(_OWORD *)(v29 + 16) = xmmword_1D6E349D0;
              v50 = v29 + 32;
              sub_1D5E847C4(0, (unint64_t *)&unk_1ED624AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB27F0], v28);
              v48 = sub_1D6E284E4();
              v30 = swift_allocObject();
              *(_OWORD *)(v30 + 16) = v47;
              sub_1D6E284C0();
              sub_1D6E284CC();
              sub_1D6E284D8();
              sub_1D686A7E4(v30);
              swift_setDeallocating();
              swift_arrayDestroy();
              swift_deallocClassInstance();
              v31 = v49;
              sub_1D6E284F0();
              v32 = v57;
              sub_1D6E28490();
              v33 = v60;
              sub_1D6E284A8();
              v34 = 1;
              sub_1D6E1550C();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v63 + 8))(v33, v64);
              (*(void (**)(char *, uint64_t))(v58 + 8))(v32, v59);
              (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v56);
              v35 = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
              v36 = sub_1D5F2C5C8();
              *(_QWORD *)(v29 + 64) = v36;
              sub_1D5E6D8C0((unint64_t *)&unk_1ED624AE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB2840], MEMORY[0x1E0CB2838]);
              v37 = v65;
              v38 = v62;
              sub_1D6E28514();
              (*(void (**)(char *, uint64_t))(v61 + 8))(v37, v38);
              sub_1D5E6D8C0((unint64_t *)&qword_1ED5E0270, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
              v39 = sub_1D6E28280();
              *(_QWORD *)(v29 + 96) = v35;
              *(_QWORD *)(v29 + 104) = v36;
              *(_QWORD *)(v29 + 72) = v39;
              *(_QWORD *)(v29 + 80) = v40;
              v66 = 0;
              v67 = 0xE000000000000000;
              type metadata accessor for TodayLocalNewsArticle.Resolved(0);
              sub_1D6E27F98();
              v41 = v66;
              v42 = v67;
              *(_QWORD *)(v29 + 136) = v35;
              *(_QWORD *)(v29 + 144) = v36;
              *(_QWORD *)(v29 + 112) = v41;
              *(_QWORD *)(v29 + 120) = v42;
              sub_1D6E27374();
              sub_1D6E1C61C();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
              return v34;
            }
LABEL_18:
            swift_once();
            goto LABEL_8;
          }
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_17;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1D5EC4E54((uint64_t)v14, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (qword_1ED5F9990 != -1)
    swift_once();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1D6E32F90;
  v66 = 0;
  v67 = 0xE000000000000000;
  type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  sub_1D6E27F98();
  v44 = v66;
  v45 = v67;
  *(_QWORD *)(v43 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v43 + 64) = sub_1D5F2C5C8();
  *(_QWORD *)(v43 + 32) = v44;
  *(_QWORD *)(v43 + 40) = v45;
  sub_1D6E27374();
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1D68690AC(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v2 = sub_1D6E15BE4();
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x1E0C80A78](v2);
  v34 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1D6E24CEC();
  v4 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D6E25340();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v10;
  v11 = objc_msgSend(*a1, sel_identifier);
  v12 = sub_1D6E26978();
  v32 = v13;
  v33 = v12;

  v14 = (char *)a1 + *(int *)(type metadata accessor for TodayLocalNewsArticle.Resolved(0) + 24);
  v27 = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v14, v7);
  v30 = sub_1D666E788((uint64_t)&unk_1E9AAADF8);
  swift_arrayDestroy();
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED5F4DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5DA10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v28 = 2 * *(_QWORD *)(*(_QWORD *)(sub_1D6E24500() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D6E349D0;
  v15 = objc_msgSend(a1[1], sel_name);
  sub_1D6E26978();

  sub_1D6E2492C();
  swift_bridgeObjectRelease();
  v16 = *MEMORY[0x1E0D5E540];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v18 = v29;
  v17(v6, v16, v29);
  sub_1D6E244D0();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v20 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D6E15968();

  sub_1D6E2492C();
  swift_bridgeObjectRelease();
  v21 = v18;
  v17(v6, v16, v18);
  sub_1D6E244D0();
  v22 = (uint64_t)v27;
  v23 = v34;
  sub_1D619C018();
  sub_1D6E24920();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v36);
  v17(v6, v16, v21);
  sub_1D6E244D0();
  v24 = sub_1D6E24260();
  sub_1D5E8D20C(v22, type metadata accessor for TodayLocalNewsArticle.Resolved);
  return v24;
}

uint64_t sub_1D68694A4()
{
  return type metadata accessor for CuratedTodayFeedGroupEmitter();
}

uint64_t sub_1D68694AC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v4[2];

  v0 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[0] = 0x2064657461727543;
  v4[1] = 0xE900000000000028;
  sub_1D5F5DF38();
  sub_1D6E21C08();
  swift_bridgeObjectRetain();
  sub_1D5E8D20C((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupConfigData);
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  return v4[0];
}

uint64_t sub_1D6869594@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_config;
  sub_1D5F5DF38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for TodayFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D68695F4@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  v3 = *v1 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for CuratedTodayFeedGroupKnobs();
  a1[4] = sub_1D5E6D8C0(&qword_1ED5EB5B0, (uint64_t (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroupKnobs, (uint64_t)&unk_1D6E9DFF4);
  a1[5] = sub_1D5E6D8C0(&qword_1ED5DE6F0, (uint64_t (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroupKnobs, (uint64_t)&unk_1D6E9E01C);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D5E82ECC(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for CuratedTodayFeedGroupKnobs);
}

uint64_t sub_1D686968C(void (*a1)(char *, char *, uint64_t))
{
  return sub_1D6864DFC(a1);
}

uint64_t sub_1D68696AC(uint64_t a1)
{
  return sub_1D68653B0(a1);
}

uint64_t sub_1D68696CC()
{
  sub_1D5E6D8C0((unint64_t *)&unk_1ED5ECB40, (uint64_t (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroupEmitter, (uint64_t)&unk_1D6E96EA8);
  return sub_1D6E1A324();
}

uint64_t sub_1D686970C()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1D6869718(uint64_t *a1)
{
  uint64_t v1;

  return sub_1D68658FC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D6869730()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1D686973C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D68671BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D6869754()
{
  return sub_1D6867D10();
}

uint64_t sub_1D686976C(uint64_t (*a1)(unint64_t))
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v1;
  v5 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v33 = (uint64_t)&v30 - v9;
  MEMORY[0x1E0C80A78](v8);
  v35 = (uint64_t)&v30 - v11;
  v12 = *v1;
  v13 = *(_QWORD *)(*v1 + 16);
  if (!v13)
    return 0;
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain();
  v16 = 0;
  v31 = v14;
  while (1)
  {
    v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((v17 & 1) != 0)
      break;
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v12 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    v19 = *(_QWORD *)(v12 + 16);
    if (v16 + 1 == v19)
      return v16;
    v20 = v15 + v14;
    v21 = v16 + 1;
    v30 = v1;
    v32 = v15;
    while (v21 < v19)
    {
      v22 = v3;
      v36 = v20;
      v23 = v35;
      sub_1D5E82ECC(v12 + v20, v35, type metadata accessor for TodayLocalNewsArticle.Resolved);
      v24 = a1(v23);
      result = sub_1D5E8D20C(v23, type metadata accessor for TodayLocalNewsArticle.Resolved);
      if ((v24 & 1) != 0)
      {
        v3 = v22;
        v25 = v32;
      }
      else
      {
        v3 = v22;
        v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v26 = *v3;
          v27 = *(_QWORD *)(*v3 + 16);
          if (v16 >= v27)
            goto LABEL_33;
          result = sub_1D5E82ECC(v26 + v31 + v16 * v32, v33, type metadata accessor for TodayLocalNewsArticle.Resolved);
          if (v21 >= v27)
            goto LABEL_34;
          sub_1D5E82ECC(v26 + v36, v34, type metadata accessor for TodayLocalNewsArticle.Resolved);
          result = swift_isUniquelyReferenced_nonNull_native();
          v3 = v30;
          *v30 = v26;
          if ((result & 1) == 0)
          {
            result = sub_1D668C6D8(v26);
            v26 = result;
            *v3 = result;
          }
          if (v16 >= *(_QWORD *)(v26 + 16))
            goto LABEL_35;
          result = sub_1D686AA6C(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(_QWORD *)(*v3 + 16))
            goto LABEL_36;
          result = sub_1D686AA6C(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1))
          goto LABEL_31;
      }
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
        goto LABEL_30;
      v12 = *v3;
      v19 = *(_QWORD *)(*v3 + 16);
      ++v21;
      v20 = v36 + v25;
      if (v29 == v19)
        return v16;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6869A74@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getAtKeyPath();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D6869AC0(unint64_t a1, uint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  unint64_t v7;
  id v8;
  char v9;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v3 = a1;
  v15 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_16:
    v4 = sub_1D6E28040();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      v5 = 0;
      v11 = (uint64_t *)((char *)a2 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_puzzleHistoryService);
      v13 = v3 & 0xFFFFFFFFFFFFFF8;
      v14 = v3 & 0xC000000000000001;
      v12 = v3;
      while (1)
      {
        if (v14)
        {
          v6 = (void *)MEMORY[0x1D8290720](v5, v3);
          v7 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
LABEL_13:
            __break(1u);
            return v15;
          }
        }
        else
        {
          if (v5 >= *(_QWORD *)(v13 + 16))
          {
            __break(1u);
            goto LABEL_16;
          }
          v6 = *(void **)(v3 + 8 * v5 + 32);
          swift_unknownObjectRetain();
          v7 = v5 + 1;
          if (__OFADD__(v5, 1))
            goto LABEL_13;
        }
        a2 = __swift_project_boxed_opaque_existential_1(v11, v11[3]);
        v8 = objc_msgSend(v6, sel_identifier);
        sub_1D6E26978();

        v9 = sub_1D6E2558C();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
        {
          sub_1D6E27F20();
          sub_1D6E27F50();
          sub_1D6E27F5C();
          a2 = &v15;
          sub_1D6E27F2C();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        v3 = v12;
        ++v5;
        if (v7 == v4)
          return v15;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1D6869C88(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  result = MEMORY[0x1E0DEE9D8];
  v15 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = *(_QWORD *)(type metadata accessor for TodayLocalNewsArticle(0) - 8);
    v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v8 = *(_QWORD *)(a2 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_headlines);
    v9 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    v10 = (uint64_t *)(v7 + a1 + 8);
    do
    {
      if (*(_QWORD *)(v8 + 16))
      {
        v11 = *(v10 - 1);
        v12 = *v10;
        swift_bridgeObjectRetain();
        sub_1D5F77FD0(v11, v12);
        if ((v13 & 1) != 0)
        {
          swift_unknownObjectRetain();
          v14 = swift_bridgeObjectRelease();
          MEMORY[0x1D828F58C](v14);
          if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1D6E26E40();
          sub_1D6E26E70();
          sub_1D6E26DA4();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v10 = (uint64_t *)((char *)v10 + v9);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_1D6869DD8()
{
  uint64_t *v0;

  return sub_1D68666A0(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1D6869DF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D6869E1C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D6867014(a1, a2);
}

uint64_t sub_1D6869E38(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1D5E8C630(255, a2, a3);
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D6869E78()
{
  uint64_t v0;

  sub_1D6E242D8();
  v0 = sub_1D6E26EAC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D6869EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D6869EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;

  v5 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v46 = (char *)v42 - v10;
  MEMORY[0x1E0C80A78](v9);
  v45 = (uint64_t)v42 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x1E0DEE9D8];
  v42[2] = v2;
  v44 = type metadata accessor for TodayLocalNewsArticle(0);
  v13 = *(_QWORD *)(v44 - 8);
  v14 = a1;
  v15 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)));
  v16 = *(_QWORD *)(a2 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_headlines);
  v17 = *(_QWORD *)(a2 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_tags);
  v18 = *(_QWORD *)(v13 + 72);
  v42[1] = v14;
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x1E0DEE9D8];
  v43 = v17;
  v50 = v18;
  do
  {
    if (*(_QWORD *)(v16 + 16))
    {
      v20 = *v15;
      v21 = v15[1];
      swift_bridgeObjectRetain();
      v22 = sub_1D5F77FD0(v20, v21);
      if ((v23 & 1) != 0)
      {
        v24 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v22);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v17 + 16))
        {
          v25 = v15[2];
          v26 = v15[3];
          swift_bridgeObjectRetain();
          v27 = sub_1D5F77FD0(v25, v26);
          if ((v28 & 1) != 0)
          {
            v29 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v27);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            v30 = (char *)v15 + *(int *)(v44 + 24);
            v31 = *(int *)(v48 + 24);
            v32 = v8;
            v49 = v19;
            v33 = v46;
            v34 = &v46[v31];
            v35 = sub_1D6E25340();
            v36 = v34;
            v8 = v32;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v36, v30, v35);
            *v33 = v24;
            v33[1] = v29;
            v37 = (uint64_t)v33;
            v19 = v49;
            v38 = v45;
            sub_1D6869EB0(v37, v45);
            sub_1D6869EB0(v38, (uint64_t)v8);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v19 = sub_1D6242E0C(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
            v40 = *(_QWORD *)(v19 + 16);
            v39 = *(_QWORD *)(v19 + 24);
            v17 = v43;
            if (v40 >= v39 >> 1)
              v19 = sub_1D6242E0C(v39 > 1, v40 + 1, 1, v19);
            *(_QWORD *)(v19 + 16) = v40 + 1;
            sub_1D6869EB0((uint64_t)v8, v19+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v40);
          }
          else
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
        v18 = v50;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v15 = (uint64_t *)((char *)v15 + v18);
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1D686A1F8(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t result;
  unint64_t v37;
  id *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v51;
  uint64_t v52;
  id *v53;
  uint64_t v54;
  unint64_t v55;
  __int128 v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t *v66;

  v60 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  v5 = MEMORY[0x1E0C80A78](v60);
  v58 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v59 = (uint64_t)&v52 - v8;
  MEMORY[0x1E0C80A78](v7);
  v66 = a1;
  v11 = *a1;
  v54 = *(_QWORD *)(v11 + 16);
  v52 = v2;
  if (v54)
  {
    v53 = (id *)((char *)&v52 - v10);
    v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    *(_QWORD *)&v56 = v11 + v12;
    v13 = *(_QWORD *)(v9 + 72);
    v63 = a2;
    v61 = a2 + 56;
    swift_bridgeObjectRetain();
    v14 = 0;
    v57 = v12;
    v15 = v13 + v12;
    v16 = 1;
    v62 = v13;
    while (1)
    {
      v55 = v13 * v14;
      v17 = objc_msgSend(*(id *)(v56 + v13 * v14), sel_identifier, v52);
      v18 = sub_1D6E26978();
      v20 = v19;

      if (*(_QWORD *)(v63 + 16))
      {
        v21 = v63;
        sub_1D6E28400();
        sub_1D6E26A44();
        v22 = sub_1D6E28430();
        v23 = -1 << *(_BYTE *)(v21 + 32);
        v24 = v22 & ~v23;
        if (((*(_QWORD *)(v61 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
        {
          v25 = *(_QWORD *)(v63 + 48);
          v26 = (_QWORD *)(v25 + 16 * v24);
          v27 = *v26 == v18 && v26[1] == v20;
          if (v27 || (sub_1D6E282C8() & 1) != 0)
          {
LABEL_18:
            swift_bridgeObjectRelease();
            if (qword_1ED5F9990 != -1)
              goto LABEL_49;
            while (1)
            {
              sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
              v61 = v31;
              v32 = swift_allocObject();
              v56 = xmmword_1D6E32F90;
              *(_OWORD *)(v32 + 16) = xmmword_1D6E32F90;
              v64 = 0;
              v65 = 0xE000000000000000;
              sub_1D6E27F98();
              v33 = v64;
              v34 = v65;
              *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
              v35 = sub_1D5F2C5C8();
              *(_QWORD *)(v32 + 64) = v35;
              *(_QWORD *)(v32 + 32) = v33;
              *(_QWORD *)(v32 + 40) = v34;
              sub_1D6E27374();
              sub_1D6E1C61C();
              swift_bridgeObjectRelease();
              result = swift_bridgeObjectRelease();
              if (__OFADD__(v14, 1))
                break;
              v37 = *(_QWORD *)(v11 + 16);
              if (v14 + 1 == v37)
                return v14;
              v38 = v53;
              while (v16 < v37)
              {
                sub_1D5E82ECC(v11 + v15, (uint64_t)v38, type metadata accessor for TodayLocalNewsArticle.Resolved);
                v39 = objc_msgSend(*v38, sel_identifier);
                v40 = (uint64_t)v38;
                v41 = sub_1D6E26978();
                v43 = v42;

                v11 = sub_1D5F9E9CC(v41, v43, v63);
                swift_bridgeObjectRelease();
                if ((v11 & 1) != 0)
                {
                  v11 = qword_1ED6983B8;
                  v44 = swift_allocObject();
                  *(_OWORD *)(v44 + 16) = v56;
                  v64 = 0;
                  v65 = 0xE000000000000000;
                  sub_1D6E27F98();
                  v45 = v64;
                  v46 = v65;
                  *(_QWORD *)(v44 + 56) = MEMORY[0x1E0DEA968];
                  *(_QWORD *)(v44 + 64) = v35;
                  *(_QWORD *)(v44 + 32) = v45;
                  *(_QWORD *)(v44 + 40) = v46;
                  sub_1D6E27374();
                  sub_1D6E1C61C();
                  swift_bridgeObjectRelease();
                  sub_1D5E8D20C(v40, type metadata accessor for TodayLocalNewsArticle.Resolved);
                  v38 = (id *)v40;
                  v47 = v62;
                }
                else
                {
                  sub_1D5E8D20C(v40, type metadata accessor for TodayLocalNewsArticle.Resolved);
                  v38 = (id *)v40;
                  v47 = v62;
                  if (v16 != v14)
                  {
                    if ((v14 & 0x8000000000000000) != 0)
                      goto LABEL_44;
                    v11 = *v66;
                    v48 = *(_QWORD *)(*v66 + 16);
                    if (v14 >= v48)
                      goto LABEL_45;
                    sub_1D5E82ECC(v11 + v57 + v14 * v62, v59, type metadata accessor for TodayLocalNewsArticle.Resolved);
                    if (v16 >= v48)
                      goto LABEL_46;
                    sub_1D5E82ECC(v11 + v15, v58, type metadata accessor for TodayLocalNewsArticle.Resolved);
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    *v66 = v11;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      v11 = sub_1D668C6D8(v11);
                      *v66 = v11;
                    }
                    v38 = v53;
                    if (v14 >= *(_QWORD *)(v11 + 16))
                      goto LABEL_47;
                    sub_1D686AA6C(v58, v11 + v57 + v14 * v47);
                    if (v16 >= *(_QWORD *)(*v66 + 16))
                      goto LABEL_48;
                    sub_1D686AA6C(v59, *v66 + v15);
                  }
                  if (__OFADD__(v14++, 1))
                    goto LABEL_43;
                }
                v51 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_42;
                v11 = *v66;
                v37 = *(_QWORD *)(*v66 + 16);
                ++v16;
                v15 += v47;
                if (v51 == v37)
                  return v14;
              }
              __break(1u);
LABEL_42:
              __break(1u);
LABEL_43:
              __break(1u);
LABEL_44:
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              swift_once();
            }
            __break(1u);
            return result;
          }
          v28 = ~v23;
          while (1)
          {
            v24 = (v24 + 1) & v28;
            if (((*(_QWORD *)(v61 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
              break;
            v29 = (_QWORD *)(v25 + 16 * v24);
            v30 = *v29 == v18 && v29[1] == v20;
            if (v30 || (sub_1D6E282C8() & 1) != 0)
              goto LABEL_18;
          }
        }
      }
      swift_bridgeObjectRelease();
      ++v14;
      ++v16;
      v13 = v62;
      v15 += v62;
      if (v14 == v54)
      {
        swift_bridgeObjectRelease();
        return *(_QWORD *)(v11 + 16);
      }
    }
  }
  return 0;
}

uint64_t sub_1D686A7E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v2 = sub_1D6E284E4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v34 = (char *)&v29 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1D5E84EF4(0, &qword_1ED624260, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB27F0], sub_1D686AAB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
    v9 = sub_1D6E27E90();
    v10 = 0;
    v33 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v30 = v8;
    v31 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v13(v34, v31 + v12 * v10, v2);
      sub_1D686AAB0();
      v14 = sub_1D6E2687C();
      v15 = -1 << *(_BYTE *)(v9 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      v18 = *(_QWORD *)(v33 + 8 * (v16 >> 6));
      v19 = 1 << v16;
      if (((1 << v16) & v18) != 0)
      {
        v32 = v10;
        v20 = ~v15;
        do
        {
          v13(v6, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1D5E6D8C0(&qword_1ED624AE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB27F0], MEMORY[0x1E0CB2808]);
          v21 = sub_1D6E268F4();
          v22 = v3;
          v23 = *(void (**)(char *, uint64_t))(v3 + 8);
          v23(v6, v2);
          if ((v21 & 1) != 0)
          {
            v23(v34, v2);
            v3 = v22;
            v8 = v30;
            v10 = v32;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v20;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v33 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v22;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v30;
        v10 = v32;
      }
      v24 = v34;
      *(_QWORD *)(v33 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v24, v2);
      v26 = *(_QWORD *)(v9 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        break;
      *(_QWORD *)(v9 + 16) = v28;
LABEL_4:
      if (++v10 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1D686AA50(uint64_t a1)
{
  return sub_1D68689BC(a1) & 1;
}

uint64_t sub_1D686AA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D686AAB0()
{
  return sub_1D5E6D8C0(&qword_1ED624AD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB27F0], MEMORY[0x1E0CB2800]);
}

uint64_t sub_1D686AACC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D686AAF0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D686AB14(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1D6B0F530(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D686AB1C()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t type metadata accessor for MyMagazinesSectionHeaderViewStyler()
{
  return objc_opt_self();
}

uint64_t *sub_1D686AB4C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D686ACD0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D608A014();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = (int *)type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
    *(_QWORD *)&v9[v12[5]] = *(_QWORD *)&v10[v12[5]];
    *(_QWORD *)&v9[v12[6]] = *(_QWORD *)&v10[v12[6]];
    *(_QWORD *)&v9[v12[7]] = *(_QWORD *)&v10[v12[7]];
    *(_QWORD *)&v9[v12[8]] = *(_QWORD *)&v10[v12[8]];
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v16;
    v17 = v16;
    v18 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v18(v14, v15, v17);
    v19 = a3[7];
    v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)((char *)a1 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
    v21 = a3[8];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_1D686ACD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED622ED0)
  {
    type metadata accessor for SportsKeyPlayersTagFeedGroupConfigData();
    sub_1D5E6D8C0(&qword_1ED6215E8, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupConfigData, (uint64_t)&unk_1D6EB02E8);
    sub_1D5E6D8C0(&qword_1ED6215E0, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupConfigData, (uint64_t)&unk_1D6EB02C0);
    v0 = sub_1D6E21C68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED622ED0);
  }
}

uint64_t sub_1D686AD74(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D686ACD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D686AE3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  sub_1D686ACD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
  *(_QWORD *)(v8 + v11[6]) = *(_QWORD *)(v9 + v11[6]);
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  v16 = v15;
  v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v17(v13, v14, v16);
  v18 = a3[7];
  v19 = *(_OWORD *)(a2 + v18 + 24);
  *(_OWORD *)(a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D686AF94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  sub_1D686ACD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = (int *)type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v11[6]) = *(_QWORD *)(v9 + v11[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D686B0E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  sub_1D686ACD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = (int *)type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
  *(_QWORD *)(v8 + v11[6]) = *(_QWORD *)(v9 + v11[6]);
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  v17 = a1 + v13;
  v18 = a2 + v13;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1D686B1E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D686ACD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
  swift_release();
  *(_QWORD *)(v8 + v11[6]) = *(_QWORD *)(v9 + v11[6]);
  swift_release();
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  swift_release();
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  swift_release();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  __swift_destroy_boxed_opaque_existential_1(a1 + v16);
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D686B328()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D686B334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_1D686ACD0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1D686B3E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D686B3EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_1D686ACD0();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1ED61F690;
  if (!qword_1ED61F690)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D686B4D0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D686ACD0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1D686B568(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = sub_1D6E25C40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1D6228BF4(0, 0, 0);
  v6 = v15;
  v7 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v14 = a1;
  if (v7)
  {
    v8 = 0;
    v9 = a1 + 32;
    do
    {
      v10 = *(_QWORD *)(v9 + 8 * v8);
      swift_bridgeObjectRetain();
      sub_1D686DA38(v8, v10, (uint64_t)v5);
      swift_bridgeObjectRelease();
      v15 = v6;
      v12 = *(_QWORD *)(v6 + 16);
      v11 = *(_QWORD *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1D6228BF4(v11 > 1, v12 + 1, 1);
        v6 = v15;
      }
      ++v8;
      *(_QWORD *)(v6 + 16) = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v12, v5, v2);
    }
    while (v7 != v8);
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D686B6CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1D686ACD0();
  v4 = v3;
  v5 = swift_allocBox();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5 | 0x5000000000000004;
  return result;
}

uint64_t sub_1D686B72C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;

  v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  a2[4] = sub_1D5E6D8C0(&qword_1ED61DBA8, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs, (uint64_t)&unk_1D6E48B64);
  a2[5] = sub_1D5E6D8C0(&qword_1EFFF3AF0, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs, (uint64_t)&unk_1D6E48B3C);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1D5E82ECC(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs);
}

unint64_t sub_1D686B7C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v3 = sub_1D6E23AF8();
  v4 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + *(int *)(type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter() + 20);
  LOBYTE(v30) = 23;
  sub_1D608A014();
  v24 = v7;
  v25 = a1;
  v29 = sub_1D6E2255C();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED624A20, (uint64_t (*)(uint64_t))sub_1D60D15FC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1D60D15FC(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v26 = v8;
  v27 = v10;
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  v28 = v12;
  *(_OWORD *)(v12 + 16) = xmmword_1D6E334D0;
  v13 = (uint64_t *)(v12 + v11);
  v23 = type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  sub_1D6E22BE0();
  v14 = sub_1D6E2297C();
  v21 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21(v6, v3);
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_1D6E27EA8();
  swift_bridgeObjectRelease();
  v30 = 0xD00000000000001BLL;
  v31 = 0x80000001D6EF2EA0;
  sub_1D60D1620();
  sub_1D6E27044();
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  *(_QWORD *)(swift_allocObject() + 16) = v14;
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED623400, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5C200]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  *v13 = sub_1D6E2324C();
  v15 = *MEMORY[0x1E0D5B508];
  v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 104);
  v17 = v26;
  v16(v13, v15, v26);
  swift_bridgeObjectRelease();
  v18 = (uint64_t *)((char *)v13 + v27);
  sub_1D6E22BE0();
  v19 = sub_1D6E2297C();
  v21(v6, v22);
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_1D6E27EA8();
  swift_bridgeObjectRelease();
  v30 = 0xD00000000000001ELL;
  v31 = 0x80000001D6EF2EC0;
  sub_1D6E27044();
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  *(_QWORD *)(swift_allocObject() + 16) = v19;
  swift_allocObject();
  swift_bridgeObjectRetain();
  *v18 = sub_1D6E2324C();
  v16(v18, v15, v17);
  swift_bridgeObjectRelease();
  v30 = v29;
  sub_1D6686B78(v28);
  return v30;
}

uint64_t sub_1D686BB8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18[2];
  uint64_t v19;
  uint64_t v20;

  v3 = type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1;
  v20 = a1;
  v18[0] = v1;
  sub_1D5E847C4(0, &qword_1EFFD9CE0, MEMORY[0x1E0D60098], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D6E1AE1C();
  sub_1D5E82ECC(v1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v18[1] = v7 + v5;
  v8 = (v7 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = swift_allocObject();
  sub_1D686C3B0((uint64_t)v6, v9 + v7);
  *(_QWORD *)(v9 + v8) = a1;
  swift_retain();
  v10 = (void *)sub_1D6E1AB4C();
  sub_1D6E24428();
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  v11 = v18[0];
  sub_1D5E82ECC(v18[0], (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter);
  v12 = swift_allocObject();
  sub_1D686C3B0((uint64_t)v6, v12 + v7);
  *(_QWORD *)(v12 + v8) = a1;
  swift_retain();
  v13 = (void *)sub_1D6E1AB4C();
  sub_1D609D134(0);
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  sub_1D5E82ECC(v11, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter);
  v14 = swift_allocObject();
  sub_1D686C3B0((uint64_t)v6, v14 + v7);
  v15 = (void *)sub_1D6E1AB4C();
  v16 = sub_1D6E1ACCC();
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_1D686BDEC()
{
  sub_1D686ACD0();
  return sub_1D6E21BB4();
}

uint64_t sub_1D686BE04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4E50, (uint64_t (*)(uint64_t))sub_1D5FADACC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D6E32F90;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1D686ACD0();
  swift_bridgeObjectRetain();
  v3 = sub_1D6E21BB4();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  sub_1D5F77E70(inited);
  sub_1D5E847C4(0, &qword_1EFFF3AF8, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
  a1[3] = v5;
  a1[4] = sub_1D686DEF8();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D6E1A330();
}

uint64_t sub_1D686BF28()
{
  sub_1D5E6D8C0(&qword_1EFFF3AE8, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter, (uint64_t)&unk_1D6E97080);
  return sub_1D6E1A324();
}

uint64_t sub_1D686BF68()
{
  return sub_1D5E6D8C0(&qword_1EFFF3AD8, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter, (uint64_t)&unk_1D6E97058);
}

uint64_t sub_1D686BF94()
{
  return sub_1D5E6D8C0(&qword_1EFFF3AE0, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter, (uint64_t)&unk_1D6E970B0);
}

uint64_t sub_1D686BFC0()
{
  return sub_1D5E6D8C0(&qword_1EFFF3AE8, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter, (uint64_t)&unk_1D6E97080);
}

uint64_t sub_1D686BFEC()
{
  return sub_1D686C010();
}

uint64_t sub_1D686C010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = sub_1D6E23AF8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  sub_1D6E22BE0();
  sub_1D6E22E74();
  v5 = *(void (**)(char *, uint64_t))(v2 + 8);
  v5(v4, v1);
  v6 = v22;
  sub_1D6E22BE0();
  sub_1D6E22E74();
  v5(v4, v1);
  v7 = v22;
  sub_1D6E22B80();
  v8 = *(id *)(v22 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1D6E22B80();
  v9 = *(_QWORD *)(v22 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_sportsEventVisualizationResult);
  swift_retain();
  swift_release();
  if (v9)
  {
    if (qword_1ED6241B8 != -1)
      swift_once();
    sub_1D5F2C60C();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1D6E334D0;
    v11 = MEMORY[0x1E0DEB418];
    v12 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 32) = v6;
    *(_QWORD *)(v10 + 96) = v11;
    *(_QWORD *)(v10 + 104) = v12;
    *(_QWORD *)(v10 + 72) = v7;
    sub_1D6E27374();
    sub_1D6E1C61C();
    v13 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v13);
    *(&v21 - 2) = v0;
    sub_1D6E25850();
    sub_1D6E1AE1C();
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v9;
    v14[3] = v8;
    v14[4] = v7;
    v14[5] = v6;
    v15 = v8;
    swift_retain();
    v16 = (void *)sub_1D6E1AB4C();
    sub_1D5E847C4(0, &qword_1EFFD9CE0, MEMORY[0x1E0D60098], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1D6E1AC24();
    swift_release();
    swift_release();

    v17 = (void *)sub_1D6E1AB4C();
    v18 = sub_1D6E1AC60();

    swift_release();
    swift_release();

  }
  else
  {
    v18 = sub_1D6E22964();
    sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v19, *MEMORY[0x1E0D5B720], v18);
    swift_willThrow();

  }
  return v18;
}

uint64_t sub_1D686C3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D686C3F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  return sub_1D686C45C(*(_QWORD *)(v1+ ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)), *a1);
}

uint64_t sub_1D686C45C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD);
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  _QWORD v46[3];
  void (*v47)(_QWORD, _QWORD);
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, &qword_1ED603D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v57 = (char *)v46 - v5;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED623980, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v3);
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)v46 - v7;
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED623060, (uint64_t (*)(uint64_t))sub_1D608A014, v3);
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)v46 - v9;
  v10 = sub_1D6E24F8C();
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  MEMORY[0x1E0C80A78](v10);
  v54 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v3);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v46 - v13;
  v15 = sub_1D6E2489C();
  v52 = *(_QWORD *)(v15 - 8);
  v53 = v15;
  MEMORY[0x1E0C80A78](v15);
  v51 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SportsKeyPlayersTagFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1D6E2444C();
  v20 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v58 = (char *)v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6E22B80();
  v22 = *(id *)(v61 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  v23 = (void *)sub_1D6E27464();

  v24 = objc_msgSend(v23, sel_asSportsEvent);
  swift_unknownObjectRelease();
  v25 = MEMORY[0x1E0DEE9D8];
  if (!v24)
  {
    if (MEMORY[0x1E0DEE9D8] >> 62)
      goto LABEL_10;
    goto LABEL_6;
  }
  v26 = objc_msgSend(v24, sel_eventCompetitorTags);
  swift_unknownObjectRelease();
  if (!v26)
  {
    if (MEMORY[0x1E0DEE9D8] >> 62)
      goto LABEL_10;
LABEL_6:
    swift_bridgeObjectRelease();
    v61 = a2;
    goto LABEL_7;
  }
  sub_1D6119980();
  v27 = sub_1D6E26D80();

  if (!(v27 >> 62))
    goto LABEL_6;
LABEL_10:
  swift_bridgeObjectRetain();
  v45 = sub_1D6E28040();
  swift_bridgeObjectRelease_n();
  v61 = a2;
  if (v45 < 0)
  {
    sub_1D6E28004();
    __break(1u);
    goto LABEL_12;
  }
LABEL_7:
  sub_1D5E847C4(0, &qword_1EFFD9CE0, MEMORY[0x1E0D60098], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D6105738();
  v28 = sub_1D6E270B0();
  v29 = v47;
  sub_1D686B568(v28);
  v46[2] = v29;
  swift_bridgeObjectRelease();
  sub_1D686ACD0();
  v30 = v48;
  sub_1D6E21C08();
  v31 = &v19[*(int *)(v17 + 20)];
  sub_1D6E242F0();
  v47 = *(void (**)(_QWORD, _QWORD))(v20 + 8);
  v47(v31, v59);
  v32 = (_QWORD *)(v30 + *(int *)(type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter() + 24));
  v33 = v32[3];
  v46[1] = v32[4];
  v48 = v33;
  v46[0] = __swift_project_boxed_opaque_existential_1(v32, v33);
  v34 = sub_1D6E212F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v14, 1, 1, v34);
  sub_1D6CFC87C(v25);
  sub_1D6CFC87C(v25);
  sub_1D6CFC9A0(v25);
  sub_1D6CFC9AC(v25);
  sub_1D6CFCACC(v25);
  sub_1D6CFCAD8(v25);
  v14 = v51;
  sub_1D6E24890();
  sub_1D608A014();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v49, 1, 1, v35);
  swift_retain();
  sub_1D6E22B80();
  v36 = *(id *)(v61 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  v37 = sub_1D6E256AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v50, 1, 1, v37);
  LOBYTE(v60) = 23;
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED6239B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5F438]);
  swift_allocObject();
  sub_1D6E2588C();
  sub_1D6E22B80();
  sub_1D6292ABC();
  swift_release();
  sub_1D6E22B80();
  v38 = *(id *)(v60 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1D6E258BC();
  swift_allocObject();
  sub_1D6E258B0();
  v39 = sub_1D6E24D4C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v57, 1, 1, v39);
  v40 = qword_1ED6241B8;
  (id)*MEMORY[0x1E0D58688];
  if (v40 != -1)
LABEL_12:
    swift_once();
  (id)qword_1ED698E28;
  v41 = v54;
  sub_1D6E24F68();
  v42 = v58;
  v43 = sub_1D6E2498C();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v56);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v53);
  v47(v42, v59);
  return v43;
}

uint64_t sub_1D686CC2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D609D134(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D686CDD0(a1, (uint64_t)v7);
  sub_1D5E82ECC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TagFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED60C4D0, (uint64_t (*)(uint64_t))sub_1D609D134, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v8 = sub_1D6E1AC90();
  sub_1D609EC18((uint64_t)v7);
  return v8;
}

uint64_t sub_1D686CD74(uint64_t a1)
{
  type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  return sub_1D686CC2C(a1);
}

uint64_t sub_1D686CDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v13[1] = a2;
  sub_1D5E847C4(0, &qword_1ED5F3850, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5AE10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v13 - v4;
  v6 = sub_1D6E22E98();
  v7 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1D6E24428();
  MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1D686ACD0();
  sub_1D6E21BC0();
  sub_1D6E21BCC();
  sub_1D6E21BCC();
  type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  sub_1D608A014();
  sub_1D6E22598();
  sub_1D6E22574();
  sub_1D6E225B0();
  v11 = sub_1D6E222BC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  sub_1D6E2192C();
  type metadata accessor for TagFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D686D020()
{
  type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  if (qword_1ED6241B8 != -1)
    swift_once();
  type metadata accessor for TagFeedGroup();
  sub_1D609D158();
  return sub_1D6E22C1C();
}

uint64_t sub_1D686D0D8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (int *)type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_1D686ACD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + v1[5];
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[6]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[7]);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D686D1E4()
{
  type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  return sub_1D686D020();
}

uint64_t sub_1D686D23C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_1D6E26138();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *(int *)(v6 + 28)), *(_QWORD *)(a1 + *(int *)(v6 + 28) + 24));
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0D5FF58], v2);
  v7 = sub_1D6E2645C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1D686D318@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, int64_t a4@<X4>, uint64_t *a5@<X8>)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];
  uint64_t *v39;
  uint64_t v40;
  int64_t v41;

  v39 = a5;
  v40 = a3;
  v8 = sub_1D6E25FDC();
  if (qword_1ED6241B8 != -1)
    swift_once();
  sub_1D5F2C60C();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D6E334D0;
  v41 = a4;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v11 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 32) = v10;
  v12 = objc_msgSend(objc_msgSend(a2, sel_backingTag), sel_identifier);
  swift_unknownObjectRelease();
  v13 = sub_1D6E26978();
  v15 = v14;

  *(_QWORD *)(v9 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 104) = sub_1D5F2C5C8();
  *(_QWORD *)(v9 + 72) = v13;
  *(_QWORD *)(v9 + 80) = v15;
  sub_1D6E27374();
  sub_1D6E1C61C();
  v16 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v16);
  v38[2] = a1;
  v38[3] = a2;
  v17 = sub_1D6390118((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1D686DEBC, (uint64_t)v38, v8);
  swift_bridgeObjectRelease();
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v35 = sub_1D6E28040();
    swift_bridgeObjectRelease();
    if (v35)
    {
LABEL_7:
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1D6E32F90;
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        v19 = sub_1D6E28040();
        swift_bridgeObjectRelease();
      }
      else
      {
        v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v18 + 64) = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v18 + 32) = v19;
      sub_1D6E27374();
      sub_1D6E1C61C();
      swift_bridgeObjectRelease();
      v20 = sub_1D6104B74(v40, v17);
      v22 = v21;
      v24 = v23;
      v26 = v25;
      swift_bridgeObjectRelease();
      v27 = (v26 >> 1) - v24;
      v28 = v41;
      if (__OFSUB__(v26 >> 1, v24))
      {
        __break(1u);
      }
      else
      {
        if (v27 < v41)
        {
          v29 = sub_1D6E22964();
          sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
          swift_allocError();
          *v30 = v28;
          v30[1] = v27;
          (*(void (**)(int64_t *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v30, *MEMORY[0x1E0D5B718], v29);
          swift_willThrow();
          return swift_unknownObjectRelease();
        }
        if ((v26 & 1) == 0)
          goto LABEL_14;
        sub_1D6E282F8();
        swift_unknownObjectRetain_n();
        v33 = swift_dynamicCastClass();
        if (!v33)
        {
          swift_unknownObjectRelease();
          v33 = MEMORY[0x1E0DEE9D8];
        }
        v34 = *(_QWORD *)(v33 + 16);
        swift_release();
        if (v34 == v27)
        {
          v32 = swift_dynamicCastClass();
          if (!v32)
          {
            swift_unknownObjectRelease();
            v32 = MEMORY[0x1E0DEE9D8];
          }
          goto LABEL_20;
        }
      }
      swift_unknownObjectRelease();
LABEL_14:
      v32 = sub_1D61001BC(v20, v22, v24, v26);
LABEL_20:
      result = swift_unknownObjectRelease();
      *v39 = v32;
      return result;
    }
  }
  else if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  v36 = sub_1D6E22964();
  sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
  swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v37, *MEMORY[0x1E0D5B738], v36);
  return swift_willThrow();
}

uint64_t sub_1D686D7D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v8 = sub_1D6E26660();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = (void *)sub_1D6E26240();
  v14 = objc_msgSend(a3, sel_alternativeFeedDescriptor);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, sel_feedConfiguration);

  }
  else
  {
    v16 = objc_msgSend(a3, sel_feedConfiguration);
  }
  swift_getObjectType();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0D605B8], v8);
  v17 = sub_1D62A56A8(v13, v12, 0x17u, (uint64_t)v16, (uint64_t)v11, a2);
  swift_unknownObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *a4 = v17;
  return result;
}

uint64_t sub_1D686D918()
{
  uint64_t v0;

  if (qword_1ED6241B8 != -1)
    swift_once();
  sub_1D6E2735C();
  sub_1D5F2C60C();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D6E32F90;
  sub_1D5E7809C(0, (unint64_t *)&qword_1ED5F4ED0);
  sub_1D6E27F98();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = sub_1D5F2C5C8();
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_1D6E1C61C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D686DA38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  unsigned int v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v6 = sub_1D6E255E0();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1D6E25AFC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v35 - v14;
  v41 = 0x6579616C5079656BLL;
  v42 = 0xEB000000002D7372;
  v40 = a1;
  sub_1D6E28280();
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  v16 = a2;
  v18 = v41;
  v17 = v42;
  v37 = v16;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v35[2] = v17;
  if (!v19)
  {
LABEL_15:
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1D6473000(MEMORY[0x1E0DEE9D8]);
    sub_1D6473114(v34);
    sub_1D6473238(v34);
    return sub_1D6E25C34();
  }
  v41 = MEMORY[0x1E0DEE9D8];
  result = sub_1D62275AC(0, v19 & ~(v19 >> 63), 0);
  if ((v19 & 0x8000000000000000) == 0)
  {
    v35[0] = v18;
    v35[1] = a3;
    v21 = v41;
    if ((v37 & 0xC000000000000001) != 0)
    {
      v22 = 0;
      v36 = *MEMORY[0x1E0D5F150];
      v23 = *MEMORY[0x1E0D5F7D0];
      do
      {
        v24 = MEMORY[0x1D8290720](v22);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = v24;
        *v8 = v25;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v38 + 104))(v8, v36, v39);
        swift_retain();
        sub_1D6E24560();
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v15, v23, v9);
        swift_release();
        v41 = v21;
        v27 = *(_QWORD *)(v21 + 16);
        v26 = *(_QWORD *)(v21 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1D62275AC(v26 > 1, v27 + 1, 1);
          v21 = v41;
        }
        ++v22;
        *(_QWORD *)(v21 + 16) = v27 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v21+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v27, v15, v9);
      }
      while (v19 != v22);
    }
    else
    {
      v28 = (uint64_t *)(v37 + 32);
      LODWORD(v37) = *MEMORY[0x1E0D5F150];
      v29 = *MEMORY[0x1E0D5F7D0];
      do
      {
        v30 = *v28;
        v31 = swift_allocObject();
        *(_QWORD *)(v31 + 16) = v30;
        *v8 = v31;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v38 + 104))(v8, v37, v39);
        swift_retain_n();
        sub_1D6E24560();
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v13, v29, v9);
        swift_release();
        v41 = v21;
        v33 = *(_QWORD *)(v21 + 16);
        v32 = *(_QWORD *)(v21 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_1D62275AC(v32 > 1, v33 + 1, 1);
          v21 = v41;
        }
        *(_QWORD *)(v21 + 16) = v33 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v21+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v33, v13, v9);
        ++v28;
        --v19;
      }
      while (v19);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D686DE38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D686DE5C()
{
  uint64_t v0;

  return sub_1D686D23C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D686DE74()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D686DEA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1D686D318(a1, *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_1D686DEBC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1D686D7D0(a1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_1D686DED4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1D686DEF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFFF3B00[0];
  if (!qword_1EFFF3B00[0])
  {
    sub_1D5E847C4(255, &qword_1EFFF3AF8, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0DB3C80], v1);
    atomic_store(result, qword_1EFFF3B00);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedAvailabilityServiceError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF9 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483642);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 5;
  if (v4 >= 7)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FeedAvailabilityServiceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedAvailabilityServiceError()
{
  return &type metadata for FeedAvailabilityServiceError;
}

uint64_t sub_1D686E014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F4E574(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1D686E050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F4E574(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D686E094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F4E574(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D686E0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F4E574(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D686E11C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F4E574(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1D686E158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F4E574(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1D686E198()
{
  sub_1D5FB8318();
  return sub_1D6E28538();
}

uint64_t sub_1D686E1C0()
{
  sub_1D5FB8318();
  return sub_1D6E28544();
}

uint64_t sub_1D686E1E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5FAA350(0, &qword_1ED604128, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5FB8318();
  sub_1D6E28478();
  sub_1D5F4E574(0);
  sub_1D5E6D8C0(&qword_1ED5DF7D8, (uint64_t (*)(uint64_t))sub_1D5F4E574, MEMORY[0x1E0D5B220]);
  sub_1D6E28238();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D686E300()
{
  type metadata accessor for TodayFeedServiceConfig();
  sub_1D5E6D8C0((unint64_t *)&qword_1ED5E8E40, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t)&unk_1D6EA89F0);
  return sub_1D6E225C8();
}

uint64_t storeEnumTagSinglePayload for EngagementTodayFeedGroupKnobs.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D686E3A0 + 4 * byte_1D6E971D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D686E3C0 + 4 * byte_1D6E971D5[v4]))();
}

_BYTE *sub_1D686E3A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D686E3C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D686E3C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D686E3D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D686E3D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D686E3E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EngagementTodayFeedGroupKnobs.CodingKeys()
{
  return &type metadata for EngagementTodayFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1D686E400()
{
  unint64_t result;

  result = qword_1EFFF3B38;
  if (!qword_1EFFF3B38)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E97314, &type metadata for EngagementTodayFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3B38);
  }
  return result;
}

uint64_t sub_1D686E444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a3;
  v36 = a4;
  v6 = sub_1D6E15ECC();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v32 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5F1487C();
  v11 = v10;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v31 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v31 - v21;
  v35 = a1;
  sub_1D5F3DF44(a1, (uint64_t)&v31 - v21);
  v33 = a2;
  sub_1D5F3DF44(a2, (uint64_t)v20);
  v23 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1D5F3DF44((uint64_t)v22, (uint64_t)v13);
  sub_1D5F3DF44((uint64_t)v20, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v24((uint64_t)v13, 1, v6) != 1)
  {
    sub_1D5F3DF44((uint64_t)v13, (uint64_t)v17);
    if (v24(v23, 1, v6) != 1)
    {
      v26 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v32, v23, v6);
      sub_1D5E6D8C0((unint64_t *)&qword_1ED5FA520, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v27 = sub_1D6E268F4();
      v28 = *(void (**)(char *, uint64_t))(v8 + 8);
      v28(v26, v6);
      sub_1D5FCC7A8((uint64_t)v20);
      sub_1D5FCC7A8((uint64_t)v22);
      v28(v17, v6);
      sub_1D5FCC7A8((uint64_t)v13);
      v25 = v33;
      if ((v27 & 1) != 0)
        return sub_1D686E7B8(v25, v36);
LABEL_8:
      v29 = v35;
      sub_1D6E1A1E0();
      v25 = v29;
      return sub_1D686E7B8(v25, v36);
    }
    sub_1D5FCC7A8((uint64_t)v20);
    sub_1D5FCC7A8((uint64_t)v22);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v6);
LABEL_6:
    sub_1D5E8D20C((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1D5F1487C);
    goto LABEL_8;
  }
  sub_1D5FCC7A8((uint64_t)v20);
  sub_1D5FCC7A8((uint64_t)v22);
  if (v24(v23, 1, v6) != 1)
    goto LABEL_6;
  sub_1D5FCC7A8((uint64_t)v13);
  v25 = v33;
  return sub_1D686E7B8(v25, v36);
}

uint64_t sub_1D686E72C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D686E760()
{
  uint64_t v0;

  v0 = sub_1D6E1A0E4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D686E7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioFeedContentConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D686E7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);

  v1 = type metadata accessor for AudioFeedContentConfig();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  v3 = sub_1D6E15ECC();
  v4 = *(_QWORD *)(v3 - 8);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v14(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  v13 = v4;
  type metadata accessor for AudioFeedConfig();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v2 + *(int *)(v1 + 20);
  sub_1D5F85824();
  v7 = v6;
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v8(v5, v6);
  type metadata accessor for UpNextAudioFeedGroupKnobs();
  swift_release();
  swift_release();
  v9 = type metadata accessor for AudioFeedGroupKnobs();
  v8(v5 + *(int *)(v9 + 20), v7);
  type metadata accessor for ForYouAudioFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v10 = v2 + *(int *)(v1 + 24);
  v11 = type metadata accessor for LegacyAudioFeedConfiguration();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    if (!v14(v10, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D686EA14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioFeedContentConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D686EA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for AudioFeedContentConfig() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1D686E444(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

unint64_t sub_1D686EAC4()
{
  unint64_t result;

  result = qword_1EFFF3B40;
  if (!qword_1EFFF3B40)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E97478, &type metadata for AudioFeedConfigManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1EFFF3B40);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioFeedConfigManager.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D686EB48 + 4 * byte_1D6E97390[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D686EB68 + 4 * byte_1D6E97395[v4]))();
}

_BYTE *sub_1D686EB48(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D686EB68(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D686EB70(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D686EB78(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D686EB80(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D686EB88(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AudioFeedConfigManager.Errors()
{
  return &type metadata for AudioFeedConfigManager.Errors;
}

unint64_t sub_1D686EBA8()
{
  unint64_t result;

  result = qword_1EFFF3B48;
  if (!qword_1EFFF3B48)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E97450, &type metadata for AudioFeedConfigManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1EFFF3B48);
  }
  return result;
}

uint64_t sub_1D686EBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  _QWORD v30[5];

  v3 = v2;
  v27 = a1;
  v5 = sub_1D6E1FB74();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + 56);
  v10 = objc_msgSend((id)objc_opt_self(), sel__searchElement);
  v11 = objc_msgSend(v10, sel__identifier);

  v12 = sub_1D6E26978();
  v14 = v13;

  sub_1D60AB4AC((uint64_t)v8);
  if ((*(_BYTE *)(v9 + 16) & 1) != 0)
  {
    v15 = MEMORY[0x1D82919D4](v9 + 32);
    if (v15)
    {
      v16 = (void *)v15;
      v17 = sub_1D650D620(v12, v14, (uint64_t)v8);
      goto LABEL_6;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_16;
  }
  v18 = MEMORY[0x1D82919D4](v9 + 24);
  if (!v18)
    goto LABEL_13;
  v16 = (void *)v18;
  v17 = sub_1D6E1EF14();
LABEL_6:
  v19 = (void *)v17;
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v19)
  {
    type metadata accessor for SearchHomeCoordinatingController();
    sub_1D6E275A8();
    v20 = (void *)v30[0];
    if (v30[0])
    {
      if (a2)
      {
        v21 = objc_msgSend(*(id *)(v30[0]+ OBJC_IVAR____TtC7NewsUI232SearchHomeCoordinatingController_searchHomeContainerController), sel_parentViewController);
        if (v21)
        {
          v22 = v21;
          sub_1D601B5CC();
          v23 = v20;
          v24 = v22;
          LOBYTE(v22) = sub_1D6E27B78();

          if ((v22 & 1) != 0)
            sub_1D6DAC5AC(v27, a2, 4);

        }
        else
        {

        }
        return (uint64_t)v19;
      }

    }
    else
    {

    }
  }
LABEL_16:
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  sub_1D5E7809C(0, &qword_1ED5DD8B0);
  result = sub_1D6E19F70();
  if (v29)
  {
    sub_1D5E8D7A0(&v28, (uint64_t)v30);
    __swift_project_boxed_opaque_existential_1(v30, v30[3]);
    v19 = (void *)sub_1D606556C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    return (uint64_t)v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D686EE98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _OWORD v46[6];
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char v55;

  v36 = a2;
  sub_1D5FC9FDC();
  v4 = v3;
  v35 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v33 = v5;
  v34 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D6E199B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D6E16B80();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6E2024C();
  if (*((_QWORD *)&v49 + 1))
  {
    sub_1D6E16CD0();
    if ((swift_dynamicCast() & 1) != 0)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D565B8], v6);
      sub_1D6E16B74();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_1D6E16C88();
      swift_release();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
  else
  {
    sub_1D5F117D8((uint64_t)&v48);
  }
  sub_1D686F2B8(v36, (uint64_t)&v48);
  if ((v55 & 1) == 0)
  {
    v29 = (void *)v49;
    swift_bridgeObjectRelease();
    sub_1D6E1FA48();
    objc_msgSend(objc_allocWithZone((Class)sub_1D6E1E0A4()), sel_initWithRootViewController_, v29);
    v28 = sub_1D6E1F9F4();
    v30 = (void (*)(uint64_t))sub_1D6E20228();
    v30(v28);
    swift_release();

    return v28;
  }
  v46[4] = v52;
  v46[5] = v53;
  v47 = v54;
  v46[0] = v48;
  v46[1] = v49;
  v46[2] = v50;
  v46[3] = v51;
  v14 = v32[5];
  v36 = v32[6];
  __swift_project_boxed_opaque_existential_1(v32 + 2, v14);
  sub_1D5E7809C(0, &qword_1ED5FCA20);
  v15 = v34;
  v16 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v34, a1, v4);
  sub_1D686F44C((uint64_t)v46, (uint64_t)&v37);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (v33 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v19 + v17, v15, v4);
  v20 = v19 + v18;
  v21 = v42;
  *(_OWORD *)(v20 + 64) = v41;
  *(_OWORD *)(v20 + 80) = v21;
  *(_QWORD *)(v20 + 96) = v43;
  v22 = v38;
  *(_OWORD *)v20 = v37;
  *(_OWORD *)(v20 + 16) = v22;
  v23 = v40;
  *(_OWORD *)(v20 + 32) = v39;
  *(_OWORD *)(v20 + 48) = v23;
  sub_1D6E19F58();
  result = swift_release();
  if (v45)
  {
    sub_1D5E8D7A0(&v44, (uint64_t)&v37);
    v25 = *((_QWORD *)&v38 + 1);
    v26 = v39;
    __swift_project_boxed_opaque_existential_1(&v37, *((uint64_t *)&v38 + 1));
    v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
    sub_1D6E1FA48();
    objc_msgSend(objc_allocWithZone((Class)sub_1D6E1E0A4()), sel_initWithRootViewController_, v27);
    v28 = sub_1D6E1F9F4();

    sub_1D686F568((uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
    return v28;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D686F2B8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NewsActivity2.SearchMoreResults(a2, a1);
  return a2;
}

uint64_t sub_1D686F2F4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(_QWORD *);
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[4];
  char v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D5FC9FDC();
  v5 = (void (*)(_QWORD *))sub_1D6E20234();
  v5(a1);
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6E19E08();
  v6 = *(_QWORD *)(a3 + 56);
  if (v6)
  {
    v7 = *(_QWORD *)(a3 + 88);
    v8 = *(_BYTE *)(a3 + 80);
    v9 = *(_QWORD *)(a3 + 64);
    v10 = *(_QWORD *)(a3 + 72);
    v11 = *(_QWORD *)(a3 + 48);
    v14 = *(_QWORD *)(a3 + 96);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v15[0] = v11;
    v15[1] = v6;
    v15[2] = v9;
    v15[3] = v10;
    v16 = v8 & 1;
    v17 = v7;
    v18 = v14;
    sub_1D6E19E08();
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D67713C4(a3, (uint64_t)v15);
  v12 = qword_1D6E974B8[(char)v17];
  sub_1D6771400((uint64_t)v15);
  v15[0] = v12;
  return sub_1D6E19E08();
}

uint64_t sub_1D686F44C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SearchMoreViewData(a2, a1);
  return a2;
}

uint64_t sub_1D686F488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D5FC9FDC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(unsigned __int8 *)(v0 + v4 + 40) <= 3u)
    __swift_destroy_boxed_opaque_existential_1(v0 + v4);
  if (*(_QWORD *)(v0 + v4 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1D686F518(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  sub_1D5FC9FDC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_1D686F2F4(a1, v1 + v5, v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1D686F568(uint64_t a1)
{
  destroy for SearchMoreViewData(a1);
  return a1;
}

uint64_t sub_1D686F59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D686F8A8(a4);
}

uint64_t sub_1D686F5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D686F5E8(a4) & 1;
}

uint64_t sub_1D686F5E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  int v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = sub_1D6E251FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (id *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!objc_msgSend(*(id *)(v1 + 24), sel_useOfflineMode)
    || (__swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 56)), (sub_1D6E228E0() & 1) == 0))
  {
    (*(void (**)(id *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    v7 = (*(uint64_t (**)(id *, uint64_t))(v4 + 88))(v6, v3);
    if (v7 == *MEMORY[0x1E0D5EBE0])
    {
      (*(void (**)(id *, uint64_t))(v4 + 96))(v6, v3);
      v8 = (void *)sub_1D6E25D3C();
      if (v8)
      {
        v9 = v8;
        if (objc_msgSend(v8, sel_isRouteable))
        {
          v10 = objc_msgSend(v9, sel_isDeprecated);
          swift_unknownObjectRelease();
          if ((v10 & 1) == 0)
          {
            swift_release();
            return 1;
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      if (qword_1ED6241A8 != -1)
        swift_once();
      sub_1D5EE949C(0, (unint64_t *)&qword_1ED5F4EB0, (unint64_t *)&qword_1ED5F4EF0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1D6E32F90;
      v17 = sub_1D6E25D24();
      v19 = v18;
      *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v16 + 64) = sub_1D5F2C5C8();
      *(_QWORD *)(v16 + 32) = v17;
      *(_QWORD *)(v16 + 40) = v19;
      sub_1D6E27374();
      sub_1D6E1C61C();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else if (v7 == *MEMORY[0x1E0D5EBE8])
    {
      (*(void (**)(id *, uint64_t))(v4 + 96))(v6, v3);
      v12 = objc_msgSend(*v6, sel_sportsEventIDs);
      if (v12)
      {
        v13 = v12;
        v14 = sub_1D6E26D80();

        swift_unknownObjectRelease();
        v15 = *(_QWORD *)(v14 + 16);
        swift_bridgeObjectRelease();
        if (v15 == 1)
          return 1;
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      (*(void (**)(id *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  return 0;
}

uint64_t sub_1D686F8A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  int v12;
  void *v13;
  void *v14;
  id v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[16];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  sub_1D5FFCFB4();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v7 = &v33[-v6];
  v8 = sub_1D6E251FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (id *)&v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(id *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(id *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x1E0D5EBE0])
  {
    (*(void (**)(id *, uint64_t))(v9 + 96))(v11, v8);
    v13 = (void *)sub_1D6E25D3C();
    if (v13)
    {
      v14 = v13;
      if ((objc_msgSend(v13, sel_isRouteable) & 1) != 0
        && (objc_msgSend(v14, sel_isDeprecated) & 1) == 0)
      {
        v25 = objc_msgSend(v14, sel_identifier);
        v26 = sub_1D6E26978();
        v28 = v27;

        v29 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
        v30 = swift_allocObject();
        *(_QWORD *)(v30 + 16) = v26;
        *(_QWORD *)(v30 + 24) = v28;
        v31 = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)(v30 + 32) = v29;
        *(_QWORD *)(v30 + 40) = v31;
        *(_BYTE *)(v30 + 48) = 1;
        *(_QWORD *)(v30 + 56) = 8;
        *(_OWORD *)(v30 + 64) = 0u;
        *(_OWORD *)(v30 + 80) = 0u;
        *(_BYTE *)(v30 + 96) = -1;
        v32 = sub_1D6E1865C();
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v7, 1, 1, v32);
        v39 = 0;
        v37 = 0u;
        v38 = 0u;
        v36 = 0;
        v34 = 0u;
        v35 = 0u;
        swift_retain();
        sub_1D617FD24(v26, v28, v29, v31, 1);
        sub_1D617FDA8(0, 0, 0, 0, 0xFFu);
        sub_1D6C618C4(v30 | 0x2000000000000006, 0, (uint64_t)v7, (uint64_t)&v37, 0, 0, 0, 0, (uint64_t)&v34);
        swift_unknownObjectRelease();
        swift_release();
        sub_1D5FFD04C(v26, v28, v29, MEMORY[0x1E0DEE9D8], 1);
        sub_1D617FDBC(0, 0, 0, 0, 0xFFu);
        swift_release();
        sub_1D5E828E4((uint64_t)&v34, &qword_1ED5E0920, (unint64_t *)&unk_1ED5E0910, MEMORY[0x1E0DB35B0]);
        sub_1D5E828E4((uint64_t)&v37, (unint64_t *)&unk_1ED5DD090, (unint64_t *)&qword_1ED5E1AC0, MEMORY[0x1E0D53040]);
        sub_1D60A0360((uint64_t)v7);
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    return swift_release();
  }
  if (v12 != *MEMORY[0x1E0D5EBE8])
    return (*(uint64_t (**)(id *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(id *, uint64_t))(v9 + 96))(v11, v8);
  v16 = objc_msgSend(*v11, sel_sportsEventIDs);
  if (!v16)
    return swift_unknownObjectRelease();
  v17 = v16;
  v18 = (_QWORD *)sub_1D6E26D80();

  if (v18[2])
  {
    v19 = v18[4];
    v20 = (void *)v18[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v19;
    *(_QWORD *)(v22 + 24) = v20;
    v23 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v22 + 32) = v21;
    *(_QWORD *)(v22 + 40) = v23;
    *(_BYTE *)(v22 + 48) = 1;
    *(_QWORD *)(v22 + 56) = 8;
    *(_OWORD *)(v22 + 64) = 0u;
    *(_OWORD *)(v22 + 80) = 0u;
    *(_BYTE *)(v22 + 96) = -1;
    v24 = sub_1D6E1865C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 1, 1, v24);
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
    swift_retain();
    sub_1D617FD24(v19, v20, v21, v23, 1);
    sub_1D617FDA8(0, 0, 0, 0, 0xFFu);
    sub_1D6C618C4(v22 | 0x2000000000000006, 0, (uint64_t)v5, (uint64_t)&v37, 0, 0, 0, 0, (uint64_t)&v34);
    swift_unknownObjectRelease();
    sub_1D5FFD04C(v19, v20, v21, v23, 1);
    sub_1D617FDBC(0, 0, 0, 0, 0xFFu);
    swift_release();
    sub_1D5E828E4((uint64_t)&v34, &qword_1ED5E0920, (unint64_t *)&unk_1ED5E0910, MEMORY[0x1E0DB35B0]);
    sub_1D5E828E4((uint64_t)&v37, (unint64_t *)&unk_1ED5DD090, (unint64_t *)&qword_1ED5E1AC0, MEMORY[0x1E0D53040]);
    sub_1D60A0360((uint64_t)v5);
    swift_release();
    return swift_release();
  }
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D686FE74()
{
  uint64_t v0;
  int v1;

  sub_1D5FFD04C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255)
    sub_1D5FFD0C0(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v1);
  return swift_deallocObject();
}

uint64_t sub_1D686FEB8()
{
  sub_1D6E28400();
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

uint64_t sub_1D686FF30()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D686FF84()
{
  sub_1D6E28400();
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

uint64_t sub_1D686FFF8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D6E280D0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1D6870054(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1936154996;
  if (!*v1)
    v2 = 0x73656C6369747261;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D687008C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D658D31C(*a1, *a2);
}

uint64_t sub_1D6870098()
{
  sub_1D6576F34();
  return sub_1D6E26D44();
}

uint64_t sub_1D68700F4()
{
  sub_1D6576F34();
  return sub_1D6E26D08();
}

void sub_1D6870140(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E9AB0520;
}

uint64_t sub_1D6870150()
{
  _BYTE *v0;

  if (*v0)
    return 1936154964;
  else
    return 0x73656C6369747241;
}

unint64_t sub_1D6870188()
{
  unint64_t result;

  result = qword_1EFFF3B50;
  if (!qword_1EFFF3B50)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9760C, &type metadata for SearchMoreFeedGroupKind);
    atomic_store(result, (unint64_t *)&qword_1EFFF3B50);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchMoreFeedGroupKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D6870218 + 4 * byte_1D6E97565[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D687024C + 4 * byte_1D6E97560[v4]))();
}

uint64_t sub_1D687024C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6870254(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D687025CLL);
  return result;
}

uint64_t sub_1D6870268(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D6870270);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D6870274(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D687027C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchMoreFeedGroupKind()
{
  return &type metadata for SearchMoreFeedGroupKind;
}

unint64_t sub_1D687029C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFFF3B58;
  if (!qword_1EFFF3B58)
  {
    sub_1D68702E4();
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFFF3B58);
  }
  return result;
}

void sub_1D68702E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF3B60)
  {
    v0 = sub_1D6E26EDC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF3B60);
  }
}

uint64_t sub_1D6870338()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6870344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E2444C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1D6870380()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D687038C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E2444C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1D68703CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  v14 = a2;
  v15 = sub_1D6E2444C();
  v4 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v16 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D687071C(0, &qword_1ED60B578, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68706D8();
  sub_1D6E2846C();
  if (!v2)
  {
    v11 = v14;
    sub_1D5EFD2A8(&qword_1ED5F3B28, MEMORY[0x1E0D5D920]);
    v12 = v15;
    sub_1D6E28184();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v11, v16, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D6870564()
{
  sub_1D68706D8();
  return sub_1D6E28538();
}

uint64_t sub_1D687058C()
{
  sub_1D68706D8();
  return sub_1D6E28544();
}

uint64_t sub_1D68705B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D68703CC(a1, a2);
}

uint64_t sub_1D68705C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D687071C(0, &qword_1ED605658, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68706D8();
  sub_1D6E28478();
  sub_1D6E2444C();
  sub_1D5EFD2A8(&qword_1ED5F3B20, MEMORY[0x1E0D5D918]);
  sub_1D6E28238();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D68706D8()
{
  unint64_t result;

  result = qword_1ED60ADB8;
  if (!qword_1ED60ADB8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9782C, &type metadata for SavedStoriesTodayFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED60ADB8);
  }
  return result;
}

void sub_1D687071C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D68706D8();
    v7 = a3(a1, &type metadata for SavedStoriesTodayFeedGroupConfigData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SavedStoriesTodayFeedGroupConfigData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D68707B8 + 4 * byte_1D6E976E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D68707D8 + 4 * byte_1D6E976E5[v4]))();
}

_BYTE *sub_1D68707B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D68707D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D68707E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D68707E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D68707F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D68707F8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SavedStoriesTodayFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SavedStoriesTodayFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1D6870818()
{
  unint64_t result;

  result = qword_1EFFF3B90;
  if (!qword_1EFFF3B90)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E97804, &type metadata for SavedStoriesTodayFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3B90);
  }
  return result;
}

unint64_t sub_1D6870860()
{
  unint64_t result;

  result = qword_1ED60ADC8;
  if (!qword_1ED60ADC8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E97774, &type metadata for SavedStoriesTodayFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED60ADC8);
  }
  return result;
}

unint64_t sub_1D68708A8()
{
  unint64_t result;

  result = qword_1ED60ADC0;
  if (!qword_1ED60ADC0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9779C, &type metadata for SavedStoriesTodayFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED60ADC0);
  }
  return result;
}

uint64_t TagModel.identifier.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  v2 = sub_1D6E26978();

  return v2;
}

uint64_t TagModel.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  sub_1D6E27EA8();
  swift_bridgeObjectRelease();
  v3 = *(void **)(v1 + 16);
  v4 = objc_msgSend(v3, sel_identifier, 0xD000000000000013, 0x80000001D6F16300);
  sub_1D6E26978();

  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  v5 = objc_allocWithZone(MEMORY[0x1E0C99E98]);
  v6 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithString_, v6);

  if (v7)
  {
    sub_1D6E26A50();
    v8 = sub_1D6E27950();
    swift_bridgeObjectRelease();
    if (v8)
    {
      v9 = objc_msgSend(v3, sel_name);
      sub_1D6E26978();

      sub_1D6E2078C();
      v10 = sub_1D6E20798();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
    }

  }
  v12 = sub_1D6E20798();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
}

uint64_t sub_1D6870AFC()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;

  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(v1, sel_asSports);
  if (v2
    && (v3 = (unint64_t)objc_msgSend(v2, sel_sportsLeagueType),
        swift_unknownObjectRelease(),
        (v3 & 0xFFFFFFFFFFFFFFFELL) == 2))
  {
    v4 = objc_msgSend(v1, sel_asSports);
    v5 = (uint64_t)v4;
    if (v4)
    {
      v6 = objc_msgSend(v4, sel_sportsSecondaryName);
      swift_unknownObjectRelease();
      if (v6)
      {
        v7 = sub_1D6E26978();
LABEL_10:
        v5 = v7;

        return v5;
      }
      return 0;
    }
  }
  else
  {
    v8 = sub_1D6870CC8();
    if (!v9)
    {
      if ((*(_BYTE *)(v0 + 27) & 0x81) == 1)
      {
        type metadata accessor for Localized();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
        v7 = sub_1D6E15968();
        goto LABEL_10;
      }
      return 0;
    }
    return v8;
  }
  return v5;
}

uint64_t sub_1D6870C8C(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;

  v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0)
      return 0;
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t sub_1D6870CC8()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_asSports);
  if (!v1)
    return 0;
  v2 = v1;
  if (((unint64_t)objc_msgSend(v1, sel_sportsLeagueType) & 0xFFFFFFFFFFFFFFFELL) != 2)
  {
    switch((unint64_t)objc_msgSend(v2, sel_sportsType))
    {
      case 1uLL:
      case 7uLL:
        v3 = objc_msgSend(v2, sel_sportsSecondaryName);
        if (!v3)
          goto LABEL_6;
        goto LABEL_4;
      default:
        goto LABEL_6;
    }
  }
  v3 = objc_msgSend(v2, sel_sportsSecondaryName);
  if (!v3)
  {
LABEL_6:
    swift_unknownObjectRelease();
    return 0;
  }
LABEL_4:
  v4 = v3;
  v5 = sub_1D6E26978();

  swift_unknownObjectRelease();
  return v5;
}

uint64_t TagModel.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TagModel.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D6870E44(_QWORD *a1, _QWORD *a2)
{
  return static TagModel.== infix(_:_:)(*a1, *a2) & 1;
}

BOOL sub_1D6870E64(uint64_t *a1, uint64_t *a2)
{
  return _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(*a1, *a2);
}

BOOL sub_1D6870E70(uint64_t *a1, uint64_t *a2)
{
  return !_s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(*a2, *a1);
}

BOOL sub_1D6870E98(uint64_t *a1, uint64_t *a2)
{
  return !_s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(*a1, *a2);
}

BOOL sub_1D6870EBC(uint64_t *a1, uint64_t *a2)
{
  return _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(*a2, *a1);
}

uint64_t sub_1D6870ECC@<X0>(uint64_t a1@<X8>)
{
  return TagModel.dragItem.getter(a1);
}

uint64_t TagModel.description.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_1D6E27EA8();
  sub_1D6E26A98();
  v1 = *(void **)(v0 + 16);
  sub_1D5FACA8C();
  sub_1D6E27F98();
  sub_1D6E26A98();
  v2 = objc_msgSend(v1, sel_name);
  sub_1D6E26978();

  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  sub_1D6E27F98();
  sub_1D6E26A98();
  sub_1D6E27F98();
  sub_1D6E26A98();
  sub_1D6871528();
  sub_1D6E269CC();
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  sub_1D6E27F98();
  sub_1D6E26A98();
  sub_1D687157C();
  swift_bridgeObjectRetain();
  sub_1D6E269CC();
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  return 0;
}

uint64_t sub_1D6871194()
{
  return TagModel.description.getter();
}

BOOL _s7NewsUI28TagModelC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  _BOOL8 result;
  int v15;
  int v16;
  _BOOL4 v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v4 = objc_msgSend(*(id *)(a1 + 16), sel_identifier);
  v5 = sub_1D6E26978();
  v7 = v6;

  v8 = objc_msgSend(*(id *)(a2 + 16), sel_identifier);
  v9 = sub_1D6E26978();
  v11 = v10;

  if (v5 == v9 && v7 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = sub_1D6E282C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v13 & 1) == 0)
      return result;
  }
  if (*(unsigned __int8 *)(a1 + 24) != *(unsigned __int8 *)(a2 + 24)
    || *(unsigned __int8 *)(a1 + 25) != *(unsigned __int8 *)(a2 + 25))
  {
    return 0;
  }
  v15 = *(unsigned __int8 *)(a1 + 26);
  v16 = *(unsigned __int8 *)(a2 + 26);
  if (v15 == 2)
  {
    if (v16 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v17 = (v15 & 1) == 0;
    if (v16 == 2 || ((v17 ^ v16) & 1) == 0)
      return result;
  }
  v18 = *(_BYTE *)(a1 + 27);
  v19 = *(unsigned __int8 *)(a2 + 27);
  if (v18 < 0)
  {
    if ((v19 & 0x80) == 0 || ((v18 & 1) == 0) == (v19 & 1))
      return 0;
  }
  else if ((v19 & 0x80) != 0 || ((((v18 & 1) == 0) ^ v19) & 1) == 0)
  {
    return 0;
  }
  v20 = *(_QWORD *)(a1 + 32);
  v21 = *(_QWORD *)(a2 + 32);
  result = (v20 | v21) == 0;
  if (v20)
  {
    if (v21)
    {
      swift_bridgeObjectRetain();
      v22 = swift_bridgeObjectRetain();
      v23 = sub_1D6A2C614(v22, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v23 & 1;
    }
  }
  return result;
}

BOOL _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  v3 = *(void **)(a1 + 16);
  v4 = objc_msgSend(v3, sel_name);
  sub_1D6E26978();

  sub_1D6E269FC();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_identifier);
  sub_1D6E26978();

  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a2 + 16);
  v7 = objc_msgSend(v6, sel_name);
  sub_1D6E26978();

  sub_1D6E269FC();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_identifier);
  sub_1D6E26978();

  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D5F5EA98();
  v9 = sub_1D6E27CBC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 == -1;
}

void sub_1D6871528()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED623E98)
  {
    v0 = sub_1D6E27C38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED623E98);
  }
}

void sub_1D687157C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED623ED0)
  {
    sub_1D6618E6C();
    v0 = sub_1D6E27C38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED623ED0);
  }
}

uint64_t sub_1D68715D0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1D5E6D4DC((unint64_t *)&unk_1ED62CE30, a2, (uint64_t (*)(uint64_t))type metadata accessor for TagModel, (uint64_t)&protocol conformance descriptor for TagModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for TagModel()
{
  return objc_opt_self();
}

uint64_t sub_1D687162C(uint64_t a1, uint64_t a2)
{
  return sub_1D5E6D4DC((unint64_t *)&unk_1ED62CE40, a2, (uint64_t (*)(uint64_t))type metadata accessor for TagModel, (uint64_t)&protocol conformance descriptor for TagModel);
}

uint64_t method lookup function for TagModel()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for TagSubscription(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7F)
    goto LABEL_17;
  if (a2 + 129 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 129) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 129;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 129;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 129;
  }
LABEL_17:
  v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for TagSubscription(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 129 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 129) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7E)
    return ((uint64_t (*)(void))((char *)&loc_1D687174C + 4 * byte_1D6E97885[v4]))();
  *a1 = a2 - 127;
  return ((uint64_t (*)(void))((char *)sub_1D6871780 + 4 * byte_1D6E97880[v4]))();
}

uint64_t sub_1D6871780(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6871788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D6871790);
  return result;
}

uint64_t sub_1D68717A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D68717B0);
  *(_BYTE *)result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
  return result;
}

uint64_t sub_1D68717B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68717BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68717C8(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

_BYTE *sub_1D68717D4(_BYTE *result)
{
  *result &= ~0x80u;
  return result;
}

_BYTE *sub_1D68717E4(_BYTE *result, char a2)
{
  *result = *result & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for TagSubscription()
{
  return &type metadata for TagSubscription;
}

uint64_t storeEnumTagSinglePayload for NotificationSetting(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D6871854 + 4 * byte_1D6E9788F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D6871888 + 4 * byte_1D6E9788A[v4]))();
}

uint64_t sub_1D6871888(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6871890(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D6871898);
  return result;
}

uint64_t sub_1D68718A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D68718ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D68718B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68718B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSetting()
{
  return &type metadata for NotificationSetting;
}

uint64_t storeEnumTagSinglePayload for TagSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D6871920 + 4 * byte_1D6E97899[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D6871954 + 4 * byte_1D6E97894[v4]))();
}

uint64_t sub_1D6871954(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D687195C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D6871964);
  return result;
}

uint64_t sub_1D6871970(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D6871978);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D687197C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6871984(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TagSource()
{
  return &type metadata for TagSource;
}

unint64_t sub_1D68719A4()
{
  unint64_t result;

  result = qword_1EFFF3BA0;
  if (!qword_1EFFF3BA0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E97AA0, &type metadata for TagSource);
    atomic_store(result, (unint64_t *)&qword_1EFFF3BA0);
  }
  return result;
}

unint64_t sub_1D68719EC()
{
  unint64_t result;

  result = qword_1EFFF3BA8;
  if (!qword_1EFFF3BA8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E97B08, &type metadata for NotificationSetting);
    atomic_store(result, (unint64_t *)&qword_1EFFF3BA8);
  }
  return result;
}

uint64_t sub_1D6871A30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6871A3C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 217)
  {
    v4 = *a1;
    if (v4 >= 0x27)
      return v4 - 38;
    else
      return 0;
  }
  else
  {
    v8 = sub_1D6E2444C();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1D6871AB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1D6871ABC(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 217)
  {
    *result = a2 + 38;
  }
  else
  {
    v7 = sub_1D6E2444C();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SportsFavoritesTagFeedGroupConfigData()
{
  uint64_t result;

  result = qword_1ED620E50;
  if (!qword_1ED620E50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D6871B68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D6E2444C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D6871BDC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  char v19;

  v16 = a2;
  v17 = sub_1D6E2444C();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6871FB8(0, &qword_1ED624678, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6871F74();
  sub_1D6E2846C();
  if (!v2)
  {
    v11 = v16;
    v19 = 1;
    sub_1D5EFD2A8(&qword_1ED5F3B28, MEMORY[0x1E0D5D920]);
    v12 = v17;
    sub_1D6E28184();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *v11 = 12;
    v13 = type metadata accessor for SportsFavoritesTagFeedGroupConfigData();
    (*(void (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v11[*(int *)(v13 + 20)], v18, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D6871D90(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1D6871FB8(0, &qword_1EFFF3BB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6871F74();
  sub_1D6E28478();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1D5FD2CA8();
  sub_1D6E28238();
  if (!v2)
  {
    type metadata accessor for SportsFavoritesTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1D6E2444C();
    sub_1D5EFD2A8(&qword_1ED5F3B20, MEMORY[0x1E0D5D918]);
    sub_1D6E28238();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D6871EFC()
{
  sub_1D6871F74();
  return sub_1D6E28538();
}

uint64_t sub_1D6871F24()
{
  sub_1D6871F74();
  return sub_1D6E28544();
}

uint64_t sub_1D6871F4C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1D6871BDC(a1, a2);
}

uint64_t sub_1D6871F60(_QWORD *a1)
{
  return sub_1D6871D90(a1);
}

unint64_t sub_1D6871F74()
{
  unint64_t result;

  result = qword_1ED620E20;
  if (!qword_1ED620E20)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E97CC4, &type metadata for SportsFavoritesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED620E20);
  }
  return result;
}

void sub_1D6871FB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D6871F74();
    v7 = a3(a1, &type metadata for SportsFavoritesTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsFavoritesTagFeedGroupConfigData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D6872060 + 4 * byte_1D6E97B65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D6872094 + 4 * byte_1D6E97B60[v4]))();
}

uint64_t sub_1D6872094(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D687209C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D68720A4);
  return result;
}

uint64_t sub_1D68720B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D68720B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D68720BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68720C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsFavoritesTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SportsFavoritesTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1D68720E4()
{
  unint64_t result;

  result = qword_1EFFF3BB8;
  if (!qword_1EFFF3BB8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E97C9C, &type metadata for SportsFavoritesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3BB8);
  }
  return result;
}

unint64_t sub_1D687212C()
{
  unint64_t result;

  result = qword_1ED620E30;
  if (!qword_1ED620E30)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E97C0C, &type metadata for SportsFavoritesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED620E30);
  }
  return result;
}

unint64_t sub_1D6872174()
{
  unint64_t result;

  result = qword_1ED620E28;
  if (!qword_1ED620E28)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E97C34, &type metadata for SportsFavoritesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED620E28);
  }
  return result;
}

uint64_t sub_1D68721B8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  _OWORD v11[2];
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  sub_1D5FFCFB4();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    v7 = v6 | 0xB000000000000002;
    v8 = sub_1D6E1865C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    v9 = a1;
    sub_1D6C618C4(v7, 0, (uint64_t)v4, (uint64_t)v13, 0, 0, 0, 0, (uint64_t)v11);
    swift_release();
    sub_1D5E82828((uint64_t)v11, &qword_1ED5E0920, (unint64_t *)&unk_1ED5E0910);
    sub_1D5E82828((uint64_t)v13, (unint64_t *)&unk_1ED5DD090, (unint64_t *)&qword_1ED5E1AC0);
    sub_1D60A0360((uint64_t)v4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D6872334()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1D6872358(void *a1)
{
  return sub_1D68721B8(a1);
}

uint64_t sub_1D6872378()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t type metadata accessor for WebViewerTracker()
{
  return objc_opt_self();
}

id sub_1D68723BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_1D6E1FF34();
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + 24);
  if (v6)
  {
    v7 = *(id *)(v1 + 24);
  }
  else
  {
    v8 = *(void **)(v1 + 16);
    (*(void (**)(char *, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0DBBE68]);
    objc_allocWithZone((Class)sub_1D6E1F9AC());
    v9 = v8;
    v10 = (void *)sub_1D6E1F994();
    v11 = *(void **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = v10;
    v7 = v10;

    v6 = 0;
  }
  v12 = v6;
  return v7;
}

unint64_t sub_1D6872488()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  char v9;
  char v10;
  int64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  char v17;
  char v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t ObjCClassFromMetadata;
  id v29;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
  v1 = objc_msgSend(objc_msgSend(*(id *)(v0 + 72), sel_backingTag), sel_identifier);
  swift_unknownObjectRelease();
  v2 = sub_1D6E26978();
  v4 = v3;

  v5 = sub_1D691A20C(v2, v4);
  swift_bridgeObjectRelease();
  v6 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
  result = swift_beginAccess();
  v8 = *(_QWORD *)(v6 + 24);
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = v5 + 56;
  v13 = 1 << v5[32];
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *((_QWORD *)v5 + 7);
  v16 = (unint64_t)(v13 + 63) >> 6;
LABEL_6:
  v17 = v9;
  while (1)
  {
    v19 = v10;
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v11 << 6);
      goto LABEL_25;
    }
    v22 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v22 >= v16)
      goto LABEL_34;
    v23 = *(_QWORD *)&v12[8 * v22];
    ++v11;
    if (!v23)
    {
      v11 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_34;
      v23 = *(_QWORD *)&v12[8 * v11];
      if (!v23)
      {
        v11 = v22 + 2;
        if (v22 + 2 >= v16)
          goto LABEL_34;
        v23 = *(_QWORD *)&v12[8 * v11];
        if (!v23)
          break;
      }
    }
LABEL_24:
    v15 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v11 << 6);
LABEL_25:
    v25 = *((_QWORD *)v5 + 6) + 16 * v21;
    result = *(_QWORD *)v25;
    v26 = *(unsigned __int8 *)(v25 + 8);
    if ((v26 - 1) < 3)
    {
      v18 = 1;
      goto LABEL_8;
    }
    if (!*(_BYTE *)(v25 + 8))
    {
      v18 = result & 1;
LABEL_8:
      result = sub_1D6225C24(result, v26, v8);
      if ((result & 1) != 0)
        goto LABEL_9;
      if ((v18 & 1) != 0)
      {
        v10 = 0;
        v9 = 1;
        if ((v19 & 1) == 0)
          goto LABEL_6;
      }
      else
      {
LABEL_5:
        v9 = 0;
        v10 = 1;
        if ((v17 & 1) == 0)
          goto LABEL_6;
      }
      swift_release();
LABEL_39:
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v29 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v27 = sub_1D6E15968();

      return v27;
    }
    if (result >= 2)
    {
      result = sub_1D6225C24(result, 4, v8);
      if ((result & 1) == 0)
        goto LABEL_5;
    }
LABEL_9:
    v10 = 0;
    if ((v19 & 1) != 0)
      goto LABEL_5;
  }
  v24 = v22 + 3;
  if (v24 >= v16)
  {
LABEL_34:
    swift_release();
    if ((v19 & 1) != 0 || (v17 & 1) != 0)
      goto LABEL_39;
    return 0;
  }
  v23 = *(_QWORD *)&v12[8 * v24];
  v11 = v24;
  if (v23)
    goto LABEL_24;
  while (1)
  {
    v11 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v11 >= v16)
      goto LABEL_34;
    v23 = *(_QWORD *)&v12[8 * v11];
    ++v24;
    if (v23)
      goto LABEL_24;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1D687288C()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 10));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TagFeedViewerPuzzleFullArchiveTitleViewProvider()
{
  return objc_opt_self();
}

id sub_1D68728F0()
{
  return sub_1D68723BC();
}

uint64_t sub_1D6872910(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;

  v3 = *v1;
  v4 = *(char **)(v3 + 16);
  v5 = sub_1D68723BC();
  v6 = *(_QWORD *)(v3 + 72);
  v7 = objc_msgSend(a1, sel_navigationBar);
  v8 = sub_1D6872488();
  sub_1D69F12F8(v4, v6, v7, v8, v9);

  return swift_bridgeObjectRelease();
}

uint64_t *sub_1D6872998(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  _QWORD *v7;

  v3 = *result;
  if (*result)
    v4 = a2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    swift_unknownObjectRetain();
    if (sub_1D6E1E710())
    {
      v7 = (_QWORD *)swift_allocObject();
      v7[2] = v3;
      v7[3] = a2;
      v7[4] = a3;
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      sub_1D6E16C04();
      swift_unknownObjectRelease();
      swift_release();
      return (uint64_t *)swift_release();
    }
    else
    {
      return (uint64_t *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1D6872A78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (**v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (**v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t ObjectType;
  uint64_t v93;
  uint64_t v94;
  unsigned int v95;
  void (**v96)(char *, uint64_t);
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  _OWORD v102[2];

  v89 = a4;
  v82 = a3;
  v100 = a1;
  v73 = sub_1D6E1910C();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v71 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1D6E17FD8();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v68 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED5F9C10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55420], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v86 = (char *)&v67 - v9;
  v10 = sub_1D6E18F20();
  v87 = *(_QWORD *)(v10 - 8);
  v88 = v10;
  MEMORY[0x1E0C80A78](v10);
  v67 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1D6E18944();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v83 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&unk_1EFFEA920, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9F30], v7);
  MEMORY[0x1E0C80A78](v13);
  v78 = (char *)&v67 - v14;
  v15 = sub_1D6E180EC();
  MEMORY[0x1E0C80A78](v15);
  v77 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1D6E17E58();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v79 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1D6E19370();
  v76 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v74 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D6E17FC0();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53C48];
  v96 = *(void (***)(char *, uint64_t))(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = a2;
  ObjectType = swift_getObjectType();
  sub_1D6E27740();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4AD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v24 = v23;
  v25 = sub_1D6E16940();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 72);
  v28 = *(unsigned __int8 *)(v26 + 80);
  v29 = (v28 + 32) & ~v28;
  v98 = v28 | 7;
  v99 = v29 + v27;
  v30 = swift_allocObject();
  v101 = xmmword_1D6E32F90;
  *(_OWORD *)(v30 + 16) = xmmword_1D6E32F90;
  v31 = *MEMORY[0x1E0CF8170];
  v32 = *(void (***)(char *, uint64_t))(v26 + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v32)(v30 + v29, v31, v25);
  sub_1D5E6D8C0((unint64_t *)&unk_1ED5E0650, v20, MEMORY[0x1E0D53BE0]);
  v91 = (unint64_t)"Filtering by play state";
  sub_1D6E168E0();
  swift_bridgeObjectRelease();
  v96[1](v22, v19);
  v33 = v74;
  sub_1D6E27764();
  v93 = v24;
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = v101;
  v95 = v31;
  v94 = v25;
  v96 = v32;
  ((void (*)(uint64_t, uint64_t, uint64_t))v32)(v34 + v29, v31, v25);
  sub_1D5E6D8C0((unint64_t *)&unk_1ED5E07D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55B58], MEMORY[0x1E0D55B38]);
  v35 = v33;
  v36 = v75;
  sub_1D6E168E0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v35, v36);
  if (v82)
  {
    v37 = v78;
    sub_1D6E1E734();
    v38 = sub_1D6E1EBF0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 0, 1, v38);
  }
  else
  {
    v39 = sub_1D6E1EBF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v78, 1, 1, v39);
  }
  sub_1D6E180F8();
  v40 = v79;
  sub_1D6E17E4C();
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v101;
  v42 = v41 + v29;
  v43 = v95;
  v44 = v94;
  v90 = v29;
  v45 = v96;
  ((void (*)(uint64_t, _QWORD, uint64_t))v96)(v42, v95, v94);
  sub_1D5E6D8C0((unint64_t *)&unk_1EFFEA930, (uint64_t (*)(uint64_t))MEMORY[0x1E0D539F0], MEMORY[0x1E0D539E0]);
  v46 = v81;
  sub_1D6E168E0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v40, v46);
  sub_1D6E26978();
  v47 = v83;
  sub_1D6E18938();
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = v101;
  v49 = v90;
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v48 + v90, v43, v44);
  sub_1D5E6D8C0(&qword_1EFFF3D20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D54B00], MEMORY[0x1E0D54AF0]);
  v50 = v85;
  sub_1D6E168E0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v47, v50);
  v51 = (uint64_t)v86;
  sub_1D6E27758();
  v53 = v87;
  v52 = v88;
  v54 = v49;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v51, 1, v88) == 1)
  {
    v55 = v49;
    sub_1D6497E94(v51);
  }
  else
  {
    v56 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v67, v51, v52);
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = v101;
    v55 = v54;
    ((void (*)(uint64_t, uint64_t, uint64_t))v96)(v57 + v54, v43, v94);
    sub_1D5E6D8C0(&qword_1EFFDA720, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55420], MEMORY[0x1E0D55418]);
    sub_1D6E168E0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v52);
  }
  if (objc_msgSend(v97, sel_sourceChannel))
  {
    v58 = v68;
    sub_1D6E18BA8();
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v101;
    v60 = v59 + v55;
    v61 = v94;
    ((void (*)(uint64_t, _QWORD, uint64_t))v96)(v60, v95, v94);
    sub_1D5E6D8C0((unint64_t *)&unk_1ED5E0670, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53C88], MEMORY[0x1E0D53C70]);
    v97 = (id)(v91 | 0x8000000000000000);
    v62 = v70;
    sub_1D6E168E0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v58, v62);
    v63 = v71;
    sub_1D6E18B9C();
    v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = v101;
    ((void (*)(uint64_t, _QWORD, uint64_t))v96)(v64 + v90, v95, v61);
    sub_1D5E6D8C0((unint64_t *)&unk_1ED5E07B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D557B8], MEMORY[0x1E0D557B0]);
    v65 = v73;
    sub_1D6E168E0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v63, v65);
  }
  sub_1D6E189C8();
  sub_1D5E6D8C0((unint64_t *)&unk_1ED60BC30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D54C38], MEMORY[0x1E0D54BE0]);
  memset(v102, 0, sizeof(v102));
  sub_1D6E168F8();
  return sub_1D5F117D8((uint64_t)v102);
}

uint64_t sub_1D687347C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D68734B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1D6872A78(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

char *sub_1D68734BC(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  objc_class *v15;
  uint64_t v16;
  Class v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  objc_super v36;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_showingPrefixLabel;
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v13 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_selectCategoryButton;
  v15 = (objc_class *)sub_1D6E1DB34();
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(v15), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_onSelectCategoryButtonTap;
  sub_1D60B4250();
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone(v17), sel_init);
  v18 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_sortByButton;
  *(_QWORD *)&v13[v18] = objc_msgSend(objc_allocWithZone(v15), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v36.receiver = v13;
  v36.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v36, sel_initWithFrame_, a1, a2, a3, a4);
  v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_showingPrefixLabel];
  v21 = v19;
  objc_msgSend(v21, sel_addSubview_, v20);
  v22 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_selectCategoryButton;
  objc_msgSend(v21, sel_addSubview_, *(_QWORD *)&v21[OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_selectCategoryButton]);
  v23 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_sortByButton;
  v24 = *(void **)&v21[OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_sortByButton];
  objc_msgSend(v21, sel_addSubview_, v24);
  v25 = objc_msgSend(v24, sel_imageView);
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, sel_setContentMode_, 4);

  }
  v27 = *(void **)&v21[v23];
  v28 = (void *)objc_opt_self();
  v29 = v27;
  v30 = objc_msgSend(v28, sel_mainBundle);
  sub_1D6E15968();

  v31 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setAccessibilityLabel_, v31, 0x80000001D6F214F0);

  v32 = *(void **)&v21[v22];
  v33 = *(id *)&v21[OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_onSelectCategoryButtonTap];
  v34 = v32;
  sub_1D6E202C4();

  return v21;
}

uint64_t type metadata accessor for MagazineCatalogSectionHeaderView()
{
  return objc_opt_self();
}

void sub_1D6873848()
{

}

void sub_1D6873874()
{
  sub_1D68738D0(&qword_1EFFEECE8, (uint64_t)&unk_1D6E97E9C);
  JUMPOUT(0x1D8289094);
}

uint64_t sub_1D68738AC()
{
  return sub_1D68738D0(&qword_1EFFF3D70, (uint64_t)&unk_1D6E97E64);
}

uint64_t sub_1D68738D0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MagazineCatalogSectionHeaderView();
    result = MEMORY[0x1D82917D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D687390C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v4;
  Class v5;
  uint64_t v6;

  v1 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_showingPrefixLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_selectCategoryButton;
  v3 = (objc_class *)sub_1D6E1DB34();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(v3), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_onSelectCategoryButtonTap;
  sub_1D60B4250();
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v5), sel_init);
  v6 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_sortByButton;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(v3), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1D6E28010();
  __break(1u);
}

_QWORD *initializeBufferWithCopyOfBuffer for TagFeedCoverViewStyler(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for TagFeedCoverViewStyler(uint64_t a1)
{

}

_QWORD *assignWithCopy for TagFeedCoverViewStyler(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for TagFeedCoverViewStyler(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for TagFeedCoverViewStyler()
{
  return &type metadata for TagFeedCoverViewStyler;
}

id sub_1D6873B38()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id sub_1D6873B40()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

_QWORD *sub_1D6873B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v4 = v3;
  v25 = a2;
  v26 = a3;
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1D5F949A4(0, 3, 0);
  v6 = v29;
  v27 = 47;
  v28 = 0xE100000000000000;
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v29 + 16);
  v7 = *(_QWORD *)(v29 + 24);
  if (v8 >= v7 >> 1)
  {
    sub_1D5F949A4(v7 > 1, v8 + 1, 1);
    v6 = v29;
  }
  *(_QWORD *)(v6 + 16) = v8 + 1;
  v9 = v6 + 16 * v8;
  *(_QWORD *)(v9 + 32) = 47;
  *(_QWORD *)(v9 + 40) = 0xE100000000000000;
  v27 = 47;
  v28 = 0xE100000000000000;
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  v29 = v6;
  v11 = *(_QWORD *)(v6 + 16);
  v10 = *(_QWORD *)(v6 + 24);
  if (v11 >= v10 >> 1)
  {
    sub_1D5F949A4(v10 > 1, v11 + 1, 1);
    v6 = v29;
  }
  *(_QWORD *)(v6 + 16) = v11 + 1;
  v12 = v6 + 16 * v11;
  *(_QWORD *)(v12 + 32) = 47;
  *(_QWORD *)(v12 + 40) = 0xE100000000000000;
  v27 = 47;
  v28 = 0xE100000000000000;
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  v29 = v6;
  v14 = *(_QWORD *)(v6 + 16);
  v13 = *(_QWORD *)(v6 + 24);
  if (v14 >= v13 >> 1)
  {
    sub_1D5F949A4(v13 > 1, v14 + 1, 1);
    v6 = v29;
  }
  *(_QWORD *)(v6 + 16) = v14 + 1;
  v15 = v6 + 16 * v14;
  *(_QWORD *)(v15 + 32) = 47;
  *(_QWORD *)(v15 + 40) = 0xE100000000000000;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED624860, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = *(_QWORD *)(sub_1D6E1A594() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1D6E32F90;
  v19 = (_QWORD *)(v18 + v17);
  *v19 = 0x6472616F626E6FLL;
  v19[1] = 0xE700000000000000;
  (*(void (**)(void))(v16 + 104))();
  v20 = sub_1D66138C4(MEMORY[0x1E0DEE9D8]);
  v24[2] = 0;
  v24[3] = 0;
  v24[4] = v18;
  v24[5] = MEMORY[0x1E0C80A78](v20);
  v21 = sub_1D638F8D0((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1D60AAB04, (uint64_t)v24, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4[2] = v21;
  v4[3] = a1;
  v22 = v26;
  v4[4] = v25;
  v4[5] = v22;
  return v4;
}

uint64_t sub_1D6873EE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5DCD70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D545D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v43 = (char *)&v42 - v5;
  v6 = sub_1D6E1A2D0();
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D6E15BE4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D6E1A300();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v42 - v18;
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED60C160, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3F28]);
  v46 = a1;
  sub_1D6E1A4EC();
  sub_1D6E1A2C4();
  v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v19, v13);
  v21 = sub_1D6E15B00();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (!*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = sub_1D6E280D0();
  swift_bridgeObjectRelease();
  if (v22 > 2)
    return 0;
  v23 = v46;
  sub_1D6E1A4EC();
  sub_1D6E1A2E8();
  v24 = v13;
  v25 = v23;
  v20(v17, v24);
  v26 = sub_1D6E1A2DC();
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v45);
  v29 = (uint64_t)v47;
  if (!v28)
    goto LABEL_17;
  if (v26 == 0x65726F666562 && v28 == 0xE600000000000000)
  {
    if (v22)
      goto LABEL_7;
LABEL_13:
    swift_bridgeObjectRelease();
    v31 = 0;
    goto LABEL_18;
  }
  v32 = sub_1D6E282C8();
  if (!v22 && (v32 & 1) != 0)
    goto LABEL_13;
  if (v26 != 0x7265746661 || v28 != 0xE500000000000000)
  {
LABEL_7:
    v30 = sub_1D6E282C8();
    swift_bridgeObjectRelease();
    if (((6u >> v22) & 1) == 0 && (v30 & 1) != 0)
      goto LABEL_9;
LABEL_17:
    v31 = 2;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  if (v22)
    goto LABEL_17;
LABEL_9:
  v31 = 1;
LABEL_18:
  v33 = sub_1D64DB290(v25);
  v34 = sub_1D6350DE8();
  v35 = qword_1D6E97FE0[(char)v22];
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = v35;
  *(_QWORD *)(v36 + 24) = v33;
  *(_BYTE *)(v36 + 32) = v31;
  v37 = v36 | 0x6000000000000004;
  if ((v34 & 1) != 0)
  {
    swift_retain();
    v38 = v33;
    v29 = (uint64_t)v43;
    sub_1D6E1A4C8();
    v39 = sub_1D6E1865C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v29, 0, 1, v39);
    v53 = 0;
    v51 = 0u;
    v52 = 0u;
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    sub_1D6C618C4(v37, 0, v29, (uint64_t)&v51, 0, 0, 0, 0, (uint64_t)&v48);
  }
  else
  {
    v38 = v33;
    swift_retain();
    sub_1D6E1A4C8();
    v41 = sub_1D6E1865C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v29, 0, 1, v41);
    v53 = 0;
    v51 = 0u;
    v52 = 0u;
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    sub_1D6C61E04(v37, 0, v29, (uint64_t)&v51, 0, 0, (uint64_t)&v48);
  }
  swift_release();

  sub_1D5E828A8((uint64_t)&v48, (uint64_t)&qword_1ED5E0920, (uint64_t)&unk_1ED5E0910, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1D5EE93F4);
  sub_1D5E828A8((uint64_t)&v51, (uint64_t)&unk_1ED5DD090, (uint64_t)&qword_1ED5E1AC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1D5EE93F4);
  sub_1D5E828A8(v29, (uint64_t)&qword_1ED5DCD70, (uint64_t)MEMORY[0x1E0D545D0], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1D5E847C4);
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_1D687468C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MySportsURLHandler()
{
  return objc_opt_self();
}

uint64_t sub_1D68746E8(uint64_t a1)
{
  return sub_1D6873EE8(a1) & 1;
}

uint64_t sub_1D687470C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D6874730()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_1D5FAE038(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ExplicitContentRestrictionAlertPresenter()
{
  return objc_opt_self();
}

uint64_t sub_1D687477C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *v3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = *(_QWORD *)(v7 + 24);
  *(_QWORD *)(v7 + 24) = sub_1D5EC0B78;
  *(_QWORD *)(v7 + 32) = v8;
  swift_retain();
  sub_1D5FAE038(v9);
  *a3 = v7;
  return swift_retain();
}

uint64_t sub_1D68747F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *v3;
  v6 = *(_QWORD *)(v5 + 24);
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a2;
  sub_1D5FAE038(v6);
  *a3 = v5;
  swift_retain();
  return swift_retain();
}

void sub_1D6874844()
{
  sub_1D6E28010();
  __break(1u);
}

void sub_1D687489C()
{
  sub_1D6E28010();
  __break(1u);
}

void sub_1D68748F4()
{
  sub_1D6E28010();
  __break(1u);
}

void sub_1D687494C()
{
  sub_1D6E28010();
  __break(1u);
}

id sub_1D68749A4(uint64_t a1)
{
  return sub_1D68749C4(a1);
}

id sub_1D68749C4(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(v1 + 24);
  if (v3)
  {
    objc_opt_self();
    v4 = swift_dynamicCastObjCClass();
    swift_retain();
    v3(v4);
    sub_1D5FAE038((uint64_t)v3);
  }
  return objc_msgSend(*(id *)(v1 + 16), sel_presentExplicitContentRestrictionAlertWithPresentingViewController_, a1);
}

uint64_t sub_1D6874A48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D6874A6C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v84 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, &qword_1ED603D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v75 = (char *)&v68 - v5;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED623980, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v3);
  MEMORY[0x1E0C80A78](v6);
  v83 = (char *)&v68 - v7;
  v8 = type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs();
  MEMORY[0x1E0C80A78](v8);
  v81 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED623050, (uint64_t (*)(uint64_t))sub_1D5FAF25C, v3);
  MEMORY[0x1E0C80A78](v10);
  v80 = (char *)&v68 - v11;
  sub_1D5E84EF4(0, (unint64_t *)&unk_1EFFF3F38, (uint64_t (*)(uint64_t))type metadata accessor for AudioPlaylistFeedServiceConfig, (uint64_t (*)(void))sub_1D5FB6E70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5C7A0]);
  v78 = *(_QWORD *)(v12 - 8);
  v79 = v12;
  MEMORY[0x1E0C80A78](v12);
  v77 = (char *)&v68 - v13;
  v14 = sub_1D6E24F8C();
  v88 = *(_QWORD *)(v14 - 8);
  v89 = v14;
  MEMORY[0x1E0C80A78](v14);
  v87 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, &qword_1ED5F3850, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5AE10], v3);
  MEMORY[0x1E0C80A78](v16);
  v71 = (char *)&v68 - v17;
  v18 = sub_1D6E22E98();
  v85 = *(_QWORD *)(v18 - 8);
  v86 = v18;
  v19 = MEMORY[0x1E0C80A78](v18);
  v70 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v69 = (char *)&v68 - v21;
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F3CD0, (uint64_t (*)(uint64_t))sub_1D609FF00, v3);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v68 - v23;
  sub_1D5E847C4(0, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v3);
  MEMORY[0x1E0C80A78](v25);
  v82 = (char *)&v68 - v26;
  v27 = type metadata accessor for ArticleListAudioPlaylistFeedGroupConfigData();
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v68 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v68 - v31;
  v33 = sub_1D6E2444C();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v68 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = v37;
  MEMORY[0x1E0C80A78](v35);
  v90 = (uint64_t)&v68 - v38;
  v68 = a1;
  v39 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_formatService + 24);
  v73 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_formatService + 32);
  v74 = v39;
  v76 = __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_formatService), v39);
  sub_1D62E12DC();
  sub_1D6E21C08();
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v37, v32, v33);
  v40 = sub_1D6E212F0();
  v41 = (uint64_t)v82;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v82, 1, 1, v40);
  sub_1D609FF00(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v24, 1, 1, v42);
  sub_1D6E21C08();
  v43 = sub_1D6E24434();
  v44 = *(char **)(v34 + 8);
  ((void (*)(char *, uint64_t))v44)(v30, v33);
  sub_1D691BDD0((uint64_t)&unk_1E9AB05D8, v43);
  swift_arrayDestroy();
  v45 = (uint64_t)v24;
  v46 = v72;
  sub_1D6E24308();
  v47 = v70;
  swift_bridgeObjectRelease();
  v48 = v69;
  sub_1D5EC4E54(v45, (unint64_t *)&qword_1ED5F3CD0, (uint64_t (*)(uint64_t))sub_1D609FF00);
  v49 = v71;
  sub_1D5EC4E54(v41, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40]);
  v82 = (char *)v33;
  v72 = v44;
  ((void (*)(char *, uint64_t))v44)(v46, v33);
  v50 = (uint64_t)v48;
  sub_1D6E21BCC();
  v51 = (uint64_t)v47;
  sub_1D6E21BCC();
  v52 = sub_1D6E222BC();
  v53 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v49, 1, 1, v52);
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, v84, v79);
  v54 = v81;
  sub_1D5E82ECC(v68 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_knobs, v81, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs);
  sub_1D5FAF25C();
  v56 = v55;
  v57 = *(_QWORD *)(v55 - 8);
  v58 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v80, v54, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v56);
  v59 = sub_1D6E256AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v83, 1, 1, v59);
  sub_1D5E84EF4(0, &qword_1EFFF3F48, (uint64_t (*)(uint64_t))type metadata accessor for AudioPlaylistFeedServiceConfig, (uint64_t (*)(void))sub_1D5FB6E70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5F438]);
  swift_allocObject();
  sub_1D6E25898();
  v60 = sub_1D6E24D4C();
  (*(void (**)(void))(*(_QWORD *)(v60 - 8) + 56))();
  v61 = qword_1ED624170;
  (id)*MEMORY[0x1E0D58628];
  if (v61 != -1)
    swift_once();
  (id)qword_1ED6987D0;
  v62 = (uint64_t)v87;
  sub_1D6E24F68();
  v63 = v90;
  v64 = sub_1D6472894(v90, 0x73656C6369747261, 0xE800000000000000, v50, v51, MEMORY[0x1E0DEE9D8], v53, v62, v74, v73);
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v62, v89);
  sub_1D5EC4E54(v53, &qword_1ED5F3850, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5AE10]);
  v65 = v86;
  v66 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
  v66(v51, v86);
  v66(v50, v65);
  ((void (*)(uint64_t, char *))v72)(v63, v82);
  return v64;
}

uint64_t sub_1D68752A4()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  type metadata accessor for FormatGroupFeedGroupEmitterCursor();
  sub_1D6E22B38();
  sub_1D6E1AE1C();
  v0 = (void *)sub_1D6E1AB4C();
  sub_1D609FE00();
  sub_1D6E1AC18();
  swift_release();

  v1 = (void *)sub_1D6E1AB4C();
  sub_1D6E1AC18();
  swift_release();

  v2 = (void *)sub_1D6E1AB4C();
  v3 = sub_1D6E1AB34();
  swift_release();
  swift_release();

  return v3;
}

uint64_t sub_1D68753A4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];

  sub_1D6875E10(0);
  v5 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1D6E15EF0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ArticleListAudioPlaylistFeedGroup();
  MEMORY[0x1E0C80A78](v12);
  v14 = (_QWORD *)((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_1D6E28040();
    swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_3;
LABEL_5:
    *v7 = 0xD00000000000002BLL;
    v7[1] = 0x80000001D6F2B610;
    swift_storeEnumTagMultiPayload();
    sub_1D5E847C4(0, &qword_1EFFF3F30, (uint64_t (*)(uint64_t))sub_1D6875E10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1D6E1AC90();
  }
  if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_1D6E15EE4();
  v15 = sub_1D6E15ED8();
  v24[1] = v5;
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = a1 + OBJC_IVAR____TtC7NewsUI233FormatGroupFeedGroupEmitterCursor_formatGroup;
  v19 = (char *)v14 + *(int *)(v12 + 20);
  v20 = sub_1D6E2198C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, v18, v20);
  *v14 = v15;
  v14[1] = v17;
  *(uint64_t *)((char *)v14 + *(int *)(v12 + 24)) = a2;
  sub_1D5E82ECC((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListAudioPlaylistFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1D5E847C4(0, &qword_1EFFF3F30, (uint64_t (*)(uint64_t))sub_1D6875E10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v21 = sub_1D6E1AC90();
  sub_1D5E8D20C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListAudioPlaylistFeedGroup);
  return v21;
}

uint64_t sub_1D6875628(uint64_t a1)
{
  return sub_1D68753A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_1D6875654(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_1D6875E10(0);
  v10 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED624170 != -1)
    swift_once();
  sub_1D6E2735C();
  sub_1D5F2C60C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D6E32F90;
  v11 = 0;
  v12 = 0xE000000000000000;
  v13 = a1;
  sub_1D5E7809C(0, (unint64_t *)&qword_1ED5F4ED0);
  sub_1D6E27F98();
  v7 = v11;
  v6 = v12;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1D5F2C5C8();
  *(_QWORD *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 40) = v6;
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_1D6E27EA8();
  sub_1D6E26A98();
  v13 = a1;
  sub_1D6E27F98();
  v8 = v12;
  *v4 = v11;
  v4[1] = v8;
  swift_storeEnumTagMultiPayload();
  sub_1D5E847C4(0, &qword_1EFFF3F30, (uint64_t (*)(uint64_t))sub_1D6875E10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1D6E1AC90();
}

uint64_t sub_1D6875870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_config;
  sub_1D62E12DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D5E8D20C(v0 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_knobs, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_formatService);
  return swift_deallocClassInstance();
}

uint64_t sub_1D68758E8()
{
  return type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter();
}

uint64_t type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1EFFF3E60;
  if (!qword_1EFFF3E60)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D687592C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D62E12DC();
  if (v0 <= 0x3F)
  {
    sub_1D5FAF25C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1D68759BC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_config;
  sub_1D62E12DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D6875A04@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  v3 = *v1 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs();
  a1[4] = sub_1D5E6D8C0(&qword_1EFFF3F50, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs, (uint64_t)&unk_1D6E7B1D8);
  a1[5] = sub_1D5E6D8C0(&qword_1EFFF3F58, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs, (uint64_t)&unk_1D6E7B1B0);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D5E82ECC(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs);
}

uint64_t sub_1D6875A9C()
{
  void *v0;
  uint64_t v1;

  sub_1D6E2198C();
  sub_1D6E1AE1C();
  v0 = (void *)sub_1D6E1AB4C();
  sub_1D5F11814();
  v1 = sub_1D6E1AC18();
  swift_release();

  return v1;
}

uint64_t sub_1D6875B28()
{
  void *v0;
  void *v1;
  uint64_t v2;

  sub_1D65DDF24();
  sub_1D6E1AE1C();
  v0 = (void *)sub_1D6E1AB4C();
  sub_1D6875E10(0);
  sub_1D6E1AC18();
  swift_release();

  v1 = (void *)sub_1D6E1AB4C();
  v2 = sub_1D6E1ACC0();
  swift_release();

  return v2;
}

uint64_t sub_1D6875BE0()
{
  sub_1D62E12DC();
  return sub_1D6E21BB4();
}

uint64_t sub_1D6875C14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4E50, (uint64_t (*)(uint64_t))sub_1D5FADACC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D6E32F90;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1D62E12DC();
  v3 = sub_1D6E21BB4();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  sub_1D5F77E70(inited);
  sub_1D5E847C4(0, &qword_1EFFF3F60, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
  a1[3] = v5;
  a1[4] = sub_1D6875E4C();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D6E1A330();
}

uint64_t sub_1D6875D30()
{
  sub_1D5E6D8C0((unint64_t *)&unk_1EFFF3F10, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter, (uint64_t)&unk_1D6E98110);
  return sub_1D6E1A324();
}

uint64_t sub_1D6875D70()
{
  return sub_1D5E6D8C0(&qword_1EFFF3F00, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter, (uint64_t)&unk_1D6E980E8);
}

uint64_t sub_1D6875D9C()
{
  return sub_1D5E6D8C0(&qword_1EFFF3F08, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter, (uint64_t)&unk_1D6E98140);
}

uint64_t sub_1D6875DC8()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1EFFF3F10, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter, (uint64_t)&unk_1D6E98110);
}

uint64_t sub_1D6875DF8()
{
  return sub_1D68752A4();
}

void sub_1D6875E10(uint64_t a1)
{
  sub_1D5E84EF4(a1, (unint64_t *)&unk_1EFFF3F20, (uint64_t (*)(uint64_t))type metadata accessor for AudioPlaylistFeedGroup, (uint64_t (*)(void))sub_1D661EACC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B9F8]);
}

uint64_t sub_1D6875E34()
{
  uint64_t v0;

  return sub_1D6874A6C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1D6875E4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFFF3F68;
  if (!qword_1EFFF3F68)
  {
    sub_1D5E847C4(255, &qword_1EFFF3F60, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0DB3C80], v1);
    atomic_store(result, (unint64_t *)&qword_1EFFF3F68);
  }
  return result;
}

uint64_t sub_1D6875EAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6875EB8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 217)
  {
    v4 = *a1;
    if (v4 >= 0x27)
      return v4 - 38;
    else
      return 0;
  }
  else
  {
    v8 = sub_1D6E2444C();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1D6875F2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1D6875F38(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 217)
  {
    *result = a2 + 38;
  }
  else
  {
    v7 = sub_1D6E2444C();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SportsEventArticlesTagFeedGroupConfigData()
{
  uint64_t result;

  result = qword_1ED622368;
  if (!qword_1ED622368)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D6875FE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D6E2444C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D6876058@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  char v19;

  v16 = a2;
  v17 = sub_1D6E2444C();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6876434(0, &qword_1ED6246B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68763F0();
  sub_1D6E2846C();
  if (!v2)
  {
    v11 = v16;
    v19 = 1;
    sub_1D5EFD2A8(&qword_1ED5F3B28, MEMORY[0x1E0D5D920]);
    v12 = v17;
    sub_1D6E28184();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *v11 = 24;
    v13 = type metadata accessor for SportsEventArticlesTagFeedGroupConfigData();
    (*(void (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v11[*(int *)(v13 + 20)], v18, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D687620C(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1D6876434(0, &qword_1EFFF3F70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68763F0();
  sub_1D6E28478();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1D5FD2CA8();
  sub_1D6E28238();
  if (!v2)
  {
    type metadata accessor for SportsEventArticlesTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1D6E2444C();
    sub_1D5EFD2A8(&qword_1ED5F3B20, MEMORY[0x1E0D5D918]);
    sub_1D6E28238();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D6876378()
{
  sub_1D68763F0();
  return sub_1D6E28538();
}

uint64_t sub_1D68763A0()
{
  sub_1D68763F0();
  return sub_1D6E28544();
}

uint64_t sub_1D68763C8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1D6876058(a1, a2);
}

uint64_t sub_1D68763DC(_QWORD *a1)
{
  return sub_1D687620C(a1);
}

unint64_t sub_1D68763F0()
{
  unint64_t result;

  result = qword_1ED622338;
  if (!qword_1ED622338)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9836C, &type metadata for SportsEventArticlesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED622338);
  }
  return result;
}

void sub_1D6876434(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D68763F0();
    v7 = a3(a1, &type metadata for SportsEventArticlesTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsEventArticlesTagFeedGroupConfigData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D68764DC + 4 * byte_1D6E98205[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D6876510 + 4 * byte_1D6E98200[v4]))();
}

uint64_t sub_1D6876510(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6876518(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D6876520);
  return result;
}

uint64_t sub_1D687652C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D6876534);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D6876538(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6876540(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsEventArticlesTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SportsEventArticlesTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1D6876560()
{
  unint64_t result;

  result = qword_1EFFF3F78;
  if (!qword_1EFFF3F78)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E98344, &type metadata for SportsEventArticlesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3F78);
  }
  return result;
}

unint64_t sub_1D68765A8()
{
  unint64_t result;

  result = qword_1ED622348;
  if (!qword_1ED622348)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E982B4, &type metadata for SportsEventArticlesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED622348);
  }
  return result;
}

unint64_t sub_1D68765F0()
{
  unint64_t result;

  result = qword_1ED622340;
  if (!qword_1ED622340)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E982DC, &type metadata for SportsEventArticlesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED622340);
  }
  return result;
}

uint64_t sub_1D6876634()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6876640(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 217)
  {
    v4 = *a1;
    if (v4 >= 0x27)
      return v4 - 38;
    else
      return 0;
  }
  else
  {
    v8 = sub_1D6E2444C();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1D68766B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1D68766C0(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 217)
  {
    *result = a2 + 38;
  }
  else
  {
    v7 = sub_1D6E2444C();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SportsBracketTagFeedGroupConfigData()
{
  uint64_t result;

  result = qword_1ED61F4A0;
  if (!qword_1ED61F4A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D687676C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D6E2444C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D68767E0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  char v19;

  v16 = a2;
  v17 = sub_1D6E2444C();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6876BBC(0, &qword_1ED60B570, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6876B78();
  sub_1D6E2846C();
  if (!v2)
  {
    v11 = v16;
    v19 = 1;
    sub_1D5EFD2A8(&qword_1ED5F3B28, MEMORY[0x1E0D5D920]);
    v12 = v17;
    sub_1D6E28184();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *v11 = 19;
    v13 = type metadata accessor for SportsBracketTagFeedGroupConfigData();
    (*(void (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v11[*(int *)(v13 + 20)], v18, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D6876994(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1D6876BBC(0, &qword_1EFFF3F80, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6876B78();
  sub_1D6E28478();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1D5FD2CA8();
  sub_1D6E28238();
  if (!v2)
  {
    type metadata accessor for SportsBracketTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1D6E2444C();
    sub_1D5EFD2A8(&qword_1ED5F3B20, MEMORY[0x1E0D5D918]);
    sub_1D6E28238();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D6876B00()
{
  sub_1D6876B78();
  return sub_1D6E28538();
}

uint64_t sub_1D6876B28()
{
  sub_1D6876B78();
  return sub_1D6E28544();
}

uint64_t sub_1D6876B50@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1D68767E0(a1, a2);
}

uint64_t sub_1D6876B64(_QWORD *a1)
{
  return sub_1D6876994(a1);
}

unint64_t sub_1D6876B78()
{
  unint64_t result;

  result = qword_1ED60AD88;
  if (!qword_1ED60AD88)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E98524, &type metadata for SportsBracketTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED60AD88);
  }
  return result;
}

void sub_1D6876BBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D6876B78();
    v7 = a3(a1, &type metadata for SportsBracketTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsBracketTagFeedGroupConfigData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D6876C64 + 4 * byte_1D6E983C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D6876C98 + 4 * byte_1D6E983C0[v4]))();
}

uint64_t sub_1D6876C98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6876CA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D6876CA8);
  return result;
}

uint64_t sub_1D6876CB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D6876CBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D6876CC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6876CC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsBracketTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SportsBracketTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1D6876CE8()
{
  unint64_t result;

  result = qword_1EFFF3F88;
  if (!qword_1EFFF3F88)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E984FC, &type metadata for SportsBracketTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF3F88);
  }
  return result;
}

unint64_t sub_1D6876D30()
{
  unint64_t result;

  result = qword_1ED60AD98;
  if (!qword_1ED60AD98)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9846C, &type metadata for SportsBracketTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED60AD98);
  }
  return result;
}

unint64_t sub_1D6876D78()
{
  unint64_t result;

  result = qword_1ED60AD90;
  if (!qword_1ED60AD90)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E98494, &type metadata for SportsBracketTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED60AD90);
  }
  return result;
}

uint64_t sub_1D6876DBC()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1F00AC228 = result;
  return result;
}

uint64_t sub_1D6876E80()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED698148 = result;
  return result;
}

uint64_t sub_1D6876F54()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED6987C8 = result;
  return result;
}

uint64_t sub_1D6877028()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED6987D0 = result;
  return result;
}

uint64_t sub_1D68770FC()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED698FA8 = result;
  return result;
}

uint64_t sub_1D68771C8()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED6988C0 = result;
  return result;
}

uint64_t sub_1D68772A0()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED698408 = result;
  return result;
}

uint64_t sub_1D6877370()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1F00AC230 = result;
  return result;
}

uint64_t sub_1D6877444()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1F00AC238 = result;
  return result;
}

uint64_t sub_1D6877518()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED698390 = result;
  return result;
}

uint64_t sub_1D68775E8()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED698420 = result;
  return result;
}

id sub_1D68776B8()
{
  qword_1ED698150 = *MEMORY[0x1E0D585D8];
  return (id)qword_1ED698150;
}

uint64_t sub_1D68776D0()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED6988B8 = result;
  return result;
}

uint64_t sub_1D68777A4()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED6987D8 = result;
  return result;
}

uint64_t sub_1D6877878()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1F00AC240 = result;
  return result;
}

uint64_t sub_1D6877948()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1F00AC248 = result;
  return result;
}

uint64_t sub_1D6877A20()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1F00AC250 = result;
  return result;
}

uint64_t sub_1D6877AF8()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED698F48 = result;
  return result;
}

uint64_t sub_1D6877BCC()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1F00AC258 = result;
  return result;
}

uint64_t sub_1D6877CA4()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED698F30 = result;
  return result;
}

uint64_t sub_1D6877D7C()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1F00AC260 = result;
  return result;
}

uint64_t sub_1D6877E50()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED698F40 = result;
  return result;
}

uint64_t sub_1D6877F24()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1F00AC268 = result;
  return result;
}

uint64_t sub_1D6877FF8()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1D6E26978();

  }
  sub_1D5EEBE18();
  result = sub_1D6E27BF0();
  qword_1ED698F38 = result;
  return result;
}

uint64_t sub_1D68780CC()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC270);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC270);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D68781B4()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC288);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC288);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D68782A0()
{
  uint64_t v0;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1ED698FC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED698FC0);
  return sub_1D6E1C658();
}

uint64_t sub_1D6878320()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC2A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC2A0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6878410()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1ED698688);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED698688);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6878500()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC2B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC2B8);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D68785F0()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1ED6986B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6986B8);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D68786CC()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1ED698F50);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED698F50);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D68787B4()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC2D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC2D0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D687889C(uint64_t a1)
{
  return sub_1D68788E4(a1, qword_1ED698440);
}

uint64_t sub_1D68788C0(uint64_t a1)
{
  return sub_1D68788E4(a1, qword_1F00AC2E8);
}

uint64_t sub_1D68788E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  id v4;
  id v5;

  v3 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D68789D0()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1ED698550);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED698550);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6878AB8()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1ED698F68);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED698F68);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6878BA8()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC300);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC300);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6878C98()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1ED6986D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6986D0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6878D74()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1ED698718);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED698718);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6878E5C()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1ED6986A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6986A0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6878F48()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC318);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC318);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6879030()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC330);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC330);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6879114()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1ED698700);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED698700);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D68791F4()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC348);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC348);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D68792DC()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1ED698F80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED698F80);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D68793C8()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC360);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC360);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D68794B0()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC378);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC378);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6879594()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC390);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC390);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6879680()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC3A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC3A8);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t sub_1D6879770()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1D6E1C664();
  __swift_allocate_value_buffer(v0, qword_1F00AC3C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F00AC3C0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1D6E26978();

  }
  return sub_1D6E1C658();
}

uint64_t getEnumTagSinglePayload for TagFeedSectionDescriptor(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x58 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 88);
  v3 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 1) & 0xFFFFFFBF | ((*(_QWORD *)a1 & 1) << 6)) ^ 0x7F;
  if (v3 >= 0x57)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TagFeedSectionDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x57)
  {
    *(_QWORD *)result = a2 - 88;
    if (a3 >= 0x58)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x58)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 6) & 1 | (2 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagFeedSectionDescriptor()
{
  return &type metadata for TagFeedSectionDescriptor;
}

void sub_1D6879914(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D649F2F0();
  MEMORY[0x1E0C80A78](v2);
  sub_1D6076D20();
  MEMORY[0x1E0C80A78](v3);
  sub_1D6073CF0();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1D6879A08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for TagFeedGroup();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(*(_QWORD *)(v0 - 96), 1, 1, v1);
}

void sub_1D687A6D0(uint64_t a1)
{
  uint64_t v2;

  sub_1D649F2F0();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1D687A74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x1E0D56990];
  v2 = sub_1D6E19A90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

void sub_1D687A9C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[5];
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;

  v2 = type metadata accessor for SponsoredBannerTagFeedGroup();
  MEMORY[0x1E0C80A78](v2);
  v120 = (char *)v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AffinityTagFeedGroup();
  MEMORY[0x1E0C80A78](v4);
  v95 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PuzzleScoreboardTagFeedGroup();
  MEMORY[0x1E0C80A78](v6);
  v94 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PuzzleFullArchiveTagFeedGroup();
  MEMORY[0x1E0C80A78](v8);
  v119 = (char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PuzzleFeaturedTagFeedGroup();
  MEMORY[0x1E0C80A78](v10);
  v118 = (char *)v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
  MEMORY[0x1E0C80A78](v12);
  v117 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PuzzleArchiveTagFeedGroup();
  MEMORY[0x1E0C80A78](v14);
  v116 = (char *)v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PuzzleListTagFeedGroup();
  MEMORY[0x1E0C80A78](v16);
  v115 = (char *)v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SportsEventTopicTagFeedGroup();
  MEMORY[0x1E0C80A78](v18);
  v93 = (char *)v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for SportsMastheadTagFeedGroup();
  MEMORY[0x1E0C80A78](v20);
  v92 = (char *)v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for SportsOnboardingTagFeedGroup();
  MEMORY[0x1E0C80A78](v22);
  v91 = (char *)v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DateRangeTagFeedGroup();
  MEMORY[0x1E0C80A78](v24);
  v90 = (char *)v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for RecentStoriesTagFeedGroup();
  MEMORY[0x1E0C80A78](v26);
  v89 = (char *)v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for ForYouTagFeedGroup();
  MEMORY[0x1E0C80A78](v28);
  v114 = (char *)v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for HighlightsTagFeedGroup();
  MEMORY[0x1E0C80A78](v30);
  v88 = (char *)v76 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for SportsEventArticlesTagFeedGroup();
  MEMORY[0x1E0C80A78](v32);
  v113 = (char *)v76 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
  MEMORY[0x1E0C80A78](v34);
  v112 = (char *)v76 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
  MEMORY[0x1E0C80A78](v36);
  v87 = (char *)v76 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for SportsLinksTagFeedGroup();
  MEMORY[0x1E0C80A78](v38);
  v86 = (char *)v76 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for SportsEventInfoTagFeedGroup();
  MEMORY[0x1E0C80A78](v40);
  v85 = (char *)v76 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for SportsBoxScoresTagFeedGroup();
  MEMORY[0x1E0C80A78](v42);
  v84 = (char *)v76 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for SportsBracketTagFeedGroup();
  MEMORY[0x1E0C80A78](v44);
  v83 = (char *)v76 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for SportsStandingsTagFeedGroup();
  MEMORY[0x1E0C80A78](v46);
  v82 = (char *)v76 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1E0C80A78](v80);
  v81 = (char *)v76 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for SportsScoresTagFeedGroup();
  MEMORY[0x1E0C80A78](v110);
  v111 = (char *)v76 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for SportsFavoritesTagFeedGroup();
  MEMORY[0x1E0C80A78](v50);
  v109 = (char *)v76 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for SportsTopStoriesTagFeedGroup();
  MEMORY[0x1E0C80A78](v107);
  v108 = (char *)v76 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for SportsScheduleTagFeedGroup();
  MEMORY[0x1E0C80A78](v53);
  v79 = (char *)v76 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for SportsNavigationTagFeedGroup();
  MEMORY[0x1E0C80A78](v105);
  v106 = (char *)v76 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for SportsRecordTagFeedGroup();
  MEMORY[0x1E0C80A78](v56);
  v104 = (char *)v76 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for CuratedTagFeedGroup();
  MEMORY[0x1E0C80A78](v58);
  v78 = (char *)v76 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D649F2F0();
  v102 = *(_QWORD *)(v60 - 8);
  v103 = v60;
  MEMORY[0x1E0C80A78](v60);
  v101 = (char *)v76 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_1D6E217C4();
  v76[4] = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v76[3] = (char *)v76 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6076D20();
  v100 = v63;
  v99 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v98 = (char *)v76 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for WeatherTagFeedGroup();
  MEMORY[0x1E0C80A78](v96);
  v97 = (char *)v76 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
  MEMORY[0x1E0C80A78](v66);
  v76[2] = (char *)v76 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for ChannelSectionTagFeedGroup();
  MEMORY[0x1E0C80A78](v68);
  v76[1] = (char *)v76 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6073CF0();
  MEMORY[0x1E0C80A78](v70);
  v71 = type metadata accessor for PromotedArticleListTagFeedGroup();
  MEMORY[0x1E0C80A78](v71);
  v72 = type metadata accessor for ArticleListTagFeedGroup();
  MEMORY[0x1E0C80A78](v72);
  v73 = type metadata accessor for TagFeedBlueprintCollapsedSection(0);
  MEMORY[0x1E0C80A78](v73);
  type metadata accessor for TagFeedSectionGapDescriptor(0);
  v74 = MEMORY[0x1E0C80A78](a1);
  v75 = MEMORY[0x1E0C80A78](v74);
  __asm { BR              X10 }
}

uint64_t sub_1D687B3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = swift_projectBox();
  sub_1D5E82ECC(v6, v0, type metadata accessor for TagFeedSectionGapDescriptor);
  sub_1D5E82ECC(v0, v1, type metadata accessor for TagFeedSectionGapDescriptor);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    v7 = 7364967;
  }
  else
  {
    sub_1D5F0D758(v1, v2, type metadata accessor for TagFeedBlueprintCollapsedSection);
    sub_1D5FE7B54();
    *(_QWORD *)(v5 - 104) = sub_1D6E1D480();
    *(_QWORD *)(v5 - 96) = v9;
    sub_1D6E26A98();
    swift_bridgeObjectRetain();
    sub_1D6E26A98();
    swift_bridgeObjectRelease();
    v7 = *(_QWORD *)(v5 - 104);
    sub_1D5E8D20C(v2, type metadata accessor for TagFeedBlueprintCollapsedSection);
  }
  sub_1D5E8D20C(v0, type metadata accessor for TagFeedSectionGapDescriptor);
  return v7;
}

void sub_1D687BAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
  MEMORY[0x1E0C80A78](v3);
  sub_1D6076D20();
  MEMORY[0x1E0C80A78](v4);
  sub_1D6073CF0();
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X10 }
}

uint64_t sub_1D687BBE8()
{
  uint64_t v0;

  swift_retain();
  return v0;
}

void sub_1D687BC18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = swift_projectBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v0);
  swift_allocBox();
  sub_1D6E21D10();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  JUMPOUT(0x1D687BBF4);
}

void sub_1D687BC70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = swift_projectBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v0);
  swift_allocBox();
  sub_1D6E21D10();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  JUMPOUT(0x1D687BBF4);
}

void sub_1D687BCD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = swift_projectBox();
  sub_1D5E82ECC(v1, v0, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
  sub_1D6E21968();
  swift_allocBox();
  sub_1D5F0D758(v0, v2, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
  JUMPOUT(0x1D687BBF4);
}

void sub_1D687BD24()
{
  uint64_t *v0;

  sub_1D687A9C4(*v0);
}

void sub_1D687BD2C(uint64_t *a1, uint64_t *a2)
{
  sub_1D687FB04(*a1, *a2);
}

void sub_1D687BD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v66[7];
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;

  v0 = type metadata accessor for AffinityTagFeedGroup();
  MEMORY[0x1E0C80A78](v0);
  v100 = (char *)v66 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for PuzzleScoreboardTagFeedGroup();
  MEMORY[0x1E0C80A78](v2);
  v99 = (char *)v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PuzzleFullArchiveTagFeedGroup();
  MEMORY[0x1E0C80A78](v4);
  v98 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PuzzleFeaturedTagFeedGroup();
  MEMORY[0x1E0C80A78](v6);
  v97 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
  MEMORY[0x1E0C80A78](v8);
  v96 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PuzzleArchiveTagFeedGroup();
  MEMORY[0x1E0C80A78](v10);
  v95 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PuzzleListTagFeedGroup();
  MEMORY[0x1E0C80A78](v12);
  v94 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SportsEventTopicTagFeedGroup();
  MEMORY[0x1E0C80A78](v14);
  v93 = (char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SportsMastheadTagFeedGroup();
  MEMORY[0x1E0C80A78](v16);
  v92 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SportsOnboardingTagFeedGroup();
  MEMORY[0x1E0C80A78](v18);
  v91 = (char *)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for DateRangeTagFeedGroup();
  MEMORY[0x1E0C80A78](v89);
  v90 = (char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for RecentStoriesTagFeedGroup();
  MEMORY[0x1E0C80A78](v21);
  v88 = (char *)v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for ForYouTagFeedGroup();
  MEMORY[0x1E0C80A78](v86);
  v87 = (char *)v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for HighlightsTagFeedGroup();
  MEMORY[0x1E0C80A78](v24);
  v85 = (char *)v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for SportsEventArticlesTagFeedGroup();
  MEMORY[0x1E0C80A78](v26);
  v84 = (char *)v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
  MEMORY[0x1E0C80A78](v28);
  v83 = (char *)v66 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
  MEMORY[0x1E0C80A78](v30);
  v82 = (char *)v66 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for SportsEventInfoTagFeedGroup();
  MEMORY[0x1E0C80A78](v32);
  v81 = (char *)v66 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for SportsBoxScoresTagFeedGroup();
  MEMORY[0x1E0C80A78](v34);
  v80 = (char *)v66 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for SportsBracketTagFeedGroup();
  MEMORY[0x1E0C80A78](v36);
  v79 = (char *)v66 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for SportsStandingsTagFeedGroup();
  MEMORY[0x1E0C80A78](v38);
  v78 = (char *)v66 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1E0C80A78](v76);
  v77 = (char *)v66 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for SportsLinksTagFeedGroup();
  MEMORY[0x1E0C80A78](v41);
  v75 = (char *)v66 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for SportsScoresTagFeedGroup();
  MEMORY[0x1E0C80A78](v73);
  v74 = (char *)v66 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for SportsFavoritesTagFeedGroup();
  MEMORY[0x1E0C80A78](v44);
  v72 = (char *)v66 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for SportsTopStoriesTagFeedGroup();
  MEMORY[0x1E0C80A78](v70);
  v71 = (char *)v66 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for SportsScheduleTagFeedGroup();
  MEMORY[0x1E0C80A78](v47);
  v69 = (char *)v66 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for SportsNavigationTagFeedGroup();
  MEMORY[0x1E0C80A78](v67);
  v68 = (char *)v66 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for SportsRecordTagFeedGroup();
  MEMORY[0x1E0C80A78](v50);
  v66[6] = (char *)v66 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for CuratedTagFeedGroup();
  MEMORY[0x1E0C80A78](v52);
  v66[5] = (char *)v66 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D649F2F0();
  v66[4] = v54;
  v66[3] = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v66[2] = (char *)v66 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for WeatherTagFeedGroup();
  MEMORY[0x1E0C80A78](v56);
  v66[1] = (char *)v66 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
  MEMORY[0x1E0C80A78](v58);
  v59 = type metadata accessor for ChannelSectionTagFeedGroup();
  MEMORY[0x1E0C80A78](v59);
  v60 = type metadata accessor for IssueListTagFeedGroup();
  MEMORY[0x1E0C80A78](v60);
  sub_1D6073CF0();
  MEMORY[0x1E0C80A78](v61);
  v62 = type metadata accessor for PromotedArticleListTagFeedGroup();
  MEMORY[0x1E0C80A78](v62);
  v103 = sub_1D6E24428();
  v101 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v102 = (char *)v66 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for ArticleListTagFeedGroup();
  MEMORY[0x1E0C80A78](v64);
  __asm { BR              X10 }
}

uint64_t sub_1D687C688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_projectBox();
  sub_1D5E82ECC(v2, v0, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroup);
  v3 = *(_QWORD *)(v1 - 112);
  sub_1D6E21944();
  v4 = sub_1D6E243A4();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v3, *(_QWORD *)(v1 - 104));
  sub_1D5E8D20C(v0, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroup);
  return v4;
}

void sub_1D687CD4C(uint64_t a1)
{
  uint64_t v2;

  sub_1D649F2F0();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1D687CDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x1E0D52A20];
  v2 = sub_1D6E21218();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

uint64_t sub_1D687D028()
{
  _QWORD *v0;
  uint64_t (*v2)(uint64_t);

  if (((1 << ((*v0 >> 58) & 0x3C | (*v0 >> 1) & 3)) & 0x1FEC1E32999) != 0)
    return sub_1D6E226DC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B408];
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED624A10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1D6E22700();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D6E334D0;
  sub_1D6E226E8();
  sub_1D6E226F4();
  sub_1D5E6D8C0(&qword_1ED6230F0, v2, MEMORY[0x1E0D5B410]);
  sub_1D5E847C4(0, &qword_1ED623D90, v2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D5EC97D4();
  return sub_1D6E27D88();
}

void sub_1D687D180()
{
  uint64_t *v0;

  sub_1D687CD4C(*v0);
}

void sub_1D687D188()
{
  sub_1D687BD38();
}

uint64_t sub_1D687D198@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unsigned int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((1 << ((*v1 >> 58) & 0x3C | (*v1 >> 1) & 3)) & 0x1FFC7FBFFDDLL) != 0)
  {
    v6 = (unsigned int *)MEMORY[0x1E0D5C6A0];
LABEL_3:
    v7 = *v6;
    v8 = sub_1D6E23528();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a1, v7, v8);
  }
  if (((1 << ((*v1 >> 58) & 0x3C | (*v1 >> 1) & 3)) & 0x38000022) != 0)
  {
    v6 = (unsigned int *)MEMORY[0x1E0D5C6B0];
    goto LABEL_3;
  }
  v10 = swift_projectBox();
  sub_1D5E82ECC(v10, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MySportsTopicTagFeedGroup);
  v11 = &v5[*(int *)(v3 + 24)];
  v12 = sub_1D6E23528();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, v11, v12);
  return sub_1D5E8D20C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MySportsTopicTagFeedGroup);
}

uint64_t sub_1D687D2D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  v6 = sub_1D6E2261C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  sub_1D649F2F0();
  v11 = swift_allocBox();
  v13[1] = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_1D6313964();
  swift_retain();
  result = sub_1D6E22178();
  *a3 = v11 | 0x2000000000000002;
  return result;
}

uint64_t sub_1D687D3D0@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[2];

  sub_1D649F2F0();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  if (((v9 >> 58) & 0x3C | (v9 >> 1) & 3) == 9)
  {
    v10 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
    sub_1D6E22184();
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v12[1];
  }
  else
  {
    result = swift_retain();
  }
  *a2 = v9;
  return result;
}

uint64_t sub_1D687D4A4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  sub_1D649F2F0();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*v1 >> 58) & 0x3C | (*v1 >> 1) & 3) == 9)
  {
    v8 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
    sub_1D6882EA0();
    v10 = v9;
    sub_1D6E22184();
    sub_1D6E22190();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
  else
  {
    sub_1D6882EA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
}

uint64_t sub_1D687D5E4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v14[2];

  sub_1D649F2F0();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((1 << ((a1 >> 58) & 0x3C | (a1 >> 1) & 3)) & 0x1FEFDFBFDDFLL) != 0)
  {
    v9 = (unsigned int *)MEMORY[0x1E0D5A808];
LABEL_3:
    v10 = *v9;
    v11 = sub_1D6E21CA4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a2, v10, v11);
  }
  if (((1 << ((a1 >> 58) & 0x3C | (a1 >> 1) & 3)) & 0x102040020) != 0)
  {
    v9 = (unsigned int *)MEMORY[0x1E0D5A800];
    goto LABEL_3;
  }
  v13 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
  sub_1D6E22184();
  sub_1D687D5E4(v14[1]);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D687D73C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D649F2F0();
  MEMORY[0x1E0C80A78](v4);
  v5 = (a1 >> 58) & 0x3C | (a1 >> 1) & 3;
  if ((v5 - 10) >= 0x1F)
    __asm { BR              X10 }
  v6 = *MEMORY[0x1E0D5D290];
  v7 = sub_1D6E23ED0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a2, v6, v7);
}

void sub_1D687D804()
{
  JUMPOUT(0x1D687D7B4);
}

void sub_1D687D810()
{
  JUMPOUT(0x1D687D7B4);
}

void sub_1D687D81C()
{
  JUMPOUT(0x1D687D7B4);
}

uint64_t sub_1D687D828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = swift_projectBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v2);
  sub_1D6E22184();
  sub_1D687D73C(*(_QWORD *)(v4 - 56), v0);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
}

void sub_1D687D898(uint64_t a1)
{
  uint64_t v2;

  sub_1D649F2F0();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

void sub_1D687D914()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
}

uint64_t sub_1D687E318@<X0>(uint64_t a1@<X8>)
{
  unint64_t *v1;

  return sub_1D687D5E4(*v1, a1);
}

uint64_t sub_1D687E320@<X0>(uint64_t a1@<X8>)
{
  unint64_t *v1;

  return sub_1D687D73C(*v1, a1);
}

void sub_1D687E328()
{
  uint64_t *v0;

  sub_1D687D898(*v0);
}

BOOL sub_1D687E330()
{
  _QWORD *v0;

  return ((*v0 >> 58) & 0x3C | (*v0 >> 1) & 3) != 0;
}

void sub_1D687E34C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;

  v88 = a1;
  v1 = type metadata accessor for AffinityTagFeedGroup();
  MEMORY[0x1E0C80A78](v1);
  v81 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SportsEventTopicTagFeedGroup();
  MEMORY[0x1E0C80A78](v3);
  v80 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SportsMastheadTagFeedGroup();
  MEMORY[0x1E0C80A78](v5);
  v79 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SportsOnboardingTagFeedGroup();
  MEMORY[0x1E0C80A78](v7);
  v78 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for DateRangeTagFeedGroup();
  MEMORY[0x1E0C80A78](v76);
  v77 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RecentStoriesTagFeedGroup();
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for ForYouTagFeedGroup();
  MEMORY[0x1E0C80A78](v73);
  v74 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for HighlightsTagFeedGroup();
  MEMORY[0x1E0C80A78](v13);
  v72 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SportsEventArticlesTagFeedGroup();
  MEMORY[0x1E0C80A78](v15);
  v71 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
  MEMORY[0x1E0C80A78](v17);
  v70 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
  MEMORY[0x1E0C80A78](v19);
  v69 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SportsEventInfoTagFeedGroup();
  MEMORY[0x1E0C80A78](v21);
  v68 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SportsBoxScoresTagFeedGroup();
  MEMORY[0x1E0C80A78](v23);
  v67 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for SportsBracketTagFeedGroup();
  MEMORY[0x1E0C80A78](v25);
  v66 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for SportsStandingsTagFeedGroup();
  MEMORY[0x1E0C80A78](v27);
  v65 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1E0C80A78](v63);
  v64 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for SportsLinksTagFeedGroup();
  MEMORY[0x1E0C80A78](v30);
  v62 = (char *)&v53 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for SportsScoresTagFeedGroup();
  MEMORY[0x1E0C80A78](v60);
  v61 = (char *)&v53 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for SportsFavoritesTagFeedGroup();
  MEMORY[0x1E0C80A78](v33);
  v59 = (char *)&v53 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for SportsTopStoriesTagFeedGroup();
  MEMORY[0x1E0C80A78](v57);
  v58 = (char *)&v53 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for SportsScheduleTagFeedGroup();
  MEMORY[0x1E0C80A78](v36);
  v56 = (char *)&v53 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for SportsNavigationTagFeedGroup();
  MEMORY[0x1E0C80A78](v54);
  v55 = (char *)&v53 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for SportsRecordTagFeedGroup();
  MEMORY[0x1E0C80A78](v39);
  v53 = (char *)&v53 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for CuratedTagFeedGroup();
  MEMORY[0x1E0C80A78](v41);
  sub_1D649F2F0();
  MEMORY[0x1E0C80A78](v42);
  v43 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
  MEMORY[0x1E0C80A78](v43);
  v44 = type metadata accessor for ChannelSectionTagFeedGroup();
  MEMORY[0x1E0C80A78](v44);
  v45 = type metadata accessor for WeatherTagFeedGroup();
  MEMORY[0x1E0C80A78](v45);
  v46 = type metadata accessor for PromotedArticleListTagFeedGroup();
  MEMORY[0x1E0C80A78](v46);
  v47 = sub_1D6E1736C();
  v84 = *(_QWORD *)(v47 - 8);
  v85 = v47;
  MEMORY[0x1E0C80A78](v47);
  v87 = (char *)&v53 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1D6E2198C();
  v82 = *(_QWORD *)(v49 - 8);
  v83 = v49;
  MEMORY[0x1E0C80A78](v49);
  v86 = (char *)&v53 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for ArticleListTagFeedGroup();
  MEMORY[0x1E0C80A78](v51);
  __asm { BR              X10 }
}

uint64_t sub_1D687EAE8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D6E1775C();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(*(_QWORD *)(v0 - 104), 1, 1, v1);
}

uint64_t sub_1D687EB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_projectBox();
  sub_1D5E82ECC(v2, v0, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroup);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 16))(*(_QWORD *)(v1 - 120), v0, *(_QWORD *)(v1 - 144));
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 - 136) + 104))(*(_QWORD *)(v1 - 112), *MEMORY[0x1E0D57408], *(_QWORD *)(v1 - 128));
  v3 = *(_QWORD *)(v1 - 104);
  sub_1D6E17750();
  sub_1D5E8D20C(v0, (uint64_t (*)(_QWORD))type metadata accessor for ArticleListTagFeedGroup);
  v4 = sub_1D6E1775C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void sub_1D687F14C()
{
  swift_projectBox();
  JUMPOUT(0x1D687EFA4);
}

void sub_1D687F168()
{
  swift_projectBox();
  JUMPOUT(0x1D687EFA4);
}

void sub_1D687F184()
{
  swift_projectBox();
  JUMPOUT(0x1D687EFA4);
}

void sub_1D687F1A0()
{
  swift_projectBox();
  JUMPOUT(0x1D687EFA4);
}

void sub_1D687F1BC(uint64_t a1@<X8>)
{
  sub_1D687E34C(a1);
}

void sub_1D687F1C4(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_1D687F1FC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
}

void sub_1D687FAFC()
{
  uint64_t *v0;

  sub_1D687F1C4(*v0);
}

void sub_1D687FB04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD v153[2];
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  uint64_t v237;

  v237 = a2;
  v3 = type metadata accessor for SponsoredBannerTagFeedGroup();
  v4 = MEMORY[0x1E0C80A78](v3);
  v236 = (char *)v153 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v235 = (char *)v153 - v6;
  v7 = type metadata accessor for AffinityTagFeedGroup();
  v8 = MEMORY[0x1E0C80A78](v7);
  v234 = (char *)v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v233 = (char *)v153 - v10;
  v11 = type metadata accessor for PuzzleScoreboardTagFeedGroup();
  v12 = MEMORY[0x1E0C80A78](v11);
  v232 = (char *)v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v231 = (char *)v153 - v14;
  v15 = type metadata accessor for PuzzleFullArchiveTagFeedGroup();
  v16 = MEMORY[0x1E0C80A78](v15);
  v230 = (char *)v153 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v229 = (char *)v153 - v18;
  v19 = type metadata accessor for PuzzleFeaturedTagFeedGroup();
  v20 = MEMORY[0x1E0C80A78](v19);
  v228 = (char *)v153 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v227 = (char *)v153 - v22;
  v23 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
  v24 = MEMORY[0x1E0C80A78](v23);
  v226 = (char *)v153 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v225 = (char *)v153 - v26;
  v27 = type metadata accessor for PuzzleArchiveTagFeedGroup();
  v28 = MEMORY[0x1E0C80A78](v27);
  v224 = (char *)v153 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v223 = (char *)v153 - v30;
  v31 = type metadata accessor for PuzzleListTagFeedGroup();
  v32 = MEMORY[0x1E0C80A78](v31);
  v222 = (char *)v153 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v221 = (char *)v153 - v34;
  v35 = type metadata accessor for SportsEventTopicTagFeedGroup();
  v36 = MEMORY[0x1E0C80A78](v35);
  v220 = (char *)v153 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v219 = (char *)v153 - v38;
  v39 = type metadata accessor for SportsMastheadTagFeedGroup();
  v40 = MEMORY[0x1E0C80A78](v39);
  v218 = (char *)v153 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v40);
  v217 = (char *)v153 - v42;
  v43 = type metadata accessor for SportsOnboardingTagFeedGroup();
  v44 = MEMORY[0x1E0C80A78](v43);
  v216 = (char *)v153 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v44);
  v215 = (char *)v153 - v46;
  v47 = type metadata accessor for DateRangeTagFeedGroup();
  v48 = MEMORY[0x1E0C80A78](v47);
  v214 = (char *)v153 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v48);
  v213 = (char *)v153 - v50;
  v51 = type metadata accessor for RecentStoriesTagFeedGroup();
  v52 = MEMORY[0x1E0C80A78](v51);
  v212 = (char *)v153 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v52);
  v211 = (char *)v153 - v54;
  v55 = type metadata accessor for ForYouTagFeedGroup();
  v56 = MEMORY[0x1E0C80A78](v55);
  v210 = (char *)v153 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v56);
  v209 = (char *)v153 - v58;
  v59 = type metadata accessor for HighlightsTagFeedGroup();
  v60 = MEMORY[0x1E0C80A78](v59);
  v208 = (char *)v153 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v60);
  v207 = (char *)v153 - v62;
  v63 = type metadata accessor for SportsEventArticlesTagFeedGroup();
  MEMORY[0x1E0C80A78](v63);
  v206 = (char *)v153 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
  v66 = MEMORY[0x1E0C80A78](v65);
  v205 = (char *)v153 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = MEMORY[0x1E0C80A78](v66);
  v204 = (char *)v153 - v69;
  MEMORY[0x1E0C80A78](v68);
  v203 = (char *)v153 - v70;
  v71 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
  v72 = MEMORY[0x1E0C80A78](v71);
  v202 = (char *)v153 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v72);
  v201 = (char *)v153 - v74;
  v75 = type metadata accessor for SportsEventInfoTagFeedGroup();
  v76 = MEMORY[0x1E0C80A78](v75);
  v200 = (char *)v153 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v76);
  v199 = (char *)v153 - v78;
  v79 = type metadata accessor for SportsBoxScoresTagFeedGroup();
  v80 = MEMORY[0x1E0C80A78](v79);
  v198 = (char *)v153 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v80);
  v197 = (char *)v153 - v82;
  v83 = type metadata accessor for SportsBracketTagFeedGroup();
  v84 = MEMORY[0x1E0C80A78](v83);
  v196 = (char *)v153 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v84);
  v195 = (char *)v153 - v86;
  v87 = type metadata accessor for SportsStandingsTagFeedGroup();
  v88 = MEMORY[0x1E0C80A78](v87);
  v194 = (char *)v153 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v88);
  v193 = (char *)v153 - v90;
  v188 = type metadata accessor for MySportsTopicTagFeedGroup();
  v91 = MEMORY[0x1E0C80A78](v188);
  v192 = (char *)v153 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v91);
  v191 = (char *)v153 - v93;
  v94 = type metadata accessor for SportsLinksTagFeedGroup();
  v95 = MEMORY[0x1E0C80A78](v94);
  v190 = (char *)v153 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v95);
  v189 = (char *)v153 - v97;
  v185 = type metadata accessor for SportsScoresTagFeedGroup();
  v98 = MEMORY[0x1E0C80A78](v185);
  v187 = (char *)v153 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v98);
  v186 = (char *)v153 - v100;
  v101 = type metadata accessor for SportsFavoritesTagFeedGroup();
  v102 = MEMORY[0x1E0C80A78](v101);
  v182 = (char *)v153 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v102);
  v181 = (char *)v153 - v104;
  v178 = type metadata accessor for SportsTopStoriesTagFeedGroup();
  v105 = MEMORY[0x1E0C80A78](v178);
  v184 = (char *)v153 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v105);
  v183 = (char *)v153 - v107;
  v108 = type metadata accessor for SportsScheduleTagFeedGroup();
  v109 = MEMORY[0x1E0C80A78](v108);
  v180 = (char *)v153 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v109);
  v179 = (char *)v153 - v111;
  v175 = type metadata accessor for SportsNavigationTagFeedGroup();
  v112 = MEMORY[0x1E0C80A78](v175);
  v177 = (char *)v153 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v112);
  v176 = (char *)v153 - v114;
  v115 = type metadata accessor for SportsRecordTagFeedGroup();
  v116 = MEMORY[0x1E0C80A78](v115);
  v172 = (char *)v153 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v116);
  v171 = (char *)v153 - v118;
  v119 = type metadata accessor for CuratedTagFeedGroup();
  v120 = MEMORY[0x1E0C80A78](v119);
  v174 = (char *)v153 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v120);
  v173 = (char *)v153 - v122;
  sub_1D649F2F0();
  v170 = v123;
  v169 = *(_QWORD *)(v123 - 8);
  v124 = MEMORY[0x1E0C80A78](v123);
  v167 = (char *)v153 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v124);
  v166 = (char *)v153 - v126;
  v162 = sub_1D6E217C4();
  v161 = *(_QWORD *)(v162 - 8);
  v127 = MEMORY[0x1E0C80A78](v162);
  v160 = (char *)v153 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v127);
  v159 = (char *)v153 - v129;
  sub_1D6076D20();
  v168 = v130;
  v165 = *(_QWORD *)(v130 - 8);
  v131 = MEMORY[0x1E0C80A78](v130);
  v164 = (char *)v153 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v131);
  v163 = (char *)v153 - v133;
  v154 = type metadata accessor for WeatherTagFeedGroup();
  v134 = MEMORY[0x1E0C80A78](v154);
  v158 = (char *)v153 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v134);
  v157 = (char *)v153 - v136;
  v137 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
  v138 = MEMORY[0x1E0C80A78](v137);
  v156 = (char *)v153 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v138);
  v155 = (char *)v153 - v140;
  v141 = type metadata accessor for ChannelSectionTagFeedGroup();
  v142 = MEMORY[0x1E0C80A78](v141);
  v153[1] = (char *)v153 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v142);
  v153[0] = (char *)v153 - v144;
  sub_1D6073CF0();
  v146 = MEMORY[0x1E0C80A78](v145);
  MEMORY[0x1E0C80A78](v146);
  v147 = type metadata accessor for PromotedArticleListTagFeedGroup();
  v148 = MEMORY[0x1E0C80A78](v147);
  MEMORY[0x1E0C80A78](v148);
  v149 = type metadata accessor for ArticleListTagFeedGroup();
  v150 = MEMORY[0x1E0C80A78](v149);
  MEMORY[0x1E0C80A78](v150);
  type metadata accessor for TagFeedSectionGapDescriptor(0);
  v151 = MEMORY[0x1E0C80A78](a1);
  v152 = MEMORY[0x1E0C80A78](v151);
  __asm { BR              X10 }
}

uint64_t sub_1D6880A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if ((*(_QWORD *)(v2 - 120) >> 58) & 0x3C | (*(_QWORD *)(v2 - 120) >> 1) & 3)
  {
    v5 = 0;
  }
  else
  {
    v3 = swift_projectBox();
    v4 = swift_projectBox();
    sub_1D5E82ECC(v3, v1, type metadata accessor for TagFeedSectionGapDescriptor);
    sub_1D5E82ECC(v4, v0, type metadata accessor for TagFeedSectionGapDescriptor);
    v5 = sub_1D6C33210(v1, v0);
    sub_1D5E8D20C(v0, type metadata accessor for TagFeedSectionGapDescriptor);
    sub_1D5E8D20C(v1, type metadata accessor for TagFeedSectionGapDescriptor);
  }
  return v5 & 1;
}

void sub_1D6882EA0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EFFF3F90)
  {
    sub_1D6E2261C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EFFF3F90);
  }
}

uint64_t destroy for ChannelIssuesBuildBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for ChannelIssuesBuildBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = a2 + 24;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 24, v5, v7);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ChannelIssuesBuildBlueprintModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  a1[8] = a2[8];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = a2[10];
  a1[9] = a2[9];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[10] = v4;
  return a1;
}

uint64_t assignWithTake for ChannelIssuesBuildBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_unknownObjectRelease();
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 80) = v7;
  return a1;
}

ValueMetadata *type metadata accessor for ChannelIssuesBuildBlueprintModifier()
{
  return &type metadata for ChannelIssuesBuildBlueprintModifier;
}

uint64_t sub_1D688312C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  unint64_t *v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *);
  char v40[16];
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  char v44[16];

  v4 = v3;
  v38 = a3;
  v39 = a2;
  sub_1D6042408(0, &qword_1EFFF4020, MEMORY[0x1E0DB9A28]);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v30 - v6;
  sub_1D6883D6C();
  MEMORY[0x1E0C80A78](v7);
  v32 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6042408(0, (unint64_t *)&qword_1EFFD5C90, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v33 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  MEMORY[0x1E0C80A78](v9);
  v31 = (char *)&v30 - v10;
  sub_1D6883E60();
  MEMORY[0x1E0C80A78](v11);
  sub_1D6042408(0, (unint64_t *)&qword_1EFFD5C60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v30 - v15;
  __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
  v17 = sub_1D688C528(*v3);
  v41 = v3;
  sub_1D5FE16B4((void (*)(id *))sub_1D6883F04, (uint64_t)v40, v17, (uint64_t)v44);
  swift_bridgeObjectRelease();
  v18 = v3[2];
  v42 = v4[1];
  v43 = v18;
  sub_1D5FE7550(0);
  v20 = v19;
  v21 = sub_1D5E6D8C0(&qword_1EFFF4048, (uint64_t (*)(uint64_t))sub_1D5FE7550, MEMORY[0x1E0DB6F08]);
  v22 = sub_1D5E6D8C0(&qword_1EFFF4050, (uint64_t (*)(uint64_t))sub_1D5FE7550, MEMORY[0x1E0DB6EF8]);
  swift_bridgeObjectRetain();
  MEMORY[0x1D8282BC0](MEMORY[0x1E0DEE9D8], v20, v21, v22);
  type metadata accessor for ChannelIssuesModel();
  sub_1D5FE713C();
  sub_1D5E6D8C0((unint64_t *)&unk_1EFFD5C70, (uint64_t (*)(uint64_t))type metadata accessor for ChannelIssuesModel, (uint64_t)&unk_1D6ED2EC0);
  sub_1D6E1D468();
  sub_1D6E1D4B0();
  swift_bridgeObjectRelease();
  sub_1D6883F20();
  v23 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1D6E32F90;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 16))(v24 + v23, v16, v13);
  v25 = sub_1D6883E10(&qword_1EFFF4030, MEMORY[0x1E0DB7B88]);
  v26 = sub_1D6883E10(&qword_1EFFF4038, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1D8282BC0](v24, v13, v25, v26);
  v27 = v31;
  sub_1D6E209FC();
  v28 = v35;
  sub_1D6E1E938();
  v39(v28);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v37);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v27, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1D6883514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  char v10;
  char v11;
  char v12;
  char v13;
  void *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a2;
  v27 = a3;
  v26 = type metadata accessor for ChannelIssuesModel();
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D6E23864();
  v23 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)a1;
  v22 = *(unsigned __int8 *)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 9);
  v11 = *(_BYTE *)(a1 + 10);
  v12 = *(_BYTE *)(a1 + 11);
  v13 = *(_BYTE *)(a1 + 12);
  v14 = *(void **)(a1 + 16);
  LOBYTE(a1) = *(_BYTE *)(a1 + 24);
  sub_1D68836E4(v25, v9, (uint64_t)v8);
  sub_1D6042590();
  v16 = &v5[*(int *)(v15 + 48)];
  *(_QWORD *)v5 = v9;
  v5[8] = v22;
  v5[9] = v10;
  v5[10] = v11;
  v5[11] = v12;
  v5[12] = v13;
  *((_QWORD *)v5 + 2) = v14;
  v5[24] = a1;
  v18 = v23;
  v17 = v24;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v16, v8, v24);
  sub_1D5E6D8C0((unint64_t *)&unk_1EFFD5C70, (uint64_t (*)(uint64_t))type metadata accessor for ChannelIssuesModel, (uint64_t)&unk_1D6ED2EC0);
  v19 = v9;
  v20 = v14;
  sub_1D6E1CD54();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v17);
}

uint64_t sub_1D68836E4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unsigned int v15;
  unsigned int v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  id v30;
  id v31;
  unint64_t v32;
  id v33;
  unsigned int v34;
  id v35;
  id v36;
  void *v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t ObjectType;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  __int128 v56;
  __int128 v57;
  _QWORD v58[3];
  uint64_t v59;

  v6 = sub_1D6E23864();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D5CC10];
  v8 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)&v48 - v12;
  sub_1D6883F84(0, &qword_1EFFDC250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v54 = v8;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D6E32F90;
  sub_1D6E23858();
  v58[0] = v13;
  sub_1D5E6D8C0((unint64_t *)&qword_1ED5F3A20, v7, MEMORY[0x1E0D5CC30]);
  sub_1D6883F84(0, &qword_1ED5F4040, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D61CED14();
  sub_1D6E27D88();
  v53 = a1;
  v14 = *(id *)(a1 + 64);
  v15 = objc_msgSend(a2, sel_isPaid);
  v16 = objc_msgSend(a2, sel_isBundlePaid);
  v17 = objc_msgSend(objc_msgSend(a2, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  v18 = sub_1D6E26978();
  v20 = v19;

  v50 = v18;
  if (!v15)
  {
    if ((v16 & 1) != 0)
      goto LABEL_6;
LABEL_8:
    swift_bridgeObjectRelease();
    v28 = v52;
LABEL_9:
    sub_1D6E2381C();
    sub_1D66A7AEC(v28, (uint64_t)v11);
    v29 = *(void (**)(char *, uint64_t))(v54 + 8);
    v29(v11, v6);
    v29(v28, v6);
    goto LABEL_29;
  }
  v49 = v16;
  v21 = objc_msgSend(objc_msgSend(v14, sel_purchaseProvider), sel_purchasedTagIDs);
  v22 = sub_1D6E27038();
  v51 = v14;
  v23 = v11;
  v24 = a2;
  v25 = a3;
  v26 = v22;

  LOBYTE(v21) = sub_1D5F9E9CC(v18, v20, v26);
  swift_unknownObjectRelease();
  a3 = v25;
  a2 = v24;
  v11 = v23;
  v14 = v51;
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    goto LABEL_8;
  if (!v49)
    goto LABEL_26;
LABEL_6:
  v51 = v14;
  v27 = (char *)objc_msgSend(objc_msgSend(v14, sel_bundleSubscriptionProvider, a3), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v27, v27 + 1))
  {
    sub_1D6E27D04();
    swift_unknownObjectRelease();
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_1D5F74FC0((uint64_t)&v56, (uint64_t)v58);
  if (!v59)
  {
    sub_1D5F117D8((uint64_t)v58);
    goto LABEL_16;
  }
  sub_1D5F75020();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    v30 = 0;
    v32 = 0;
    goto LABEL_17;
  }
  v30 = v55;
  v31 = objc_msgSend(v55, sel_integerValue);
  if (v31 == (id)-1)
  {

    goto LABEL_28;
  }
  v32 = (unint64_t)v31;
LABEL_17:
  if (objc_getAssociatedObject(v27, (const void *)~v32))
  {
    sub_1D6E27D04();
    swift_unknownObjectRelease();
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_1D5F74FC0((uint64_t)&v56, (uint64_t)v58);
  if (!v59)
  {
    sub_1D5F117D8((uint64_t)v58);
LABEL_25:

    if ((v32 & 1) != 0)
      goto LABEL_28;
LABEL_26:
    swift_bridgeObjectRelease();
    v28 = v52;
    goto LABEL_29;
  }
  sub_1D5F75020();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_25;
  v33 = v55;
  v34 = objc_msgSend(v33, sel_integerValue);

  if ((((v34 + 1) ^ ((_DWORD)v32 + 1)) & 1) == 0)
    goto LABEL_26;
LABEL_28:
  v35 = objc_msgSend(objc_msgSend(v51, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v36 = objc_msgSend(v35, sel_bundleChannelIDs);

  v37 = (void *)sub_1D6E26948();
  v38 = objc_msgSend(v36, sel_containsObject_, v37);
  swift_bridgeObjectRelease();

  v28 = v52;
  if ((v38 & 1) != 0)
    goto LABEL_9;
LABEL_29:
  v39 = *(_QWORD *)(v53 + 80);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v39 + 56))(ObjectType, v39);
  sub_1D6E1A1F8();
  swift_release();
  v41 = v58[0];
  v42 = objc_msgSend(a2, sel_identifier);
  v43 = sub_1D6E26978();
  v45 = v44;

  LOBYTE(v42) = sub_1D5F9E9CC(v43, v45, v41);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v42 & 1) != 0)
  {
    sub_1D6E23810();
    sub_1D66A7AEC(v28, (uint64_t)v11);
    v47 = *(void (**)(char *, uint64_t))(v54 + 8);
    v47(v11, v6);
    return ((uint64_t (*)(char *, uint64_t))v47)(v28, v6);
  }
  return result;
}

uint64_t sub_1D6883CFC()
{
  sub_1D6883FDC();
  return sub_1D6E1E164();
}

unint64_t sub_1D6883D28()
{
  unint64_t result;

  result = qword_1EFFF4018;
  if (!qword_1EFFF4018)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E98A80, &type metadata for ChannelIssuesBuildBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EFFF4018);
  }
  return result;
}

void sub_1D6883D6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF4028)
  {
    sub_1D6042408(255, (unint64_t *)&qword_1EFFD5C60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    sub_1D6883E10(&qword_1EFFF4030, MEMORY[0x1E0DB7B88]);
    sub_1D6883E10(&qword_1EFFF4038, MEMORY[0x1E0DB7B80]);
    v0 = sub_1D6E1A408();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF4028);
  }
}

uint64_t sub_1D6883E10(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1D6042408(255, (unint64_t *)&qword_1EFFD5C60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    result = MEMORY[0x1D82917D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D6883E60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF4040)
  {
    sub_1D5FE7550(255);
    sub_1D5E6D8C0(&qword_1EFFF4048, (uint64_t (*)(uint64_t))sub_1D5FE7550, MEMORY[0x1E0DB6F08]);
    sub_1D5E6D8C0(&qword_1EFFF4050, (uint64_t (*)(uint64_t))sub_1D5FE7550, MEMORY[0x1E0DB6EF8]);
    v0 = sub_1D6E1A408();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF4040);
  }
}

uint64_t sub_1D6883F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D6883514(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1D6883F20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF4058)
  {
    sub_1D6042408(255, (unint64_t *)&qword_1EFFD5C60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    v0 = sub_1D6E2828C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF4058);
  }
}

void sub_1D6883F84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D6E23864();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D6883FDC()
{
  unint64_t result;

  result = qword_1EFFF4060;
  if (!qword_1EFFF4060)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E98AA8, &type metadata for ChannelIssuesBuildBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EFFF4060);
  }
  return result;
}

uint64_t sub_1D6884020(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1D5E78884(0, (unint64_t *)&qword_1ED5F4430);
    v4 = sub_1D6E26D80();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D68840AC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, _QWORD, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1D5F4E574(0);
  v0 = sub_1D6E2255C();
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4D90, (uint64_t (*)(uint64_t))sub_1D6246B8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1D6246B8C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1D6E32F90;
  *(_QWORD *)(v6 + v5) = sub_1D622E45C((uint64_t)&unk_1E9AB0618);
  v7 = *(void (**)(unint64_t, _QWORD, uint64_t))(v4 + 104);
  v7(v6 + v5, *MEMORY[0x1E0D5B4F0], v3);
  sub_1D66874B4(v6);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D6E32F90;
  sub_1D5E847C4(0, &qword_1ED605680, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5CB58], v1);
  v9 = sub_1D6E237A4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1D6E32F90;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x1E0D5CB50], v9);
  v13 = sub_1D666F64C(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v8 + v5) = v13;
  v7(v8 + v5, *MEMORY[0x1E0D5B4B8], v3);
  sub_1D66874B4(v8);
  return v0;
}

uint64_t sub_1D6884304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v4)(uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;

  v2 = v1;
  v4 = (void (*)(uint64_t))MEMORY[0x1E0D5BF60];
  sub_1D5F995B4(0, (unint64_t *)&unk_1ED606530, (void (*)(uint64_t))sub_1D609FE00, (void (*)(uint64_t))MEMORY[0x1E0D5BF60]);
  sub_1D6E1AE1C();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = a1;
  swift_retain();
  swift_retain();
  v6 = (void *)sub_1D6E1AB4C();
  sub_1D5F995B4(0, &qword_1ED606510, (void (*)(uint64_t))MEMORY[0x1E0D5E590], v4);
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = a1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1D688684C;
  *(_QWORD *)(v8 + 24) = v7;
  swift_retain();
  swift_retain();
  v9 = (void *)sub_1D6E1AB4C();
  sub_1D61A748C();
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  swift_retain();
  v10 = (void *)sub_1D6E1AB4C();
  v11 = sub_1D6E1ACCC();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1D68844D0()
{
  void *v0;
  uint64_t v1;

  sub_1D5F995B4(0, qword_1ED605980, (void (*)(uint64_t))type metadata accessor for TodayFeedPool, (void (*)(uint64_t))sub_1D609FE00);
  sub_1D6E1AE1C();
  swift_retain();
  v0 = (void *)sub_1D6E1AB4C();
  sub_1D5F995B4(0, (unint64_t *)&unk_1ED606530, (void (*)(uint64_t))sub_1D609FE00, (void (*)(uint64_t))MEMORY[0x1E0D5BF60]);
  type metadata accessor for LatestStoriesTodayFeedGroupEmitter();
  v1 = sub_1D6E1AC30();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1D68845C8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  void *v7;
  uint64_t v8;

  v5 = *a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D68846A8(a3, v5);
  swift_bridgeObjectRelease();
  if (v3)
    return swift_release();
  swift_retain();
  v7 = (void *)sub_1D6E1AB4C();
  sub_1D5F995B4(0, &qword_1ED606510, (void (*)(uint64_t))MEMORY[0x1E0D5E590], (void (*)(uint64_t))MEMORY[0x1E0D5BF60]);
  v8 = sub_1D6E1AC24();
  swift_release();
  swift_release_n();

  return v8;
}

uint64_t sub_1D68846A8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  void (*v96)(_QWORD *, _QWORD, uint64_t);
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;

  v80 = a1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, &qword_1ED603D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v70 - v6;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED623980, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v4);
  MEMORY[0x1E0C80A78](v8);
  v79 = (char *)&v70 - v9;
  sub_1D5E847C4(0, &qword_1ED5F3880, (uint64_t (*)(uint64_t))sub_1D5F4E574, v4);
  MEMORY[0x1E0C80A78](v10);
  v78 = (char *)&v70 - v11;
  v12 = sub_1D6E24F8C();
  v84 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v83 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1D6E2489C();
  v82 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v81 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F3CD0, (uint64_t (*)(uint64_t))sub_1D609FF00, v4);
  MEMORY[0x1E0C80A78](v15);
  v76 = (char *)&v70 - v16;
  sub_1D5E847C4(0, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v4);
  MEMORY[0x1E0C80A78](v17);
  v77 = (char *)&v70 - v18;
  v74 = sub_1D6E15EF0();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v72 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LatestStoriesTodayFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v20);
  v71 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1D6E2444C();
  v89 = *(_QWORD *)(v94 - 8);
  v22 = MEMORY[0x1E0C80A78](v94);
  v75 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v93 = (char *)&v70 - v24;
  v25 = sub_1D6E25AFC();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (_QWORD **)((char *)&v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v27);
  v31 = (_QWORD **)((char *)&v70 - v30);
  v32 = sub_1D6E25C40();
  v90 = *(_QWORD *)(v32 - 8);
  v91 = v32;
  MEMORY[0x1E0C80A78](v32);
  v95 = (char *)&v70 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v34 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v87 = v7;
  v88 = v2;
  v86 = v12;
  if (v34)
  {
    v99 = a2;
    v97 = MEMORY[0x1E0DEE9D8];
    result = sub_1D62275AC(0, v34 & ~(v34 >> 63), 0);
    if (v34 < 0)
    {
      __break(1u);
      return result;
    }
    v36 = v97;
    if ((v99 & 0xC000000000000001) != 0)
    {
      v37 = 0;
      v38 = *MEMORY[0x1E0D5F7C8];
      do
      {
        *v31 = MEMORY[0x1D8290720](v37, v99);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v26 + 104))(v31, v38, v25);
        v97 = v36;
        v40 = *(_QWORD *)(v36 + 16);
        v39 = *(_QWORD *)(v36 + 24);
        if (v40 >= v39 >> 1)
        {
          sub_1D62275AC(v39 > 1, v40 + 1, 1);
          v36 = v97;
        }
        ++v37;
        *(_QWORD *)(v36 + 16) = v40 + 1;
        (*(void (**)(unint64_t, _QWORD *, uint64_t))(v26 + 32))(v36+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v40, v31, v25);
      }
      while (v34 != v37);
    }
    else
    {
      v42 = (_QWORD *)(v99 + 32);
      LODWORD(v99) = *MEMORY[0x1E0D5F7C8];
      v96 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v26 + 104);
      do
      {
        *v29 = *v42;
        v96(v29, v99, v25);
        v97 = v36;
        v44 = *(_QWORD *)(v36 + 16);
        v43 = *(_QWORD *)(v36 + 24);
        swift_unknownObjectRetain();
        if (v44 >= v43 >> 1)
        {
          sub_1D62275AC(v43 > 1, v44 + 1, 1);
          v36 = v97;
        }
        *(_QWORD *)(v36 + 16) = v44 + 1;
        (*(void (**)(unint64_t, _QWORD *, uint64_t))(v26 + 32))(v36+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v44, v29, v25);
        ++v42;
        --v34;
      }
      while (v34);
    }
    v41 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v41 = MEMORY[0x1E0DEE9D8];
  }
  sub_1D6473000(v41);
  sub_1D6473114(v41);
  sub_1D6473238(v41);
  sub_1D6E25C34();
  v45 = *(_QWORD *)(v92 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_formatService + 24);
  v96 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v92
                                                         + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_formatService
                                                         + 32);
  v99 = v45;
  v70 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v92 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_formatService), v45);
  sub_1D5F5C1BC();
  v46 = v71;
  sub_1D6E21C08();
  v47 = v75;
  v48 = v94;
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v75, v46, v94);
  v97 = 0;
  v98 = 0xE000000000000000;
  sub_1D6E27EA8();
  swift_bridgeObjectRelease();
  v97 = 0x745374736574616CLL;
  v98 = 0xEF3A3A736569726FLL;
  v49 = v72;
  sub_1D6E15EE4();
  sub_1D6E15ED8();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v49, v74);
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  v50 = sub_1D6E212F0();
  v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
  v52 = (uint64_t)v77;
  v51(v77, 1, 1, v50);
  sub_1D609FF00(0);
  v54 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v76, 1, 1, v53);
  sub_1D6E24308();
  swift_bridgeObjectRelease();
  sub_1D5EC4E54(v54, (unint64_t *)&qword_1ED5F3CD0, (uint64_t (*)(uint64_t))sub_1D609FF00);
  sub_1D5EC4E54(v52, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40]);
  v89 = *(_QWORD *)(v89 + 8);
  ((void (*)(char *, uint64_t))v89)(v47, v48);
  sub_1D5E847C4(0, &qword_1ED5F4E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F978], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v55 = v90;
  v56 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1D6E32F90;
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 16))(v57 + v56, v95, v91);
  v51((char *)v52, 1, 1, v50);
  sub_1D6CFC87C(v41);
  sub_1D6CFC87C(v41);
  sub_1D6CFC9A0(v41);
  sub_1D6CFC9AC(v41);
  sub_1D6CFCACC(v41);
  sub_1D6CFCAD8(v41);
  v58 = v81;
  sub_1D6E24890();
  v59 = v92 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_knobs;
  sub_1D5F4E574(0);
  v61 = v60;
  v62 = *(_QWORD *)(v60 - 8);
  v63 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v78, v59, v60);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v63, 0, 1, v61);
  v64 = sub_1D6E256AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v79, 1, 1, v64);
  LOBYTE(v97) = 5;
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6239C0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1D5F48C8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5F438]);
  swift_allocObject();
  swift_retain();
  sub_1D6E2588C();
  v65 = sub_1D6E24D4C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v87, 1, 1, v65);
  v66 = qword_1ED5F9990;
  (id)*MEMORY[0x1E0D58690];
  if (v66 != -1)
    swift_once();
  (id)qword_1ED6983B8;
  v67 = v83;
  sub_1D6E24F68();
  v68 = v93;
  v69 = sub_1D6E24974();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v67, v86);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v58, v85);
  ((void (*)(char *, uint64_t))v89)(v68, v94);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v95, v91);
  return v69;
}

uint64_t sub_1D68851C0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1D61A748C();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6885308();
  sub_1D5E82ECC((uint64_t)v5, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for TodayFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0D80, (uint64_t (*)(uint64_t))sub_1D61A748C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v6 = sub_1D6E1AC90();
  sub_1D5E8D20C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TodayFeedGroup);
  return v6;
}

uint64_t sub_1D6885308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D5E847C4(0, &qword_1ED5F3850, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5AE10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1D6E22E98();
  v2 = MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  sub_1D5F5C1BC();
  swift_retain();
  sub_1D6E21BC0();
  sub_1D6E21BCC();
  sub_1D6E21BCC();
  sub_1D5F4E574(0);
  sub_1D6E22598();
  sub_1D6E22574();
  sub_1D6E225B0();
  type metadata accessor for LatestStoriesTodayFeedGroupKnobs();
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED5F38B0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1D5F48C8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B580]);
  sub_1D6E22850();
  swift_retain();
  sub_1D6E21914();
  type metadata accessor for TodayFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D6885554()
{
  if (qword_1ED5F9990 != -1)
    swift_once();
  type metadata accessor for TodayFeedGroup();
  sub_1D633548C();
  return sub_1D6E22C1C();
}

uint64_t sub_1D6885604()
{
  uint64_t v0;

  sub_1D6E22B8C();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0DD0, (uint64_t (*)(uint64_t))sub_1D609FE00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1D6E1AD08();
  v0 = sub_1D6E1ADEC();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1D68856B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56[2];

  v55 = sub_1D6E23AF8();
  v52 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v9 = a1[1];
  v56[0] = (_QWORD *)v9;
  sub_1D609FE00();
  sub_1D5E6D8C0((unint64_t *)&qword_1ED5F4120, (uint64_t (*)(uint64_t))sub_1D609FE00, MEMORY[0x1E0DEAF38]);
  swift_retain();
  swift_bridgeObjectRetain();
  v56[0] = (_QWORD *)sub_1D6E26C84();
  swift_bridgeObjectRetain();
  sub_1D68868A8(v56);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    v50 = v56[0];
    v11 = sub_1D651CB4C((uint64_t)v56[0]);
    v54 = a3;
    sub_1D6E22B80();
    v53 = a2;
    v12 = (unint64_t)sub_1D6885DEC(v11, v10, (uint64_t)v56[0]);
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_1ED5F9990 != -1)
      swift_once();
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4EB0, (uint64_t (*)(uint64_t))sub_1D5FA9D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1D6E334D0;
    v51 = v10;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = sub_1D6E28040();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x1E0DEB418];
    v16 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v13 + 64) = v16;
    *(_QWORD *)(v13 + 32) = v14;
    v48 = 0;
    if (v12 >> 62)
    {
      v45 = v16;
      swift_bridgeObjectRetain();
      v17 = sub_1D6E28040();
      swift_bridgeObjectRelease();
      v16 = v45;
    }
    else
    {
      v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)(v13 + 96) = v15;
    *(_QWORD *)(v13 + 104) = v16;
    *(_QWORD *)(v13 + 72) = v17;
    sub_1D6E27374();
    sub_1D6E1C61C();
    swift_bridgeObjectRelease();
    v18 = v53 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_knobs;
    type metadata accessor for LatestStoriesTodayFeedGroupKnobs();
    sub_1D6E22BE0();
    sub_1D6E22E74();
    v19 = *(void (**)(char *, uint64_t))(v52 + 8);
    v49 = v8;
    v19(v8, v55);
    v20 = sub_1D6104984((uint64_t)v56[0], v12);
    v47 = v21;
    v23 = v22;
    v25 = v24;
    swift_bridgeObjectRelease();
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1D6E32F90;
    v52 = v25;
    v27 = v25 >> 1;
    v28 = v23;
    v29 = __OFSUB__(v27, v23);
    v30 = v27 - v23;
    if (v29)
    {
      __break(1u);
      goto LABEL_36;
    }
    *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v26 + 64) = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v26 + 32) = v30;
    sub_1D6E27374();
    sub_1D6E1C61C();
    swift_bridgeObjectRelease();
    if (v28 == v27)
      goto LABEL_31;
    v31 = v49;
    sub_1D6E22BE0();
    sub_1D6E22E74();
    v19(v31, v55);
    if (LOBYTE(v56[0]) == 1)
    {
      v18 = v52;
      if ((v52 & 1) == 0)
      {
        swift_unknownObjectRetain();
LABEL_13:
        sub_1D60FF060(v20, v47, v28, v18);
LABEL_22:
        swift_unknownObjectRelease();
        sub_1D5E78884(0, (unint64_t *)&qword_1ED5F4430);
        v35 = (void *)sub_1D6E26D68();
        swift_release();
        v36 = (void *)FCPromoteAccessibleHeadline();
        goto LABEL_29;
      }
      sub_1D6E282F8();
      swift_unknownObjectRetain_n();
      v33 = swift_dynamicCastClass();
      if (!v33)
      {
        swift_unknownObjectRelease();
        v33 = MEMORY[0x1E0DEE9D8];
      }
      v34 = *(_QWORD *)(v33 + 16);
      swift_release();
      if (v34 == v30)
      {
        if (!swift_dynamicCastClass())
          swift_unknownObjectRelease();
        goto LABEL_22;
      }
LABEL_36:
      swift_unknownObjectRelease();
      goto LABEL_13;
    }
    v32 = v52;
    if ((v52 & 1) != 0)
    {
      sub_1D6E282F8();
      swift_unknownObjectRetain_n();
      v37 = swift_dynamicCastClass();
      if (!v37)
      {
        swift_unknownObjectRelease();
        v37 = MEMORY[0x1E0DEE9D8];
      }
      v38 = *(_QWORD *)(v37 + 16);
      swift_release();
      if (v38 == v30)
      {
        if (!swift_dynamicCastClass())
          swift_unknownObjectRelease();
        goto LABEL_28;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRetain();
    }
    sub_1D60FF060(v20, v47, v28, v32);
LABEL_28:
    swift_unknownObjectRelease();
    sub_1D5E78884(0, (unint64_t *)&qword_1ED5F4430);
    v35 = (void *)sub_1D6E26D68();
    swift_release();
    v36 = (void *)FCPromoteOneHeadline();
LABEL_29:
    v39 = v36;

    if (v39)
    {
      v40 = (_QWORD *)sub_1D6E26D80();

      sub_1D6E23078();
      swift_allocObject();
      swift_bridgeObjectRetain();
      v41 = (_QWORD *)sub_1D6E2306C();
      v56[0] = v40;
      v56[1] = v41;
      sub_1D6584C20();
      swift_allocObject();
      swift_retain();
      v42 = sub_1D6E1AC90();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      return v42;
    }
LABEL_31:
    swift_release();
    v42 = sub_1D6E22964();
    sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v43, *MEMORY[0x1E0D5B6D0], v42);
    swift_willThrow();
    swift_release();
    swift_unknownObjectRelease();
    return v42;
  }
  result = swift_release();
  __break(1u);
  return result;
}

id sub_1D6885DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  void *v6;
  id result;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  unsigned int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;

  sub_1D5E76DF0(0, (unint64_t *)&qword_1ED624AD0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D6E51EC0;
  v6 = *(void **)(v3 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_cloudContext);
  result = objc_msgSend(v6, sel_subscriptionController);
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend(result, sel_autoFavoriteTagIDs);

    if (v9)
    {
      v10 = sub_1D6E26D80();

    }
    else
    {
      v10 = MEMORY[0x1E0DEE9D8];
    }
    v11 = (void *)objc_opt_self();
    sub_1D5F0953C(v10);
    swift_bridgeObjectRelease();
    v12 = (void *)sub_1D6E2702C();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v11, sel_transformationWithFeedContextByFeedID_autoFavoriteTagIDs_, 0, v12);

    *(_QWORD *)(v5 + 32) = v13;
    v14 = (id)NewsCoreUserDefaults();
    v15 = objc_msgSend(v14, sel_BOOLForKey_, *MEMORY[0x1E0D58788]);

    v16 = (void *)objc_opt_self();
    v17 = *(_QWORD *)(a3 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_appConfig);
    if (v15)
      v18 = 0x44022513ELL;
    else
      v18 = 0x44022113ELL;
    v19 = swift_bridgeObjectRetain();
    sub_1D60FEDB0(v19);
    swift_bridgeObjectRelease();
    v20 = (void *)sub_1D6E26D68();
    swift_release();
    v21 = objc_msgSend(v16, sel_transformationWithFilterOptions_configuration_context_otherArticleIDs_, v18, v17, v6, v20);

    *(_QWORD *)(v5 + 40) = v21;
    sub_1D6E26DA4();
    v22 = objc_allocWithZone(MEMORY[0x1E0D58B78]);
    sub_1D5E78884(0, &qword_1ED5F43D8);
    v23 = (void *)sub_1D6E26D68();
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(v22, sel_initWithFeedTransformations_, v23);

    sub_1D5E78884(0, (unint64_t *)&qword_1ED5F4430);
    v25 = (void *)sub_1D6E26D68();
    v26 = objc_msgSend(v24, sel_transformHeadlines_, v25);

    v27 = sub_1D6E26D80();
    return (id)v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D688611C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  double v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[7];

  v43 = a3;
  v44 = a4;
  v10 = sub_1D6E23AF8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v40 - v15;
  v17 = type metadata accessor for TodayFeedServiceContext();
  MEMORY[0x1E0C80A78](v17);
  v19 = (id *)((char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  v41 = v20;
  v21 = *(void **)(a5 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_cloudContext);
  swift_retain();
  v40 = v21;
  sub_1D6E22B80();
  sub_1D5E82ECC(aBlock[0] + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_context, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TodayFeedServiceContext);
  swift_release();
  v22 = v19[1];
  sub_1D5E8D20C((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TodayFeedServiceContext);
  v23 = objc_msgSend(v22, sel_laterDate);

  if (v23)
  {
    sub_1D6E15E60();

    v24 = sub_1D6E15ECC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v16, 0, 1, v24);
  }
  else
  {
    v24 = sub_1D6E15ECC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v16, 1, 1, v24);
  }
  type metadata accessor for LatestStoriesTodayFeedGroupKnobs();
  v42 = a6;
  sub_1D6E22BE0();
  sub_1D6E22E74();
  v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  v26 = v10;
  v25(v13, v10);
  v27 = *(double *)&aBlock[6];
  sub_1D6E15ECC();
  v28 = *(_QWORD *)(v24 - 8);
  v29 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v16, 1, v24) != 1)
  {
    v29 = (void *)sub_1D6E15DE8();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v24);
  }
  v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58AA0]), sel_initWithStartDate_timeInterval_, v29, v27);

  if (v30)
  {
    sub_1D6E22BE0();
    sub_1D6E22E74();
    v25(v13, v26);
    v31 = aBlock[0];
    if ((aBlock[0] & 0x8000000000000000) == 0)
    {
      sub_1D6E22BE0();
      sub_1D6E22E74();
      v25(v13, v26);
      v32 = aBlock[0];
      if ((aBlock[0] & 0x8000000000000000) == 0)
      {
        v33 = objc_allocWithZone(MEMORY[0x1E0D58C58]);
        v34 = v40;
        v35 = objc_msgSend(v33, sel_initWithContext_dateRange_totalLimit_perFeedLimit_, v40, v30, v31, v32);

        v36 = (_QWORD *)swift_allocObject();
        v37 = v44;
        v36[2] = v43;
        v36[3] = v37;
        v38 = v41;
        v36[4] = sub_1D5FF3C6C;
        v36[5] = v38;
        aBlock[4] = sub_1D6887C2C;
        aBlock[5] = v36;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1D6884020;
        aBlock[3] = &block_descriptor_123;
        v39 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v35, sel_setHeadlinesCompletionHandler_, v39);
        _Block_release(v39);
        objc_msgSend(v35, sel_start);

        return;
      }
    }
  }
  else
  {
    __break(1u);
  }
  sub_1D6E28004();
  __break(1u);
}

void sub_1D68865AC(uint64_t a1, id a2, void (*a3)(id), uint64_t a4, void (*a5)(uint64_t))
{
  id v7;
  uint64_t v9;

  if (a2)
  {
    v7 = a2;
    a3(a2);

  }
  else
  {
    if (a1)
      v9 = a1;
    else
      v9 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    a5(v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D6886638()
{
  return type metadata accessor for LatestStoriesTodayFeedGroupEmitter();
}

uint64_t sub_1D6886640()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D688667C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_config;
  sub_1D5F5C1BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for TodayFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D68866DC@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  v3 = *v1 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for LatestStoriesTodayFeedGroupKnobs();
  a1[4] = sub_1D5E6D8C0(&qword_1ED5EF9D0, (uint64_t (*)(uint64_t))type metadata accessor for LatestStoriesTodayFeedGroupKnobs, (uint64_t)&unk_1D6E4962C);
  a1[5] = sub_1D5E6D8C0((unint64_t *)&unk_1ED5DEF70, (uint64_t (*)(uint64_t))type metadata accessor for LatestStoriesTodayFeedGroupKnobs, (uint64_t)&unk_1D6E49654);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D5E82ECC(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for LatestStoriesTodayFeedGroupKnobs);
}

uint64_t sub_1D6886774()
{
  return sub_1D6E23090();
}

uint64_t sub_1D6886794()
{
  return sub_1D68840AC();
}

uint64_t sub_1D68867B4(uint64_t a1)
{
  return sub_1D6884304(a1);
}

uint64_t sub_1D68867D4()
{
  sub_1D5E6D8C0((unint64_t *)&unk_1ED5F0CE8, (uint64_t (*)(uint64_t))type metadata accessor for LatestStoriesTodayFeedGroupEmitter, (uint64_t)&unk_1D6E98BA0);
  return sub_1D6E1A324();
}

uint64_t sub_1D6886814()
{
  return sub_1D68844D0();
}

uint64_t sub_1D6886830(unint64_t *a1)
{
  uint64_t v1;

  return sub_1D68845C8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D688684C()
{
  return sub_1D68851C0();
}

uint64_t sub_1D6886854()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D6886878(_QWORD *a1)
{
  uint64_t v1;

  return sub_1D658178C(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16));
}

uint64_t sub_1D6886890()
{
  return sub_1D6885554();
}

uint64_t sub_1D68868A8(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(sub_1D6E22388() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1D6266710(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1D6886928(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1D6886928(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  void *v32;
  double v33;
  double v34;
  void *v35;
  double v36;
  double v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  void *v48;
  double v49;
  double v50;
  void *v51;
  double v52;
  double v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  void *v79;
  double v80;
  double v81;
  void *v82;
  double v83;
  double v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  char *v87;
  void (*v88)(char *, uint64_t, uint64_t);
  unint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  BOOL v114;
  uint64_t v115;
  char v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  BOOL v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  void (*v154)(char *, char *, uint64_t);
  unint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(char *, uint64_t);
  char *v160;
  char *v161;
  void (*v162)(char *, char *, uint64_t);
  _QWORD *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;

  v2 = v1;
  v4 = sub_1D6E22388();
  v167 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v153 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v165 = (char *)&v148 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v161 = (char *)&v148 - v10;
  MEMORY[0x1E0C80A78](v9);
  v160 = (char *)&v148 - v11;
  v12 = a1[1];
  result = sub_1D6E28274();
  if (result < v12)
  {
    if (v12 >= 0)
      v14 = v12;
    else
      v14 = v12 + 1;
    if (v12 >= -1)
    {
      v149 = result;
      if (v12 < 2)
      {
        v19 = (char *)MEMORY[0x1E0DEE9D8];
        v18 = MEMORY[0x1E0DEE9D8]
            + ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80));
        v148 = MEMORY[0x1E0DEE9D8];
        if (v12 != 1)
        {
          v21 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
          if (v21 < 2)
            goto LABEL_117;
          goto LABEL_104;
        }
      }
      else
      {
        v15 = v14 >> 1;
        v16 = sub_1D6E26E58();
        *(_QWORD *)(v16 + 16) = v15;
        v17 = (*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
        v148 = v16;
        v18 = v16 + v17;
      }
      v20 = 0;
      v19 = (char *)MEMORY[0x1E0DEE9D8];
      v155 = v18;
      v163 = a1;
      v164 = v4;
      while (1)
      {
        v22 = (uint64_t)v20;
        v23 = (uint64_t)v20 + 1;
        v154 = (void (*)(_QWORD, _QWORD, _QWORD))v20;
        if ((uint64_t)v20 + 1 >= v12)
        {
          a1 = v163;
        }
        else
        {
          v24 = (char *)*v163;
          v25 = *(_QWORD *)(v167 + 72);
          v158 = v23;
          v26 = &v24[v25 * v23];
          v27 = v24;
          v28 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
          v29 = v160;
          v28(v160, v26, v4);
          v30 = &v27[v25 * v22];
          v31 = v161;
          v162 = v28;
          v28(v161, v30, v4);
          v32 = (void *)sub_1D6E2234C();
          objc_msgSend(v32, sel_sortingScore);
          v34 = v33;

          v35 = (void *)sub_1D6E2234C();
          objc_msgSend(v35, sel_sortingScore);
          v37 = v36;

          v38 = *(void (**)(char *, uint64_t))(v167 + 8);
          v39 = v31;
          v22 = (uint64_t)v154;
          v38(v39, v4);
          v159 = v38;
          v38(v29, v4);
          v40 = v27;
          v23 = v22 + 2;
          v156 = v40;
          v166 = v25;
          if (v22 + 2 >= v12)
          {
            v56 = v25;
          }
          else
          {
            v150 = v19;
            v151 = v2;
            v41 = v40;
            v157 = v25 * v23;
            v158 *= v25;
            while (1)
            {
              v42 = v12;
              v43 = v23;
              v44 = v160;
              v45 = v164;
              v46 = v162;
              v162(v160, &v41[v157], v164);
              v47 = v161;
              v46(v161, &v41[v158], v45);
              v48 = (void *)sub_1D6E2234C();
              objc_msgSend(v48, sel_sortingScore);
              v50 = v49;

              v51 = (void *)sub_1D6E2234C();
              objc_msgSend(v51, sel_sortingScore);
              v53 = v52;

              v54 = v47;
              v55 = v159;
              v159(v54, v45);
              v55(v44, v45);
              if (v37 < v34 == v53 >= v50)
                break;
              v23 = v43 + 1;
              v56 = v166;
              v41 += v166;
              v12 = v42;
              if (v42 == v23)
              {
                v23 = v42;
                v19 = v150;
                v2 = v151;
                v4 = v164;
                v22 = (uint64_t)v154;
                goto LABEL_24;
              }
            }
            v19 = v150;
            v2 = v151;
            v4 = v164;
            v23 = v43;
            v22 = (uint64_t)v154;
            v12 = v42;
            v56 = v166;
          }
LABEL_24:
          a1 = v163;
          if (v37 < v34)
          {
            if (v23 < v22)
              goto LABEL_141;
            if (v22 < v23)
            {
              v159 = (void (*)(char *, uint64_t))v12;
              v150 = v19;
              v151 = v2;
              v57 = 0;
              v58 = v56 * (v23 - 1);
              v59 = v22;
              v60 = v23 * v56;
              v61 = v59;
              v62 = v59 * v56;
              do
              {
                if (v61 != v23 + v57 - 1)
                {
                  v63 = v156;
                  if (!v156)
                    goto LABEL_146;
                  v64 = &v156[v62];
                  v65 = &v156[v58];
                  v162 = *(void (**)(char *, char *, uint64_t))(v167 + 32);
                  v162(v153, &v156[v62], v164);
                  if (v62 < v58 || v64 >= &v63[v60])
                  {
                    v4 = v164;
                    swift_arrayInitWithTakeFrontToBack();
                  }
                  else
                  {
                    v4 = v164;
                    if (v62 != v58)
                      swift_arrayInitWithTakeBackToFront();
                  }
                  v162(v65, v153, v4);
                  a1 = v163;
                  v56 = v166;
                }
                ++v61;
                --v57;
                v58 -= v56;
                v60 -= v56;
                v62 += v56;
              }
              while (v61 < v23 + v57);
              v19 = v150;
              v2 = v151;
              v22 = (uint64_t)v154;
              v12 = (uint64_t)v159;
            }
          }
        }
        if (v23 < v12)
        {
          if (__OFSUB__(v23, v22))
            goto LABEL_139;
          if (v23 - v22 < v149)
          {
            if (__OFADD__(v22, v149))
              goto LABEL_142;
            if (v22 + v149 >= v12)
              v66 = v12;
            else
              v66 = v22 + v149;
            if (v66 < v22)
            {
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
              break;
            }
            if (v23 != v66)
            {
              v150 = v19;
              v151 = v2;
              v67 = *(_QWORD *)(v167 + 72);
              v156 = *(char **)(v167 + 16);
              v157 = v67;
              v68 = v67 * (v23 - 1);
              v69 = v23 * v67;
              v152 = v66;
              do
              {
                v71 = 0;
                v162 = (void (*)(char *, char *, uint64_t))v23;
                v158 = v69;
                v159 = (void (*)(char *, uint64_t))v68;
                while (1)
                {
                  v166 = v22;
                  v72 = *a1;
                  v73 = v69 + v71 + *a1;
                  v74 = v160;
                  v75 = (void (*)(char *, uint64_t, uint64_t))v156;
                  ((void (*)(char *, uint64_t, uint64_t))v156)(v160, v73, v4);
                  v76 = v68 + v71 + v72;
                  v77 = a1;
                  v78 = v161;
                  v75(v161, v76, v4);
                  v79 = (void *)sub_1D6E2234C();
                  objc_msgSend(v79, sel_sortingScore);
                  v81 = v80;

                  v82 = (void *)sub_1D6E2234C();
                  objc_msgSend(v82, sel_sortingScore);
                  v84 = v83;

                  v85 = *(void (**)(char *, uint64_t))(v167 + 8);
                  v85(v78, v4);
                  v85(v74, v4);
                  if (v84 >= v81)
                    break;
                  v86 = *v77;
                  if (!*v77)
                    goto LABEL_144;
                  v69 = v158;
                  v68 = (uint64_t)v159;
                  v87 = (char *)v159 + v86 + v71;
                  v88 = *(void (**)(char *, uint64_t, uint64_t))(v167 + 32);
                  v4 = v164;
                  v88(v165, v86 + v158 + v71, v164);
                  swift_arrayInitWithTakeFrontToBack();
                  v88(v87, (uint64_t)v165, v4);
                  v71 -= v157;
                  v22 = v166 + 1;
                  v70 = v162;
                  a1 = v163;
                  if (v162 == (void (*)(char *, char *, uint64_t))(v166 + 1))
                    goto LABEL_49;
                }
                v4 = v164;
                v70 = v162;
                a1 = v77;
                v69 = v158;
                v68 = (uint64_t)v159;
LABEL_49:
                v23 = (uint64_t)v70 + 1;
                v68 += v157;
                v69 += v157;
                v22 = (uint64_t)v154;
              }
              while (v23 != v152);
              v23 = v152;
              v19 = v150;
              v2 = v151;
            }
          }
        }
        if (v23 < v22)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_1D6265E58(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
        v90 = *((_QWORD *)v19 + 2);
        v89 = *((_QWORD *)v19 + 3);
        v21 = v90 + 1;
        if (v90 >= v89 >> 1)
          v19 = sub_1D6265E58((char *)(v89 > 1), v90 + 1, 1, v19);
        *((_QWORD *)v19 + 2) = v21;
        v91 = v19 + 32;
        v92 = &v19[16 * v90 + 32];
        *(_QWORD *)v92 = v22;
        *((_QWORD *)v92 + 1) = v23;
        v162 = (void (*)(char *, char *, uint64_t))v23;
        if (v90)
        {
          while (1)
          {
            v93 = v21 - 1;
            if (v21 >= 4)
            {
              v98 = &v91[16 * v21];
              v99 = *((_QWORD *)v98 - 8);
              v100 = *((_QWORD *)v98 - 7);
              v104 = __OFSUB__(v100, v99);
              v101 = v100 - v99;
              if (v104)
                goto LABEL_123;
              v103 = *((_QWORD *)v98 - 6);
              v102 = *((_QWORD *)v98 - 5);
              v104 = __OFSUB__(v102, v103);
              v96 = v102 - v103;
              v97 = v104;
              if (v104)
                goto LABEL_124;
              v105 = v21 - 2;
              v106 = &v91[16 * v21 - 32];
              v108 = *(_QWORD *)v106;
              v107 = *((_QWORD *)v106 + 1);
              v104 = __OFSUB__(v107, v108);
              v109 = v107 - v108;
              if (v104)
                goto LABEL_126;
              v104 = __OFADD__(v96, v109);
              v110 = v96 + v109;
              if (v104)
                goto LABEL_129;
              if (v110 >= v101)
              {
                v128 = &v91[16 * v93];
                v130 = *(_QWORD *)v128;
                v129 = *((_QWORD *)v128 + 1);
                v104 = __OFSUB__(v129, v130);
                v131 = v129 - v130;
                if (v104)
                  goto LABEL_133;
                v121 = v96 < v131;
                goto LABEL_93;
              }
            }
            else
            {
              if (v21 != 3)
              {
                v122 = *((_QWORD *)v19 + 4);
                v123 = *((_QWORD *)v19 + 5);
                v104 = __OFSUB__(v123, v122);
                v115 = v123 - v122;
                v116 = v104;
                goto LABEL_87;
              }
              v95 = *((_QWORD *)v19 + 4);
              v94 = *((_QWORD *)v19 + 5);
              v104 = __OFSUB__(v94, v95);
              v96 = v94 - v95;
              v97 = v104;
            }
            if ((v97 & 1) != 0)
              goto LABEL_125;
            v105 = v21 - 2;
            v111 = &v91[16 * v21 - 32];
            v113 = *(_QWORD *)v111;
            v112 = *((_QWORD *)v111 + 1);
            v114 = __OFSUB__(v112, v113);
            v115 = v112 - v113;
            v116 = v114;
            if (v114)
              goto LABEL_128;
            v117 = &v91[16 * v93];
            v119 = *(_QWORD *)v117;
            v118 = *((_QWORD *)v117 + 1);
            v104 = __OFSUB__(v118, v119);
            v120 = v118 - v119;
            if (v104)
              goto LABEL_131;
            if (__OFADD__(v115, v120))
              goto LABEL_132;
            if (v115 + v120 >= v96)
            {
              v121 = v96 < v120;
LABEL_93:
              if (v121)
                v93 = v105;
              goto LABEL_95;
            }
LABEL_87:
            if ((v116 & 1) != 0)
              goto LABEL_127;
            v124 = &v91[16 * v93];
            v126 = *(_QWORD *)v124;
            v125 = *((_QWORD *)v124 + 1);
            v104 = __OFSUB__(v125, v126);
            v127 = v125 - v126;
            if (v104)
              goto LABEL_130;
            if (v127 < v115)
              goto LABEL_14;
LABEL_95:
            v132 = v93 - 1;
            if (v93 - 1 >= v21)
            {
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
              goto LABEL_143;
            }
            v133 = *a1;
            if (!*a1)
              goto LABEL_145;
            v134 = v19;
            v135 = &v91[16 * v132];
            v136 = *(_QWORD *)v135;
            v137 = &v91[16 * v93];
            v138 = *((_QWORD *)v137 + 1);
            sub_1D6887680(v133 + *(_QWORD *)(v167 + 72) * *(_QWORD *)v135, v133 + *(_QWORD *)(v167 + 72) * *(_QWORD *)v137, v133 + *(_QWORD *)(v167 + 72) * v138, v155);
            if (v2)
              goto LABEL_117;
            if (v138 < v136)
              goto LABEL_120;
            if (v93 > *((_QWORD *)v134 + 2))
              goto LABEL_121;
            *(_QWORD *)v135 = v136;
            *(_QWORD *)&v91[16 * v132 + 8] = v138;
            v139 = *((_QWORD *)v134 + 2);
            if (v93 >= v139)
              goto LABEL_122;
            v19 = v134;
            v21 = v139 - 1;
            memmove(&v91[16 * v93], v137 + 16, 16 * (v139 - 1 - v93));
            *((_QWORD *)v134 + 2) = v139 - 1;
            a1 = v163;
            v4 = v164;
            if (v139 <= 2)
              goto LABEL_14;
          }
        }
        v21 = 1;
LABEL_14:
        v12 = a1[1];
        v20 = v162;
        if ((uint64_t)v162 >= v12)
        {
          v18 = v155;
          if (v21 < 2)
          {
LABEL_117:
            swift_bridgeObjectRelease();
            *(_QWORD *)(v148 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
LABEL_104:
          v140 = *a1;
          while (1)
          {
            v141 = v21 - 2;
            if (v21 < 2)
              goto LABEL_135;
            if (!v140)
              goto LABEL_147;
            v142 = v19;
            v143 = v19 + 32;
            v144 = *(_QWORD *)&v19[16 * v141 + 32];
            v145 = *(_QWORD *)&v19[16 * v21 + 24];
            sub_1D6887680(v140 + *(_QWORD *)(v167 + 72) * v144, v140 + *(_QWORD *)(v167 + 72) * *(_QWORD *)&v143[16 * v21 - 16], v140 + *(_QWORD *)(v167 + 72) * v145, v18);
            if (v2)
              goto LABEL_117;
            if (v145 < v144)
              goto LABEL_136;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v142 = sub_1D62666D4((uint64_t)v142);
            if (v141 >= *((_QWORD *)v142 + 2))
              goto LABEL_137;
            v146 = &v142[16 * v141 + 32];
            *(_QWORD *)v146 = v144;
            *((_QWORD *)v146 + 1) = v145;
            v147 = *((_QWORD *)v142 + 2);
            if (v21 > v147)
              goto LABEL_138;
            v19 = v142;
            memmove(&v142[16 * v21 + 16], &v142[16 * v21 + 32], 16 * (v147 - v21));
            *((_QWORD *)v142 + 2) = v147 - 1;
            v21 = v147 - 1;
            if (v147 <= 2)
              goto LABEL_117;
          }
        }
      }
    }
    result = sub_1D6E28004();
    __break(1u);
    return result;
  }
  if (v12 < 0)
    goto LABEL_140;
  if (v12)
    return sub_1D68873E4(0, v12, 1, a1);
  return result;
}

uint64_t sub_1D68873E4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  void *v25;
  double v26;
  double v27;
  void *v28;
  double v29;
  double v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;

  v39 = a1;
  v7 = sub_1D6E22388();
  v8 = *(_QWORD **)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v45 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v42 = (char *)&v37 - v12;
  result = MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v37 - v14;
  v44 = a3;
  v38 = a2;
  if (a3 != a2)
  {
    v15 = v8[9];
    v40 = (void (*)(char *, uint64_t, uint64_t))v8[2];
    v49 = v15 * (v44 - 1);
    v43 = v15;
    v16 = v15 * v44;
    v47 = a4;
LABEL_5:
    v17 = 0;
    v48 = v39;
    while (1)
    {
      v18 = *a4;
      v46 = v16 + v17;
      v19 = v16 + v17 + v18;
      v20 = v41;
      v21 = v16;
      v22 = v8;
      v23 = v40;
      v40(v41, v19, v7);
      v24 = v42;
      v23(v42, v49 + v17 + v18, v7);
      v8 = v22;
      v16 = v21;
      v25 = (void *)sub_1D6E2234C();
      objc_msgSend(v25, sel_sortingScore);
      v27 = v26;

      v28 = (void *)sub_1D6E2234C();
      objc_msgSend(v28, sel_sortingScore);
      v30 = v29;

      v31 = (void (*)(char *, uint64_t))v8[1];
      v31(v24, v7);
      v32 = v20;
      a4 = v47;
      result = ((uint64_t (*)(char *, uint64_t))v31)(v32, v7);
      if (v30 >= v27)
      {
LABEL_4:
        v49 += v43;
        v16 = v21 + v43;
        if (++v44 == v38)
          return result;
        goto LABEL_5;
      }
      v33 = *a4;
      if (!*a4)
        break;
      v34 = v33 + v49 + v17;
      v35 = v8;
      v36 = (void (*)(char *, uint64_t, uint64_t))v8[4];
      v36(v45, v33 + v21 + v17, v7);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v36)(v34, v45, v7);
      v17 -= v43;
      a4 = v47;
      ++v48;
      v8 = v35;
      if (v44 == v48)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D6887680(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v20)(char *, unint64_t, uint64_t);
  char *v21;
  char *v22;
  void *v23;
  double v24;
  double v25;
  void *v26;
  double v27;
  double v28;
  void (*v29)(char *, uint64_t);
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  BOOL v34;
  unint64_t v35;
  char *v36;
  void (*v37)(char *, unint64_t, uint64_t);
  char *v38;
  unint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  unint64_t v41;
  void *v42;
  double v43;
  double v44;
  void *v45;
  double v46;
  double v47;
  void (*v48)(char *, uint64_t);
  BOOL v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t result;
  uint64_t v54;
  unint64_t v55;
  void (*v56)(char *, unint64_t, uint64_t);
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;

  v58 = a3;
  v7 = sub_1D6E22388();
  v8 = MEMORY[0x1E0C80A78](v7);
  v60 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v54 - v10;
  v61 = v11;
  v12 = *(_QWORD *)(v11 + 72);
  if (!v12)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v12 == -1)
    goto LABEL_62;
  v13 = v58 - a2;
  if (v58 - a2 == 0x8000000000000000 && v12 == -1)
    goto LABEL_63;
  v14 = (uint64_t)(a2 - a1) / v12;
  v64 = a1;
  v63 = a4;
  v15 = v13 / v12;
  if (v14 >= v13 / v12)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      v17 = v15 * v12;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v33 = a4 + v17;
      v62 = a4 + v17;
      v64 = a2;
      v34 = v17 < 1 || a1 >= a2;
      v35 = v58;
      if (!v34)
      {
        v36 = v60;
        v37 = *(void (**)(char *, unint64_t, uint64_t))(v61 + 16);
        v55 = a4;
        v56 = v37;
        v57 = a1;
        do
        {
          v58 = v35 - v12;
          v38 = v59;
          v39 = v35;
          v40 = v56;
          v56(v59, v33 - v12, v7);
          v41 = a2 - v12;
          v40(v36, a2 - v12, v7);
          v42 = (void *)sub_1D6E2234C();
          objc_msgSend(v42, sel_sortingScore);
          v44 = v43;

          v45 = (void *)sub_1D6E2234C();
          objc_msgSend(v45, sel_sortingScore);
          v47 = v46;

          v48 = *(void (**)(char *, uint64_t))(v61 + 8);
          v48(v36, v7);
          v48(v38, v7);
          if (v47 >= v44)
          {
            v52 = v62;
            v62 -= v12;
            v35 = v58;
            if (v39 < v52 || v58 >= v52)
            {
              swift_arrayInitWithTakeFrontToBack();
              v41 = a2;
              v50 = v55;
              v51 = v57;
            }
            else
            {
              v51 = v57;
              if (v39 != v52)
                swift_arrayInitWithTakeBackToFront();
              v41 = a2;
              v50 = v55;
            }
          }
          else
          {
            v35 = v58;
            if (v39 < a2 || v58 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v50 = v55;
              v51 = v57;
            }
            else
            {
              v49 = v39 == a2;
              v50 = v55;
              v51 = v57;
              if (!v49)
                swift_arrayInitWithTakeBackToFront();
            }
            v64 -= v12;
          }
          v33 = v62;
          if (v62 <= v50)
            break;
          a2 = v41;
        }
        while (v41 > v51);
      }
      goto LABEL_60;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = v14 * v12;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v18 = a4 + v16;
    v62 = a4 + v16;
    if (v16 >= 1 && a2 < v58)
    {
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v61 + 16);
      v21 = v59;
      do
      {
        v20(v21, a2, v7);
        v22 = v60;
        v20(v60, a4, v7);
        v23 = (void *)sub_1D6E2234C();
        objc_msgSend(v23, sel_sortingScore);
        v25 = v24;

        v26 = (void *)sub_1D6E2234C();
        objc_msgSend(v26, sel_sortingScore);
        v28 = v27;

        v29 = *(void (**)(char *, uint64_t))(v61 + 8);
        v29(v22, v7);
        v29(v21, v7);
        v30 = v64;
        if (v28 >= v25)
        {
          v32 = v63 + v12;
          if (v64 < v63 || v64 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v64 != v63)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v63 = v32;
          v31 = a2;
        }
        else
        {
          v31 = a2 + v12;
          if (v64 < a2 || v64 >= v31)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v64 == a2)
          {
            v30 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v64 = v30 + v12;
        a4 = v63;
        if (v63 >= v18)
          break;
        a2 = v31;
      }
      while (v31 < v58);
    }
LABEL_60:
    sub_1D6266024(&v64, &v63, (uint64_t *)&v62);
    return 1;
  }
LABEL_64:
  result = sub_1D6E280A0();
  __break(1u);
  return result;
}

uint64_t sub_1D6887BC8()
{
  return sub_1D6885604();
}

uint64_t sub_1D6887BE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D68856B0(a1, a2, v2);
}

void sub_1D6887BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1D688611C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1D6887C00()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D6887C2C(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1D68865AC(a1, a2, *(void (**)(id))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(uint64_t))(v2 + 32));
}

uint64_t sub_1D6887C3C()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultQueue);
  objc_msgSend(v2, sel_addTransactionObserver_, *(_QWORD *)(v1 + 16));

  sub_1D5FCAF58();
  swift_allocObject();
  return sub_1D6E1AC90();
}

uint64_t sub_1D6887CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D6E27EA8();
  swift_bridgeObjectRelease();
  v0 = type metadata accessor for SportsSection();
  v1 = swift_bridgeObjectRetain();
  MEMORY[0x1D828F5BC](v1, v0);
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  v2 = swift_bridgeObjectRetain();
  MEMORY[0x1D828F5BC](v2, v0);
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  return 0x3D73656F7265687BLL;
}

uint64_t sub_1D6887DB4()
{
  return sub_1D6887CAC();
}

ValueMetadata *type metadata accessor for SportsSectionCurationResult()
{
  return &type metadata for SportsSectionCurationResult;
}

ValueMetadata *type metadata accessor for SportsSectionBuilderResult()
{
  return &type metadata for SportsSectionBuilderResult;
}

uint64_t sub_1D6887DDC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  swift_getObjectType();
  v3 = MEMORY[0x1D82919D4](v1 + OBJC_IVAR____TtC7NewsUI226MagazineSectionsInteractor_delegate);
  if (v3)
  {
    if (MEMORY[0x1D82919D4](v3 + 16))
    {
      sub_1D6888A2C();
      swift_unknownObjectRelease();
    }
    v3 = swift_unknownObjectRelease();
  }
  MEMORY[0x1E0C80A78](v3);
  sub_1D6E1AE1C();
  sub_1D5F99504();
  v4 = (void *)sub_1D6E27674();
  sub_1D6E1AC3C();
  swift_release();

  v5 = (void *)sub_1D6E27674();
  sub_1D6E1AC6C();
  swift_release();
  swift_release();

  v6 = (void *)sub_1D6E245CC();
  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = a1;
  v9 = a1;

  return swift_release();
}

void sub_1D6887FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;

  sub_1D6322FEC();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6888740(a1, (uint64_t)v8);
  v9 = sub_1D6E241E8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    sub_1D6888784((uint64_t)v8);
    swift_beginAccess();
    v10 = MEMORY[0x1D82919D4](a2 + 16);
    if (v10)
    {
      v11 = (void *)v10;
      *(&v14 - 2) = MEMORY[0x1E0C80A78](v10);
      *(&v14 - 1) = a3;
      sub_1D6E1AE1C();
      sub_1D5F99504();
      v12 = (void *)sub_1D6E27674();
      type metadata accessor for MagazineSectionsInteractor();
      sub_1D6E1AC3C();
      swift_release();

      v13 = (void *)sub_1D6E27674();
      sub_1D6E1AC6C();

      swift_release();
      swift_release();

    }
  }
  else
  {
    sub_1D6888784((uint64_t)v8);
  }
}

uint64_t sub_1D68881F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = a2 + OBJC_IVAR____TtC7NewsUI226MagazineSectionsInteractor_delegate;
  v5 = MEMORY[0x1D82919D4](a2 + OBJC_IVAR____TtC7NewsUI226MagazineSectionsInteractor_delegate);
  if (v5)
  {
    v6 = MEMORY[0x1D82919D4](v5 + 16);
    if (v6)
    {
      sub_1D6888824(v2, v3, v6);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  result = MEMORY[0x1D82919D4](v4);
  if (result)
  {
    if (MEMORY[0x1D82919D4](result + 16))
    {
      sub_1D6888A2C();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D68882B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_1D6E241E8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  sub_1D6322FEC();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6E245D8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    result = MEMORY[0x1D82919D4](a2 + OBJC_IVAR____TtC7NewsUI226MagazineSectionsInteractor_delegate);
    if (!result)
      return result;
    v14 = result;
    if (qword_1EFFD2F38 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v3, (uint64_t)qword_1F00AC578);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v15, v3);
    v16 = MEMORY[0x1D82919D4](v14 + 16);
    if (!v16)
    {
      v7 = v9;
      goto LABEL_12;
    }
    sub_1D6888BD8((uint64_t)v9, v16);
    v7 = v9;
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v3);
  v17 = MEMORY[0x1D82919D4](a2 + OBJC_IVAR____TtC7NewsUI226MagazineSectionsInteractor_delegate);
  if (v17)
  {
    v18 = MEMORY[0x1D82919D4](v17 + 16);
    if (!v18)
    {
LABEL_12:
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    sub_1D6888BD8((uint64_t)v7, v18);
LABEL_10:
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t type metadata accessor for MagazineSectionsInteractor()
{
  return objc_opt_self();
}

void sub_1D6888544(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v2 = sub_1D6E1E590();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1D82919D4](a1 + 16);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = type metadata accessor for MagazineSectionsViewController();
    v9 = sub_1D5E6D8C0(&qword_1ED5F8FD8, (uint64_t (*)(uint64_t))type metadata accessor for MagazineSectionsViewController, (uint64_t)&unk_1D6E63D0C);
    v10 = MEMORY[0x1D8285488](v8, v9);
    if (v10)
    {
      v11 = (void *)v10;
      if (objc_msgSend(v7, sel_view))
      {
        sub_1D6E1F28C();
        objc_msgSend(objc_allocWithZone((Class)sub_1D6E1FE5C()), sel_init);
        (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB9470], v2);
        v12 = (void *)sub_1D6E1F280();
        sub_1D6887DDC(v12);
        swift_unknownObjectRelease();

      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1D68886D4()
{
  return sub_1D68887C0();
}

uint64_t sub_1D68886E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D688870C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1D6888738(uint64_t a1)
{
  uint64_t v1;

  sub_1D6887FAC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D6888740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D6322FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6888784(uint64_t a1)
{
  uint64_t v2;

  sub_1D6322FEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D68887C0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  type metadata accessor for MagazineSectionsDataManager();
  return sub_1D6205048(v1);
}

void sub_1D6888824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;

  ObjectType = swift_getObjectType();
  v6 = a3 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_presentation;
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_presentation + 17) != 1
    || (v8 = *(_QWORD *)v6,
        v7 = *(_QWORD *)(v6 + 8),
        v9 = *(_BYTE *)(v6 + 16),
        v10 = swift_bridgeObjectRetain(),
        v11 = sub_1D68530B8(v10, a2),
        sub_1D63D6920(v8, v7, v9, 1),
        (v11 & 1) == 0))
  {
    sub_1D63D6E74(a3, a2, (uint64_t)&v24);
    v12 = v25;
    v23 = v24;
    v13 = v26;
    v14 = *(_QWORD *)v6;
    v15 = *(_QWORD *)(v6 + 8);
    v16 = *(_BYTE *)(v6 + 17);
    *(_QWORD *)v6 = a2;
    *(_QWORD *)(v6 + 8) = 0;
    v17 = *(_BYTE *)(v6 + 16);
    *(_WORD *)(v6 + 16) = 256;
    swift_bridgeObjectRetain();
    sub_1D63D6920(v14, v15, v17, v16);
    sub_1D6E1AE64();
    v18 = sub_1D5E6D8C0(&qword_1ED5F8FD8, (uint64_t (*)(uint64_t))type metadata accessor for MagazineSectionsViewController, (uint64_t)&unk_1D6E63D0C);
    v19 = MEMORY[0x1D8285488](ObjectType, v18);
    if (v19)
    {
      v20 = (void *)v19;
      if (qword_1ED605258 != -1)
        swift_once();
      swift_getObjectType();
      sub_1D6E1F148();

    }
    v21 = MEMORY[0x1D8285488](ObjectType, v18);
    if (v21)
    {
      v22 = (void *)v21;
      swift_getObjectType();
      swift_retain();
      sub_1D6E1F154();

    }
    if (v13 != 255)
    {
      v24 = v23;
      v25 = v12;
      v26 = v13;
      sub_1D63D5188((uint64_t)&v24);
      sub_1D63D692C(v23, v12, v13);
    }
  }
}

uint64_t sub_1D6888A2C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  v0 = sub_1D6E1A6F0();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4250];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D62C8414(0, &qword_1ED5F7850, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D6E334D0;
  sub_1D6E1A6E4();
  sub_1D6E1A6D8();
  v7[1] = v5;
  sub_1D5E6D8C0((unint64_t *)&qword_1ED5F7C30, v1, MEMORY[0x1E0DB4258]);
  sub_1D62C8414(0, (unint64_t *)&unk_1ED5F98E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D5F6F874();
  sub_1D6E27D88();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1D6E19EBC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  return swift_release();
}

uint64_t sub_1D6888BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;

  v15[0] = a2;
  v16 = a1;
  v3 = sub_1D6E241E8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = sub_1D6E1A6F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(_QWORD *)(a2 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_eventManager);
  sub_1D62C8414(0, &qword_1ED5F7850, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D6E334D0;
  sub_1D6E1A6E4();
  sub_1D6E1A6D8();
  v17 = v10;
  sub_1D5E6D8C0((unint64_t *)&qword_1ED5F7C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4250], MEMORY[0x1E0DB4258]);
  sub_1D62C8414(0, (unint64_t *)&unk_1ED5F98E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D5F6F874();
  sub_1D6E27D88();
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16, v3);
  v12 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v12, (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  swift_retain();
  sub_1D6E19EBC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_1D6888E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D6E241E8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D6888E88()
{
  uint64_t v0;

  sub_1D6E241E8();
  return sub_1D63D748C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D6888EB8()
{
  uint64_t v0;

  return sub_1D63D7328(v0);
}

uint64_t sub_1D6888EC0()
{
  uint64_t v0;

  return sub_1D63D7084(v0);
}

uint64_t sub_1D6888ECC()
{
  sub_1D5E6D8C0(&qword_1ED62A0C0, type metadata accessor for TitleViewLayoutAttributes, (uint64_t)&unk_1D6E98F20);
  return sub_1D6E1FAB4();
}

uint64_t sub_1D6888F0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DBB638];
  v3 = sub_1D6E1F964();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

int *sub_1D6888F54@<X0>(double *a1@<X0>, double a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  double v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *result;
  _QWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  CGFloat v36;
  double v37;
  double v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  unsigned int v45;
  uint64_t v46;
  void *v47;
  id v48;
  unsigned __int8 v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  CGFloat v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  CGFloat v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  uint64_t v76;
  double v77;
  uint64_t inited;
  void *v79;
  uint64_t v80;
  id v81;
  CGFloat v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  void *v87;
  double v88;
  uint64_t v89;
  double v90;
  double v91;
  CGFloat v92;
  double v93;
  CGFloat v94;
  double v95;
  CGFloat v96;
  double v97;
  CGFloat v98;
  double v99;
  void *v100;
  double v101;
  CGFloat v102;
  double v103;
  double Width;
  double v105;
  void *v106;
  CGFloat v107;
  id v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  uint64_t v114;
  char v115;
  CGFloat MaxY;
  CGFloat v117;
  double v118;
  double v119;
  CGFloat v120;
  double v121;
  uint64_t v122;
  void **v123;
  void *v124;
  void *v125;
  id v126;
  id v127;
  uint64_t v128;
  CGFloat v129;
  id v130;
  void *v131;
  CGFloat v132;
  double v133;
  double v134;
  uint64_t v135;
  id v136;
  void *v137;
  void *v138;
  id v139;
  double v140;
  double v141;
  char *v142;
  double v143;
  double v144;
  CGFloat v145;
  CGFloat v146;
  CGFloat Height;
  double v148;
  double v149;
  double v150;
  CGFloat v151;
  CGFloat v152;
  CGFloat v153;
  uint64_t v154;
  double v155;
  double v156;
  double v157;
  double v158;
  double v159;
  double v160;
  double v161;
  double v162;
  double v163;
  double v164;
  double v165;
  CGFloat v166;
  CGFloat v167;
  double v168;
  double v169;
  CGFloat v170;
  CGFloat v171;
  double v172;
  double v173;
  uint64_t v174;
  uint64_t v175;
  int *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  CGFloat v180;
  uint64_t v181;
  double v182;
  uint64_t v183;
  uint64_t v184;
  CGFloat v185;
  double v186;
  CGFloat v187;
  CGFloat v188;
  CGFloat v189;
  uint64_t v190;
  int *v191;
  uint64_t v192;
  unint64_t v193;
  CGFloat MinX;
  double v195;
  int v196;
  char *v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  CGFloat v201;
  uint64_t v202;
  CGFloat v203;
  double v204;
  CGFloat v205;
  uint64_t v206;
  double v207;
  double v208;
  double v209;
  id v210;
  double v211;
  CGFloat v212;
  uint64_t v213;
  char *v214;
  CGFloat v215;
  uint64_t v216;
  unint64_t v217;
  __int128 v218;
  CGRect v219;
  CGRect v220;
  CGRect v221;
  CGRect v222;
  CGRect v223;
  CGRect v224;
  CGRect v225;
  CGRect v226;
  CGRect v227;
  CGRect v228;

  v4 = v3;
  v215 = a2;
  *(double *)&v7 = COERCE_DOUBLE(sub_1D6E16784());
  v8 = *(double *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)&v204 = (char *)&v187 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = COERCE_DOUBLE(sub_1D6E1FBEC());
  v208 = *(double *)(*(_QWORD *)&v209 - 8);
  MEMORY[0x1E0C80A78](*(_QWORD *)&v209);
  *(_QWORD *)&v207 = (char *)&v187 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, &qword_1ED615CB0, type metadata accessor for TitleViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v187 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  *(_QWORD *)&v212 = (char *)&v187 - v15;
  v16 = sub_1D6E1E608();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v187 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v187 - v21;
  v23 = a1[5];
  if (v23 == 0.0)
  {
    v26 = *((_QWORD *)a1 + 3);
    v25 = 1;
    if ((v26 & 0x2000000000000000) == 0)
      goto LABEL_5;
  }
  else
  {
    v24 = HIBYTE(*(_QWORD *)&v23) & 0xFLL;
    if ((*(_QWORD *)&v23 & 0x2000000000000000) == 0)
      v24 = (_QWORD)a1[4] & 0xFFFFFFFFFFFFLL;
    v25 = v24 == 0;
    v26 = *((_QWORD *)a1 + 3);
    if ((v26 & 0x2000000000000000) == 0)
    {
LABEL_5:
      if (((_QWORD)a1[2] & 0xFFFFFFFFFFFFLL) != 0)
        goto LABEL_11;
      goto LABEL_9;
    }
  }
  if ((v26 & 0xF00000000000000) != 0)
    goto LABEL_11;
LABEL_9:
  if (v25)
  {
    v27 = *MEMORY[0x1E0DBB2B8];
    v28 = sub_1D6E1F6F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(a3, v27, v28);
    result = (int *)type metadata accessor for TitleViewLayoutAttributes(0);
    v30 = (_QWORD *)(a3 + result[5]);
    *v30 = 0;
    v30[1] = 0;
    v30[2] = 0;
    v30[3] = 0x4020000000000000;
    v31 = (_OWORD *)(a3 + result[6]);
    *v31 = 0u;
    v31[1] = 0u;
    v32 = (_OWORD *)(a3 + result[7]);
    *v32 = 0u;
    v32[1] = 0u;
    v33 = a3 + result[8];
    *(_BYTE *)(v33 + 32) = 0;
    *(_OWORD *)v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    v34 = a3 + result[9];
    *(_OWORD *)v34 = 0u;
    *(_OWORD *)(v34 + 16) = 0u;
    *(_BYTE *)(v34 + 32) = 1;
    *(_BYTE *)(a3 + result[10]) = 0;
    *(_BYTE *)(a3 + result[11]) = 0;
    return result;
  }
LABEL_11:
  v203 = a1[4];
  v205 = v23;
  MinX = v8;
  v195 = *(double *)&v7;
  v211 = *(double *)&a1;
  v197 = v14;
  v200 = a3;
  v35 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v36 = v215;
  v35((char *)&v187 - v21, *(char **)&v215, v16);
  v198 = type metadata accessor for TitleViewLayoutOptions(0);
  LODWORD(v36) = *(unsigned __int8 *)(*(_QWORD *)&v36 + *(int *)(v198 + 32));
  sub_1D6E1E524();
  v38 = v37;
  v39 = (void *)sub_1D6E1E548();
  v40 = objc_msgSend(v39, sel_preferredContentSizeCategory);

  v199 = sub_1D6E27818();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 80));
  v201 = COERCE_DOUBLE(sub_1D6A818A4(SLOBYTE(v36)));
  v206 = v4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 80));
  v196 = LODWORD(v36);
  v210 = sub_1D6A819F8(SLOBYTE(v36));
  v41 = (void *)sub_1D6E1E56C();
  v42 = (void *)objc_opt_self();
  v43 = objc_msgSend(v42, sel_traitCollectionWithHorizontalSizeClass_, 1);
  v213 = v16;
  v44 = v43;
  v45 = objc_msgSend(v41, sel_containsTraitsInCollection_, v43);

  v46 = v213;
  v214 = v22;
  v35(v20, v22, v213);
  v202 = v17;
  if (v45)
  {
    v47 = (void *)sub_1D6E1E548();
    v48 = objc_msgSend(v42, sel_traitCollectionWithHorizontalSizeClass_, 1);
    v49 = objc_msgSend(v47, sel_containsTraitsInCollection_, v48);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v46);
    if ((v49 & 1) != 0)
    {
      v50 = 0xE700000000000000;
      v51 = 0x746361706D6F63;
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v46);
  }
  v50 = 0xEA00000000007463;
  v51 = 0x61706D6F636E6F6ELL;
LABEL_16:
  v52 = v210;
  v53 = v201;
  sub_1D5F094F4(0, (unint64_t *)&qword_1ED5F4E10, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_1D6E57830;
  *(_QWORD *)(v54 + 32) = sub_1D6E26FC0();
  *(_QWORD *)(v54 + 40) = v55;
  objc_msgSend(*(id *)&v53, sel_pointSize);
  *(_QWORD *)(v54 + 48) = sub_1D6E26FC0();
  *(_QWORD *)(v54 + 56) = v56;
  objc_msgSend(v52, sel_pointSize);
  *(_QWORD *)(v54 + 64) = sub_1D6E26FC0();
  *(_QWORD *)(v54 + 72) = v57;
  v58 = v211;
  v218 = **(_OWORD **)&v211;
  *(_OWORD *)(v54 + 80) = v218;
  *(_QWORD *)(v54 + 96) = v51;
  *(_QWORD *)(v54 + 104) = v50;
  v59 = *(_QWORD *)(*(_QWORD *)&v58 + 24);
  v201 = *(double *)(*(_QWORD *)&v58 + 16);
  *(CGFloat *)(v54 + 112) = v201;
  *(_QWORD *)(v54 + 120) = v59;
  v216 = 0;
  v217 = 0xE000000000000000;
  sub_1D605360C((uint64_t)&v218);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  v60 = v217;
  *(_QWORD *)(v54 + 128) = v216;
  *(_QWORD *)(v54 + 136) = v60;
  v216 = 0;
  v217 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  v61 = v217;
  *(_QWORD *)(v54 + 144) = v216;
  *(_QWORD *)(v54 + 152) = v61;
  v216 = v54;
  sub_1D5F094F4(0, (unint64_t *)&qword_1ED5F4070, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1D605ACC8();
  v62 = sub_1D6E268AC();
  v64 = v63;
  swift_bridgeObjectRelease();
  v216 = v62;
  v217 = v64;
  swift_retain();
  swift_bridgeObjectRetain();
  v65 = *(_QWORD *)&v212;
  sub_1D6E1AAEC();
  swift_bridgeObjectRelease();
  swift_release();
  v66 = type metadata accessor for TitleViewLayoutAttributes(0);
  v67 = *(_QWORD *)(v66 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66) == 1)
  {
    v190 = v67;
    v191 = (int *)v66;
    v192 = v62;
    v193 = v64;
    sub_1D688A750(v65);
    v68 = v198;
    v69 = v215;
    v70 = *(double *)(*(_QWORD *)&v215 + *(int *)(v198 + 28));
    sub_1D6E1E518();
    v72 = v70 - v71;
    v73 = v207;
    sub_1D6E1E4E8();
    sub_1D6E1FBE0();
    v75 = v74;
    (*(void (**)(double, double))(*(_QWORD *)&v208 + 8))(COERCE_DOUBLE(*(_QWORD *)&v73), COERCE_DOUBLE(*(_QWORD *)&v209));
    v76 = *(int *)(v68 + 24);
    v187 = *(double *)(*(_QWORD *)&v69 + *(int *)(v68 + 20));
    v77 = *(double *)(*(_QWORD *)&v69 + v76);
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4E90, (uint64_t (*)(uint64_t))sub_1D5FAC7B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D6E32F90;
    v79 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
    v80 = sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4730);
    *(_QWORD *)(inited + 64) = v80;
    *(CGFloat *)(inited + 40) = v53;
    swift_bridgeObjectRetain();
    v188 = COERCE_DOUBLE(v79);
    v209 = COERCE_DOUBLE(*(id *)&v53);
    sub_1D5F71A68(inited);
    v81 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v82 = v201;
    v83 = (void *)sub_1D6E26948();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    v85 = v84;
    v86 = COERCE_DOUBLE(sub_1D5E6D8C0((unint64_t *)&qword_1ED5F44E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D6E30E0C));
    v198 = v85;
    v189 = v86;
    v87 = (void *)sub_1D6E267C8();
    swift_bridgeObjectRelease();
    v88 = COERCE_DOUBLE(objc_msgSend(v81, sel_initWithString_attributes_, v83, v87));

    v89 = HIBYTE(v59) & 0xF;
    if ((v59 & 0x2000000000000000) == 0)
      v89 = *(_QWORD *)&v82 & 0xFFFFFFFFFFFFLL;
    v208 = v77;
    if (v89)
    {
      sub_1D6E1E518();
      sub_1D6E27260();
      objc_msgSend(*(id *)&v88, sel_boundingRectWithSize_options_context_, 1, 0, v38 - v90, 1.79769313e308);
      v92 = v91;
      v94 = v93;
      v96 = v95;
      v98 = v97;
    }
    else
    {
      v92 = 0.0;
      v94 = 0.0;
      v96 = 0.0;
      v98 = 0.0;
    }
    v99 = v211;
    v100 = v210;
    v101 = v209;
    v102 = v88;
    v103 = v72 + v75;
    v219.origin.x = v92;
    v219.origin.y = v94;
    v219.size.width = v96;
    v219.size.height = v98;
    Width = CGRectGetWidth(v219);
    v220.origin.x = v92;
    v220.origin.y = v94;
    v220.size.width = v96;
    v220.size.height = v98;
    v105 = ceil(CGRectGetHeight(v220));
    v106 = *(void **)(*(_QWORD *)&v99 + 48);
    v215 = v105;
    v207 = v103;
    if (v106)
    {
      v107 = v187;
      v108 = v106;
      objc_msgSend(v108, sel_size);
      v110 = v109;
      objc_msgSend(v108, sel_size);
      if (v110 > v111)
        v112 = v110;
      else
        v112 = v111;
      v113 = ceil(v112);
      v114 = (uint64_t)v197;
      v115 = v196;
      if (v113 <= 0.0)
      {

        v198 = 0;
        v195 = 0.0;
        v189 = 0.0;
        v188 = 0.0;
        v120 = 0.0;
        MinX = 0.0;
        v212 = v38;
      }
      else
      {
        v221.size.width = v38 - v113;
        v195 = v38 + v113 - v103;
        v221.origin.x = v103;
        v221.origin.y = v107;
        v212 = v38 - v113;
        v221.size.height = v105;
        MaxY = CGRectGetMaxY(v221);
        v198 = *(_QWORD *)&v113;
        v117 = MaxY - v113;
        objc_msgSend(*(id *)&v101, sel_descender);
        v119 = v118;

        v189 = v117 + v119;
        v188 = 0.0;
        v120 = 0.0;
        MinX = 0.0;
      }
      v149 = v38;
      v150 = 0.0;
      v154 = v200;
      v155 = v107;
    }
    else
    {
      v121 = ceil(Width);
      v212 = v121;
      if (v205 == 0.0)
      {
        v198 = 0;
        v195 = 0.0;
        v189 = 0.0;
        v188 = 0.0;
        v120 = 0.0;
        MinX = 0.0;
        v149 = v38;
        v150 = 0.0;
        v154 = v200;
        v114 = (uint64_t)v197;
        v115 = v196;
        v155 = v187;
      }
      else
      {
        v201 = v88;
        v122 = swift_initStackObject();
        v123 = (void **)MEMORY[0x1E0DC1140];
        *(_OWORD *)(v122 + 16) = xmmword_1D6E334D0;
        v124 = *v123;
        *(_QWORD *)(v122 + 32) = *v123;
        v125 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v126 = v124;
        v127 = objc_msgSend(v125, sel_secondaryLabelColor);
        v128 = sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4770);
        *(_QWORD *)(v122 + 40) = v127;
        v129 = v188;
        *(_QWORD *)(v122 + 64) = v128;
        *(CGFloat *)(v122 + 72) = v129;
        sub_1D6E23BB8();
        v130 = *(id *)&v129;
        v131 = (void *)sub_1D6E279F8();
        v132 = MinX;
        v133 = v204;
        v134 = v195;
        (*(void (**)(double, _QWORD, double))(*(_QWORD *)&MinX + 104))(COERCE_DOUBLE(*(_QWORD *)&v204), *MEMORY[0x1E0DB6098], COERCE_DOUBLE(*(_QWORD *)&v195));
        v135 = sub_1D6E23BA0();

        (*(void (**)(double, double))(*(_QWORD *)&v132 + 8))(COERCE_DOUBLE(*(_QWORD *)&v133), COERCE_DOUBLE(*(_QWORD *)&v134));
        *(_QWORD *)(v122 + 104) = v80;
        *(_QWORD *)(v122 + 80) = v135;
        sub_1D5F71A68(v122);
        v136 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
        v137 = (void *)sub_1D6E26948();
        swift_bridgeObjectRelease();
        v138 = (void *)sub_1D6E267C8();
        swift_bridgeObjectRelease();
        v139 = objc_msgSend(v136, sel_initWithString_attributes_, v137, v138);

        if (v139)
        {
          sub_1D6E1E518();
          sub_1D6E27260();
          objc_msgSend(v139, sel_boundingRectWithSize_options_context_, 33, 0, v38 - v140, 1.79769313e308);
          v205 = v141;
          v204 = *(double *)&v142;
          v203 = v143;
          v145 = v144;
          v222.origin.x = v103;
          v146 = v187;
          v222.origin.y = v187;
          v222.size.width = v121;
          v222.size.height = v105;
          Height = CGRectGetHeight(v222);
          v198 = 0;
          if (Height == 0.0)
            v148 = 0.0;
          else
            v148 = 8.0;
          v223.origin.x = v103;
          v223.origin.y = v146;
          v223.size.width = v121;
          v223.size.height = v105;
          MinX = CGRectGetMinX(v223);
          v224.origin.x = v103;
          v224.origin.y = v146;
          v224.size.width = v121;
          v224.size.height = v105;
          v149 = v38;
          v150 = CGRectGetMaxY(v224) + v148;
          v151 = v205;
          v225.origin.x = v205;
          v152 = v204;
          v225.origin.y = v204;
          v153 = v203;
          v225.size.width = v203;
          v225.size.height = v145;
          v188 = CGRectGetWidth(v225);
          v226.origin.x = v151;
          v226.origin.y = v152;
          v226.size.width = v153;
          v226.size.height = v145;
          v120 = CGRectGetHeight(v226);

          v195 = 0.0;
          v189 = 0.0;
          v154 = v200;
          v114 = (uint64_t)v197;
          v115 = v196;
          v101 = v209;
          v155 = v146;
        }
        else
        {
          v198 = 0;
          v195 = 0.0;
          v189 = 0.0;
          v188 = 0.0;
          v120 = 0.0;
          MinX = 0.0;
          v149 = v38;
          v150 = 0.0;
          v154 = v200;
          v114 = (uint64_t)v197;
          v115 = v196;
          v101 = v209;
          v155 = v187;
        }
        v102 = v201;
        v100 = v210;
      }
    }
    v156 = sub_1D6575498(*(uint64_t *)&v211);
    v158 = v157;
    v211 = v149;
    sub_1D6E1E518();
    v160 = v149 - v156 - v159 + -12.0;
    objc_msgSend(*(id *)&v101, sel_lineHeight);
    v162 = v161;
    objc_msgSend(*(id *)&v101, sel_descender);
    v205 = v155 + v162 + v163 - v158;
    v209 = v156;
    if (v156 != 0.0 || v158 != 0.0)
    {
      objc_msgSend(*(id *)&v102, sel_boundingRectWithSize_options_context_, 3, 0, v160, 1.79769313e308);
      v212 = v164;
      v215 = v165;
    }
    v204 = v158;
    v166 = MinX;
    v227.origin.x = MinX;
    v227.origin.y = v150;
    v167 = v188;
    v227.size.width = v188;
    v201 = v120;
    v227.size.height = v120;
    v168 = CGRectGetMaxY(v227);
    v169 = v207;
    v228.origin.x = v207;
    v228.origin.y = v155;
    v203 = v160;
    v170 = v212;
    v228.size.width = v212;
    v171 = v215;
    v228.size.height = v215;
    v172 = CGRectGetMaxY(v228);
    if (v168 > v172)
      v172 = v168;
    v173 = v208 + ceil(v172);
    v174 = *MEMORY[0x1E0DBB2B8];
    v175 = sub_1D6E1F6F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 104))(v154, v174, v175);
    v176 = v191;
    v177 = v154 + v191[5];
    *(_QWORD *)v177 = 0;
    *(_QWORD *)(v177 + 8) = 0;
    *(double *)(v177 + 16) = v211;
    *(double *)(v177 + 24) = v173;
    v178 = v154 + v176[6];
    *(double *)v178 = v169;
    *(double *)(v178 + 8) = v155;
    *(CGFloat *)(v178 + 16) = v170;
    *(CGFloat *)(v178 + 24) = v171;
    v179 = v154 + v176[7];
    *(CGFloat *)v179 = v166;
    *(double *)(v179 + 8) = v150;
    v180 = v201;
    *(CGFloat *)(v179 + 16) = v167;
    *(CGFloat *)(v179 + 24) = v180;
    v181 = v154 + v176[8];
    v182 = v189;
    *(double *)v181 = v195;
    *(double *)(v181 + 8) = v182;
    v183 = v198;
    *(_QWORD *)(v181 + 16) = v198;
    *(_QWORD *)(v181 + 24) = v183;
    *(_BYTE *)(v181 + 32) = 0;
    v184 = v154 + v176[9];
    v185 = v205;
    *(CGFloat *)v184 = v203;
    *(CGFloat *)(v184 + 8) = v185;
    v186 = v204;
    *(double *)(v184 + 16) = v209;
    *(double *)(v184 + 24) = v186;
    *(_BYTE *)(v184 + 32) = 0;
    *(_BYTE *)(v154 + v176[10]) = v199 & 1;
    *(_BYTE *)(v154 + v176[11]) = v115;
    sub_1D688A7A4(v154, v114);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v190 + 56))(v114, 0, 1, v176);
    v216 = v192;
    v217 = v193;
    swift_retain();
    sub_1D6E1AAF8();

    swift_release();
    return (int *)(*(uint64_t (**)(char *, uint64_t))(v202 + 8))(v214, v213);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v202 + 8))(v214, v213);
    swift_bridgeObjectRelease();

    return (int *)sub_1D60A9F44(v65, v200);
  }
}

uint64_t type metadata accessor for TitleViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

_QWORD *sub_1D688A138(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D6E1F6F4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_OWORD *)((char *)a1 + v8);
    v11 = (_OWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_OWORD *)((char *)a1 + v9);
    v14 = (_OWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (_OWORD *)((char *)a1 + v16);
    v19 = (_OWORD *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (char *)a1 + v17;
    v22 = (char *)a2 + v17;
    v21[32] = v22[32];
    v23 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v23;
    v24 = a3[9];
    v25 = a3[10];
    v26 = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    v28 = *(_OWORD *)v27;
    v29 = *((_OWORD *)v27 + 1);
    v26[32] = v27[32];
    *(_OWORD *)v26 = v28;
    *((_OWORD *)v26 + 1) = v29;
    *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  }
  return a1;
}

uint64_t sub_1D688A234(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;

  v6 = sub_1D6E1F6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_OWORD *)(a1 + v15);
  v18 = (_OWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a1 + v16;
  v21 = a2 + v16;
  *(_BYTE *)(v20 + 32) = *(_BYTE *)(v21 + 32);
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = a1 + v23;
  v26 = (__int128 *)(a2 + v23);
  v27 = *v26;
  v28 = v26[1];
  *(_BYTE *)(v25 + 32) = *((_BYTE *)v26 + 32);
  *(_OWORD *)v25 = v27;
  *(_OWORD *)(v25 + 16) = v28;
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1D688A304(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  __int128 v25;

  v6 = sub_1D6E1F6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_BYTE *)(v18 + 32);
  v20 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v20;
  *(_BYTE *)(v17 + 32) = v19;
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = (__int128 *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *(_BYTE *)(v22 + 32) = *((_BYTE *)v23 + 32);
  *(_OWORD *)v22 = v25;
  *(_OWORD *)(v22 + 16) = v24;
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1D688A428(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;

  v6 = sub_1D6E1F6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_OWORD *)(a1 + v15);
  v18 = (_OWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a1 + v16;
  v21 = a2 + v16;
  *(_BYTE *)(v20 + 32) = *(_BYTE *)(v21 + 32);
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = a1 + v23;
  v26 = (__int128 *)(a2 + v23);
  v27 = *v26;
  v28 = v26[1];
  *(_BYTE *)(v25 + 32) = *((_BYTE *)v26 + 32);
  *(_OWORD *)v25 = v27;
  *(_OWORD *)(v25 + 16) = v28;
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1D688A4F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;

  v6 = sub_1D6E1F6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_OWORD *)(a1 + v15);
  v18 = (_OWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a1 + v16;
  v21 = a2 + v16;
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_BYTE *)(v20 + 32) = *(_BYTE *)(v21 + 32);
  v23 = a3[9];
  v24 = a3[10];
  v25 = a1 + v23;
  v26 = (__int128 *)(a2 + v23);
  v27 = *v26;
  v28 = v26[1];
  *(_BYTE *)(v25 + 32) = *((_BYTE *)v26 + 32);
  *(_OWORD *)v25 = v27;
  *(_OWORD *)(v25 + 16) = v28;
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1D688A5C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D688A5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1D6E1F6F4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 40));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1D688A660()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D688A66C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D6E1F6F4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 40)) = a2 + 1;
  return result;
}

uint64_t sub_1D688A6E4()
{
  return sub_1D5E6D8C0(&qword_1ED62A0C8, type metadata accessor for TitleViewLayoutAttributes, (uint64_t)&unk_1D6E98EE8);
}

uint64_t sub_1D688A710()
{
  return sub_1D5E6D8C0(&qword_1ED62A0C0, type metadata accessor for TitleViewLayoutAttributes, (uint64_t)&unk_1D6E98F20);
}

uint64_t type metadata accessor for TitleViewLayoutOptions(uint64_t a1)
{
  return sub_1D5E6E20C(a1, qword_1ED629588);
}

uint64_t sub_1D688A750(uint64_t a1)
{
  uint64_t v2;

  sub_1D5E847C4(0, &qword_1ED615CB0, type metadata accessor for TitleViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D688A7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TitleViewLayoutAttributes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1D688A7E8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D6E1E608();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v9 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
  }
  return a1;
}

uint64_t sub_1D688A88C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D6E1E608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_1D688A904(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1D6E1E608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1D688A984(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D6E1E608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_1D688A9FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D6E1E608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_1D688AA74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D688AA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1D6E1E608();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_1D688AAF8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D688AB04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D6E1E608();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
  return result;
}

uint64_t sub_1D688AB7C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D6E1E608();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TitleViewContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D688AC4C + 4 * byte_1D6E98E05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D688AC80 + 4 * byte_1D6E98E00[v4]))();
}

uint64_t sub_1D688AC80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D688AC88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D688AC90);
  return result;
}

uint64_t sub_1D688AC9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D688ACA4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D688ACA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D688ACB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TitleViewContext()
{
  return &type metadata for TitleViewContext;
}

unint64_t sub_1D688ACD0()
{
  unint64_t result;

  result = qword_1EFFF4090;
  if (!qword_1EFFF4090)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E99064, &type metadata for TitleViewContext);
    atomic_store(result, (unint64_t *)&qword_1EFFF4090);
  }
  return result;
}

uint64_t sub_1D688AD14()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D688AD20(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 217)
  {
    v4 = *a1;
    if (v4 >= 0x27)
      return v4 - 38;
    else
      return 0;
  }
  else
  {
    v8 = sub_1D6E2444C();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1D688AD94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1D688ADA0(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 217)
  {
    *result = a2 + 38;
  }
  else
  {
    v7 = sub_1D6E2444C();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D688AE10@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  char v19;

  v16 = a2;
  v17 = sub_1D6E2444C();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D688B1EC(0, &qword_1ED6246B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D688B1A8();
  sub_1D6E2846C();
  if (!v2)
  {
    v11 = v16;
    v19 = 1;
    sub_1D5EFD2A8(&qword_1ED5F3B28, MEMORY[0x1E0D5D920]);
    v12 = v17;
    sub_1D6E28184();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *v11 = 11;
    v13 = type metadata accessor for SportsTopStoriesTagFeedGroupConfigData();
    (*(void (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v11[*(int *)(v13 + 20)], v18, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D688AFC4(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1D688B1EC(0, &qword_1EFFF4098, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D688B1A8();
  sub_1D6E28478();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1D5FD2CA8();
  sub_1D6E28238();
  if (!v2)
  {
    type metadata accessor for SportsTopStoriesTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1D6E2444C();
    sub_1D5EFD2A8(&qword_1ED5F3B20, MEMORY[0x1E0D5D918]);
    sub_1D6E28238();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D688B130()
{
  sub_1D688B1A8();
  return sub_1D6E28538();
}

uint64_t sub_1D688B158()
{
  sub_1D688B1A8();
  return sub_1D6E28544();
}

uint64_t sub_1D688B180@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1D688AE10(a1, a2);
}

uint64_t sub_1D688B194(_QWORD *a1)
{
  return sub_1D688AFC4(a1);
}

unint64_t sub_1D688B1A8()
{
  unint64_t result;

  result = qword_1ED621818;
  if (!qword_1ED621818)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E991F4, &type metadata for SportsTopStoriesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED621818);
  }
  return result;
}

void sub_1D688B1EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D688B1A8();
    v7 = a3(a1, &type metadata for SportsTopStoriesTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsTopStoriesTagFeedGroupConfigData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D688B294 + 4 * byte_1D6E99095[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D688B2C8 + 4 * byte_1D6E99090[v4]))();
}

uint64_t sub_1D688B2C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D688B2D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D688B2D8);
  return result;
}

uint64_t sub_1D688B2E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D688B2ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D688B2F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D688B2F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsTopStoriesTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SportsTopStoriesTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1D688B318()
{
  unint64_t result;

  result = qword_1EFFF40A0;
  if (!qword_1EFFF40A0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E991CC, &type metadata for SportsTopStoriesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF40A0);
  }
  return result;
}

unint64_t sub_1D688B360()
{
  unint64_t result;

  result = qword_1ED621828;
  if (!qword_1ED621828)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9913C, &type metadata for SportsTopStoriesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED621828);
  }
  return result;
}

unint64_t sub_1D688B3A8()
{
  unint64_t result;

  result = qword_1ED621820;
  if (!qword_1ED621820)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E99164, &type metadata for SportsTopStoriesTagFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED621820);
  }
  return result;
}

uint64_t sub_1D688B3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void (*v16)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];

  v24[1] = *MEMORY[0x1E0C80C00];
  v1 = type metadata accessor for EngagementTodayFeedGroupKnobs();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E82ECC(v0 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_knobs, (uint64_t)v3, v4);
  LOBYTE(v24[0]) = 17;
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED5F3870, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1D5F48C8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  v6 = v5;
  v7 = sub_1D6E2255C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  sub_1D6386630();
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED5F38A0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1D5F48C8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B518]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D6E334D0;
  v14 = (uint64_t *)(v13 + v12);
  v15 = swift_allocObject();
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED5F39D0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1D5F48C8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5C200]);
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  swift_allocObject();
  *v14 = sub_1D6E2324C();
  v16 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104);
  v16(v14, *MEMORY[0x1E0D5B508], v9);
  v17 = (uint64_t *)((char *)v14 + v11);
  sub_1D5E847C4(0, &qword_1ED605680, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5CB58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = sub_1D6E237A4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1D6E32F90;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104))(v21 + v20, *MEMORY[0x1E0D5CB50], v18);
  v22 = sub_1D666F64C(v21);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *v17 = v22;
  v16(v17, *MEMORY[0x1E0D5B4B8], v9);
  v24[0] = v7;
  sub_1D66874B4(v13);
  return v24[0];
}

uint64_t sub_1D688B708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_config;
  sub_1D5FB044C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D5E8D20C(v0 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_knobs, (uint64_t (*)(_QWORD))type metadata accessor for EngagementTodayFeedGroupKnobs);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_engagementInlineViewManager);
  return swift_deallocClassInstance();
}

uint64_t sub_1D688B780()
{
  return type metadata accessor for EngagementTodayFeedGroupEmitter();
}

uint64_t type metadata accessor for EngagementTodayFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1ED601070;
  if (!qword_1ED601070)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D688B7C4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D5FB044C();
  if (v0 <= 0x3F)
  {
    sub_1D5E84EF4(319, (unint64_t *)&unk_1ED5F3870, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1D5F48C8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1D688B874@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_config;
  sub_1D5FB044C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for TodayFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D688B8D4@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  v3 = *v1 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for EngagementTodayFeedGroupKnobs();
  a1[4] = sub_1D5E6D8C0(qword_1ED5FFF00, (uint64_t (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupKnobs, (uint64_t)&unk_1D6E97228);
  a1[5] = sub_1D5E6D8C0(&qword_1ED5FFEF8, (uint64_t (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupKnobs, (uint64_t)&unk_1D6E97250);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D5E82ECC(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for EngagementTodayFeedGroupKnobs);
}

uint64_t sub_1D688B96C()
{
  return sub_1D688B3EC();
}

uint64_t sub_1D688B98C()
{
  return sub_1D688BBC0();
}

uint64_t sub_1D688B9AC()
{
  sub_1D5FB044C();
  return sub_1D6E21BB4();
}

uint64_t sub_1D688B9E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4E50, (uint64_t (*)(uint64_t))sub_1D5FADACC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D6E32F90;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1D5FB044C();
  v3 = sub_1D6E21BB4();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  sub_1D5F77E70(inited);
  sub_1D688C1D0(0);
  a1[3] = v5;
  a1[4] = sub_1D5E6D8C0(&qword_1ED5FA8B8, (uint64_t (*)(uint64_t))sub_1D688C1D0, MEMORY[0x1E0DB3C80]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D6E1A330();
}

uint64_t sub_1D688BAFC()
{
  sub_1D5E6D8C0(&qword_1ED601060, (uint64_t (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupEmitter, (uint64_t)&unk_1D6E992B0);
  return sub_1D6E1A324();
}

uint64_t sub_1D688BB3C()
{
  return sub_1D5E6D8C0(&qword_1ED601068, (uint64_t (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupEmitter, (uint64_t)&unk_1D6E99288);
}

uint64_t sub_1D688BB68()
{
  return sub_1D5E6D8C0(&qword_1ED601058, (uint64_t (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupEmitter, (uint64_t)&unk_1D6E992E0);
}

uint64_t sub_1D688BB94()
{
  return sub_1D5E6D8C0(&qword_1ED601060, (uint64_t (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupEmitter, (uint64_t)&unk_1D6E992B0);
}

uint64_t sub_1D688BBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  unint64_t *v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;

  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED5F3910, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1D633548C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B9F8]);
  v55 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v48 - v2;
  v4 = type metadata accessor for EngagementTodayFeedGroup();
  MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5F99168();
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D6E1B38C();
  v53 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v48 - v12;
  sub_1D5F61074(0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v48 - v18;
  v20 = sub_1D6E1B044();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v51 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v60 = (char *)&v48 - v24;
  v61 = v0;
  v25 = v0 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_config;
  sub_1D5FB044C();
  v57 = v26;
  v58 = v25;
  sub_1D6E21C08();
  v27 = v20;
  v28 = v62;
  swift_bridgeObjectRetain();
  v59 = v28;
  sub_1D6E1B020();
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v29(v19, 1, v20) == 1)
  {
    sub_1D5E8D20C((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1D5F61074);
    v30 = (uint64_t)v56;
    v31 = v21;
  }
  else
  {
    v54 = v3;
    v50 = v21;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v60, v19, v20);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v61 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_engagementInlineViewManager), *(_QWORD *)(v61 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_engagementInlineViewManager + 24));
    v49 = v20;
    sub_1D6E1B434();
    v32 = v53;
    (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v11, *MEMORY[0x1E0D59650], v8);
    v33 = sub_1D6E1B380();
    v34 = *(void (**)(char *, uint64_t))(v32 + 8);
    v34(v11, v8);
    v34(v13, v8);
    if ((v33 & 1) != 0)
    {
      v35 = sub_1D6E22964();
      sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
      swift_allocError();
      v37 = v36;
      v62 = 0;
      v63 = 0xE000000000000000;
      sub_1D6E27EA8();
      swift_bridgeObjectRelease();
      v62 = 0xD000000000000015;
      v63 = 0x80000001D6F2C2A0;
      sub_1D6E26A98();
      swift_bridgeObjectRelease();
      sub_1D6E26A98();
      v38 = v63;
      *v37 = v62;
      v37[1] = v38;
      (*(void (**)(unint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v37, *MEMORY[0x1E0D5B6F0], v35);
      sub_1D6366A54();
      swift_allocObject();
      v39 = sub_1D6E1AC78();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v60, v49);
      return v39;
    }
    v27 = v49;
    v31 = v50;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v60, v49);
    v3 = v54;
    v30 = (uint64_t)v56;
  }
  v40 = v61;
  sub_1D6E1B020();
  if (v29(v17, 1, v27) == 1)
  {
    sub_1D5E8D20C((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1D5F61074);
  }
  else
  {
    v54 = v3;
    v41 = v51;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v51, v17, v27);
    v42 = (_QWORD *)(v40 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_engagementInlineViewManager);
    __swift_project_boxed_opaque_existential_1(v42, v42[3]);
    v43 = v27;
    v44 = (uint64_t)v52;
    sub_1D6E1B464();
    v45 = sub_1D6E1B2FC();
    v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 1, v45);
    sub_1D5E8D20C(v44, (uint64_t (*)(_QWORD))sub_1D5F99168);
    if (v46 == 1)
    {
      __swift_project_boxed_opaque_existential_1(v42, v42[3]);
      sub_1D6E1B410();
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v43);
    v3 = v54;
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v30, v58);
  sub_1D5E82ECC(v30, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for EngagementTodayFeedGroup);
  type metadata accessor for TodayFeedGroup();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1D6366A54();
  swift_allocObject();
  v39 = sub_1D6E1AC90();
  sub_1D5E8D20C(v30, (uint64_t (*)(_QWORD))type metadata accessor for EngagementTodayFeedGroup);
  return v39;
}

uint64_t sub_1D688C1AC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D688C1D0(uint64_t a1)
{
  sub_1D5E847C4(a1, &qword_1ED5FA8C0, (uint64_t (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
}

uint64_t destroy for SportsScoreSortingConfig(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56) >= 2uLL)
    swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsScoreSortingConfig(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >= 2)
    swift_retain();
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsScoreSortingConfig(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  unint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56) >= 2uLL)
  {
    if (v7 >= 2)
    {
      *(_QWORD *)(a1 + 56) = v7;
      swift_retain();
      swift_release();
    }
    else
    {
      swift_release();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 56) = v7;
    if (v7 >= 2)
      swift_retain();
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsScoreSortingConfig(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56) >= 2uLL)
  {
    if (v6 >= 2)
    {
      *(_QWORD *)(a1 + 56) = v6;
      swift_release();
      goto LABEL_6;
    }
    swift_release();
  }
  *(_QWORD *)(a1 + 56) = v6;
LABEL_6:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsScoreSortingConfig()
{
  return &type metadata for SportsScoreSortingConfig;
}

uint64_t sub_1D688C528(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, unint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  v4 = sub_1D6E21D88();
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D6E22EA4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0D5BD68], v7);
  v11 = sub_1D6E233E4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v40 = a1;
    v41 = v2;
    v13 = v11 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
    v42 = *(_QWORD *)(v45 + 72);
    v44 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
    v39 = v11;
    swift_bridgeObjectRetain();
    v14 = MEMORY[0x1E0DEE9E0];
    v43 = v4;
    while (1)
    {
      v44(v6, v13, v4);
      v16 = (void *)sub_1D6E21D70();
      v17 = sub_1D6E21D64();
      if ((v14 & 0xC000000000000001) != 0)
      {
        if (v14 < 0)
          v18 = v14;
        else
          v18 = v14 & 0xFFFFFFFFFFFFFF8;
        v19 = sub_1D6E27DF4();
        if (__OFADD__(v19, 1))
          goto LABEL_27;
        v14 = sub_1D688D0F8(v18, v19 + 1);
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v46 = v14;
      v22 = sub_1D6764C50((uint64_t)v16);
      v23 = *(_QWORD *)(v14 + 16);
      v24 = (v21 & 1) == 0;
      v25 = v23 + v24;
      if (__OFADD__(v23, v24))
        break;
      v26 = v21;
      if (*(_QWORD *)(v14 + 24) >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1D685D4D0();
      }
      else
      {
        sub_1D6854550(v25, isUniquelyReferenced_nonNull_native);
        v27 = sub_1D6764C50((uint64_t)v16);
        if ((v26 & 1) != (v28 & 1))
          goto LABEL_29;
        v22 = v27;
      }
      v14 = v46;
      if ((v26 & 1) != 0)
      {
        v15 = *(_QWORD *)(v46 + 56);

        *(_QWORD *)(v15 + 8 * v22) = v17;
      }
      else
      {
        *(_QWORD *)(v46 + 8 * (v22 >> 6) + 64) |= 1 << v22;
        *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v22) = v16;
        *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v22) = v17;
        v29 = *(_QWORD *)(v14 + 16);
        v30 = __OFADD__(v29, 1);
        v31 = v29 + 1;
        if (v30)
          goto LABEL_28;
        *(_QWORD *)(v14 + 16) = v31;
        v32 = v16;
      }

      swift_bridgeObjectRelease();
      v4 = v43;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v43);
      v13 += v42;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        a1 = v40;
        v2 = v41;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4750);
    result = sub_1D6E2834C();
    __break(1u);
  }
  else
  {
    v14 = MEMORY[0x1E0DEE9E0];
LABEL_22:
    swift_bridgeObjectRelease();
    v33 = objc_msgSend(*(id *)(v2 + 72), sel_autoFavoriteTagIDs);
    if (v33)
    {
      v34 = v33;
      v35 = (_QWORD *)sub_1D6E26D80();

    }
    else
    {
      v35 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v36 = sub_1D6D3F090();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v37 = sub_1D688D488(a1, v35, v36, v2, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease_n();
    return v37;
  }
  return result;
}

void sub_1D688C8FC(id *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  unsigned __int8 v21;
  id v22;
  void *v23;
  void *v24;
  unsigned int v25;
  unsigned int v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  unsigned __int8 v36;
  BOOL v37;
  id v38;
  uint64_t v39;
  char *v40;
  id v41;
  id v42;
  unint64_t v43;
  id v44;
  unsigned int v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  unsigned __int8 v54;
  BOOL v55;
  char v56;
  char v57;
  id v59;
  __int128 v60;
  __int128 v61;
  _BYTE v62[24];
  uint64_t v63;
  id v64;

  v9 = *a1;
  v10 = objc_msgSend(objc_msgSend(*a1, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  v11 = sub_1D6E26978();
  v13 = v12;

  v57 = sub_1D68AE060(v11, v13, a2);
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(objc_msgSend(v9, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  v15 = sub_1D6E26978();
  v17 = v16;

  v56 = sub_1D5F9E9CC(v15, v17, a3);
  swift_bridgeObjectRelease();
  v55 = sub_1D688CF4C(a4, v9);
  v54 = sub_1D688D000(a4, v9);
  v18 = *(void **)(a4 + 16);
  v19 = v9;
  v20 = objc_msgSend(v19, sel_identifier);
  if (!v20)
  {
    sub_1D6E26978();
    v20 = (id)sub_1D6E26948();
    swift_bridgeObjectRelease();
  }
  v21 = objc_msgSend(v18, sel_hasIssueWithIDBeenVisited_, v20);

  v22 = v19;
  v23 = sub_1D61AC8EC(v22, a5);

  if (v23)
    v59 = v23;
  else
    v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
  v24 = *(void **)(a4 + 96);
  v25 = objc_msgSend(v22, sel_isPaid);
  v26 = objc_msgSend(v22, sel_isBundlePaid);
  v27 = objc_msgSend(objc_msgSend(v22, (SEL)&selRef_setDisplayDate_), sel_identifier);
  swift_unknownObjectRelease();
  v28 = sub_1D6E26978();
  v30 = v29;

  if (!v25)
  {
    if ((v26 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v33 = 1;
      v35 = v56;
      v34 = v57;
      v36 = v54;
      v37 = v55;
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  v51 = v21;
  v31 = objc_msgSend(objc_msgSend(v24, sel_purchaseProvider), sel_purchasedTagIDs);
  v32 = sub_1D6E27038();

  LOBYTE(v31) = sub_1D5F9E9CC(v28, v30, v32);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    v21 = v51;
    if (!v26)
    {
      swift_bridgeObjectRelease();
      v35 = v56;
      v34 = v57;
      v36 = v54;
      v37 = v55;
      v38 = v59;
LABEL_33:
      v39 = a6;
      goto LABEL_37;
    }
LABEL_13:
    v40 = (char *)objc_msgSend(objc_msgSend(v24, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v40, v40 + 1))
    {
      sub_1D6E27D04();
      swift_unknownObjectRelease();
    }
    else
    {
      v60 = 0u;
      v61 = 0u;
    }
    sub_1D5F74FC0((uint64_t)&v60, (uint64_t)v62);
    v52 = v21;
    if (v63)
    {
      sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4780);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v41 = v64;
        v42 = objc_msgSend(v64, sel_integerValue);
        if (v42 == (id)-1)
        {

          v46 = v24;
          v38 = v59;
          goto LABEL_35;
        }
        v43 = (unint64_t)v42;
LABEL_22:
        if (objc_getAssociatedObject(v40, (const void *)~v43))
        {
          sub_1D6E27D04();
          swift_unknownObjectRelease();
        }
        else
        {
          v60 = 0u;
          v61 = 0u;
        }
        sub_1D5F74FC0((uint64_t)&v60, (uint64_t)v62);
        if (v63)
        {
          sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4780);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v44 = v64;
            v45 = objc_msgSend(v44, sel_integerValue);

            v46 = v24;
            v38 = v59;
            if ((((v45 + 1) ^ ((_DWORD)v43 + 1)) & 1) != 0)
            {
LABEL_35:
              v47 = objc_msgSend(objc_msgSend(v46, sel_bundleSubscriptionProvider), sel_bundleSubscription);
              swift_unknownObjectRelease();
              v48 = objc_msgSend(v47, sel_bundleChannelIDs);

              v49 = (void *)sub_1D6E26948();
              v50 = objc_msgSend(v48, sel_containsObject_, v49);
              swift_bridgeObjectRelease();

              v35 = v56;
              v34 = v57;
              v36 = v54;
              v37 = v55;
              v21 = v52;
              v39 = a6;
              if ((v50 & 1) != 0)
              {
                v33 = 1;
                goto LABEL_38;
              }
LABEL_37:
              v33 = 0;
              goto LABEL_38;
            }
            goto LABEL_32;
          }
        }
        else
        {
          sub_1D5F117D8((uint64_t)v62);
        }

        v46 = v24;
        v38 = v59;
        if ((v43 & 1) != 0)
          goto LABEL_35;
LABEL_32:
        swift_bridgeObjectRelease();
        v35 = v56;
        v34 = v57;
        v36 = v54;
        v37 = v55;
        v21 = v52;
        goto LABEL_33;
      }
    }
    else
    {
      sub_1D5F117D8((uint64_t)v62);
    }
    v41 = 0;
    v43 = 0;
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  v33 = 1;
  v35 = v56;
  v34 = v57;
  v36 = v54;
  v37 = v55;
  v21 = v51;
LABEL_11:
  v38 = v59;
  v39 = a6;
LABEL_38:
  *(_QWORD *)v39 = v22;
  *(_BYTE *)(v39 + 8) = v21;
  *(_BYTE *)(v39 + 9) = (v34 & 1) == 0;
  *(_BYTE *)(v39 + 10) = (v35 & 1) == 0;
  *(_BYTE *)(v39 + 11) = v37;
  *(_BYTE *)(v39 + 12) = v36 & 1;
  *(_QWORD *)(v39 + 16) = v38;
  *(_BYTE *)(v39 + 24) = v33;
}

BOOL sub_1D688CF4C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t ObjectType;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 112);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(ObjectType, v3);
  sub_1D6E1A1F8();
  swift_release();
  v5 = objc_msgSend(a2, sel_identifier);
  v6 = sub_1D6E26978();
  v8 = v7;

  LOBYTE(v5) = sub_1D5F9E9CC(v6, v8, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v5 & 1) == 0;
}

id sub_1D688D000(uint64_t a1, id a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 72);
  v3 = objc_msgSend(objc_msgSend(a2, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  if (!v3)
  {
    sub_1D6E26978();
    v3 = (id)sub_1D6E26948();
    swift_bridgeObjectRelease();
  }
  v4 = objc_msgSend(v2, sel_hasMutedSubscriptionForTagID_, v3);

  return v4;
}

uint64_t sub_1D688D0A4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D688D0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    sub_1D6862AF4();
    v2 = sub_1D6E2807C();
    v18 = v2;
    sub_1D6E27FD4();
    v3 = sub_1D6E27FF8();
    if (v3)
    {
      v4 = v3;
      sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4750);
      do
      {
        swift_dynamicCast();
        sub_1D5E6F04C(0, &qword_1ED5F46D8);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1D6854550(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1D6E27B6C();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1D6E27FF8();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

_QWORD *sub_1D688D344(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  _QWORD *v8;

  if (a2)
  {
    sub_1D6863FAC();
    v2 = (_QWORD *)sub_1D6E2807C();
    v8 = v2;
    sub_1D6E27FD4();
    v3 = sub_1D6E27FF8();
    if (v3)
    {
      v4 = v3;
      type metadata accessor for SportsDateHeader();
      do
      {
        swift_dynamicCast();
        type metadata accessor for SportsScores();
        swift_dynamicCast();
        v2 = v8;
        v5 = v8[2];
        if (v8[3] <= v5)
        {
          sub_1D6854DB4(v5 + 1, 1);
          v2 = v8;
        }
        sub_1D685C754(v7, v4, v2);
        v4 = sub_1D6E27FF8();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_1D688D488(unint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;

  v6 = v5;
  v7 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    if (!v8)
      return v9;
    v44 = MEMORY[0x1E0DEE9D8];
    result = sub_1D622747C(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
      break;
    v11 = 0;
    v9 = v44;
    v29 = v7;
    v30 = v7 & 0xC000000000000001;
    v28 = v8;
    while (v8 != v11)
    {
      if (v30)
        v12 = (id)MEMORY[0x1D8290720](v11, v7);
      else
        v12 = *(id *)(v7 + 8 * v11 + 32);
      v13 = v12;
      v35 = v12;
      sub_1D688C8FC(&v35, a2, a3, a4, a5, (uint64_t)&v36);
      if (v6)
      {
        swift_release();

        return v9;
      }

      v14 = v36;
      v15 = v37;
      v16 = v38;
      v17 = v39;
      v18 = v40;
      v19 = v41;
      v20 = v42;
      v21 = v43;
      v23 = *(_QWORD *)(v9 + 16);
      v22 = *(_QWORD *)(v9 + 24);
      v44 = v9;
      if (v23 >= v22 >> 1)
      {
        v27 = v41;
        v26 = v42;
        v25 = v43;
        sub_1D622747C(v22 > 1, v23 + 1, 1);
        v21 = v25;
        v20 = v26;
        v19 = v27;
        v9 = v44;
      }
      *(_QWORD *)(v9 + 16) = v23 + 1;
      v24 = v9 + 32 * v23;
      *(_QWORD *)(v24 + 32) = v14;
      ++v11;
      *(_BYTE *)(v24 + 40) = v15;
      *(_BYTE *)(v24 + 41) = v16;
      *(_BYTE *)(v24 + 42) = v17;
      *(_BYTE *)(v24 + 43) = v18;
      *(_BYTE *)(v24 + 44) = v19;
      *(_QWORD *)(v24 + 48) = v20;
      *(_BYTE *)(v24 + 56) = v21;
      v8 = v28;
      v7 = v29;
      v6 = 0;
      if (v28 == v11)
        return v9;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v8 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D688D674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F84898(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1D688D6B0(uint64_t a1)
{
  uint64_t v2;

  sub_1D5F84898(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1D688D6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F84898(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D688D728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F84898(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D688D76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F84898(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D688D7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F84898(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D688D7F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D688D800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F84898(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1D688D83C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D688D848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5F84898(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TodayUncollapseBlueprintModifier(uint64_t a1)
{
  return sub_1D5E6E20C(a1, qword_1EFFF4100);
}

void sub_1D688D89C()
{
  unint64_t v0;

  sub_1D5F84898(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1D688D904(uint64_t a1, void (*a2)(uint64_t *), void (*a3)(uint64_t *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *);
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  void (*v43)(uint64_t *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (**v59)(uint64_t *);
  void (*v60)(uint64_t *);
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  void (*v81)(uint64_t *);
  void (*v82)(uint64_t *);
  uint64_t v83;
  unint64_t v84;

  v81 = a3;
  v82 = a2;
  v83 = a1;
  sub_1D5F48CD4(0, &qword_1ED5E1598, MEMORY[0x1E0DB9A28]);
  v78 = *(_QWORD *)(v4 - 8);
  v79 = v4;
  MEMORY[0x1E0C80A78](v4);
  v80 = (uint64_t *)((char *)&v64 - v5);
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E1A00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v7 = v6;
  v71 = *(_QWORD *)(v6 - 8);
  v70 = *(_QWORD *)(v71 + 64);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v64 - v8;
  v9 = type metadata accessor for TodayUncollapseBlueprintModifier(0);
  v66 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v67 = v10;
  v69 = (uint64_t)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TodaySectionGapDescriptor(0);
  MEMORY[0x1E0C80A78](v11);
  v75 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TodayBlueprintCollapsedSection(0);
  v73 = *(_QWORD *)(v13 - 8);
  v74 = v13;
  v14 = *(_QWORD *)(v73 + 64);
  v15 = MEMORY[0x1E0C80A78](v13);
  v68 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v76 = (uint64_t)&v64 - v16;
  sub_1D5F9C32C();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v21 = v20;
  v22 = *(v20 - 1);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v64 - v23;
  sub_1D5F84898(0);
  v77 = v3;
  sub_1D6E1CD30();
  v25 = v7;
  sub_1D6E20990();
  v26 = v22;
  v27 = v21;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t *))(v26 + 48))(v19, 1, v21) == 1)
  {
    sub_1D5E8D20C((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1D5F9C32C);
    type metadata accessor for TodayUncollapseBlueprintModifier.Errors(0);
    sub_1D5E6D8C0(qword_1EFFF4140, type metadata accessor for TodayUncollapseBlueprintModifier.Errors, (uint64_t)&unk_1D6E99538);
    v28 = swift_allocError();
    v30 = v29;
    *v29 = sub_1D6E1CD30();
    v30[1] = v31;
    swift_storeEnumTagMultiPayload();
    v32 = v79;
    v33 = v80;
    *v80 = v28;
    v34 = v78;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v78 + 104))(v33, *MEMORY[0x1E0DB99F0], v32);
    v82(v33);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v34 + 8))(v33, v32);
  }
  v37 = v74;
  v36 = (uint64_t)v75;
  v64 = v14;
  v65 = v25;
  v39 = v80;
  v38 = (void (*)(uint64_t *))v81;
  v40 = v76;
  (*(void (**)(char *, char *, uint64_t *))(v26 + 32))(v24, v19, v27);
  sub_1D6E1D474();
  if ((v84 >> 58) & 0x3C | (v84 >> 1) & 3)
  {
    v41 = v27;
  }
  else
  {
    v42 = swift_projectBox();
    sub_1D5E82ECC(v42, v36, type metadata accessor for TodaySectionGapDescriptor);
    v43 = v38;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v36, 1, v37) != 1)
    {
      sub_1D5F0D758(v36, v40, type metadata accessor for TodayBlueprintCollapsedSection);
      v48 = swift_release();
      MEMORY[0x1E0C80A78](v48);
      *(&v64 - 2) = v40;
      sub_1D5E847C4(0, &qword_1ED5F3EB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      v79 = sub_1D6E1AE1C();
      v49 = v69;
      sub_1D5E82ECC(v77, v69, type metadata accessor for TodayUncollapseBlueprintModifier);
      v50 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v72, v83, v65);
      v51 = v68;
      sub_1D5E82ECC(v40, v68, type metadata accessor for TodayBlueprintCollapsedSection);
      v52 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
      v53 = (v67 + v52 + *(unsigned __int8 *)(v50 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
      v54 = *(unsigned __int8 *)(v73 + 80);
      v83 = v26;
      v55 = (v70 + v54 + v53) & ~v54;
      v56 = (v64 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
      v57 = swift_allocObject();
      v80 = v27;
      v58 = v57;
      sub_1D5F0D758(v49, v57 + v52, type metadata accessor for TodayUncollapseBlueprintModifier);
      (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v58 + v53, v72, v65);
      sub_1D5F0D758(v51, v58 + v55, type metadata accessor for TodayBlueprintCollapsedSection);
      v59 = (void (**)(uint64_t *))(v58 + v56);
      v60 = v82;
      *v59 = v82;
      v59[1] = v43;
      swift_retain();
      v61 = (void *)sub_1D6E1AB4C();
      sub_1D6E1AC24();
      swift_release();
      swift_release();

      v62 = swift_allocObject();
      *(_QWORD *)(v62 + 16) = v60;
      *(_QWORD *)(v62 + 24) = v43;
      swift_retain();
      v63 = (void *)sub_1D6E1AB4C();
      sub_1D6E1AC60();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t *))(v83 + 8))(v24, v80);
      return sub_1D5E8D20C(v76, type metadata accessor for TodayBlueprintCollapsedSection);
    }
    v41 = v27;
    sub_1D5E8D20C(v36, type metadata accessor for TodaySectionGapDescriptor);
  }
  swift_release();
  type metadata accessor for TodayUncollapseBlueprintModifier.Errors(0);
  sub_1D5E6D8C0(qword_1EFFF4140, type metadata accessor for TodayUncollapseBlueprintModifier.Errors, (uint64_t)&unk_1D6E99538);
  v44 = swift_allocError();
  (*(void (**)(uint64_t, char *, uint64_t *))(v26 + 16))(v45, v24, v41);
  swift_storeEnumTagMultiPayload();
  *v39 = v44;
  v47 = v78;
  v46 = v79;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v78 + 104))(v39, *MEMORY[0x1E0DB99F0], v79);
  v82(v39);
  (*(void (**)(uint64_t *, uint64_t))(v47 + 8))(v39, v46);
  return (*(uint64_t (**)(char *, uint64_t *))(v26 + 8))(v24, v41);
}

uint64_t sub_1D688DFFC()
{
  void *v0;
  uint64_t v1;

  sub_1D5E847C4(0, qword_1ED5E0CE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  type metadata accessor for TodayBlueprintCollapsedSection(0);
  swift_bridgeObjectRetain();
  v0 = (void *)sub_1D6E1AB4C();
  sub_1D601AB88();
  sub_1D5E6D8C0(&qword_1ED5F3D30, (uint64_t (*)(uint64_t))sub_1D601AB88, MEMORY[0x1E0DE9FA0]);
  v1 = sub_1D6E1ABF4();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_1D688E0CC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *);
  char v45[16];
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  char v50[8];

  v43 = a6;
  v44 = a5;
  v9 = sub_1D6E1D7E0();
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  MEMORY[0x1E0C80A78](v9);
  v40 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5F48CD4(0, &qword_1ED5E1598, MEMORY[0x1E0DB9A28]);
  v38 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  MEMORY[0x1E0C80A78](v11);
  v37 = (char *)&v33 - v12;
  sub_1D5E6D900();
  MEMORY[0x1E0C80A78](v13);
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E1A00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v15 = v14;
  v35 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - v16;
  *(_QWORD *)&v48 = *a1;
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18];
  sub_1D5E847C4(0, &qword_1ED5F3EB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D5EF0480();
  sub_1D5E6D8C0((unint64_t *)&unk_1ED5E1000, v18, MEMORY[0x1E0DB6AD8]);
  v19 = sub_1D6E26BB8();
  v36 = v15;
  v33 = sub_1D6E20930();
  v46 = a4;
  v47 = v19;
  v20 = sub_1D5FE1680((void (*)(char *))sub_1D688EEBC, (uint64_t)v45, (uint64_t)v50);
  v34 = v6;
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v22 = v21;
  v23 = sub_1D5FA07B8((unint64_t *)&unk_1ED5E11C0, MEMORY[0x1E0DB7B88]);
  v24 = sub_1D5FA07B8(&qword_1ED5E11B0, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1D8282BD8](v20, v22, v23, v24);
  type metadata accessor for TodayModel(0);
  sub_1D5F93158();
  sub_1D5E6D8C0(&qword_1ED60D620, type metadata accessor for TodayModel, (uint64_t)&unk_1D6EDC754);
  sub_1D6E20924();
  swift_bridgeObjectRelease();
  v25 = sub_1D5F908DC();
  sub_1D6E22AFC();
  sub_1D6E22AF0();
  type metadata accessor for TodayFeedServiceConfig();
  sub_1D5E6D8C0((unint64_t *)&qword_1ED5E8E40, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t)&unk_1D6EA89F0);
  v26 = sub_1D6E22AD8();
  swift_release();
  if (v26)
  {
    *((_QWORD *)&v49 + 1) = sub_1D6E21B90();
    *(_QWORD *)&v48 = v26;
  }
  else
  {
    v48 = 0u;
    v49 = 0u;
  }
  v27 = v36;
  sub_1D6E209F0();
  sub_1D5F63054(v25);
  v29 = v40;
  v28 = v41;
  v30 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, *MEMORY[0x1E0DB7FA0], v42);
  sub_1D5F8E704();
  v31 = v37;
  sub_1D6E1E920();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  v44(v31);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v17, v27);
}

uint64_t sub_1D688E4E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;

  v78 = a4;
  v66 = a3;
  v74 = a2;
  v72 = sub_1D6E15EF0();
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v69 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v68 = (char *)&v60 - v9;
  sub_1D5F7DC74();
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TodayBlueprintCollapsedSection(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v73 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v71 = (uint64_t)&v60 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v60 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v60 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v60 - v24;
  v67 = type metadata accessor for TodaySectionGapDescriptor(0);
  MEMORY[0x1E0C80A78](v67);
  v76 = (uint64_t)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = a1;
  sub_1D6E1D474();
  if ((v81 >> 58) & 0x3C | (v81 >> 1) & 3
    || (v27 = swift_projectBox(),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v27, 1, v12) == 1))
  {
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v78, v77, v7);
  }
  v62 = v12;
  v61 = v13;
  v29 = v27;
  v30 = v76;
  sub_1D5E82ECC(v29, v76, type metadata accessor for TodaySectionGapDescriptor);
  sub_1D5E82ECC(v30, (uint64_t)v25, type metadata accessor for TodayBlueprintCollapsedSection);
  v31 = type metadata accessor for TodayModel(0);
  v32 = sub_1D5F93158();
  v33 = sub_1D5E6D8C0(&qword_1ED60D620, type metadata accessor for TodayModel, (uint64_t)&unk_1D6EDC754);
  v34 = v74;
  v64 = v31;
  v65 = v32;
  v63 = v33;
  LOBYTE(v31) = sub_1D6E1D48C();
  sub_1D5E82ECC((uint64_t)v25, (uint64_t)v23, type metadata accessor for TodayBlueprintCollapsedSection);
  sub_1D5E82ECC(v34, (uint64_t)v20, type metadata accessor for TodayBlueprintCollapsedSection);
  if ((v31 & 1) != 0)
  {
    v35 = v62;
    v36 = *(int *)(v62 + 20);
    v37 = *(_QWORD *)&v23[v36];
    v38 = *(_QWORD *)&v23[v36 + 8];
    v39 = &v20[v36];
    if (v37 == *(_QWORD *)v39 && v38 == *((_QWORD *)v39 + 1))
    {
      sub_1D5E8D20C((uint64_t)v23, type metadata accessor for TodayBlueprintCollapsedSection);
      sub_1D5E8D20C((uint64_t)v20, type metadata accessor for TodayBlueprintCollapsedSection);
LABEL_10:
      sub_1D6E1D474();
      v79 = v80;
      v41 = v66;
      swift_bridgeObjectRetain();
      v42 = sub_1D688EED8((uint64_t)v25, v41);
      swift_bridgeObjectRelease();
      sub_1D5F84898(0);
      v44 = v43;
      v45 = sub_1D5E6D8C0(&qword_1ED5E1028, (uint64_t (*)(uint64_t))sub_1D5F84898, MEMORY[0x1E0DB6F08]);
      v46 = sub_1D5E6D8C0(&qword_1ED5E1020, (uint64_t (*)(uint64_t))sub_1D5F84898, MEMORY[0x1E0DB6EF8]);
      MEMORY[0x1D8282BD8](v42, v44, v45, v46);
      sub_1D6E1D468();
      sub_1D5E8D20C((uint64_t)v25, type metadata accessor for TodayBlueprintCollapsedSection);
      sub_1D5E8D20C(v76, type metadata accessor for TodayBlueprintCollapsedSection);
      return swift_release();
    }
    v40 = sub_1D6E282C8();
    sub_1D5E8D20C((uint64_t)v23, type metadata accessor for TodayBlueprintCollapsedSection);
    sub_1D5E8D20C((uint64_t)v20, type metadata accessor for TodayBlueprintCollapsedSection);
    if ((v40 & 1) != 0)
      goto LABEL_10;
  }
  else
  {
    sub_1D5E8D20C((uint64_t)v23, type metadata accessor for TodayBlueprintCollapsedSection);
    sub_1D5E8D20C((uint64_t)v20, type metadata accessor for TodayBlueprintCollapsedSection);
    v35 = v62;
  }
  sub_1D5E8D20C((uint64_t)v25, type metadata accessor for TodayBlueprintCollapsedSection);
  v47 = v71;
  sub_1D5F0D758(v76, v71, type metadata accessor for TodayBlueprintCollapsedSection);
  v48 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v68, v47, v7);
  v49 = v69;
  sub_1D6E15EE4();
  v50 = sub_1D6E15ED8();
  v52 = v51;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v49, v72);
  v53 = *(_QWORD *)(v47 + *(int *)(v35 + 24));
  v54 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v55 = (uint64_t)v73;
  v54(v73, v48, v7);
  v56 = (uint64_t *)(v55 + *(int *)(v35 + 20));
  *v56 = v50;
  v56[1] = v52;
  *(_QWORD *)(v55 + *(int *)(v35 + 24)) = v53;
  v57 = swift_allocBox();
  v59 = v58;
  sub_1D5E82ECC(v55, v58, type metadata accessor for TodayBlueprintCollapsedSection);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v59, 0, 1, v35);
  v80 = v57;
  swift_bridgeObjectRetain();
  sub_1D6E1D4A4();
  sub_1D6E1D468();
  sub_1D5E8D20C(v55, type metadata accessor for TodayBlueprintCollapsedSection);
  sub_1D5E8D20C(v47, type metadata accessor for TodayBlueprintCollapsedSection);
  return swift_release();
}

uint64_t sub_1D688EAF4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED630A80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9558], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = sub_1D6E1E650();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D6E32F90;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x1E0DB9538], v0);
  v4 = sub_1D666ED3C(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v4;
}

uint64_t sub_1D688EBD4()
{
  sub_1D5E6D8C0(&qword_1EFFDFDD0, type metadata accessor for TodayUncollapseBlueprintModifier, (uint64_t)&unk_1D6E994BC);
  return sub_1D6E1E164();
}

uint64_t sub_1D688EC14()
{
  return sub_1D5E6D8C0(&qword_1EFFF4138, type metadata accessor for TodayUncollapseBlueprintModifier, (uint64_t)&unk_1D6E99494);
}

uint64_t type metadata accessor for TodayUncollapseBlueprintModifier.Errors(uint64_t a1)
{
  return sub_1D5E6E20C(a1, qword_1EFFF41B8);
}

uint64_t sub_1D688EC54()
{
  return sub_1D688DFFC();
}

uint64_t sub_1D688EC6C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(type metadata accessor for TodayUncollapseBlueprintModifier(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E1A00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (v3 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TodayBlueprintCollapsedSection(0) - 8) + 80);
  v10 = (v7 + v8 + v9) & ~v9;
  sub_1D5F84898(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v2, v11);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v10, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D688EDC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(type metadata accessor for TodayUncollapseBlueprintModifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E1A00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(type metadata accessor for TodayBlueprintCollapsedSection(0) - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = v1 + ((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1D688E0CC(a1, v1 + v4, v1 + v8, v1 + v11, *(void (**)(char *))v12, *(_QWORD *)(v12 + 8));
}

uint64_t sub_1D688EE98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D688EEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D688E4E0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1D688EED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void (*v20)(_BYTE *, _QWORD);
  void (*v21)(char *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  _BYTE v40[32];
  uint64_t v41;

  v34 = a2;
  v38 = type metadata accessor for TodayModel(0);
  v3 = MEMORY[0x1E0C80A78](v38);
  v32 = (uint64_t *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v31 - v5;
  sub_1D5F84898(0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v31 - v12;
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v14 = v13;
  v15 = sub_1D5FA07B8(&qword_1ED5E11D8, MEMORY[0x1E0DB7B98]);
  v16 = sub_1D6E270D4();
  v17 = MEMORY[0x1E0DEE9D8];
  if (!v16)
    return v17;
  v18 = v16;
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1D5F95840(0, v16 & ~(v16 >> 63), 0);
  result = sub_1D6E27098();
  if ((v18 & 0x8000000000000000) == 0)
  {
    v33 = a1;
    v35 = v15;
    v36 = v14;
    while (1)
    {
      v20 = (void (*)(_BYTE *, _QWORD))sub_1D6E27134();
      v21 = *(void (**)(char *))(v8 + 16);
      v21(v11);
      v20(v40, 0);
      v22 = (uint64_t)v37;
      sub_1D6E1CD60();
      if (swift_getEnumCaseMultiPayload() != 4)
        break;
      v23 = sub_1D6E1CA0C();
      v25 = v34;
      if (!*(_QWORD *)(v34 + 16) || (v26 = sub_1D5F77FD0(v23, v24), (v27 & 1) == 0))
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26);
      swift_retain();
      swift_bridgeObjectRelease();
      *v32 = v28;
      swift_storeEnumTagMultiPayload();
      sub_1D5E6D8C0(&qword_1ED60D620, type metadata accessor for TodayModel, (uint64_t)&unk_1D6EDC754);
      swift_retain();
      sub_1D6E1CD54();
      swift_release();
      swift_release();
LABEL_11:
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      v17 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D5F95840(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v41;
      }
      v30 = *(_QWORD *)(v17 + 16);
      v29 = *(_QWORD *)(v17 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1D5F95840(v29 > 1, v30 + 1, 1);
        v17 = v41;
      }
      *(_QWORD *)(v17 + 16) = v30 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v30, v39, v7);
      v41 = v17;
      sub_1D6E27104();
      if (!--v18)
        return v17;
    }
    sub_1D5E8D20C(v22, type metadata accessor for TodayModel);
LABEL_10:
    ((void (*)(char *, char *, uint64_t))v21)(v39, v11, v7);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1D688F298(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D688F364(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_1D688F3C4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1D688F464(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1D5E8D20C((uint64_t)a1, type metadata accessor for TodayUncollapseBlueprintModifier.Errors);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1D688F524(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1D688F5C0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1D5E8D20C((uint64_t)a1, type metadata accessor for TodayUncollapseBlueprintModifier.Errors);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D5F48CD4(0, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1D688F674()
{
  unint64_t v0;

  sub_1D5F48CD4(319, (unint64_t *)&qword_1ED5E11E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

id sub_1D688F6F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___forceReloadButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___forceReloadButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___forceReloadButton);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_triggerForceReloadFeeds, 64);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1D688F794()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___setupOfflineModeButton;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___setupOfflineModeButton);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___setupOfflineModeButton);
  }
  else
  {
    v4 = sub_1D688F7F4(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1D688F7F4(uint64_t a1)
{
  id v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  void *v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_addTarget_action_forControlEvents_, a1, sel_alertForSetUpOfflineMode, 64);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D6E15968();

  v5 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setTitle_forState_, v5, 0, 0x80000001D6F2C3F0);

  return v2;
}

id sub_1D688F958()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v1 = v0;
  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v3 = result;
    objc_msgSend(result, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_connectionLabel]);

    sub_1D5EDFACC();
    sub_1D688FA5C();
    sub_1D6890454();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1D6E32F90;
    v5 = sub_1D6E20E1C();
    v6 = MEMORY[0x1E0DC2160];
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v6;
    sub_1D6E275FC();
    swift_unknownObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D688FA5C()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    v3 = (void *)objc_opt_self();
    v4 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v4);

    v5 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_connectionLabel];
    objc_msgSend(v5, sel_setTextAlignment_, 1);
    v6 = (void *)objc_opt_self();
    objc_msgSend(v6, sel_systemFontSize);
    v7 = objc_msgSend(v6, sel_boldSystemFontOfSize_);
    objc_msgSend(v5, sel_setFont_, v7);

    v8 = objc_msgSend(v3, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v8);

    v9 = sub_1D688F6F4();
    sub_1D655086C();

    v10 = sub_1D688F794();
    sub_1D655086C();

    sub_1D65509C0(*(void **)&v0[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_secondaryLabel]);
  }
  else
  {
    __break(1u);
  }
}

void sub_1D688FBE8()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  objc_super v14;
  CGRect v15;
  CGRect v16;

  v1 = v0;
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_viewDidLayoutSubviews);
  v2 = sub_1D688FE3C(v0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_connectionLabel];
  objc_msgSend(v3, sel_sizeToFit);
  v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = v4;
  objc_msgSend(v4, sel_center);
  v7 = v6;

  objc_msgSend(v3, sel_center);
  objc_msgSend(v3, sel_setCenter_, v7);
  objc_msgSend(v3, sel_frame);
  v8 = objc_msgSend(v1, sel_view);
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = v8;
  objc_msgSend(v8, sel_safeAreaInsets);

  sub_1D6E2795C();
  objc_msgSend(v3, sel_setFrame_);
  objc_msgSend(v2, sel_sizeToFit);
  v10 = objc_msgSend(v1, sel_view);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_center);
    v13 = v12;

    objc_msgSend(v2, sel_center);
    objc_msgSend(v2, sel_setCenter_, v13);
    objc_msgSend(v2, sel_frame);
    objc_msgSend(v3, sel_frame);
    CGRectGetMaxY(v15);
    sub_1D6E2795C();
    objc_msgSend(v3, sel_frame);
    CGRectGetHeight(v16);
    sub_1D6E27974();
    objc_msgSend(v2, sel_setFrame_);

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1D688FE3C(char *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v2 = sub_1D688F6F4();
  v3 = objc_msgSend(v2, sel_superview);

  v4 = objc_msgSend(a1, sel_view);
  v5 = v4;
  if (v3)
  {

    if (v5)
    {

      if (v3 == v5)
        return sub_1D688F6F4();
    }
  }
  else
  {
    if (!v4)
      return sub_1D688F6F4();

  }
  v6 = sub_1D688F794();
  v7 = objc_msgSend(v6, sel_superview);

  v8 = objc_msgSend(a1, sel_view);
  v9 = v8;
  if (v7)
  {

    if (v9)
    {

      if (v7 == v9)
        return sub_1D688F794();
    }
    return *(id *)&a1[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_secondaryLabel];
  }
  if (v8)
  {

    return *(id *)&a1[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_secondaryLabel];
  }
  return sub_1D688F794();
}

uint64_t sub_1D688FF88()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  if (qword_1ED609F50 != -1)
    swift_once();
  v0 = sub_1D6E1C664();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED698508);
  v1 = sub_1D6E1C64C();
  v2 = sub_1D6E27374();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    if (qword_1ED62D800 != -1)
      swift_once();
    v5 = sub_1D6E20354();
    sub_1D5F69694(v5, v6, &v8);
    sub_1D6E27C44();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D5E69000, v1, v2, "OfflineStatusBannerViewController did press force reload button. Will execute command: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v4, -1, -1);
    MEMORY[0x1D82918CC](v3, -1, -1);
  }

  swift_getObjectType();
  if (qword_1ED62D800 != -1)
    swift_once();
  return sub_1D6E1D9CC();
}

void sub_1D68901B8()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  sub_1D6890410();
  sub_1D6E201F8();
  swift_allocObject();
  sub_1D6E20198();
  sub_1D6E201B0();
  swift_release();
  sub_1D6E201D4();
  swift_release();
  sub_1D6E201A4();
  swift_release();
  if (qword_1ED609F50 != -1)
    swift_once();
  v0 = sub_1D6E1C664();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED698508);
  oslog = sub_1D6E1C64C();
  v1 = sub_1D6E27374();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_1D5E69000, oslog, v1, "OfflineStatusBannerViewController did press Set Up Offline Mode button.", v2, 2u);
    MEMORY[0x1D82918CC](v2, -1, -1);
  }

}

unint64_t sub_1D6890410()
{
  unint64_t result;

  result = qword_1EFFF4238;
  if (!qword_1EFFF4238)
  {
    result = MEMORY[0x1D82917D0](&protocol conformance descriptor for AlertSetUpOfflineMode, &type metadata for AlertSetUpOfflineMode);
    atomic_store(result, (unint64_t *)&qword_1EFFF4238);
  }
  return result;
}

void sub_1D6890454()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED60B620)
  {
    sub_1D63D8308();
    v0 = sub_1D6E2828C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED60B620);
  }
}

void sub_1D68904A8()
{
  sub_1D688FA5C();
}

void sub_1D68904C8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_connectionLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_secondaryLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___forceReloadButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___setupOfflineModeButton] = 0;

  sub_1D6E28010();
  __break(1u);
}

uint64_t sub_1D68905A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68905B0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D6E23AF8();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1D689062C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D6890638(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1D6E23AF8();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for HistoryFeedRefreshRequest()
{
  uint64_t result;

  result = qword_1EFFF4298;
  if (!qword_1EFFF4298)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FollowingCompositionalLayoutOptionsProvider.__allocating_init(blueprintProvider:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), a1);
  return v2;
}

uint64_t FollowingCompositionalLayoutOptionsProvider.init(blueprintProvider:)(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), a1);
  return v1;
}

uint64_t sub_1D6890770@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  uint64_t AssociatedTypeWitness;
  uint64_t v28;
  uint64_t AssociatedConformanceWitness;
  uint64_t v30;

  v25 = a2;
  v26 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v30 = swift_getAssociatedConformanceWitness();
  v2 = sub_1D6E20A44();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - v4;
  v6 = sub_1D6E2018C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v24 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v23 - v13);
  if (objc_msgSend(v26, sel_horizontalSizeClass) != (id)1
    || (sub_1D6E1E200(),
        v15 = sub_1D6E20918(),
        v17 = v16,
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2),
        (v17 & 1) != 0))
  {
    v20 = *MEMORY[0x1E0DBC230];
    v19 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 104);
    v19(v14, v20, v6);
  }
  else
  {
    sub_1D6890A50();
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1D6E32F90;
    *(_QWORD *)(v18 + 32) = v15;
    *v14 = v18;
    v19 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 104);
    v19(v14, *MEMORY[0x1E0DBC238], v6);
    v20 = *MEMORY[0x1E0DBC230];
  }
  v21 = v24;
  (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 16))(v12, v14, v6);
  v19((uint64_t *)v21, v20, v6);
  sub_1D6E1FBD4();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v14, v6);
}

void sub_1D6890A50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5F4E70)
  {
    v0 = sub_1D6E2828C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5F4E70);
  }
}

uint64_t FollowingCompositionalLayoutOptionsProvider.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return v0;
}

uint64_t FollowingCompositionalLayoutOptionsProvider.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t sub_1D6890B10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6890770(a1, a2);
}

uint64_t sub_1D6890B30()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for FollowingCompositionalLayoutOptionsProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FollowingCompositionalLayoutOptionsProvider);
}

uint64_t method lookup function for FollowingCompositionalLayoutOptionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FollowingCompositionalLayoutOptionsProvider.__allocating_init(blueprintProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FollowingCompositionalLayoutOptionsProvider.layoutOptions(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_1D6890BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD v9[8];

  sub_1D5E847C4(0, (unint64_t *)&unk_1ED624860, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = *(_QWORD *)(sub_1D6E1A594() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D6E32F90;
  v6 = (_QWORD *)(v5 + v4);
  *v6 = 0x7972657571;
  v6[1] = 0xE500000000000000;
  (*(void (**)(void))(v3 + 104))();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v5;
  v9[5] = sub_1D66138C4(MEMORY[0x1E0DEE9D8]);
  v7 = sub_1D638F8D0((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1D60AAB04, (uint64_t)v9, (uint64_t)&unk_1E9AB0640);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  *(_QWORD *)(v1 + 16) = v7;
  *(_QWORD *)(v1 + 24) = a1;
  return v1;
}

uint64_t sub_1D6890D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v23[2];
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5DCD70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D545D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v23 - v3;
  v5 = sub_1D6E1A2D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D6E1A300();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED60C160, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3F28]);
  sub_1D6E1A4EC();
  sub_1D6E1A2E8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v13 = sub_1D6E1A2DC();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1D5EE949C(0, (unint64_t *)&qword_1ED5F4EB0, (unint64_t *)&qword_1ED5F4EF0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1D6E32F90;
  *(_QWORD *)&v25[0] = 0;
  *((_QWORD *)&v25[0] + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  v17 = v25[0];
  *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 64) = sub_1D5F2C5C8();
  *(_OWORD *)(v16 + 32) = v17;
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F47E0);
  v18 = (void *)sub_1D6E27BE4();
  sub_1D6E27374();
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();

  if ((sub_1D6350DE8() & 1) != 0)
  {
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v13;
    *(_QWORD *)(v19 + 24) = v15;
    v20 = sub_1D6E1865C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
    v26 = 0;
    memset(v25, 0, sizeof(v25));
    v24 = 0;
    memset(v23, 0, sizeof(v23));
    swift_retain();
    sub_1D6C618C4(v19 | 0x7000000000000000, 0, (uint64_t)v4, (uint64_t)v25, 0, 0, 0, 0, (uint64_t)v23);
    swift_release();
    sub_1D5E828E4((uint64_t)v23, &qword_1ED5E0920, (unint64_t *)&unk_1ED5E0910, MEMORY[0x1E0DB35B0]);
    sub_1D5E828E4((uint64_t)v25, (unint64_t *)&unk_1ED5DD090, (unint64_t *)&qword_1ED5E1AC0, MEMORY[0x1E0D53040]);
    sub_1D60A0360((uint64_t)v4);
  }
  else
  {
    *(_QWORD *)&v25[0] = *(_QWORD *)(v1 + 24);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v13;
    *(_QWORD *)(v21 + 24) = v15;
    *(_QWORD *)&v23[0] = v21 | 0x7000000000000000;
    sub_1D5EDADEC();
    sub_1D5E6D4DC((unint64_t *)&qword_1ED5E1100, 255, (uint64_t (*)(uint64_t))sub_1D5EDADEC, MEMORY[0x1E0DB75C0]);
    swift_retain();
    sub_1D6E20B40();
  }
  swift_release();
  swift_release();
  return 1;
}

uint64_t type metadata accessor for SearchURLHandler()
{
  return objc_opt_self();
}

uint64_t sub_1D6891308()
{
  return sub_1D6890D04() & 1;
}

uint64_t sub_1D689132C(uint64_t a1, uint64_t a2)
{
  return sub_1D5E6D4DC(&qword_1ED60EDB0, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchURLHandler, (uint64_t)&unk_1D6E996B4);
}

uint64_t sub_1D6891358()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D689137C()
{
  uint64_t v0;
  _BYTE v2[24];
  uint64_t v3;

  sub_1D6E22AFC();
  sub_1D6E22AF0();
  sub_1D64C8AD4();
  sub_1D6E209E4();
  if (v3)
  {
    sub_1D6E21B90();
    swift_dynamicCast();
  }
  else
  {
    sub_1D5F117D8((uint64_t)v2);
  }
  type metadata accessor for SharedWithYouFeedServiceConfig();
  sub_1D5E6D8C0((unint64_t *)&qword_1ED600BD0, (uint64_t (*)(uint64_t))type metadata accessor for SharedWithYouFeedServiceConfig, (uint64_t)&unk_1D6E66680);
  v0 = sub_1D6E22AE4();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1D6891470(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(a3 + 24);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_1D6E15ECC();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = *(int *)(a3 + 28);
    v16 = (_QWORD *)(v7 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1D68915B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1D6E15ECC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D6891634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1D6E15ECC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 28);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D6891744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1D6E15ECC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 28);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D68918BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1D6E15ECC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1D68919B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1D6E15ECC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D6891B10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6891B1C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1D6891BB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D6891BBC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig()
{
  uint64_t result;

  result = qword_1ED602B38;
  if (!qword_1ED602B38)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D6891C84()
{
  unint64_t v0;

  sub_1D5E847C4(319, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1D6891D24(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[8];
  uint64_t v12;

  v3 = v1;
  sub_1D6892470(0, &qword_1EFFF42E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68923AC();
  sub_1D6E28478();
  v12 = *v3;
  v11[7] = 0;
  sub_1D5E847C4(0, (unint64_t *)&qword_1EFFE1210, type metadata accessor for LegacyAudioConfigArticle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D6318678((unint64_t *)&qword_1EFFE1228, &qword_1EFFE1230, (uint64_t)&unk_1D6E35560, MEMORY[0x1E0DEAF10]);
  sub_1D6E28238();
  if (!v2)
  {
    v11[6] = 1;
    sub_1D6E281D8();
    type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig();
    v11[5] = 2;
    sub_1D6E15ECC();
    sub_1D5E6D8C0(&qword_1ED5E0248, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1D6E281FC();
    v11[4] = 3;
    sub_1D6E28208();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D6891F38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;

  v26 = a2;
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5E0280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - v4;
  sub_1D6892470(0, &qword_1EFFF42D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v28 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - v8;
  v10 = type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68923AC();
  v27 = v9;
  v13 = (uint64_t)v29;
  sub_1D6E2846C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = a1;
  v25 = v5;
  v14 = v7;
  sub_1D5E847C4(0, (unint64_t *)&qword_1EFFE1210, type metadata accessor for LegacyAudioConfigArticle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v33 = 0;
  sub_1D6318678(&qword_1EFFE1218, &qword_1ED5FDAB0, (uint64_t)&unk_1D6E35588, MEMORY[0x1E0DEAF40]);
  v15 = v28;
  v16 = v27;
  sub_1D6E28184();
  v17 = (uint64_t)v12;
  *(_QWORD *)v12 = v34;
  v32 = 1;
  *((_QWORD *)v12 + 1) = sub_1D6E28124();
  v12[16] = v18 & 1;
  sub_1D6E15ECC();
  v31 = 2;
  sub_1D5E6D8C0((unint64_t *)&unk_1ED5E0260, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v19 = (uint64_t)v25;
  sub_1D6E28148();
  sub_1D603B314(v19, v17 + *(int *)(v10 + 24));
  v30 = 3;
  v20 = sub_1D6E28154();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v15);
  v23 = (uint64_t *)(v17 + *(int *)(v10 + 28));
  *v23 = v20;
  v23[1] = v22;
  sub_1D68923F0(v17, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_1D6892434(v17);
}

uint64_t sub_1D6892290()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D68922C0 + 4 * byte_1D6E99720[*v0]))(0x73656C6369747261, 0xE800000000000000);
}

uint64_t sub_1D68922C0()
{
  return 7107700;
}

uint64_t sub_1D68922D0()
{
  return 0x61636F4C72657375;
}

uint64_t sub_1D68922F4()
{
  return 0x696669746E656469;
}

uint64_t sub_1D6892310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D6892670(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D6892334()
{
  sub_1D68923AC();
  return sub_1D6E28538();
}

uint64_t sub_1D689235C()
{
  sub_1D68923AC();
  return sub_1D6E28544();
}

uint64_t sub_1D6892384@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6891F38(a1, a2);
}

uint64_t sub_1D6892398(_QWORD *a1)
{
  return sub_1D6891D24(a1);
}

unint64_t sub_1D68923AC()
{
  unint64_t result;

  result = qword_1EFFF42E0;
  if (!qword_1EFFF42E0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9989C, &type metadata for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF42E0);
  }
  return result;
}

uint64_t sub_1D68923F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6892434(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D6892470(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D68923AC();
    v7 = a3(a1, &type metadata for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D6892518 + 4 * byte_1D6E99729[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D689254C + 4 * byte_1D6E99724[v4]))();
}

uint64_t sub_1D689254C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6892554(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D689255CLL);
  return result;
}

uint64_t sub_1D6892568(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D6892570);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D6892574(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D689257C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys()
{
  return &type metadata for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys;
}

unint64_t sub_1D689259C()
{
  unint64_t result;

  result = qword_1EFFF42F0;
  if (!qword_1EFFF42F0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E99874, &type metadata for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF42F0);
  }
  return result;
}

unint64_t sub_1D68925E4()
{
  unint64_t result;

  result = qword_1EFFF42F8;
  if (!qword_1EFFF42F8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E997E4, &type metadata for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF42F8);
  }
  return result;
}

unint64_t sub_1D689262C()
{
  unint64_t result;

  result = qword_1EFFF4300;
  if (!qword_1EFFF4300)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9980C, &type metadata for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF4300);
  }
  return result;
}

uint64_t sub_1D6892670(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73656C6369747261 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107700 && a2 == 0xE300000000000000 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61636F4C72657375 && a2 == 0xEF7972697078456CLL || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D6E282C8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D6892848()
{
  uint64_t v0;

  sub_1D5FF43C0(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MagazineSectionsEventHandler()
{
  return objc_opt_self();
}

uint64_t sub_1D68928A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _BYTE v22[208];
  _BYTE v23[40];
  _BYTE v24[40];
  _QWORD v25[13];
  __int128 v26;
  _QWORD v27[6];
  uint64_t v28;

  v19 = a2;
  v4 = type metadata accessor for FollowingNotificationsPrewarm();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5FDCFE4(a1, (uint64_t)v6);
  sub_1D5E96490(v2 + 48, (uint64_t)v22);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v10 = *(void **)(v2 + 88);
  v9 = *(_QWORD *)(v2 + 96);
  v11 = *(_QWORD *)(v2 + 112);
  v20 = *(_QWORD *)(v2 + 104);
  v12 = *(_QWORD *)(v2 + 120);
  v21 = *(_OWORD *)(v2 + 16);
  sub_1D5E96490(v2 + 128, (uint64_t)v24);
  sub_1D5E96490(v2 + 208, (uint64_t)v23);
  sub_1D5E96490((uint64_t)v22, (uint64_t)v25);
  v25[5] = v7;
  v25[6] = v8;
  v25[8] = v10;
  v25[9] = v9;
  v25[11] = v11;
  v25[12] = v12;
  v26 = v21;
  sub_1D5E96490((uint64_t)v24, (uint64_t)v27);
  v27[5] = v19;
  sub_1D5E96490((uint64_t)v23, (uint64_t)&v28);
  swift_unknownObjectRetain_n();
  v13 = v10;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v14 = v13;
  v15 = v20;
  swift_unknownObjectRetain();
  v16 = sub_1D60833B0((uint64_t)v6);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  sub_1D5FDD028((uint64_t)v6);
  v25[7] = v16;
  v25[10] = v15;
  sub_1D6088CF8((uint64_t)v25, (uint64_t)v22);
  sub_1D6892CF0();
  swift_allocObject();
  sub_1D60894B8();
  v17 = sub_1D6E1D834();
  sub_1D6089104((uint64_t)v25);
  return v17;
}

uint64_t sub_1D6892AD0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  return v0;
}

uint64_t sub_1D6892B3C()
{
  sub_1D6892AD0();
  return swift_deallocClassInstance();
}

uint64_t sub_1D6892B5C(uint64_t a1, uint64_t a2)
{
  return sub_1D68928A4(a1, a2);
}

uint64_t sub_1D6892B7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  _BYTE v5[64];
  __int128 v6;
  uint64_t v7;

  v4 = *(_OWORD *)(*(_QWORD *)v1 + 16);
  sub_1D6588F14(a1, (uint64_t)&v7);
  v6 = v4;
  sub_1D6892D9C((uint64_t)&v6, (uint64_t)v5);
  sub_1D6892CF0();
  swift_allocObject();
  sub_1D6588F94();
  swift_unknownObjectRetain();
  v2 = sub_1D6E1D834();
  sub_1D6892DD8((uint64_t)&v6);
  return v2;
}

uint64_t sub_1D6892C18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D5E96490(*v1 + 168, (uint64_t)&v7);
  v6 = a1;
  sub_1D6892CB4((uint64_t)&v6, (uint64_t)&v5);
  sub_1D6892CF0();
  swift_allocObject();
  sub_1D61DD2F4();
  swift_bridgeObjectRetain();
  v3 = sub_1D6E1D834();
  sub_1D6892D68((uint64_t)&v6);
  return v3;
}

uint64_t sub_1D6892CB4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FollowingNotificationsSubscriptionChangeTagModifier(a2, a1);
  return a2;
}

void sub_1D6892CF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF4350)
  {
    sub_1D5FB4FA0();
    sub_1D5FBAD20();
    v0 = sub_1D6E1D840();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF4350);
  }
}

uint64_t sub_1D6892D68(uint64_t a1)
{
  destroy for FollowingNotificationsSubscriptionChangeTagModifier(a1);
  return a1;
}

uint64_t sub_1D6892D9C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FollowingNotificationsToggleModifier(a2, a1);
  return a2;
}

uint64_t sub_1D6892DD8(uint64_t a1)
{
  destroy for FollowingNotificationsToggleModifier(a1);
  return a1;
}

uint64_t FormatLayoutModel.articles.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v1 = v0;
  v2 = sub_1D6E23138();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1D6E24908();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D6892F38(v1, (uint64_t)v8);
  sub_1D6892F7C();
  v10 = (uint64_t *)&v8[*(int *)(v9 + 48)];
  v11 = *v10;
  v12 = v10[1];
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v5, v8, v2);
  v13 = sub_1D6E230C0();
  swift_bridgeObjectRetain();
  v14 = sub_1D6893114(v13, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1D6892F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E24908();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1D6892F7C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EFFF4368[0])
  {
    sub_1D6E23138();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, qword_1EFFF4368);
  }
}

uint64_t sub_1D6892FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v1 = v0;
  v2 = sub_1D6E23138();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D6892F38(v1, (uint64_t)v8);
  sub_1D6892F7C();
  v10 = (uint64_t *)&v8[*(int *)(v9 + 48)];
  v11 = *v10;
  v12 = v10[1];
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v6, v8, v2);
  v13 = sub_1D6E230C0();
  swift_bridgeObjectRetain();
  v14 = sub_1D6893114(v13, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1D6893114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  v18 = sub_1D6E17DD4();
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v15 = v3;
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1D6228C4C(0, v8, 0);
    v9 = v21;
    v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v10 = a1 + v17;
    v16 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_1D6E17D80();
      sub_1D6E17DBC();
      sub_1D6E17DC8();
      swift_bridgeObjectRetain();
      sub_1D6E17D74();
      v21 = v9;
      v12 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1D6228C4C(v11 > 1, v12 + 1, 1);
        v9 = v21;
      }
      *(_QWORD *)(v9 + 16) = v12 + 1;
      v13 = v16;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v17 + v12 * v16, v7, v18);
      v10 += v13;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1D68932A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68932AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E2444C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1D68932E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68932F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E2444C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1D6893334()
{
  sub_1D5FB2230();
  return sub_1D6E28538();
}

uint64_t sub_1D689335C()
{
  sub_1D5FB2230();
  return sub_1D6E28544();
}

uint64_t sub_1D6893384(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5FAA910(0, &qword_1ED5DFE50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5FB2230();
  sub_1D6E28478();
  sub_1D6E2444C();
  sub_1D5EFD2A8(&qword_1ED5F3B20, MEMORY[0x1E0D5D918]);
  sub_1D6E28238();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t storeEnumTagSinglePayload for MissedStoriesTodayFeedGroupConfigData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D68934D4 + 4 * byte_1D6E99AD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D68934F4 + 4 * byte_1D6E99AD5[v4]))();
}

_BYTE *sub_1D68934D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D68934F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D68934FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D6893504(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D689350C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D6893514(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MissedStoriesTodayFeedGroupConfigData.CodingKeys()
{
  return &type metadata for MissedStoriesTodayFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1D6893534()
{
  unint64_t result;

  result = qword_1EFFF4398;
  if (!qword_1EFFF4398)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E99BF4, &type metadata for MissedStoriesTodayFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF4398);
  }
  return result;
}

uint64_t sub_1D6893578(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1D6894430(0, (unint64_t *)&unk_1ED60B5D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D689436C();
  sub_1D6E28478();
  v9[15] = 0;
  sub_1D5E84BC4();
  sub_1D5E6D8C0((unint64_t *)&unk_1ED60AF68, (uint64_t (*)(uint64_t))sub_1D5E84BC4, MEMORY[0x1E0D5A7B0]);
  sub_1D6E28238();
  if (!v1)
  {
    type metadata accessor for MySportsTopicTagFeedGroup();
    v9[14] = 1;
    sub_1D6E2198C();
    sub_1D5E6D8C0((unint64_t *)&unk_1ED603A00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], MEMORY[0x1E0D5A428]);
    sub_1D6E28238();
    v9[13] = 2;
    sub_1D6E23528();
    sub_1D5E6D8C0(&qword_1ED60AFE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5C6B8], MEMORY[0x1E0D5C6C8]);
    sub_1D6E28238();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D6893768@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;

  v30 = a2;
  v31 = sub_1D6E23528();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v32 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D6E2198C();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E84BC4();
  v37 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6894430(0, &qword_1EFFF43A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v39 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - v11;
  v13 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D689436C();
  v38 = v12;
  v16 = v40;
  sub_1D6E2846C();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v40 = v10;
  v27 = v13;
  v28 = v7;
  v17 = (uint64_t)v15;
  v18 = (uint64_t)a1;
  v20 = v33;
  v19 = v34;
  v21 = v35;
  v43 = 0;
  sub_1D5E6D8C0(&qword_1EFFF43A8, (uint64_t (*)(uint64_t))sub_1D5E84BC4, MEMORY[0x1E0D5A7B8]);
  v23 = v36;
  v22 = v37;
  sub_1D6E28184();
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v17, v23, v22);
  v42 = 1;
  sub_1D5E6D8C0((unint64_t *)&unk_1ED603A10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], MEMORY[0x1E0D5A430]);
  sub_1D6E28184();
  v24 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v17 + *(int *)(v27 + 20), v20, v21);
  v41 = 2;
  sub_1D5E6D8C0(&qword_1EFFF43B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5C6B8], MEMORY[0x1E0D5C6D8]);
  v25 = v31;
  sub_1D6E28184();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v17 + *(int *)(v24 + 24), v32, v25);
  sub_1D68943B0(v17, v30);
  __swift_destroy_boxed_opaque_existential_1(v18);
  return sub_1D68943F4(v17);
}

uint64_t sub_1D6893B38()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x724774616D726F66;
  if (*v0 != 1)
    v1 = 0xD000000000000019;
  if (*v0)
    return v1;
  else
    return 0x6769666E6F63;
}

uint64_t sub_1D6893B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D6894630(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D6893BC0()
{
  sub_1D689436C();
  return sub_1D6E28538();
}

uint64_t sub_1D6893BE8()
{
  sub_1D689436C();
  return sub_1D6E28544();
}

uint64_t sub_1D6893C10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6893768(a1, a2);
}

uint64_t sub_1D6893C24(_QWORD *a1)
{
  return sub_1D6893578(a1);
}

uint64_t sub_1D6893C38()
{
  sub_1D5E6D8C0(&qword_1ED60A860, (uint64_t (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup, (uint64_t)&unk_1D6E99CEC);
  return sub_1D6E23F24();
}

uint64_t sub_1D6893C78()
{
  return 0x74726F705320794DLL;
}

uint64_t sub_1D6893C9C()
{
  return sub_1D6E218CC();
}

uint64_t sub_1D6893CC0()
{
  return sub_1D5E6D8C0(&qword_1ED615560, (uint64_t (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup, (uint64_t)&unk_1D6E99C7C);
}

uint64_t sub_1D6893CEC()
{
  return sub_1D5E6D8C0(&qword_1ED6053C8, (uint64_t (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup, (uint64_t)&unk_1D6E99D54);
}

uint64_t sub_1D6893D18()
{
  return sub_1D5E6D8C0(&qword_1ED60A868, (uint64_t (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup, (uint64_t)&unk_1D6E99CC4);
}

uint64_t *sub_1D6893D44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D5E84BC4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D6E2198C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1D6E23528();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1D6893E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D5E84BC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D6E2198C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_1D6E23528();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_1D6893EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D5E84BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D6E2198C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D6E23528();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_1D6893F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D5E84BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D6E2198C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D6E23528();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1D6894008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D5E84BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D6E2198C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D6E23528();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_1D68940B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D5E84BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D6E2198C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D6E23528();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1D6894168()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6894174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1D5E84BC4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_1D6E2198C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_1D6E23528();
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1D689420C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6894218(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D5E84BC4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_1D6E2198C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1D6E23528();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D68942B8(uint64_t a1)
{
  uint64_t result;

  result = sub_1D5E6D8C0((unint64_t *)&unk_1ED60A890, (uint64_t (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup, (uint64_t)&unk_1D6E99E08);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D68942F4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1D5E6D8C0(&qword_1ED60A860, (uint64_t (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup, (uint64_t)&unk_1D6E99CEC);
  a1[2] = sub_1D5E6D8C0((unint64_t *)&unk_1ED60A880, (uint64_t (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup, (uint64_t)&unk_1D6E99DE0);
  result = sub_1D5E6D8C0((unint64_t *)&unk_1ED60A870, (uint64_t (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup, (uint64_t)&unk_1D6E99DB8);
  a1[3] = result;
  return result;
}

unint64_t sub_1D689436C()
{
  unint64_t result;

  result = qword_1ED60A848;
  if (!qword_1ED60A848)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E99EE8, &type metadata for MySportsTopicTagFeedGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED60A848);
  }
  return result;
}

uint64_t sub_1D68943B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MySportsTopicTagFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D68943F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MySportsTopicTagFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D6894430(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D689436C();
    v7 = a3(a1, &type metadata for MySportsTopicTagFeedGroup.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for MySportsTopicTagFeedGroup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D68944D8 + 4 * byte_1D6E99C75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D689450C + 4 * byte_1D6E99C70[v4]))();
}

uint64_t sub_1D689450C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D6894514(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D689451CLL);
  return result;
}

uint64_t sub_1D6894528(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D6894530);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D6894534(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D689453C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MySportsTopicTagFeedGroup.CodingKeys()
{
  return &type metadata for MySportsTopicTagFeedGroup.CodingKeys;
}

unint64_t sub_1D689455C()
{
  unint64_t result;

  result = qword_1EFFF43B8;
  if (!qword_1EFFF43B8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E99EC0, &type metadata for MySportsTopicTagFeedGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF43B8);
  }
  return result;
}

unint64_t sub_1D68945A4()
{
  unint64_t result;

  result = qword_1ED60A858;
  if (!qword_1ED60A858)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E99E30, &type metadata for MySportsTopicTagFeedGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED60A858);
  }
  return result;
}

unint64_t sub_1D68945EC()
{
  unint64_t result;

  result = qword_1ED60A850;
  if (!qword_1ED60A850)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E99E58, &type metadata for MySportsTopicTagFeedGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED60A850);
  }
  return result;
}

uint64_t sub_1D6894630(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6769666E6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x724774616D726F66 && a2 == 0xEB0000000070756FLL || (sub_1D6E282C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D6F267C0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D6E282C8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t type metadata accessor for FollowingNotificationsDisabledViewRenderer()
{
  return objc_opt_self();
}

void sub_1D68947B0(uint64_t a1, char *a2, uint64_t a3)
{
  void *v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  uint64_t inited;
  void *v10;
  void *v11;
  double v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  int *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;

  v6 = *(void **)&a2[OBJC_IVAR____TtC7NewsUI234FollowingNotificationsDisabledView_titleLabel];
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D6E15968();

  sub_1D5F72D10();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D6E32F90;
  v10 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v11 = (void *)objc_opt_self();
  v12 = *MEMORY[0x1E0DC1440];
  v13 = v10;
  v14 = objc_msgSend(v11, sel_systemFontOfSize_weight_, 27.0, v12, 0x80000001D6EEAF90);
  *(_QWORD *)(inited + 64) = sub_1D602AD74();
  *(_QWORD *)(inited + 40) = v14;
  sub_1D5F71A68(inited);
  v15 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v16 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1D5F72CC8();
  v17 = (void *)sub_1D6E267C8();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);
  swift_bridgeObjectRelease();

  objc_msgSend(v6, sel_setAttributedText_, v18);
  v19 = (int *)type metadata accessor for FollowingNotificationsDisabledViewLayoutAttributes();
  objc_msgSend(v6, sel_setFrame_, *(double *)(a3 + v19[6]), *(double *)(a3 + v19[6] + 8), *(double *)(a3 + v19[6] + 16), *(double *)(a3 + v19[6] + 24));
  sub_1D6355184(a1);
  if (v20)
  {
    v21 = *(void **)&a2[OBJC_IVAR____TtC7NewsUI234FollowingNotificationsDisabledView_subtitleLabel];
    v22 = sub_1D6DEED50();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setAttributedText_, v22);

    objc_msgSend(v21, sel_setFrame_, *(double *)(a3 + v19[7]), *(double *)(a3 + v19[7] + 8), *(double *)(a3 + v19[7] + 16), *(double *)(a3 + v19[7] + 24));
  }
  v23 = *(void **)&a2[OBJC_IVAR____TtC7NewsUI234FollowingNotificationsDisabledView_button];
  sub_1D63552F8(a1);
  if (v24)
  {
    v25 = (void *)sub_1D6E26948();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  objc_msgSend(v23, sel_setTitle_forState_, v25, 0);

  objc_msgSend(v23, sel_setFrame_, *(double *)(a3 + v19[8]), *(double *)(a3 + v19[8] + 8), *(double *)(a3 + v19[8] + 16), *(double *)(a3 + v19[8] + 24));
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(v26, sel_systemBackgroundColor);
  objc_msgSend(a2, sel_setBackgroundColor_, v27);

  objc_msgSend(v6, sel_setTextAlignment_, 1);
  v28 = objc_msgSend(v26, sel_labelColor);
  objc_msgSend(v6, sel_setTextColor_, v28);

  v29 = *(void **)&a2[OBJC_IVAR____TtC7NewsUI234FollowingNotificationsDisabledView_subtitleLabel];
  objc_msgSend(v29, sel_setTextAlignment_, 1);
  v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.588235294, 0.588235294, 0.588235294, 1.0);
  objc_msgSend(v29, sel_setTextColor_, v30);

  objc_msgSend(v29, sel_setNumberOfLines_, 0);
  sub_1D6DEEF2C(v23);
}

uint64_t sub_1D6894BE4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  sub_1D6894EC4();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = sub_1D6E17DF8();
  sub_1D6E19F70();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5EDADEC();
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v10 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D6E16CD0();
  result = sub_1D6E19F64();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v11 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E7809C(0, (unint64_t *)&qword_1ED5E1240);
  result = sub_1D6E19F70();
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78884(0, (unint64_t *)&qword_1ED5E95E0);
  result = sub_1D6E19F64();
  if (result)
  {
    v12 = result;
    v13 = type metadata accessor for IssueLinkActionHandler();
    v14 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14 + OBJC_IVAR____TtC7NewsUI222IssueLinkActionHandler_issue, v6, v7);
    *(_QWORD *)(v14 + 16) = v10;
    *(_QWORD *)(v14 + OBJC_IVAR____TtC7NewsUI222IssueLinkActionHandler_tracker) = v11;
    sub_1D5E8D7A0(&v16, v14 + OBJC_IVAR____TtC7NewsUI222IssueLinkActionHandler_urlHandler);
    *(_QWORD *)(v14 + OBJC_IVAR____TtC7NewsUI222IssueLinkActionHandler_featureAvailability) = v12;
    a2[3] = v13;
    result = sub_1D6894F18();
    a2[4] = result;
    *a2 = v14;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_1D6894E38(_QWORD *a1)
{
  void *v1;
  void *v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F42B0);
  v1 = (void *)sub_1D6E19F64();
  if (!v1)
  {
    __break(1u);
    goto LABEL_5;
  }
  v2 = v1;
  v3 = objc_msgSend(v1, sel_issueAccessChecker);

  if (!v3)
LABEL_5:
    __break(1u);
}

void sub_1D6894EC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5DCD28)
  {
    sub_1D6E17DF8();
    v0 = sub_1D6E27C38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5DCD28);
  }
}

unint64_t sub_1D6894F18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFFF4460;
  if (!qword_1EFFF4460)
  {
    v1 = type metadata accessor for IssueLinkActionHandler();
    result = MEMORY[0x1D82917D0](&protocol conformance descriptor for IssueLinkActionHandler, v1);
    atomic_store(result, (unint64_t *)&qword_1EFFF4460);
  }
  return result;
}

uint64_t *sub_1D6894F60(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D6895100();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D608A014();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
    *(_QWORD *)&v9[*(int *)(v12 + 20)] = *(_QWORD *)&v10[*(int *)(v12 + 20)];
    *(_QWORD *)&v9[*(int *)(v12 + 24)] = *(_QWORD *)&v10[*(int *)(v12 + 24)];
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v16;
    v17 = v16;
    v18 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_retain();
    swift_retain();
    v18(v14, v15, v17);
    v19 = a3[7];
    v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)((char *)a1 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
    v21 = a3[8];
    v22 = *(_OWORD *)((char *)a2 + v21 + 24);
    *(_OWORD *)((char *)a1 + v21 + 24) = v22;
    (**(void (***)(void))(v22 - 8))();
    v23 = a3[10];
    *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *(_OWORD *)(v25 + 24);
    *(_OWORD *)((char *)a1 + v23 + 24) = v26;
    v27 = v26;
    v28 = **(void (***)(char *, char *, uint64_t))(v26 - 8);
    swift_unknownObjectRetain();
    v28(v24, v25, v27);
  }
  return a1;
}

void sub_1D6895100()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED622EF0)
  {
    type metadata accessor for SportsOnboardingTagFeedGroupConfigData();
    sub_1D5E6D8C0(&qword_1ED621778, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupConfigData, (uint64_t)&unk_1D6EE3320);
    sub_1D5E6D8C0(&qword_1ED621770, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupConfigData, (uint64_t)&unk_1D6EE32F8);
    v0 = sub_1D6E21C68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED622EF0);
  }
}

uint64_t sub_1D68951A4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D6895100();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[8]);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + a2[10]);
}

uint64_t sub_1D6895268(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);

  sub_1D6895100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  v16 = v15;
  v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  swift_retain();
  v17(v13, v14, v16);
  v18 = a3[7];
  v19 = *(_OWORD *)(a2 + v18 + 24);
  *(_OWORD *)(a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  v20 = a3[8];
  v21 = *(_OWORD *)(a2 + v20 + 24);
  *(_OWORD *)(a1 + v20 + 24) = v21;
  (**(void (***)(void))(v21 - 8))();
  v22 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_OWORD *)(v24 + 24);
  *(_OWORD *)(a1 + v22 + 24) = v25;
  v26 = v25;
  v27 = **(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8);
  swift_unknownObjectRetain();
  v27(v23, v24, v26);
  return a1;
}

uint64_t sub_1D68953DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  sub_1D6895100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  v12 = a3[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v13[1] = v15;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[10]), (uint64_t *)(a2 + a3[10]));
  return a1;
}

uint64_t sub_1D6895514(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  sub_1D6895100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  v17 = a1 + v13;
  v18 = a2 + v13;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = a3[8];
  v21 = a3[9];
  v22 = a1 + v20;
  v23 = a2 + v20;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
  return a1;
}

uint64_t sub_1D689562C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  sub_1D6895100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  swift_release();
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  swift_release();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  __swift_destroy_boxed_opaque_existential_1(a1 + v16);
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  __swift_destroy_boxed_opaque_existential_1(a1 + v20);
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  v24 = a3[9];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  swift_unknownObjectRelease();
  v25[1] = v27;
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  __swift_destroy_boxed_opaque_existential_1(a1 + v28);
  v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  return a1;
}

uint64_t sub_1D6895794()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68957A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_1D6895100();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1D689584C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D6895858(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_1D6895100();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SportsOnboardingTagFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1ED61F820;
  if (!qword_1ED61F820)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D689593C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D6895100();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_1D68959D8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t v4;
  unint64_t v5;

  v0 = type metadata accessor for SportsOnboardingTagFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = 0;
  v5 = 0xE000000000000000;
  sub_1D6E27EA8();
  swift_bridgeObjectRelease();
  v4 = 0xD000000000000013;
  v5 = 0x80000001D6F2C610;
  sub_1D6895100();
  sub_1D6E21C08();
  swift_bridgeObjectRetain();
  sub_1D5E8D20C((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupConfigData);
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  return v4;
}

uint64_t sub_1D6895AE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1D6895100();
  v4 = v3;
  v5 = swift_allocBox();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5 | 0x7000000000000000;
  return result;
}

uint64_t sub_1D6895B3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;

  v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  a2[4] = sub_1D5E6D8C0(&qword_1ED61DE40, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupKnobs, (uint64_t)&unk_1D6E61994);
  a2[5] = sub_1D5E6D8C0(&qword_1EFFF4468, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupKnobs, (uint64_t)&unk_1D6E6196C);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1D5E82ECC(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupKnobs);
}

uint64_t sub_1D6895BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  sub_1D608A014();
  v0 = sub_1D6E2255C();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED624A20, (uint64_t (*)(uint64_t))sub_1D60D15FC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1D60D15FC(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D6E32F90;
  v6 = (uint64_t *)(v5 + v4);
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED623400, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5C200]);
  swift_allocObject();
  *v6 = sub_1D6E2324C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0D5B508], v2);
  sub_1D6686B78(v5);
  return v0;
}

uint64_t sub_1D6895D64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18[2];
  uint64_t v19;
  uint64_t v20;

  v3 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1;
  v20 = a1;
  v18[0] = v1;
  sub_1D5FAD0E8();
  sub_1D6E1AE1C();
  sub_1D5E82ECC(v1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v18[1] = v7 + v5;
  v8 = (v7 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = swift_allocObject();
  sub_1D5F0D758((uint64_t)v6, v9 + v7, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  *(_QWORD *)(v9 + v8) = a1;
  swift_retain();
  v10 = (void *)sub_1D6E1AB4C();
  sub_1D6E24428();
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  v11 = v18[0];
  sub_1D5E82ECC(v18[0], (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  v12 = swift_allocObject();
  sub_1D5F0D758((uint64_t)v6, v12 + v7, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  *(_QWORD *)(v12 + v8) = a1;
  swift_retain();
  v13 = (void *)sub_1D6E1AB4C();
  sub_1D609D134(0);
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  sub_1D5E82ECC(v11, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  v14 = swift_allocObject();
  sub_1D5F0D758((uint64_t)v6, v14 + v7, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  v15 = (void *)sub_1D6E1AB4C();
  v16 = sub_1D6E1ACCC();
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_1D6895FBC()
{
  sub_1D6895100();
  return sub_1D6E21BB4();
}

uint64_t sub_1D6895FD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D68959D8();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4E50, (uint64_t (*)(uint64_t))sub_1D5FADACC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D6E32F90;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1D6895100();
  v3 = sub_1D6E21BB4();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  sub_1D5F77E70(inited);
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED60C100, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
  a1[3] = v5;
  a1[4] = sub_1D6899158();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D6E1A330();
}

uint64_t sub_1D68960E0()
{
  sub_1D5E6D8C0((unint64_t *)&unk_1ED61F800, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter, (uint64_t)&unk_1D6E9A080);
  return sub_1D6E1A324();
}

uint64_t sub_1D6896120()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1ED61F810, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter, (uint64_t)&unk_1D6E9A058);
}

uint64_t sub_1D689614C()
{
  return sub_1D5E6D8C0(&qword_1ED61F7F8, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter, (uint64_t)&unk_1D6E9A0B0);
}

uint64_t sub_1D6896178()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1ED61F800, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter, (uint64_t)&unk_1D6E9A080);
}

uint64_t sub_1D68961A4()
{
  uint64_t v0;

  return sub_1D68961D0(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1D68961D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v3 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  if (qword_1ED6241B8 != -1)
    swift_once();
  sub_1D6E27374();
  v6 = sub_1D6E1C61C();
  MEMORY[0x1E0C80A78](v6);
  *(&v14 - 2) = v1;
  *(&v14 - 1) = a1;
  sub_1D6898E34();
  sub_1D6E1AE1C();
  sub_1D5E82ECC(v1, (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  sub_1D5F0D758((uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  *(_QWORD *)(v8 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1D6898EC8;
  *(_QWORD *)(v9 + 24) = v8;
  swift_retain();
  v10 = (void *)sub_1D6E1AB4C();
  sub_1D5FAD0E8();
  sub_1D6E1AC24();
  swift_release();
  swift_release();

  v11 = (void *)sub_1D6E1AB4C();
  v12 = sub_1D6E1AC60();
  swift_release();

  return v12;
}

uint64_t sub_1D68963E0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v5 = sub_1D6E2444C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SportsOnboardingTagFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_1D6895100();
  sub_1D6E21C08();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v11[*(int *)(v9 + 20)], v5);
  sub_1D5E8D20C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupConfigData);
  v13 = sub_1D689656C(a3, (uint64_t)v8, v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v13;
}

uint64_t sub_1D6896510(unint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for SportsOnboardingTagFeedGroupEmitter() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1D68963E0(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1D689656C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  void *v57;
  char *v58;
  uint64_t v59;
  _QWORD v60[2];
  __int128 v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[3];
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v69 = a1;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, &qword_1ED603D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v74 = (char *)v60 - v7;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED623980, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v5);
  MEMORY[0x1E0C80A78](v8);
  v66 = (char *)v60 - v9;
  v63 = type metadata accessor for SportsOnboardingTagFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v63);
  v64 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED623060, (uint64_t (*)(uint64_t))sub_1D608A014, v5);
  MEMORY[0x1E0C80A78](v11);
  v65 = (char *)v60 - v12;
  v13 = sub_1D6E24F8C();
  v72 = *(_QWORD *)(v13 - 8);
  v73 = v13;
  MEMORY[0x1E0C80A78](v13);
  v71 = (char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v5);
  MEMORY[0x1E0C80A78](v15);
  v62 = (char *)v60 - v16;
  v70 = sub_1D6E2489C();
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v18 = (char *)v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D6E25AFC();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (_QWORD *)((char *)v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_1D6E25C40();
  v76 = *(_QWORD *)(v23 - 8);
  v77 = v23;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6241B8 != -1)
    swift_once();
  v78 = v25;
  sub_1D5F2C60C();
  v26 = swift_allocObject();
  v61 = xmmword_1D6E32F90;
  *(_OWORD *)(v26 + 16) = xmmword_1D6E32F90;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v67 = v18;
  v28 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v26 + 64) = v28;
  *(_QWORD *)(v26 + 32) = v27;
  sub_1D6E27374();
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();
  v29 = sub_1D6898BA0(a3);
  if (v29 >> 62)
    v30 = sub_1D6E28040();
  else
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  v31 = v78;
  v75 = a2;
  if (!v30)
  {
    swift_bridgeObjectRelease();
    v40 = v76;
    v41 = v77;
LABEL_18:
    v42 = MEMORY[0x1E0DEE9D8];
    sub_1D6473000(MEMORY[0x1E0DEE9D8]);
    sub_1D6473114(v42);
    sub_1D6473238(v42);
    sub_1D6E25C34();
    v43 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
    sub_1D5E96490(v79 + *(int *)(v43 + 24), (uint64_t)v83);
    v80 = v84;
    v81 = v85;
    v60[1] = __swift_project_boxed_opaque_existential_1(v83, v84);
    sub_1D5E847C4(0, &qword_1ED5F4E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F978], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v44 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v61;
    (*(void (**)(unint64_t, char *, uint64_t))(v40 + 16))(v45 + v44, v31, v41);
    v46 = sub_1D6E212F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v62, 1, 1, v46);
    sub_1D6CFC87C(v42);
    sub_1D6CFC87C(v42);
    sub_1D6CFC9A0(v42);
    sub_1D6CFC9AC(v42);
    sub_1D6CFCACC(v42);
    sub_1D6CFCAD8(v42);
    v47 = v67;
    sub_1D6E24890();
    v48 = v79 + *(int *)(v43 + 20);
    sub_1D608A014();
    v50 = v49;
    v51 = *(_QWORD *)(v49 - 8);
    v52 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v65, v48, v49);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v50);
    sub_1D6895100();
    swift_retain();
    v53 = (uint64_t)v64;
    sub_1D6E21C08();
    swift_bridgeObjectRetain();
    sub_1D5E8D20C(v53, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupConfigData);
    v54 = sub_1D6E256AC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v66, 1, 1, v54);
    LOBYTE(v86) = 29;
    sub_1D5E84EF4(0, (unint64_t *)&unk_1ED6239B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5F438]);
    swift_allocObject();
    sub_1D6E2588C();
    sub_1D6E22B80();
    sub_1D6292ABC();
    swift_release();
    sub_1D6E22B80();
    v55 = *(id *)(v82 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
    swift_release();
    sub_1D6E258BC();
    swift_allocObject();
    sub_1D6E258B0();
    v56 = sub_1D6E24D4C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v74, 1, 1, v56);
    v57 = (void *)qword_1ED698E28;
    (id)*MEMORY[0x1E0D58688];
    v57;
    v58 = v71;
    sub_1D6E24F68();
    v59 = sub_1D6E2498C();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v58, v73);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v47, v70);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v77);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    return v59;
  }
  v83[0] = MEMORY[0x1E0DEE9D8];
  result = sub_1D62275AC(0, v30 & ~(v30 >> 63), 0);
  if ((v30 & 0x8000000000000000) == 0)
  {
    v33 = 0;
    v34 = v83[0];
    v80 = v29 & 0xC000000000000001;
    v81 = v30;
    v35 = *MEMORY[0x1E0D5F7A8];
    v36 = v29;
    do
    {
      if (v80)
        v37 = MEMORY[0x1D8290720](v33, v29);
      else
        v37 = swift_unknownObjectRetain();
      *v22 = v37;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v20 + 104))(v22, v35, v19);
      v83[0] = v34;
      v39 = *(_QWORD *)(v34 + 16);
      v38 = *(_QWORD *)(v34 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_1D62275AC(v38 > 1, v39 + 1, 1);
        v34 = v83[0];
      }
      ++v33;
      *(_QWORD *)(v34 + 16) = v39 + 1;
      (*(void (**)(unint64_t, uint64_t *, uint64_t))(v20 + 32))(v34+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v39, v22, v19);
      v29 = v36;
    }
    while (v81 != v33);
    swift_bridgeObjectRelease();
    v40 = v76;
    v41 = v77;
    v31 = v78;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6896ED4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D609D134(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D689707C(a1, (uint64_t)v7);
  sub_1D5E82ECC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TagFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED60C4D0, (uint64_t (*)(uint64_t))sub_1D609D134, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v8 = sub_1D6E1AC90();
  sub_1D5E8D20C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TagFeedGroup);
  return v8;
}

uint64_t sub_1D6897020(uint64_t a1)
{
  type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  return sub_1D6896ED4(a1);
}

uint64_t sub_1D689707C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a2;
  v30 = type metadata accessor for SportsOnboardingTagFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v30);
  v29 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, &qword_1ED5F3850, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5AE10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v26 - v5;
  v7 = sub_1D6E22E98();
  v8 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1D6E24428();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D6E2198C();
  v27 = *(_QWORD *)(v13 - 8);
  v28 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  sub_1D6895100();
  v16 = sub_1D6E21BC0();
  v26[1] = v17;
  v26[2] = v16;
  sub_1D6E21BCC();
  sub_1D6E21BCC();
  type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  sub_1D608A014();
  sub_1D6E22598();
  sub_1D6E22574();
  v18 = sub_1D6E222BC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  sub_1D6E2192C();
  v19 = (uint64_t)v29;
  sub_1D6E21C08();
  v20 = (uint64_t *)(v19 + *(int *)(v30 + 24));
  v22 = *v20;
  v21 = v20[1];
  swift_bridgeObjectRetain();
  sub_1D5E8D20C(v19, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupConfigData);
  v23 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v31, v15, v28);
  v24 = (_QWORD *)(v23 + *(int *)(type metadata accessor for SportsOnboardingTagFeedGroup() + 20));
  *v24 = v22;
  v24[1] = v21;
  type metadata accessor for TagFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D6897398()
{
  sub_1D68959D8();
  if (qword_1ED6241B8 != -1)
    swift_once();
  type metadata accessor for TagFeedGroup();
  sub_1D609D158();
  sub_1D6E22C1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D6897454()
{
  type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  return sub_1D6897398();
}

uint64_t sub_1D68974AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[6];

  v3 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *(int *)(v6 + 28)), *(_QWORD *)(a1 + *(int *)(v6 + 28) + 24));
  v20[3] = sub_1D66524A0(1);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *(int *)(v3 + 32)), *(_QWORD *)(a1 + *(int *)(v3 + 32) + 24));
  v20[2] = sub_1D6E1A0F0();
  v7 = *(_QWORD *)(a1 + *(int *)(v3 + 36));
  sub_1D6E22B80();
  v8 = *(void **)(v20[5] + 64);
  swift_unknownObjectRetain();
  swift_release();
  if ((objc_msgSend(v8, sel_respondsToSelector_, sel_editorialFallbackSportsTopicTagIds) & 1) != 0)
  {
    v9 = objc_msgSend(v8, sel_editorialFallbackSportsTopicTagIds);
    v10 = swift_unknownObjectRelease();
    v20[1] = v1;
    if (v9)
    {
      v11 = sub_1D6E26D80();

    }
    else
    {
      v11 = MEMORY[0x1E0DEE9D8];
    }
    MEMORY[0x1E0C80A78](v10);
    v20[-2] = v7;
    v20[-1] = v11;
    sub_1D5E847C4(0, (unint64_t *)&unk_1ED5E0DB0, (uint64_t (*)(uint64_t))sub_1D6105260, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1D6E1AD08();
    v12 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v12);
    v20[-2] = a1;
    sub_1D6E24EFC();
    sub_1D6E1AE1C();
    sub_1D5E82ECC(a1, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
    v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v14 = swift_allocObject();
    sub_1D5F0D758((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
    v15 = (void *)sub_1D6E1AB4C();
    sub_1D6105260(0);
    sub_1D6E1AC18();
    swift_release();
    swift_release();

    v16 = (void *)sub_1D6E1AB4C();
    sub_1D5FAD0E8();
    sub_1D6E1AC18();
    swift_release();

    v17 = (void *)sub_1D6E1AB4C();
    sub_1D6E1ACC0();
    swift_release();

    v18 = sub_1D6E1ADD4();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v18;
  }
  else
  {
    result = swift_unknownObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D689780C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t i;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v44 = a5;
  v45 = a7;
  v46 = a2;
  v9 = sub_1D6E1C394();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D6E1C34C();
  v14 = MEMORY[0x1E0DEE9D8];
  v47 = MEMORY[0x1E0DEE9D8];
  v15 = *(_QWORD *)(v13 + 16);
  if (v15)
  {
    v42 = a4;
    v43 = a6;
    v16 = v13 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v17 = *(_QWORD *)(v10 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    v41 = v13;
    swift_bridgeObjectRetain();
    do
    {
      v18(v12, v16, v9);
      v19 = objc_msgSend((id)sub_1D6E1C388(), sel_asSports);
      swift_unknownObjectRelease();
      v20 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      if (v19)
      {
        MEMORY[0x1D828F58C](v20);
        if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D6E26E40();
        sub_1D6E26E70();
        sub_1D6E26DA4();
      }
      v16 += v17;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    v21 = v47;
    a4 = v42;
    v14 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v21 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v47 = v14;
  v22 = v46;
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D6E28040();
    v23 = result;
    if (result)
      goto LABEL_12;
LABEL_24:
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9D8];
    goto LABEL_25;
  }
  v23 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v23)
    goto LABEL_24;
LABEL_12:
  if (v23 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v23; ++i)
  {
    if ((a4 & 0xC000000000000001) != 0)
    {
      v26 = MEMORY[0x1D8290720](i, a4);
    }
    else
    {
      v26 = *(_QWORD *)(a4 + 8 * i + 32);
      swift_retain();
    }
    v27 = objc_msgSend(*(id *)(v26 + 16), sel_asSports);
    v28 = swift_release();
    if (v27)
    {
      MEMORY[0x1D828F58C](v28);
      if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1D6E26E40();
      sub_1D6E26E70();
      sub_1D6E26DA4();
    }
  }
  swift_bridgeObjectRelease();
  v29 = v47;
LABEL_25:
  if (qword_1ED6241B8 != -1)
    swift_once();
  sub_1D5F2C60C();
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1D6E349D0;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v32 = MEMORY[0x1E0DEB418];
  v33 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v30 + 64) = v33;
  *(_QWORD *)(v30 + 32) = v31;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v34 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v30 + 96) = v32;
  *(_QWORD *)(v30 + 104) = v33;
  *(_QWORD *)(v30 + 72) = v34;
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    v35 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v30 + 136) = v32;
  *(_QWORD *)(v30 + 144) = v33;
  *(_QWORD *)(v30 + 112) = v35;
  sub_1D6E27374();
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();
  v47 = v22;
  swift_bridgeObjectRetain();
  sub_1D66871B8(v21);
  sub_1D66871B8(v29);
  v36 = swift_bridgeObjectRetain();
  sub_1D66871B8(v36);
  sub_1D5FAD0E8();
  sub_1D5E6D8C0((unint64_t *)&qword_1ED623E40, (uint64_t (*)(uint64_t))sub_1D5FAD0E8, MEMORY[0x1E0DEAF38]);
  v37 = sub_1D6E26BDC();
  swift_bridgeObjectRelease();
  v38 = v45;
  v39 = sub_1D6897CFC(v45, v37);
  swift_bridgeObjectRelease();
  v40 = sub_1D68982B8(v38, v39);
  swift_bridgeObjectRelease();
  return v40;
}

unint64_t sub_1D6897CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[3];
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, unint64_t, uint64_t);
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v46[2] = a2;
  v2 = sub_1D6E24428();
  v55 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  MEMORY[0x1E0C80A78](v2);
  v54 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1E0C80A78](v60);
  v5 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SportsOnboardingTagFeedGroup();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED622D00, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5A700]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v46 - v12;
  sub_1D6E22B80();
  v14 = *(id *)(v63 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_subscriptionController);
  swift_release();
  v15 = objc_msgSend(v14, sel_mutedTagIDs);

  v16 = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v47 = sub_1D6E26D80();

  }
  else
  {
    v47 = MEMORY[0x1E0DEE9D8];
  }
  v17 = sub_1D6E22B74();
  v63 = v16;
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v59 = v17 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v19 = *(_QWORD *)(v11 + 72);
    v57 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
    v58 = v19;
    v46[1] = v17;
    swift_bridgeObjectRetain();
    v20 = 0;
    v51 = v8;
    v52 = v5;
    v49 = v11;
    v50 = v10;
    v48 = v13;
    v53 = v18;
    while (1)
    {
      v57(v13, v59 + v58 * v20, v10);
      sub_1D6E21B78();
      v22 = swift_getEnumCaseMultiPayload() == 28;
      v61 = v20;
      if (v22)
        break;
      sub_1D5E8D20C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TagFeedGroup);
      v21 = v16;
LABEL_6:
      v20 = v61 + 1;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      sub_1D5F8B790(v21);
      if (v20 == v18)
      {
        swift_bridgeObjectRelease_n();
        v24 = v63;
        goto LABEL_25;
      }
    }
    sub_1D5F0D758((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroup);
    v23 = v54;
    sub_1D6E21944();
    v24 = sub_1D6E243BC();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v56);
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      v25 = sub_1D6E28040();
      swift_bridgeObjectRelease();
      if (v25)
        goto LABEL_11;
    }
    else
    {
      v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v25)
      {
LABEL_11:
        v62 = MEMORY[0x1E0DEE9D8];
        v26 = (unint64_t)&v62;
        sub_1D5F949A4(0, v25 & ~(v25 >> 63), 0);
        if (v25 < 0)
        {
          __break(1u);
          goto LABEL_30;
        }
        v27 = 0;
        v21 = v62;
        do
        {
          if ((v24 & 0xC000000000000001) != 0)
          {
            v28 = (void *)MEMORY[0x1D8290720](v27, v24);
          }
          else
          {
            v28 = *(void **)(v24 + 8 * v27 + 32);
            swift_unknownObjectRetain();
          }
          v29 = objc_msgSend(v28, sel_identifier);
          v30 = sub_1D6E26978();
          v32 = v31;
          swift_unknownObjectRelease();

          v62 = v21;
          v34 = *(_QWORD *)(v21 + 16);
          v33 = *(_QWORD *)(v21 + 24);
          if (v34 >= v33 >> 1)
          {
            sub_1D5F949A4(v33 > 1, v34 + 1, 1);
            v21 = v62;
          }
          ++v27;
          *(_QWORD *)(v21 + 16) = v34 + 1;
          v35 = v21 + 16 * v34;
          *(_QWORD *)(v35 + 32) = v30;
          *(_QWORD *)(v35 + 40) = v32;
        }
        while (v25 != v27);
        swift_bridgeObjectRelease();
        v8 = v51;
        v5 = v52;
        v11 = v49;
        v10 = v50;
        v13 = v48;
        v16 = MEMORY[0x1E0DEE9D8];
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
    v21 = MEMORY[0x1E0DEE9D8];
LABEL_22:
    sub_1D5E8D20C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SportsOnboardingTagFeedGroup);
    v18 = v53;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  v24 = MEMORY[0x1E0DEE9D8];
LABEL_25:
  v63 = v47;
  swift_bridgeObjectRetain();
  v36 = swift_bridgeObjectRetain();
  sub_1D5F8B790(v36);
  v37 = sub_1D5F0953C(v63);
  swift_bridgeObjectRelease();
  v38 = swift_bridgeObjectRetain();
  v26 = sub_1D5FF4C88(v38, v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED6241B8 != -1)
LABEL_30:
    swift_once();
  sub_1D5F2C60C();
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1D6E349D0;
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    v40 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v40 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v41 = MEMORY[0x1E0DEB418];
  v42 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v39 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v39 + 64) = v42;
  *(_QWORD *)(v39 + 32) = v40;
  v43 = *(_QWORD *)(v47 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 96) = v41;
  *(_QWORD *)(v39 + 104) = v42;
  *(_QWORD *)(v39 + 72) = v43;
  v44 = *(_QWORD *)(v24 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 136) = v41;
  *(_QWORD *)(v39 + 144) = v42;
  *(_QWORD *)(v39 + 112) = v44;
  sub_1D6E27374();
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1D68982B8(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;

  v33 = a2;
  v3 = sub_1D6E23AF8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  v34 = a1;
  sub_1D6E22BE0();
  sub_1D6E22E74();
  v7 = *(void (**)(char *, uint64_t))(v4 + 8);
  v7(v6, v3);
  v8 = v36;
  if (qword_1ED6241B8 != -1)
    swift_once();
  sub_1D5F2C60C();
  v32[1] = v9;
  v10 = swift_allocObject();
  v11 = v10;
  *(_OWORD *)(v10 + 16) = xmmword_1D6E32F90;
  if (v8)
    v12 = 0x636572506D616574;
  else
    v12 = 0x746C7561666564;
  if (v8)
    v13 = 0xEE0065636E656465;
  else
    v13 = 0xE700000000000000;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = sub_1D5F2C5C8();
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v13;
  sub_1D6E27374();
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();
  v14 = sub_1D62DAC5C(v33, v8);
  sub_1D6E22BE0();
  sub_1D6E22E74();
  v7(v6, v3);
  v15 = v35;
  swift_bridgeObjectRetain();
  v16 = sub_1D6104B80(v15, v14);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
    goto LABEL_10;
  sub_1D6E282F8();
  swift_unknownObjectRetain_n();
  v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_unknownObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v25 = *(_QWORD *)(v24 + 16);
  swift_release();
  if (__OFSUB__(v22 >> 1, v20))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v25 != (v22 >> 1) - v20)
  {
LABEL_26:
    swift_unknownObjectRelease();
LABEL_10:
    v23 = sub_1D61001C8(v16, v18, v20, v22);
    goto LABEL_17;
  }
  v23 = swift_dynamicCastClass();
  if (!v23)
  {
    swift_unknownObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
  }
LABEL_17:
  swift_unknownObjectRelease();
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1D6E334D0;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v28 = MEMORY[0x1E0DEB418];
  v29 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v26 + 64) = v29;
  *(_QWORD *)(v26 + 32) = v27;
  if (v23 < 0 || (v23 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v30 = sub_1D6E28040();
    swift_release();
  }
  else
  {
    v30 = *(_QWORD *)(v23 + 16);
  }
  *(_QWORD *)(v26 + 96) = v28;
  *(_QWORD *)(v26 + 104) = v29;
  *(_QWORD *)(v26 + 72) = v30;
  sub_1D6E27374();
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1D6898678()
{
  uint64_t v0;

  if (qword_1ED6241B8 != -1)
    swift_once();
  sub_1D6E2735C();
  sub_1D5F2C60C();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D6E32F90;
  sub_1D5E7809C(0, (unint64_t *)&qword_1ED5F4ED0);
  sub_1D6E27F98();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = sub_1D5F2C5C8();
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_1D6E1C61C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D6898798(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *(int *)(v2 + 40)), *(_QWORD *)(a1 + *(int *)(v2 + 40) + 24));
  return sub_1D6E26024();
}

uint64_t sub_1D68987F0()
{
  uint64_t v0;

  sub_1D6E24EE4();
  sub_1D6E25BC8();
  swift_release();
  type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  type metadata accessor for TagService();
  v0 = sub_1D6405CB4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D6898884(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *a1;
  v8 = MEMORY[0x1E0DEE9D8];
  if (!((unint64_t)*a1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED60C570, (uint64_t (*)(uint64_t))sub_1D5FAD0E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1D6E1AC90();
  }
  swift_bridgeObjectRetain();
  result = sub_1D6E28040();
  v2 = result;
  if (!result)
    goto LABEL_15;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v5 = MEMORY[0x1D8290720](i, v1);
      }
      else
      {
        v5 = *(_QWORD *)(v1 + 8 * i + 32);
        swift_retain();
      }
      v6 = objc_msgSend(*(id *)(v5 + 16), sel_asSports);
      v7 = swift_release();
      if (v6)
      {
        MEMORY[0x1D828F58C](v7);
        if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D6E26E40();
        sub_1D6E26E70();
        sub_1D6E26DA4();
      }
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6898A34()
{
  uint64_t v0;

  if (qword_1ED6241B8 != -1)
    swift_once();
  sub_1D6E2735C();
  sub_1D5F2C60C();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D6E32F90;
  sub_1D5E7809C(0, (unint64_t *)&qword_1ED5F4ED0);
  sub_1D6E27F98();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = sub_1D5F2C5C8();
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_1D6E1C61C();
  swift_bridgeObjectRelease();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED60C570, (uint64_t (*)(uint64_t))sub_1D5FAD0E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1D6E1AC90();
}

uint64_t sub_1D6898BA0(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    result = sub_1D6E28040();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_28:
    swift_bridgeObjectRelease();
    return v12;
  }
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_28;
LABEL_3:
  if (v2 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      while (1)
      {
        v6 = MEMORY[0x1D8290720](v4, a1);
        if ((v4 & 1) != 0)
        {
          if (v12 >> 62)
          {
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            v7 = sub_1D6E28040();
            swift_bridgeObjectRelease();
            if (v7 < 0)
            {
              __break(1u);
              break;
            }
          }
          else
          {
            swift_unknownObjectRetain();
          }
          sub_1D6096DE8(0, 0, v6);
        }
        else
        {
          v5 = swift_unknownObjectRetain();
          MEMORY[0x1D828F58C](v5);
          if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1D6E26E40();
          sub_1D6E26E70();
          sub_1D6E26DA4();
        }
        ++v4;
        swift_unknownObjectRelease();
        if (v2 == v4)
          goto LABEL_28;
      }
    }
    v8 = 0;
    while (1)
    {
      v10 = *(_QWORD *)(a1 + 8 * v8 + 32);
      if ((v8 & 1) != 0)
      {
        if (v12 >> 62)
        {
          swift_unknownObjectRetain_n();
          swift_bridgeObjectRetain();
          v11 = sub_1D6E28040();
          swift_bridgeObjectRelease();
          if (v11 < 0)
          {
            __break(1u);
            goto LABEL_27;
          }
        }
        else
        {
          swift_unknownObjectRetain_n();
        }
        sub_1D6096DE8(0, 0, v10);
      }
      else
      {
        v9 = swift_unknownObjectRetain_n();
        MEMORY[0x1D828F58C](v9);
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D6E26E40();
        sub_1D6E26E70();
        sub_1D6E26DA4();
      }
      ++v8;
      swift_unknownObjectRelease();
      if (v2 == v8)
        goto LABEL_28;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D6898E1C()
{
  uint64_t v0;

  return sub_1D68974AC(*(_QWORD *)(v0 + 16));
}

void sub_1D6898E34()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1ED60E998)
  {
    sub_1D6E1C364();
    sub_1D6105260(255);
    sub_1D5FAD0E8();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1ED60E998);
  }
}

uint64_t sub_1D6898EC8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;

  v11 = *(_QWORD *)(type metadata accessor for SportsOnboardingTagFeedGroupEmitter() - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return sub_1D689780C(a1, a2, a3, a4, a5, v5 + v12, *(_QWORD *)(v5 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1D6898F48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D6898F6C@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, uint64_t, char *, _QWORD, _QWORD);
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t result;

  v5 = *(uint64_t (**)(uint64_t, uint64_t, char *, _QWORD, _QWORD))(v2 + 16);
  v6 = *(_QWORD *)a1;
  v7 = *((_QWORD *)a1 + 1);
  sub_1D6898E34();
  result = v5(v6, v7, &a1[v8[12]], *(_QWORD *)&a1[v8[16]], *(_QWORD *)&a1[v8[20]]);
  *a2 = result;
  return result;
}

uint64_t sub_1D6898FE4()
{
  return sub_1D6917970();
}

uint64_t sub_1D6898FEC()
{
  uint64_t v0;

  return sub_1D6898798(*(_QWORD *)(v0 + 16));
}

uint64_t objectdestroy_5Tm_6()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (int *)type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_1D6895100();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + v1[5];
  sub_1D608A014();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[6]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[7]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[8]);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[10]);
  return swift_deallocObject();
}

uint64_t sub_1D6899110()
{
  type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  return sub_1D68987F0();
}

unint64_t sub_1D6899158()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED60C0F8;
  if (!qword_1ED60C0F8)
  {
    sub_1D5E847C4(255, (unint64_t *)&unk_1ED60C100, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0DB3C80], v1);
    atomic_store(result, (unint64_t *)&qword_1ED60C0F8);
  }
  return result;
}

id PaywallViewData.__allocating_init(viewSessionID:viewType:viewAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return PaywallViewData.init(viewSessionID:viewType:viewAction:)(a1, a2, a3, a4, a5, a6);
}

id PaywallViewData.init(viewSessionID:viewType:viewAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  objc_class *ObjectType;
  objc_super v35;

  v7 = v6;
  v30 = a5;
  v31 = a6;
  v27[1] = a3;
  v27[2] = a4;
  v32 = a1;
  v33 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D5E8481C(0, &qword_1EFFF4470, (void (*)(uint64_t))MEMORY[0x1E0D53B98]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v27 - v9;
  v11 = sub_1D6E17F6C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E8481C(0, &qword_1EFFF4478, (void (*)(uint64_t))MEMORY[0x1E0D56528]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v27 - v16;
  v18 = sub_1D6E19964();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1D6E1994C();
  v28 = *(_QWORD *)(v22 - 8);
  v29 = v22;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v7;
  sub_1D6E19958();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E0D56508], v18);
    sub_1D5E82E34((uint64_t)v17, &qword_1EFFF4478, (void (*)(uint64_t))MEMORY[0x1E0D56528]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
  }
  sub_1D6E17F60();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0D53B68], v11);
    sub_1D5E82E34((uint64_t)v10, &qword_1EFFF4470, (void (*)(uint64_t))MEMORY[0x1E0D53B98]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  }
  sub_1D6E19940();
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))((uint64_t)v25 + OBJC_IVAR___NUPaywallViewData_viewData, v24, v29);

  v35.receiver = v25;
  v35.super_class = ObjectType;
  return objc_msgSendSuper2(&v35, sel_init);
}

id PaywallViewData.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PaywallViewData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PaywallGroupData.__allocating_init(groupType:groupID:groupCount:groupPosition:groupedArticleIDs:groupedIssueIDs:groupedTagIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  id v17;

  v17 = objc_allocWithZone(v8);
  return PaywallGroupData.init(groupType:groupID:groupCount:groupPosition:groupedArticleIDs:groupedIssueIDs:groupedTagIDs:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

id PaywallGroupData.init(groupType:groupID:groupCount:groupPosition:groupedArticleIDs:groupedIssueIDs:groupedTagIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  objc_class *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD v31[5];
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;

  v31[2] = a2;
  v31[3] = a8;
  v31[4] = a3;
  v34 = a6;
  v35 = a7;
  v32 = a4;
  v33 = a5;
  v31[0] = swift_getObjectType();
  sub_1D5E8481C(0, &qword_1ED60BBB0, (void (*)(uint64_t))MEMORY[0x1E0D53FB8]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v31 - v10;
  sub_1D5E8481C(0, &qword_1ED5E0790, (void (*)(uint64_t))MEMORY[0x1E0D55378]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v31 - v13;
  v15 = sub_1D6E19A90();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1D6E18314();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1D6E19A84();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E0D540B0], v18);
  FCFeedGroupType.groupType()(a1, (uint64_t)v17);
  v26 = (objc_class *)v31[0];
  sub_1D6899910(a1, (uint64_t)v14);
  v27 = sub_1D6E18E9C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v14, 0, 1, v27);
  v28 = sub_1D6E18260();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 1, 1, v28);
  v29 = (id)v31[1];
  sub_1D6E199DC();
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))((uint64_t)v29 + OBJC_IVAR___NUPaywallGroupData_groupData, v25, v22);

  v36.receiver = v29;
  v36.super_class = v26;
  return objc_msgSendSuper2(&v36, sel_init);
}

uint64_t sub_1D6899910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;

  switch(a1)
  {
    case 1:
    case 5:
    case 8:
    case 9:
    case 10:
    case 13:
    case 14:
    case 24:
    case 25:
    case 29:
    case 31:
      v3 = (unsigned int *)MEMORY[0x1E0D55358];
      break;
    case 2:
    case 18:
    case 19:
    case 20:
    case 28:
      v3 = (unsigned int *)MEMORY[0x1E0D55360];
      break;
    case 3:
    case 6:
    case 7:
    case 23:
    case 26:
    case 30:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
      v3 = (unsigned int *)MEMORY[0x1E0D55368];
      break;
    case 12:
    case 15:
      v3 = (unsigned int *)MEMORY[0x1E0D55350];
      break;
    default:
      v3 = (unsigned int *)MEMORY[0x1E0D55370];
      break;
  }
  v4 = *v3;
  v5 = sub_1D6E18E9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
}

void PaywallGroupData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1D6899AE8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *a3;
  v5 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

id PaywallEventData.__allocating_init(paywallViewData:headline:channel:feed:paywallGroupData:referral:qToken:)(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  id v17;
  id v18;

  v17 = objc_allocWithZone(v8);
  v18 = sub_1D6899E70((uint64_t)a1, a2, a3, a4, (uint64_t)a5, a6, a7, a8);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v18;
}

id PaywallEventData.init(paywallViewData:headline:channel:feed:paywallGroupData:referral:qToken:)(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  id v12;

  v12 = sub_1D6899E70((uint64_t)a1, a2, a3, a4, (uint64_t)a5, a6, a7, a8);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v12;
}

void PaywallEventData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1D6899E70(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  char *v9;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  id v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  objc_class *ObjectType;
  uint64_t v50;
  void *v51;
  objc_super v52;

  v9 = v8;
  v50 = a8;
  v51 = a6;
  v47 = a5;
  v48 = a7;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0840, (void (*)(uint64_t))MEMORY[0x1E0D56758]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v46 - v15;
  v17 = sub_1D6E19904();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0810, (void (*)(uint64_t))MEMORY[0x1E0D56348]);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v46 - v21;
  sub_1D5E8481C(0, (unint64_t *)&unk_1ED5E0660, (void (*)(uint64_t))MEMORY[0x1E0D53C48]);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v46 - v24;
  v26 = a1 + OBJC_IVAR___NUPaywallViewData_viewData;
  v27 = &v9[OBJC_IVAR___NUPaywallEventData_viewData];
  v28 = sub_1D6E1994C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v27, v26, v28);
  if (a2)
  {
    swift_getObjectType();
    v29 = v9;
    sub_1D6E27740();
    v30 = sub_1D6E17FC0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v25, 0, 1, v30);
  }
  else
  {
    v31 = sub_1D6E17FC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v25, 1, 1, v31);
    v32 = v9;
  }
  sub_1D5F28108((uint64_t)v25, (uint64_t)&v9[OBJC_IVAR___NUPaywallEventData_articleData], (unint64_t *)&unk_1ED5E0660, (void (*)(uint64_t))MEMORY[0x1E0D53C48]);
  *(_QWORD *)&v9[OBJC_IVAR___NUPaywallEventData_channel] = a3;
  if (a4)
  {
    swift_unknownObjectRetain();
    v33 = a4;
    FCFeedType.feedType()((uint64_t)objc_msgSend(v33, sel_feedType), (uint64_t)v19);
    v34 = objc_msgSend(v33, sel_identifier);
    sub_1D6E26978();

    sub_1D6E198D4();
    v35 = sub_1D6E198EC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v22, 0, 1, v35);
  }
  else
  {
    v36 = sub_1D6E198EC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v22, 1, 1, v36);
    swift_unknownObjectRetain();
  }
  sub_1D5F28108((uint64_t)v22, (uint64_t)&v9[OBJC_IVAR___NUPaywallEventData_feedData], (unint64_t *)&unk_1ED5E0810, (void (*)(uint64_t))MEMORY[0x1E0D56348]);
  if (v47)
  {
    v37 = v47 + OBJC_IVAR___NUPaywallGroupData_groupData;
    v38 = sub_1D6E19A84();
    v39 = *(_QWORD *)(v38 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v16, v37, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v16, 0, 1, v38);
  }
  else
  {
    v40 = sub_1D6E19A84();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v16, 1, 1, v40);
  }
  sub_1D5F28108((uint64_t)v16, (uint64_t)&v9[OBJC_IVAR___NUPaywallEventData_groupData], (unint64_t *)&unk_1ED5E0840, (void (*)(uint64_t))MEMORY[0x1E0D56758]);
  v41 = v51;
  *(_QWORD *)&v9[OBJC_IVAR___NUPaywallEventData_referral] = v51;
  v42 = &v9[OBJC_IVAR___NUPaywallEventData_qToken];
  v43 = v50;
  *(_QWORD *)v42 = v48;
  *((_QWORD *)v42 + 1) = v43;
  v44 = v41;

  v52.receiver = v9;
  v52.super_class = ObjectType;
  return objc_msgSendSuper2(&v52, sel_init);
}

uint64_t sub_1D689A268()
{
  return type metadata accessor for PaywallViewData(0);
}

uint64_t type metadata accessor for PaywallViewData(uint64_t a1)
{
  return sub_1D5E6E20C(a1, (uint64_t *)&unk_1EFFF44A8);
}

uint64_t sub_1D689A284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D689A2CC(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0D564B0]);
}

uint64_t method lookup function for PaywallViewData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PaywallViewData.__allocating_init(viewSessionID:viewType:viewAction:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1D689A2A4()
{
  return type metadata accessor for PaywallGroupData(0);
}

uint64_t type metadata accessor for PaywallGroupData(uint64_t a1)
{
  return sub_1D5E6E20C(a1, (uint64_t *)&unk_1EFFF44E0);
}

uint64_t sub_1D689A2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D689A2CC(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56758]);
}

uint64_t sub_1D689A2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PaywallGroupData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PaywallGroupData.__allocating_init(groupType:groupID:groupCount:groupPosition:groupedArticleIDs:groupedIssueIDs:groupedTagIDs:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1D689A34C()
{
  return type metadata accessor for PaywallEventData(0);
}

uint64_t type metadata accessor for PaywallEventData(uint64_t a1)
{
  return sub_1D5E6E20C(a1, qword_1EFFF4518);
}

void sub_1D689A368()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D6E1994C();
  if (v0 <= 0x3F)
  {
    sub_1D5E8481C(319, (unint64_t *)&unk_1ED5E0660, (void (*)(uint64_t))MEMORY[0x1E0D53C48]);
    if (v1 <= 0x3F)
    {
      sub_1D5E8481C(319, (unint64_t *)&unk_1ED5E0810, (void (*)(uint64_t))MEMORY[0x1E0D56348]);
      if (v2 <= 0x3F)
      {
        sub_1D5E8481C(319, (unint64_t *)&unk_1ED5E0840, (void (*)(uint64_t))MEMORY[0x1E0D56758]);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for PaywallEventData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PaywallEventData.__allocating_init(paywallViewData:headline:channel:feed:paywallGroupData:referral:qToken:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

char *sub_1D689A484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  _DWORD v24[4];
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v27 = sub_1D6E1DCCC();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v25 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1D6E1CCD0();
  v35 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v34 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D6E20C90();
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  type metadata accessor for MainTabManager();
  v7 = sub_1D6E19F64();
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  v8 = v7;
  __swift_project_boxed_opaque_existential_1(v6, *(_QWORD *)(v0 + 40));
  type metadata accessor for MainTabBarController();
  v9 = (char *)sub_1D6E19F64();
  if (!v9)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = v9;
  objc_msgSend(v9, sel__uip_setPreferredSidebarMode_, 2);
  v11 = objc_msgSend(v10, sel__uip_sidebar);
  objc_msgSend(v11, sel__setPreferredLayout_, 2);

  v12 = objc_msgSend(v10, sel_view);
  if (!v12)
  {
LABEL_12:
    __break(1u);
    JUMPOUT(0x1D689BC3CLL);
  }
  v13 = v12;
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4770);
  v14 = (void *)sub_1D6E27B18();
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  objc_msgSend(*(id *)(v8 + 72), sel__setDelegate_, v10);
  v15 = objc_msgSend(v10, sel__uip_sidebar);
  objc_msgSend(v15, sel__setEditable_, 1);

  v16 = sub_1D689D5F4(*(void **)(v1 + 104));
  v42 = MEMORY[0x1E0DEE9D8];
  if (*((_QWORD *)v16 + 2))
  {
    v39 = v10;
    v29 = 0;
    v28 = 0;
    v24[3] = *MEMORY[0x1E0DB8638];
    v30 = xmmword_1D6E334D0;
    v32 = v8;
    v31 = v6;
    v37 = v16;
    v40 = v1;
    v17 = (char *)&loc_1D689A908 + dword_1D689BC3C[v16[32]];
    v41 = 1;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[OBJC_IVAR____TtC7NewsUI224FloatingTabBarController_navigationControllers] = v42;
  v18 = v10;
  swift_bridgeObjectRelease();
  v19 = v18;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1D689D450(v20, v19);
  swift_bridgeObjectRelease();

  if (v21 >> 62)
  {
    sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4390);
    sub_1D6E28028();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D6E282EC();
    sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4390);
  }
  swift_bridgeObjectRelease();
  sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4390);
  v22 = (void *)sub_1D6E26D68();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setViewControllers_, v22);
  swift_release();

  return v19;
}

id sub_1D689BC54()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_1;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[6];

  v1 = v0;
  v2 = sub_1D689D5F4(*(void **)(v0 + 104));
  v16[5] = MEMORY[0x1E0DEE9D8];
  if (*((_QWORD *)v2 + 2))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1D5E78050(0, (unint64_t *)&unk_1ED5E41A0);
  sub_1D6E19F70();
  v3 = v14;
  if (!v14)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v15;
  v5 = __swift_project_boxed_opaque_existential_1(&v13, v14);
  v16[3] = v3;
  v16[4] = *(_QWORD *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  v7 = objc_allocWithZone((Class)sub_1D6E1D774());
  v8 = (void *)sub_1D6E1D75C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  type metadata accessor for MainViewController();
  *(_QWORD *)(swift_allocObject() + 16) = v8;
  v9 = v8;
  v10 = (void *)sub_1D6E19F4C();
  swift_release();
  if (!v10)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x1D689C330);
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setPreferredDisplayMode_, 0);
  objc_msgSend(v10, sel_setMinimumPrimaryColumnWidth_, 320.0);
  v11 = v10;
  objc_msgSend(v11, sel_setMaximumPrimaryColumnWidth_, 320.0);

  return v11;
}

uint64_t sub_1D689C360(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t ObjCClassFromMetadata;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v5 = sub_1D6E1DCCC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  sub_1D5E78050(0, &qword_1ED5EEE60);
  result = sub_1D6E19F70();
  if (v24)
  {
    sub_1D5E8D7A0(&v23, (uint64_t)a1);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5EC7D90();
    sub_1D5E96490((uint64_t)a1, (uint64_t)&v23);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v2;
    sub_1D5E8D7A0(&v23, v10 + 24);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB8638], v5);
    v11 = objc_allocWithZone((Class)sub_1D6E1DCD8());
    swift_retain();
    v12 = (void *)sub_1D6E1DCC0();
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v14 = (void *)objc_opt_self();
    v15 = v12;
    v16 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1D6E15968();

    if (qword_1ED5F9818 != -1)
      swift_once();
    v17 = (void *)qword_1ED698340;
    v18 = objc_allocWithZone(MEMORY[0x1E0DC3D40]);
    v19 = v17;
    v20 = (void *)sub_1D6E26948();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v18, sel_initWithTitle_image_tag_, v20, v19, a2);

    objc_msgSend(v15, sel_setTabBarItem_, v21);
    return (uint64_t)v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D689C638(_QWORD *a1)
{
  swift_getObjectType();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_1D6E19E20();
}

uint64_t sub_1D689C6A0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t result;

  v6 = a1 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1D82919D4](v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = (void *)sub_1D6E1DCB4();

  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D689C74C(a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D689C74C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  _QWORD v29[4];
  id v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v34 = a2;
  v32 = a1;
  v3 = sub_1D6E1CCD0();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6E20];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D6E20C90();
  MEMORY[0x1E0C80A78](v7);
  sub_1D6E20C54();
  v8 = *(void **)(a2 + 72);
  sub_1D5E847C4(0, &qword_1ED630A68, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = *(_QWORD *)(v5 + 72);
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = (v10 + 32) & ~v10;
  v39 = v12;
  v40 = v9;
  v37 = v10 | 7;
  v38 = v11 + 2 * v9;
  v13 = swift_allocObject();
  v36 = xmmword_1D6E334D0;
  *(_OWORD *)(v13 + 16) = xmmword_1D6E334D0;
  v14 = v8;
  sub_1D6E1CCB8();
  sub_1D6E1CCC4();
  v41 = v13;
  v35 = sub_1D5E6D4DC(&qword_1ED630280, 255, v4, MEMORY[0x1E0DB6E38]);
  sub_1D5E847C4(0, &qword_1ED630968, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v16 = v15;
  v17 = sub_1D689D884();
  v29[3] = v3;
  sub_1D6E27D88();
  sub_1D6E1CCDC();
  swift_allocObject();
  v30 = v32;
  v32 = (id)0x80000001D6F2CA80;
  v18 = sub_1D6E1CC88();
  v19 = *(void **)(v33 + 120);
  v33 = v18;
  sub_1D6E1C8BC();
  sub_1D6E20C3C();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v36;
  v29[2] = v11;
  v21 = v14;
  sub_1D6E1CCB8();
  sub_1D6E1CCC4();
  v41 = v20;
  v29[0] = v17;
  v29[1] = v16;
  sub_1D6E27D88();
  swift_allocObject();
  v22 = v30;
  sub_1D6E1CC88();
  v32 = v19;
  sub_1D6E1C8BC();
  sub_1D68CEF34(6);
  if (v23)
  {
    v24 = v23;
    sub_1D6E20C3C();
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = v36;
    v26 = v24;
    sub_1D6E1CCB8();
    sub_1D6E1CCC4();
    v41 = v25;
    sub_1D6E27D88();
    swift_allocObject();
    v27 = v22;
    sub_1D6E1CC88();
    sub_1D6E1C8BC();

    swift_release();
  }
  swift_release();
  return swift_release();
}

void sub_1D689CB38(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  if (*a1 == 1)
  {
    v2 = a2 + 16;
    swift_beginAccess();
    v3 = MEMORY[0x1D82919D4](v2);
    if (v3)
    {
      v4 = (void *)v3;
      v5 = (void *)sub_1D6E1DCB4();

    }
  }
}

uint64_t sub_1D689CB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  __int128 v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  sub_1D5E78050(0, &qword_1ED5DE7A8);
  sub_1D5E96490(a2, (uint64_t)&v9);
  v3 = swift_allocObject();
  sub_1D5E8D7A0(&v9, v3 + 16);
  sub_1D6E19F58();
  result = swift_release();
  if (v8)
  {
    sub_1D5E8D7A0(&v6, (uint64_t)&v9);
    __swift_project_boxed_opaque_existential_1(&v9, v10);
    v6 = 0uLL;
    v7 = -1;
    v5 = sub_1D626AC20((uint64_t *)&v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D689CCB0(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5EEE60);
  return sub_1D6E19E08();
}

uint64_t sub_1D689CD18(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  sub_1D5E78050(0, (unint64_t *)&qword_1ED5E6880);
  result = sub_1D6E19F70();
  if (v6)
  {
    sub_1D5E8D7A0(&v5, (uint64_t)v7);
    v2 = v8;
    v3 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1D689CDD4(_QWORD *a1)
{
  id result;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5E6B40);
  result = (id)sub_1D6E19F70();
  if (!v9)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1D5E8D7A0(&v8, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  if (qword_1ED605258 != -1)
    swift_once();
  if (byte_1ED698598 == 1)
    v2 = sub_1D69DF978();
  else
    v2 = sub_1D69DFC8C();
  v3 = (void *)v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v5 = objc_msgSend(v4, sel_userInterfaceIdiom);

  if ((unint64_t)v5 + 1 > 7 || ((1 << (v5 + 1)) & 0xC5) == 0 || byte_1ED698598 != 1)
    goto LABEL_13;
  result = objc_msgSend(v3, sel_view);
  if (!result)
    goto LABEL_15;
  v6 = result;
  objc_msgSend(result, sel_setNeedsLayout);

  result = objc_msgSend(v3, sel_view);
  if (result)
  {
    v7 = result;
    objc_msgSend(result, sel_layoutIfNeeded);

LABEL_13:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    return v3;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D689CF80(_QWORD *a1)
{
  uint64_t result;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, (unint64_t *)&qword_1ED60FCD0);
  result = sub_1D6E19F70();
  if (*((_QWORD *)&v14 + 1))
  {
    sub_1D5E8D7A0(&v13, (uint64_t)v16);
    v2 = __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
    v4 = *v2;
    v6 = *(_QWORD *)(*v2 + 56);
    v5 = *(void **)(*v2 + 64);
    v13 = 0u;
    v14 = 0u;
    LOBYTE(v15) = -1;
    v7 = objc_allocWithZone((Class)type metadata accessor for MySportsViewController());
    swift_retain();
    v8 = v5;
    sub_1D63B6D70(3, v3, 0x7374726F7053796DLL, 0xE800000000000000, v6, v8, &v13);
    swift_release();

    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
    sub_1D5E78050(0, &qword_1ED60AAE0);
    result = sub_1D6E19F70();
    v9 = *((_QWORD *)&v14 + 1);
    if (*((_QWORD *)&v14 + 1))
    {
      v10 = v15;
      __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      v11 = objc_allocWithZone((Class)sub_1D6E1F784());
      v12 = sub_1D6E1F778();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      return v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D689D164(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E78050(0, &qword_1ED5DD8B0);
  result = sub_1D6E19F70();
  if (v4)
  {
    sub_1D5E8D7A0(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v2 = sub_1D606556C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MainModule.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t MainModule.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for MainModule()
{
  return swift_lookUpClassMethod();
}

void sub_1D689D2A4()
{
  char *v0;

  sub_1D62A70EC(*v0);
}

void sub_1D689D2AC()
{
  __asm { BR              X10 }
}

uint64_t sub_1D689D2E4()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D689D364(uint64_t a1)
{
  char *v1;

  sub_1D61AD014(a1, *v1);
}

uint64_t sub_1D689D36C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D689DB9C();
  *a1 = result;
  return result;
}

uint64_t sub_1D689D398()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D689D3C4 + 4 * byte_1D6E9A24E[*v0]))();
}

void sub_1D689D3C4(_QWORD *a1@<X8>)
{
  *a1 = 0x656E697A6167616DLL;
  a1[1] = 0xE800000000000000;
}

void sub_1D689D3E0(_QWORD *a1@<X8>)
{
  *a1 = 0x7374726F7073;
  a1[1] = 0xE600000000000000;
}

void sub_1D689D3F8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6F69647561;
  a1[1] = v1;
}

void sub_1D689D40C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E69776F6C6C6F66;
  a1[1] = 0xE900000000000067;
}

void sub_1D689D42C(_QWORD *a1@<X8>)
{
  *a1 = 0x686372616573;
  a1[1] = 0xE600000000000000;
}

void sub_1D689D444(char *a1)
{
  sub_1D6591B64(*a1);
}

uint64_t sub_1D689D450(unint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  char *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_19;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (char *)MEMORY[0x1D8290720](v4, a1);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_18;
        v8 = *(_QWORD *)&v5[qword_1ED62D910];
        v9 = objc_msgSend(a2, sel_traitCollection);
        v10 = (unint64_t)objc_msgSend(v9, sel_horizontalSizeClass);

        if (v10 > 2)
        {
          if ((v8 & 4) != 0)
          {
LABEL_14:
            sub_1D6E27F20();
            sub_1D6E27F50();
            sub_1D6E27F5C();
            sub_1D6E27F2C();
            goto LABEL_5;
          }
        }
        else if ((v8 & qword_1D6E9A3F8[v10]) != 0)
        {
          goto LABEL_14;
        }

LABEL_5:
        ++v4;
        if (v7 == v3)
          return v13;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      v3 = sub_1D6E28040();
      if (!v3)
        return MEMORY[0x1E0DEE9D8];
    }
    v5 = (char *)*(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

char *sub_1D689D5F4(void *a1)
{
  char *v2;
  unint64_t v3;
  unint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v2 = sub_1D6242E20(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v4 = *((_QWORD *)v2 + 2);
  v3 = *((_QWORD *)v2 + 3);
  if (v4 >= v3 >> 1)
    v2 = sub_1D6242E20((char *)(v3 > 1), v4 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  v5 = objc_msgSend(a1, sel_appleMagazineContent);
  v6 = *((_QWORD *)v2 + 2);
  if (v5)
  {
    v7 = *((_QWORD *)v2 + 3);
    v8 = v6 + 1;
    if (v6 >= v7 >> 1)
      v2 = sub_1D6242E20((char *)(v7 > 1), v6 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v8;
    v2[v6 + 32] = 1;
  }
  else
  {
    v8 = *((_QWORD *)v2 + 2);
  }
  v9 = *((_QWORD *)v2 + 3);
  if (v8 >= v9 >> 1)
    v2 = sub_1D6242E20((char *)(v9 > 1), v8 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v8 + 1;
  v2[v8 + 32] = 2;
  v10 = objc_msgSend(a1, sel_narrativeAudio);
  v11 = *((_QWORD *)v2 + 2);
  if (v10)
  {
    v12 = *((_QWORD *)v2 + 3);
    v13 = v11 + 1;
    if (v11 >= v12 >> 1)
      v2 = sub_1D6242E20((char *)(v12 > 1), v11 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v13;
    v2[v11 + 32] = 3;
  }
  else
  {
    v13 = *((_QWORD *)v2 + 2);
  }
  v14 = *((_QWORD *)v2 + 3);
  if (v13 >= v14 >> 1)
    v2 = sub_1D6242E20((char *)(v14 > 1), v13 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v13 + 1;
  v2[v13 + 32] = 4;
  if (qword_1ED605258 != -1)
    swift_once();
  if (byte_1ED698598 == 1)
  {
    v16 = *((_QWORD *)v2 + 2);
    v15 = *((_QWORD *)v2 + 3);
    if (v16 >= v15 >> 1)
      v2 = sub_1D6242E20((char *)(v15 > 1), v16 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v16 + 1;
    v2[v16 + 32] = 5;
  }
  return v2;
}

uint64_t sub_1D689D82C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1D689D850()
{
  uint64_t v0;

  return sub_1D689D164((_QWORD *)(v0 + 16));
}

uint64_t sub_1D689D858()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

id sub_1D689D87C()
{
  uint64_t v0;

  return sub_1D6AA7768(v0);
}

unint64_t sub_1D689D884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED630970;
  if (!qword_1ED630970)
  {
    sub_1D5E847C4(255, &qword_1ED630968, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6E20], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED630970);
  }
  return result;
}

uint64_t sub_1D689D8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D689D928();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1D689D928()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED630750)
  {
    sub_1D5E78050(255, (unint64_t *)&unk_1ED630740);
    v0 = sub_1D6E27C38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED630750);
  }
}

uint64_t sub_1D689D990()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D689D9B4()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D689D9F0()
{
  uint64_t v0;

  return sub_1D689C6A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1D689D9FC(_BYTE *a1)
{
  uint64_t v1;

  sub_1D689CB38(a1, v1);
}

uint64_t sub_1D689DA04()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1D689DA30()
{
  uint64_t v0;

  return sub_1D689CB9C(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_1D689DA3C(_QWORD *a1)
{
  return sub_1D689CCB0(a1);
}

uint64_t sub_1D689DA44()
{
  uint64_t v0;

  return sub_1D689CF80((_QWORD *)(v0 + 16));
}

uint64_t sub_1D689DA4C()
{
  uint64_t v0;

  return sub_1D689CD18(v0);
}

id sub_1D689DA54()
{
  uint64_t v0;

  return sub_1D689CDD4((_QWORD *)(v0 + 16));
}

uint64_t sub_1D689DA5C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D689DA80(_QWORD *a1)
{
  return sub_1D689C638(a1);
}

uint64_t storeEnumTagSinglePayload for MainTabOrdering(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D689DAD4 + 4 * byte_1D6E9A259[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D689DB08 + 4 * byte_1D6E9A254[v4]))();
}

uint64_t sub_1D689DB08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D689DB10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D689DB18);
  return result;
}

uint64_t sub_1D689DB24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D689DB2CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D689DB30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D689DB38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MainTabOrdering()
{
  return &type metadata for MainTabOrdering;
}

unint64_t sub_1D689DB58()
{
  unint64_t result;

  result = qword_1EFFF4530;
  if (!qword_1EFFF4530)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9A358, &type metadata for MainTabOrdering);
    atomic_store(result, (unint64_t *)&qword_1EFFF4530);
  }
  return result;
}

uint64_t sub_1D689DB9C()
{
  unint64_t v0;

  v0 = sub_1D6E280D0();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1D689DBF8()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_actionIdentifier);
  v2 = sub_1D6E26978();

  return v2;
}

uint64_t sub_1D689DC4C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D689DC54(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  _QWORD v10[5];

  sub_1D6215F74();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[3] = sub_1D689DD4C();
  v10[4] = sub_1D689DD88();
  v10[0] = a1;
  v7 = a1;
  sub_1D6E1A168();
  sub_1D689DDD0((uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DBB1B0], v3);
  sub_1D5E847C4(0, (unint64_t *)&qword_1EFFDD368, (uint64_t (*)(uint64_t))sub_1D6215F74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1D6E1AC90();
}

unint64_t sub_1D689DD4C()
{
  unint64_t result;

  result = qword_1ED62EDF0;
  if (!qword_1ED62EDF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED62EDF0);
  }
  return result;
}

unint64_t sub_1D689DD88()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EFFF4540;
  if (!qword_1EFFF4540)
  {
    v1 = sub_1D689DD4C();
    result = MEMORY[0x1D82917D0](&protocol conformance descriptor for UNNotificationResponse, v1);
    atomic_store(result, (unint64_t *)&qword_1EFFF4540);
  }
  return result;
}

uint64_t sub_1D689DDD0(uint64_t a1)
{
  uint64_t v2;

  sub_1D5FCABC4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D689DE0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(void);
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t);
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  _BYTE v78[16];
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  unint64_t v96;
  uint64_t *v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;

  sub_1D689F3EC();
  v101 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v100 = &v78[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = MEMORY[0x1E0C80A78](v3);
  v90 = &v78[-v6];
  v7 = MEMORY[0x1E0C80A78](v5);
  v99 = &v78[-v8];
  v9 = MEMORY[0x1E0C80A78](v7);
  v89 = &v78[-v10];
  MEMORY[0x1E0C80A78](v9);
  v98 = &v78[-v11];
  sub_1D689F450();
  v88 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v97 = (uint64_t *)&v78[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x1E0C80A78](v13);
  v87 = &v78[-v16];
  MEMORY[0x1E0C80A78](v15);
  v86 = &v78[-v17];
  v18 = sub_1D6E18FB0();
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = &v78[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = *(_QWORD *)(a1 + 16);
  v22 = MEMORY[0x1E0DEE9D8];
  if (!v21)
    return v22;
  v102 = MEMORY[0x1E0DEE9D8];
  sub_1D6228C78(0, v21, 0);
  result = sub_1D60E7B68(a1);
  v25 = result;
  v26 = 0;
  v27 = a1 + 64;
  v28 = *(_BYTE *)(a1 + 32);
  v91 = a1 + 80;
  v82 = v20;
  v83 = a1;
  v79 = v21;
  v80 = v24;
  v81 = a1 + 64;
  while ((v25 & 0x8000000000000000) == 0 && (uint64_t)v25 < 1 << v28)
  {
    if ((*(_QWORD *)(v27 + 8 * (v25 >> 6)) & (1 << v25)) == 0)
      goto LABEL_29;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v24)
      goto LABEL_30;
    v93 = 1 << v25;
    v94 = v25 >> 6;
    v92 = v26;
    v30 = v88;
    v31 = v86;
    v32 = &v86[*(int *)(v88 + 48)];
    v33 = *(_QWORD *)(a1 + 48);
    v34 = *(_QWORD *)(a1 + 56);
    v35 = (uint64_t *)(v33 + 16 * v25);
    v37 = *v35;
    v36 = v35[1];
    v38 = sub_1D6E22748();
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(_QWORD *)(v39 + 72);
    v96 = v25;
    v41 = v34 + v40 * v25;
    v42 = *(void (**)(void))(v39 + 16);
    ((void (*)(_BYTE *, uint64_t, uint64_t))v42)(v32, v41, v38);
    *v31 = v37;
    v31[1] = v36;
    v43 = (uint64_t)v87;
    *v87 = v37;
    *(_QWORD *)(v43 + 8) = v36;
    ((void (*)(uint64_t, _BYTE *, uint64_t))v42)(v43 + *(int *)(v30 + 48), v32, v38);
    v44 = v97;
    sub_1D689F4B8(v43, (uint64_t)v97);
    swift_bridgeObjectRetain_n();
    sub_1D5E8D20C((uint64_t)v31, (uint64_t (*)(_QWORD))sub_1D689F450);
    v45 = *v44;
    v46 = v44[1];
    v47 = (char *)v44 + *(int *)(v30 + 48);
    v48 = v101;
    v49 = *(int *)(v101 + 48);
    v50 = v98;
    v51 = (char *)v98 + v49;
    *v98 = v45;
    v50[1] = v46;
    ((void (*)(char *, char *, uint64_t))v42)((char *)v50 + v49, v47, v38);
    v52 = *(int *)(v48 + 48);
    v53 = v89;
    v54 = (char *)v89 + v52;
    *v89 = v45;
    v53[1] = v46;
    ((void (*)(char *, char *, uint64_t))v42)((char *)v53 + v52, v51, v38);
    v55 = v99;
    v56 = (char *)v99 + *(int *)(v48 + 48);
    *v99 = v45;
    v55[1] = v46;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v56, v54, v38);
    v57 = *(int *)(v48 + 48);
    v58 = v90;
    *v90 = v45;
    v58[1] = v46;
    v95 = (char *)v58 + v57;
    v42();
    v59 = *(int *)(v48 + 48);
    v60 = v100;
    v61 = (char *)v100 + v59;
    *v100 = v45;
    v60[1] = v46;
    ((void (*)(char *, char *, uint64_t))v42)((char *)v60 + v59, v56, v38);
    swift_bridgeObjectRetain_n();
    v62 = sub_1D6E22730();
    v63 = *(uint64_t (**)(char *, uint64_t))(v39 + 8);
    result = v63(v61, v38);
    if (v62 < (uint64_t)0xFFFFFFFF80000000)
      goto LABEL_31;
    if (v62 > 0x7FFFFFFF)
      goto LABEL_32;
    v64 = v100;
    v65 = *(int *)(v101 + 48);
    v66 = (char *)v100 + v65;
    *v100 = v45;
    v64[1] = v46;
    ((void (*)(char *, char *, uint64_t))v42)((char *)v64 + v65, v56, v38);
    swift_bridgeObjectRelease();
    v67 = sub_1D6E2273C();
    result = v63(v66, v38);
    if (v67 < (uint64_t)0xFFFFFFFF80000000)
      goto LABEL_33;
    if (v67 > 0x7FFFFFFF)
      goto LABEL_34;
    v68 = v82;
    sub_1D6E18FA4();
    sub_1D5E8D20C((uint64_t)v99, (uint64_t (*)(_QWORD))sub_1D689F3EC);
    v63(v95, v38);
    sub_1D5E8D20C((uint64_t)v98, (uint64_t (*)(_QWORD))sub_1D689F3EC);
    sub_1D5E8D20C((uint64_t)v97, (uint64_t (*)(_QWORD))sub_1D689F450);
    v22 = v102;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D6228C78(0, *(_QWORD *)(v22 + 16) + 1, 1);
      v22 = v102;
    }
    v69 = v96;
    v71 = *(_QWORD *)(v22 + 16);
    v70 = *(_QWORD *)(v22 + 24);
    if (v71 >= v70 >> 1)
    {
      sub_1D6228C78(v70 > 1, v71 + 1, 1);
      v22 = v102;
    }
    *(_QWORD *)(v22 + 16) = v71 + 1;
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v84 + 32))(v22+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(_QWORD *)(v84 + 72) * v71, v68, v85);
    v102 = v22;
    a1 = v83;
    v28 = *(_BYTE *)(v83 + 32);
    v25 = 1 << v28;
    if (v69 >= 1 << v28)
      goto LABEL_35;
    v27 = v81;
    v72 = v94;
    v73 = *(_QWORD *)(v81 + 8 * v94);
    if ((v73 & v93) == 0)
      goto LABEL_36;
    LODWORD(v24) = v80;
    if (*(_DWORD *)(v83 + 36) != (_DWORD)v80)
      goto LABEL_37;
    v74 = v73 & (-2 << (v69 & 0x3F));
    if (v74)
    {
      v25 = __clz(__rbit64(v74)) | v69 & 0xFFFFFFFFFFFFFFC0;
      v29 = v79;
    }
    else
    {
      v75 = v94 + 1;
      v76 = (v25 + 63) >> 6;
      v29 = v79;
      if (v94 + 1 < v76)
      {
        v77 = *(_QWORD *)(v81 + 8 * v75);
        if (v77)
        {
LABEL_26:
          v25 = __clz(__rbit64(v77)) + (v75 << 6);
        }
        else
        {
          while (v76 - 2 != v72)
          {
            v77 = *(_QWORD *)(v91 + 8 * v72++);
            if (v77)
            {
              v75 = v72 + 1;
              goto LABEL_26;
            }
          }
        }
      }
    }
    v26 = v92 + 1;
    if (v92 + 1 == v29)
      return v22;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

void sub_1D689E42C()
{
  void *v0;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    _s11MyHeadlinesCMa();
    sub_1D6E1AE1C();
    swift_retain();
    v0 = (void *)sub_1D6E1AB4C();
    type metadata accessor for TodayFeedPoolTracker();
    sub_1D6E1AC3C();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

  }
}

uint64_t sub_1D689E510(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v3;
    *(_QWORD *)(v4 + 24) = v1;
    swift_retain();
    swift_retain();
    sub_1D6E16CC4();
    swift_release();
    v5 = swift_allocObject();
    swift_weakInit();
    v6 = swift_allocObject();
    swift_weakInit();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    swift_retain();
    sub_1D6E1AA50();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1D689E670()
{
  void *v0;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    v0 = (void *)sub_1D6E1AB4C();
    type metadata accessor for TodayFeedPoolTracker();
    sub_1D6E1AC3C();
    swift_release();
    swift_release();
    swift_release();

  }
}

uint64_t sub_1D689E724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v5 = sub_1D6E22760();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain();
  sub_1D6E16CC4();
  return swift_release();
}

id *sub_1D689E820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id *result;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  unsigned int v42;
  id *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  _OWORD v59[2];

  v54 = a3;
  v4 = sub_1D6E22760();
  v56 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v55 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D6E18F98();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D6E19910();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1D6E18AA0();
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = (id *)swift_weakLoadStrong();
  if (result)
  {
    v15 = result;
    v45 = v11;
    v49 = v4;
    v50 = v9;
    v51 = v7;
    v52 = v6;
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4AD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = v16;
    v18 = v15;
    v19 = sub_1D6E16940();
    v20 = a1;
    v21 = *(_QWORD *)(v19 - 8);
    v22 = *(unsigned __int8 *)(v21 + 80);
    v23 = (v22 + 32) & ~v22;
    v24 = v23 + *(_QWORD *)(v21 + 72);
    v47 = v17;
    v44 = v24;
    v58 = v22 | 7;
    v25 = swift_allocObject();
    v57 = xmmword_1D6E32F90;
    *(_OWORD *)(v25 + 16) = xmmword_1D6E32F90;
    v46 = v23;
    v26 = v25 + v23;
    v27 = *MEMORY[0x1E0CF8170];
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104);
    v48 = v19;
    v28(v26, v27, v19);
    sub_1D6E18404();
    sub_1D5E6D8C0(&qword_1ED60BBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D542A8], MEMORY[0x1E0D54298]);
    sub_1D6E168E0();
    swift_bridgeObjectRelease();
    result = (id *)objc_msgSend(v18[3], sel_absoluteTimeInterval);
    if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) != 0)
    {
      if (v29 > -9.22337204e18)
      {
        if (v29 < 9.22337204e18)
        {
          sub_1D6E276F8();
          sub_1D6E18A94();
          v42 = v27;
          v30 = swift_allocObject();
          v41[1] = v20;
          *(_OWORD *)(v30 + 16) = v57;
          v31 = v46;
          v43 = v18;
          v32 = v48;
          v28(v30 + v46, v27, v48);
          sub_1D5E6D8C0(&qword_1ED60BC58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D54D18], MEMORY[0x1E0D54D08]);
          v41[2] = 0x80000001D6F2CB80;
          v33 = v45;
          sub_1D6E168E0();
          swift_bridgeObjectRelease();
          (*((void (**)(char *, uint64_t))v53 + 1))(v13, v33);
          v53 = v28;
          v35 = v55;
          v34 = v56;
          v36 = v49;
          (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v54, v49);
          v37 = sub_1D6E22754();
          sub_1D689DE0C(v37);
          swift_bridgeObjectRelease();
          v38 = v50;
          sub_1D6E18F8C();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
          v39 = swift_allocObject();
          *(_OWORD *)(v39 + 16) = v57;
          v53(v39 + v31, v42, v32);
          sub_1D5E6D8C0((unint64_t *)&unk_1ED60BCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55558], MEMORY[0x1E0D55548]);
          v40 = v52;
          sub_1D6E168E0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v40);
          sub_1D6E190F4();
          sub_1D5E6D8C0((unint64_t *)&unk_1ED60BCD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55798], MEMORY[0x1E0D55790]);
          memset(v59, 0, sizeof(v59));
          sub_1D6E168F8();
          swift_release();
          return (id *)sub_1D5E8D20C((uint64_t)v59, (uint64_t (*)(_QWORD))sub_1D5F11814);
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

id sub_1D689ED68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  id result;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  unint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  _OWORD v56[3];

  v47 = a3;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED605770, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55CF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v48 = (uint64_t)v42 - v6;
  v7 = sub_1D6E194B4();
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  MEMORY[0x1E0C80A78](v7);
  v42[0] = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D6E19910();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1D6E18AA0();
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4AD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = v13;
  v15 = sub_1D6E16940();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = *(unsigned __int8 *)(v16 + 80);
  v19 = (v18 + 32) & ~v18;
  v52 = v14;
  v54 = v19 + v17;
  v20 = v18 | 7;
  v21 = swift_allocObject();
  v55 = xmmword_1D6E32F90;
  *(_OWORD *)(v21 + 16) = xmmword_1D6E32F90;
  v51 = v19;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104);
  v45 = *MEMORY[0x1E0CF8170];
  v53 = v15;
  v46 = v22;
  ((void (*)(uint64_t))v22)(v21 + v19);
  sub_1D6E18404();
  sub_1D5E6D8C0(&qword_1ED60BBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D542A8], MEMORY[0x1E0D54298]);
  v42[1] = a1;
  sub_1D6E168E0();
  swift_bridgeObjectRelease();
  result = objc_msgSend(*(id *)(a2 + 24), sel_absoluteTimeInterval);
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  sub_1D6E276F8();
  sub_1D6E18A94();
  v25 = v20;
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v55;
  v27 = v51;
  v28 = v45;
  v29 = v46;
  v46(v26 + v51, v45, v53);
  sub_1D5E6D8C0(&qword_1ED60BC58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D54D18], MEMORY[0x1E0D54D08]);
  v30 = v44;
  sub_1D6E168E0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, unint64_t))(v43 + 8))(v12, v30);
  v31 = v47;
  v43 = v25;
  v44 = v47 + OBJC_IVAR____TtCC7NewsUI213TodayFeedPool11MyHeadlines_analyticsData;
  v32 = v29;
  v33 = v28;
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = v55;
  v35 = v34 + v27;
  v36 = v53;
  v32(v35, v28, v53);
  sub_1D6E19544();
  sub_1D5E6D8C0(&qword_1ED60BD20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55D88], MEMORY[0x1E0D55D78]);
  v44 = 0x80000001D6F2CB80;
  sub_1D6E168E0();
  swift_bridgeObjectRelease();
  v37 = v48;
  sub_1D64016A4(v31 + OBJC_IVAR____TtCC7NewsUI213TodayFeedPool11MyHeadlines_articleScoreSummaryDataList, v48);
  v39 = v49;
  v38 = v50;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v37, 1, v50) == 1)
  {
    sub_1D6401750(v37);
  }
  else
  {
    v40 = v42[0];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v39 + 32))(v42[0], v37, v38);
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = v55;
    v32(v41 + v51, v33, v36);
    sub_1D5E6D8C0(&qword_1ED6051D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55CF0], MEMORY[0x1E0D55CE0]);
    sub_1D6E168E0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
  }
  sub_1D6E190F4();
  sub_1D5E6D8C0((unint64_t *)&unk_1ED60BCD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55798], MEMORY[0x1E0D55790]);
  memset(v56, 0, 32);
  sub_1D6E168F8();
  return (id)sub_1D5E8D20C((uint64_t)v56, (uint64_t (*)(_QWORD))sub_1D5F11814);
}

uint64_t sub_1D689F2CC(uint64_t *a1)
{
  return sub_1D689E510(a1);
}

id sub_1D689F2E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1D689ED68(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D689F2F0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1D689F318()
{
  sub_1D689E670();
}

uint64_t sub_1D689F320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D689E724(a1, a2, v2);
}

uint64_t sub_1D689F338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D6E22760();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

id *sub_1D689F3AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D6E22760() - 8) + 80);
  return sub_1D689E820(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

void sub_1D689F3EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED623BD0)
  {
    sub_1D6E22748();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED623BD0);
  }
}

void sub_1D689F450()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED623BC0)
  {
    sub_1D6E22748();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED623BC0);
  }
}

uint64_t sub_1D689F4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D689F450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AudioPlaylistFeedStyler()
{
  return objc_opt_self();
}

unint64_t sub_1D689F520()
{
  return 0xD000000000000019;
}

uint64_t sub_1D689F53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D689FAF0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D689F564()
{
  sub_1D689F6A4();
  return sub_1D6E28538();
}

uint64_t sub_1D689F58C()
{
  sub_1D689F6A4();
  return sub_1D6E28544();
}

uint64_t EngagementStoredSettingsEntry.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D689F80C(0, &qword_1EFFF45E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D689F6A4();
  sub_1D6E28478();
  sub_1D6E28214();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D689F6A4()
{
  unint64_t result;

  result = qword_1EFFF45F0;
  if (!qword_1EFFF45F0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9A734, &type metadata for EngagementStoredSettingsEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF45F0);
  }
  return result;
}

uint64_t EngagementStoredSettingsEntry.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;

  sub_1D689F80C(0, &qword_1EFFF45F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D689F6A4();
  sub_1D6E2846C();
  if (!v2)
  {
    v10 = sub_1D6E28160();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D689F80C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D689F6A4();
    v7 = a3(a1, &type metadata for EngagementStoredSettingsEntry.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D689F868@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return EngagementStoredSettingsEntry.init(from:)(a1, a2);
}

uint64_t sub_1D689F87C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D689F80C(0, &qword_1EFFF45E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D689F6A4();
  sub_1D6E28478();
  sub_1D6E28214();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for EngagementStoredSettingsEntry()
{
  return &type metadata for EngagementStoredSettingsEntry;
}

uint64_t storeEnumTagSinglePayload for EngagementStoredSettingsEntry.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D689F9BC + 4 * byte_1D6E9A5EA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D689F9DC + 4 * byte_1D6E9A5EF[v4]))();
}

_BYTE *sub_1D689F9BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D689F9DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D689F9E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D689F9EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D689F9F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D689F9FC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EngagementStoredSettingsEntry.CodingKeys()
{
  return &type metadata for EngagementStoredSettingsEntry.CodingKeys;
}

unint64_t sub_1D689FA1C()
{
  unint64_t result;

  result = qword_1EFFF4600;
  if (!qword_1EFFF4600)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9A70C, &type metadata for EngagementStoredSettingsEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF4600);
  }
  return result;
}

unint64_t sub_1D689FA64()
{
  unint64_t result;

  result = qword_1EFFF4608;
  if (!qword_1EFFF4608)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9A67C, &type metadata for EngagementStoredSettingsEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF4608);
  }
  return result;
}

unint64_t sub_1D689FAAC()
{
  unint64_t result;

  result = qword_1EFFF4610;
  if (!qword_1EFFF4610)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9A6A4, &type metadata for EngagementStoredSettingsEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF4610);
  }
  return result;
}

uint64_t sub_1D689FAF0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000019 && a2 == 0x80000001D6EF4090)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D6E282C8();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t type metadata accessor for MyMagazinesSectionHeaderView()
{
  return objc_opt_self();
}

void sub_1D689FD38()
{
  sub_1D689FD94(&qword_1EFFE8978, (uint64_t)&unk_1D6E9A7E8);
  JUMPOUT(0x1D8289094);
}

uint64_t sub_1D689FD70()
{
  return sub_1D689FD94(&qword_1EFFF4648, (uint64_t)&unk_1D6E9A7B0);
}

uint64_t sub_1D689FD94(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MyMagazinesSectionHeaderView();
    result = MEMORY[0x1D82917D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D689FDD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;

  v2 = sub_1D6E21A88();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - v7;
  v24 = MEMORY[0x1E0DEE9D8];
  v9 = *(_QWORD *)(a1 + 56);
  v22 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v23 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v23)
      goto LABEL_23;
    v19 = *(_QWORD *)(v22 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v23)
        goto LABEL_23;
      v19 = *(_QWORD *)(v22 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v23)
          goto LABEL_23;
        v19 = *(_QWORD *)(v22 + 8 * v14);
        if (!v19)
        {
          v14 = v18 + 3;
          if (v18 + 3 >= v23)
            goto LABEL_23;
          v19 = *(_QWORD *)(v22 + 8 * v14);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v12 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v16, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    v17 = sub_1D6E21A7C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    result = sub_1D6686DBC(v17);
  }
  v20 = v18 + 4;
  if (v20 >= v23)
  {
LABEL_23:
    swift_release();
    return v24;
  }
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v23)
      goto LABEL_23;
    v19 = *(_QWORD *)(v22 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1D68A0020(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t matched;
  uint64_t v12;
  _QWORD v13[14];

  sub_1D5E84EF4(0, &qword_1ED623738, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5DA78], sub_1D68A1B04, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5D5D0]);
  v13[4] = v4;
  v13[6] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v13[3] = (char *)v13 - v5;
  v6 = sub_1D6E24554();
  v13[8] = *(_QWORD *)(v6 - 8);
  v13[9] = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v13[7] = (char *)v13 - v8;
  sub_1D68A1B20();
  v13[2] = v9;
  v13[5] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13[1] = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  MEMORY[0x1E0C80A78](matched);
  sub_1D68A1DE0(0, &qword_1ED624780, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v13[11] = *(_QWORD *)(v12 - 8);
  v13[12] = v12;
  MEMORY[0x1E0C80A78](v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68A1CA0();
  sub_1D6E28478();
  __asm { BR              X10 }
}

uint64_t sub_1D68A0214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_projectBox();
  sub_1D68A1504(v3, v0);
  *(_BYTE *)(v2 - 88) = 0;
  *(_BYTE *)(v2 - 65) = 0;
  sub_1D68A1E3C();
  v4 = *(_QWORD *)(v2 - 96);
  v5 = *(_QWORD *)(v2 - 112);
  sub_1D6E28238();
  if (!v5)
  {
    *(_BYTE *)(v2 - 88) = 1;
    sub_1D5E6D8C0(&qword_1ED61A188, type metadata accessor for SportsScoreSortingMatchFilter, (uint64_t)&unk_1D6E3EA08);
    sub_1D6E28238();
  }
  sub_1D68A1548(v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v4);
}

void sub_1D68A06B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t matched;
  uint64_t v5;

  v2 = sub_1D6E24554();
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  v5 = MEMORY[0x1E0C80A78](matched);
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X10 }
}

uint64_t sub_1D68A0790()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  if (v0 >> 61)
  {
    v6 = 0;
  }
  else
  {
    v3 = swift_projectBox();
    v4 = swift_projectBox();
    sub_1D68A1504(v3, v2);
    sub_1D68A1504(v4, v1);
    sub_1D60D4A84(v2, v1);
    v6 = v5;
    sub_1D68A1548(v1);
    sub_1D68A1548(v2);
  }
  return v6 & 1;
}

uint64_t sub_1D68A094C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D6E280D0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1D68A09A8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D6E280D0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1D68A0A08()
{
  sub_1D68A2268();
  return sub_1D6E26D44();
}

uint64_t sub_1D68A0A64()
{
  sub_1D68A2268();
  return sub_1D6E26D08();
}

uint64_t sub_1D68A0AB0()
{
  sub_1D68A1CA0();
  return sub_1D6E28538();
}

uint64_t sub_1D68A0AD8()
{
  sub_1D68A1CA0();
  return sub_1D6E28544();
}

void sub_1D68A0B00(char *a1)
{
  sub_1D658C594(*a1);
}

void sub_1D68A0B0C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D6E28400();
  __asm { BR              X9 }
}

uint64_t sub_1D68A0B54()
{
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

void sub_1D68A0BD4()
{
  __asm { BR              X10 }
}

uint64_t sub_1D68A0C0C()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

void sub_1D68A0C78()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D6E28400();
  __asm { BR              X9 }
}

uint64_t sub_1D68A0CBC()
{
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

uint64_t sub_1D68A0D3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D68A2220();
  *a1 = result;
  return result;
}

uint64_t sub_1D68A0D68()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D68A0D94 + 4 * byte_1D6E9A839[*v0]))();
}

void sub_1D68A0D94(_QWORD *a1@<X8>)
{
  *a1 = 7630702;
  a1[1] = 0xE300000000000000;
}

void sub_1D68A0DA8(_QWORD *a1@<X8>)
{
  *a1 = 0x6557664F73796164;
  a1[1] = 0xEA00000000006B65;
}

void sub_1D68A0DC8(_QWORD *a1@<X8>)
{
  *a1 = 0x7265746C6966;
  a1[1] = 0xE600000000000000;
}

void sub_1D68A0DE0(_QWORD *a1@<X8>)
{
  *a1 = 0x726F7463656C6573;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1D68A0DFC()
{
  sub_1D68A21DC();
  return sub_1D6E26D44();
}

uint64_t sub_1D68A0E58()
{
  sub_1D68A21DC();
  return sub_1D6E26D08();
}

_QWORD *sub_1D68A0EA4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1D68A1640(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1D68A0ECC(_QWORD *a1)
{
  uint64_t *v1;

  sub_1D68A0020(a1, *v1);
}

void sub_1D68A0EE4(uint64_t *a1)
{
  sub_1D68A06B0(*a1);
}

void sub_1D68A0EF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t matched;

  v2 = sub_1D6E24554();
  MEMORY[0x1E0C80A78](v2);
  matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  MEMORY[0x1E0C80A78](matched);
  __asm { BR              X10 }
}

uint64_t sub_1D68A0F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = swift_projectBox();
  sub_1D68A1504(v2, v0);
  *(_QWORD *)(v1 - 64) = 0x28686374616DLL;
  *(_QWORD *)(v1 - 56) = 0xE600000000000000;
  sub_1D60D3B50();
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  v3 = *(_QWORD *)(v1 - 64);
  sub_1D68A1548(v0);
  return v3;
}

void sub_1D68A119C()
{
  uint64_t *v0;

  sub_1D68A0EF0(*v0);
}

void sub_1D68A11A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t matched;
  uint64_t v5;

  v5 = sub_1D6E24554();
  MEMORY[0x1E0C80A78](v5);
  v2 = sub_1D6E1607C();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1D6E16094();
  MEMORY[0x1E0C80A78](v3);
  matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  MEMORY[0x1E0C80A78](matched);
  __asm { BR              X10 }
}

BOOL sub_1D68A12CC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = swift_projectBox();
  sub_1D68A1504(v1, v0);
  sub_1D60D5840(v0);
  if (v2 >> 62)
    v3 = sub_1D6E28040();
  else
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  sub_1D68A1548(v0);
  return v3 != 0;
}

uint64_t sub_1D68A14E8()
{
  return sub_1D5E6D8C0(&qword_1ED5F3600, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A5C0], MEMORY[0x1E0D5A5D8]);
}

uint64_t sub_1D68A1504(uint64_t a1, uint64_t a2)
{
  uint64_t matched;

  matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 16))(a2, a1, matched);
  return a2;
}

uint64_t sub_1D68A1548(uint64_t a1)
{
  uint64_t matched;

  matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 8))(a1, matched);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioHistoryFeedPrewarmResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7C && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 124);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AudioHistoryFeedPrewarmResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7B)
  {
    *(_QWORD *)result = a2 - 124;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsScoreSortingCondition()
{
  return &type metadata for SportsScoreSortingCondition;
}

_QWORD *sub_1D68A1640(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t matched;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD v13[8];
  uint64_t v14;
  char v16;

  sub_1D5E84EF4(0, &qword_1ED623738, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5DA78], sub_1D68A1B04, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5D5D0]);
  v13[5] = *(_QWORD *)(v2 - 8);
  v13[6] = v2;
  MEMORY[0x1E0C80A78](v2);
  v13[7] = (char *)v13 - v3;
  sub_1D68A1B20();
  v13[4] = v4;
  v13[2] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v13[3] = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  MEMORY[0x1E0C80A78](matched);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D68A1DE0(0, &qword_1ED6244D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68A1CA0();
  v11 = v14;
  sub_1D6E2846C();
  if (!v11)
  {
    v13[1] = v8;
    v14 = matched;
    v16 = 0;
    sub_1D68A1CE4();
    sub_1D6E28184();
    __asm { BR              X10 }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v10;
}

void sub_1D68A1864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 - 88) = 1;
  sub_1D5E6D8C0(&qword_1ED61A190, type metadata accessor for SportsScoreSortingMatchFilter, (uint64_t)&unk_1D6E3EA30);
  v6 = *(_QWORD *)(v5 - 152);
  sub_1D6E28184();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v4);
    swift_allocBox();
    sub_1D63B4768(v6, v7);
    __swift_destroy_boxed_opaque_existential_1(v3);
    JUMPOUT(0x1D68A1820);
  }
  JUMPOUT(0x1D68A1808);
}

uint64_t sub_1D68A1B04()
{
  return sub_1D5E6D8C0(&qword_1ED630918, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5DA78], MEMORY[0x1E0D5DA70]);
}

void sub_1D68A1B20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED630908)
  {
    sub_1D5E84EF4(255, &qword_1ED623ED8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A5C0], sub_1D68A14E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1D68A1C00(&qword_1ED623EE8, sub_1D68A1BE4, MEMORY[0x1E0DEB3D8]);
    sub_1D68A1C00(&qword_1ED623EE0, sub_1D68A1C84, MEMORY[0x1E0DEB3B8]);
    v0 = sub_1D6E23954();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED630908);
  }
}

uint64_t sub_1D68A1BE4()
{
  return sub_1D5E6D8C0(&qword_1ED5F3608, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A5C0], MEMORY[0x1E0D5A5E8]);
}

uint64_t sub_1D68A1C00(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D5E84EF4(255, &qword_1ED623ED8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A5C0], sub_1D68A14E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D82917D0](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D68A1C84()
{
  return sub_1D5E6D8C0(&qword_1ED5F35F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A5C0], MEMORY[0x1E0D5A5D0]);
}

unint64_t sub_1D68A1CA0()
{
  unint64_t result;

  result = qword_1ED6177B8;
  if (!qword_1ED6177B8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9AB6C, &type metadata for SportsScoreSortingCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6177B8);
  }
  return result;
}

unint64_t sub_1D68A1CE4()
{
  unint64_t result;

  result = qword_1ED6177E0;
  if (!qword_1ED6177E0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9AB44, &type metadata for SportsScoreSortingCondition.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED6177E0);
  }
  return result;
}

uint64_t sub_1D68A1D28()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D68A1D50()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1D68A1D74()
{
  unint64_t result;

  result = qword_1ED6177F0;
  if (!qword_1ED6177F0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9A8FC, &type metadata for SportsScoreSortingCondition);
    atomic_store(result, (unint64_t *)&qword_1ED6177F0);
  }
  return result;
}

uint64_t sub_1D68A1DB8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D68A1DE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D68A1CA0();
    v7 = a3(a1, &type metadata for SportsScoreSortingCondition.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D68A1E3C()
{
  unint64_t result;

  result = qword_1ED6177D0;
  if (!qword_1ED6177D0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9AB1C, &type metadata for SportsScoreSortingCondition.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED6177D0);
  }
  return result;
}

uint64_t sub_1D68A1E80(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1D5E84EF4(255, &qword_1ED623738, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5DA78], sub_1D68A1B04, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5D5D0]);
    result = MEMORY[0x1D82917D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D68A1EE0()
{
  unint64_t result;

  result = qword_1ED6177E8;
  if (!qword_1ED6177E8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9A8D4, &type metadata for SportsScoreSortingCondition);
    atomic_store(result, (unint64_t *)&qword_1ED6177E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsScoreSortingCondition.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D68A1F70 + 4 * byte_1D6E9A852[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D68A1FA4 + 4 * byte_1D6E9A84D[v4]))();
}

uint64_t sub_1D68A1FA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68A1FAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D68A1FB4);
  return result;
}

uint64_t sub_1D68A1FC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D68A1FC8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D68A1FCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68A1FD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsScoreSortingCondition.CodingType()
{
  return &type metadata for SportsScoreSortingCondition.CodingType;
}

uint64_t storeEnumTagSinglePayload for SportsScoreSortingCondition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D68A203C + 4 * byte_1D6E9A85C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D68A2070 + 4 * byte_1D6E9A857[v4]))();
}

uint64_t sub_1D68A2070(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68A2078(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D68A2080);
  return result;
}

uint64_t sub_1D68A208C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D68A2094);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D68A2098(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68A20A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsScoreSortingCondition.CodingKeys()
{
  return &type metadata for SportsScoreSortingCondition.CodingKeys;
}

unint64_t sub_1D68A20C0()
{
  unint64_t result;

  result = qword_1EFFF4678;
  if (!qword_1EFFF4678)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9AA54, &type metadata for SportsScoreSortingCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF4678);
  }
  return result;
}

unint64_t sub_1D68A2108()
{
  unint64_t result;

  result = qword_1EFFF4680;
  if (!qword_1EFFF4680)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9AAF4, &type metadata for SportsScoreSortingCondition.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EFFF4680);
  }
  return result;
}

unint64_t sub_1D68A2150()
{
  unint64_t result;

  result = qword_1ED6177C8;
  if (!qword_1ED6177C8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9A93C, &type metadata for SportsScoreSortingCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6177C8);
  }
  return result;
}

unint64_t sub_1D68A2198()
{
  unint64_t result;

  result = qword_1ED6177C0;
  if (!qword_1ED6177C0)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9A964, &type metadata for SportsScoreSortingCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6177C0);
  }
  return result;
}

unint64_t sub_1D68A21DC()
{
  unint64_t result;

  result = qword_1ED6177D8;
  if (!qword_1ED6177D8)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9AA7C, &type metadata for SportsScoreSortingCondition.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED6177D8);
  }
  return result;
}

uint64_t sub_1D68A2220()
{
  unint64_t v0;

  v0 = sub_1D6E280D0();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_1D68A2268()
{
  unint64_t result;

  result = qword_1EFFF4688;
  if (!qword_1EFFF4688)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9A9DC, &type metadata for SportsScoreSortingCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF4688);
  }
  return result;
}

uint64_t SaveIntentArticleProvider.results()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1D68A22C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  sub_1D5E847C4(0, (unint64_t *)&unk_1EFFF4698, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56E78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  *v3 = v0;
  v3[1] = sub_1D68A2388;
  return sub_1D6E28298();
}

uint64_t sub_1D68A2388()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D68A23E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D68A23F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v13[5];

  sub_1D68A2F7C();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E96490(a2, (uint64_t)v13);
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, v8, v5);
  sub_1D681D8B4(0, (uint64_t)sub_1D68A3058, v10);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1D68A24F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1D68A23F0(a1, *(_QWORD *)(v1 + 16));
}

void sub_1D68A24F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t j;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;

  v61 = a3;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED6301C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56E78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v61 - v9;
  v11 = sub_1D6E16F64();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v64 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v63 = (char *)&v61 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v61 - v18;
  MEMORY[0x1E0C80A78](v17);
  v62 = (char *)&v61 - v20;
  if ((a2 & 0x100) == 0)
  {
    v65 = v12;
    if ((_BYTE)a2)
    {
      if (a2 != 1)
      {
        if (qword_1EFFD2E28 != -1)
          swift_once();
        v35 = sub_1D6E1C664();
        __swift_project_value_buffer(v35, (uint64_t)qword_1F00AC3C0);
        v36 = sub_1D6E1C64C();
        v37 = sub_1D6E2735C();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v38 = 0;
          _os_log_impl(&dword_1D5E69000, v36, v37, "ArticleOptionsProvider could not fetch history. No Batch.", v38, 2u);
          MEMORY[0x1D82918CC](v38, -1, -1);
        }

        v66 = MEMORY[0x1E0DEE9D8];
        goto LABEL_80;
      }
      v66 = MEMORY[0x1E0DEE9D8];
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        v21 = sub_1D6E28040();
        if (!v21)
          goto LABEL_42;
      }
      else
      {
        v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v21)
          goto LABEL_42;
      }
      if (v21 >= 1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          for (i = 0; i != v21; ++i)
          {
            if ((*(_BYTE *)(MEMORY[0x1D8290720](i, a1) + OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState) & 1) != 0)
            {
              swift_unknownObjectRelease();
            }
            else
            {
              sub_1D6E27F20();
              sub_1D6E27F50();
              sub_1D6E27F5C();
              sub_1D6E27F2C();
            }
          }
        }
        else
        {
          v39 = (_QWORD *)(a1 + 32);
          v40 = OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState;
          do
          {
            if ((*(_BYTE *)(*v39 + v40) & 1) == 0)
            {
              swift_retain();
              sub_1D6E27F20();
              sub_1D6E27F50();
              sub_1D6E27F5C();
              sub_1D6E27F2C();
              v40 = OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState;
            }
            ++v39;
            --v21;
          }
          while (v21);
        }
LABEL_42:
        sub_1D61DA07C((id)a1, 1, 0);
        v43 = v66;
        if ((v66 & 0x8000000000000000) != 0 || (v66 & 0x4000000000000000) != 0)
        {
          swift_retain();
          v44 = sub_1D6E28040();
          if (v44)
          {
LABEL_45:
            if (v44 >= 1)
            {
              v45 = 0;
              v46 = MEMORY[0x1E0DEE9D8];
              do
              {
                if ((v43 & 0xC000000000000001) != 0)
                  MEMORY[0x1D8290720](v45, v43);
                else
                  swift_retain();
                swift_unknownObjectRetain();
                sub_1D6E16F58();
                swift_release();
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
                {
                  sub_1D65CCBAC((uint64_t)v8);
                }
                else
                {
                  v47 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
                  v48 = v63;
                  v47(v63, v8, v11);
                  v47(v64, v48, v11);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v46 = sub_1D6242E34(0, *(_QWORD *)(v46 + 16) + 1, 1, v46);
                  v50 = *(_QWORD *)(v46 + 16);
                  v49 = *(_QWORD *)(v46 + 24);
                  if (v50 >= v49 >> 1)
                    v46 = sub_1D6242E34(v49 > 1, v50 + 1, 1, v46);
                  *(_QWORD *)(v46 + 16) = v50 + 1;
                  v51 = v46
                      + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))
                      + *(_QWORD *)(v65 + 72) * v50;
                  v12 = v65;
                  v47((char *)v51, v64, v11);
                }
                ++v45;
              }
              while (v44 != v45);
              goto LABEL_79;
            }
            goto LABEL_83;
          }
        }
        else
        {
          v44 = *(_QWORD *)(v66 + 16);
          swift_retain();
          if (v44)
            goto LABEL_45;
        }
LABEL_78:
        v46 = MEMORY[0x1E0DEE9D8];
LABEL_79:
        swift_release_n();
        v66 = v46;
LABEL_80:
        sub_1D68A2F7C();
        sub_1D6E26F18();
        return;
      }
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      return;
    }
    v66 = MEMORY[0x1E0DEE9D8];
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v33 = sub_1D6E28040();
      if (!v33)
        goto LABEL_59;
    }
    else
    {
      v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v33)
        goto LABEL_59;
    }
    if (v33 < 1)
      goto LABEL_82;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (j = 0; j != v33; ++j)
      {
        if ((*(_BYTE *)(MEMORY[0x1D8290720](j, a1) + OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState) & 1) != 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1D6E27F20();
          sub_1D6E27F50();
          sub_1D6E27F5C();
          sub_1D6E27F2C();
        }
      }
    }
    else
    {
      v41 = (_QWORD *)(a1 + 32);
      v42 = OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState;
      do
      {
        if ((*(_BYTE *)(*v41 + v42) & 1) == 0)
        {
          swift_retain();
          sub_1D6E27F20();
          sub_1D6E27F50();
          sub_1D6E27F5C();
          sub_1D6E27F2C();
          v42 = OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState;
        }
        ++v41;
        --v33;
      }
      while (v33);
    }
LABEL_59:
    sub_1D61DA07C((id)a1, 0, 0);
    v52 = v66;
    if ((v66 & 0x8000000000000000) != 0 || (v66 & 0x4000000000000000) != 0)
    {
      swift_retain();
      v53 = sub_1D6E28040();
      if (!v53)
        goto LABEL_78;
    }
    else
    {
      v53 = *(_QWORD *)(v66 + 16);
      swift_retain();
      if (!v53)
        goto LABEL_78;
    }
    if (v53 >= 1)
    {
      v54 = 0;
      v46 = MEMORY[0x1E0DEE9D8];
      v64 = v19;
      do
      {
        if ((v52 & 0xC000000000000001) != 0)
          MEMORY[0x1D8290720](v54, v52);
        else
          swift_retain();
        swift_unknownObjectRetain();
        sub_1D6E16F58();
        swift_release();
        v55 = v65;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v10, 1, v11) == 1)
        {
          sub_1D65CCBAC((uint64_t)v10);
        }
        else
        {
          v56 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
          v57 = v62;
          v56(v62, v10, v11);
          v56(v19, v57, v11);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v46 = sub_1D6242E34(0, *(_QWORD *)(v46 + 16) + 1, 1, v46);
          v59 = *(_QWORD *)(v46 + 16);
          v58 = *(_QWORD *)(v46 + 24);
          if (v59 >= v58 >> 1)
            v46 = sub_1D6242E34(v58 > 1, v59 + 1, 1, v46);
          *(_QWORD *)(v46 + 16) = v59 + 1;
          v60 = v46
              + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))
              + *(_QWORD *)(v65 + 72) * v59;
          v19 = v64;
          v56((char *)v60, v64, v11);
        }
        ++v54;
      }
      while (v53 != v54);
      goto LABEL_79;
    }
    goto LABEL_84;
  }
  v23 = (id)a1;
  if (qword_1EFFD2E28 != -1)
    swift_once();
  v24 = sub_1D6E1C664();
  __swift_project_value_buffer(v24, (uint64_t)qword_1F00AC3C0);
  v25 = (id)a1;
  v26 = (id)a1;
  v27 = sub_1D6E1C64C();
  v28 = sub_1D6E2735C();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v29 = 138412290;
    v31 = (id)a1;
    v32 = _swift_stdlib_bridgeErrorToNSError();
    v66 = v32;
    sub_1D6E27C44();
    *v30 = v32;
    sub_1D61DA07C((id)a1, a2, 1);
    sub_1D61DA07C((id)a1, a2, 1);
    _os_log_impl(&dword_1D5E69000, v27, v28, "ArticleOptionsProvider could not fetch history. Error: %@", v29, 0xCu);
    sub_1D5E847C4(0, (unint64_t *)&qword_1ED624130, (uint64_t (*)(uint64_t))sub_1D5FF680C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v30, -1, -1);
    MEMORY[0x1D82918CC](v29, -1, -1);
  }
  else
  {
    sub_1D61DA07C((id)a1, a2, 1);
    sub_1D61DA07C((id)a1, a2, 1);
  }

  v66 = MEMORY[0x1E0DEE9D8];
  sub_1D68A2F7C();
  sub_1D6E26F18();
  sub_1D61DA07C((id)a1, a2, 1);
}

uint64_t sub_1D68A2E90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1D68A2EA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  sub_1D5E847C4(0, (unint64_t *)&unk_1EFFF4698, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56E78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  *v3 = v0;
  v3[1] = sub_1D68A2388;
  return sub_1D6E28298();
}

ValueMetadata *type metadata accessor for SaveIntentArticleProvider()
{
  return &type metadata for SaveIntentArticleProvider;
}

void sub_1D68A2F7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF46A8)
  {
    sub_1D5E847C4(255, (unint64_t *)&unk_1EFFF4698, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56E78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1D6E26F24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF46A8);
  }
}

uint64_t sub_1D68A2FF8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D68A2F7C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1D68A3058(unint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2 & 0x1FF;
  sub_1D68A2F7C();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  sub_1D68A24F8(a1, v4, v2 + ((v6 + 16) & ~v6));
}

uint64_t sub_1D68A30B0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;

  v52 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, &qword_1ED603D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v49 = (char *)&v45 - v5;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED623980, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v3);
  MEMORY[0x1E0C80A78](v6);
  v51 = (char *)&v45 - v7;
  sub_1D68A437C();
  MEMORY[0x1E0C80A78](v8);
  v45 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5E84EF4(0, &qword_1EFFF2CB8, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedServiceConfig, (uint64_t (*)(void))sub_1D60B1C68, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5C7A0]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v45 - v13;
  v15 = sub_1D6E24F8C();
  v56 = *(_QWORD *)(v15 - 8);
  v57 = v15;
  MEMORY[0x1E0C80A78](v15);
  v55 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5FAF400(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1D6E22E98();
  v53 = *(_QWORD *)(v20 - 8);
  v54 = v20;
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v45 - v24;
  v26 = type metadata accessor for TagsSearchMoreFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v45 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_formatService + 24);
  v46 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_formatService + 32);
  v47 = v29;
  v50 = __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_formatService), v29);
  sub_1D68A3E2C();
  sub_1D6E21C08();
  sub_1D6E21BCC();
  sub_1D6E21BCC();
  v30 = sub_1D6E222BC();
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v48 = v19;
  v31(v19, 1, 1, v30);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v33 = v49;
  v32(v14, v52, v11);
  sub_1D5E84EF4(0, &qword_1EFFF2CB0, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedServiceConfig, (uint64_t (*)(void))sub_1D60B1C68, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v45, 1, 1, v34);
  v35 = sub_1D6E256AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v51, 1, 1, v35);
  v58 = 1;
  sub_1D5E84EF4(0, &qword_1EFFF2CC0, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedServiceConfig, (uint64_t (*)(void))sub_1D60B1C68, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5F438]);
  swift_allocObject();
  sub_1D6E25898();
  v36 = sub_1D6E24D4C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v33, 1, 1, v36);
  v37 = qword_1EFFD2D50;
  (id)*MEMORY[0x1E0D58660];
  if (v37 != -1)
    swift_once();
  (id)qword_1F00AC240;
  v38 = (uint64_t)v55;
  sub_1D6E24F68();
  v39 = (uint64_t)v48;
  v40 = sub_1D6472894((uint64_t)v28, 1936154996, 0xE400000000000000, (uint64_t)v25, (uint64_t)v23, MEMORY[0x1E0DEE9D8], (uint64_t)v48, v38, v47, v46);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v38, v57);
  sub_1D5E8D20C(v39, (uint64_t (*)(_QWORD))sub_1D5FAF400);
  v41 = v54;
  v42 = *(void (**)(char *, uint64_t))(v53 + 8);
  v42(v23, v54);
  v42(v25, v41);
  v43 = sub_1D6E2444C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v28, v43);
  return v40;
}

uint64_t sub_1D68A35E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  type metadata accessor for FormatGroupFeedGroupEmitterCursor();
  sub_1D6E1AE1C();
  swift_retain();
  v1 = (void *)sub_1D6E1AB4C();
  sub_1D67E5D28();
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1D68A41E0;
  *(_QWORD *)(v2 + 24) = v0;
  swift_retain();
  v3 = (void *)sub_1D6E1AB4C();
  sub_1D68A421C();
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  v4 = (void *)sub_1D6E1AB4C();
  sub_1D5E84EF4(0, &qword_1EFFF2C88, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedGroup, (uint64_t (*)(void))sub_1D5FF4B04, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B9F8]);
  sub_1D6E1AC18();
  swift_release();

  v5 = (void *)sub_1D6E1AB4C();
  v6 = sub_1D6E1ACC0();
  swift_release();

  return v6;
}

uint64_t sub_1D68A3778(uint64_t a1, unint64_t *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int v43;
  _QWORD v44[4];
  uint64_t v45;

  v3 = v2;
  v45 = a1;
  sub_1D68A421C();
  v6 = v5;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D6E15EF0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SearchMoreFeedGroup();
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = a2[3];
  v17 = *((unsigned __int8 *)a2 + 32);
  if (v17 >> 6)
  {
    if (v17 >> 6 == 1)
    {
      v18 = *a2;
      v43 = v17 & 1;
      v19 = v3;
      v20 = v16;
      swift_bridgeObjectRetain();
      v16 = v20;
      v3 = v19;
    }
    else
    {
      v18 = MEMORY[0x1E0DEE9D8];
      v16 = 1;
      v43 = 1;
    }
  }
  else
  {
    v43 = v17 & 1;
    v18 = MEMORY[0x1E0DEE9D8];
  }
  if (v18 >> 62)
  {
    v41 = v8;
    v42 = v13;
    v34 = v16;
    swift_bridgeObjectRetain();
    v35 = sub_1D6E28040();
    swift_bridgeObjectRelease();
    v16 = v34;
    v8 = v41;
    v13 = v42;
    if (v35)
      goto LABEL_8;
LABEL_10:
    v33 = sub_1D6E22964();
    sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v36, *MEMORY[0x1E0D5B6D0], v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v33;
  }
  if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_8:
  v39 = v16;
  v42 = v13;
  sub_1D6E15EE4();
  v21 = sub_1D6E15ED8();
  v40 = v6;
  v41 = v3;
  v22 = v21;
  v23 = v45;
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v26 = v23 + OBJC_IVAR____TtC7NewsUI233FormatGroupFeedGroupEmitterCursor_formatGroup;
  v27 = type metadata accessor for TagsSearchMoreFeedGroup();
  v28 = (char *)v15 + *(int *)(v27 + 20);
  v29 = sub_1D6E2198C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v28, v26, v29);
  *v15 = v22;
  v15[1] = v25;
  *(uint64_t *)((char *)v15 + *(int *)(v27 + 24)) = v18;
  sub_1D68A42FC();
  v31 = (char *)v15 + *(int *)(v30 + 48);
  *(_QWORD *)v31 = v39;
  v31[8] = v43;
  swift_storeEnumTagMultiPayload();
  v44[3] = type metadata accessor for FormatGroupFeedGroupEmitterCursor();
  v44[0] = v23;
  v32 = (uint64_t)&v8[*(int *)(v40 + 48)];
  sub_1D5E82ECC((uint64_t)v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SearchMoreFeedGroup);
  sub_1D5F74FC0((uint64_t)v44, v32);
  sub_1D5E847C4(0, &qword_1EFFF47A8, (uint64_t (*)(uint64_t))sub_1D68A421C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  swift_retain();
  v33 = sub_1D6E1AC90();
  sub_1D5E8D20C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SearchMoreFeedGroup);
  return v33;
}

uint64_t sub_1D68A3AE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1D5E84EF4(0, &qword_1EFFF2C88, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedGroup, (uint64_t (*)(void))sub_1D5FF4B04, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B9F8]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - v3;
  sub_1D68A421C();
  v6 = *(int *)(v5 + 48);
  v7 = a1 + v6;
  v8 = (uint64_t)&v4[v6];
  sub_1D5E82ECC(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SearchMoreFeedGroup);
  sub_1D5E82ECC(v7, v8, (uint64_t (*)(_QWORD))sub_1D5F11814);
  swift_storeEnumTagMultiPayload();
  sub_1D68A4288();
  swift_allocObject();
  return sub_1D6E1AC90();
}

uint64_t sub_1D68A3BE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  sub_1D5E84EF4(0, &qword_1EFFF2C88, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedGroup, (uint64_t (*)(void))sub_1D5FF4B04, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B9F8]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v7 - v3);
  v7 = 0;
  v8 = 0xE000000000000000;
  sub_1D6E27EA8();
  sub_1D6E26A98();
  v9 = a1;
  sub_1D5F2BB38();
  sub_1D6E27F98();
  v5 = v8;
  *v4 = v7;
  v4[1] = v5;
  swift_storeEnumTagMultiPayload();
  sub_1D68A4288();
  swift_allocObject();
  return sub_1D6E1AC90();
}

uint64_t sub_1D68A3D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_config;
  sub_1D68A3E2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_formatService);
  return swift_deallocClassInstance();
}

uint64_t sub_1D68A3D74()
{
  return type metadata accessor for TagsSearchMoreFeedGroupEmitter();
}

uint64_t type metadata accessor for TagsSearchMoreFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1EFFF46E8;
  if (!qword_1EFFF46E8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D68A3DB8()
{
  unint64_t v0;

  sub_1D68A3E2C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1D68A3E2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF46F8)
  {
    type metadata accessor for TagsSearchMoreFeedGroupConfigData();
    sub_1D5E6D8C0(&qword_1EFFF4700, (uint64_t (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupConfigData, (uint64_t)&unk_1D6E87498);
    sub_1D5E6D8C0(qword_1EFFF4708, (uint64_t (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupConfigData, (uint64_t)&unk_1D6E87470);
    v0 = sub_1D6E21C68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF46F8);
  }
}

uint64_t sub_1D68A3ED0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_config;
  sub_1D68A3E2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for SearchMoreFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D68A3F30()
{
  void *v0;
  uint64_t v1;

  sub_1D6E2198C();
  sub_1D6E1AE1C();
  v0 = (void *)sub_1D6E1AB4C();
  sub_1D5F11814();
  v1 = sub_1D6E1AC18();
  swift_release();

  return v1;
}

uint64_t sub_1D68A3FBC()
{
  return sub_1D68A35E8();
}

uint64_t sub_1D68A3FDC()
{
  sub_1D68A3E2C();
  return sub_1D6E21BB4();
}

uint64_t sub_1D68A4010@<X0>(uint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4E50, (uint64_t (*)(uint64_t))sub_1D5FADACC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D6E32F90;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1D68A3E2C();
  v3 = sub_1D6E21BB4();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  sub_1D5F77E70(inited);
  sub_1D68A43F0(0);
  a1[3] = v5;
  a1[4] = sub_1D5E6D8C0(&qword_1EFFF47B8, (uint64_t (*)(uint64_t))sub_1D68A43F0, MEMORY[0x1E0DB3C80]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D6E1A330();
}

uint64_t sub_1D68A411C()
{
  sub_1D5E6D8C0(&qword_1EFFF47A0, (uint64_t (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupEmitter, (uint64_t)&unk_1D6E9AC70);
  return sub_1D6E1A324();
}

uint64_t sub_1D68A415C()
{
  return sub_1D5E6D8C0(&qword_1EFFF4790, (uint64_t (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupEmitter, (uint64_t)&unk_1D6E9AC48);
}

uint64_t sub_1D68A4188()
{
  return sub_1D5E6D8C0(&qword_1EFFF4798, (uint64_t (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupEmitter, (uint64_t)&unk_1D6E9ACA0);
}

uint64_t sub_1D68A41B4()
{
  return sub_1D5E6D8C0(&qword_1EFFF47A0, (uint64_t (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupEmitter, (uint64_t)&unk_1D6E9AC70);
}

uint64_t sub_1D68A41E0(uint64_t a1, unint64_t *a2)
{
  return sub_1D68A3778(a1, a2);
}

uint64_t sub_1D68A41F8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D68A421C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EFFF2C98)
  {
    type metadata accessor for SearchMoreFeedGroup();
    sub_1D5F11814();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EFFF2C98);
  }
}

void sub_1D68A4288()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF2C90)
  {
    sub_1D5E84EF4(255, &qword_1EFFF2C88, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedGroup, (uint64_t (*)(void))sub_1D5FF4B04, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B9F8]);
    v0 = sub_1D6E1AD5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF2C90);
  }
}

void sub_1D68A42FC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EFFD8FB0)
  {
    type metadata accessor for TagsSearchMoreFeedGroup();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EFFD8FB0);
  }
}

uint64_t sub_1D68A4364()
{
  uint64_t v0;

  return sub_1D68A30B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1D68A437C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFFF2CA8)
  {
    sub_1D5E84EF4(255, &qword_1EFFF2CB0, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedServiceConfig, (uint64_t (*)(void))sub_1D60B1C68, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
    v0 = sub_1D6E27C38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFFF2CA8);
  }
}

void sub_1D68A43F0(uint64_t a1)
{
  sub_1D5E847C4(a1, &qword_1EFFF47B0, (uint64_t (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
}

void sub_1D68A440C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1D68A4460()
{
  sub_1D6E2138C();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ChannelPickerStyler()
{
  return objc_opt_self();
}

uint64_t sub_1D68A458C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  void (*v52)(char *, uint64_t);
  void *v53;
  void *v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v64 = a3;
  v65 = a4;
  v62 = a1;
  v5 = type metadata accessor for MyMagazinesModel();
  v6 = MEMORY[0x1E0C80A78](v5);
  v61 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v60 = (char *)&v56 - v8;
  v9 = sub_1D6E22D0C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)((char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v56 - v14;
  v16 = sub_1D6E23138();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MyMagazinesLayoutModel();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D622F7CC(0);
  sub_1D6E1DDEC();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v22, v16);
  v63 = v4;
  swift_getObjectType();
  sub_1D6E228B0();
  (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v10 + 88))(v13, v9) == *MEMORY[0x1E0D5BAE0])
  {
    v58 = v15;
    v59 = v19;
    v64 = v17;
    v65 = v16;
    v57 = v10;
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v13, v9);
    v23 = *v13;
    sub_1D5FE75B4(0);
    v24 = v60;
    sub_1D6E1CD60();
    v25 = *(void **)v24;
    v26 = (void *)*((_QWORD *)v24 + 2);
    sub_1D619E3D4();
    v28 = &v24[*(int *)(v27 + 48)];
    v29 = objc_msgSend(v25, sel_identifier);
    v30 = sub_1D6E26978();
    v32 = v31;

    v33 = sub_1D6E23864();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v28, v33);
    v34 = (void *)sub_1D6E1DBD0();
    v35 = *(_QWORD *)(v63 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 32))(v30, v32, ObjectType, v35);
    swift_bridgeObjectRelease();
    sub_1D5E6D8C0(&qword_1ED5E37C8, (uint64_t (*)(uint64_t))type metadata accessor for IssueDownload, (uint64_t)&protocol conformance descriptor for IssueDownload);
    sub_1D6E244A0();

    v37 = (uint64_t)v61;
    sub_1D6E1CD60();
    v38 = sub_1D6396960();
    sub_1D68A4B24(v37);
    if (v38)
    {
      v39 = (void *)sub_1D6E1DBD0();
      v40 = (void *)sub_1D6E24494();

      objc_msgSend(v40, sel_setShowsMenuAsPrimaryAction_, 1);
      v41 = (void *)sub_1D6E1DBD0();
      v42 = (void *)sub_1D6E24494();

      sub_1D600C644();
      v43 = (void *)sub_1D6E27A10();
      objc_msgSend(v42, sel_setMenu_, v43);

      v44 = (void *)sub_1D6E1DBD0();
      v45 = (void *)sub_1D6E24494();

      v46 = (void *)sub_1D6E250D0();
      v47 = swift_allocObject();
      swift_weakInit();
      v48 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v49 = (_QWORD *)swift_allocObject();
      v49[2] = v47;
      v49[3] = v48;
      v50 = v23;
      v49[4] = v38;
      swift_retain();
      v51 = (void *)sub_1D6E20288();
      swift_release();

      swift_release();
    }
    else
    {
      v50 = v23;
      v53 = (void *)sub_1D6E1DBD0();
      v54 = (void *)sub_1D6E24494();

      objc_msgSend(v54, sel_setHidden_, 1);
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v9);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v65);
  }
  else
  {
    v50 = sub_1D6E22D00();
    v52 = *(void (**)(char *, uint64_t))(v10 + 8);
    v52(v15, v9);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v52((char *)v13, v9);
  }
  return v50;
}

uint64_t type metadata accessor for MyMagazinesBlueprintViewCellProvider()
{
  return objc_opt_self();
}

uint64_t sub_1D68A4ACC()
{
  return sub_1D5E6D8C0(&qword_1EFFDD838, (uint64_t (*)(uint64_t))type metadata accessor for MyMagazinesLayoutModel, (uint64_t)&unk_1D6EE2BA8);
}

uint64_t sub_1D68A4AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = sub_1D68A458C(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_1D68A4B24(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MyMagazinesModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D68A4B60()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D68A4B84()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D68A4BA8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D68A4BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E1E608();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1D68A4C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E1E608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D68A4C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E1E608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D68A4CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E1E608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D68A4CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E1E608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D68A4D28()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68A4D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E1E608();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1D68A4D70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68A4D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D6E1E608();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ChannelEngagementLayoutOptions()
{
  uint64_t result;

  result = qword_1EFFF4970;
  if (!qword_1EFFF4970)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D68A4DF8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D6E1E608();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D68A4E60(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;

  v3 = (int *)type metadata accessor for MyMagazinesBuildBlueprintModifier();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  sub_1D661B57C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
  sub_1D5E96490(v1 + 16, (uint64_t)&v8[v3[5]]);
  *(_QWORD *)&v8[v3[6]] = *(_QWORD *)(v1 + 56);
  v10 = v3[7];
  v13 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)&v8[v10] = v13;
  sub_1D68A5024((uint64_t)v8, (uint64_t)v6);
  sub_1D68A5068();
  swift_allocObject();
  sub_1D5E6D8C0(qword_1EFFEA1F0, (uint64_t (*)(uint64_t))type metadata accessor for MyMagazinesBuildBlueprintModifier, (uint64_t)&unk_1D6E764A0);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v11 = sub_1D6E1D834();
  sub_1D68A5108((uint64_t)v8);
  return v11;
}

uint64_t sub_1D68A4FB0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MyMagazinesBlueprintModifierFactory()
{
  return objc_opt_self();
}

uint64_t sub_1D68A5004(uint64_t a1)
{
  return sub_1D68A4E60(a1);
}

uint64_t sub_1D68A5024(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MyMagazinesBuildBlueprintModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1D68A5068()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0002610)
  {
    type metadata accessor for MyMagazinesModel();
    sub_1D619E238();
    sub_1D5E6D8C0((unint64_t *)&unk_1EFFDDB10, (uint64_t (*)(uint64_t))type metadata accessor for MyMagazinesModel, (uint64_t)&unk_1D6E5F980);
    v0 = sub_1D6E1D840();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0002610);
  }
}

uint64_t sub_1D68A5108(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MyMagazinesBuildBlueprintModifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D68A5144()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  sub_1D6E1A0F0();
  v1 = (void *)sub_1D6E1AA20();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4110, (uint64_t (*)(uint64_t))sub_1D5FAC880, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D6E1AC24();

  v2 = (void *)sub_1D6E1AA20();
  sub_1D6E1AC24();

  v3 = objc_msgSend(*(id *)(v0 + 32), sel_sortedListenedArticleIDs);
  sub_1D6E26D80();

  sub_1D68A5610();
  swift_allocObject();
  v4 = sub_1D6E1AC90();
  swift_release();
  return v4;
}

uint64_t sub_1D68A527C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t TrackData;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for AudioFeedTrack(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrackData = type metadata accessor for AudioState.UpNextTrackData(0);
  MEMORY[0x1E0C80A78](TrackData);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AudioState(0);
  sub_1D68A5664(a1 + *(int *)(v11 + 24), (uint64_t)v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v13 = MEMORY[0x1E0DEE9D8];
  if (EnumCaseMultiPayload)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    if (EnumCaseMultiPayload == 1)
    {
      sub_1D6212074((uint64_t)v10, (uint64_t)v7);
      sub_1D5E847C4(0, (unint64_t *)&unk_1ED5F4C30, type metadata accessor for AudioFeedTrack, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1D6E32F90;
      sub_1D6212074((uint64_t)v7, v14 + v15);
    }
    v16 = *(_QWORD *)(v14 + 16);
    if (v16)
      goto LABEL_5;
LABEL_9:
    result = swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
    goto LABEL_10;
  }
  v16 = *(_QWORD *)(*(_QWORD *)v10 + 16);
  if (!v16)
    goto LABEL_9;
LABEL_5:
  v22 = v13;
  sub_1D6E27F38();
  v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v18 = *(_QWORD *)(v5 + 72);
  do
  {
    swift_unknownObjectRetain();
    sub_1D6E27F20();
    sub_1D6E27F50();
    sub_1D6E27F5C();
    sub_1D6E27F2C();
    v17 += v18;
    --v16;
  }
  while (v16);
  v19 = v22;
  result = swift_bridgeObjectRelease();
LABEL_10:
  *a2 = v19;
  return result;
}

uint64_t sub_1D68A546C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = type metadata accessor for AudioState(0);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + *(int *)(result + 28)) + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D6E27F38();
    v7 = *(_QWORD *)(type metadata accessor for AudioFeedTrack(0) - 8);
    v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v9 = *(_QWORD *)(v7 + 72);
    do
    {
      swift_unknownObjectRetain();
      sub_1D6E27F20();
      sub_1D6E27F50();
      sub_1D6E27F5C();
      sub_1D6E27F2C();
      v8 += v9;
      --v5;
    }
    while (v5);
    v6 = v10;
    result = swift_bridgeObjectRelease();
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1D68A5564()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

id sub_1D68A5590()
{
  if (qword_1ED5F9988 != -1)
    swift_once();
  return (id)qword_1ED6983B0;
}

uint64_t sub_1D68A55D0()
{
  return sub_1D68A5144();
}

uint64_t sub_1D68A55F0()
{
  return sub_1D6E2396C();
}

void sub_1D68A5610()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5E0D10)
  {
    v0 = sub_1D6E1AD5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5E0D10);
  }
}

uint64_t sub_1D68A5664(uint64_t a1, uint64_t a2)
{
  uint64_t TrackData;

  TrackData = type metadata accessor for AudioState.UpNextTrackData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TrackData - 8) + 16))(a2, a1, TrackData);
  return a2;
}

uint64_t static ChannelPickerNewsPlusCategoryModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1D6E282C8();
}

uint64_t ChannelPickerNewsPlusCategoryModel.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelPickerNewsPlusCategoryModel.icon1x.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D6106A10(v1 + 32, a1);
}

uint64_t ChannelPickerNewsPlusCategoryModel.icon2x.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D6106A10(v1 + 72, a1);
}

uint64_t ChannelPickerNewsPlusCategoryModel.icon3x.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D6106A10(v1 + 112, a1);
}

uint64_t ChannelPickerNewsPlusCategoryModel.hashValue.getter()
{
  sub_1D6E28400();
  sub_1D68A57AC();
  sub_1D6E26888();
  return sub_1D6E28430();
}

uint64_t sub_1D68A5774()
{
  sub_1D68A5FCC();
  return sub_1D6E1AE4C();
}

unint64_t sub_1D68A57AC()
{
  unint64_t result;

  result = qword_1EFFF4AA0;
  if (!qword_1EFFF4AA0)
  {
    result = MEMORY[0x1D82917D0](&protocol conformance descriptor for ChannelPickerNewsPlusCategoryModel, &type metadata for ChannelPickerNewsPlusCategoryModel);
    atomic_store(result, (unint64_t *)&qword_1EFFF4AA0);
  }
  return result;
}

uint64_t sub_1D68A57F0(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1D6E282C8();
}

uint64_t ChannelPickerNewsPlusCategoryModel.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_1D6E27EA8();
  v5 = 0;
  v6 = 0xE000000000000000;
  sub_1D6E26A98();
  swift_bridgeObjectRetain();
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  swift_bridgeObjectRetain();
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  sub_1D6106A10(v0 + 32, (uint64_t)v3);
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(v3, v4);
    sub_1D6E1D138();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    sub_1D602F7BC((uint64_t)v3);
  }
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  v1 = swift_bridgeObjectRetain();
  MEMORY[0x1D828F5BC](v1, MEMORY[0x1E0DEA968]);
  sub_1D6E26A98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D6E26A98();
  return v5;
}

unint64_t sub_1D68A5A04()
{
  unint64_t result;

  result = qword_1EFFF4AA8;
  if (!qword_1EFFF4AA8)
  {
    result = MEMORY[0x1D82917D0](&protocol conformance descriptor for ChannelPickerNewsPlusCategoryModel, &type metadata for ChannelPickerNewsPlusCategoryModel);
    atomic_store(result, (unint64_t *)&qword_1EFFF4AA8);
  }
  return result;
}

unint64_t sub_1D68A5A4C()
{
  unint64_t result;

  result = qword_1EFFF4AB0;
  if (!qword_1EFFF4AB0)
  {
    result = MEMORY[0x1D82917D0](&protocol conformance descriptor for ChannelPickerNewsPlusCategoryModel, &type metadata for ChannelPickerNewsPlusCategoryModel);
    atomic_store(result, (unint64_t *)&qword_1EFFF4AB0);
  }
  return result;
}

uint64_t destroy for ChannelPickerNewsPlusCategoryModel(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[7])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 4));
  if (a1[12])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 9));
  if (a1[17])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 14));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ChannelPickerNewsPlusCategoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 32;
  v7 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(v6 + 32);
  }
  v10 = (_OWORD *)(a1 + 72);
  v11 = (_OWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 96);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = v12;
    *(_QWORD *)(a1 + 104) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 88);
    *v10 = *v11;
    *(_OWORD *)(a1 + 88) = v14;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  }
  v15 = (_OWORD *)(a1 + 112);
  v16 = (_OWORD *)(a2 + 112);
  v17 = *(_QWORD *)(a2 + 136);
  if (v17)
  {
    v18 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v17;
    *(_QWORD *)(a1 + 144) = v18;
    (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 128);
    *v15 = *v16;
    *(_OWORD *)(a1 + 128) = v19;
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  }
  v20 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v20;
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ChannelPickerNewsPlusCategoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 56) = v4;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
LABEL_8:
  v7 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (v7)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  }
  else if (v7)
  {
    *(_QWORD *)(a1 + 96) = v7;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 72, a2 + 72);
    goto LABEL_15;
  }
  v8 = *(_OWORD *)(a2 + 72);
  v9 = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 72) = v8;
  *(_OWORD *)(a1 + 88) = v9;
LABEL_15:
  v10 = *(_QWORD *)(a2 + 136);
  if (!*(_QWORD *)(a1 + 136))
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 136) = v10;
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 112, a2 + 112);
      goto LABEL_22;
    }
LABEL_21:
    v11 = *(_OWORD *)(a2 + 112);
    v12 = *(_OWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v11;
    *(_OWORD *)(a1 + 128) = v12;
    goto LABEL_22;
  }
  if (!v10)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 112);
    goto LABEL_21;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
LABEL_22:
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for ChannelPickerNewsPlusCategoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 96))
    __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  v7 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 136))
    __swift_destroy_boxed_opaque_existential_1(a1 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  v9 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelPickerNewsPlusCategoryModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 176))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelPickerNewsPlusCategoryModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelPickerNewsPlusCategoryModel()
{
  return &type metadata for ChannelPickerNewsPlusCategoryModel;
}

unint64_t sub_1D68A5FCC()
{
  unint64_t result;

  result = qword_1EFFF4AB8;
  if (!qword_1EFFF4AB8)
  {
    result = MEMORY[0x1D82917D0](&protocol conformance descriptor for ChannelPickerNewsPlusCategoryModel, &type metadata for ChannelPickerNewsPlusCategoryModel);
    atomic_store(result, (unint64_t *)&qword_1EFFF4AB8);
  }
  return result;
}

uint64_t *sub_1D68A6010(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D68A6160();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
    *(_QWORD *)&v9[*(int *)(v12 + 20)] = *(_QWORD *)&v10[*(int *)(v12 + 20)];
    *(_QWORD *)&v9[*(int *)(v12 + 24)] = *(_QWORD *)&v10[*(int *)(v12 + 24)];
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v16;
    v17 = v16;
    v18 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_retain();
    swift_retain();
    v18(v14, v15, v17);
    v19 = a3[7];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_1D68A6160()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED622DF0)
  {
    type metadata accessor for PuzzleArchiveTagFeedGroupConfigData();
    sub_1D5E6D8C0(qword_1ED61F350, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupConfigData, (uint64_t)&unk_1D6E331B8);
    sub_1D5E6D8C0((unint64_t *)&unk_1ED61F340, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupConfigData, (uint64_t)&unk_1D6E33190);
    v0 = sub_1D6E21C68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED622DF0);
  }
}

uint64_t sub_1D68A6204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D68A6160();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D68A62C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  sub_1D68A6160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  v16 = v15;
  v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  swift_retain();
  v17(v13, v14, v16);
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D68A63EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  sub_1D68A6160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D68A6518(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  sub_1D68A6160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_1D68A6600(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D68A6160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  swift_release();
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  swift_release();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D68A6718()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68A6724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_1D68A6160();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1D68A67D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68A67DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_1D68A6160();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for PuzzleArchiveTagFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1ED61D070;
  if (!qword_1ED61D070)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D68A68C0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D68A6160();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1D68A6958@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1D68A6160();
  v4 = v3;
  v5 = swift_allocBox();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5 | 0x8000000000000000;
  return result;
}

uint64_t sub_1D68A69B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;

  v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  a2[4] = sub_1D5E6D8C0(&qword_1ED61B028, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupKnobs, (uint64_t)&unk_1D6ED0F90);
  a2[5] = sub_1D5E6D8C0(&qword_1EFFF4AE0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupKnobs, (uint64_t)&unk_1D6ED0F68);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1D5E82ECC(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleArchiveTagFeedGroupKnobs);
}

uint64_t sub_1D68A6A44()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  v0 = sub_1D6E2255C();
  v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B518];
  sub_1D62E0870(0, (unint64_t *)&qword_1ED624A20, (unint64_t *)&unk_1ED623110, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B518], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED623110, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, v1);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1D6E32F90;
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED623400, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5C200]);
  swift_allocObject();
  *(_QWORD *)(v6 + v5) = sub_1D6E2324C();
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v4 + 104))(v6 + v5, *MEMORY[0x1E0D5B508], v3);
  sub_1D6686B78(v6);
  return v0;
}

uint64_t sub_1D68A6C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v19[2];

  v3 = type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6E1AE1C();
  v7 = (void *)sub_1D6E1AB4C();
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED623E20, (uint64_t (*)(uint64_t))sub_1D606A950, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D6E1AC18();
  swift_release();

  sub_1D5E82ECC(v1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v19[1] = v8 + v5;
  v9 = (v8 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = swift_allocObject();
  sub_1D68A7534((uint64_t)v6, v10 + v8);
  *(_QWORD *)(v10 + v9) = a1;
  swift_retain();
  v11 = (void *)sub_1D6E1AB4C();
  sub_1D6E24428();
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  v12 = v19[0];
  sub_1D5E82ECC(v19[0], (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter);
  v13 = swift_allocObject();
  sub_1D68A7534((uint64_t)v6, v13 + v8);
  *(_QWORD *)(v13 + v9) = a1;
  swift_retain();
  v14 = (void *)sub_1D6E1AB4C();
  sub_1D5E84EF4(0, &qword_1ED6231C0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, sub_1D609D158, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B9F8]);
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  sub_1D5E82ECC(v12, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter);
  v15 = swift_allocObject();
  sub_1D68A7534((uint64_t)v6, v15 + v8);
  v16 = (void *)sub_1D6E1AB4C();
  v17 = sub_1D6E1ACCC();
  swift_release();
  swift_release();

  return v17;
}

uint64_t sub_1D68A6EDC()
{
  sub_1D68A6160();
  return sub_1D6E21BB4();
}

uint64_t sub_1D68A6EF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4E50, (uint64_t (*)(uint64_t))sub_1D5FADACC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D6E32F90;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1D68A6160();
  swift_bridgeObjectRetain();
  v3 = sub_1D6E21BB4();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  sub_1D5F77E70(inited);
  sub_1D68A840C(0);
  a1[3] = v5;
  a1[4] = sub_1D5E6D8C0((unint64_t *)&unk_1EFFF4AF0, (uint64_t (*)(uint64_t))sub_1D68A840C, MEMORY[0x1E0DB3C80]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D6E1A330();
}

uint64_t sub_1D68A7018()
{
  sub_1D5E6D8C0((unint64_t *)&unk_1EFFF4AD0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter, (uint64_t)&unk_1D6E9B170);
  return sub_1D6E1A324();
}

uint64_t sub_1D68A7058()
{
  return sub_1D5E6D8C0(&qword_1EFFF4AC0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter, (uint64_t)&unk_1D6E9B148);
}

uint64_t sub_1D68A7084()
{
  return sub_1D5E6D8C0(&qword_1EFFF4AC8, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter, (uint64_t)&unk_1D6E9B1A0);
}

uint64_t sub_1D68A70B0()
{
  return sub_1D5E6D8C0((unint64_t *)&unk_1EFFF4AD0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter, (uint64_t)&unk_1D6E9B170);
}

uint64_t sub_1D68A70DC()
{
  return swift_retain();
}

int64_t sub_1D68A70F4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;

  v4 = v3;
  v41 = a3;
  v39 = a2;
  v6 = sub_1D6E2489C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1D6E23AF8();
  v10 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = *a1 >> 62;
  if (!v14)
  {
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15)
      goto LABEL_3;
LABEL_21:
    swift_bridgeObjectRelease();
    v19 = sub_1D6E22964();
    sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, int64_t))(*(_QWORD *)(v19 - 8) + 104))(v32, *MEMORY[0x1E0D5B6D0], v19);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!sub_1D6E28040())
    goto LABEL_21;
LABEL_3:
  if ((v13 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1D8290720](0, v13);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (!v16)
    {
      __break(1u);
      goto LABEL_26;
    }
  }
  v35 = v9;
  v36 = v4;
  v37 = v7;
  v38 = v6;
  type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  sub_1D6E22BE0();
  sub_1D6E22E74();
  v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v40);
  v18 = v42;
  if (!v14)
  {
    v19 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v19 >= v42)
      goto LABEL_7;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v19 = sub_1D6E28040();
  swift_bridgeObjectRelease();
  if (v19 < v18)
  {
LABEL_10:
    v25 = sub_1D6E22964();
    sub_1D5E6D8C0(&qword_1ED5F38E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    swift_allocError();
    *v26 = v18;
    v26[1] = v19;
    (*(void (**)(int64_t *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v26, *MEMORY[0x1E0D5B718], v25);
LABEL_22:
    swift_willThrow();
    return v19;
  }
LABEL_7:
  sub_1D6E22BE0();
  sub_1D6E22E74();
  v17(v12, v40);
  v20 = v42;
  swift_bridgeObjectRetain();
  v6 = sub_1D6104B9C(v20, v13);
  v9 = v21;
  v12 = v22;
  v7 = v23;
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    sub_1D6E282F8();
    swift_unknownObjectRetain_n();
    v27 = swift_dynamicCastClass();
    if (!v27)
    {
      swift_unknownObjectRelease();
      v27 = MEMORY[0x1E0DEE9D8];
    }
    v28 = *(_QWORD *)(v27 + 16);
    swift_release();
    if (!__OFSUB__(v7 >> 1, v12))
    {
      if (v28 == (v7 >> 1) - (_QWORD)v12)
      {
        v19 = swift_dynamicCastClass();
        v24 = v36;
        if (!v19)
        {
          swift_unknownObjectRelease();
          v19 = MEMORY[0x1E0DEE9D8];
        }
        goto LABEL_17;
      }
      goto LABEL_27;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_unknownObjectRelease();
  }
  v19 = sub_1D610038C(v6, (uint64_t)v9, (uint64_t)v12, v7);
  v24 = v36;
LABEL_17:
  swift_unknownObjectRelease();
  v29 = (uint64_t)v35;
  v30 = v41;
  sub_1D68A75D4(v19, (uint64_t)v35);
  swift_release();
  v31 = sub_1D68A7960(v30, v29);
  if (!v24)
    v19 = v31;
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v29, v38);
  return v19;
}

uint64_t sub_1D68A7534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

int64_t sub_1D68A7578(unint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for PuzzleArchiveTagFeedGroupEmitter() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1D68A70F4(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1D68A75D4@<X0>(unint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D5E847C4(0, &qword_1ED605250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - v5;
  v7 = sub_1D6E25AFC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5E847C4(0, &qword_1ED5F4E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F978], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D6E25C40() - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1D6E32F90;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1D6E28040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v13)
  {
    v23 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    sub_1D6473000(v23);
    sub_1D6473114(v23);
    sub_1D6473238(v23);
    sub_1D6E25C34();
    v24 = sub_1D6E212F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 1, 1, v24);
    sub_1D6CFC87C(v23);
    sub_1D6CFC87C(v23);
    sub_1D6CFC9A0(v23);
    sub_1D6CFC9AC(v23);
    sub_1D6CFCACC(v23);
    sub_1D6CFCAD8(v23);
    return sub_1D6E24890();
  }
  v30 = MEMORY[0x1E0DEE9D8];
  result = sub_1D62275AC(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v29 = v13;
    v25 = v12;
    v26 = v6;
    v27 = a2;
    v15 = 0;
    v16 = v30;
    v17 = a1 & 0xC000000000000001;
    v18 = *MEMORY[0x1E0D5F7C0];
    v19 = a1;
    do
    {
      if (v17)
        v20 = MEMORY[0x1D8290720](v15, a1);
      else
        v20 = swift_unknownObjectRetain();
      *v10 = v20;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 104))(v10, v18, v7);
      v30 = v16;
      v22 = *(_QWORD *)(v16 + 16);
      v21 = *(_QWORD *)(v16 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1D62275AC(v21 > 1, v22 + 1, 1);
        v16 = v30;
      }
      ++v15;
      *(_QWORD *)(v16 + 16) = v22 + 1;
      (*(void (**)(unint64_t, uint64_t *, uint64_t))(v8 + 32))(v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v22, v10, v7);
      a1 = v19;
    }
    while (v29 != v15);
    v6 = v26;
    v23 = MEMORY[0x1E0DEE9D8];
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D68A7960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD v34[4];
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v40 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, &qword_1ED603D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v34[0] = (char *)v34 - v5;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED623980, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v3);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v34 - v7;
  sub_1D62E0870(0, (unint64_t *)&qword_1ED623060, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210], v3);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v34 - v10;
  v39 = sub_1D6E24F8C();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v35 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D6E2444C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PuzzleArchiveTagFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PuzzleArchiveTagFeedGroupEmitter() + 24));
  v21 = v20[3];
  v34[2] = v20[4];
  v34[3] = v21;
  v34[1] = __swift_project_boxed_opaque_existential_1(v20, v21);
  sub_1D68A6160();
  sub_1D6E21C08();
  v22 = &v19[*(int *)(v17 + 20)];
  v36 = v14;
  v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v38 = v13;
  v23(v16, v22, v13);
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 1, 1, v24);
  swift_retain();
  sub_1D6E22B80();
  v25 = *(id *)(v42 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  v26 = sub_1D6E256AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v8, 1, 1, v26);
  v41 = 33;
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED6239B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5F438]);
  swift_allocObject();
  v27 = v34[0];
  sub_1D6E2588C();
  sub_1D6E22B80();
  v28 = *(id *)(v42 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1D6E258BC();
  swift_allocObject();
  sub_1D6E258B0();
  v29 = sub_1D6E24D4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v27, 1, 1, v29);
  v30 = qword_1ED6241B8;
  (id)*MEMORY[0x1E0D58688];
  if (v30 != -1)
    swift_once();
  (id)qword_1ED698E28;
  v31 = v35;
  sub_1D6E24F68();
  v32 = sub_1D6E2498C();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v39);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v38);
  return v32;
}

uint64_t sub_1D68A7DEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  sub_1D5E84EF4(0, &qword_1ED6231C0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, sub_1D609D158, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B9F8]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - v3;
  v5 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D68A7F84(a1, (uint64_t)v7);
  sub_1D5E82ECC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TagFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1D60AEBE0();
  swift_allocObject();
  v8 = sub_1D6E1AC90();
  sub_1D609EC18((uint64_t)v7);
  return v8;
}

uint64_t sub_1D68A7F28(uint64_t a1)
{
  type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  return sub_1D68A7DEC(a1);
}

uint64_t sub_1D68A7F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v13[1] = a2;
  sub_1D5E847C4(0, &qword_1ED5F3850, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5AE10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v13 - v4;
  v6 = sub_1D6E22E98();
  v7 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1D6E24428();
  MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1D68A6160();
  sub_1D6E21BC0();
  sub_1D6E21BCC();
  sub_1D6E21BCC();
  type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  sub_1D6E22598();
  sub_1D6E22574();
  sub_1D6E225B0();
  v11 = sub_1D6E222BC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  sub_1D6E2192C();
  type metadata accessor for TagFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D68A81F4()
{
  type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  if (qword_1ED6241B8 != -1)
    swift_once();
  type metadata accessor for TagFeedGroup();
  sub_1D609D158();
  return sub_1D6E22C1C();
}

uint64_t sub_1D68A82AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_1D68A6160();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(v1 + 20);
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v3 + *(int *)(v1 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D68A83B4()
{
  type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  return sub_1D68A81F4();
}

void sub_1D68A840C(uint64_t a1)
{
  sub_1D5E847C4(a1, &qword_1EFFF4AE8, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
}

uint64_t SportsLinksTagFeedLink.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char v41;

  v34 = a2;
  sub_1D68A87A0();
  v36 = v3;
  v33 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v32 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v32 - v9;
  sub_1D68A8AA8(0, &qword_1ED6243F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v32 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68A87FC();
  v16 = v37;
  sub_1D6E2846C();
  if (v16)
  {
    v19 = (uint64_t)a1;
  }
  else
  {
    v37 = a1;
    v18 = v35;
    v17 = v36;
    v41 = 0;
    sub_1D68A8840();
    sub_1D6E28184();
    v21 = v13;
    v22 = v38;
    if ((_BYTE)v38)
    {
      v23 = v21;
      if (v38 == 1)
      {
        LOBYTE(v38) = 1;
        sub_1D68A8884();
        v24 = v8;
        v25 = v15;
        sub_1D6E28184();
        v26 = v34;
        sub_1D6E24104();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v17);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v12);
        v30 = v38;
        v31 = v39;
      }
      else
      {
        v40 = v38;
        LOBYTE(v38) = 1;
        sub_1D68A8884();
        v28 = v18;
        v29 = v15;
        sub_1D6E28184();
        v26 = v34;
        sub_1D6E24104();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v17);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v12);
        v30 = v38;
        v31 = v39;
        v22 = v40;
      }
    }
    else
    {
      v27 = v21;
      LOBYTE(v38) = 1;
      sub_1D68A8884();
      sub_1D6E28184();
      sub_1D6E24104();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v17);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v12);
      v30 = v38;
      v31 = v39;
      v26 = v34;
    }
    *(_QWORD *)v26 = v30;
    *(_QWORD *)(v26 + 8) = v31;
    *(_BYTE *)(v26 + 16) = v22;
    v19 = (uint64_t)v37;
  }
  return __swift_destroy_boxed_opaque_existential_1(v19);
}

void sub_1D68A87A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED623748)
  {
    v0 = sub_1D6E24110();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED623748);
  }
}

unint64_t sub_1D68A87FC()
{
  unint64_t result;

  result = qword_1ED613478;
  if (!qword_1ED613478)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B50C, &type metadata for SportsLinksTagFeedLink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED613478);
  }
  return result;
}

unint64_t sub_1D68A8840()
{
  unint64_t result;

  result = qword_1ED613498;
  if (!qword_1ED613498)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B4E4, &type metadata for SportsLinksTagFeedLink.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED613498);
  }
  return result;
}

unint64_t sub_1D68A8884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED623740;
  if (!qword_1ED623740)
  {
    sub_1D68A87A0();
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0D5D5E0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED623740);
  }
  return result;
}

uint64_t SportsLinksTagFeedLink.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  _QWORD v12[3];
  char v13;
  __int16 v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;

  sub_1D68A8AA8(0, &qword_1EFFF4B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v9 = *v1;
  v12[1] = v1[1];
  v12[2] = v9;
  v10 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D68A87FC();
  sub_1D6E28478();
  if (v10)
  {
    if (v10 == 1)
    {
      v17 = 1;
      v16 = 0;
      sub_1D68A8B04();
      sub_1D6E28238();
      if (!v2)
      {
        v15 = 1;
LABEL_9:
        sub_1D6E28208();
      }
    }
    else
    {
      v20 = 2;
      v19 = 0;
      sub_1D68A8B04();
      sub_1D6E28238();
      if (!v2)
      {
        v18 = 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    v14 = 0;
    sub_1D68A8B04();
    sub_1D6E28238();
    if (!v2)
    {
      v13 = 1;
      goto LABEL_9;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1D68A8AA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D68A87FC();
    v7 = a3(a1, &type metadata for SportsLinksTagFeedLink.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D68A8B04()
{
  unint64_t result;

  result = qword_1EFFF4B08;
  if (!qword_1EFFF4B08)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B4BC, &type metadata for SportsLinksTagFeedLink.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EFFF4B08);
  }
  return result;
}

uint64_t sub_1D68A8B48@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D6E280D0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1D68A8BA4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D6E280D0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1D68A8C04()
{
  sub_1D68A87FC();
  return sub_1D6E28538();
}

uint64_t sub_1D68A8C2C()
{
  sub_1D68A87FC();
  return sub_1D6E28544();
}

uint64_t sub_1D68A8C54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D658EE44(*a1, *a2);
}

uint64_t sub_1D68A8C60()
{
  sub_1D6E28400();
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

uint64_t sub_1D68A8D00()
{
  sub_1D6E26A44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D68A8D7C()
{
  sub_1D6E28400();
  sub_1D6E26A44();
  swift_bridgeObjectRelease();
  return sub_1D6E28430();
}

uint64_t sub_1D68A8E18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D68A92A8();
  *a1 = result;
  return result;
}

void sub_1D68A8E44(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE900000000000073;
  v5 = 0x676E69646E617473;
  if (v2 != 1)
  {
    v5 = 0x7374656B63617262;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7365726F6373;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D68A8EA4()
{
  sub_1D68A9264();
  return sub_1D6E26D44();
}

uint64_t sub_1D68A8F00()
{
  sub_1D68A9264();
  return sub_1D6E26D08();
}

uint64_t sub_1D68A8F4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsLinksTagFeedLink.init(from:)(a1, a2);
}

uint64_t sub_1D68A8F60(_QWORD *a1)
{
  return SportsLinksTagFeedLink.encode(to:)(a1);
}

BOOL static SportsLinksTagFeedLink.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a2 + 16) == *(unsigned __int8 *)(a1 + 16);
}

BOOL sub_1D68A8F88(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a2 + 16) == *(unsigned __int8 *)(a1 + 16);
}

ValueMetadata *type metadata accessor for SportsLinksTagFeedLink()
{
  return &type metadata for SportsLinksTagFeedLink;
}

uint64_t storeEnumTagSinglePayload for SportsLinksTagFeedLink.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D68A8FF8 + 4 * byte_1D6E9B265[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D68A902C + 4 * byte_1D6E9B260[v4]))();
}

uint64_t sub_1D68A902C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68A9034(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D68A903CLL);
  return result;
}

uint64_t sub_1D68A9048(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D68A9050);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D68A9054(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68A905C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsLinksTagFeedLink.CodingType()
{
  return &type metadata for SportsLinksTagFeedLink.CodingType;
}

uint64_t storeEnumTagSinglePayload for SportsLinksTagFeedLink.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D68A90C4 + 4 * byte_1D6E9B26F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D68A90F8 + 4 * byte_1D6E9B26A[v4]))();
}

uint64_t sub_1D68A90F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68A9100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D68A9108);
  return result;
}

uint64_t sub_1D68A9114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D68A911CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D68A9120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68A9128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsLinksTagFeedLink.CodingKeys()
{
  return &type metadata for SportsLinksTagFeedLink.CodingKeys;
}

unint64_t sub_1D68A9148()
{
  unint64_t result;

  result = qword_1EFFF4B10;
  if (!qword_1EFFF4B10)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B3F4, &type metadata for SportsLinksTagFeedLink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFFF4B10);
  }
  return result;
}

unint64_t sub_1D68A9190()
{
  unint64_t result;

  result = qword_1EFFF4B18;
  if (!qword_1EFFF4B18)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B494, &type metadata for SportsLinksTagFeedLink.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EFFF4B18);
  }
  return result;
}

unint64_t sub_1D68A91D8()
{
  unint64_t result;

  result = qword_1ED613488;
  if (!qword_1ED613488)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B32C, &type metadata for SportsLinksTagFeedLink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED613488);
  }
  return result;
}

unint64_t sub_1D68A9220()
{
  unint64_t result;

  result = qword_1ED613480;
  if (!qword_1ED613480)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B354, &type metadata for SportsLinksTagFeedLink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED613480);
  }
  return result;
}

unint64_t sub_1D68A9264()
{
  unint64_t result;

  result = qword_1ED613490;
  if (!qword_1ED613490)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B41C, &type metadata for SportsLinksTagFeedLink.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED613490);
  }
  return result;
}

uint64_t sub_1D68A92A8()
{
  unint64_t v0;

  v0 = sub_1D6E280D0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1D68A92F0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, _QWORD, uint64_t);
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for SportsFavoritesTagFeedGroupEmitter();
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  v0 = sub_1D6E2255C();
  v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B518];
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1D62E0870(0, (unint64_t *)&qword_1ED624A20, (unint64_t *)&unk_1ED623110, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B518], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED623110, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, v1);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D6E334D0;
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED623400, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5C200]);
  swift_allocObject();
  *(_QWORD *)(v8 + v7) = sub_1D6E2324C();
  v9 = *(void (**)(unint64_t, _QWORD, uint64_t))(v5 + 104);
  v9(v8 + v7, *MEMORY[0x1E0D5B508], v4);
  v10 = (uint64_t *)(v8 + v7 + v6);
  sub_1D5E847C4(0, &qword_1ED605680, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5CB58], v2);
  v11 = sub_1D6E237A4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1D6E32F90;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x1E0D5CB50], v11);
  v15 = sub_1D666F64C(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *v10 = v15;
  v9((unint64_t)v10, *MEMORY[0x1E0D5B4B8], v4);
  sub_1D6686B78(v8);
  return v0;
}

uint64_t sub_1D68A95A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for SportsFavoritesTagFeedGroupEmitter();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = v2;
  v17 = a1;
  sub_1D6E2198C();
  sub_1D6E1AE1C();
  sub_1D5E82ECC(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SportsFavoritesTagFeedGroupEmitter);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  sub_1D68AAC00((uint64_t)v7, v9 + v8);
  v10 = (void *)sub_1D6E1AB4C();
  sub_1D5E84EF4(0, &qword_1ED6231C0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, sub_1D609D158, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B9F8]);
  sub_1D6E1AC18();
  swift_release();
  swift_release();

  sub_1D5E82ECC(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SportsFavoritesTagFeedGroupEmitter);
  v11 = swift_allocObject();
  sub_1D68AAC00((uint64_t)v7, v11 + v8);
  v12 = (void *)sub_1D6E1AB4C();
  v13 = sub_1D6E1ACCC();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1D68A9764(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v55 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D5E847C4(0, &qword_1ED603D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v59 = (char *)&v52 - v5;
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED623980, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v3);
  MEMORY[0x1E0C80A78](v6);
  v54 = (char *)&v52 - v7;
  sub_1D62E0870(0, (unint64_t *)&qword_1ED623060, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210], v3);
  MEMORY[0x1E0C80A78](v8);
  v53 = (char *)&v52 - v9;
  v10 = sub_1D6E24F8C();
  v67 = *(_QWORD *)(v10 - 8);
  v68 = v10;
  MEMORY[0x1E0C80A78](v10);
  v66 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5FAF400(0);
  MEMORY[0x1E0C80A78](v12);
  v70 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D6E22E98();
  v64 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v69 = (uint64_t)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v52 - v17;
  v19 = sub_1D6E2444C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SportsFavoritesTagFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for SportsFavoritesTagFeedGroupEmitter();
  v27 = (_QWORD *)(a1 + *(int *)(v26 + 24));
  v28 = v27[3];
  v56 = v27[4];
  v57 = v28;
  v58 = __swift_project_boxed_opaque_existential_1(v27, v28);
  sub_1D68AA264();
  sub_1D6E21C08();
  v29 = &v25[*(int *)(v23 + 20)];
  v60 = v22;
  v61 = v20;
  v30 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v62 = v19;
  v30(v22, v29, v19);
  v63 = v18;
  sub_1D6E21BCC();
  sub_1D6E21BCC();
  v31 = sub_1D6E222BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v70, 1, 1, v31);
  v32 = a1 + *(int *)(v26 + 20);
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  v34 = v33;
  v35 = *(_QWORD *)(v33 - 8);
  v36 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v53, v32, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
  swift_retain();
  sub_1D6E22B80();
  v37 = *(id *)(v72 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  v38 = sub_1D6E256AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v54, 1, 1, v38);
  LOBYTE(v71) = 12;
  sub_1D5E84EF4(0, (unint64_t *)&unk_1ED6239B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5F438]);
  swift_allocObject();
  v39 = v59;
  sub_1D6E2588C();
  sub_1D6E22B80();
  sub_1D6292ABC();
  swift_release();
  sub_1D6E22B80();
  v40 = *(id *)(v71 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1D6E258BC();
  swift_allocObject();
  sub_1D6E258B0();
  v41 = sub_1D6E24D4C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v39, 1, 1, v41);
  v42 = qword_1ED6241B8;
  (id)*MEMORY[0x1E0D58688];
  if (v42 != -1)
    swift_once();
  (id)qword_1ED698E28;
  v43 = (uint64_t)v66;
  sub_1D6E24F68();
  v44 = (uint64_t)v60;
  v45 = (uint64_t)v63;
  v46 = v69;
  v47 = v70;
  v48 = sub_1D6472894((uint64_t)v60, 1936154996, 0xE400000000000000, (uint64_t)v63, v69, MEMORY[0x1E0DEE9D8], v70, v43, v57, v56);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v43, v68);
  sub_1D5E8D20C(v47, (uint64_t (*)(_QWORD))sub_1D5FAF400);
  v49 = v65;
  v50 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
  v50(v46, v65);
  v50(v45, v49);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v44, v62);
  return v48;
}

uint64_t sub_1D68A9D78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  sub_1D5E84EF4(0, &qword_1ED6231C0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, sub_1D609D158, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B9F8]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - v3;
  v5 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D6E2198C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a1, v8);
  swift_storeEnumTagMultiPayload();
  sub_1D5E82ECC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TagFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1D60AEBE0();
  swift_allocObject();
  v9 = sub_1D6E1AC90();
  sub_1D5E8D20C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TagFeedGroup);
  return v9;
}

uint64_t sub_1D68A9ED0()
{
  type metadata accessor for SportsFavoritesTagFeedGroupEmitter();
  if (qword_1ED6241B8 != -1)
    swift_once();
  type metadata accessor for TagFeedGroup();
  sub_1D609D158();
  return sub_1D6E22C1C();
}

uint64_t sub_1D68A9F88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1D68AA264();
  v4 = v3;
  v5 = swift_allocBox();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5 | 0x2000000000000006;
  return result;
}

uint64_t sub_1D68A9FE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;

  v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  a2[4] = sub_1D5E6D8C0(&qword_1ED61D4D0, (uint64_t (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupKnobs, (uint64_t)&unk_1D6EDE4DC);
  a2[5] = sub_1D5E6D8C0(&qword_1EFFF4B20, (uint64_t (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupKnobs, (uint64_t)&unk_1D6EDE4B4);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1D5E82ECC(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for SportsFavoritesTagFeedGroupKnobs);
}

uint64_t sub_1D68AA080()
{
  sub_1D68AA264();
  return sub_1D6E21BB4();
}

uint64_t sub_1D68AA098@<X0>(uint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4E50, (uint64_t (*)(uint64_t))sub_1D5FADACC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D6E32F90;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1D68AA264();
  swift_bridgeObjectRetain();
  v3 = sub_1D6E21BB4();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  sub_1D5F77E70(inited);
  sub_1D68AA308(0);
  a1[3] = v5;
  a1[4] = sub_1D5E6D8C0(&qword_1ED60C0E0, (uint64_t (*)(uint64_t))sub_1D68AA308, MEMORY[0x1E0DB3C80]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1D6E1A330();
}

uint64_t sub_1D68AA1BC()
{
  sub_1D5E6D8C0(&qword_1ED61E998, (uint64_t (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupEmitter, (uint64_t)&unk_1D6E9B588);
  return sub_1D6E1A324();
}

uint64_t sub_1D68AA1FC()
{
  return sub_1D5E6D8C0(&qword_1ED61E9A0, (uint64_t (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupEmitter, (uint64_t)&unk_1D6E9B560);
}

uint64_t type metadata accessor for SportsFavoritesTagFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1ED61E9A8;
  if (!qword_1ED61E9A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D68AA264()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED622EA0)
  {
    type metadata accessor for SportsFavoritesTagFeedGroupConfigData();
    sub_1D5E6D8C0(&qword_1ED620E48, (uint64_t (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupConfigData, (uint64_t)&unk_1D6E97BD8);
    sub_1D5E6D8C0(&qword_1ED620E40, (uint64_t (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupConfigData, (uint64_t)&unk_1D6E97BB0);
    v0 = sub_1D6E21C68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED622EA0);
  }
}

void sub_1D68AA308(uint64_t a1)
{
  sub_1D5E847C4(a1, (unint64_t *)&unk_1ED60C0E8, (uint64_t (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
}

uint64_t *sub_1D68AA324(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D68AA264();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
    *(_QWORD *)&v9[*(int *)(v12 + 20)] = *(_QWORD *)&v10[*(int *)(v12 + 20)];
    *(_QWORD *)&v9[*(int *)(v12 + 24)] = *(_QWORD *)&v10[*(int *)(v12 + 24)];
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v16;
    v17 = v16;
    v18 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_retain();
    swift_retain();
    v18(v14, v15, v17);
    v19 = a3[7];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1D68AA474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D68AA264();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D68AA538(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  sub_1D68AA264();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  v16 = v15;
  v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  swift_retain();
  v17(v13, v14, v16);
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D68AA65C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  sub_1D68AA264();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D68AA788(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  sub_1D68AA264();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_1D68AA870(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D68AA264();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5E84EF4(0, (unint64_t *)&qword_1ED6064B0, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1D5FC1484, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  swift_release();
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  swift_release();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D68AA988()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68AA994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_1D68AA264();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1D68AAA40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D68AAA4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_1D68AA264();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

void sub_1D68AAAF4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D68AA264();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1D68AAB8C()
{
  return sub_1D5E6D8C0(&qword_1ED61E990, (uint64_t (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupEmitter, (uint64_t)&unk_1D6E9B618);
}

uint64_t sub_1D68AABB8()
{
  return sub_1D5E6D8C0(&qword_1ED61E998, (uint64_t (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupEmitter, (uint64_t)&unk_1D6E9B588);
}

uint64_t sub_1D68AABE4()
{
  uint64_t v0;

  return sub_1D68A9764(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D68AAC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsFavoritesTagFeedGroupEmitter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D68AAC44(uint64_t a1)
{
  type metadata accessor for SportsFavoritesTagFeedGroupEmitter();
  return sub_1D68A9D78(a1);
}

uint64_t sub_1D68AAC90()
{
  type metadata accessor for SportsFavoritesTagFeedGroupEmitter();
  return sub_1D68A9ED0();
}

uint64_t destroy for ChannelPickerUpdateBlueprintModifier()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ChannelPickerUpdateBlueprintModifier(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ChannelPickerUpdateBlueprintModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v5;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ChannelPickerUpdateBlueprintModifier(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ChannelPickerUpdateBlueprintModifier()
{
  return &type metadata for ChannelPickerUpdateBlueprintModifier;
}

uint64_t sub_1D68AAE50(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *);
  _BYTE v31[8];

  v29 = a3;
  v30 = a2;
  v23[1] = a1;
  v26 = sub_1D6E1D7E0();
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D61F7BE4(0, &qword_1EFFDCCD8, MEMORY[0x1E0DB9A28]);
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v23 - v9;
  sub_1D61FB658();
  MEMORY[0x1E0C80A78](v11);
  sub_1D61F7BE4(0, (unint64_t *)&qword_1EFFD5AD0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v24 = *(_QWORD *)(v12 - 8);
  v25 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v23 - v13;
  sub_1D68ABE48((uint64_t)(v3 + 4), (uint64_t)v31);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1D60650B0((uint64_t)v31);
  v15 = sub_1D68AC554(a1, v3);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1D6058F18((uint64_t)v31);
  v16 = MEMORY[0x1E0DB7B60];
  sub_1D61F7BE4(0, (unint64_t *)&qword_1EFFD5AA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v18 = v17;
  v19 = sub_1D61FB71C(&qword_1EFFDCCE8, (unint64_t *)&qword_1EFFD5AA0, (uint64_t (*)(uint64_t, _QWORD *))v16, MEMORY[0x1E0DB7B88]);
  v20 = sub_1D61FB71C(&qword_1EFFDCCF0, (unint64_t *)&qword_1EFFD5AA0, (uint64_t (*)(uint64_t, _QWORD *))v16, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1D8282BD8](v15, v18, v19, v20);
  type metadata accessor for ChannelPickerElementModel();
  sub_1D5FE63B8();
  sub_1D5E6D8C0((unint64_t *)&unk_1EFFD5AB0, (uint64_t (*)(uint64_t))type metadata accessor for ChannelPickerElementModel, (uint64_t)&protocol conformance descriptor for ChannelPickerElementModel);
  sub_1D6E209FC();
  v21 = v26;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB7FB8], v26);
  sub_1D6E1E944();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  v30(v10);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v25);
}

uint64_t sub_1D68AB158(void (*a1)(char *), uint64_t *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[344];
  uint64_t v16;
  _BYTE v17[344];
  _BYTE v18[344];
  _BYTE v19[8];

  sub_1D61FBFB8();
  MEMORY[0x1E0C80A78](v4);
  sub_1D61F7BE4(0, (unint64_t *)&qword_1EFFD5AA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1D6E1D474();
  sub_1D601D540(&v16, v17);
  sub_1D601D540(v17, v18);
  if (sub_1D601D444((uint64_t)v18) == 1)
  {
    v5 = (char *)&loc_1D68AB230 + 4 * byte_1D6E9B6D0[*(unsigned __int8 *)(sub_1D601D450((uint64_t)v18) + 33)];
    __asm { BR              X10 }
  }
  sub_1D601D450((uint64_t)v18);
  sub_1D64D19D4((uint64_t)v17);
  sub_1D6E1D474();
  sub_1D601D540(&v14, v15);
  sub_1D601D540(v15, &v13);
  v6 = *a2;
  sub_1D68ABE48((uint64_t)(a2 + 4), (uint64_t)v19);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1D60650B0((uint64_t)v19);
  v7 = sub_1D68ABEC0(a1, v6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1D6058F18((uint64_t)v19);
  sub_1D6105B90();
  v9 = v8;
  v10 = sub_1D5E6D8C0(&qword_1EFFDCD00, (uint64_t (*)(uint64_t))sub_1D6105B90, MEMORY[0x1E0DB6F08]);
  v11 = sub_1D5E6D8C0(&qword_1EFFDCD08, (uint64_t (*)(uint64_t))sub_1D6105B90, MEMORY[0x1E0DB6EF8]);
  MEMORY[0x1D8282BD8](v7, v9, v10, v11);
  type metadata accessor for ChannelPickerElementModel();
  sub_1D5FE63B8();
  sub_1D5E6D8C0((unint64_t *)&unk_1EFFD5AB0, (uint64_t (*)(uint64_t))type metadata accessor for ChannelPickerElementModel, (uint64_t)&protocol conformance descriptor for ChannelPickerElementModel);
  return sub_1D6E1D468();
}

uint64_t sub_1D68AB54C@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[3];
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[368];

  v4 = v3;
  sub_1D61FBFB8();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6105B90();
  v42 = *(_QWORD *)(v11 - 8);
  v43 = v11;
  MEMORY[0x1E0C80A78](v11);
  v44 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ChannelPickerElementModel();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v41 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (unint64_t)v37 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v37 - v20;
  v22 = *(_QWORD *)(a2 + 72);
  if (*(_BYTE *)(a2 + 80))
    v22 = 0;
  if (!*(_BYTE *)(a2 + 96))
    v22 = *(_QWORD *)(a2 + 88);
  if (*(_BYTE *)(a2 + 112))
    v23 = 0;
  else
    v23 = *(_QWORD *)(a2 + 104);
  if ((unsigned __int128)(v22 * (__int128)v23) >> 64 != (v22 * v23) >> 63)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v38 = v22 * v23;
  v39 = v10;
  v37[2] = a3;
  v24 = *v4;
  v40 = v4;
  v25 = v4[4];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v45 = sub_1D68ABEC0(a1, v24);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v25 && *(_QWORD *)(v25 + 16))
  {
    v26 = v25 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v46 = *(_QWORD *)(v14 + 72);
    v37[0] = v25;
    swift_bridgeObjectRetain();
    v37[1] = v13;
    sub_1D600EFD8(v26, (uint64_t)v21);
    sub_1D600EFD8((uint64_t)v21, v19);
    v27 = (char *)&loc_1D68AB7A8 + dword_1D68ABB64[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  sub_1D61F7BE4(0, (unint64_t *)&qword_1EFFD5AA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1D6E1D474();
  sub_1D601D540(&v48, v49);
  sub_1D601D540(v49, &v47);
  a1 = (void (*)(char *))sub_1D60FDB78(v38, v45);
  a2 = v28;
  a3 = v29;
  v19 = v30;
  if ((v30 & 1) == 0)
    goto LABEL_13;
  sub_1D6E282F8();
  swift_unknownObjectRetain_n();
  v32 = swift_dynamicCastClass();
  if (!v32)
  {
    swift_unknownObjectRelease();
    v32 = MEMORY[0x1E0DEE9D8];
  }
  v33 = *(_QWORD *)(v32 + 16);
  swift_release();
  if (__OFSUB__(v19 >> 1, a3))
    goto LABEL_22;
  if (v33 != (v19 >> 1) - a3)
  {
LABEL_23:
    swift_unknownObjectRelease();
LABEL_13:
    v31 = sub_1D61003A0((uint64_t)a1, a2, a3, v19);
    goto LABEL_20;
  }
  v31 = swift_dynamicCastClass();
  if (!v31)
  {
    swift_unknownObjectRelease();
    v31 = MEMORY[0x1E0DEE9D8];
  }
LABEL_20:
  swift_unknownObjectRelease();
  v34 = sub_1D5E6D8C0(&qword_1EFFDCD00, (uint64_t (*)(uint64_t))sub_1D6105B90, MEMORY[0x1E0DB6F08]);
  v35 = sub_1D5E6D8C0(&qword_1EFFDCD08, (uint64_t (*)(uint64_t))sub_1D6105B90, MEMORY[0x1E0DB6EF8]);
  MEMORY[0x1D8282BD8](v31, v43, v34, v35);
  sub_1D5FE63B8();
  sub_1D5E6D8C0((unint64_t *)&unk_1EFFD5AB0, (uint64_t (*)(uint64_t))type metadata accessor for ChannelPickerElementModel, (uint64_t)&protocol conformance descriptor for ChannelPickerElementModel);
  return sub_1D6E1D468();
}

uint64_t sub_1D68ABB74()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v12;

  v0 = type metadata accessor for ChannelPickerElementModel();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6105B90();
  sub_1D6E1CD60();
  ChannelPickerElementModel.identifier.getter();
  v4 = v3;
  v6 = v5;
  sub_1D5E8D20C((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for ChannelPickerElementModel);
  ChannelPickerElementModel.identifier.getter();
  if (v4 == v8 && v6 == v7)
    v10 = 1;
  else
    v10 = sub_1D6E282C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_1D68ABC74@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1[3];
  v5 = __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = sub_1D6E19EF8();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  v12 = sub_1D64055B4(v9, v11, 0);
  swift_bridgeObjectRelease();
  if (v12)
  {
    v16 = type metadata accessor for TagModel();
    v17 = sub_1D5E6D8C0(&qword_1EFFEC500, (uint64_t (*)(uint64_t))type metadata accessor for TagModel, (uint64_t)&unk_1D6E978A0);
    *(_QWORD *)&v15 = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1D5E8D7A0(&v15, (uint64_t)a1);
  }
  return sub_1D61FC190((uint64_t)a1, a2);
}

uint64_t sub_1D68ABDA0(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  return sub_1D68AAE50(a1, a2, a3);
}

uint64_t sub_1D68ABDD8()
{
  sub_1D68AC7F4();
  return sub_1D6E1E164();
}

unint64_t sub_1D68ABE04()
{
  unint64_t result;

  result = qword_1EFFF4B28;
  if (!qword_1EFFF4B28)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B708, &type metadata for ChannelPickerUpdateBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EFFF4B28);
  }
  return result;
}

uint64_t sub_1D68ABE48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5E847C4(0, &qword_1EFFF4B30, (uint64_t (*)(uint64_t))sub_1D68ABEA4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D68ABEA4(uint64_t a1)
{
  sub_1D5E847C4(a1, &qword_1EFFE1588, (uint64_t (*)(uint64_t))type metadata accessor for ChannelPickerElementModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1D68ABEC0(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  void (*v32)(uint64_t *, _QWORD);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[7];
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *);
  char *v51;
  uint64_t v52;
  uint64_t v53[22];
  uint64_t v54;

  v39[2] = a2;
  v50 = a1;
  v48 = type metadata accessor for ChannelPickerElementModel();
  v2 = MEMORY[0x1E0C80A78](v48);
  v39[1] = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v51 = (char *)v39 - v4;
  sub_1D61FC05C(0);
  MEMORY[0x1E0C80A78](v5);
  v47 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6105B90();
  v52 = v7;
  v41 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v44 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v39[3] = (char *)v39 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v39 - v13;
  MEMORY[0x1E0C80A78](v12);
  v45 = (char *)v39 - v15;
  sub_1D61F7BE4(0, (unint64_t *)&qword_1EFFD5AA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v39 - v19;
  sub_1D61FC078();
  v22 = v21;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v18;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v25(v20, (uint64_t)v50, v17);
  sub_1D61FB71C((unint64_t *)&unk_1EFFD6CA0, (unint64_t *)&qword_1EFFD5AA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B90]);
  v42 = v20;
  sub_1D6E26BA0();
  v26 = &v24[*(int *)(v22 + 36)];
  v27 = sub_1D61FB71C(&qword_1EFFD5AF0, (unint64_t *)&qword_1EFFD5AA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B98]);
  v28 = *(_QWORD *)v26;
  v46 = v24;
  v54 = v17;
  sub_1D6E270F8();
  if (v28 != v53[0])
  {
    v40 = v25;
    v49 = MEMORY[0x1E0DEE9D8];
    v31 = v45;
    v30 = (uint64_t)v46;
    v39[5] = v26;
    v39[6] = v14;
    v39[4] = v27;
    v32 = (void (*)(uint64_t *, _QWORD))sub_1D6E27134();
    v33 = v41;
    v50 = *(void (**)(char *))(v41 + 16);
    v50(v31);
    v32(v53, 0);
    v34 = v42;
    v35 = v54;
    v40(v42, v30, v54);
    sub_1D6E27104();
    v36 = v35;
    v37 = v52;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v36);
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v14, v31, v37);
    sub_1D6E1CD60();
    v38 = (char *)sub_1D68AC2E4 + 4 * byte_1D6E9B6D5[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  v49 = MEMORY[0x1E0DEE9D8];
  sub_1D5E8D20C((uint64_t)v46, (uint64_t (*)(_QWORD))sub_1D61FC078);
  return v49;
}

void sub_1D68AC2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(unint64_t, uint64_t, uint64_t);
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  sub_1D5E8D20C(*(_QWORD *)(v0 + 144), (uint64_t (*)(_QWORD))type metadata accessor for ChannelPickerElementModel);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136))(v1, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v1, 0, 1, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v5) != 1)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v4(v6, v1, v5);
    v4(*(_QWORD *)(v0 + 88), v6, v5);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      *(_QWORD *)(v0 + 128) = sub_1D6240DD8(0, *(_QWORD *)(*(_QWORD *)(v0 + 128) + 16) + 1, 1, *(_QWORD *)(v0 + 128));
    v7 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v7 + 16);
    v8 = *(_QWORD *)(v7 + 24);
    if (v9 >= v8 >> 1)
      *(_QWORD *)(v0 + 128) = sub_1D6240DD8(v8 > 1, v9 + 1, 1, *(_QWORD *)(v0 + 128));
    v10 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v10 + 16) = v9 + 1;
    v4(v10+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v9, *(_QWORD *)(v0 + 88), v5);
    JUMPOUT(0x1D68AC1D0);
  }
  JUMPOUT(0x1D68AC1C0);
}

uint64_t sub_1D68AC554(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *);
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void (*v20)(_BYTE *, _QWORD);
  unint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[32];
  uint64_t v28;

  v3 = v2;
  v24 = a2;
  sub_1D61F7BE4(0, (unint64_t *)&qword_1EFFD5AA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (void (*)(char *))((char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v23 - v11;
  v13 = MEMORY[0x1E0DBC790];
  sub_1D61F7BE4(0, (unint64_t *)&qword_1EFFD5AD0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v15 = v14;
  v25 = sub_1D61FB71C(&qword_1EFFE2120, (unint64_t *)&qword_1EFFD5AD0, (uint64_t (*)(uint64_t, _QWORD *))v13, MEMORY[0x1E0DBC7C8]);
  v26 = v15;
  v16 = sub_1D6E270D4();
  v17 = MEMORY[0x1E0DEE9D8];
  if (!v16)
    return v17;
  v18 = v16;
  v28 = MEMORY[0x1E0DEE9D8];
  sub_1D6227954(0, v16 & ~(v16 >> 63), 0);
  result = sub_1D6E27098();
  if ((v18 & 0x8000000000000000) == 0)
  {
    v23[0] = v12;
    v23[1] = a1;
    while (1)
    {
      v20 = (void (*)(_BYTE *, _QWORD))sub_1D6E27134();
      (*(void (**)(_QWORD))(v7 + 16))(v10);
      v20(v27, 0);
      sub_1D68AB158(v10, v24);
      if (v3)
        break;
      v3 = 0;
      (*(void (**)(void (*)(char *), uint64_t))(v7 + 8))(v10, v6);
      v17 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D6227954(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v28;
      }
      v22 = *(_QWORD *)(v17 + 16);
      v21 = *(_QWORD *)(v17 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1D6227954(v21 > 1, v22 + 1, 1);
        v17 = v28;
      }
      *(_QWORD *)(v17 + 16) = v22 + 1;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v7 + 32))(v17+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v22, v23[0], v6);
      v28 = v17;
      sub_1D6E27104();
      if (!--v18)
        return v17;
    }
    (*(void (**)(void (*)(char *), uint64_t))(v7 + 8))(v10, v6);
    swift_release();
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D68AC7D8()
{
  return sub_1D68ABB74() & 1;
}

unint64_t sub_1D68AC7F4()
{
  unint64_t result;

  result = qword_1EFFF4B38;
  if (!qword_1EFFF4B38)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B730, &type metadata for ChannelPickerUpdateBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EFFF4B38);
  }
  return result;
}

ValueMetadata *type metadata accessor for TagFeedPrewarmResult()
{
  return &type metadata for TagFeedPrewarmResult;
}

uint64_t sub_1D68AC848(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _BYTE *v4;

  if (*(_QWORD *)(a1 + 16))
  {
    MEMORY[0x1E0C80A78](a1);
    sub_1D68ACA18();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1D6E1AE1C();
    v1 = (void *)sub_1D6E1AB4C();
    type metadata accessor for TagFeedServiceConfig();
    v2 = sub_1D6E1AC24();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    return v2;
  }
  else
  {
    sub_1D68ACA78();
    swift_allocError();
    *v4 = 0;
    sub_1D65163DC();
    swift_allocObject();
    return sub_1D6E1AC78();
  }
}

uint64_t sub_1D68AC98C()
{
  uint64_t v0;

  type metadata accessor for TagFeedServiceConfig();
  sub_1D5FC1484();
  sub_1D6E22DCC();
  v0 = sub_1D6E22460();
  swift_release();
  return v0;
}

uint64_t sub_1D68AC9FC()
{
  return sub_1D68AC98C();
}

void sub_1D68ACA18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6064D0)
  {
    type metadata accessor for TagFeedServiceConfig();
    sub_1D5FC1484();
    v0 = sub_1D6E23A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6064D0);
  }
}

unint64_t sub_1D68ACA78()
{
  unint64_t result;

  result = qword_1EFFF4B40;
  if (!qword_1EFFF4B40)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B824, &type metadata for TagFeedPrewarmResult.Errors);
    atomic_store(result, (unint64_t *)&qword_1EFFF4B40);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TagFeedPrewarmResult.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D68ACB08 + 4 * byte_1D6E9B795[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D68ACB3C + 4 * byte_1D6E9B790[v4]))();
}

uint64_t sub_1D68ACB3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68ACB44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D68ACB4CLL);
  return result;
}

uint64_t sub_1D68ACB58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D68ACB60);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D68ACB64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D68ACB6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TagFeedPrewarmResult.Errors()
{
  return &type metadata for TagFeedPrewarmResult.Errors;
}

unint64_t sub_1D68ACB8C()
{
  unint64_t result;

  result = qword_1EFFF4B48;
  if (!qword_1EFFF4B48)
  {
    result = MEMORY[0x1D82917D0](&unk_1D6E9B7FC, &type metadata for TagFeedPrewarmResult.Errors);
    atomic_store(result, (unint64_t *)&qword_1EFFF4B48);
  }
  return result;
}

id static FCIssue.stub(identifier:type:title:publicationDate:isPaid:sourceChannel:notificationDescription:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void (*v40)(void);
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v47 = a2;
  v48 = a8;
  v51 = a7;
  v41 = a6;
  v46 = a5;
  v53 = a3;
  v54 = a4;
  v52 = a1;
  v49 = a9;
  v43 = a10;
  sub_1D5F8589C();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D6E15ECC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v50 = (uint64_t)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = *(void (**)(void))(v14 + 16);
  v40();
  v16 = objc_allocWithZone(MEMORY[0x1E0D58980]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45 = objc_msgSend(v16, sel_init);
  v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58980]), sel_init);
  v17 = (void *)objc_opt_self();
  v42 = objc_msgSend(v17, sel_blackColor);
  v39 = objc_msgSend(v17, sel_whiteColor);
  v18 = objc_msgSend(v17, sel_blackColor);
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58A48]), sel_initWithRed_green_blue_alpha_, 1.0, 0.0, 0.0, 1.0);
  v20 = objc_msgSend(v17, sel_blackColor);
  sub_1D5FA9EDC();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1D6E32F90;
  *(_QWORD *)(v21 + 32) = sub_1D6E26978();
  *(_QWORD *)(v21 + 40) = v22;
  v23 = v43;
  swift_bridgeObjectRetain();
  v24 = sub_1D6E1ABB8();
  v26 = v25;
  ((void (*)(char *, uint64_t, uint64_t))v40)(v12, v41, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v27 = objc_allocWithZone(MEMORY[0x1E0D58C20]);
  v28 = v48;
  v38 = v27;
  v37 = v26;
  v36 = v23;
  v35 = v21;
  v29 = v39;
  v30 = v42;
  v31 = v44;
  v32 = v45;
  v33 = sub_1D68ACF20(1.0, 1.0, v52, v47, v53, v54, v46, v50, 0x6964452062757453, 0xEC0000006E6F6974, (uint64_t)v45, (uint64_t)v44, (uint64_t)v42, (uint64_t)v39, (uint64_t)v18, (uint64_t)v19, 32123, 0xE200000000000000, (uint64_t)v20,
          0,
          v51,
          0,
          MEMORY[0x1E0DEE9D8],
          0,
          0xE000000000000000,
          v35,
          MEMORY[0x1E0DEE9D8],
          MEMORY[0x1E0DEE9D8],
          (uint64_t)v28,
          v49,
          v36,
          v24,
          v37,
          (uint64_t)v12,
          v38);

  return v33;
}

id sub_1D68ACF20(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35)
{
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  id v55;
  uint64_t v56;
  uint64_t v57;

  v53 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  v52 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  v51 = (void *)sub_1D6E15DE8();
  v50 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  v48 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  v49 = (void *)sub_1D6E26D68();
  swift_bridgeObjectRelease();
  v47 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  if (a26)
  {
    v38 = (void *)sub_1D6E26D68();
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = 0;
  }
  if (a27)
  {
    v46 = (void *)sub_1D6E26D68();
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = 0;
  }
  v39 = (void *)sub_1D6E26D68();
  swift_bridgeObjectRelease();
  v40 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  v41 = (void *)sub_1D6E26948();
  swift_bridgeObjectRelease();
  v42 = sub_1D6E15ECC();
  v56 = *(_QWORD *)(v42 - 8);
  v57 = v42;
  v43 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v56 + 48))(a34, 1) != 1)
  {
    v43 = (void *)sub_1D6E15DE8();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(a34, v57);
  }
  BYTE2(v45) = a21 & 1;
  LOWORD(v45) = a20 & 0x101;
  v55 = objc_msgSend(a35, sel_initWithIdentifier_type_title_publicationDate_coverDate_metadataJSONAssetHandle_coverImageAssetHandle_coverImageAspectRatio_coverImagePrimaryColor_coverImageBackgroundColor_coverImageTextColor_coverImageAccentColor_layeredCoverJSON_layeredCoverAspectRatio_layeredCoverPrimaryColor_isCurrent_isDraft_isPaid_minimumNewsVersion_allArticleIDs_coverArticleID_allowedStorefrontIDs_blockedStorefrontIDs_topicTagIDs_sourceChannel_notificationDescription_issueDescription_sortDate_, v53, a5, v52, v51, v50, a11, a1, a2, a12, a13, a14, a15, a16, v48, a19, v45, a22,
          v49,
          v47,
          v38,
          v46,
          v39,
          a29,
          v40,
          v41,
          v43);

  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(a8, v57);
  return v55;
}

id sub_1D68AD2CC(void *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  if ((objc_msgSend(a1, sel_isPuzzleHub) & 1) != 0)
  {
    v4 = a2[10];
    v5 = a2[11];
    __swift_project_boxed_opaque_existential_1(a2 + 7, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(1, 1, v4, v5);
    v6 = 0;
    sub_1D6E16C04();
  }
  else
  {
    v7 = (void *)a2[6];
    if ((objc_msgSend(v7, sel_hasSubscriptionToTag_, a1) & 1) != 0)
    {
      v12[0] = 0;
      if (objc_msgSend(v7, sel_setNotificationsEnabled_forTag_error_, 1, a1, v12))
      {
        v8 = v12[0];
        return 0;
      }
      else
      {
        v10 = v12[0];
        v6 = (id)sub_1D6E15A34();

        swift_willThrow();
      }
    }
    else
    {
      v12[0] = 0;
      objc_msgSend(v7, sel_addSubscriptionToTag_notificationsEnabled_error_, a1, 1, v12);
      v6 = v12[0];
      v9 = v12[0];
    }
  }
  return v6;
}

uint64_t sub_1D68AD430@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (objc_msgSend(a1, sel_isMySports))
  {
    v4 = (unsigned int *)MEMORY[0x1E0D5F6A8];
  }
  else
  {
    if (!objc_msgSend(a1, sel_isPuzzleHub))
    {
      v8 = objc_msgSend(a1, sel_identifier);
      v9 = sub_1D6E26978();
      v11 = v10;

      *a2 = v9;
      a2[1] = v11;
      v7 = (unsigned int *)MEMORY[0x1E0D5F6C8];
      goto LABEL_7;
    }
    v4 = (unsigned int *)MEMORY[0x1E0D5F6B0];
  }
  v5 = *v4;
  v6 = sub_1D6E25A84();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a2, v5, v6);
  v7 = (unsigned int *)MEMORY[0x1E0D5F6D0];
LABEL_7:
  v12 = *v7;
  v13 = sub_1D6E25A90();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(a2, v12, v13);
}

uint64_t sub_1D68AD518()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return v0;
}

uint64_t sub_1D68AD56C()
{
  sub_1D68AD518();
  return swift_deallocClassInstance();
}

unint64_t sub_1D68AD590()
{
  unint64_t result;

  result = qword_1EFFF4B58[0];
  if (!qword_1EFFF4B58[0])
  {
    result = MEMORY[0x1D82917D0](MEMORY[0x1E0D604E8], MEMORY[0x1E0D604F8]);
    atomic_store(result, qword_1EFFF4B58);
  }
  return result;
}

void sub_1D68AD5D4(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, char *a5)
{
  sub_1D68AD8C4(a1, a2, *a4, *a5);
}

uint64_t sub_1D68AD5FC@<X0>(void **a1@<X3>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1D68ADD4C(*a1);
  *a2 = result & 1;
  return result;
}

unint64_t sub_1D68AD62C(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return (unint64_t)sub_1D68ADE58(*a4) & 1;
}

uint64_t sub_1D68AD654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD v17[2];

  v0 = sub_1D6E195BC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D6E19418();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D6E1940C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0D55C38], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0D55E18], v0);
  sub_1D6E19400();
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F4AD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = sub_1D6E16940();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1D6E32F90;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104))(v15 + v14, *MEMORY[0x1E0CF8170], v12);
  sub_1D5E6D8C0(&qword_1EFFE2708, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55C20], MEMORY[0x1E0D55C10]);
  sub_1D6E168E0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1D6E193F4();
  sub_1D5E6D8C0(&qword_1EFFF1390, (uint64_t (*)(uint64_t))MEMORY[0x1E0D55C08], MEMORY[0x1E0D55C00]);
  memset(v17, 0, sizeof(v17));
  sub_1D6E168F8();
  return sub_1D5F117D8((uint64_t)v17);
}

void sub_1D68AD8C4(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  void *v36;
  _QWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;

  v5 = v4;
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5DCD70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D545D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v37 - v9;
  v11 = sub_1D6E25A90();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0)
  {
    sub_1D68AD430(a3, (_QWORD *)((char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0)));
    v21 = sub_1D638C720();
    v37[0] = v5[2];
    type metadata accessor for FollowingNotificationsPrewarm();
    v22 = swift_allocBox();
    v24 = v23;
    sub_1D607B5A8();
    v26 = (char *)v24 + *(int *)(v25 + 48);
    *v24 = v21;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v26, v14, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
    swift_storeEnumTagMultiPayload();
    v27 = v5[3];
    v28 = sub_1D6E1865C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 1, 1, v28);
    v41 = 0;
    memset(v40, 0, sizeof(v40));
    v39 = 0;
    memset(v38, 0, sizeof(v38));
    swift_retain();
    sub_1D6C618C4(v22 | 0x3000000000000004, v27, (uint64_t)v10, (uint64_t)v40, 0, 0, 0, 0, (uint64_t)v38);
    swift_release();
    sub_1D5E828E4((uint64_t)v38, &qword_1ED5E0920, (unint64_t *)&unk_1ED5E0910, MEMORY[0x1E0DB35B0]);
    sub_1D5E828E4((uint64_t)v40, (unint64_t *)&unk_1ED5DD090, (unint64_t *)&qword_1ED5E1AC0, MEMORY[0x1E0D53040]);
    sub_1D60A0360((uint64_t)v10);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else if ((objc_msgSend(a3, sel_isMySports) & 1) != 0)
  {
    v15 = (_QWORD *)(v5[4] + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_sportsOnboardingManager);
    v16 = v15[3];
    v17 = v15[4];
    __swift_project_boxed_opaque_existential_1(v15, v16);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17) == 1)
    {
      v18 = v5 + 7;
      v19 = v5[10];
      v20 = v5[11];
      __swift_project_boxed_opaque_existential_1(v18, v19);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 40))(1, v19, v20);
    }
    else
    {
      swift_getObjectType();
      sub_1D6E20660();
      sub_1D6E1D9CC();
      swift_release();
    }
  }
  else
  {
    v29 = sub_1D68AD2CC(a3, v5);
    if (v29)
    {
      v30 = v29;
      sub_1D5EE949C(0, (unint64_t *)&qword_1ED5F4EB0, (unint64_t *)&qword_1ED5F4EF0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1D6E334D0;
      *(_QWORD *)&v40[0] = 0;
      *((_QWORD *)&v40[0] + 1) = 0xE000000000000000;
      *(_QWORD *)&v38[0] = a3;
      sub_1D5FACA8C();
      sub_1D6E27F98();
      v32 = v40[0];
      v33 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
      v34 = sub_1D5F2C5C8();
      *(_QWORD *)(v31 + 64) = v34;
      *(_OWORD *)(v31 + 32) = v32;
      *(_QWORD *)&v40[0] = 0;
      *((_QWORD *)&v40[0] + 1) = 0xE000000000000000;
      *(_QWORD *)&v38[0] = v30;
      sub_1D5E7809C(0, (unint64_t *)&qword_1ED5F4ED0);
      sub_1D6E27F98();
      v35 = v40[0];
      *(_QWORD *)(v31 + 96) = v33;
      *(_QWORD *)(v31 + 104) = v34;
      *(_OWORD *)(v31 + 72) = v35;
      sub_1D5EEBE18();
      v36 = (void *)sub_1D6E27BE4();
      sub_1D6E27374();
      sub_1D6E1C61C();
      swift_bridgeObjectRelease();

    }
  }
}

uint64_t sub_1D68ADD4C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 128);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 96), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  if (v5)
  {
    v6 = (void *)v5;
    if (*(_QWORD *)(v5 + OBJC_IVAR___TSNotificationSettings_authorizationStatus) == 2)
    {
      if (objc_msgSend(a1, sel_isMySports))
      {
        v8 = *(_QWORD *)(v1 + 80);
        v7 = *(_QWORD *)(v1 + 88);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 56), v8);
        v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 48))(v8, v7);
      }
      else if (objc_msgSend(a1, sel_isPuzzleHub))
      {
        v12 = *(_QWORD *)(v1 + 80);
        v11 = *(_QWORD *)(v1 + 88);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 56), v12);
        v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 56))(v12, v11);
      }
      else
      {
        v9 = objc_msgSend(*(id *)(v1 + 48), sel_hasNotificationsEnabledForTag_, a1);
      }
      v10 = v9;
    }
    else
    {
      v10 = 1;
    }

  }
  else
  {
    v10 = 1;
  }
  return v10 & 1;
}

id sub_1D68ADE58(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;

  if (objc_msgSend(*(id *)(v1 + 136), sel_useOfflineMode))
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 168));
    if ((sub_1D6E228E0() & 1) != 0)
      return 0;
  }
  v3 = objc_msgSend(a1, sel_asChannel);
  if (!v3)
    return 0;
  v4 = objc_msgSend(v3, sel_supportsNotifications);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1D68ADEF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for OfflineFeedManifest(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v15 = v1;
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1D5F63EC4(0, v7, 0);
    v8 = v17;
    v16 = type metadata accessor for OfflineReadinessSection();
    v9 = *(_QWORD *)(v16 - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1D5E82ECC(v10 + *(int *)(v16 + 20), (uint64_t)v6, type metadata accessor for OfflineFeedManifest);
      v17 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1D5F63EC4(v12 > 1, v13 + 1, 1);
        v8 = v17;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      sub_1D5F0D758((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, type metadata accessor for OfflineFeedManifest);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1D68AE060(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1D6E282C8();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1D6E282C8() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

BOOL sub_1D68AE124(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D68AE184(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

BOOL sub_1D68AE1E8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  _BOOL8 result;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = a1;
  v4 = (unsigned __int8 *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v6 = *v4++;
    result = v6 == v3;
  }
  while (v6 != v3 && v5-- != 0);
  return result;
}

uint64_t sub_1D68AE220(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v14;
  uint64_t v15;
  char v17;

  v4 = *(_QWORD *)(a4 + 16);
  if (!v4)
    return 0;
  swift_bridgeObjectRetain();
  v9 = (unsigned __int8 *)(a4 + 48);
  while (1)
  {
    v11 = *((_QWORD *)v9 - 2);
    v10 = *((_QWORD *)v9 - 1);
    v12 = *v9;
    if (!*v9)
      break;
    if (v12 != 1)
      __asm { BR              X8 }
    if (a3 != 1)
    {
LABEL_4:
      sub_1D60A7460(*((_QWORD *)v9 - 2), *((_QWORD *)v9 - 1), *v9);
      sub_1D60A7460(a1, a2, a3);
      sub_1D5FF7428(v11, v10, v12);
      sub_1D5FF7428(a1, a2, a3);
      goto LABEL_5;
    }
    if (v11 == a1 && v10 == a2)
    {
      v15 = 1;
      sub_1D60A7460(a1, a2, 1u);
      sub_1D60A7460(a1, a2, 1u);
      sub_1D5FF7428(a1, a2, 1u);
      sub_1D5FF7428(a1, a2, 1u);
      goto LABEL_27;
    }
    v14 = sub_1D6E282C8();
    v15 = 1;
    sub_1D60A7460(v11, v10, 1u);
    sub_1D60A7460(a1, a2, 1u);
    sub_1D5FF7428(v11, v10, 1u);
    sub_1D5FF7428(a1, a2, 1u);
    if ((v14 & 1) != 0)
      goto LABEL_27;
LABEL_5:
    v9 += 24;
    if (!--v4)
    {
      v15 = 0;
      goto LABEL_27;
    }
  }
  if (a3)
    goto LABEL_4;
  if (v11 != a1 || v10 != a2)
  {
    v17 = sub_1D6E282C8();
    sub_1D60A7460(v11, v10, 0);
    sub_1D60A7460(a1, a2, 0);
    sub_1D5FF7428(v11, v10, 0);
    sub_1D5FF7428(a1, a2, 0);
    if ((v17 & 1) != 0)
      goto LABEL_26;
    goto LABEL_5;
  }
  sub_1D60A7460(a1, a2, 0);
  sub_1D60A7460(a1, a2, 0);
  sub_1D5FF7428(a1, a2, 0);
  sub_1D5FF7428(a1, a2, 0);
LABEL_26:
  v15 = 1;
LABEL_27:
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1D68AE5D4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1D68AE804(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = sub_1D6C209B0(*(_BYTE *)(a2 + 32));
  v7 = v6;
  if (v5 == sub_1D6C209B0(a1) && v7 == v8)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  v10 = sub_1D6E282C8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  v12 = 33;
  while (1)
  {
    v13 = v12 - 31;
    if (__OFADD__(v12 - 32, 1))
      break;
    v14 = sub_1D6C209B0(*(_BYTE *)(a2 + v12));
    v16 = v15;
    if (v14 == sub_1D6C209B0(a1) && v16 == v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    v19 = sub_1D6E282C8();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      goto LABEL_7;
    ++v12;
    if (v13 == v2)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D68AE958(uint64_t a1, unint64_t a2)
{
  return sub_1D68AE96C(a1, a2, (uint64_t)&qword_1ED5F4740);
}

uint64_t sub_1D68AE96C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v10;
  char v11;
  unint64_t v12;
  char v13;

  if (a2 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1D6E28040())
  {
    v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v7 = (id)MEMORY[0x1D8290720](0, a2);
LABEL_5:
      v8 = v7;
      sub_1D5E6F04C(0, (unint64_t *)a3);
      a3 = sub_1D6E27B78();

      if ((a3 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1)
        goto LABEL_18;
      if (v6)
        break;
      v6 = 5;
      while (1)
      {
        v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        v13 = sub_1D6E27B78();

        if ((v13 & 1) != 0)
          goto LABEL_6;
        ++v6;
        if (v12 == v5)
          goto LABEL_18;
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      MEMORY[0x1D8290720](a3, a2);
      v10 = a3 + 1;
      if (__OFADD__(a3, 1))
        break;
      v11 = sub_1D6E27B78();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++a3;
      if (v10 == v5)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D68AEAF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(_QWORD *, _QWORD);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD v30[4];
  uint64_t v31;

  v2 = type metadata accessor for OfflineReadinessSection();
  v3 = MEMORY[0x1E0C80A78](v2);
  v27 = (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v26 - v5;
  sub_1D5F63674();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5F64130(0);
  v13 = v12;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0DEE9D8];
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v29 = v9;
  v28(v11, a1, v8);
  sub_1D5E6D8C0((unint64_t *)&unk_1ED609E60, (uint64_t (*)(uint64_t))sub_1D5F63674, MEMORY[0x1E0DB3DB8]);
  sub_1D6E26BA0();
  v16 = &v15[*(int *)(v13 + 36)];
  sub_1D5E6D8C0(&qword_1ED609E70, (uint64_t (*)(uint64_t))sub_1D5F63674, MEMORY[0x1E0DB3DC0]);
  v17 = *(_QWORD *)v16;
  sub_1D6E270F8();
  if (v17 != v30[0])
  {
    do
    {
      v18 = (void (*)(_QWORD *, _QWORD))sub_1D6E27134();
      sub_1D5E82ECC(v19, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for OfflineReadinessSection);
      v18(v30, 0);
      v28(v11, (uint64_t)v15, v8);
      sub_1D6E27104();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v8);
      v20 = v27;
      sub_1D5F0D758((uint64_t)v6, v27, (uint64_t (*)(_QWORD))type metadata accessor for OfflineReadinessSection);
      v21 = v6;
      v22 = sub_1D68AED90();
      sub_1D5E8D20C(v20, (uint64_t (*)(_QWORD))type metadata accessor for OfflineReadinessSection);
      sub_1D5F63668(v22);
      v23 = *(_QWORD *)v16;
      sub_1D6E270F8();
      v24 = v23 == v30[0];
      v6 = v21;
    }
    while (!v24);
  }
  sub_1D5E8D20C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1D5F64130);
  return v31;
}

uint64_t sub_1D68AED90()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for OfflineReadinessSection() + 24));
  v9 = MEMORY[0x1E0DEE9D8];
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  result = sub_1D6E28040();
  v2 = result;
  if (!result)
    goto LABEL_16;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1D8290720](i, v1);
      else
        v5 = *(id *)(v1 + 8 * i + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, sel_dataProvider);
      swift_unknownObjectRelease();
      if (v7
        || (v8 = objc_msgSend(v6, sel_downloadError)) != 0
        && (v8, (objc_msgSend(v6, sel_isDownloadFailureRecoverable) & 1) == 0))
      {

      }
      else
      {
        sub_1D6E27F20();
        sub_1D6E27F50();
        sub_1D6E27F5C();
        sub_1D6E27F2C();
      }
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_1D68AEF24()
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v1 = v0;
  sub_1D6E1AFF0();
  return swift_release();
}

uint64_t sub_1D68AEF70(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *), uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t (*v30)(uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v37[2];
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD *);
  uint64_t v50;
  uint64_t aBlock;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  void *v54;
  uint64_t (*v55)();
  uint64_t v56;

  v48 = a4;
  v49 = a3;
  v6 = *MEMORY[0x1E0DEEDD8] & *v4;
  v7 = sub_1D6E1F82C();
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  MEMORY[0x1E0C80A78](v7);
  v45 = (_QWORD *)((char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1D6E21668();
  v43 = *(_QWORD *)(v9 - 8);
  v44 = v9;
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D6E216B0();
  v40 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  MEMORY[0x1E0C80A78](v11);
  v39 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v6 + 104);
  v13 = *(_QWORD *)(v6 + 112);
  v15 = *(uint64_t (**)(uint64_t))(v6 + 136);
  v16 = *(void **)(v6 + 152);
  aBlock = v14;
  v52 = v13;
  v53 = v15;
  v54 = v16;
  v37[0] = v16;
  v17 = sub_1D6E20A44();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v37 - v20;
  if (qword_1ED6055E0 != -1)
    swift_once();
  v37[1] = qword_1ED60B3C0;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  v22 = (*(unsigned __int8 *)(v18 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v23 = (v19 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = *(_OWORD *)(v6 + 80);
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v6 + 96);
  *(_QWORD *)(v24 + 40) = v14;
  *(_QWORD *)(v24 + 48) = v13;
  *(_QWORD *)(v24 + 56) = *(_QWORD *)(v6 + 120);
  *(_QWORD *)(v24 + 64) = *(_QWORD *)(v6 + 128);
  *(_QWORD *)(v24 + 72) = v15;
  v25 = v37[0];
  *(_QWORD *)(v24 + 80) = *(_QWORD *)(v6 + 144);
  *(_QWORD *)(v24 + 88) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v24 + v22, v21, v17);
  v26 = v38;
  *(_QWORD *)(v24 + v23) = v38;
  v55 = sub_1D68B66F4;
  v56 = v24;
  aBlock = MEMORY[0x1E0C809B0];
  v52 = 1107296256;
  v53 = sub_1D5EB52E8;
  v54 = &block_descriptor_17_0;
  v27 = _Block_copy(&aBlock);
  v28 = v26;
  v29 = v39;
  sub_1D6E2168C();
  v50 = MEMORY[0x1E0DEE9D8];
  v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1D5E6D8C0((unint64_t *)&qword_1ED5F35E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F3FD0, v30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D5ECD014((unint64_t *)&qword_1ED5F3FE0, (unint64_t *)&qword_1ED5F3FD0, v30);
  v31 = v42;
  v32 = v44;
  sub_1D6E27D88();
  MEMORY[0x1D828FEBC](0, v29, v31, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v32);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v29, v41);
  swift_release();
  v34 = v45;
  v33 = v46;
  *v45 = nullsub_1;
  v34[1] = 0;
  v35 = v47;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v33 + 104))(v34, *MEMORY[0x1E0DBB448], v47);
  v49(v34);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v33 + 8))(v34, v35);
}

uint64_t sub_1D68AF318(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;

  v59 = a2;
  v3 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *a2);
  v55 = sub_1D6E160D0();
  v53 = *(_QWORD *)(v55 - 8);
  v4 = MEMORY[0x1E0C80A78](v55);
  v54 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v52 = (char *)&v45 - v6;
  v7 = v3[14];
  v8 = v3[17];
  v9 = v3[19];
  v51 = v3[13];
  v65[0] = v51;
  v65[1] = v7;
  v50 = v7;
  v49 = v8;
  v65[2] = v8;
  v66 = v9;
  v56 = v9;
  v10 = sub_1D6E20A44();
  v57 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v45 - v11;
  v13 = sub_1D6E237A4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v45 - v18;
  v21 = v3[10];
  v20 = v3[11];
  v48 = v3[15];
  v47 = v20;
  swift_getAssociatedConformanceWitness();
  v58 = v10;
  v60 = a1;
  result = sub_1D5F62FF0();
  if ((~result & 0xF000000000000007) != 0)
  {
    v23 = result;
    sub_1D6E22484();
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E0D5CB50], v13);
    sub_1D5E6D8C0((unint64_t *)&unk_1ED60AFF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5CB58], MEMORY[0x1E0D5CB68]);
    v24 = sub_1D6E268F4();
    v25 = *(void (**)(char *, uint64_t))(v14 + 8);
    v25(v17, v13);
    v25(v19, v13);
    if ((v24 & 1) != 0)
    {
      return sub_1D5F63054(v23);
    }
    else
    {
      v46 = (char *)v59 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v59) + 0xF8);
      v26 = v46;
      swift_beginAccess();
      v27 = v57;
      v28 = v26;
      v29 = v58;
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v12, v28, v58);
      v30 = v51;
      v31 = v50;
      v32 = v49;
      sub_1D6E1E020();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v29);
      __swift_project_boxed_opaque_existential_1(v65, v66);
      v33 = v52;
      v34 = sub_1D6E1D7F8();
      v45 = (uint64_t)&v45;
      MEMORY[0x1E0C80A78](v34);
      v35 = v47;
      *(&v45 - 12) = v21;
      *(&v45 - 11) = v35;
      *(&v45 - 10) = v3[12];
      *(&v45 - 9) = v30;
      v36 = v48;
      *(&v45 - 8) = v31;
      *(&v45 - 7) = v36;
      *(&v45 - 6) = v3[16];
      *(&v45 - 5) = v32;
      v37 = v56;
      *(&v45 - 4) = v3[18];
      *(&v45 - 3) = v37;
      *(&v45 - 2) = v60;
      v61 = v30;
      v62 = v31;
      v63 = v32;
      v64 = v37;
      sub_1D6E1D54C();
      sub_1D5E6D8C0(&qword_1ED609C38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB13A0], MEMORY[0x1E0CB13D0]);
      v56 = v23;
      v38 = v55;
      v39 = sub_1D6E26C90();
      v40 = *(void (**)(char *, uint64_t))(v53 + 8);
      v40(v33, v38);
      __swift_project_boxed_opaque_existential_1(v65, v66);
      v41 = v54;
      v42 = sub_1D6E1D7EC();
      MEMORY[0x1E0C80A78](v42);
      *(&v45 - 2) = (uint64_t)v59;
      v43 = sub_1D6E26C90();
      v40(v41, v38);
      v44 = v46;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 24))(v44, v60, v58);
      swift_endAccess();
      sub_1D68AFA20(v39, v43);
      sub_1D5F63054(v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
    }
  }
  return result;
}

uint64_t sub_1D68AF828@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1D6E20A44();
  sub_1D6E20A68();
  v2 = sub_1D6E1D54C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_1D68AF8D8@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v16 = a2;
  v3 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *a1);
  v4 = v3[13];
  v5 = v3[14];
  v17 = v3[17];
  v6 = v3[19];
  v18 = v4;
  v19 = v5;
  v20 = v17;
  v21 = v6;
  v7 = sub_1D6E20A44();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - v9;
  v11 = (char *)a1 + v3[31];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = v16;
  sub_1D6E20A68();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v18 = v4;
  v19 = v5;
  v20 = v17;
  v21 = v6;
  v13 = sub_1D6E1D54C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
}

uint64_t sub_1D68AFA20(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  BOOL v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char v59;
  unint64_t v60;
  void (*v61)(char *, unint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  char *v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  char *v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  id v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t);
  id v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  int *v112;
  uint64_t *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  void (*v124)(char *, uint64_t);
  void (*v125)(char *, uint64_t);
  char *v126;
  uint64_t v127;
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t, uint64_t);
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  NSObject *v138;
  os_log_type_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  __int128 v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t);
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  _QWORD *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  __int128 v182;
  __int128 v183;
  uint64_t v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  uint64_t v188[3];
  uint64_t v189;
  uint64_t v190;

  v173 = a1;
  v4 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v2);
  v160 = type metadata accessor for OfflineReadinessSection();
  MEMORY[0x1E0C80A78](v160);
  v159 = (uint64_t *)((char *)&v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v158 = type metadata accessor for OfflineFeedGroupProcessorResult();
  MEMORY[0x1E0C80A78](v158);
  v157 = (uint64_t)&v144 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_1D6E1C664();
  v172 = *(_QWORD *)(v175 - 8);
  v7 = MEMORY[0x1E0C80A78](v175);
  v148 = (char *)&v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v144 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v147 = (char *)&v144 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v156 = (char *)&v144 - v15;
  MEMORY[0x1E0C80A78](v14);
  v163 = (char *)&v144 - v16;
  sub_1D5F63674();
  v180 = v17;
  v161 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v162 = (char *)&v144 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v170 = (char *)&v144 - v20;
  v21 = v4[14];
  v22 = v4[17];
  v23 = v4[19];
  v171 = v24;
  v188[0] = v24;
  v188[1] = v21;
  v188[2] = v22;
  v189 = v23;
  v25 = sub_1D6E1D54C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v176 = (char *)&v144 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v146 = (char *)&v144 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v155 = (char *)&v144 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v174 = (char *)&v144 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v181 = (char *)&v144 - v36;
  v145 = v37;
  MEMORY[0x1E0C80A78](v35);
  v39 = (char *)&v144 - v38;
  v40 = swift_bridgeObjectRetain();
  v41 = MEMORY[0x1D828F700](v40, v25);
  v179 = v11;
  if (v41)
  {
    v42 = 0;
    do
    {
      v43 = sub_1D6E26E64();
      sub_1D6E26E10();
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(v39, a2+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v42, v25);
        v11 = (char *)(v42 + 1);
        if (__OFADD__(v42, 1))
          goto LABEL_11;
      }
      else
      {
        result = sub_1D6E27EE4();
        if (v145 != 8)
        {
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          return result;
        }
        v188[0] = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v26 + 16))(v39, v188, v25);
        swift_unknownObjectRelease();
        v11 = (char *)(v42 + 1);
        if (__OFADD__(v42, 1))
        {
LABEL_11:
          __break(1u);
          break;
        }
      }
      sub_1D6E1D480();
      swift_beginAccess();
      sub_1D6E1A3D8();
      swift_endAccess();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v39, v25);
      ++v42;
      v44 = v11 == (char *)MEMORY[0x1D828F700](a2, v25);
      v11 = v179;
    }
    while (!v44);
  }
  swift_bridgeObjectRelease();
  v46 = v173;
  v47 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1D828F700](v47, v25))
  {
    swift_bridgeObjectRelease();
    v113 = (uint64_t *)MEMORY[0x1E0DEEDD8];
    goto LABEL_40;
  }
  v48 = v177;
  v49 = *MEMORY[0x1E0DEEDD8] & *v177;
  v50 = (char *)v48 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v48) + 0x100);
  v154 = (char *)v48 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v48) + 0xE0);
  v52 = v49 + 168;
  v51 = *(_QWORD *)(v49 + 168);
  v152 = *(_QWORD *)(v52 + 8);
  v151 = v51;
  v168 = v50;
  swift_beginAccess();
  v53 = 0;
  v169 = 0;
  v150 = (char *)&v182 + 8;
  *(_QWORD *)&v54 = 136446210;
  v164 = v54;
  v149 = MEMORY[0x1E0DEE9B8] + 8;
  v55 = v175;
  v56 = v174;
  v153 = v26;
  while (1)
  {
    v59 = sub_1D6E26E64();
    sub_1D6E26E10();
    if ((v59 & 1) != 0)
    {
      v60 = v46
          + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
          + *(_QWORD *)(v26 + 72) * v53;
      v61 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
      v61(v181, v60, v25);
      v62 = v53 + 1;
      if (__OFADD__(v53, 1))
        goto LABEL_32;
    }
    else
    {
      result = sub_1D6E27EE4();
      if (v145 != 8)
        goto LABEL_58;
      v188[0] = result;
      v61 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
      v61(v181, (unint64_t)v188, v25);
      swift_unknownObjectRelease();
      v62 = v53 + 1;
      if (__OFADD__(v53, 1))
      {
LABEL_32:
        __break(1u);
LABEL_33:
        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
    }
    v178 = v62;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v56, v181, v25);
    sub_1D6E1D474();
    sub_1D5E7809C(0, &qword_1ED60AAB0);
    if (!swift_dynamicCast())
    {
      v184 = 0;
      v182 = 0u;
      v183 = 0u;
      sub_1D5E828A8((uint64_t)&v182, (uint64_t)&unk_1EFFF4C78, (uint64_t)&qword_1ED60AAB0, (uint64_t)&protocol descriptor for FeedGroupOfflineableProviding, (uint64_t (*)(_QWORD))sub_1D5EE93F4);
      v185 = 0u;
      v186 = 0u;
      v187 = 0;
LABEL_25:
      sub_1D5E828A8((uint64_t)&v185, (uint64_t)&qword_1ED60A470, (uint64_t)&qword_1ED60A468, (uint64_t)&protocol descriptor for FeedGroupOfflineable, (uint64_t (*)(_QWORD))sub_1D5EE93F4);
      sub_1D5F65274();
      v81 = v176;
      v61(v176, (unint64_t)v56, v25);
      v82 = v56;
      v83 = sub_1D6E1C64C();
      v84 = sub_1D6E27374();
      if (os_log_type_enabled(v83, v84))
      {
        v85 = swift_slowAlloc();
        v86 = swift_slowAlloc();
        v188[0] = v86;
        *(_DWORD *)v85 = v164;
        v87 = sub_1D6E1D480();
        *(_QWORD *)(v85 + 4) = sub_1D5F69694(v87, v88, v188);
        swift_bridgeObjectRelease();
        v57 = *(void (**)(char *, uint64_t))(v26 + 8);
        v57(v176, v25);
        _os_log_impl(&dword_1D5E69000, v83, v84, "Offline Readiness will ignore inserted section because it does not support offline mode, id=%{public}s", (uint8_t *)v85, 0xCu);
        swift_arrayDestroy();
        v89 = v86;
        v11 = v179;
        MEMORY[0x1D82918CC](v89, -1, -1);
        MEMORY[0x1D82918CC](v85, -1, -1);

      }
      else
      {

        v57 = *(void (**)(char *, uint64_t))(v26 + 8);
        v57(v81, v25);
      }
      v55 = v175;
      (*(void (**)(char *, uint64_t))(v172 + 8))(v11, v175);
      v57(v82, v25);
      v56 = v82;
      goto LABEL_16;
    }
    v63 = *((_QWORD *)&v183 + 1);
    v64 = v184;
    __swift_project_boxed_opaque_existential_1(&v182, *((uint64_t *)&v183 + 1));
    v65 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v64 + 8);
    v66 = v64;
    v56 = v174;
    v65(&v185, v63, v66);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v182);
    if (!*((_QWORD *)&v186 + 1))
      goto LABEL_25;
    sub_1D5E8D7A0(&v185, (uint64_t)v188);
    v67 = v161;
    v68 = v162;
    v69 = v180;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v162, v168, v180);
    sub_1D5E6D8C0(&qword_1ED609E70, (uint64_t (*)(uint64_t))sub_1D5F63674, MEMORY[0x1E0DB3DC0]);
    sub_1D6E27098();
    sub_1D6E270F8();
    v70 = sub_1D6E270EC();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
    if (v70 >= sub_1D6E22208())
      break;
    v71 = v163;
    sub_1D5F65274();
    v72 = v155;
    v61(v155, (unint64_t)v174, v25);
    v73 = sub_1D6E1C64C();
    v74 = sub_1D6E27374();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = v72;
      v76 = (uint8_t *)swift_slowAlloc();
      v77 = swift_slowAlloc();
      *(_QWORD *)&v185 = v77;
      *(_DWORD *)v76 = v164;
      v167 = (void (*)(char *, uint64_t))(v76 + 4);
      v78 = sub_1D6E1D480();
      *(_QWORD *)&v182 = sub_1D5F69694(v78, v79, (uint64_t *)&v185);
      v55 = v175;
      sub_1D6E27C44();
      swift_bridgeObjectRelease();
      v167 = *(void (**)(char *, uint64_t))(v26 + 8);
      v167(v75, v25);
      _os_log_impl(&dword_1D5E69000, v73, v74, "Offline Readiness will process inserted section, id=%{public}s", v76, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82918CC](v77, -1, -1);
      MEMORY[0x1D82918CC](v76, -1, -1);

      v80 = *(void (**)(char *, uint64_t))(v172 + 8);
      v80(v163, v55);
    }
    else
    {
      v167 = *(void (**)(char *, uint64_t))(v26 + 8);
      v167(v72, v25);

      v80 = *(void (**)(char *, uint64_t))(v172 + 8);
      v80(v71, v55);
    }
    v90 = v177;
    v91 = *(_QWORD *)((char *)v177 + v152);
    swift_bridgeObjectRetain();
    v92 = v156;
    sub_1D5F65274();
    MEMORY[0x1E0C80A78](v93);
    *(&v144 - 2) = (uint64_t)v188;
    *(&v144 - 1) = (uint64_t)v92;
    v94 = v169;
    v95 = sub_1D5FE1894((uint64_t)sub_1D5F63EF0, (uint64_t)(&v144 - 4), v91);
    v169 = v94;
    v96 = v157;
    sub_1D68D917C(v95, v157);
    v80(v92, v55);
    swift_bridgeObjectRelease();
    v97 = *(void **)((char *)v90 + v151);
    v98 = OfflineFeedManifest.contentManifest.getter();
    v99 = objc_msgSend(v97, sel_interestTokenForContentManifest_, v98);

    v100 = v174;
    v166 = sub_1D6E1D480();
    v165 = v101;
    *(_QWORD *)&v185 = *(_QWORD *)(v96 + *(int *)(v158 + 20));
    swift_bridgeObjectRetain();
    v102 = swift_bridgeObjectRetain();
    sub_1D5F63668(v102);
    v103 = v185;
    v104 = v189;
    v105 = v190;
    __swift_project_boxed_opaque_existential_1(v188, v189);
    v106 = *(uint64_t (**)(uint64_t, uint64_t))(v105 + 72);
    v107 = v99;
    v108 = v104;
    v55 = v175;
    v109 = v106(v108, v105);
    v56 = v100;
    LOBYTE(v98) = v109;
    v110 = (uint64_t)v159;
    v111 = v165;
    *v159 = v166;
    *(_QWORD *)(v110 + 8) = v111;
    v112 = (int *)v160;
    sub_1D5E82ECC(v96, v110 + *(int *)(v160 + 20), type metadata accessor for OfflineFeedManifest);
    *(_QWORD *)(v110 + v112[6]) = v103;
    *(_QWORD *)(v110 + v112[7]) = v107;
    *(_BYTE *)(v110 + v112[8]) = v98 & 1;
    swift_beginAccess();
    sub_1D6E1A3CC();
    swift_endAccess();

    sub_1D5E8D20C(v110, (uint64_t (*)(_QWORD))type metadata accessor for OfflineReadinessSection);
    sub_1D5E8D20C(v96, (uint64_t (*)(_QWORD))type metadata accessor for OfflineFeedGroupProcessorResult);
    v167(v56, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v188);
    v26 = v153;
    v11 = v179;
LABEL_16:
    v46 = v173;
    v58 = MEMORY[0x1D828F700](v173, v25);
    ++v53;
    if (v178 == v58)
      goto LABEL_33;
  }
  swift_bridgeObjectRelease();
  v114 = v147;
  sub_1D5F65274();
  v115 = v146;
  v116 = v174;
  v61(v146, (unint64_t)v174, v25);
  v117 = v114;
  v118 = sub_1D6E1C64C();
  v119 = sub_1D6E27374();
  if (os_log_type_enabled(v118, v119))
  {
    v120 = (uint8_t *)swift_slowAlloc();
    v121 = swift_slowAlloc();
    *(_QWORD *)&v185 = v121;
    *(_DWORD *)v120 = v164;
    v122 = sub_1D6E1D480();
    *(_QWORD *)&v182 = sub_1D5F69694(v122, v123, (uint64_t *)&v185);
    sub_1D6E27C44();
    swift_bridgeObjectRelease();
    v124 = *(void (**)(char *, uint64_t))(v26 + 8);
    v124(v115, v25);
    _os_log_impl(&dword_1D5E69000, v118, v119, "Offline Readiness will ignore inserted section because the group limit has been reached, id=%{public}s", v120, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v121, -1, -1);
    MEMORY[0x1D82918CC](v120, -1, -1);

    (*(void (**)(char *, uint64_t))(v172 + 8))(v147, v175);
    v124(v174, v25);
  }
  else
  {

    v125 = *(void (**)(char *, uint64_t))(v26 + 8);
    v125(v115, v25);
    (*(void (**)(char *, uint64_t))(v172 + 8))(v117, v55);
    v125(v116, v25);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v188);
LABEL_39:
  v113 = (uint64_t *)MEMORY[0x1E0DEEDD8];
LABEL_40:
  v126 = (char *)v177 + *(_QWORD *)((*v113 & *v177) + 0x100);
  swift_beginAccess();
  v127 = v161;
  v128 = *(void (**)(char *, char *, uint64_t))(v161 + 16);
  v129 = (uint64_t)v162;
  v130 = v180;
  v128(v162, v126, v180);
  sub_1D5E6D8C0(&qword_1ED609E70, (uint64_t (*)(uint64_t))sub_1D5F63674, MEMORY[0x1E0DB3DC0]);
  sub_1D6E27098();
  sub_1D6E270F8();
  v131 = sub_1D6E270EC();
  v132 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
  v132(v129, v130);
  v128((char *)v129, v126, v130);
  v133 = sub_1D68AEAF0(v129);
  result = ((uint64_t (*)(uint64_t, uint64_t))v132)(v129, v130);
  if (v133 >> 62)
  {
    swift_bridgeObjectRetain();
    v143 = sub_1D6E28040();
    result = swift_bridgeObjectRelease();
    v134 = *v113;
    if (v143)
      goto LABEL_46;
LABEL_42:
    v135 = *(_QWORD *)((char *)v177 + *(_QWORD *)((v134 & *v177) + 0x108));
    if (v135)
    {
      if (*(_BYTE *)(v135 + 48) == 1)
      {
        *(_BYTE *)(v135 + 49) = 1;
      }
      else
      {
        *(_WORD *)(v135 + 48) = 1;
        swift_retain();
        sub_1D6E1AE1C();
        swift_retain();
        v136 = (void *)sub_1D6E1AB4C();
        sub_1D6E1AC9C();
        swift_release();
        swift_release();
        swift_release_n();

        v134 = *v113;
      }
      goto LABEL_46;
    }
    goto LABEL_59;
  }
  v134 = *v113;
  if (!*(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_42;
LABEL_46:
  v137 = *(_QWORD *)((v134 & *v177) + 0xF0);
  swift_retain();
  swift_retain();
  sub_1D6E1AB70();
  swift_release();
  swift_release();
  if ((v185 & 1) == 0)
  {
    sub_1D5F65274();
    swift_bridgeObjectRetain_n();
    v138 = sub_1D6E1C64C();
    v139 = sub_1D6E27374();
    if (os_log_type_enabled(v138, v139))
    {
      v140 = swift_slowAlloc();
      *(_DWORD *)v140 = 134349312;
      if (v133 >> 62)
      {
        swift_bridgeObjectRetain();
        v141 = sub_1D6E28040();
        swift_bridgeObjectRelease();
      }
      else
      {
        v141 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)&v185 = v141;
      sub_1D6E27C44();
      swift_bridgeObjectRelease();
      *(_WORD *)(v140 + 12) = 2050;
      *(_QWORD *)&v185 = v131;
      sub_1D6E27C44();
      _os_log_impl(&dword_1D5E69000, v138, v139, "Offline Readiness processor will prefetch %{public}ld missing asset handles from %{public}ld sections", (uint8_t *)v140, 0x16u);
      MEMORY[0x1D82918CC](v140, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v172 + 8))(v148, v175);
  }
  v142 = *(_QWORD *)((char *)v177 + v137);
  swift_beginAccess();
  *(_QWORD *)(v142 + 72) = v133;
  swift_retain();
  swift_bridgeObjectRelease();
  sub_1D68B4194();
  return swift_release();
}

uint64_t sub_1D68B0DA0(_QWORD *a1)
{
  sub_1D68B0E34(a1);
  swift_retain();
  swift_retain();
  sub_1D6E1AB7C();
  swift_release();
  sub_1D68B46D0((uint64_t)sub_1D68B5688, (uint64_t)&block_descriptor_125);
  return swift_release();
}

uint64_t sub_1D68B0E34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  os_log_type_t v29;
  os_log_type_t v30;
  uint64_t v31;
  id v32;
  unsigned __int8 v33;
  os_log_type_t v34;
  os_log_type_t v35;
  _BOOL4 v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v40;
  char v41;

  v2 = sub_1D6E1C664();
  v40 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v40 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v40 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v40 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v40 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v40 - v18;
  v20 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v21 = (_QWORD *)((char *)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0xD0));
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  sub_1D5F69CF4(byte_1D6E9BDE2[*((char *)a1 + *(_QWORD *)((*v20 & *a1) + 0xA0))]);
  sub_1D6E1A180();
  swift_release();
  if (v41 == 6)
  {
    v22 = *(void **)((char *)a1 + *(_QWORD *)((*v20 & *a1) + 0xD8));
    if (objc_msgSend(v22, sel_isNetworkReachable))
    {
      v23 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v24 = objc_msgSend(v23, sel_applicationState);

      if (v24 == (id)2)
      {
        sub_1D5F65274();
        v25 = sub_1D6E1C64C();
        v26 = sub_1D6E27374();
        if (!os_log_type_enabled(v25, v26))
        {
          v28 = 0;
          v19 = v11;
          v31 = v40;
          goto LABEL_26;
        }
        v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v27 = 0;
        _os_log_impl(&dword_1D5E69000, v25, v26, "Offline Readiness processor will be disabled due to app background state", v27, 2u);
        v28 = 0;
        v19 = v11;
      }
      else
      {
        v32 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
        v33 = objc_msgSend(v32, sel_isLowPowerModeEnabled);

        if ((v33 & 1) == 0)
        {
          if ((objc_msgSend(v22, sel_isLowDataModeEnabled) & 1) != 0)
          {
            sub_1D5F65274();
            v25 = sub_1D6E1C64C();
            v35 = sub_1D6E27374();
            v36 = os_log_type_enabled(v25, v35);
            v31 = v40;
            if (!v36)
            {
              v28 = 0;
              v19 = v17;
              goto LABEL_26;
            }
            v27 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v27 = 0;
            _os_log_impl(&dword_1D5E69000, v25, v35, "Offline Readiness processor will be disabled due to Low Data Mode", v27, 2u);
            v28 = 0;
            v19 = v17;
          }
          else
          {
            sub_1D5F65274();
            v25 = sub_1D6E1C64C();
            v37 = sub_1D6E27374();
            v38 = os_log_type_enabled(v25, v37);
            v31 = v40;
            if (!v38)
            {
              v28 = 1;
              goto LABEL_26;
            }
            v27 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v27 = 0;
            _os_log_impl(&dword_1D5E69000, v25, v37, "Offline Readiness processor will be enabled", v27, 2u);
            v28 = 1;
          }
          goto LABEL_11;
        }
        sub_1D5F65274();
        v25 = sub_1D6E1C64C();
        v34 = sub_1D6E27374();
        if (!os_log_type_enabled(v25, v34))
        {
          v28 = 0;
          v19 = v14;
          v31 = v40;
          goto LABEL_26;
        }
        v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v27 = 0;
        _os_log_impl(&dword_1D5E69000, v25, v34, "Offline Readiness processor will be disabled due to Low Power Mode", v27, 2u);
        v28 = 0;
        v19 = v14;
      }
    }
    else
    {
      sub_1D5F65274();
      v25 = sub_1D6E1C64C();
      v30 = sub_1D6E27374();
      if (!os_log_type_enabled(v25, v30))
      {
        v28 = 0;
        v19 = v8;
        v31 = v40;
        goto LABEL_26;
      }
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1D5E69000, v25, v30, "Offline Readiness processor will be disabled due to network reachability", v27, 2u);
      v28 = 0;
      v19 = v8;
    }
  }
  else
  {
    sub_1D5F65274();
    v25 = sub_1D6E1C64C();
    v29 = sub_1D6E27374();
    if (!os_log_type_enabled(v25, v29))
    {
      v28 = 0;
      v19 = v5;
      v31 = v40;
      goto LABEL_26;
    }
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_1D5E69000, v25, v29, "Offline Readiness processor will be disabled due to feature enablement", v27, 2u);
    v28 = 0;
    v19 = v5;
  }
  v31 = v40;
LABEL_11:
  MEMORY[0x1D82918CC](v27, -1, -1);
LABEL_26:

  (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v2);
  return v28;
}

id sub_1D68B139C(void *a1)
{
  id result;

  sub_1D68AEF24();
  result = objc_msgSend(a1, sel_isNetworkReachable);
  if ((_DWORD)result)
  {
    swift_retain();
    sub_1D68B46D0((uint64_t)sub_1D68B5688, (uint64_t)&block_descriptor_36_1);
    return (id)swift_release();
  }
  return result;
}

void sub_1D68B1418(void *a1, uint64_t a2, void *a3)
{
  id v5;

  swift_unknownObjectRetain();
  v5 = a1;
  sub_1D68B139C(a3);
  swift_unknownObjectRelease();

}

void sub_1D68B1470()
{
  sub_1D68B6900();
}

uint64_t sub_1D68B14B8(char *a1)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t (*v11)(void);

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v3 + 96) - 8) + 8))(&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1)
                                                                                                 + 0xB8)]);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v3 + 88) - 8) + 8))(&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1)
                                                                                                 + 0xC0)]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0xC8)]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0xD0)]);
  swift_unknownObjectRelease();
  v4 = &a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0xE0)];
  v5 = sub_1D6E22220();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  v6 = &a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0xF8)];
  v7 = sub_1D6E20A44();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = &a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x100)];
  sub_1D5F63674();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  v10 = MEMORY[0x1E0CB0870];
  v11 = MEMORY[0x1E0DEB940];
  sub_1D5E828A8((uint64_t)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x110)], (uint64_t)&qword_1ED5E0280, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1D5E847C4);
  return sub_1D5E828A8((uint64_t)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x118)], (uint64_t)&qword_1ED5E0280, (uint64_t)v10, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1D5E847C4);
}

uint64_t type metadata accessor for OfflineReadinessSection()
{
  uint64_t result;

  result = qword_1ED60A698;
  if (!qword_1ED60A698)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D68B1738()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1D6E1C664();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1D68B17DC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *), uint64_t a4)
{
  return sub_1D68AEF70(a1, a2, a3, a4);
}

uint64_t sub_1D68B1800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v0 = sub_1D6E15EF0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6E15EE4();
  v4 = sub_1D6E15ED8();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRetain_n();
  v7 = sub_1D6E1C64C();
  v8 = sub_1D6E27374();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    v15 = sub_1D5F69694(v4, v6, &v16);
    sub_1D6E27C44();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D5E69000, v7, v8, "Offline Readiness will unbox cursor before committing to database, id=%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v10, -1, -1);
    MEMORY[0x1D82918CC](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_getAssociatedConformanceWitness();
  sub_1D6E23A2C();
  sub_1D6E1AE1C();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = v6;
  v12 = (void *)sub_1D6E1AB4C();
  type metadata accessor for OfflineFeedManifest(0);
  v13 = sub_1D6E1AC30();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1D68B1A78()
{
  swift_getAssociatedConformanceWitness();
  return sub_1D6E22460();
}

id sub_1D68B1AD8(uint64_t a1, _QWORD *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void *v46;
  id v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  int v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id result;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  double v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  void *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  _QWORD *v107;
  uint64_t v108;
  _QWORD *v109;
  void *v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;

  v99 = a4;
  v102 = a3;
  v107 = a2;
  v4 = (_QWORD *)*a2;
  v5 = type metadata accessor for OfflineFeedManifest(0);
  MEMORY[0x1E0C80A78](v5);
  v73 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v4[12];
  v8 = v4[10];
  v100 = v4[11];
  v101 = v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v97 = (char *)&v72 - v11;
  v96 = sub_1D6E21B48();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v94 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D6E23B40();
  MEMORY[0x1E0C80A78](v13);
  v93 = (char *)&v72 - v14;
  v15 = sub_1D6E23AF8();
  MEMORY[0x1E0C80A78](v15);
  v92 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = AssociatedConformanceWitness;
  v91 = swift_getAssociatedTypeWitness();
  v89 = sub_1D6E27C38();
  MEMORY[0x1E0C80A78](v89);
  v88 = (char *)&v72 - v17;
  v18 = sub_1D6E15ECC();
  v19 = MEMORY[0x1E0C80A78](v18);
  v106 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v105 = (char *)&v72 - v21;
  v81 = sub_1D6E21A1C();
  v80 = *(_QWORD *)(v81 - 8);
  v22 = MEMORY[0x1E0C80A78](v81);
  v104 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = *(_QWORD *)(v8 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v87 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v103 = (char *)&v72 - v26;
  v82 = sub_1D6E15EF0();
  v79 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v28 = (char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = (char *)sub_1D6E239F0();
  v29 = sub_1D6E21B84();
  v30 = sub_1D6E26EDC();
  MEMORY[0x1D82917D0](MEMORY[0x1E0DEAF38], v30);
  MEMORY[0x1D82917D0](MEMORY[0x1E0D5A708], v29);
  v31 = sub_1D6E26BB8();
  swift_bridgeObjectRelease();
  v111 = (char *)v107[3];
  v32 = (uint64_t)v111;
  v108 = v31;
  v109 = v107;
  sub_1D5E847C4(0, &qword_1EFFF4C88, (uint64_t (*)(uint64_t))type metadata accessor for OfflineReadinessSection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D5ECD014(qword_1EFFF4C90, &qword_1EFFF4C88, (uint64_t (*)(uint64_t))type metadata accessor for OfflineReadinessSection);
  v72 = v32;
  swift_bridgeObjectRetain();
  v74 = v29;
  v33 = v98;
  v86 = sub_1D6E26C90();
  v98 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v85 = sub_1D6E23A2C();
  sub_1D6E15EE4();
  v84 = sub_1D6E15ED8();
  v83 = v34;
  (*(void (**)(char *, uint64_t))(v79 + 8))(v28, v82);
  sub_1D6E239D8();
  v82 = sub_1D6E239C0();
  (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v104, *MEMORY[0x1E0D5A518], v81);
  sub_1D6E239B4();
  sub_1D6E15EC0();
  sub_1D6E21DE8();
  v81 = sub_1D6E26E4C();
  sub_1D6E26EDC();
  swift_getTupleTypeMetadata2();
  sub_1D6E26E4C();
  v80 = sub_1D6E2681C();
  v79 = sub_1D6E26E4C();
  v78 = sub_1D6E26E4C();
  sub_1D6E220F4();
  v77 = sub_1D6E26E4C();
  v75 = sub_1D6614E3C(MEMORY[0x1E0DEE9D8]);
  sub_1D6E1AD5C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v88, 1, 1);
  v91 = sub_1D6E1AC84();
  sub_1D6E2399C();
  sub_1D6E239A8();
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v94, *MEMORY[0x1E0D5A6B8], v96);
  sub_1D6E220D0();
  v35 = v87;
  sub_1D6E239D8();
  v36 = v99;
  sub_1D6E229DC();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v35, v8);
  sub_1D6E220AC();
  v37 = sub_1D6E23978();
  v38 = swift_allocObject();
  swift_retain();
  *(_QWORD *)(v38 + 16) = sub_1D6E2246C();
  v106 = (char *)v38;
  CACurrentMediaTime();
  v39 = (char *)v107 + *(_QWORD *)(*v107 + 128);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v40 = sub_1D6E1C64C();
  v41 = sub_1D6E27374();
  v42 = v41;
  if (os_log_type_enabled(v40, v41))
  {
    v43 = swift_slowAlloc();
    v104 = (char *)swift_slowAlloc();
    v111 = v104;
    *(_DWORD *)v43 = 136446466;
    LODWORD(v103) = v42;
    swift_bridgeObjectRetain();
    v113 = sub_1D5F69694(v102, v36, (uint64_t *)&v111);
    v105 = v39;
    sub_1D6E27C44();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v43 + 12) = 2050;
    sub_1D6E239CC();
    v44 = MEMORY[0x1D828F6AC]();
    swift_release();
    swift_bridgeObjectRelease();
    v113 = v44;
    sub_1D6E27C44();
    swift_release();
    _os_log_impl(&dword_1D5E69000, v40, (os_log_type_t)v103, "Offline Readiness will commit to database, id=%{public}s, groupCount=%{public}ld", (uint8_t *)v43, 0x16u);
    v45 = v104;
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v45, -1, -1);
    MEMORY[0x1D82918CC](v43, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_release_n();
  }
  v46 = v98;
  sub_1D6E21DB8();
  if (v46)
  {
    swift_bridgeObjectRetain();
    v47 = v46;
    swift_bridgeObjectRetain();
    v48 = v46;
    v49 = sub_1D6E1C64C();
    v50 = sub_1D6E27374();
    v51 = os_log_type_enabled(v49, v50);
    v52 = v102;
    if (v51)
    {
      v53 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v113 = v54;
      *(_DWORD *)v53 = 136446466;
      swift_bridgeObjectRetain();
      v111 = (char *)sub_1D5F69694(v52, v36, &v113);
      sub_1D6E27C44();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v53 + 12) = 2082;
      v111 = 0;
      v112 = 0xE000000000000000;
      v110 = v46;
      sub_1D5E7809C(0, (unint64_t *)&qword_1ED5F4ED0);
      sub_1D6E27F98();
      v111 = (char *)sub_1D5F69694((uint64_t)v111, v112, &v113);
      sub_1D6E27C44();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5E69000, v49, v50, "Offline Readiness failed to commit to database, id=%{public}s, error=%{public}s", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D82918CC](v54, -1, -1);
      MEMORY[0x1D82918CC](v53, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    sub_1D5E847C4(0, qword_1F00076A0, type metadata accessor for OfflineFeedManifest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v69 = sub_1D6E1AC78();
    swift_release();
    swift_release();
    return (id)v69;
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v55 = sub_1D6E1C64C();
  v56 = sub_1D6E27374();
  v57 = os_log_type_enabled(v55, (os_log_type_t)v56);
  v58 = v102;
  if (!v57)
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  LODWORD(v105) = v56;
  v59 = swift_slowAlloc();
  v104 = (char *)swift_slowAlloc();
  v111 = v104;
  *(_DWORD *)v59 = 136446978;
  swift_bridgeObjectRetain();
  v113 = sub_1D5F69694(v58, v36, (uint64_t *)&v111);
  sub_1D6E27C44();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v59 + 12) = 2082;
  v60 = sub_1D6E23984();
  v113 = sub_1D5F69694(v60, v61, (uint64_t *)&v111);
  sub_1D6E27C44();
  v107 = (_QWORD *)v37;
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v59 + 22) = 2082;
  qos_class_self();
  result = (id)FCStringFromQoSClass();
  if (result)
  {
    v63 = result;
    v64 = sub_1D6E26978();
    v66 = v65;

    v113 = sub_1D5F69694(v64, v66, (uint64_t *)&v111);
    sub_1D6E27C44();
    swift_bridgeObjectRelease();
    *(_WORD *)(v59 + 32) = 2050;
    result = (id)sub_1D6E26FE4();
    if ((~*(_QWORD *)&v67 & 0x7FF0000000000000) != 0)
    {
      if (v67 > -9.22337204e18)
      {
        if (v67 < 9.22337204e18)
        {
          v113 = (uint64_t)v67;
          sub_1D6E27C44();
          _os_log_impl(&dword_1D5E69000, v55, (os_log_type_t)v105, "Offline Readiness finished committing to database, id=%{public}s, rootCursorIdentifier%{public}s, qos=%{public}s, time=%{public}lldms", (uint8_t *)v59, 0x2Au);
          v68 = v104;
          swift_arrayDestroy();
          MEMORY[0x1D82918CC](v68, -1, -1);
          MEMORY[0x1D82918CC](v59, -1, -1);
LABEL_16:

          v70 = swift_bridgeObjectRetain();
          v71 = sub_1D68ADEF8(v70);
          swift_bridgeObjectRelease();
          OfflineFeedManifest.init(_:)(v71, v73);
          sub_1D5E847C4(0, qword_1F00076A0, type metadata accessor for OfflineFeedManifest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
          swift_allocObject();
          v69 = sub_1D6E1AC90();
          swift_release();
          swift_release();
          return (id)v69;
        }
        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D68B2A90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27[4];

  v26 = a3;
  v5 = type metadata accessor for OfflineReadinessSection();
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getAssociatedConformanceWitness();
  v8 = sub_1D6E21B84();
  v9 = sub_1D6E27C38();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v25 - v11;
  v13 = a1[1];
  v27[0] = *a1;
  v27[1] = v13;
  swift_bridgeObjectRetain();
  MEMORY[0x1D828F088](v27, a2, MEMORY[0x1E0DEA968], v8, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1D5E82ECC((uint64_t)a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for OfflineReadinessSection);
    v15 = sub_1D6E1C64C();
    v16 = sub_1D6E27374();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v27[0] = v18;
      *(_DWORD *)v17 = 136446210;
      v25[1] = v17 + 4;
      v19 = *v7;
      v20 = v7[1];
      swift_bridgeObjectRetain();
      v27[3] = sub_1D5F69694(v19, v20, v27);
      sub_1D6E27C44();
      swift_bridgeObjectRelease();
      sub_1D5E8D20C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for OfflineReadinessSection);
      _os_log_impl(&dword_1D5E69000, v15, v16, "Offline Readiness failed to lookup group for section, id=%{public}s", v17, 0xCu);
      v21 = 1;
      swift_arrayDestroy();
      MEMORY[0x1D82918CC](v18, -1, -1);
      MEMORY[0x1D82918CC](v17, -1, -1);

    }
    else
    {

      sub_1D5E8D20C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for OfflineReadinessSection);
      v21 = 1;
    }
    v23 = v26;
  }
  else
  {
    v22 = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v26, v12, v8);
    v21 = 0;
    v23 = v22;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v23, v21, 1, v8);
}

uint64_t *sub_1D68B2D80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 120));
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 128);
  v3 = sub_1D6E1C664();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t sub_1D68B2DF8()
{
  return sub_1D68B3F68((void (*)(void))sub_1D68B2D80);
}

uint64_t type metadata accessor for OfflineReadinessFeedAdopter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OfflineReadinessFeedAdopter);
}

uint64_t sub_1D68B2E10()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for OfflineReadinessSection();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = sub_1D6E1C664();
        if (v4 <= 0x3F)
          return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1D68B2EE0()
{
  return sub_1D68B1800();
}

uint64_t sub_1D68B2F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_1D6E15EF0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6E15EE4();
  v4 = sub_1D6E15ED8();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRetain_n();
  v7 = sub_1D6E1C64C();
  v8 = sub_1D6E27374();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v18 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    v17 = sub_1D5F69694(v4, v6, &v18);
    sub_1D6E27C44();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D5E69000, v7, v8, "Offline Readiness will unbox cursor before committing to database, id=%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v10, -1, -1);
    MEMORY[0x1D82918CC](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_getAssociatedConformanceWitness();
  sub_1D6E23A2C();
  sub_1D6E1AE1C();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = v6;
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1D6E1AB4C();
  type metadata accessor for OfflineFeedManifest(0);
  sub_1D6E1AC30();
  swift_release();
  swift_release();

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v4;
  *(_QWORD *)(v13 + 24) = v6;
  v14 = (void *)sub_1D6E1AB4C();
  v15 = sub_1D6E1AC6C();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_1D68B31D8()
{
  swift_getAssociatedConformanceWitness();
  return sub_1D6E22460();
}

uint64_t sub_1D68B3238(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  CFTimeInterval v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  os_log_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  CFTimeInterval *v48;
  uint64_t v49;
  void *v50;
  uint64_t v52;
  os_log_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t AssociatedTypeWitness;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[6];

  v66 = a4;
  v57 = a3;
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(*(_QWORD *)a2 + 104);
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  v70 = v6;
  v71 = v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v61 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v58 = (char *)&v52 - v10;
  v11 = *(_QWORD *)(v5 + 112);
  v68 = *(_QWORD *)(v5 + 96);
  v69 = v11;
  v12 = swift_getAssociatedTypeWitness();
  v64 = *(_QWORD *)(v12 - 8);
  v65 = v12;
  MEMORY[0x1E0C80A78](v12);
  v59 = (char *)&v52 - v13;
  v62 = AssociatedConformanceWitness;
  v14 = sub_1D6E21B84();
  v60 = sub_1D6E27C38();
  v15 = *(_QWORD *)(v60 - 8);
  v16 = MEMORY[0x1E0C80A78](v60);
  v18 = (char *)&v52 - v17;
  v19 = *(_QWORD *)(v14 - 8);
  v20 = MEMORY[0x1E0C80A78](v16);
  v67 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v52 - v22;
  v74[0] = sub_1D6E239F0();
  v24 = sub_1D6E26EDC();
  MEMORY[0x1D82917D0](MEMORY[0x1E0DEAF38], v24);
  v25 = v72;
  sub_1D6E26C9C();
  swift_bridgeObjectRelease();
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v72 = v14;
  if (v26(v18, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v60);
    v74[0] = v8;
    v74[1] = v71;
    v74[2] = v68;
    v74[3] = v70;
    v74[4] = v69;
    type metadata accessor for OfflineReadinessFeedMicroAdopter.Errors();
  }
  v54 = v8;
  v27 = v72;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v23, v18, v72);
  v28 = CACurrentMediaTime();
  v60 = a2;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v67, v23, v27);
  v29 = v66;
  swift_bridgeObjectRetain_n();
  v30 = sub_1D6E1C64C();
  v31 = sub_1D6E27374();
  v32 = os_log_type_enabled(v30, v31);
  v56 = v23;
  v55 = v25;
  if (v32)
  {
    v33 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v74[0] = v34;
    *(_DWORD *)v33 = 136446466;
    v53 = v30;
    swift_bridgeObjectRetain();
    v73 = sub_1D5F69694(v57, v29, v74);
    sub_1D6E27C44();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 12) = 2082;
    v35 = v31;
    v36 = v72;
    v37 = v67;
    v38 = sub_1D6E21B60();
    v73 = sub_1D5F69694(v38, v39, v74);
    sub_1D6E27C44();
    swift_bridgeObjectRelease();
    v40 = *(void (**)(char *, uint64_t))(v19 + 8);
    v40(v37, v36);
    v41 = v53;
    _os_log_impl(&dword_1D5E69000, v53, v35, "Offline Readiness will commit to database, id=%{public}s, group=%{public}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v34, -1, -1);
    MEMORY[0x1D82918CC](v33, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    v40 = *(void (**)(char *, uint64_t))(v19 + 8);
    v40(v67, v72);
  }
  v43 = v59;
  v42 = v60;
  v44 = v58;
  LOBYTE(v74[0]) = 1;
  (*(void (**)(uint64_t *, uint64_t))(v69 + 24))(v74, v68);
  v45 = v56;
  sub_1D6E21B78();
  sub_1D6E2243C();
  v46 = v42;
  v47 = v55;
  sub_1D6E21DC4();
  if (v47)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v44, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v44, AssociatedTypeWitness);
    swift_release();
    v48 = (CFTimeInterval *)swift_allocObject();
    v49 = v57;
    *((_QWORD *)v48 + 2) = v42;
    *((_QWORD *)v48 + 3) = v49;
    *((_QWORD *)v48 + 4) = v66;
    v48[5] = v28;
    swift_bridgeObjectRetain();
    swift_retain();
    v50 = (void *)sub_1D6E1AB4C();
    type metadata accessor for OfflineFeedManifest(0);
    v46 = sub_1D6E1AC18();
    swift_release();
    swift_release();

  }
  (*(void (**)(char *, uint64_t))(v64 + 8))(v43, v65);
  v40(v45, v72);
  return v46;
}

uint64_t sub_1D68B38DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;

  swift_getAssociatedConformanceWitness();
  sub_1D6E21B84();
  if (sub_1D6E21B60() == *(_QWORD *)(a2 + qword_1EFFF4BE8) && v3 == *(_QWORD *)(a2 + qword_1EFFF4BE8 + 8))
    v5 = 1;
  else
    v5 = sub_1D6E282C8();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

id sub_1D68B3988(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  id result;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v8 = type metadata accessor for OfflineFeedManifest(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain_n();
  v11 = sub_1D6E1C64C();
  v12 = sub_1D6E27374();
  if (!os_log_type_enabled(v11, v12))
  {
    swift_bridgeObjectRelease_n();

    goto LABEL_8;
  }
  v25 = v10;
  v26 = v4;
  v13 = swift_slowAlloc();
  v24 = swift_slowAlloc();
  v28 = v24;
  *(_DWORD *)v13 = 136446722;
  swift_bridgeObjectRetain();
  v27 = sub_1D5F69694(a3, a4, &v28);
  sub_1D6E27C44();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v13 + 12) = 2082;
  qos_class_self();
  result = (id)FCStringFromQoSClass();
  if (result)
  {
    v15 = result;
    v16 = sub_1D6E26978();
    v18 = v17;

    v27 = sub_1D5F69694(v16, v18, &v28);
    sub_1D6E27C44();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 22) = 2050;
    result = (id)sub_1D6E26FE4();
    if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) != 0)
    {
      if (v19 > -9.22337204e18)
      {
        if (v19 < 9.22337204e18)
        {
          v27 = (uint64_t)v19;
          sub_1D6E27C44();
          _os_log_impl(&dword_1D5E69000, v11, v12, "Offline Readiness finished committing to database, id=%{public}s, qos=%{public}s, time=%{public}lldms", (uint8_t *)v13, 0x20u);
          v20 = v24;
          swift_arrayDestroy();
          MEMORY[0x1D82918CC](v20, -1, -1);
          MEMORY[0x1D82918CC](v13, -1, -1);

          v10 = v25;
LABEL_8:
          v21 = a2 + qword_1EFFF4BE8;
          v22 = type metadata accessor for OfflineReadinessSection();
          sub_1D5E82ECC(v21 + *(int *)(v22 + 20), (uint64_t)v10, type metadata accessor for OfflineFeedManifest);
          sub_1D5E847C4(0, qword_1F00076A0, type metadata accessor for OfflineFeedManifest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
          swift_allocObject();
          return (id)sub_1D6E1AC90();
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1D68B3C88(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRetain();
  v7 = a1;
  swift_bridgeObjectRetain();
  v8 = a1;
  v9 = sub_1D6E1C64C();
  v10 = sub_1D6E27374();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v13 = v12;
    *(_DWORD *)v11 = 136446466;
    swift_bridgeObjectRetain();
    sub_1D5F69694(a3, a4, &v13);
    sub_1D6E27C44();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2082;
    sub_1D5E7809C(0, (unint64_t *)&qword_1ED5F4ED0);
    sub_1D6E27F98();
    sub_1D5F69694(0, 0xE000000000000000, &v13);
    sub_1D6E27C44();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D5E69000, v9, v10, "Offline Readiness failed to commit to database, id=%{public}s, error=%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D82918CC](v12, -1, -1);
    MEMORY[0x1D82918CC](v11, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t *sub_1D68B3EB8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  swift_release();
  sub_1D5E8D20C((uint64_t)v0 + qword_1EFFF4BE8, (uint64_t (*)(_QWORD))type metadata accessor for OfflineReadinessSection);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 96) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 136));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 144));
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 152);
  v3 = sub_1D6E1C664();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t sub_1D68B3F5C()
{
  return sub_1D68B3F68((void (*)(void))sub_1D68B3EB8);
}

uint64_t sub_1D68B3F68(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

void type metadata accessor for OfflineReadinessFeedMicroAdopter()
{
  JUMPOUT(0x1D8291734);
}

uint64_t sub_1D68B3F94()
{
  return sub_1D68B2F00();
}

uint64_t sub_1D68B3FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1D6E27668();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D6E27650();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1D6E216B0();
  MEMORY[0x1E0C80A78](v6);
  v8[0] = sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F43C0);
  sub_1D6E21680();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1D5E6D8C0((unint64_t *)&unk_1ED5F43B0, v5, MEMORY[0x1E0DEF828]);
  sub_1D5E847C4(0, (unint64_t *)&unk_1ED5F40F0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D5ECD014((unint64_t *)&qword_1ED5F4100, (unint64_t *)&unk_1ED5F40F0, v5);
  sub_1D6E27D88();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1D6E27698();
  qword_1ED60B3C0 = result;
  return result;
}

void *sub_1D68B4194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  unint64_t v8;
  void *v9;
  void *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  char **v29;
  id v30;
  char isUniquelyReferenced_nonNull;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;

  v1 = v0;
  v2 = sub_1D6E216EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + 48);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = v6;
  v8 = sub_1D6E21710();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) == 0)
    goto LABEL_64;
  v9 = *(void **)(v1 + 56);
  if (v9)
  {
    v10 = *(void **)(v1 + 64);
    swift_beginAccess();
    v11 = *(_QWORD *)(v1 + 72);
    sub_1D68B61A4(v9);
    swift_bridgeObjectRetain();
    v12 = sub_1D68AE96C((uint64_t)v9, v11, (uint64_t)&qword_1ED5F4220);
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0 && (swift_retain(), sub_1D6E1AB70(), swift_release(), v54 != 1))
    {

      swift_unknownObjectRelease();
    }
    else
    {
      if (v10)
      {
        objc_msgSend(v10, sel_cancel);
        swift_unknownObjectRelease();
      }

    }
  }
  swift_beginAccess();
  v8 = *(_QWORD *)(v1 + 72);
  v3 = v8 >> 62;
  if (v8 >> 62)
  {
LABEL_65:
    swift_bridgeObjectRetain();
    v13 = sub_1D6E28040();
    result = (void *)swift_bridgeObjectRelease();
    if (v13 < 0)
    {
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    swift_bridgeObjectRetain();
    v49 = sub_1D6E28040();
    result = (void *)swift_bridgeObjectRelease();
    if (v49 < 0)
    {
LABEL_71:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    v50 = sub_1D6E28040();
    result = (void *)swift_bridgeObjectRelease();
    if (v50 < v13)
    {
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
  }
  else
  {
    v13 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v8 & 0xC000000000000001) != 0 && v13)
  {
    sub_1D5E6F04C(0, (unint64_t *)&qword_1ED5F4220);
    v14 = 0;
    do
    {
      v15 = v14 + 1;
      sub_1D6E27ED8();
      v14 = v15;
    }
    while (v13 != v15);
  }
  if (v3)
  {
    swift_bridgeObjectRetain();
    v16 = sub_1D6E2804C();
    v17 = v19;
    v18 = v20;
    v22 = v21;
    swift_bridgeObjectRelease();
    v13 = v22 >> 1;
  }
  else
  {
    v16 = v8 & 0xFFFFFFFFFFFFFF8;
    v17 = (v8 & 0xFFFFFFFFFFFFFF8) + 32;
    swift_bridgeObjectRetain();
    v18 = 0;
  }
  result = (void *)swift_endAccess();
  v24 = MEMORY[0x1E0DEE9D8];
  v3 = MEMORY[0x1E0DEE9D8] + 32;
  v54 = MEMORY[0x1E0DEE9D8];
  v55 = MEMORY[0x1E0DEE9D8] + 32;
  v56 = xmmword_1D6E3C3C0;
  v25 = v13 - v18;
  v51 = v16;
  v52 = (_QWORD *)v1;
  if (v13 != v18)
  {
    if (v13 > v18)
    {
      v26 = 0;
      v3 = MEMORY[0x1E0DEE9D8] + 32;
      v27 = 1;
      v29 = &selRef_didPullToRefreshWithSender_;
      v1 = v17 + 8 * v18;
      while (1)
      {
        v8 = (unint64_t)*(id *)v1;
        v30 = objc_msgSend((id)v8, v29[213], v51);
        swift_unknownObjectRelease();
        if (v30 || (objc_msgSend((id)v8, sel_isDownloadFailureRecoverable) & 1) == 0)
        {

        }
        else
        {
          if ((v27 & 1) == 0
            || (isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull(),
                v54 = v24,
                (isUniquelyReferenced_nonNull & 1) == 0))
          {
            if (__OFSUB__(v27 >> 1, v26))
              goto LABEL_59;
            sub_1D68B60FC((v27 >> 1) - v26);
          }
          v27 = *((_QWORD *)&v56 + 1);
          v3 = *((_QWORD *)&v56 + 1) >> 1;
          v53 = v56;
          v32 = (*((_QWORD *)&v56 + 1) >> 1) - v56;
          v33 = __OFSUB__(*((_QWORD *)&v56 + 1) >> 1, (_QWORD)v56);
          if (__OFSUB__(*((_QWORD *)&v56 + 1) >> 1, (_QWORD)v56))
            goto LABEL_57;
          v34 = (*((_QWORD *)&v56 + 1) >> 1) - v56;
          if ((BYTE8(v56) & 1) != 0)
          {
            v35 = v55;
            sub_1D6E282F8();
            swift_unknownObjectRetain();
            v36 = swift_dynamicCastClass();
            if (!v36)
            {
              swift_unknownObjectRelease();
              v36 = MEMORY[0x1E0DEE9D8];
            }
            v37 = *(_QWORD *)(v36 + 16);
            if (v35 + 8 * v53 + 8 * v32 == v36 + 8 * v37 + 32)
            {
              v38 = *(_QWORD *)(v36 + 24);
              swift_release();
              v39 = (v38 >> 1) - v37;
              v40 = __OFADD__(v32, v39);
              v34 = v32 + v39;
              if (v40)
                goto LABEL_63;
            }
            else
            {
              swift_release();
              v34 = v32;
            }
          }
          v41 = v32 + 1;
          if (v34 < v32 + 1)
          {
            sub_1D68B60FC(v32);
            v27 = *((_QWORD *)&v56 + 1);
            v3 = *((_QWORD *)&v56 + 1) >> 1;
            v53 = v56;
            v42 = (*((_QWORD *)&v56 + 1) >> 1) - v56;
            if (__OFSUB__(*((_QWORD *)&v56 + 1) >> 1, (_QWORD)v56))
            {
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
          }
          else
          {
            v42 = v32;
            if (v33)
              goto LABEL_56;
          }
          v43 = v41 - v42;
          if (__OFSUB__(v41, v42))
            goto LABEL_58;
          v24 = v54;
          if (v43)
          {
            sub_1D6E282F8();
            swift_unknownObjectRetain();
            v44 = swift_dynamicCastClass();
            if (!v44)
            {
              swift_unknownObjectRelease();
              v44 = MEMORY[0x1E0DEE9D8];
            }
            v45 = *(_QWORD *)(v44 + 16);
            v40 = __OFADD__(v45, v43);
            v46 = v45 + v43;
            if (v40)
              goto LABEL_60;
            *(_QWORD *)(v44 + 16) = v46;
            swift_release();
            v47 = v3 + v43;
            if (__OFADD__(v3, v43))
              goto LABEL_61;
            if (v47 < 0)
              goto LABEL_62;
            v27 = v27 & 1 | (2 * v47);
            *((_QWORD *)&v56 + 1) = v27;
          }
          v3 = v55;
          v26 = v53;
          *(_QWORD *)(v55 + 8 * v53 + 8 * v32) = v8;
          v29 = &selRef_didPullToRefreshWithSender_;
        }
        v1 += 8;
        if (!--v25)
          goto LABEL_20;
      }
    }
    goto LABEL_69;
  }
  v26 = 0;
  v27 = 1;
LABEL_20:
  swift_unknownObjectRelease();
  v28 = v52;
  v52[2] = v24;
  v28[3] = v3;
  v28[4] = v26;
  v28[5] = v27;
  swift_unknownObjectRelease();
  return sub_1D68B49D8();
}

uint64_t sub_1D68B46BC()
{
  return sub_1D68B46D0((uint64_t)sub_1D68B5688, (uint64_t)&block_descriptor_125);
}

uint64_t sub_1D68B46D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v5 = sub_1D6E21668();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v17 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D6E216B0();
  v9 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v2 + 48);
  v12 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = a1;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5EB52E8;
  aBlock[3] = a2;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1D6E2168C();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1D5E6D8C0((unint64_t *)&qword_1ED5F35E0, v6, MEMORY[0x1E0DEF510]);
  sub_1D5E847C4(0, (unint64_t *)&qword_1ED5F3FD0, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D5ECD014((unint64_t *)&qword_1ED5F3FE0, (unint64_t *)&qword_1ED5F3FD0, v6);
  sub_1D6E27D88();
  MEMORY[0x1D828FEBC](0, v11, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_1D68B48DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = MEMORY[0x1E0DEE9D8];
  v4 = MEMORY[0x1E0DEE9D8] + 32;
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 24) = v4;
  *(_OWORD *)(v1 + 32) = xmmword_1D6E3C3C0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = v3;
  sub_1D5E76DF0(0, (unint64_t *)&unk_1ED60C2E0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4AE8]);
  swift_allocObject();
  *(_QWORD *)(v1 + 80) = sub_1D6E1AB58();
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_QWORD *)(v1 + 48) = a1;
  return v1;
}

uint64_t sub_1D68B4984()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D68B4194();
    return swift_release();
  }
  return result;
}

void *sub_1D68B49D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  char v8;
  void *result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1D6E216EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (void *)v1[6];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = v6;
  v8 = sub_1D6E21710();
  result = (void *)(*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) != 0)
  {
    if (!v1[7])
    {
      swift_retain();
      sub_1D6E1AB70();
      result = (void *)swift_release();
      if ((aBlock[0] & 1) == 0)
      {
        result = sub_1D68B4B9C();
        if (result)
        {
          v10 = result;
          v11 = swift_allocObject();
          swift_weakInit();
          v12 = swift_allocObject();
          *(_QWORD *)(v12 + 16) = v11;
          *(_QWORD *)(v12 + 24) = v10;
          aBlock[4] = sub_1D68B65FC;
          aBlock[5] = v12;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1D5EB52E8;
          aBlock[3] = &block_descriptor_8;
          v13 = _Block_copy(aBlock);
          v14 = v10;
          swift_release();
          v15 = objc_msgSend(v14, sel_downloadIfNeededWithCompletionQueue_completion_, v7, v13);
          _Block_release(v13);
          v16 = (void *)v1[7];
          v1[7] = v10;
          v1[8] = v15;
          return sub_1D68B6604(v16);
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1D68B4B9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *result;

  v1 = v0[2];
  v2 = v0[3] >> 1;
  if (v1 == v2)
    return 0;
  if (v1 >= v2)
  {
    __break(1u);
    return result;
  }
  v3 = *(void **)(v0[1] + 8 * v1);
  v0[2] = v1 + 1;
  v4 = v3;
  return v3;
}

uint64_t sub_1D68B4BEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D68B4C04((uint64_t (*)(_QWORD))MEMORY[0x1E0D611B0], a1);
}

uint64_t sub_1D68B4BF8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D68B4C04((uint64_t (*)(_QWORD))MEMORY[0x1E0D611D0], a1);
}

uint64_t sub_1D68B4C04@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78]();
  v8 = (char *)&v13 - v7;
  v10 = v2[2];
  v9 = v2[3];
  if (v10 == v9 >> 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  if (v10 < (uint64_t)(v9 >> 1))
  {
    v12 = *v2;
    v11 = v2[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v11 + *(_QWORD *)(v5 + 72) * v10, v4);
    *v2 = v12;
    v2[1] = v11;
    v2[2] = v10 + 1;
    v2[3] = v9;
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, v4);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D68B4D1C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  void (*v8)(uint64_t);
  uint64_t v9;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = (_QWORD *)result;
    v5 = *(void **)(result + 56);
    v4[7] = 0;
    v4[8] = 0;
    v6 = (uint64_t)sub_1D68B6604(v5);
    v7 = (void (*)(uint64_t))v4[11];
    if (v7)
    {
      swift_retain();
      v7(a2);
      v6 = sub_1D5FAE038((uint64_t)v7);
    }
    if (v4[4] == v4[5] >> 1)
    {
      v8 = (void (*)(uint64_t))v4[13];
      if (v8)
      {
        v9 = swift_retain();
        v8(v9);
        v6 = sub_1D5FAE038((uint64_t)v8);
      }
    }
    sub_1D68B49D8(v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D68B4DEC()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  sub_1D68B6604(*(void **)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D5FAE038(*(_QWORD *)(v0 + 88));
  sub_1D5FAE038(*(_QWORD *)(v0 + 104));
  return v0;
}

uint64_t sub_1D68B4E38()
{
  sub_1D68B4DEC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetDownloadQueue()
{
  return objc_opt_self();
}

uint64_t sub_1D68B4E74()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D68B4EE0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Throttler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Throttler);
}

_QWORD *sub_1D68B4F18(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D6E15ECC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = (int *)type metadata accessor for OfflineFeedManifest(0);
    v12(&v9[v13[5]], &v10[v13[5]], v11);
    *(_QWORD *)&v9[v13[6]] = *(_QWORD *)&v10[v13[6]];
    *(_QWORD *)&v9[v13[7]] = *(_QWORD *)&v10[v13[7]];
    *(_QWORD *)&v9[v13[8]] = *(_QWORD *)&v10[v13[8]];
    *(_QWORD *)&v9[v13[9]] = *(_QWORD *)&v10[v13[9]];
    *(_QWORD *)&v9[v13[10]] = *(_QWORD *)&v10[v13[10]];
    *(_QWORD *)&v9[v13[11]] = *(_QWORD *)&v10[v13[11]];
    *(_QWORD *)&v9[v13[12]] = *(_QWORD *)&v10[v13[12]];
    v14 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    v15 = *(void **)((char *)a2 + v14);
    *(_QWORD *)((char *)v4 + v14) = v15;
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v15;
  }
  return v4;
}

_QWORD *sub_1D68B50AC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D6E15ECC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = (int *)type metadata accessor for OfflineFeedManifest(0);
  v10(&v7[v11[5]], &v8[v11[5]], v9);
  *(_QWORD *)&v7[v11[6]] = *(_QWORD *)&v8[v11[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v11[7]] = *(_QWORD *)&v8[v11[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v11[8]] = *(_QWORD *)&v8[v11[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v11[9]] = *(_QWORD *)&v8[v11[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v11[10]] = *(_QWORD *)&v8[v11[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v11[11]] = *(_QWORD *)&v8[v11[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v11[12]] = *(_QWORD *)&v8[v11[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = *(void **)((char *)a2 + v12);
  v14 = *(void **)((char *)a1 + v12);
  *(_QWORD *)((char *)a1 + v12) = v13;
  v15 = v13;

  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

